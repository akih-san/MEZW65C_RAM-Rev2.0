

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 16 20:44:15 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F47Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK7,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK8,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	idataBANK9,global,class=CODE,space=0,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    66                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1,group=3
    77                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1,group=3
    78                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,group=3
    79                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1,group=3
    80                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1,group=3
   107                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1,group=3
   109                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=3
   120                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1,group=3
   147                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1,group=1
   148                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1,group=1
   150                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1,group=1
   151                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1,group=1
   152                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1,group=1
   153                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1,group=3
   154                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1,group=3
   155                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1,group=3
   156                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1,group=3
   157                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1,group=3
   158                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1,group=2
   159                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1,group=2
   160                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1,group=2
   161                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1,group=2
   162                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1,group=2
   163                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1,group=2
   165                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1,group=1
   167                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1,group=3
   169                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1,group=3
   170                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1,group=3
   172                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1,group=2
   173                           	psect	text149,global,reloc=2,class=CODE,space=0,delta=1,group=2
   174                           	psect	text150,global,reloc=2,class=CODE,space=0,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,space=0,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,space=0,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,space=0,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,space=0,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,space=0,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,space=0,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,space=0,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,space=0,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,space=0,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,space=0,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,space=0,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,space=0,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,space=0,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,space=0,delta=1,group=2
   192                           	psect	text168,global,reloc=2,class=CODE,space=0,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,space=0,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,space=0,delta=1,group=2
   195                           	psect	text171,global,reloc=4,class=CODE,space=0,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,space=0,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,space=0,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   202   000000                     
   203                           ; Generated 23/02/2024 GMT
   204                           ; 
   205                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   206                           ; All rights reserved.
   207                           ; 
   208                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   209                           ; 
   210                           ; Redistribution and use in source and binary forms, with or without modification, are
   211                           ; permitted provided that the following conditions are met:
   212                           ; 
   213                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   214                           ;        conditions and the following disclaimer.
   215                           ; 
   216                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   217                           ;        of conditions and the following disclaimer in the documentation and/or other
   218                           ;        materials provided with the distribution. Publication is not required when
   219                           ;        this file is used in an embedded application.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F47Q83 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237   0004E0                     bsr             equ	1248
   238   0004E9                     fsr0            equ	1257
   239   0004EA                     fsr0h           equ	1258
   240   0004E9                     fsr0l           equ	1257
   241   0004E1                     fsr1            equ	1249
   242   0004E2                     fsr1h           equ	1250
   243   0004E1                     fsr1l           equ	1249
   244   0004D9                     fsr2            equ	1241
   245   0004DA                     fsr2h           equ	1242
   246   0004D9                     fsr2l           equ	1241
   247   0004EF                     indf0           equ	1263
   248   0004E7                     indf1           equ	1255
   249   0004DF                     indf2           equ	1247
   250   0004D6                     intcon          equ	1238
   251   000041                     nvmcon          equ	65
   252   0004F9                     pcl             equ	1273
   253   0004FA                     pclath          equ	1274
   254   0004FB                     pclatu          equ	1275
   255   0004EB                     plusw0          equ	1259
   256   0004E3                     plusw1          equ	1251
   257   0004DB                     plusw2          equ	1243
   258   0004ED                     postdec0        equ	1261
   259   0004E5                     postdec1        equ	1253
   260   0004DD                     postdec2        equ	1245
   261   0004EE                     postinc0        equ	1262
   262   0004E6                     postinc1        equ	1254
   263   0004DE                     postinc2        equ	1246
   264   0004EC                     preinc0         equ	1260
   265   0004E4                     preinc1         equ	1252
   266   0004DC                     preinc2         equ	1244
   267   0004F3                     prod            equ	1267
   268   0004F4                     prodh           equ	1268
   269   0004F3                     prodl           equ	1267
   270   0004D8                     status          equ	1240
   271   0004F5                     tablat          equ	1269
   272   0004F6                     tblptr          equ	1270
   273   0004F7                     tblptrh         equ	1271
   274   0004F6                     tblptrl         equ	1270
   275   0004F8                     tblptru         equ	1272
   276   0004FD                     tosl            equ	1277
   277   0004E8                     wreg            equ	1256
   278   000038                     BOOTREG         equ	56	;# 
   279   000039                     CLKRCON         equ	57	;# 
   280   00003A                     CLKRCLK         equ	58	;# 
   281   000040                     NVMCON0         equ	64	;# 
   282   000041                     NVMCON1         equ	65	;# 
   283   000042                     NVMLOCK         equ	66	;# 
   284   000043                     NVMADR          equ	67	;# 
   285   000043                     NVMADRL         equ	67	;# 
   286   000044                     NVMADRH         equ	68	;# 
   287   000045                     NVMADRU         equ	69	;# 
   288   000046                     NVMDAT          equ	70	;# 
   289   000046                     NVMDATL         equ	70	;# 
   290   000047                     NVMDATH         equ	71	;# 
   291   000048                     VREGCON         equ	72	;# 
   292   000049                     BORCON          equ	73	;# 
   293   00004A                     HLVDCON0        equ	74	;# 
   294   00004B                     HLVDCON1        equ	75	;# 
   295   00004C                     ZCDCON          equ	76	;# 
   296   000060                     PMD0            equ	96	;# 
   297   000061                     PMD1            equ	97	;# 
   298   000062                     PMD2            equ	98	;# 
   299   000063                     PMD3            equ	99	;# 
   300   000064                     PMD4            equ	100	;# 
   301   000065                     PMD5            equ	101	;# 
   302   000066                     PMD6            equ	102	;# 
   303   000067                     PMD7            equ	103	;# 
   304   000068                     PMD8            equ	104	;# 
   305   00006A                     MD1CON0         equ	106	;# 
   306   00006B                     MD1CON1         equ	107	;# 
   307   00006C                     MD1SRC          equ	108	;# 
   308   00006D                     MD1CARL         equ	109	;# 
   309   00006E                     MD1CARH         equ	110	;# 
   310   00006F                     CMOUT           equ	111	;# 
   311   000070                     CM1CON0         equ	112	;# 
   312   000071                     CM1CON1         equ	113	;# 
   313   000072                     CM1NCH          equ	114	;# 
   314   000073                     CM1PCH          equ	115	;# 
   315   000074                     CM2CON0         equ	116	;# 
   316   000075                     CM2CON1         equ	117	;# 
   317   000076                     CM2NCH          equ	118	;# 
   318   000077                     CM2PCH          equ	119	;# 
   319   000078                     WDTCON0         equ	120	;# 
   320   000079                     WDTCON1         equ	121	;# 
   321   00007A                     WDTPSL          equ	122	;# 
   322   00007B                     WDTPSH          equ	123	;# 
   323   00007C                     WDTTMR          equ	124	;# 
   324   00007D                     DAC1DAT         equ	125	;# 
   325   00007D                     DAC1DATL        equ	125	;# 
   326   00007F                     DAC1CON         equ	127	;# 
   327   000080                     SPI1RXB         equ	128	;# 
   328   000081                     SPI1TXB         equ	129	;# 
   329   000082                     SPI1TCNT        equ	130	;# 
   330   000082                     SPI1TCNTL       equ	130	;# 
   331   000083                     SPI1TCNTH       equ	131	;# 
   332   000084                     SPI1CON0        equ	132	;# 
   333   000085                     SPI1CON1        equ	133	;# 
   334   000086                     SPI1CON2        equ	134	;# 
   335   000087                     SPI1STATUS      equ	135	;# 
   336   000088                     SPI1TWIDTH      equ	136	;# 
   337   000089                     SPI1BAUD        equ	137	;# 
   338   00008A                     SPI1INTF        equ	138	;# 
   339   00008B                     SPI1INTE        equ	139	;# 
   340   00008C                     SPI1CLK         equ	140	;# 
   341   00008D                     SPI2RXB         equ	141	;# 
   342   00008E                     SPI2TXB         equ	142	;# 
   343   00008F                     SPI2TCNT        equ	143	;# 
   344   00008F                     SPI2TCNTL       equ	143	;# 
   345   000090                     SPI2TCNTH       equ	144	;# 
   346   000091                     SPI2CON0        equ	145	;# 
   347   000092                     SPI2CON1        equ	146	;# 
   348   000093                     SPI2CON2        equ	147	;# 
   349   000094                     SPI2STATUS      equ	148	;# 
   350   000095                     SPI2TWIDTH      equ	149	;# 
   351   000096                     SPI2BAUD        equ	150	;# 
   352   000097                     SPI2INTF        equ	151	;# 
   353   000098                     SPI2INTE        equ	152	;# 
   354   000099                     SPI2CLK         equ	153	;# 
   355   0000AC                     ACTCON          equ	172	;# 
   356   0000AD                     OSCCON1         equ	173	;# 
   357   0000AE                     OSCCON2         equ	174	;# 
   358   0000AF                     OSCCON3         equ	175	;# 
   359   0000B0                     OSCTUNE         equ	176	;# 
   360   0000B1                     OSCFRQ          equ	177	;# 
   361   0000B1                     OSCFREQ         equ	177	;# 
   362   0000B2                     OSCSTAT         equ	178	;# 
   363   0000B2                     OSCSTAT1        equ	178	;# 
   364   0000B3                     OSCEN           equ	179	;# 
   365   0000B4                     PRLOCK          equ	180	;# 
   366   0000B5                     SCANPR          equ	181	;# 
   367   0000B6                     DMA1PR          equ	182	;# 
   368   0000B7                     DMA2PR          equ	183	;# 
   369   0000B8                     DMA3PR          equ	184	;# 
   370   0000B9                     DMA4PR          equ	185	;# 
   371   0000BA                     DMA5PR          equ	186	;# 
   372   0000BB                     DMA6PR          equ	187	;# 
   373   0000BC                     DMA7PR          equ	188	;# 
   374   0000BD                     DMA8PR          equ	189	;# 
   375   0000BE                     MAINPR          equ	190	;# 
   376   0000BF                     ISRPR           equ	191	;# 
   377   0000D4                     CLCDATA         equ	212	;# 
   378   0000D5                     CLCSELECT       equ	213	;# 
   379   0000D6                     CLCnCON         equ	214	;# 
   380   0000D7                     CLCnPOL         equ	215	;# 
   381   0000D8                     CLCnSEL0        equ	216	;# 
   382   0000D9                     CLCnSEL1        equ	217	;# 
   383   0000DA                     CLCnSEL2        equ	218	;# 
   384   0000DB                     CLCnSEL3        equ	219	;# 
   385   0000DC                     CLCnGLS0        equ	220	;# 
   386   0000DD                     CLCnGLS1        equ	221	;# 
   387   0000DE                     CLCnGLS2        equ	222	;# 
   388   0000DF                     CLCnGLS3        equ	223	;# 
   389   0000E8                     DMASELECT       equ	232	;# 
   390   0000E9                     DMAnBUF         equ	233	;# 
   391   0000EA                     DMAnDCNT        equ	234	;# 
   392   0000EA                     DMAnDCNTL       equ	234	;# 
   393   0000EB                     DMAnDCNTH       equ	235	;# 
   394   0000EC                     DMAnDPTR        equ	236	;# 
   395   0000EC                     DMAnDPTRL       equ	236	;# 
   396   0000ED                     DMAnDPTRH       equ	237	;# 
   397   0000EE                     DMAnDSZ         equ	238	;# 
   398   0000EE                     DMAnDSZL        equ	238	;# 
   399   0000EF                     DMAnDSZH        equ	239	;# 
   400   0000F0                     DMAnDSA         equ	240	;# 
   401   0000F0                     DMAnDSAL        equ	240	;# 
   402   0000F1                     DMAnDSAH        equ	241	;# 
   403   0000F2                     DMAnSCNT        equ	242	;# 
   404   0000F2                     DMAnSCNTL       equ	242	;# 
   405   0000F3                     DMAnSCNTH       equ	243	;# 
   406   0000F4                     DMAnSPTR        equ	244	;# 
   407   0000F4                     DMAnSPTRL       equ	244	;# 
   408   0000F5                     DMAnSPTRH       equ	245	;# 
   409   0000F6                     DMAnSPTRU       equ	246	;# 
   410   0000F7                     DMAnSSZ         equ	247	;# 
   411   0000F7                     DMAnSSZL        equ	247	;# 
   412   0000F8                     DMAnSSZH        equ	248	;# 
   413   0000F9                     DMAnSSA         equ	249	;# 
   414   0000F9                     DMAnSSAL        equ	249	;# 
   415   0000FA                     DMAnSSAH        equ	250	;# 
   416   0000FB                     DMAnSSAU        equ	251	;# 
   417   0000FC                     DMAnCON0        equ	252	;# 
   418   0000FD                     DMAnCON1        equ	253	;# 
   419   0000FE                     DMAnAIRQ        equ	254	;# 
   420   0000FF                     DMAnSIRQ        equ	255	;# 
   421   000100                     C1CONL          equ	256	;# 
   422   000101                     C1CONH          equ	257	;# 
   423   000102                     C1CONU          equ	258	;# 
   424   000103                     C1CONT          equ	259	;# 
   425   000104                     C1NBTCFGL       equ	260	;# 
   426   000105                     C1NBTCFGH       equ	261	;# 
   427   000106                     C1NBTCFGU       equ	262	;# 
   428   000107                     C1NBTCFGT       equ	263	;# 
   429   000108                     C1DBTCFGL       equ	264	;# 
   430   000109                     C1DBTCFGH       equ	265	;# 
   431   00010A                     C1DBTCFGU       equ	266	;# 
   432   00010B                     C1DBTCFGT       equ	267	;# 
   433   00010C                     C1TDCL          equ	268	;# 
   434   00010D                     C1TDCH          equ	269	;# 
   435   00010E                     C1TDCU          equ	270	;# 
   436   000110                     C1TBC           equ	272	;# 
   437   000110                     C1TBCL          equ	272	;# 
   438   000111                     C1TBCH          equ	273	;# 
   439   000112                     C1TBCU          equ	274	;# 
   440   000113                     C1TBCT          equ	275	;# 
   441   000114                     C1TSCONL        equ	276	;# 
   442   000115                     C1TSCONH        equ	277	;# 
   443   000116                     C1TSCONU        equ	278	;# 
   444   000117                     C1TSCONT        equ	279	;# 
   445   000118                     C1VECL          equ	280	;# 
   446   000119                     C1VECH          equ	281	;# 
   447   00011A                     C1VECU          equ	282	;# 
   448   00011B                     C1VECT          equ	283	;# 
   449   00011C                     C1INTL          equ	284	;# 
   450   00011D                     C1INTH          equ	285	;# 
   451   00011E                     C1INTU          equ	286	;# 
   452   00011F                     C1INTT          equ	287	;# 
   453   000120                     C1RXIF          equ	288	;# 
   454   000120                     C1RXIFL         equ	288	;# 
   455   000121                     C1RXIFH         equ	289	;# 
   456   000122                     C1RXIFU         equ	290	;# 
   457   000123                     C1RXIFT         equ	291	;# 
   458   000124                     C1TXIF          equ	292	;# 
   459   000124                     C1TXIFL         equ	292	;# 
   460   000125                     C1TXIFH         equ	293	;# 
   461   000126                     C1TXIFU         equ	294	;# 
   462   000127                     C1TXIFT         equ	295	;# 
   463   000128                     C1RXOVIF        equ	296	;# 
   464   000128                     C1RXOVIFL       equ	296	;# 
   465   000129                     C1RXOVIFH       equ	297	;# 
   466   00012A                     C1RXOVIFU       equ	298	;# 
   467   00012B                     C1RXOVIFT       equ	299	;# 
   468   00012C                     C1TXATIF        equ	300	;# 
   469   00012C                     C1TXATIFL       equ	300	;# 
   470   00012D                     C1TXATIFH       equ	301	;# 
   471   00012E                     C1TXATIFU       equ	302	;# 
   472   00012F                     C1TXATIFT       equ	303	;# 
   473   000130                     C1TXREQ         equ	304	;# 
   474   000130                     C1TXREQL        equ	304	;# 
   475   000131                     C1TXREQH        equ	305	;# 
   476   000132                     C1TXREQU        equ	306	;# 
   477   000133                     C1TXREQT        equ	307	;# 
   478   000134                     C1TRECL         equ	308	;# 
   479   000135                     C1TRECH         equ	309	;# 
   480   000136                     C1TRECU         equ	310	;# 
   481   000137                     C1TRECT         equ	311	;# 
   482   000138                     C1BDIAG0L       equ	312	;# 
   483   000139                     C1BDIAG0H       equ	313	;# 
   484   00013C                     C1BDIAG1L       equ	316	;# 
   485   00013D                     C1BDIAG1H       equ	317	;# 
   486   00013E                     C1BDIAG1U       equ	318	;# 
   487   00013F                     C1BDIAG1T       equ	319	;# 
   488   000140                     C1TEFCONL       equ	320	;# 
   489   000141                     C1TEFCONH       equ	321	;# 
   490   000142                     C1TEFCONU       equ	322	;# 
   491   000143                     C1TEFCONT       equ	323	;# 
   492   000144                     C1TEFSTAL       equ	324	;# 
   493   000145                     C1TEFSTAH       equ	325	;# 
   494   000146                     C1TEFSTAU       equ	326	;# 
   495   000147                     C1TEFSTAT       equ	327	;# 
   496   000148                     C1TEFUA         equ	328	;# 
   497   000148                     C1TEFUAL        equ	328	;# 
   498   000149                     C1TEFUAH        equ	329	;# 
   499   00014A                     C1TEFUAU        equ	330	;# 
   500   00014B                     C1TEFUAT        equ	331	;# 
   501   00014C                     C1FIFOBA        equ	332	;# 
   502   00014C                     C1FIFOBAL       equ	332	;# 
   503   00014D                     C1FIFOBAH       equ	333	;# 
   504   00014E                     C1FIFOBAU       equ	334	;# 
   505   00014F                     C1FIFOBAT       equ	335	;# 
   506   000150                     C1TXQCONL       equ	336	;# 
   507   000151                     C1TXQCONH       equ	337	;# 
   508   000152                     C1TXQCONU       equ	338	;# 
   509   000153                     C1TXQCONT       equ	339	;# 
   510   000154                     C1TXQSTAL       equ	340	;# 
   511   000155                     C1TXQSTAH       equ	341	;# 
   512   000156                     C1TXQSTAU       equ	342	;# 
   513   000157                     C1TXQSTAT       equ	343	;# 
   514   000158                     C1TXQUA         equ	344	;# 
   515   000158                     C1TXQUAL        equ	344	;# 
   516   000159                     C1TXQUAH        equ	345	;# 
   517   00015A                     C1TXQUAU        equ	346	;# 
   518   00015B                     C1TXQUAT        equ	347	;# 
   519   00015C                     C1FIFOCON1      equ	348	;# 
   520   00015C                     C1FIFOCON1L     equ	348	;# 
   521   00015D                     C1FIFOCON1H     equ	349	;# 
   522   00015E                     C1FIFOCON1U     equ	350	;# 
   523   00015F                     C1FIFOCON1T     equ	351	;# 
   524   000160                     C1FIFOSTA1      equ	352	;# 
   525   000160                     C1FIFOSTA1L     equ	352	;# 
   526   000161                     C1FIFOSTA1H     equ	353	;# 
   527   000162                     C1FIFOSTA1U     equ	354	;# 
   528   000163                     C1FIFOSTA1T     equ	355	;# 
   529   000164                     C1FIFOUA1       equ	356	;# 
   530   000164                     C1FIFOUA1L      equ	356	;# 
   531   000165                     C1FIFOUA1H      equ	357	;# 
   532   000166                     C1FIFOUA1U      equ	358	;# 
   533   000167                     C1FIFOUA1T      equ	359	;# 
   534   000168                     C1FIFOCON2      equ	360	;# 
   535   000168                     C1FIFOCON2L     equ	360	;# 
   536   000169                     C1FIFOCON2H     equ	361	;# 
   537   00016A                     C1FIFOCON2U     equ	362	;# 
   538   00016B                     C1FIFOCON2T     equ	363	;# 
   539   00016C                     C1FIFOSTA2      equ	364	;# 
   540   00016C                     C1FIFOSTA2L     equ	364	;# 
   541   00016D                     C1FIFOSTA2H     equ	365	;# 
   542   00016E                     C1FIFOSTA2U     equ	366	;# 
   543   00016F                     C1FIFOSTA2T     equ	367	;# 
   544   000170                     C1FIFOUA2       equ	368	;# 
   545   000170                     C1FIFOUA2L      equ	368	;# 
   546   000171                     C1FIFOUA2H      equ	369	;# 
   547   000172                     C1FIFOUA2U      equ	370	;# 
   548   000173                     C1FIFOUA2T      equ	371	;# 
   549   000174                     C1FIFOCON3      equ	372	;# 
   550   000174                     C1FIFOCON3L     equ	372	;# 
   551   000175                     C1FIFOCON3H     equ	373	;# 
   552   000176                     C1FIFOCON3U     equ	374	;# 
   553   000177                     C1FIFOCON3T     equ	375	;# 
   554   000178                     C1FIFOSTA3      equ	376	;# 
   555   000178                     C1FIFOSTA3L     equ	376	;# 
   556   000179                     C1FIFOSTA3H     equ	377	;# 
   557   00017A                     C1FIFOSTA3U     equ	378	;# 
   558   00017B                     C1FIFOSTA3T     equ	379	;# 
   559   00017C                     C1FIFOUA3       equ	380	;# 
   560   00017C                     C1FIFOUA3L      equ	380	;# 
   561   00017D                     C1FIFOUA3H      equ	381	;# 
   562   00017E                     C1FIFOUA3U      equ	382	;# 
   563   00017F                     C1FIFOUA3T      equ	383	;# 
   564   000180                     C1FLTCON0L      equ	384	;# 
   565   000181                     C1FLTCON0H      equ	385	;# 
   566   000182                     C1FLTCON0U      equ	386	;# 
   567   000183                     C1FLTCON0T      equ	387	;# 
   568   000184                     C1FLTCON1L      equ	388	;# 
   569   000185                     C1FLTCON1H      equ	389	;# 
   570   000186                     C1FLTCON1U      equ	390	;# 
   571   000187                     C1FLTCON1T      equ	391	;# 
   572   000188                     C1FLTCON2L      equ	392	;# 
   573   000189                     C1FLTCON2H      equ	393	;# 
   574   00018A                     C1FLTCON2U      equ	394	;# 
   575   00018B                     C1FLTCON2T      equ	395	;# 
   576   00018C                     C1FLTOBJ0       equ	396	;# 
   577   00018C                     C1FLTOBJ0L      equ	396	;# 
   578   00018D                     C1FLTOBJ0H      equ	397	;# 
   579   00018E                     C1FLTOBJ0U      equ	398	;# 
   580   00018F                     C1FLTOBJ0T      equ	399	;# 
   581   000190                     C1MASK0         equ	400	;# 
   582   000190                     C1MASK0L        equ	400	;# 
   583   000191                     C1MASK0H        equ	401	;# 
   584   000192                     C1MASK0U        equ	402	;# 
   585   000193                     C1MASK0T        equ	403	;# 
   586   000194                     C1FLTOBJ1       equ	404	;# 
   587   000194                     C1FLTOBJ1L      equ	404	;# 
   588   000195                     C1FLTOBJ1H      equ	405	;# 
   589   000196                     C1FLTOBJ1U      equ	406	;# 
   590   000197                     C1FLTOBJ1T      equ	407	;# 
   591   000198                     C1MASK1         equ	408	;# 
   592   000198                     C1MASK1L        equ	408	;# 
   593   000199                     C1MASK1H        equ	409	;# 
   594   00019A                     C1MASK1U        equ	410	;# 
   595   00019B                     C1MASK1T        equ	411	;# 
   596   00019C                     C1FLTOBJ2       equ	412	;# 
   597   00019C                     C1FLTOBJ2L      equ	412	;# 
   598   00019D                     C1FLTOBJ2H      equ	413	;# 
   599   00019E                     C1FLTOBJ2U      equ	414	;# 
   600   00019F                     C1FLTOBJ2T      equ	415	;# 
   601   0001A0                     C1MASK2         equ	416	;# 
   602   0001A0                     C1MASK2L        equ	416	;# 
   603   0001A1                     C1MASK2H        equ	417	;# 
   604   0001A2                     C1MASK2U        equ	418	;# 
   605   0001A3                     C1MASK2T        equ	419	;# 
   606   0001A4                     C1FLTOBJ3       equ	420	;# 
   607   0001A4                     C1FLTOBJ3L      equ	420	;# 
   608   0001A5                     C1FLTOBJ3H      equ	421	;# 
   609   0001A6                     C1FLTOBJ3U      equ	422	;# 
   610   0001A7                     C1FLTOBJ3T      equ	423	;# 
   611   0001A8                     C1MASK3         equ	424	;# 
   612   0001A8                     C1MASK3L        equ	424	;# 
   613   0001A9                     C1MASK3H        equ	425	;# 
   614   0001AA                     C1MASK3U        equ	426	;# 
   615   0001AB                     C1MASK3T        equ	427	;# 
   616   0001AC                     C1FLTOBJ4       equ	428	;# 
   617   0001AC                     C1FLTOBJ4L      equ	428	;# 
   618   0001AD                     C1FLTOBJ4H      equ	429	;# 
   619   0001AE                     C1FLTOBJ4U      equ	430	;# 
   620   0001AF                     C1FLTOBJ4T      equ	431	;# 
   621   0001B0                     C1MASK4         equ	432	;# 
   622   0001B0                     C1MASK4L        equ	432	;# 
   623   0001B1                     C1MASK4H        equ	433	;# 
   624   0001B2                     C1MASK4U        equ	434	;# 
   625   0001B3                     C1MASK4T        equ	435	;# 
   626   0001B4                     C1FLTOBJ5       equ	436	;# 
   627   0001B4                     C1FLTOBJ5L      equ	436	;# 
   628   0001B5                     C1FLTOBJ5H      equ	437	;# 
   629   0001B6                     C1FLTOBJ5U      equ	438	;# 
   630   0001B7                     C1FLTOBJ5T      equ	439	;# 
   631   0001B8                     C1MASK5         equ	440	;# 
   632   0001B8                     C1MASK5L        equ	440	;# 
   633   0001B9                     C1MASK5H        equ	441	;# 
   634   0001BA                     C1MASK5U        equ	442	;# 
   635   0001BB                     C1MASK5T        equ	443	;# 
   636   0001BC                     C1FLTOBJ6       equ	444	;# 
   637   0001BC                     C1FLTOBJ6L      equ	444	;# 
   638   0001BD                     C1FLTOBJ6H      equ	445	;# 
   639   0001BE                     C1FLTOBJ6U      equ	446	;# 
   640   0001BF                     C1FLTOBJ6T      equ	447	;# 
   641   0001C0                     C1MASK6         equ	448	;# 
   642   0001C0                     C1MASK6L        equ	448	;# 
   643   0001C1                     C1MASK6H        equ	449	;# 
   644   0001C2                     C1MASK6U        equ	450	;# 
   645   0001C3                     C1MASK6T        equ	451	;# 
   646   0001C4                     C1FLTOBJ7       equ	452	;# 
   647   0001C4                     C1FLTOBJ7L      equ	452	;# 
   648   0001C5                     C1FLTOBJ7H      equ	453	;# 
   649   0001C6                     C1FLTOBJ7U      equ	454	;# 
   650   0001C7                     C1FLTOBJ7T      equ	455	;# 
   651   0001C8                     C1MASK7         equ	456	;# 
   652   0001C8                     C1MASK7L        equ	456	;# 
   653   0001C9                     C1MASK7H        equ	457	;# 
   654   0001CA                     C1MASK7U        equ	458	;# 
   655   0001CB                     C1MASK7T        equ	459	;# 
   656   0001CC                     C1FLTOBJ8       equ	460	;# 
   657   0001CC                     C1FLTOBJ8L      equ	460	;# 
   658   0001CD                     C1FLTOBJ8H      equ	461	;# 
   659   0001CE                     C1FLTOBJ8U      equ	462	;# 
   660   0001CF                     C1FLTOBJ8T      equ	463	;# 
   661   0001D0                     C1MASK8         equ	464	;# 
   662   0001D0                     C1MASK8L        equ	464	;# 
   663   0001D1                     C1MASK8H        equ	465	;# 
   664   0001D2                     C1MASK8U        equ	466	;# 
   665   0001D3                     C1MASK8T        equ	467	;# 
   666   0001D4                     C1FLTOBJ9       equ	468	;# 
   667   0001D4                     C1FLTOBJ9L      equ	468	;# 
   668   0001D5                     C1FLTOBJ9H      equ	469	;# 
   669   0001D6                     C1FLTOBJ9U      equ	470	;# 
   670   0001D7                     C1FLTOBJ9T      equ	471	;# 
   671   0001D8                     C1MASK9         equ	472	;# 
   672   0001D8                     C1MASK9L        equ	472	;# 
   673   0001D9                     C1MASK9H        equ	473	;# 
   674   0001DA                     C1MASK9U        equ	474	;# 
   675   0001DB                     C1MASK9T        equ	475	;# 
   676   0001DC                     C1FLTOBJ10      equ	476	;# 
   677   0001DC                     C1FLTOBJ10L     equ	476	;# 
   678   0001DD                     C1FLTOBJ10H     equ	477	;# 
   679   0001DE                     C1FLTOBJ10U     equ	478	;# 
   680   0001DF                     C1FLTOBJ10T     equ	479	;# 
   681   0001E0                     C1MASK10        equ	480	;# 
   682   0001E0                     C1MASK10L       equ	480	;# 
   683   0001E1                     C1MASK10H       equ	481	;# 
   684   0001E2                     C1MASK10U       equ	482	;# 
   685   0001E3                     C1MASK10T       equ	483	;# 
   686   0001E4                     C1FLTOBJ11      equ	484	;# 
   687   0001E4                     C1FLTOBJ11L     equ	484	;# 
   688   0001E5                     C1FLTOBJ11H     equ	485	;# 
   689   0001E6                     C1FLTOBJ11U     equ	486	;# 
   690   0001E7                     C1FLTOBJ11T     equ	487	;# 
   691   0001E8                     C1MASK11        equ	488	;# 
   692   0001E8                     C1MASK11L       equ	488	;# 
   693   0001E9                     C1MASK11H       equ	489	;# 
   694   0001EA                     C1MASK11U       equ	490	;# 
   695   0001EB                     C1MASK11T       equ	491	;# 
   696   000200                     PPSLOCK         equ	512	;# 
   697   000201                     RA0PPS          equ	513	;# 
   698   000202                     RA1PPS          equ	514	;# 
   699   000203                     RA2PPS          equ	515	;# 
   700   000204                     RA3PPS          equ	516	;# 
   701   000205                     RA4PPS          equ	517	;# 
   702   000206                     RA5PPS          equ	518	;# 
   703   000207                     RA6PPS          equ	519	;# 
   704   000208                     RA7PPS          equ	520	;# 
   705   000209                     RB0PPS          equ	521	;# 
   706   00020A                     RB1PPS          equ	522	;# 
   707   00020B                     RB2PPS          equ	523	;# 
   708   00020C                     RB3PPS          equ	524	;# 
   709   00020D                     RB4PPS          equ	525	;# 
   710   00020E                     RB5PPS          equ	526	;# 
   711   00020F                     RB6PPS          equ	527	;# 
   712   000210                     RB7PPS          equ	528	;# 
   713   000211                     RC0PPS          equ	529	;# 
   714   000212                     RC1PPS          equ	530	;# 
   715   000213                     RC2PPS          equ	531	;# 
   716   000214                     RC3PPS          equ	532	;# 
   717   000215                     RC4PPS          equ	533	;# 
   718   000216                     RC5PPS          equ	534	;# 
   719   000217                     RC6PPS          equ	535	;# 
   720   000218                     RC7PPS          equ	536	;# 
   721   000219                     RD0PPS          equ	537	;# 
   722   00021A                     RD1PPS          equ	538	;# 
   723   00021B                     RD2PPS          equ	539	;# 
   724   00021C                     RD3PPS          equ	540	;# 
   725   00021D                     RD4PPS          equ	541	;# 
   726   00021E                     RD5PPS          equ	542	;# 
   727   00021F                     RD6PPS          equ	543	;# 
   728   000220                     RD7PPS          equ	544	;# 
   729   000221                     RE0PPS          equ	545	;# 
   730   000222                     RE1PPS          equ	546	;# 
   731   000223                     RE2PPS          equ	547	;# 
   732   00023D                     CANRXPPS        equ	573	;# 
   733   00023E                     INT0PPS         equ	574	;# 
   734   00023F                     INT1PPS         equ	575	;# 
   735   000240                     INT2PPS         equ	576	;# 
   736   000241                     T0CKIPPS        equ	577	;# 
   737   000242                     T1CKIPPS        equ	578	;# 
   738   000243                     T1GPPS          equ	579	;# 
   739   000244                     T3CKIPPS        equ	580	;# 
   740   000245                     T3GPPS          equ	581	;# 
   741   000246                     T5CKIPPS        equ	582	;# 
   742   000247                     T5GPPS          equ	583	;# 
   743   000248                     T2INPPS         equ	584	;# 
   744   000249                     T4INPPS         equ	585	;# 
   745   00024A                     T6INPPS         equ	586	;# 
   746   00024B                     TUIN0PPS        equ	587	;# 
   747   00024C                     TUIN1PPS        equ	588	;# 
   748   00024F                     CCP1PPS         equ	591	;# 
   749   000250                     CCP2PPS         equ	592	;# 
   750   000251                     CCP3PPS         equ	593	;# 
   751   000253                     PWM1ERSPPS      equ	595	;# 
   752   000254                     PWM2ERSPPS      equ	596	;# 
   753   000255                     PWM3ERSPPS      equ	597	;# 
   754   000256                     PWM4ERSPPS      equ	598	;# 
   755   000257                     PWMIN0PPS       equ	599	;# 
   756   000258                     PWMIN1PPS       equ	600	;# 
   757   000259                     SMT1WINPPS      equ	601	;# 
   758   00025A                     SMT1SIGPPS      equ	602	;# 
   759   00025B                     CWG1PPS         equ	603	;# 
   760   00025B                     CWG1INPPS       equ	603	;# 
   761   00025C                     CWG2PPS         equ	604	;# 
   762   00025C                     CWG2INPPS       equ	604	;# 
   763   00025D                     CWG3PPS         equ	605	;# 
   764   00025D                     CWG3INPPS       equ	605	;# 
   765   00025E                     MD1CARLPPS      equ	606	;# 
   766   00025E                     MDCARLPPS       equ	606	;# 
   767   00025F                     MD1CARHPPS      equ	607	;# 
   768   00025F                     MDCARHPPS       equ	607	;# 
   769   000260                     MD1SRCPPS       equ	608	;# 
   770   000260                     MDSRCPPS        equ	608	;# 
   771   000261                     CLCIN0PPS       equ	609	;# 
   772   000262                     CLCIN1PPS       equ	610	;# 
   773   000263                     CLCIN2PPS       equ	611	;# 
   774   000264                     CLCIN3PPS       equ	612	;# 
   775   000265                     CLCIN4PPS       equ	613	;# 
   776   000266                     CLCIN5PPS       equ	614	;# 
   777   000267                     CLCIN6PPS       equ	615	;# 
   778   000268                     CLCIN7PPS       equ	616	;# 
   779   000269                     ADACTPPS        equ	617	;# 
   780   00026A                     SPI1SCKPPS      equ	618	;# 
   781   00026B                     SPI1SDIPPS      equ	619	;# 
   782   00026C                     SPI1SSPPS       equ	620	;# 
   783   00026D                     SPI2SCKPPS      equ	621	;# 
   784   00026E                     SPI2SDIPPS      equ	622	;# 
   785   00026F                     SPI2SSPPS       equ	623	;# 
   786   000270                     I2C1SDAPPS      equ	624	;# 
   787   000271                     I2C1SCLPPS      equ	625	;# 
   788   000272                     U1RXPPS         equ	626	;# 
   789   000273                     U1CTSPPS        equ	627	;# 
   790   000274                     U2RXPPS         equ	628	;# 
   791   000275                     U2CTSPPS        equ	629	;# 
   792   000276                     U3RXPPS         equ	630	;# 
   793   000277                     U3CTSPPS        equ	631	;# 
   794   000278                     U4RXPPS         equ	632	;# 
   795   000279                     U4CTSPPS        equ	633	;# 
   796   00027A                     U5RXPPS         equ	634	;# 
   797   00027B                     U5CTSPPS        equ	635	;# 
   798   000286                     RC4I2C          equ	646	;# 
   799   000287                     RC3I2C          equ	647	;# 
   800   000288                     RB2I2C          equ	648	;# 
   801   000289                     RB1I2C          equ	649	;# 
   802   00028A                     I2C1RXB         equ	650	;# 
   803   00028B                     I2C1TXB         equ	651	;# 
   804   00028C                     I2C1CNTL        equ	652	;# 
   805   00028D                     I2C1CNTH        equ	653	;# 
   806   00028E                     I2C1ADB0        equ	654	;# 
   807   00028F                     I2C1ADB1        equ	655	;# 
   808   000290                     I2C1ADR0        equ	656	;# 
   809   000291                     I2C1ADR1        equ	657	;# 
   810   000292                     I2C1ADR2        equ	658	;# 
   811   000293                     I2C1ADR3        equ	659	;# 
   812   000294                     I2C1CON0        equ	660	;# 
   813   000295                     I2C1CON1        equ	661	;# 
   814   000296                     I2C1CON2        equ	662	;# 
   815   000297                     I2C1ERR         equ	663	;# 
   816   000298                     I2C1STAT0       equ	664	;# 
   817   000299                     I2C1STAT1       equ	665	;# 
   818   00029A                     I2C1PIR         equ	666	;# 
   819   00029B                     I2C1PIE         equ	667	;# 
   820   00029C                     I2C1BTO         equ	668	;# 
   821   00029D                     I2C1BAUD        equ	669	;# 
   822   00029E                     I2C1CLK         equ	670	;# 
   823   00029F                     I2C1BTOC        equ	671	;# 
   824   0002A1                     U1RXB           equ	673	;# 
   825   0002A1                     U1RXBL          equ	673	;# 
   826   0002A2                     U1RXCHK         equ	674	;# 
   827   0002A3                     U1TXB           equ	675	;# 
   828   0002A3                     U1TXBL          equ	675	;# 
   829   0002A4                     U1TXCHK         equ	676	;# 
   830   0002A5                     U1P1            equ	677	;# 
   831   0002A5                     U1P1L           equ	677	;# 
   832   0002A6                     U1P1H           equ	678	;# 
   833   0002A7                     U1P2            equ	679	;# 
   834   0002A7                     U1P2L           equ	679	;# 
   835   0002A8                     U1P2H           equ	680	;# 
   836   0002A9                     U1P3            equ	681	;# 
   837   0002A9                     U1P3L           equ	681	;# 
   838   0002AA                     U1P3H           equ	682	;# 
   839   0002AB                     U1CON0          equ	683	;# 
   840   0002AC                     U1CON1          equ	684	;# 
   841   0002AD                     U1CON2          equ	685	;# 
   842   0002AE                     U1BRG           equ	686	;# 
   843   0002AE                     U1BRGL          equ	686	;# 
   844   0002AF                     U1BRGH          equ	687	;# 
   845   0002B0                     U1FIFO          equ	688	;# 
   846   0002B1                     U1UIR           equ	689	;# 
   847   0002B2                     U1ERRIR         equ	690	;# 
   848   0002B3                     U1ERRIE         equ	691	;# 
   849   0002B4                     U2RXB           equ	692	;# 
   850   0002B4                     U2RXBL          equ	692	;# 
   851   0002B5                     U2RXCHK         equ	693	;# 
   852   0002B6                     U2TXB           equ	694	;# 
   853   0002B6                     U2TXBL          equ	694	;# 
   854   0002B7                     U2TXCHK         equ	695	;# 
   855   0002B8                     U2P1            equ	696	;# 
   856   0002B8                     U2P1L           equ	696	;# 
   857   0002B9                     U2P1H           equ	697	;# 
   858   0002BA                     U2P2            equ	698	;# 
   859   0002BA                     U2P2L           equ	698	;# 
   860   0002BB                     U2P2H           equ	699	;# 
   861   0002BC                     U2P3            equ	700	;# 
   862   0002BC                     U2P3L           equ	700	;# 
   863   0002BD                     U2P3H           equ	701	;# 
   864   0002BE                     U2CON0          equ	702	;# 
   865   0002BF                     U2CON1          equ	703	;# 
   866   0002C0                     U2CON2          equ	704	;# 
   867   0002C1                     U2BRG           equ	705	;# 
   868   0002C1                     U2BRGL          equ	705	;# 
   869   0002C2                     U2BRGH          equ	706	;# 
   870   0002C3                     U2FIFO          equ	707	;# 
   871   0002C4                     U2UIR           equ	708	;# 
   872   0002C5                     U2ERRIR         equ	709	;# 
   873   0002C6                     U2ERRIE         equ	710	;# 
   874   0002C7                     U3RXB           equ	711	;# 
   875   0002C7                     U3RXBL          equ	711	;# 
   876   0002C9                     U3TXB           equ	713	;# 
   877   0002C9                     U3TXBL          equ	713	;# 
   878   0002CB                     U3P1            equ	715	;# 
   879   0002CB                     U3P1L           equ	715	;# 
   880   0002CD                     U3P2            equ	717	;# 
   881   0002CD                     U3P2L           equ	717	;# 
   882   0002CF                     U3P3            equ	719	;# 
   883   0002CF                     U3P3L           equ	719	;# 
   884   0002D1                     U3CON0          equ	721	;# 
   885   0002D2                     U3CON1          equ	722	;# 
   886   0002D3                     U3CON2          equ	723	;# 
   887   0002D4                     U3BRG           equ	724	;# 
   888   0002D4                     U3BRGL          equ	724	;# 
   889   0002D5                     U3BRGH          equ	725	;# 
   890   0002D6                     U3FIFO          equ	726	;# 
   891   0002D7                     U3UIR           equ	727	;# 
   892   0002D8                     U3ERRIR         equ	728	;# 
   893   0002D9                     U3ERRIE         equ	729	;# 
   894   0002DA                     U4RXB           equ	730	;# 
   895   0002DA                     U4RXBL          equ	730	;# 
   896   0002DC                     U4TXB           equ	732	;# 
   897   0002DC                     U4TXBL          equ	732	;# 
   898   0002DE                     U4P1            equ	734	;# 
   899   0002DE                     U4P1L           equ	734	;# 
   900   0002E0                     U4P2            equ	736	;# 
   901   0002E0                     U4P2L           equ	736	;# 
   902   0002E2                     U4P3            equ	738	;# 
   903   0002E2                     U4P3L           equ	738	;# 
   904   0002E4                     U4CON0          equ	740	;# 
   905   0002E5                     U4CON1          equ	741	;# 
   906   0002E6                     U4CON2          equ	742	;# 
   907   0002E7                     U4BRG           equ	743	;# 
   908   0002E7                     U4BRGL          equ	743	;# 
   909   0002E8                     U4BRGH          equ	744	;# 
   910   0002E9                     U4FIFO          equ	745	;# 
   911   0002EA                     U4UIR           equ	746	;# 
   912   0002EB                     U4ERRIR         equ	747	;# 
   913   0002EC                     U4ERRIE         equ	748	;# 
   914   0002ED                     U5RXB           equ	749	;# 
   915   0002ED                     U5RXBL          equ	749	;# 
   916   0002EF                     U5TXB           equ	751	;# 
   917   0002EF                     U5TXBL          equ	751	;# 
   918   0002F1                     U5P1            equ	753	;# 
   919   0002F1                     U5P1L           equ	753	;# 
   920   0002F3                     U5P2            equ	755	;# 
   921   0002F3                     U5P2L           equ	755	;# 
   922   0002F5                     U5P3            equ	757	;# 
   923   0002F5                     U5P3L           equ	757	;# 
   924   0002F7                     U5CON0          equ	759	;# 
   925   0002F8                     U5CON1          equ	760	;# 
   926   0002F9                     U5CON2          equ	761	;# 
   927   0002FA                     U5BRG           equ	762	;# 
   928   0002FA                     U5BRGL          equ	762	;# 
   929   0002FB                     U5BRGH          equ	763	;# 
   930   0002FC                     U5FIFO          equ	764	;# 
   931   0002FD                     U5UIR           equ	765	;# 
   932   0002FE                     U5ERRIR         equ	766	;# 
   933   0002FF                     U5ERRIE         equ	767	;# 
   934   000300                     SMT1TMR         equ	768	;# 
   935   000300                     SMT1TMRL        equ	768	;# 
   936   000301                     SMT1TMRH        equ	769	;# 
   937   000302                     SMT1TMRU        equ	770	;# 
   938   000303                     SMT1CPR         equ	771	;# 
   939   000303                     SMT1CPRL        equ	771	;# 
   940   000304                     SMT1CPRH        equ	772	;# 
   941   000305                     SMT1CPRU        equ	773	;# 
   942   000306                     SMT1CPW         equ	774	;# 
   943   000306                     SMT1CPWL        equ	774	;# 
   944   000307                     SMT1CPWH        equ	775	;# 
   945   000308                     SMT1CPWU        equ	776	;# 
   946   000309                     SMT1PR          equ	777	;# 
   947   000309                     SMT1PRL         equ	777	;# 
   948   00030A                     SMT1PRH         equ	778	;# 
   949   00030B                     SMT1PRU         equ	779	;# 
   950   00030C                     SMT1CON0        equ	780	;# 
   951   00030D                     SMT1CON1        equ	781	;# 
   952   00030E                     SMT1STAT        equ	782	;# 
   953   00030F                     SMT1CLK         equ	783	;# 
   954   000310                     SMT1SIG         equ	784	;# 
   955   000311                     SMT1WIN         equ	785	;# 
   956   000318                     TMR0L           equ	792	;# 
   957   000318                     TMR0            equ	792	;# 
   958   000319                     TMR0H           equ	793	;# 
   959   000319                     PR0             equ	793	;# 
   960   00031A                     T0CON0          equ	794	;# 
   961   00031B                     T0CON1          equ	795	;# 
   962   00031C                     TMR1            equ	796	;# 
   963   00031C                     TMR1L           equ	796	;# 
   964   00031D                     TMR1H           equ	797	;# 
   965   00031E                     T1CON           equ	798	;# 
   966   00031E                     TMR1CON         equ	798	;# 
   967   00031F                     T1GCON          equ	799	;# 
   968   00031F                     TMR1GCON        equ	799	;# 
   969   000320                     T1GATE          equ	800	;# 
   970   000320                     TMR1GATE        equ	800	;# 
   971   000321                     T1CLK           equ	801	;# 
   972   000321                     TMR1CLK         equ	801	;# 
   973   000321                     PR1             equ	801	;# 
   974   000322                     T2TMR           equ	802	;# 
   975   000322                     TMR2            equ	802	;# 
   976   000323                     T2PR            equ	803	;# 
   977   000323                     PR2             equ	803	;# 
   978   000324                     T2CON           equ	804	;# 
   979   000325                     T2HLT           equ	805	;# 
   980   000326                     T2CLKCON        equ	806	;# 
   981   000326                     T2CLK           equ	806	;# 
   982   000327                     T2RST           equ	807	;# 
   983   000328                     TMR3            equ	808	;# 
   984   000328                     TMR3L           equ	808	;# 
   985   000329                     TMR3H           equ	809	;# 
   986   00032A                     T3CON           equ	810	;# 
   987   00032A                     TMR3CON         equ	810	;# 
   988   00032B                     T3GCON          equ	811	;# 
   989   00032B                     TMR3GCON        equ	811	;# 
   990   00032C                     T3GATE          equ	812	;# 
   991   00032C                     TMR3GATE        equ	812	;# 
   992   00032D                     T3CLK           equ	813	;# 
   993   00032D                     TMR3CLK         equ	813	;# 
   994   00032D                     PR3             equ	813	;# 
   995   00032E                     T4TMR           equ	814	;# 
   996   00032E                     TMR4            equ	814	;# 
   997   00032F                     T4PR            equ	815	;# 
   998   00032F                     PR4             equ	815	;# 
   999   000330                     T4CON           equ	816	;# 
  1000   000331                     T4HLT           equ	817	;# 
  1001   000332                     T4CLKCON        equ	818	;# 
  1002   000332                     T4CLK           equ	818	;# 
  1003   000333                     T4RST           equ	819	;# 
  1004   000334                     TMR5            equ	820	;# 
  1005   000334                     TMR5L           equ	820	;# 
  1006   000335                     TMR5H           equ	821	;# 
  1007   000336                     T5CON           equ	822	;# 
  1008   000336                     TMR5CON         equ	822	;# 
  1009   000337                     T5GCON          equ	823	;# 
  1010   000337                     TMR5GCON        equ	823	;# 
  1011   000338                     T5GATE          equ	824	;# 
  1012   000338                     TMR5GATE        equ	824	;# 
  1013   000339                     T5CLK           equ	825	;# 
  1014   000339                     TMR5CLK         equ	825	;# 
  1015   000339                     PR5             equ	825	;# 
  1016   00033A                     T6TMR           equ	826	;# 
  1017   00033A                     TMR6            equ	826	;# 
  1018   00033B                     T6PR            equ	827	;# 
  1019   00033B                     PR6             equ	827	;# 
  1020   00033C                     T6CON           equ	828	;# 
  1021   00033D                     T6HLT           equ	829	;# 
  1022   00033E                     T6CLKCON        equ	830	;# 
  1023   00033E                     T6CLK           equ	830	;# 
  1024   00033F                     T6RST           equ	831	;# 
  1025   000340                     CCPR1           equ	832	;# 
  1026   000340                     CCPR1L          equ	832	;# 
  1027   000341                     CCPR1H          equ	833	;# 
  1028   000342                     CCP1CON         equ	834	;# 
  1029   000343                     CCP1CAP         equ	835	;# 
  1030   000344                     CCPR2           equ	836	;# 
  1031   000344                     CCPR2L          equ	836	;# 
  1032   000345                     CCPR2H          equ	837	;# 
  1033   000346                     CCP2CON         equ	838	;# 
  1034   000347                     CCP2CAP         equ	839	;# 
  1035   000348                     CCPR3           equ	840	;# 
  1036   000348                     CCPR3L          equ	840	;# 
  1037   000349                     CCPR3H          equ	841	;# 
  1038   00034A                     CCP3CON         equ	842	;# 
  1039   00034B                     CCP3CAP         equ	843	;# 
  1040   00034C                     CCPTMRS0        equ	844	;# 
  1041   00034F                     CRCDATA         equ	847	;# 
  1042   00034F                     CRCDATAL        equ	847	;# 
  1043   000350                     CRCDATAH        equ	848	;# 
  1044   000351                     CRCDATAU        equ	849	;# 
  1045   000352                     CRCDATAT        equ	850	;# 
  1046   000353                     CRCOUT          equ	851	;# 
  1047   000353                     CRCSHFT         equ	851	;# 
  1048   000353                     CRCXOR          equ	851	;# 
  1049   000353                     CRCOUTL         equ	851	;# 
  1050   000353                     CRCSHFTL        equ	851	;# 
  1051   000353                     CRCSHIFTL       equ	851	;# 
  1052   000353                     CRCXORL         equ	851	;# 
  1053   000354                     CRCOUTH         equ	852	;# 
  1054   000354                     CRCSHFTH        equ	852	;# 
  1055   000354                     CRCSHIFTH       equ	852	;# 
  1056   000354                     CRCXORH         equ	852	;# 
  1057   000355                     CRCOUTU         equ	853	;# 
  1058   000355                     CRCSHFTU        equ	853	;# 
  1059   000355                     CRCSHIFTU       equ	853	;# 
  1060   000355                     CRCXORU         equ	853	;# 
  1061   000356                     CRCOUTT         equ	854	;# 
  1062   000356                     CRCSHFTT        equ	854	;# 
  1063   000356                     CRCSHIFTT       equ	854	;# 
  1064   000356                     CRCXORT         equ	854	;# 
  1065   000357                     CRCCON0         equ	855	;# 
  1066   000358                     CRCCON1         equ	856	;# 
  1067   000359                     CRCCON2         equ	857	;# 
  1068   00035A                     SCANLADR        equ	858	;# 
  1069   00035A                     SCANLADRL       equ	858	;# 
  1070   00035B                     SCANLADRH       equ	859	;# 
  1071   00035C                     SCANLADRU       equ	860	;# 
  1072   00035D                     SCANHADR        equ	861	;# 
  1073   00035D                     SCANHADRL       equ	861	;# 
  1074   00035E                     SCANHADRH       equ	862	;# 
  1075   00035F                     SCANHADRU       equ	863	;# 
  1076   000360                     SCANCON0        equ	864	;# 
  1077   000361                     SCANTRIG        equ	865	;# 
  1078   000362                     IPR0            equ	866	;# 
  1079   000363                     IPR1            equ	867	;# 
  1080   000364                     IPR2            equ	868	;# 
  1081   000365                     IPR3            equ	869	;# 
  1082   000366                     IPR4            equ	870	;# 
  1083   000367                     IPR5            equ	871	;# 
  1084   000368                     IPR6            equ	872	;# 
  1085   000369                     IPR7            equ	873	;# 
  1086   00036A                     IPR8            equ	874	;# 
  1087   00036B                     IPR9            equ	875	;# 
  1088   00036C                     IPR10           equ	876	;# 
  1089   00036D                     IPR11           equ	877	;# 
  1090   00036E                     IPR12           equ	878	;# 
  1091   00036F                     IPR13           equ	879	;# 
  1092   000370                     IPR14           equ	880	;# 
  1093   000371                     IPR15           equ	881	;# 
  1094   000373                     STATUS_CSHAD    equ	883	;# 
  1095   000374                     WREG_CSHAD      equ	884	;# 
  1096   000375                     BSR_CSHAD       equ	885	;# 
  1097   000376                     SHADCON         equ	886	;# 
  1098   000377                     STATUS_SHAD     equ	887	;# 
  1099   000378                     WREG_SHAD       equ	888	;# 
  1100   000379                     BSR_SHAD        equ	889	;# 
  1101   00037A                     PCLATH_SHAD     equ	890	;# 
  1102   00037B                     PCLATU_SHAD     equ	891	;# 
  1103   00037C                     FSR0SH          equ	892	;# 
  1104   00037C                     FSR0L_SHAD      equ	892	;# 
  1105   00037D                     FSR0H_SHAD      equ	893	;# 
  1106   00037E                     FSR1SH          equ	894	;# 
  1107   00037E                     FSR1L_SHAD      equ	894	;# 
  1108   00037F                     FSR1H_SHAD      equ	895	;# 
  1109   000380                     FSR2SH          equ	896	;# 
  1110   000380                     FSR2L_SHAD      equ	896	;# 
  1111   000381                     FSR2H_SHAD      equ	897	;# 
  1112   000382                     PRODSH          equ	898	;# 
  1113   000382                     PRODL_SHAD      equ	898	;# 
  1114   000383                     PRODH_SHAD      equ	899	;# 
  1115   000387                     TU16ACON0       equ	903	;# 
  1116   000388                     TU16ACON1       equ	904	;# 
  1117   000389                     TU16AHLT        equ	905	;# 
  1118   00038A                     TU16APS         equ	906	;# 
  1119   00038B                     TU16ATMR        equ	907	;# 
  1120   00038B                     TU16ACR         equ	907	;# 
  1121   00038B                     TU16ATMRL       equ	907	;# 
  1122   00038B                     TU16ACRL        equ	907	;# 
  1123   00038C                     TU16ATMRH       equ	908	;# 
  1124   00038C                     TU16ACRH        equ	908	;# 
  1125   00038D                     TU16APR         equ	909	;# 
  1126   00038D                     TU16APRL        equ	909	;# 
  1127   00038E                     TU16APRH        equ	910	;# 
  1128   00038F                     TU16ACLK        equ	911	;# 
  1129   000390                     TU16AERS        equ	912	;# 
  1130   000393                     TU16BCON0       equ	915	;# 
  1131   000394                     TU16BCON1       equ	916	;# 
  1132   000395                     TU16BHLT        equ	917	;# 
  1133   000396                     TU16BPS         equ	918	;# 
  1134   000397                     TU16BTMR        equ	919	;# 
  1135   000397                     TU16BCR         equ	919	;# 
  1136   000397                     TU16BTMRL       equ	919	;# 
  1137   000397                     TU16BCRL        equ	919	;# 
  1138   000398                     TU16BTMRH       equ	920	;# 
  1139   000398                     TU16BCRH        equ	920	;# 
  1140   000399                     TU16BPR         equ	921	;# 
  1141   000399                     TU16BPRL        equ	921	;# 
  1142   00039A                     TU16BPRH        equ	922	;# 
  1143   00039B                     TU16BCLK        equ	923	;# 
  1144   00039C                     TU16BERS        equ	924	;# 
  1145   0003BB                     TUCHAIN         equ	955	;# 
  1146   0003BC                     CWG1CLK         equ	956	;# 
  1147   0003BC                     CWG1CLKCON      equ	956	;# 
  1148   0003BD                     CWG1ISM         equ	957	;# 
  1149   0003BE                     CWG1DBR         equ	958	;# 
  1150   0003BF                     CWG1DBF         equ	959	;# 
  1151   0003C0                     CWG1CON0        equ	960	;# 
  1152   0003C1                     CWG1CON1        equ	961	;# 
  1153   0003C2                     CWG1AS0         equ	962	;# 
  1154   0003C3                     CWG1AS1         equ	963	;# 
  1155   0003C4                     CWG1STR         equ	964	;# 
  1156   0003C5                     CWG2CLK         equ	965	;# 
  1157   0003C5                     CWG2CLKCON      equ	965	;# 
  1158   0003C6                     CWG2ISM         equ	966	;# 
  1159   0003C7                     CWG2DBR         equ	967	;# 
  1160   0003C8                     CWG2DBF         equ	968	;# 
  1161   0003C9                     CWG2CON0        equ	969	;# 
  1162   0003CA                     CWG2CON1        equ	970	;# 
  1163   0003CB                     CWG2AS0         equ	971	;# 
  1164   0003CC                     CWG2AS1         equ	972	;# 
  1165   0003CD                     CWG2STR         equ	973	;# 
  1166   0003CE                     CWG3CLK         equ	974	;# 
  1167   0003CE                     CWG3CLKCON      equ	974	;# 
  1168   0003CF                     CWG3ISM         equ	975	;# 
  1169   0003D0                     CWG3DBR         equ	976	;# 
  1170   0003D1                     CWG3DBF         equ	977	;# 
  1171   0003D2                     CWG3CON0        equ	978	;# 
  1172   0003D3                     CWG3CON1        equ	979	;# 
  1173   0003D4                     CWG3AS0         equ	980	;# 
  1174   0003D5                     CWG3AS1         equ	981	;# 
  1175   0003D6                     CWG3STR         equ	982	;# 
  1176   0003D7                     FVRCON          equ	983	;# 
  1177   0003D8                     ADCPCON         equ	984	;# 
  1178   0003D8                     ADCP            equ	984	;# 
  1179   0003D9                     ADLTH           equ	985	;# 
  1180   0003D9                     ADLTHL          equ	985	;# 
  1181   0003DA                     ADLTHH          equ	986	;# 
  1182   0003DB                     ADUTH           equ	987	;# 
  1183   0003DB                     ADUTHL          equ	987	;# 
  1184   0003DC                     ADUTHH          equ	988	;# 
  1185   0003DD                     ADERR           equ	989	;# 
  1186   0003DD                     ADERRL          equ	989	;# 
  1187   0003DE                     ADERRH          equ	990	;# 
  1188   0003DF                     ADSTPT          equ	991	;# 
  1189   0003DF                     ADSTPTL         equ	991	;# 
  1190   0003E0                     ADSTPTH         equ	992	;# 
  1191   0003E1                     ADFLTR          equ	993	;# 
  1192   0003E1                     ADFLTRL         equ	993	;# 
  1193   0003E2                     ADFLTRH         equ	994	;# 
  1194   0003E3                     ADACC           equ	995	;# 
  1195   0003E3                     ADACCL          equ	995	;# 
  1196   0003E4                     ADACCH          equ	996	;# 
  1197   0003E5                     ADACCU          equ	997	;# 
  1198   0003E6                     ADCNT           equ	998	;# 
  1199   0003E7                     ADRPT           equ	999	;# 
  1200   0003E8                     ADPREV          equ	1000	;# 
  1201   0003E8                     ADPREVL         equ	1000	;# 
  1202   0003E9                     ADPREVH         equ	1001	;# 
  1203   0003EA                     ADRES           equ	1002	;# 
  1204   0003EA                     ADRESL          equ	1002	;# 
  1205   0003EB                     ADRESH          equ	1003	;# 
  1206   0003EC                     ADPCH           equ	1004	;# 
  1207   0003EE                     ADACQ           equ	1006	;# 
  1208   0003EE                     ADACQL          equ	1006	;# 
  1209   0003EF                     ADACQH          equ	1007	;# 
  1210   0003F0                     ADCAP           equ	1008	;# 
  1211   0003F1                     ADPRE           equ	1009	;# 
  1212   0003F1                     ADPREL          equ	1009	;# 
  1213   0003F2                     ADPREH          equ	1010	;# 
  1214   0003F3                     ADCON0          equ	1011	;# 
  1215   0003F4                     ADCON1          equ	1012	;# 
  1216   0003F5                     ADCON2          equ	1013	;# 
  1217   0003F6                     ADCON3          equ	1014	;# 
  1218   0003F7                     ADSTAT          equ	1015	;# 
  1219   0003F8                     ADREF           equ	1016	;# 
  1220   0003F9                     ADACT           equ	1017	;# 
  1221   0003FA                     ADCLK           equ	1018	;# 
  1222   0003FB                     ADCTX           equ	1019	;# 
  1223   0003FC                     ADCSEL1         equ	1020	;# 
  1224   0003FD                     ADCSEL2         equ	1021	;# 
  1225   0003FE                     ADCSEL3         equ	1022	;# 
  1226   0003FF                     ADCSEL4         equ	1023	;# 
  1227   000400                     ANSELA          equ	1024	;# 
  1228   000401                     WPUA            equ	1025	;# 
  1229   000402                     ODCONA          equ	1026	;# 
  1230   000403                     SLRCONA         equ	1027	;# 
  1231   000404                     INLVLA          equ	1028	;# 
  1232   000405                     IOCAP           equ	1029	;# 
  1233   000406                     IOCAN           equ	1030	;# 
  1234   000407                     IOCAF           equ	1031	;# 
  1235   000408                     ANSELB          equ	1032	;# 
  1236   000409                     WPUB            equ	1033	;# 
  1237   00040A                     ODCONB          equ	1034	;# 
  1238   00040B                     SLRCONB         equ	1035	;# 
  1239   00040C                     INLVLB          equ	1036	;# 
  1240   00040D                     IOCBP           equ	1037	;# 
  1241   00040E                     IOCBN           equ	1038	;# 
  1242   00040F                     IOCBF           equ	1039	;# 
  1243   000410                     ANSELC          equ	1040	;# 
  1244   000411                     WPUC            equ	1041	;# 
  1245   000412                     ODCONC          equ	1042	;# 
  1246   000413                     SLRCONC         equ	1043	;# 
  1247   000414                     INLVLC          equ	1044	;# 
  1248   000415                     IOCCP           equ	1045	;# 
  1249   000416                     IOCCN           equ	1046	;# 
  1250   000417                     IOCCF           equ	1047	;# 
  1251   000418                     ANSELD          equ	1048	;# 
  1252   000419                     WPUD            equ	1049	;# 
  1253   00041A                     ODCOND          equ	1050	;# 
  1254   00041B                     SLRCOND         equ	1051	;# 
  1255   00041C                     INLVLD          equ	1052	;# 
  1256   000420                     ANSELE          equ	1056	;# 
  1257   000421                     WPUE            equ	1057	;# 
  1258   000422                     ODCONE          equ	1058	;# 
  1259   000423                     SLRCONE         equ	1059	;# 
  1260   000424                     INLVLE          equ	1060	;# 
  1261   000425                     IOCEP           equ	1061	;# 
  1262   000426                     IOCEN           equ	1062	;# 
  1263   000427                     IOCEF           equ	1063	;# 
  1264   000440                     NCO1ACC         equ	1088	;# 
  1265   000440                     NCO1ACCL        equ	1088	;# 
  1266   000441                     NCO1ACCH        equ	1089	;# 
  1267   000442                     NCO1ACCU        equ	1090	;# 
  1268   000443                     NCO1INC         equ	1091	;# 
  1269   000443                     NCO1INCL        equ	1091	;# 
  1270   000444                     NCO1INCH        equ	1092	;# 
  1271   000445                     NCO1INCU        equ	1093	;# 
  1272   000446                     NCO1CON         equ	1094	;# 
  1273   000447                     NCO1CLK         equ	1095	;# 
  1274   000448                     NCO2ACC         equ	1096	;# 
  1275   000448                     NCO2ACCL        equ	1096	;# 
  1276   000449                     NCO2ACCH        equ	1097	;# 
  1277   00044A                     NCO2ACCU        equ	1098	;# 
  1278   00044B                     NCO2INC         equ	1099	;# 
  1279   00044B                     NCO2INCL        equ	1099	;# 
  1280   00044C                     NCO2INCH        equ	1100	;# 
  1281   00044D                     NCO2INCU        equ	1101	;# 
  1282   00044E                     NCO2CON         equ	1102	;# 
  1283   00044F                     NCO2CLK         equ	1103	;# 
  1284   000450                     NCO3ACC         equ	1104	;# 
  1285   000450                     NCO3ACCL        equ	1104	;# 
  1286   000451                     NCO3ACCH        equ	1105	;# 
  1287   000452                     NCO3ACCU        equ	1106	;# 
  1288   000453                     NCO3INC         equ	1107	;# 
  1289   000453                     NCO3INCL        equ	1107	;# 
  1290   000454                     NCO3INCH        equ	1108	;# 
  1291   000455                     NCO3INCU        equ	1109	;# 
  1292   000456                     NCO3CON         equ	1110	;# 
  1293   000457                     NCO3CLK         equ	1111	;# 
  1294   000458                     FSCMCON         equ	1112	;# 
  1295   000459                     IVTLOCK         equ	1113	;# 
  1296   00045A                     IVTAD           equ	1114	;# 
  1297   00045A                     IVTADL          equ	1114	;# 
  1298   00045B                     IVTADH          equ	1115	;# 
  1299   00045C                     IVTADU          equ	1116	;# 
  1300   00045D                     IVTBASE         equ	1117	;# 
  1301   00045D                     IVTBASEL        equ	1117	;# 
  1302   00045E                     IVTBASEH        equ	1118	;# 
  1303   00045F                     IVTBASEU        equ	1119	;# 
  1304   000460                     PWM1ERS         equ	1120	;# 
  1305   000461                     PWM1CLK         equ	1121	;# 
  1306   000462                     PWM1LDS         equ	1122	;# 
  1307   000463                     PWM1PR          equ	1123	;# 
  1308   000463                     PWM1PRL         equ	1123	;# 
  1309   000464                     PWM1PRH         equ	1124	;# 
  1310   000465                     PWM1CPRE        equ	1125	;# 
  1311   000466                     PWM1PIPOS       equ	1126	;# 
  1312   000467                     PWM1GIR         equ	1127	;# 
  1313   000468                     PWM1GIE         equ	1128	;# 
  1314   000469                     PWM1CON         equ	1129	;# 
  1315   00046A                     PWM1S1CFG       equ	1130	;# 
  1316   00046B                     PWM1S1P1        equ	1131	;# 
  1317   00046B                     PWM1S1P1L       equ	1131	;# 
  1318   00046C                     PWM1S1P1H       equ	1132	;# 
  1319   00046D                     PWM1S1P2        equ	1133	;# 
  1320   00046D                     PWM1S1P2L       equ	1133	;# 
  1321   00046E                     PWM1S1P2H       equ	1134	;# 
  1322   00046F                     PWM2ERS         equ	1135	;# 
  1323   000470                     PWM2CLK         equ	1136	;# 
  1324   000471                     PWM2LDS         equ	1137	;# 
  1325   000472                     PWM2PR          equ	1138	;# 
  1326   000472                     PWM2PRL         equ	1138	;# 
  1327   000473                     PWM2PRH         equ	1139	;# 
  1328   000474                     PWM2CPRE        equ	1140	;# 
  1329   000475                     PWM2PIPOS       equ	1141	;# 
  1330   000476                     PWM2GIR         equ	1142	;# 
  1331   000477                     PWM2GIE         equ	1143	;# 
  1332   000478                     PWM2CON         equ	1144	;# 
  1333   000479                     PWM2S1CFG       equ	1145	;# 
  1334   00047A                     PWM2S1P1        equ	1146	;# 
  1335   00047A                     PWM2S1P1L       equ	1146	;# 
  1336   00047B                     PWM2S1P1H       equ	1147	;# 
  1337   00047C                     PWM2S1P2        equ	1148	;# 
  1338   00047C                     PWM2S1P2L       equ	1148	;# 
  1339   00047D                     PWM2S1P2H       equ	1149	;# 
  1340   00047E                     PWM3ERS         equ	1150	;# 
  1341   00047F                     PWM3CLK         equ	1151	;# 
  1342   000480                     PWM3LDS         equ	1152	;# 
  1343   000481                     PWM3PR          equ	1153	;# 
  1344   000481                     PWM3PRL         equ	1153	;# 
  1345   000482                     PWM3PRH         equ	1154	;# 
  1346   000483                     PWM3CPRE        equ	1155	;# 
  1347   000484                     PWM3PIPOS       equ	1156	;# 
  1348   000485                     PWM3GIR         equ	1157	;# 
  1349   000486                     PWM3GIE         equ	1158	;# 
  1350   000487                     PWM3CON         equ	1159	;# 
  1351   000488                     PWM3S1CFG       equ	1160	;# 
  1352   000489                     PWM3S1P1        equ	1161	;# 
  1353   000489                     PWM3S1P1L       equ	1161	;# 
  1354   00048A                     PWM3S1P1H       equ	1162	;# 
  1355   00048B                     PWM3S1P2        equ	1163	;# 
  1356   00048B                     PWM3S1P2L       equ	1163	;# 
  1357   00048C                     PWM3S1P2H       equ	1164	;# 
  1358   00048D                     PWM4ERS         equ	1165	;# 
  1359   00048E                     PWM4CLK         equ	1166	;# 
  1360   00048F                     PWM4LDS         equ	1167	;# 
  1361   000490                     PWM4PR          equ	1168	;# 
  1362   000490                     PWM4PRL         equ	1168	;# 
  1363   000491                     PWM4PRH         equ	1169	;# 
  1364   000492                     PWM4CPRE        equ	1170	;# 
  1365   000493                     PWM4PIPOS       equ	1171	;# 
  1366   000494                     PWM4GIR         equ	1172	;# 
  1367   000495                     PWM4GIE         equ	1173	;# 
  1368   000496                     PWM4CON         equ	1174	;# 
  1369   000497                     PWM4S1CFG       equ	1175	;# 
  1370   000498                     PWM4S1P1        equ	1176	;# 
  1371   000498                     PWM4S1P1L       equ	1176	;# 
  1372   000499                     PWM4S1P1H       equ	1177	;# 
  1373   00049A                     PWM4S1P2        equ	1178	;# 
  1374   00049A                     PWM4S1P2L       equ	1178	;# 
  1375   00049B                     PWM4S1P2H       equ	1179	;# 
  1376   00049C                     PWMLOAD         equ	1180	;# 
  1377   00049D                     PWMEN           equ	1181	;# 
  1378   00049E                     PIE0            equ	1182	;# 
  1379   00049F                     PIE1            equ	1183	;# 
  1380   0004A0                     PIE2            equ	1184	;# 
  1381   0004A1                     PIE3            equ	1185	;# 
  1382   0004A2                     PIE4            equ	1186	;# 
  1383   0004A3                     PIE5            equ	1187	;# 
  1384   0004A4                     PIE6            equ	1188	;# 
  1385   0004A5                     PIE7            equ	1189	;# 
  1386   0004A6                     PIE8            equ	1190	;# 
  1387   0004A7                     PIE9            equ	1191	;# 
  1388   0004A8                     PIE10           equ	1192	;# 
  1389   0004A9                     PIE11           equ	1193	;# 
  1390   0004AA                     PIE12           equ	1194	;# 
  1391   0004AB                     PIE13           equ	1195	;# 
  1392   0004AC                     PIE14           equ	1196	;# 
  1393   0004AD                     PIE15           equ	1197	;# 
  1394   0004AE                     PIR0            equ	1198	;# 
  1395   0004AF                     PIR1            equ	1199	;# 
  1396   0004B0                     PIR2            equ	1200	;# 
  1397   0004B1                     PIR3            equ	1201	;# 
  1398   0004B2                     PIR4            equ	1202	;# 
  1399   0004B3                     PIR5            equ	1203	;# 
  1400   0004B4                     PIR6            equ	1204	;# 
  1401   0004B5                     PIR7            equ	1205	;# 
  1402   0004B6                     PIR8            equ	1206	;# 
  1403   0004B7                     PIR9            equ	1207	;# 
  1404   0004B8                     PIR10           equ	1208	;# 
  1405   0004B9                     PIR11           equ	1209	;# 
  1406   0004BA                     PIR12           equ	1210	;# 
  1407   0004BB                     PIR13           equ	1211	;# 
  1408   0004BC                     PIR14           equ	1212	;# 
  1409   0004BD                     PIR15           equ	1213	;# 
  1410   0004BE                     LATA            equ	1214	;# 
  1411   0004BF                     LATB            equ	1215	;# 
  1412   0004C0                     LATC            equ	1216	;# 
  1413   0004C1                     LATD            equ	1217	;# 
  1414   0004C2                     LATE            equ	1218	;# 
  1415   0004C6                     TRISA           equ	1222	;# 
  1416   0004C7                     TRISB           equ	1223	;# 
  1417   0004C8                     TRISC           equ	1224	;# 
  1418   0004C9                     TRISD           equ	1225	;# 
  1419   0004CA                     TRISE           equ	1226	;# 
  1420   0004CE                     PORTA           equ	1230	;# 
  1421   0004CF                     PORTB           equ	1231	;# 
  1422   0004D0                     PORTC           equ	1232	;# 
  1423   0004D1                     PORTD           equ	1233	;# 
  1424   0004D2                     PORTE           equ	1234	;# 
  1425   0004D6                     INTCON0         equ	1238	;# 
  1426   0004D7                     INTCON1         equ	1239	;# 
  1427   0004D8                     STATUS          equ	1240	;# 
  1428   0004D9                     FSR2            equ	1241	;# 
  1429   0004D9                     FSR2L           equ	1241	;# 
  1430   0004DA                     FSR2H           equ	1242	;# 
  1431   0004DB                     PLUSW2          equ	1243	;# 
  1432   0004DC                     PREINC2         equ	1244	;# 
  1433   0004DD                     POSTDEC2        equ	1245	;# 
  1434   0004DE                     POSTINC2        equ	1246	;# 
  1435   0004DF                     INDF2           equ	1247	;# 
  1436   0004E0                     BSR             equ	1248	;# 
  1437   0004E1                     FSR1            equ	1249	;# 
  1438   0004E1                     FSR1L           equ	1249	;# 
  1439   0004E2                     FSR1H           equ	1250	;# 
  1440   0004E3                     PLUSW1          equ	1251	;# 
  1441   0004E4                     PREINC1         equ	1252	;# 
  1442   0004E5                     POSTDEC1        equ	1253	;# 
  1443   0004E6                     POSTINC1        equ	1254	;# 
  1444   0004E7                     INDF1           equ	1255	;# 
  1445   0004E8                     WREG            equ	1256	;# 
  1446   0004E9                     FSR0            equ	1257	;# 
  1447   0004E9                     FSR0L           equ	1257	;# 
  1448   0004EA                     FSR0H           equ	1258	;# 
  1449   0004EB                     PLUSW0          equ	1259	;# 
  1450   0004EC                     PREINC0         equ	1260	;# 
  1451   0004ED                     POSTDEC0        equ	1261	;# 
  1452   0004EE                     POSTINC0        equ	1262	;# 
  1453   0004EF                     INDF0           equ	1263	;# 
  1454   0004F0                     PCON0           equ	1264	;# 
  1455   0004F1                     PCON1           equ	1265	;# 
  1456   0004F2                     CPUDOZE         equ	1266	;# 
  1457   0004F3                     PROD            equ	1267	;# 
  1458   0004F3                     PRODL           equ	1267	;# 
  1459   0004F4                     PRODH           equ	1268	;# 
  1460   0004F5                     TABLAT          equ	1269	;# 
  1461   0004F6                     TBLPTR          equ	1270	;# 
  1462   0004F6                     TBLPTRL         equ	1270	;# 
  1463   0004F7                     TBLPTRH         equ	1271	;# 
  1464   0004F8                     TBLPTRU         equ	1272	;# 
  1465   0004F9                     PCLAT           equ	1273	;# 
  1466   0004F9                     PCL             equ	1273	;# 
  1467   0004FA                     PCLATH          equ	1274	;# 
  1468   0004FB                     PCLATU          equ	1275	;# 
  1469   0004FC                     STKPTR          equ	1276	;# 
  1470   0004FD                     TOS             equ	1277	;# 
  1471   0004FD                     TOSL            equ	1277	;# 
  1472   0004FE                     TOSH            equ	1278	;# 
  1473   0004FF                     TOSU            equ	1279	;# 
  1474   000038                     BOOTREG         equ	56	;# 
  1475   000039                     CLKRCON         equ	57	;# 
  1476   00003A                     CLKRCLK         equ	58	;# 
  1477   000040                     NVMCON0         equ	64	;# 
  1478   000041                     NVMCON1         equ	65	;# 
  1479   000042                     NVMLOCK         equ	66	;# 
  1480   000043                     NVMADR          equ	67	;# 
  1481   000043                     NVMADRL         equ	67	;# 
  1482   000044                     NVMADRH         equ	68	;# 
  1483   000045                     NVMADRU         equ	69	;# 
  1484   000046                     NVMDAT          equ	70	;# 
  1485   000046                     NVMDATL         equ	70	;# 
  1486   000047                     NVMDATH         equ	71	;# 
  1487   000048                     VREGCON         equ	72	;# 
  1488   000049                     BORCON          equ	73	;# 
  1489   00004A                     HLVDCON0        equ	74	;# 
  1490   00004B                     HLVDCON1        equ	75	;# 
  1491   00004C                     ZCDCON          equ	76	;# 
  1492   000060                     PMD0            equ	96	;# 
  1493   000061                     PMD1            equ	97	;# 
  1494   000062                     PMD2            equ	98	;# 
  1495   000063                     PMD3            equ	99	;# 
  1496   000064                     PMD4            equ	100	;# 
  1497   000065                     PMD5            equ	101	;# 
  1498   000066                     PMD6            equ	102	;# 
  1499   000067                     PMD7            equ	103	;# 
  1500   000068                     PMD8            equ	104	;# 
  1501   00006A                     MD1CON0         equ	106	;# 
  1502   00006B                     MD1CON1         equ	107	;# 
  1503   00006C                     MD1SRC          equ	108	;# 
  1504   00006D                     MD1CARL         equ	109	;# 
  1505   00006E                     MD1CARH         equ	110	;# 
  1506   00006F                     CMOUT           equ	111	;# 
  1507   000070                     CM1CON0         equ	112	;# 
  1508   000071                     CM1CON1         equ	113	;# 
  1509   000072                     CM1NCH          equ	114	;# 
  1510   000073                     CM1PCH          equ	115	;# 
  1511   000074                     CM2CON0         equ	116	;# 
  1512   000075                     CM2CON1         equ	117	;# 
  1513   000076                     CM2NCH          equ	118	;# 
  1514   000077                     CM2PCH          equ	119	;# 
  1515   000078                     WDTCON0         equ	120	;# 
  1516   000079                     WDTCON1         equ	121	;# 
  1517   00007A                     WDTPSL          equ	122	;# 
  1518   00007B                     WDTPSH          equ	123	;# 
  1519   00007C                     WDTTMR          equ	124	;# 
  1520   00007D                     DAC1DAT         equ	125	;# 
  1521   00007D                     DAC1DATL        equ	125	;# 
  1522   00007F                     DAC1CON         equ	127	;# 
  1523   000080                     SPI1RXB         equ	128	;# 
  1524   000081                     SPI1TXB         equ	129	;# 
  1525   000082                     SPI1TCNT        equ	130	;# 
  1526   000082                     SPI1TCNTL       equ	130	;# 
  1527   000083                     SPI1TCNTH       equ	131	;# 
  1528   000084                     SPI1CON0        equ	132	;# 
  1529   000085                     SPI1CON1        equ	133	;# 
  1530   000086                     SPI1CON2        equ	134	;# 
  1531   000087                     SPI1STATUS      equ	135	;# 
  1532   000088                     SPI1TWIDTH      equ	136	;# 
  1533   000089                     SPI1BAUD        equ	137	;# 
  1534   00008A                     SPI1INTF        equ	138	;# 
  1535   00008B                     SPI1INTE        equ	139	;# 
  1536   00008C                     SPI1CLK         equ	140	;# 
  1537   00008D                     SPI2RXB         equ	141	;# 
  1538   00008E                     SPI2TXB         equ	142	;# 
  1539   00008F                     SPI2TCNT        equ	143	;# 
  1540   00008F                     SPI2TCNTL       equ	143	;# 
  1541   000090                     SPI2TCNTH       equ	144	;# 
  1542   000091                     SPI2CON0        equ	145	;# 
  1543   000092                     SPI2CON1        equ	146	;# 
  1544   000093                     SPI2CON2        equ	147	;# 
  1545   000094                     SPI2STATUS      equ	148	;# 
  1546   000095                     SPI2TWIDTH      equ	149	;# 
  1547   000096                     SPI2BAUD        equ	150	;# 
  1548   000097                     SPI2INTF        equ	151	;# 
  1549   000098                     SPI2INTE        equ	152	;# 
  1550   000099                     SPI2CLK         equ	153	;# 
  1551   0000AC                     ACTCON          equ	172	;# 
  1552   0000AD                     OSCCON1         equ	173	;# 
  1553   0000AE                     OSCCON2         equ	174	;# 
  1554   0000AF                     OSCCON3         equ	175	;# 
  1555   0000B0                     OSCTUNE         equ	176	;# 
  1556   0000B1                     OSCFRQ          equ	177	;# 
  1557   0000B1                     OSCFREQ         equ	177	;# 
  1558   0000B2                     OSCSTAT         equ	178	;# 
  1559   0000B2                     OSCSTAT1        equ	178	;# 
  1560   0000B3                     OSCEN           equ	179	;# 
  1561   0000B4                     PRLOCK          equ	180	;# 
  1562   0000B5                     SCANPR          equ	181	;# 
  1563   0000B6                     DMA1PR          equ	182	;# 
  1564   0000B7                     DMA2PR          equ	183	;# 
  1565   0000B8                     DMA3PR          equ	184	;# 
  1566   0000B9                     DMA4PR          equ	185	;# 
  1567   0000BA                     DMA5PR          equ	186	;# 
  1568   0000BB                     DMA6PR          equ	187	;# 
  1569   0000BC                     DMA7PR          equ	188	;# 
  1570   0000BD                     DMA8PR          equ	189	;# 
  1571   0000BE                     MAINPR          equ	190	;# 
  1572   0000BF                     ISRPR           equ	191	;# 
  1573   0000D4                     CLCDATA         equ	212	;# 
  1574   0000D5                     CLCSELECT       equ	213	;# 
  1575   0000D6                     CLCnCON         equ	214	;# 
  1576   0000D7                     CLCnPOL         equ	215	;# 
  1577   0000D8                     CLCnSEL0        equ	216	;# 
  1578   0000D9                     CLCnSEL1        equ	217	;# 
  1579   0000DA                     CLCnSEL2        equ	218	;# 
  1580   0000DB                     CLCnSEL3        equ	219	;# 
  1581   0000DC                     CLCnGLS0        equ	220	;# 
  1582   0000DD                     CLCnGLS1        equ	221	;# 
  1583   0000DE                     CLCnGLS2        equ	222	;# 
  1584   0000DF                     CLCnGLS3        equ	223	;# 
  1585   0000E8                     DMASELECT       equ	232	;# 
  1586   0000E9                     DMAnBUF         equ	233	;# 
  1587   0000EA                     DMAnDCNT        equ	234	;# 
  1588   0000EA                     DMAnDCNTL       equ	234	;# 
  1589   0000EB                     DMAnDCNTH       equ	235	;# 
  1590   0000EC                     DMAnDPTR        equ	236	;# 
  1591   0000EC                     DMAnDPTRL       equ	236	;# 
  1592   0000ED                     DMAnDPTRH       equ	237	;# 
  1593   0000EE                     DMAnDSZ         equ	238	;# 
  1594   0000EE                     DMAnDSZL        equ	238	;# 
  1595   0000EF                     DMAnDSZH        equ	239	;# 
  1596   0000F0                     DMAnDSA         equ	240	;# 
  1597   0000F0                     DMAnDSAL        equ	240	;# 
  1598   0000F1                     DMAnDSAH        equ	241	;# 
  1599   0000F2                     DMAnSCNT        equ	242	;# 
  1600   0000F2                     DMAnSCNTL       equ	242	;# 
  1601   0000F3                     DMAnSCNTH       equ	243	;# 
  1602   0000F4                     DMAnSPTR        equ	244	;# 
  1603   0000F4                     DMAnSPTRL       equ	244	;# 
  1604   0000F5                     DMAnSPTRH       equ	245	;# 
  1605   0000F6                     DMAnSPTRU       equ	246	;# 
  1606   0000F7                     DMAnSSZ         equ	247	;# 
  1607   0000F7                     DMAnSSZL        equ	247	;# 
  1608   0000F8                     DMAnSSZH        equ	248	;# 
  1609   0000F9                     DMAnSSA         equ	249	;# 
  1610   0000F9                     DMAnSSAL        equ	249	;# 
  1611   0000FA                     DMAnSSAH        equ	250	;# 
  1612   0000FB                     DMAnSSAU        equ	251	;# 
  1613   0000FC                     DMAnCON0        equ	252	;# 
  1614   0000FD                     DMAnCON1        equ	253	;# 
  1615   0000FE                     DMAnAIRQ        equ	254	;# 
  1616   0000FF                     DMAnSIRQ        equ	255	;# 
  1617   000100                     C1CONL          equ	256	;# 
  1618   000101                     C1CONH          equ	257	;# 
  1619   000102                     C1CONU          equ	258	;# 
  1620   000103                     C1CONT          equ	259	;# 
  1621   000104                     C1NBTCFGL       equ	260	;# 
  1622   000105                     C1NBTCFGH       equ	261	;# 
  1623   000106                     C1NBTCFGU       equ	262	;# 
  1624   000107                     C1NBTCFGT       equ	263	;# 
  1625   000108                     C1DBTCFGL       equ	264	;# 
  1626   000109                     C1DBTCFGH       equ	265	;# 
  1627   00010A                     C1DBTCFGU       equ	266	;# 
  1628   00010B                     C1DBTCFGT       equ	267	;# 
  1629   00010C                     C1TDCL          equ	268	;# 
  1630   00010D                     C1TDCH          equ	269	;# 
  1631   00010E                     C1TDCU          equ	270	;# 
  1632   000110                     C1TBC           equ	272	;# 
  1633   000110                     C1TBCL          equ	272	;# 
  1634   000111                     C1TBCH          equ	273	;# 
  1635   000112                     C1TBCU          equ	274	;# 
  1636   000113                     C1TBCT          equ	275	;# 
  1637   000114                     C1TSCONL        equ	276	;# 
  1638   000115                     C1TSCONH        equ	277	;# 
  1639   000116                     C1TSCONU        equ	278	;# 
  1640   000117                     C1TSCONT        equ	279	;# 
  1641   000118                     C1VECL          equ	280	;# 
  1642   000119                     C1VECH          equ	281	;# 
  1643   00011A                     C1VECU          equ	282	;# 
  1644   00011B                     C1VECT          equ	283	;# 
  1645   00011C                     C1INTL          equ	284	;# 
  1646   00011D                     C1INTH          equ	285	;# 
  1647   00011E                     C1INTU          equ	286	;# 
  1648   00011F                     C1INTT          equ	287	;# 
  1649   000120                     C1RXIF          equ	288	;# 
  1650   000120                     C1RXIFL         equ	288	;# 
  1651   000121                     C1RXIFH         equ	289	;# 
  1652   000122                     C1RXIFU         equ	290	;# 
  1653   000123                     C1RXIFT         equ	291	;# 
  1654   000124                     C1TXIF          equ	292	;# 
  1655   000124                     C1TXIFL         equ	292	;# 
  1656   000125                     C1TXIFH         equ	293	;# 
  1657   000126                     C1TXIFU         equ	294	;# 
  1658   000127                     C1TXIFT         equ	295	;# 
  1659   000128                     C1RXOVIF        equ	296	;# 
  1660   000128                     C1RXOVIFL       equ	296	;# 
  1661   000129                     C1RXOVIFH       equ	297	;# 
  1662   00012A                     C1RXOVIFU       equ	298	;# 
  1663   00012B                     C1RXOVIFT       equ	299	;# 
  1664   00012C                     C1TXATIF        equ	300	;# 
  1665   00012C                     C1TXATIFL       equ	300	;# 
  1666   00012D                     C1TXATIFH       equ	301	;# 
  1667   00012E                     C1TXATIFU       equ	302	;# 
  1668   00012F                     C1TXATIFT       equ	303	;# 
  1669   000130                     C1TXREQ         equ	304	;# 
  1670   000130                     C1TXREQL        equ	304	;# 
  1671   000131                     C1TXREQH        equ	305	;# 
  1672   000132                     C1TXREQU        equ	306	;# 
  1673   000133                     C1TXREQT        equ	307	;# 
  1674   000134                     C1TRECL         equ	308	;# 
  1675   000135                     C1TRECH         equ	309	;# 
  1676   000136                     C1TRECU         equ	310	;# 
  1677   000137                     C1TRECT         equ	311	;# 
  1678   000138                     C1BDIAG0L       equ	312	;# 
  1679   000139                     C1BDIAG0H       equ	313	;# 
  1680   00013C                     C1BDIAG1L       equ	316	;# 
  1681   00013D                     C1BDIAG1H       equ	317	;# 
  1682   00013E                     C1BDIAG1U       equ	318	;# 
  1683   00013F                     C1BDIAG1T       equ	319	;# 
  1684   000140                     C1TEFCONL       equ	320	;# 
  1685   000141                     C1TEFCONH       equ	321	;# 
  1686   000142                     C1TEFCONU       equ	322	;# 
  1687   000143                     C1TEFCONT       equ	323	;# 
  1688   000144                     C1TEFSTAL       equ	324	;# 
  1689   000145                     C1TEFSTAH       equ	325	;# 
  1690   000146                     C1TEFSTAU       equ	326	;# 
  1691   000147                     C1TEFSTAT       equ	327	;# 
  1692   000148                     C1TEFUA         equ	328	;# 
  1693   000148                     C1TEFUAL        equ	328	;# 
  1694   000149                     C1TEFUAH        equ	329	;# 
  1695   00014A                     C1TEFUAU        equ	330	;# 
  1696   00014B                     C1TEFUAT        equ	331	;# 
  1697   00014C                     C1FIFOBA        equ	332	;# 
  1698   00014C                     C1FIFOBAL       equ	332	;# 
  1699   00014D                     C1FIFOBAH       equ	333	;# 
  1700   00014E                     C1FIFOBAU       equ	334	;# 
  1701   00014F                     C1FIFOBAT       equ	335	;# 
  1702   000150                     C1TXQCONL       equ	336	;# 
  1703   000151                     C1TXQCONH       equ	337	;# 
  1704   000152                     C1TXQCONU       equ	338	;# 
  1705   000153                     C1TXQCONT       equ	339	;# 
  1706   000154                     C1TXQSTAL       equ	340	;# 
  1707   000155                     C1TXQSTAH       equ	341	;# 
  1708   000156                     C1TXQSTAU       equ	342	;# 
  1709   000157                     C1TXQSTAT       equ	343	;# 
  1710   000158                     C1TXQUA         equ	344	;# 
  1711   000158                     C1TXQUAL        equ	344	;# 
  1712   000159                     C1TXQUAH        equ	345	;# 
  1713   00015A                     C1TXQUAU        equ	346	;# 
  1714   00015B                     C1TXQUAT        equ	347	;# 
  1715   00015C                     C1FIFOCON1      equ	348	;# 
  1716   00015C                     C1FIFOCON1L     equ	348	;# 
  1717   00015D                     C1FIFOCON1H     equ	349	;# 
  1718   00015E                     C1FIFOCON1U     equ	350	;# 
  1719   00015F                     C1FIFOCON1T     equ	351	;# 
  1720   000160                     C1FIFOSTA1      equ	352	;# 
  1721   000160                     C1FIFOSTA1L     equ	352	;# 
  1722   000161                     C1FIFOSTA1H     equ	353	;# 
  1723   000162                     C1FIFOSTA1U     equ	354	;# 
  1724   000163                     C1FIFOSTA1T     equ	355	;# 
  1725   000164                     C1FIFOUA1       equ	356	;# 
  1726   000164                     C1FIFOUA1L      equ	356	;# 
  1727   000165                     C1FIFOUA1H      equ	357	;# 
  1728   000166                     C1FIFOUA1U      equ	358	;# 
  1729   000167                     C1FIFOUA1T      equ	359	;# 
  1730   000168                     C1FIFOCON2      equ	360	;# 
  1731   000168                     C1FIFOCON2L     equ	360	;# 
  1732   000169                     C1FIFOCON2H     equ	361	;# 
  1733   00016A                     C1FIFOCON2U     equ	362	;# 
  1734   00016B                     C1FIFOCON2T     equ	363	;# 
  1735   00016C                     C1FIFOSTA2      equ	364	;# 
  1736   00016C                     C1FIFOSTA2L     equ	364	;# 
  1737   00016D                     C1FIFOSTA2H     equ	365	;# 
  1738   00016E                     C1FIFOSTA2U     equ	366	;# 
  1739   00016F                     C1FIFOSTA2T     equ	367	;# 
  1740   000170                     C1FIFOUA2       equ	368	;# 
  1741   000170                     C1FIFOUA2L      equ	368	;# 
  1742   000171                     C1FIFOUA2H      equ	369	;# 
  1743   000172                     C1FIFOUA2U      equ	370	;# 
  1744   000173                     C1FIFOUA2T      equ	371	;# 
  1745   000174                     C1FIFOCON3      equ	372	;# 
  1746   000174                     C1FIFOCON3L     equ	372	;# 
  1747   000175                     C1FIFOCON3H     equ	373	;# 
  1748   000176                     C1FIFOCON3U     equ	374	;# 
  1749   000177                     C1FIFOCON3T     equ	375	;# 
  1750   000178                     C1FIFOSTA3      equ	376	;# 
  1751   000178                     C1FIFOSTA3L     equ	376	;# 
  1752   000179                     C1FIFOSTA3H     equ	377	;# 
  1753   00017A                     C1FIFOSTA3U     equ	378	;# 
  1754   00017B                     C1FIFOSTA3T     equ	379	;# 
  1755   00017C                     C1FIFOUA3       equ	380	;# 
  1756   00017C                     C1FIFOUA3L      equ	380	;# 
  1757   00017D                     C1FIFOUA3H      equ	381	;# 
  1758   00017E                     C1FIFOUA3U      equ	382	;# 
  1759   00017F                     C1FIFOUA3T      equ	383	;# 
  1760   000180                     C1FLTCON0L      equ	384	;# 
  1761   000181                     C1FLTCON0H      equ	385	;# 
  1762   000182                     C1FLTCON0U      equ	386	;# 
  1763   000183                     C1FLTCON0T      equ	387	;# 
  1764   000184                     C1FLTCON1L      equ	388	;# 
  1765   000185                     C1FLTCON1H      equ	389	;# 
  1766   000186                     C1FLTCON1U      equ	390	;# 
  1767   000187                     C1FLTCON1T      equ	391	;# 
  1768   000188                     C1FLTCON2L      equ	392	;# 
  1769   000189                     C1FLTCON2H      equ	393	;# 
  1770   00018A                     C1FLTCON2U      equ	394	;# 
  1771   00018B                     C1FLTCON2T      equ	395	;# 
  1772   00018C                     C1FLTOBJ0       equ	396	;# 
  1773   00018C                     C1FLTOBJ0L      equ	396	;# 
  1774   00018D                     C1FLTOBJ0H      equ	397	;# 
  1775   00018E                     C1FLTOBJ0U      equ	398	;# 
  1776   00018F                     C1FLTOBJ0T      equ	399	;# 
  1777   000190                     C1MASK0         equ	400	;# 
  1778   000190                     C1MASK0L        equ	400	;# 
  1779   000191                     C1MASK0H        equ	401	;# 
  1780   000192                     C1MASK0U        equ	402	;# 
  1781   000193                     C1MASK0T        equ	403	;# 
  1782   000194                     C1FLTOBJ1       equ	404	;# 
  1783   000194                     C1FLTOBJ1L      equ	404	;# 
  1784   000195                     C1FLTOBJ1H      equ	405	;# 
  1785   000196                     C1FLTOBJ1U      equ	406	;# 
  1786   000197                     C1FLTOBJ1T      equ	407	;# 
  1787   000198                     C1MASK1         equ	408	;# 
  1788   000198                     C1MASK1L        equ	408	;# 
  1789   000199                     C1MASK1H        equ	409	;# 
  1790   00019A                     C1MASK1U        equ	410	;# 
  1791   00019B                     C1MASK1T        equ	411	;# 
  1792   00019C                     C1FLTOBJ2       equ	412	;# 
  1793   00019C                     C1FLTOBJ2L      equ	412	;# 
  1794   00019D                     C1FLTOBJ2H      equ	413	;# 
  1795   00019E                     C1FLTOBJ2U      equ	414	;# 
  1796   00019F                     C1FLTOBJ2T      equ	415	;# 
  1797   0001A0                     C1MASK2         equ	416	;# 
  1798   0001A0                     C1MASK2L        equ	416	;# 
  1799   0001A1                     C1MASK2H        equ	417	;# 
  1800   0001A2                     C1MASK2U        equ	418	;# 
  1801   0001A3                     C1MASK2T        equ	419	;# 
  1802   0001A4                     C1FLTOBJ3       equ	420	;# 
  1803   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1804   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1805   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1806   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1807   0001A8                     C1MASK3         equ	424	;# 
  1808   0001A8                     C1MASK3L        equ	424	;# 
  1809   0001A9                     C1MASK3H        equ	425	;# 
  1810   0001AA                     C1MASK3U        equ	426	;# 
  1811   0001AB                     C1MASK3T        equ	427	;# 
  1812   0001AC                     C1FLTOBJ4       equ	428	;# 
  1813   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1814   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1815   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1816   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1817   0001B0                     C1MASK4         equ	432	;# 
  1818   0001B0                     C1MASK4L        equ	432	;# 
  1819   0001B1                     C1MASK4H        equ	433	;# 
  1820   0001B2                     C1MASK4U        equ	434	;# 
  1821   0001B3                     C1MASK4T        equ	435	;# 
  1822   0001B4                     C1FLTOBJ5       equ	436	;# 
  1823   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1824   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1825   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1826   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1827   0001B8                     C1MASK5         equ	440	;# 
  1828   0001B8                     C1MASK5L        equ	440	;# 
  1829   0001B9                     C1MASK5H        equ	441	;# 
  1830   0001BA                     C1MASK5U        equ	442	;# 
  1831   0001BB                     C1MASK5T        equ	443	;# 
  1832   0001BC                     C1FLTOBJ6       equ	444	;# 
  1833   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1834   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1835   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1836   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1837   0001C0                     C1MASK6         equ	448	;# 
  1838   0001C0                     C1MASK6L        equ	448	;# 
  1839   0001C1                     C1MASK6H        equ	449	;# 
  1840   0001C2                     C1MASK6U        equ	450	;# 
  1841   0001C3                     C1MASK6T        equ	451	;# 
  1842   0001C4                     C1FLTOBJ7       equ	452	;# 
  1843   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1844   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1845   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1846   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1847   0001C8                     C1MASK7         equ	456	;# 
  1848   0001C8                     C1MASK7L        equ	456	;# 
  1849   0001C9                     C1MASK7H        equ	457	;# 
  1850   0001CA                     C1MASK7U        equ	458	;# 
  1851   0001CB                     C1MASK7T        equ	459	;# 
  1852   0001CC                     C1FLTOBJ8       equ	460	;# 
  1853   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1854   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1855   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1856   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1857   0001D0                     C1MASK8         equ	464	;# 
  1858   0001D0                     C1MASK8L        equ	464	;# 
  1859   0001D1                     C1MASK8H        equ	465	;# 
  1860   0001D2                     C1MASK8U        equ	466	;# 
  1861   0001D3                     C1MASK8T        equ	467	;# 
  1862   0001D4                     C1FLTOBJ9       equ	468	;# 
  1863   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1864   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1865   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1866   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1867   0001D8                     C1MASK9         equ	472	;# 
  1868   0001D8                     C1MASK9L        equ	472	;# 
  1869   0001D9                     C1MASK9H        equ	473	;# 
  1870   0001DA                     C1MASK9U        equ	474	;# 
  1871   0001DB                     C1MASK9T        equ	475	;# 
  1872   0001DC                     C1FLTOBJ10      equ	476	;# 
  1873   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1874   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1875   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1876   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1877   0001E0                     C1MASK10        equ	480	;# 
  1878   0001E0                     C1MASK10L       equ	480	;# 
  1879   0001E1                     C1MASK10H       equ	481	;# 
  1880   0001E2                     C1MASK10U       equ	482	;# 
  1881   0001E3                     C1MASK10T       equ	483	;# 
  1882   0001E4                     C1FLTOBJ11      equ	484	;# 
  1883   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1884   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1885   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1886   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1887   0001E8                     C1MASK11        equ	488	;# 
  1888   0001E8                     C1MASK11L       equ	488	;# 
  1889   0001E9                     C1MASK11H       equ	489	;# 
  1890   0001EA                     C1MASK11U       equ	490	;# 
  1891   0001EB                     C1MASK11T       equ	491	;# 
  1892   000200                     PPSLOCK         equ	512	;# 
  1893   000201                     RA0PPS          equ	513	;# 
  1894   000202                     RA1PPS          equ	514	;# 
  1895   000203                     RA2PPS          equ	515	;# 
  1896   000204                     RA3PPS          equ	516	;# 
  1897   000205                     RA4PPS          equ	517	;# 
  1898   000206                     RA5PPS          equ	518	;# 
  1899   000207                     RA6PPS          equ	519	;# 
  1900   000208                     RA7PPS          equ	520	;# 
  1901   000209                     RB0PPS          equ	521	;# 
  1902   00020A                     RB1PPS          equ	522	;# 
  1903   00020B                     RB2PPS          equ	523	;# 
  1904   00020C                     RB3PPS          equ	524	;# 
  1905   00020D                     RB4PPS          equ	525	;# 
  1906   00020E                     RB5PPS          equ	526	;# 
  1907   00020F                     RB6PPS          equ	527	;# 
  1908   000210                     RB7PPS          equ	528	;# 
  1909   000211                     RC0PPS          equ	529	;# 
  1910   000212                     RC1PPS          equ	530	;# 
  1911   000213                     RC2PPS          equ	531	;# 
  1912   000214                     RC3PPS          equ	532	;# 
  1913   000215                     RC4PPS          equ	533	;# 
  1914   000216                     RC5PPS          equ	534	;# 
  1915   000217                     RC6PPS          equ	535	;# 
  1916   000218                     RC7PPS          equ	536	;# 
  1917   000219                     RD0PPS          equ	537	;# 
  1918   00021A                     RD1PPS          equ	538	;# 
  1919   00021B                     RD2PPS          equ	539	;# 
  1920   00021C                     RD3PPS          equ	540	;# 
  1921   00021D                     RD4PPS          equ	541	;# 
  1922   00021E                     RD5PPS          equ	542	;# 
  1923   00021F                     RD6PPS          equ	543	;# 
  1924   000220                     RD7PPS          equ	544	;# 
  1925   000221                     RE0PPS          equ	545	;# 
  1926   000222                     RE1PPS          equ	546	;# 
  1927   000223                     RE2PPS          equ	547	;# 
  1928   00023D                     CANRXPPS        equ	573	;# 
  1929   00023E                     INT0PPS         equ	574	;# 
  1930   00023F                     INT1PPS         equ	575	;# 
  1931   000240                     INT2PPS         equ	576	;# 
  1932   000241                     T0CKIPPS        equ	577	;# 
  1933   000242                     T1CKIPPS        equ	578	;# 
  1934   000243                     T1GPPS          equ	579	;# 
  1935   000244                     T3CKIPPS        equ	580	;# 
  1936   000245                     T3GPPS          equ	581	;# 
  1937   000246                     T5CKIPPS        equ	582	;# 
  1938   000247                     T5GPPS          equ	583	;# 
  1939   000248                     T2INPPS         equ	584	;# 
  1940   000249                     T4INPPS         equ	585	;# 
  1941   00024A                     T6INPPS         equ	586	;# 
  1942   00024B                     TUIN0PPS        equ	587	;# 
  1943   00024C                     TUIN1PPS        equ	588	;# 
  1944   00024F                     CCP1PPS         equ	591	;# 
  1945   000250                     CCP2PPS         equ	592	;# 
  1946   000251                     CCP3PPS         equ	593	;# 
  1947   000253                     PWM1ERSPPS      equ	595	;# 
  1948   000254                     PWM2ERSPPS      equ	596	;# 
  1949   000255                     PWM3ERSPPS      equ	597	;# 
  1950   000256                     PWM4ERSPPS      equ	598	;# 
  1951   000257                     PWMIN0PPS       equ	599	;# 
  1952   000258                     PWMIN1PPS       equ	600	;# 
  1953   000259                     SMT1WINPPS      equ	601	;# 
  1954   00025A                     SMT1SIGPPS      equ	602	;# 
  1955   00025B                     CWG1PPS         equ	603	;# 
  1956   00025B                     CWG1INPPS       equ	603	;# 
  1957   00025C                     CWG2PPS         equ	604	;# 
  1958   00025C                     CWG2INPPS       equ	604	;# 
  1959   00025D                     CWG3PPS         equ	605	;# 
  1960   00025D                     CWG3INPPS       equ	605	;# 
  1961   00025E                     MD1CARLPPS      equ	606	;# 
  1962   00025E                     MDCARLPPS       equ	606	;# 
  1963   00025F                     MD1CARHPPS      equ	607	;# 
  1964   00025F                     MDCARHPPS       equ	607	;# 
  1965   000260                     MD1SRCPPS       equ	608	;# 
  1966   000260                     MDSRCPPS        equ	608	;# 
  1967   000261                     CLCIN0PPS       equ	609	;# 
  1968   000262                     CLCIN1PPS       equ	610	;# 
  1969   000263                     CLCIN2PPS       equ	611	;# 
  1970   000264                     CLCIN3PPS       equ	612	;# 
  1971   000265                     CLCIN4PPS       equ	613	;# 
  1972   000266                     CLCIN5PPS       equ	614	;# 
  1973   000267                     CLCIN6PPS       equ	615	;# 
  1974   000268                     CLCIN7PPS       equ	616	;# 
  1975   000269                     ADACTPPS        equ	617	;# 
  1976   00026A                     SPI1SCKPPS      equ	618	;# 
  1977   00026B                     SPI1SDIPPS      equ	619	;# 
  1978   00026C                     SPI1SSPPS       equ	620	;# 
  1979   00026D                     SPI2SCKPPS      equ	621	;# 
  1980   00026E                     SPI2SDIPPS      equ	622	;# 
  1981   00026F                     SPI2SSPPS       equ	623	;# 
  1982   000270                     I2C1SDAPPS      equ	624	;# 
  1983   000271                     I2C1SCLPPS      equ	625	;# 
  1984   000272                     U1RXPPS         equ	626	;# 
  1985   000273                     U1CTSPPS        equ	627	;# 
  1986   000274                     U2RXPPS         equ	628	;# 
  1987   000275                     U2CTSPPS        equ	629	;# 
  1988   000276                     U3RXPPS         equ	630	;# 
  1989   000277                     U3CTSPPS        equ	631	;# 
  1990   000278                     U4RXPPS         equ	632	;# 
  1991   000279                     U4CTSPPS        equ	633	;# 
  1992   00027A                     U5RXPPS         equ	634	;# 
  1993   00027B                     U5CTSPPS        equ	635	;# 
  1994   000286                     RC4I2C          equ	646	;# 
  1995   000287                     RC3I2C          equ	647	;# 
  1996   000288                     RB2I2C          equ	648	;# 
  1997   000289                     RB1I2C          equ	649	;# 
  1998   00028A                     I2C1RXB         equ	650	;# 
  1999   00028B                     I2C1TXB         equ	651	;# 
  2000   00028C                     I2C1CNTL        equ	652	;# 
  2001   00028D                     I2C1CNTH        equ	653	;# 
  2002   00028E                     I2C1ADB0        equ	654	;# 
  2003   00028F                     I2C1ADB1        equ	655	;# 
  2004   000290                     I2C1ADR0        equ	656	;# 
  2005   000291                     I2C1ADR1        equ	657	;# 
  2006   000292                     I2C1ADR2        equ	658	;# 
  2007   000293                     I2C1ADR3        equ	659	;# 
  2008   000294                     I2C1CON0        equ	660	;# 
  2009   000295                     I2C1CON1        equ	661	;# 
  2010   000296                     I2C1CON2        equ	662	;# 
  2011   000297                     I2C1ERR         equ	663	;# 
  2012   000298                     I2C1STAT0       equ	664	;# 
  2013   000299                     I2C1STAT1       equ	665	;# 
  2014   00029A                     I2C1PIR         equ	666	;# 
  2015   00029B                     I2C1PIE         equ	667	;# 
  2016   00029C                     I2C1BTO         equ	668	;# 
  2017   00029D                     I2C1BAUD        equ	669	;# 
  2018   00029E                     I2C1CLK         equ	670	;# 
  2019   00029F                     I2C1BTOC        equ	671	;# 
  2020   0002A1                     U1RXB           equ	673	;# 
  2021   0002A1                     U1RXBL          equ	673	;# 
  2022   0002A2                     U1RXCHK         equ	674	;# 
  2023   0002A3                     U1TXB           equ	675	;# 
  2024   0002A3                     U1TXBL          equ	675	;# 
  2025   0002A4                     U1TXCHK         equ	676	;# 
  2026   0002A5                     U1P1            equ	677	;# 
  2027   0002A5                     U1P1L           equ	677	;# 
  2028   0002A6                     U1P1H           equ	678	;# 
  2029   0002A7                     U1P2            equ	679	;# 
  2030   0002A7                     U1P2L           equ	679	;# 
  2031   0002A8                     U1P2H           equ	680	;# 
  2032   0002A9                     U1P3            equ	681	;# 
  2033   0002A9                     U1P3L           equ	681	;# 
  2034   0002AA                     U1P3H           equ	682	;# 
  2035   0002AB                     U1CON0          equ	683	;# 
  2036   0002AC                     U1CON1          equ	684	;# 
  2037   0002AD                     U1CON2          equ	685	;# 
  2038   0002AE                     U1BRG           equ	686	;# 
  2039   0002AE                     U1BRGL          equ	686	;# 
  2040   0002AF                     U1BRGH          equ	687	;# 
  2041   0002B0                     U1FIFO          equ	688	;# 
  2042   0002B1                     U1UIR           equ	689	;# 
  2043   0002B2                     U1ERRIR         equ	690	;# 
  2044   0002B3                     U1ERRIE         equ	691	;# 
  2045   0002B4                     U2RXB           equ	692	;# 
  2046   0002B4                     U2RXBL          equ	692	;# 
  2047   0002B5                     U2RXCHK         equ	693	;# 
  2048   0002B6                     U2TXB           equ	694	;# 
  2049   0002B6                     U2TXBL          equ	694	;# 
  2050   0002B7                     U2TXCHK         equ	695	;# 
  2051   0002B8                     U2P1            equ	696	;# 
  2052   0002B8                     U2P1L           equ	696	;# 
  2053   0002B9                     U2P1H           equ	697	;# 
  2054   0002BA                     U2P2            equ	698	;# 
  2055   0002BA                     U2P2L           equ	698	;# 
  2056   0002BB                     U2P2H           equ	699	;# 
  2057   0002BC                     U2P3            equ	700	;# 
  2058   0002BC                     U2P3L           equ	700	;# 
  2059   0002BD                     U2P3H           equ	701	;# 
  2060   0002BE                     U2CON0          equ	702	;# 
  2061   0002BF                     U2CON1          equ	703	;# 
  2062   0002C0                     U2CON2          equ	704	;# 
  2063   0002C1                     U2BRG           equ	705	;# 
  2064   0002C1                     U2BRGL          equ	705	;# 
  2065   0002C2                     U2BRGH          equ	706	;# 
  2066   0002C3                     U2FIFO          equ	707	;# 
  2067   0002C4                     U2UIR           equ	708	;# 
  2068   0002C5                     U2ERRIR         equ	709	;# 
  2069   0002C6                     U2ERRIE         equ	710	;# 
  2070   0002C7                     U3RXB           equ	711	;# 
  2071   0002C7                     U3RXBL          equ	711	;# 
  2072   0002C9                     U3TXB           equ	713	;# 
  2073   0002C9                     U3TXBL          equ	713	;# 
  2074   0002CB                     U3P1            equ	715	;# 
  2075   0002CB                     U3P1L           equ	715	;# 
  2076   0002CD                     U3P2            equ	717	;# 
  2077   0002CD                     U3P2L           equ	717	;# 
  2078   0002CF                     U3P3            equ	719	;# 
  2079   0002CF                     U3P3L           equ	719	;# 
  2080   0002D1                     U3CON0          equ	721	;# 
  2081   0002D2                     U3CON1          equ	722	;# 
  2082   0002D3                     U3CON2          equ	723	;# 
  2083   0002D4                     U3BRG           equ	724	;# 
  2084   0002D4                     U3BRGL          equ	724	;# 
  2085   0002D5                     U3BRGH          equ	725	;# 
  2086   0002D6                     U3FIFO          equ	726	;# 
  2087   0002D7                     U3UIR           equ	727	;# 
  2088   0002D8                     U3ERRIR         equ	728	;# 
  2089   0002D9                     U3ERRIE         equ	729	;# 
  2090   0002DA                     U4RXB           equ	730	;# 
  2091   0002DA                     U4RXBL          equ	730	;# 
  2092   0002DC                     U4TXB           equ	732	;# 
  2093   0002DC                     U4TXBL          equ	732	;# 
  2094   0002DE                     U4P1            equ	734	;# 
  2095   0002DE                     U4P1L           equ	734	;# 
  2096   0002E0                     U4P2            equ	736	;# 
  2097   0002E0                     U4P2L           equ	736	;# 
  2098   0002E2                     U4P3            equ	738	;# 
  2099   0002E2                     U4P3L           equ	738	;# 
  2100   0002E4                     U4CON0          equ	740	;# 
  2101   0002E5                     U4CON1          equ	741	;# 
  2102   0002E6                     U4CON2          equ	742	;# 
  2103   0002E7                     U4BRG           equ	743	;# 
  2104   0002E7                     U4BRGL          equ	743	;# 
  2105   0002E8                     U4BRGH          equ	744	;# 
  2106   0002E9                     U4FIFO          equ	745	;# 
  2107   0002EA                     U4UIR           equ	746	;# 
  2108   0002EB                     U4ERRIR         equ	747	;# 
  2109   0002EC                     U4ERRIE         equ	748	;# 
  2110   0002ED                     U5RXB           equ	749	;# 
  2111   0002ED                     U5RXBL          equ	749	;# 
  2112   0002EF                     U5TXB           equ	751	;# 
  2113   0002EF                     U5TXBL          equ	751	;# 
  2114   0002F1                     U5P1            equ	753	;# 
  2115   0002F1                     U5P1L           equ	753	;# 
  2116   0002F3                     U5P2            equ	755	;# 
  2117   0002F3                     U5P2L           equ	755	;# 
  2118   0002F5                     U5P3            equ	757	;# 
  2119   0002F5                     U5P3L           equ	757	;# 
  2120   0002F7                     U5CON0          equ	759	;# 
  2121   0002F8                     U5CON1          equ	760	;# 
  2122   0002F9                     U5CON2          equ	761	;# 
  2123   0002FA                     U5BRG           equ	762	;# 
  2124   0002FA                     U5BRGL          equ	762	;# 
  2125   0002FB                     U5BRGH          equ	763	;# 
  2126   0002FC                     U5FIFO          equ	764	;# 
  2127   0002FD                     U5UIR           equ	765	;# 
  2128   0002FE                     U5ERRIR         equ	766	;# 
  2129   0002FF                     U5ERRIE         equ	767	;# 
  2130   000300                     SMT1TMR         equ	768	;# 
  2131   000300                     SMT1TMRL        equ	768	;# 
  2132   000301                     SMT1TMRH        equ	769	;# 
  2133   000302                     SMT1TMRU        equ	770	;# 
  2134   000303                     SMT1CPR         equ	771	;# 
  2135   000303                     SMT1CPRL        equ	771	;# 
  2136   000304                     SMT1CPRH        equ	772	;# 
  2137   000305                     SMT1CPRU        equ	773	;# 
  2138   000306                     SMT1CPW         equ	774	;# 
  2139   000306                     SMT1CPWL        equ	774	;# 
  2140   000307                     SMT1CPWH        equ	775	;# 
  2141   000308                     SMT1CPWU        equ	776	;# 
  2142   000309                     SMT1PR          equ	777	;# 
  2143   000309                     SMT1PRL         equ	777	;# 
  2144   00030A                     SMT1PRH         equ	778	;# 
  2145   00030B                     SMT1PRU         equ	779	;# 
  2146   00030C                     SMT1CON0        equ	780	;# 
  2147   00030D                     SMT1CON1        equ	781	;# 
  2148   00030E                     SMT1STAT        equ	782	;# 
  2149   00030F                     SMT1CLK         equ	783	;# 
  2150   000310                     SMT1SIG         equ	784	;# 
  2151   000311                     SMT1WIN         equ	785	;# 
  2152   000318                     TMR0L           equ	792	;# 
  2153   000318                     TMR0            equ	792	;# 
  2154   000319                     TMR0H           equ	793	;# 
  2155   000319                     PR0             equ	793	;# 
  2156   00031A                     T0CON0          equ	794	;# 
  2157   00031B                     T0CON1          equ	795	;# 
  2158   00031C                     TMR1            equ	796	;# 
  2159   00031C                     TMR1L           equ	796	;# 
  2160   00031D                     TMR1H           equ	797	;# 
  2161   00031E                     T1CON           equ	798	;# 
  2162   00031E                     TMR1CON         equ	798	;# 
  2163   00031F                     T1GCON          equ	799	;# 
  2164   00031F                     TMR1GCON        equ	799	;# 
  2165   000320                     T1GATE          equ	800	;# 
  2166   000320                     TMR1GATE        equ	800	;# 
  2167   000321                     T1CLK           equ	801	;# 
  2168   000321                     TMR1CLK         equ	801	;# 
  2169   000321                     PR1             equ	801	;# 
  2170   000322                     T2TMR           equ	802	;# 
  2171   000322                     TMR2            equ	802	;# 
  2172   000323                     T2PR            equ	803	;# 
  2173   000323                     PR2             equ	803	;# 
  2174   000324                     T2CON           equ	804	;# 
  2175   000325                     T2HLT           equ	805	;# 
  2176   000326                     T2CLKCON        equ	806	;# 
  2177   000326                     T2CLK           equ	806	;# 
  2178   000327                     T2RST           equ	807	;# 
  2179   000328                     TMR3            equ	808	;# 
  2180   000328                     TMR3L           equ	808	;# 
  2181   000329                     TMR3H           equ	809	;# 
  2182   00032A                     T3CON           equ	810	;# 
  2183   00032A                     TMR3CON         equ	810	;# 
  2184   00032B                     T3GCON          equ	811	;# 
  2185   00032B                     TMR3GCON        equ	811	;# 
  2186   00032C                     T3GATE          equ	812	;# 
  2187   00032C                     TMR3GATE        equ	812	;# 
  2188   00032D                     T3CLK           equ	813	;# 
  2189   00032D                     TMR3CLK         equ	813	;# 
  2190   00032D                     PR3             equ	813	;# 
  2191   00032E                     T4TMR           equ	814	;# 
  2192   00032E                     TMR4            equ	814	;# 
  2193   00032F                     T4PR            equ	815	;# 
  2194   00032F                     PR4             equ	815	;# 
  2195   000330                     T4CON           equ	816	;# 
  2196   000331                     T4HLT           equ	817	;# 
  2197   000332                     T4CLKCON        equ	818	;# 
  2198   000332                     T4CLK           equ	818	;# 
  2199   000333                     T4RST           equ	819	;# 
  2200   000334                     TMR5            equ	820	;# 
  2201   000334                     TMR5L           equ	820	;# 
  2202   000335                     TMR5H           equ	821	;# 
  2203   000336                     T5CON           equ	822	;# 
  2204   000336                     TMR5CON         equ	822	;# 
  2205   000337                     T5GCON          equ	823	;# 
  2206   000337                     TMR5GCON        equ	823	;# 
  2207   000338                     T5GATE          equ	824	;# 
  2208   000338                     TMR5GATE        equ	824	;# 
  2209   000339                     T5CLK           equ	825	;# 
  2210   000339                     TMR5CLK         equ	825	;# 
  2211   000339                     PR5             equ	825	;# 
  2212   00033A                     T6TMR           equ	826	;# 
  2213   00033A                     TMR6            equ	826	;# 
  2214   00033B                     T6PR            equ	827	;# 
  2215   00033B                     PR6             equ	827	;# 
  2216   00033C                     T6CON           equ	828	;# 
  2217   00033D                     T6HLT           equ	829	;# 
  2218   00033E                     T6CLKCON        equ	830	;# 
  2219   00033E                     T6CLK           equ	830	;# 
  2220   00033F                     T6RST           equ	831	;# 
  2221   000340                     CCPR1           equ	832	;# 
  2222   000340                     CCPR1L          equ	832	;# 
  2223   000341                     CCPR1H          equ	833	;# 
  2224   000342                     CCP1CON         equ	834	;# 
  2225   000343                     CCP1CAP         equ	835	;# 
  2226   000344                     CCPR2           equ	836	;# 
  2227   000344                     CCPR2L          equ	836	;# 
  2228   000345                     CCPR2H          equ	837	;# 
  2229   000346                     CCP2CON         equ	838	;# 
  2230   000347                     CCP2CAP         equ	839	;# 
  2231   000348                     CCPR3           equ	840	;# 
  2232   000348                     CCPR3L          equ	840	;# 
  2233   000349                     CCPR3H          equ	841	;# 
  2234   00034A                     CCP3CON         equ	842	;# 
  2235   00034B                     CCP3CAP         equ	843	;# 
  2236   00034C                     CCPTMRS0        equ	844	;# 
  2237   00034F                     CRCDATA         equ	847	;# 
  2238   00034F                     CRCDATAL        equ	847	;# 
  2239   000350                     CRCDATAH        equ	848	;# 
  2240   000351                     CRCDATAU        equ	849	;# 
  2241   000352                     CRCDATAT        equ	850	;# 
  2242   000353                     CRCOUT          equ	851	;# 
  2243   000353                     CRCSHFT         equ	851	;# 
  2244   000353                     CRCXOR          equ	851	;# 
  2245   000353                     CRCOUTL         equ	851	;# 
  2246   000353                     CRCSHFTL        equ	851	;# 
  2247   000353                     CRCSHIFTL       equ	851	;# 
  2248   000353                     CRCXORL         equ	851	;# 
  2249   000354                     CRCOUTH         equ	852	;# 
  2250   000354                     CRCSHFTH        equ	852	;# 
  2251   000354                     CRCSHIFTH       equ	852	;# 
  2252   000354                     CRCXORH         equ	852	;# 
  2253   000355                     CRCOUTU         equ	853	;# 
  2254   000355                     CRCSHFTU        equ	853	;# 
  2255   000355                     CRCSHIFTU       equ	853	;# 
  2256   000355                     CRCXORU         equ	853	;# 
  2257   000356                     CRCOUTT         equ	854	;# 
  2258   000356                     CRCSHFTT        equ	854	;# 
  2259   000356                     CRCSHIFTT       equ	854	;# 
  2260   000356                     CRCXORT         equ	854	;# 
  2261   000357                     CRCCON0         equ	855	;# 
  2262   000358                     CRCCON1         equ	856	;# 
  2263   000359                     CRCCON2         equ	857	;# 
  2264   00035A                     SCANLADR        equ	858	;# 
  2265   00035A                     SCANLADRL       equ	858	;# 
  2266   00035B                     SCANLADRH       equ	859	;# 
  2267   00035C                     SCANLADRU       equ	860	;# 
  2268   00035D                     SCANHADR        equ	861	;# 
  2269   00035D                     SCANHADRL       equ	861	;# 
  2270   00035E                     SCANHADRH       equ	862	;# 
  2271   00035F                     SCANHADRU       equ	863	;# 
  2272   000360                     SCANCON0        equ	864	;# 
  2273   000361                     SCANTRIG        equ	865	;# 
  2274   000362                     IPR0            equ	866	;# 
  2275   000363                     IPR1            equ	867	;# 
  2276   000364                     IPR2            equ	868	;# 
  2277   000365                     IPR3            equ	869	;# 
  2278   000366                     IPR4            equ	870	;# 
  2279   000367                     IPR5            equ	871	;# 
  2280   000368                     IPR6            equ	872	;# 
  2281   000369                     IPR7            equ	873	;# 
  2282   00036A                     IPR8            equ	874	;# 
  2283   00036B                     IPR9            equ	875	;# 
  2284   00036C                     IPR10           equ	876	;# 
  2285   00036D                     IPR11           equ	877	;# 
  2286   00036E                     IPR12           equ	878	;# 
  2287   00036F                     IPR13           equ	879	;# 
  2288   000370                     IPR14           equ	880	;# 
  2289   000371                     IPR15           equ	881	;# 
  2290   000373                     STATUS_CSHAD    equ	883	;# 
  2291   000374                     WREG_CSHAD      equ	884	;# 
  2292   000375                     BSR_CSHAD       equ	885	;# 
  2293   000376                     SHADCON         equ	886	;# 
  2294   000377                     STATUS_SHAD     equ	887	;# 
  2295   000378                     WREG_SHAD       equ	888	;# 
  2296   000379                     BSR_SHAD        equ	889	;# 
  2297   00037A                     PCLATH_SHAD     equ	890	;# 
  2298   00037B                     PCLATU_SHAD     equ	891	;# 
  2299   00037C                     FSR0SH          equ	892	;# 
  2300   00037C                     FSR0L_SHAD      equ	892	;# 
  2301   00037D                     FSR0H_SHAD      equ	893	;# 
  2302   00037E                     FSR1SH          equ	894	;# 
  2303   00037E                     FSR1L_SHAD      equ	894	;# 
  2304   00037F                     FSR1H_SHAD      equ	895	;# 
  2305   000380                     FSR2SH          equ	896	;# 
  2306   000380                     FSR2L_SHAD      equ	896	;# 
  2307   000381                     FSR2H_SHAD      equ	897	;# 
  2308   000382                     PRODSH          equ	898	;# 
  2309   000382                     PRODL_SHAD      equ	898	;# 
  2310   000383                     PRODH_SHAD      equ	899	;# 
  2311   000387                     TU16ACON0       equ	903	;# 
  2312   000388                     TU16ACON1       equ	904	;# 
  2313   000389                     TU16AHLT        equ	905	;# 
  2314   00038A                     TU16APS         equ	906	;# 
  2315   00038B                     TU16ATMR        equ	907	;# 
  2316   00038B                     TU16ACR         equ	907	;# 
  2317   00038B                     TU16ATMRL       equ	907	;# 
  2318   00038B                     TU16ACRL        equ	907	;# 
  2319   00038C                     TU16ATMRH       equ	908	;# 
  2320   00038C                     TU16ACRH        equ	908	;# 
  2321   00038D                     TU16APR         equ	909	;# 
  2322   00038D                     TU16APRL        equ	909	;# 
  2323   00038E                     TU16APRH        equ	910	;# 
  2324   00038F                     TU16ACLK        equ	911	;# 
  2325   000390                     TU16AERS        equ	912	;# 
  2326   000393                     TU16BCON0       equ	915	;# 
  2327   000394                     TU16BCON1       equ	916	;# 
  2328   000395                     TU16BHLT        equ	917	;# 
  2329   000396                     TU16BPS         equ	918	;# 
  2330   000397                     TU16BTMR        equ	919	;# 
  2331   000397                     TU16BCR         equ	919	;# 
  2332   000397                     TU16BTMRL       equ	919	;# 
  2333   000397                     TU16BCRL        equ	919	;# 
  2334   000398                     TU16BTMRH       equ	920	;# 
  2335   000398                     TU16BCRH        equ	920	;# 
  2336   000399                     TU16BPR         equ	921	;# 
  2337   000399                     TU16BPRL        equ	921	;# 
  2338   00039A                     TU16BPRH        equ	922	;# 
  2339   00039B                     TU16BCLK        equ	923	;# 
  2340   00039C                     TU16BERS        equ	924	;# 
  2341   0003BB                     TUCHAIN         equ	955	;# 
  2342   0003BC                     CWG1CLK         equ	956	;# 
  2343   0003BC                     CWG1CLKCON      equ	956	;# 
  2344   0003BD                     CWG1ISM         equ	957	;# 
  2345   0003BE                     CWG1DBR         equ	958	;# 
  2346   0003BF                     CWG1DBF         equ	959	;# 
  2347   0003C0                     CWG1CON0        equ	960	;# 
  2348   0003C1                     CWG1CON1        equ	961	;# 
  2349   0003C2                     CWG1AS0         equ	962	;# 
  2350   0003C3                     CWG1AS1         equ	963	;# 
  2351   0003C4                     CWG1STR         equ	964	;# 
  2352   0003C5                     CWG2CLK         equ	965	;# 
  2353   0003C5                     CWG2CLKCON      equ	965	;# 
  2354   0003C6                     CWG2ISM         equ	966	;# 
  2355   0003C7                     CWG2DBR         equ	967	;# 
  2356   0003C8                     CWG2DBF         equ	968	;# 
  2357   0003C9                     CWG2CON0        equ	969	;# 
  2358   0003CA                     CWG2CON1        equ	970	;# 
  2359   0003CB                     CWG2AS0         equ	971	;# 
  2360   0003CC                     CWG2AS1         equ	972	;# 
  2361   0003CD                     CWG2STR         equ	973	;# 
  2362   0003CE                     CWG3CLK         equ	974	;# 
  2363   0003CE                     CWG3CLKCON      equ	974	;# 
  2364   0003CF                     CWG3ISM         equ	975	;# 
  2365   0003D0                     CWG3DBR         equ	976	;# 
  2366   0003D1                     CWG3DBF         equ	977	;# 
  2367   0003D2                     CWG3CON0        equ	978	;# 
  2368   0003D3                     CWG3CON1        equ	979	;# 
  2369   0003D4                     CWG3AS0         equ	980	;# 
  2370   0003D5                     CWG3AS1         equ	981	;# 
  2371   0003D6                     CWG3STR         equ	982	;# 
  2372   0003D7                     FVRCON          equ	983	;# 
  2373   0003D8                     ADCPCON         equ	984	;# 
  2374   0003D8                     ADCP            equ	984	;# 
  2375   0003D9                     ADLTH           equ	985	;# 
  2376   0003D9                     ADLTHL          equ	985	;# 
  2377   0003DA                     ADLTHH          equ	986	;# 
  2378   0003DB                     ADUTH           equ	987	;# 
  2379   0003DB                     ADUTHL          equ	987	;# 
  2380   0003DC                     ADUTHH          equ	988	;# 
  2381   0003DD                     ADERR           equ	989	;# 
  2382   0003DD                     ADERRL          equ	989	;# 
  2383   0003DE                     ADERRH          equ	990	;# 
  2384   0003DF                     ADSTPT          equ	991	;# 
  2385   0003DF                     ADSTPTL         equ	991	;# 
  2386   0003E0                     ADSTPTH         equ	992	;# 
  2387   0003E1                     ADFLTR          equ	993	;# 
  2388   0003E1                     ADFLTRL         equ	993	;# 
  2389   0003E2                     ADFLTRH         equ	994	;# 
  2390   0003E3                     ADACC           equ	995	;# 
  2391   0003E3                     ADACCL          equ	995	;# 
  2392   0003E4                     ADACCH          equ	996	;# 
  2393   0003E5                     ADACCU          equ	997	;# 
  2394   0003E6                     ADCNT           equ	998	;# 
  2395   0003E7                     ADRPT           equ	999	;# 
  2396   0003E8                     ADPREV          equ	1000	;# 
  2397   0003E8                     ADPREVL         equ	1000	;# 
  2398   0003E9                     ADPREVH         equ	1001	;# 
  2399   0003EA                     ADRES           equ	1002	;# 
  2400   0003EA                     ADRESL          equ	1002	;# 
  2401   0003EB                     ADRESH          equ	1003	;# 
  2402   0003EC                     ADPCH           equ	1004	;# 
  2403   0003EE                     ADACQ           equ	1006	;# 
  2404   0003EE                     ADACQL          equ	1006	;# 
  2405   0003EF                     ADACQH          equ	1007	;# 
  2406   0003F0                     ADCAP           equ	1008	;# 
  2407   0003F1                     ADPRE           equ	1009	;# 
  2408   0003F1                     ADPREL          equ	1009	;# 
  2409   0003F2                     ADPREH          equ	1010	;# 
  2410   0003F3                     ADCON0          equ	1011	;# 
  2411   0003F4                     ADCON1          equ	1012	;# 
  2412   0003F5                     ADCON2          equ	1013	;# 
  2413   0003F6                     ADCON3          equ	1014	;# 
  2414   0003F7                     ADSTAT          equ	1015	;# 
  2415   0003F8                     ADREF           equ	1016	;# 
  2416   0003F9                     ADACT           equ	1017	;# 
  2417   0003FA                     ADCLK           equ	1018	;# 
  2418   0003FB                     ADCTX           equ	1019	;# 
  2419   0003FC                     ADCSEL1         equ	1020	;# 
  2420   0003FD                     ADCSEL2         equ	1021	;# 
  2421   0003FE                     ADCSEL3         equ	1022	;# 
  2422   0003FF                     ADCSEL4         equ	1023	;# 
  2423   000400                     ANSELA          equ	1024	;# 
  2424   000401                     WPUA            equ	1025	;# 
  2425   000402                     ODCONA          equ	1026	;# 
  2426   000403                     SLRCONA         equ	1027	;# 
  2427   000404                     INLVLA          equ	1028	;# 
  2428   000405                     IOCAP           equ	1029	;# 
  2429   000406                     IOCAN           equ	1030	;# 
  2430   000407                     IOCAF           equ	1031	;# 
  2431   000408                     ANSELB          equ	1032	;# 
  2432   000409                     WPUB            equ	1033	;# 
  2433   00040A                     ODCONB          equ	1034	;# 
  2434   00040B                     SLRCONB         equ	1035	;# 
  2435   00040C                     INLVLB          equ	1036	;# 
  2436   00040D                     IOCBP           equ	1037	;# 
  2437   00040E                     IOCBN           equ	1038	;# 
  2438   00040F                     IOCBF           equ	1039	;# 
  2439   000410                     ANSELC          equ	1040	;# 
  2440   000411                     WPUC            equ	1041	;# 
  2441   000412                     ODCONC          equ	1042	;# 
  2442   000413                     SLRCONC         equ	1043	;# 
  2443   000414                     INLVLC          equ	1044	;# 
  2444   000415                     IOCCP           equ	1045	;# 
  2445   000416                     IOCCN           equ	1046	;# 
  2446   000417                     IOCCF           equ	1047	;# 
  2447   000418                     ANSELD          equ	1048	;# 
  2448   000419                     WPUD            equ	1049	;# 
  2449   00041A                     ODCOND          equ	1050	;# 
  2450   00041B                     SLRCOND         equ	1051	;# 
  2451   00041C                     INLVLD          equ	1052	;# 
  2452   000420                     ANSELE          equ	1056	;# 
  2453   000421                     WPUE            equ	1057	;# 
  2454   000422                     ODCONE          equ	1058	;# 
  2455   000423                     SLRCONE         equ	1059	;# 
  2456   000424                     INLVLE          equ	1060	;# 
  2457   000425                     IOCEP           equ	1061	;# 
  2458   000426                     IOCEN           equ	1062	;# 
  2459   000427                     IOCEF           equ	1063	;# 
  2460   000440                     NCO1ACC         equ	1088	;# 
  2461   000440                     NCO1ACCL        equ	1088	;# 
  2462   000441                     NCO1ACCH        equ	1089	;# 
  2463   000442                     NCO1ACCU        equ	1090	;# 
  2464   000443                     NCO1INC         equ	1091	;# 
  2465   000443                     NCO1INCL        equ	1091	;# 
  2466   000444                     NCO1INCH        equ	1092	;# 
  2467   000445                     NCO1INCU        equ	1093	;# 
  2468   000446                     NCO1CON         equ	1094	;# 
  2469   000447                     NCO1CLK         equ	1095	;# 
  2470   000448                     NCO2ACC         equ	1096	;# 
  2471   000448                     NCO2ACCL        equ	1096	;# 
  2472   000449                     NCO2ACCH        equ	1097	;# 
  2473   00044A                     NCO2ACCU        equ	1098	;# 
  2474   00044B                     NCO2INC         equ	1099	;# 
  2475   00044B                     NCO2INCL        equ	1099	;# 
  2476   00044C                     NCO2INCH        equ	1100	;# 
  2477   00044D                     NCO2INCU        equ	1101	;# 
  2478   00044E                     NCO2CON         equ	1102	;# 
  2479   00044F                     NCO2CLK         equ	1103	;# 
  2480   000450                     NCO3ACC         equ	1104	;# 
  2481   000450                     NCO3ACCL        equ	1104	;# 
  2482   000451                     NCO3ACCH        equ	1105	;# 
  2483   000452                     NCO3ACCU        equ	1106	;# 
  2484   000453                     NCO3INC         equ	1107	;# 
  2485   000453                     NCO3INCL        equ	1107	;# 
  2486   000454                     NCO3INCH        equ	1108	;# 
  2487   000455                     NCO3INCU        equ	1109	;# 
  2488   000456                     NCO3CON         equ	1110	;# 
  2489   000457                     NCO3CLK         equ	1111	;# 
  2490   000458                     FSCMCON         equ	1112	;# 
  2491   000459                     IVTLOCK         equ	1113	;# 
  2492   00045A                     IVTAD           equ	1114	;# 
  2493   00045A                     IVTADL          equ	1114	;# 
  2494   00045B                     IVTADH          equ	1115	;# 
  2495   00045C                     IVTADU          equ	1116	;# 
  2496   00045D                     IVTBASE         equ	1117	;# 
  2497   00045D                     IVTBASEL        equ	1117	;# 
  2498   00045E                     IVTBASEH        equ	1118	;# 
  2499   00045F                     IVTBASEU        equ	1119	;# 
  2500   000460                     PWM1ERS         equ	1120	;# 
  2501   000461                     PWM1CLK         equ	1121	;# 
  2502   000462                     PWM1LDS         equ	1122	;# 
  2503   000463                     PWM1PR          equ	1123	;# 
  2504   000463                     PWM1PRL         equ	1123	;# 
  2505   000464                     PWM1PRH         equ	1124	;# 
  2506   000465                     PWM1CPRE        equ	1125	;# 
  2507   000466                     PWM1PIPOS       equ	1126	;# 
  2508   000467                     PWM1GIR         equ	1127	;# 
  2509   000468                     PWM1GIE         equ	1128	;# 
  2510   000469                     PWM1CON         equ	1129	;# 
  2511   00046A                     PWM1S1CFG       equ	1130	;# 
  2512   00046B                     PWM1S1P1        equ	1131	;# 
  2513   00046B                     PWM1S1P1L       equ	1131	;# 
  2514   00046C                     PWM1S1P1H       equ	1132	;# 
  2515   00046D                     PWM1S1P2        equ	1133	;# 
  2516   00046D                     PWM1S1P2L       equ	1133	;# 
  2517   00046E                     PWM1S1P2H       equ	1134	;# 
  2518   00046F                     PWM2ERS         equ	1135	;# 
  2519   000470                     PWM2CLK         equ	1136	;# 
  2520   000471                     PWM2LDS         equ	1137	;# 
  2521   000472                     PWM2PR          equ	1138	;# 
  2522   000472                     PWM2PRL         equ	1138	;# 
  2523   000473                     PWM2PRH         equ	1139	;# 
  2524   000474                     PWM2CPRE        equ	1140	;# 
  2525   000475                     PWM2PIPOS       equ	1141	;# 
  2526   000476                     PWM2GIR         equ	1142	;# 
  2527   000477                     PWM2GIE         equ	1143	;# 
  2528   000478                     PWM2CON         equ	1144	;# 
  2529   000479                     PWM2S1CFG       equ	1145	;# 
  2530   00047A                     PWM2S1P1        equ	1146	;# 
  2531   00047A                     PWM2S1P1L       equ	1146	;# 
  2532   00047B                     PWM2S1P1H       equ	1147	;# 
  2533   00047C                     PWM2S1P2        equ	1148	;# 
  2534   00047C                     PWM2S1P2L       equ	1148	;# 
  2535   00047D                     PWM2S1P2H       equ	1149	;# 
  2536   00047E                     PWM3ERS         equ	1150	;# 
  2537   00047F                     PWM3CLK         equ	1151	;# 
  2538   000480                     PWM3LDS         equ	1152	;# 
  2539   000481                     PWM3PR          equ	1153	;# 
  2540   000481                     PWM3PRL         equ	1153	;# 
  2541   000482                     PWM3PRH         equ	1154	;# 
  2542   000483                     PWM3CPRE        equ	1155	;# 
  2543   000484                     PWM3PIPOS       equ	1156	;# 
  2544   000485                     PWM3GIR         equ	1157	;# 
  2545   000486                     PWM3GIE         equ	1158	;# 
  2546   000487                     PWM3CON         equ	1159	;# 
  2547   000488                     PWM3S1CFG       equ	1160	;# 
  2548   000489                     PWM3S1P1        equ	1161	;# 
  2549   000489                     PWM3S1P1L       equ	1161	;# 
  2550   00048A                     PWM3S1P1H       equ	1162	;# 
  2551   00048B                     PWM3S1P2        equ	1163	;# 
  2552   00048B                     PWM3S1P2L       equ	1163	;# 
  2553   00048C                     PWM3S1P2H       equ	1164	;# 
  2554   00048D                     PWM4ERS         equ	1165	;# 
  2555   00048E                     PWM4CLK         equ	1166	;# 
  2556   00048F                     PWM4LDS         equ	1167	;# 
  2557   000490                     PWM4PR          equ	1168	;# 
  2558   000490                     PWM4PRL         equ	1168	;# 
  2559   000491                     PWM4PRH         equ	1169	;# 
  2560   000492                     PWM4CPRE        equ	1170	;# 
  2561   000493                     PWM4PIPOS       equ	1171	;# 
  2562   000494                     PWM4GIR         equ	1172	;# 
  2563   000495                     PWM4GIE         equ	1173	;# 
  2564   000496                     PWM4CON         equ	1174	;# 
  2565   000497                     PWM4S1CFG       equ	1175	;# 
  2566   000498                     PWM4S1P1        equ	1176	;# 
  2567   000498                     PWM4S1P1L       equ	1176	;# 
  2568   000499                     PWM4S1P1H       equ	1177	;# 
  2569   00049A                     PWM4S1P2        equ	1178	;# 
  2570   00049A                     PWM4S1P2L       equ	1178	;# 
  2571   00049B                     PWM4S1P2H       equ	1179	;# 
  2572   00049C                     PWMLOAD         equ	1180	;# 
  2573   00049D                     PWMEN           equ	1181	;# 
  2574   00049E                     PIE0            equ	1182	;# 
  2575   00049F                     PIE1            equ	1183	;# 
  2576   0004A0                     PIE2            equ	1184	;# 
  2577   0004A1                     PIE3            equ	1185	;# 
  2578   0004A2                     PIE4            equ	1186	;# 
  2579   0004A3                     PIE5            equ	1187	;# 
  2580   0004A4                     PIE6            equ	1188	;# 
  2581   0004A5                     PIE7            equ	1189	;# 
  2582   0004A6                     PIE8            equ	1190	;# 
  2583   0004A7                     PIE9            equ	1191	;# 
  2584   0004A8                     PIE10           equ	1192	;# 
  2585   0004A9                     PIE11           equ	1193	;# 
  2586   0004AA                     PIE12           equ	1194	;# 
  2587   0004AB                     PIE13           equ	1195	;# 
  2588   0004AC                     PIE14           equ	1196	;# 
  2589   0004AD                     PIE15           equ	1197	;# 
  2590   0004AE                     PIR0            equ	1198	;# 
  2591   0004AF                     PIR1            equ	1199	;# 
  2592   0004B0                     PIR2            equ	1200	;# 
  2593   0004B1                     PIR3            equ	1201	;# 
  2594   0004B2                     PIR4            equ	1202	;# 
  2595   0004B3                     PIR5            equ	1203	;# 
  2596   0004B4                     PIR6            equ	1204	;# 
  2597   0004B5                     PIR7            equ	1205	;# 
  2598   0004B6                     PIR8            equ	1206	;# 
  2599   0004B7                     PIR9            equ	1207	;# 
  2600   0004B8                     PIR10           equ	1208	;# 
  2601   0004B9                     PIR11           equ	1209	;# 
  2602   0004BA                     PIR12           equ	1210	;# 
  2603   0004BB                     PIR13           equ	1211	;# 
  2604   0004BC                     PIR14           equ	1212	;# 
  2605   0004BD                     PIR15           equ	1213	;# 
  2606   0004BE                     LATA            equ	1214	;# 
  2607   0004BF                     LATB            equ	1215	;# 
  2608   0004C0                     LATC            equ	1216	;# 
  2609   0004C1                     LATD            equ	1217	;# 
  2610   0004C2                     LATE            equ	1218	;# 
  2611   0004C6                     TRISA           equ	1222	;# 
  2612   0004C7                     TRISB           equ	1223	;# 
  2613   0004C8                     TRISC           equ	1224	;# 
  2614   0004C9                     TRISD           equ	1225	;# 
  2615   0004CA                     TRISE           equ	1226	;# 
  2616   0004CE                     PORTA           equ	1230	;# 
  2617   0004CF                     PORTB           equ	1231	;# 
  2618   0004D0                     PORTC           equ	1232	;# 
  2619   0004D1                     PORTD           equ	1233	;# 
  2620   0004D2                     PORTE           equ	1234	;# 
  2621   0004D6                     INTCON0         equ	1238	;# 
  2622   0004D7                     INTCON1         equ	1239	;# 
  2623   0004D8                     STATUS          equ	1240	;# 
  2624   0004D9                     FSR2            equ	1241	;# 
  2625   0004D9                     FSR2L           equ	1241	;# 
  2626   0004DA                     FSR2H           equ	1242	;# 
  2627   0004DB                     PLUSW2          equ	1243	;# 
  2628   0004DC                     PREINC2         equ	1244	;# 
  2629   0004DD                     POSTDEC2        equ	1245	;# 
  2630   0004DE                     POSTINC2        equ	1246	;# 
  2631   0004DF                     INDF2           equ	1247	;# 
  2632   0004E0                     BSR             equ	1248	;# 
  2633   0004E1                     FSR1            equ	1249	;# 
  2634   0004E1                     FSR1L           equ	1249	;# 
  2635   0004E2                     FSR1H           equ	1250	;# 
  2636   0004E3                     PLUSW1          equ	1251	;# 
  2637   0004E4                     PREINC1         equ	1252	;# 
  2638   0004E5                     POSTDEC1        equ	1253	;# 
  2639   0004E6                     POSTINC1        equ	1254	;# 
  2640   0004E7                     INDF1           equ	1255	;# 
  2641   0004E8                     WREG            equ	1256	;# 
  2642   0004E9                     FSR0            equ	1257	;# 
  2643   0004E9                     FSR0L           equ	1257	;# 
  2644   0004EA                     FSR0H           equ	1258	;# 
  2645   0004EB                     PLUSW0          equ	1259	;# 
  2646   0004EC                     PREINC0         equ	1260	;# 
  2647   0004ED                     POSTDEC0        equ	1261	;# 
  2648   0004EE                     POSTINC0        equ	1262	;# 
  2649   0004EF                     INDF0           equ	1263	;# 
  2650   0004F0                     PCON0           equ	1264	;# 
  2651   0004F1                     PCON1           equ	1265	;# 
  2652   0004F2                     CPUDOZE         equ	1266	;# 
  2653   0004F3                     PROD            equ	1267	;# 
  2654   0004F3                     PRODL           equ	1267	;# 
  2655   0004F4                     PRODH           equ	1268	;# 
  2656   0004F5                     TABLAT          equ	1269	;# 
  2657   0004F6                     TBLPTR          equ	1270	;# 
  2658   0004F6                     TBLPTRL         equ	1270	;# 
  2659   0004F7                     TBLPTRH         equ	1271	;# 
  2660   0004F8                     TBLPTRU         equ	1272	;# 
  2661   0004F9                     PCLAT           equ	1273	;# 
  2662   0004F9                     PCL             equ	1273	;# 
  2663   0004FA                     PCLATH          equ	1274	;# 
  2664   0004FB                     PCLATU          equ	1275	;# 
  2665   0004FC                     STKPTR          equ	1276	;# 
  2666   0004FD                     TOS             equ	1277	;# 
  2667   0004FD                     TOSL            equ	1277	;# 
  2668   0004FE                     TOSH            equ	1278	;# 
  2669   0004FF                     TOSU            equ	1279	;# 
  2670   000038                     BOOTREG         equ	56	;# 
  2671   000039                     CLKRCON         equ	57	;# 
  2672   00003A                     CLKRCLK         equ	58	;# 
  2673   000040                     NVMCON0         equ	64	;# 
  2674   000041                     NVMCON1         equ	65	;# 
  2675   000042                     NVMLOCK         equ	66	;# 
  2676   000043                     NVMADR          equ	67	;# 
  2677   000043                     NVMADRL         equ	67	;# 
  2678   000044                     NVMADRH         equ	68	;# 
  2679   000045                     NVMADRU         equ	69	;# 
  2680   000046                     NVMDAT          equ	70	;# 
  2681   000046                     NVMDATL         equ	70	;# 
  2682   000047                     NVMDATH         equ	71	;# 
  2683   000048                     VREGCON         equ	72	;# 
  2684   000049                     BORCON          equ	73	;# 
  2685   00004A                     HLVDCON0        equ	74	;# 
  2686   00004B                     HLVDCON1        equ	75	;# 
  2687   00004C                     ZCDCON          equ	76	;# 
  2688   000060                     PMD0            equ	96	;# 
  2689   000061                     PMD1            equ	97	;# 
  2690   000062                     PMD2            equ	98	;# 
  2691   000063                     PMD3            equ	99	;# 
  2692   000064                     PMD4            equ	100	;# 
  2693   000065                     PMD5            equ	101	;# 
  2694   000066                     PMD6            equ	102	;# 
  2695   000067                     PMD7            equ	103	;# 
  2696   000068                     PMD8            equ	104	;# 
  2697   00006A                     MD1CON0         equ	106	;# 
  2698   00006B                     MD1CON1         equ	107	;# 
  2699   00006C                     MD1SRC          equ	108	;# 
  2700   00006D                     MD1CARL         equ	109	;# 
  2701   00006E                     MD1CARH         equ	110	;# 
  2702   00006F                     CMOUT           equ	111	;# 
  2703   000070                     CM1CON0         equ	112	;# 
  2704   000071                     CM1CON1         equ	113	;# 
  2705   000072                     CM1NCH          equ	114	;# 
  2706   000073                     CM1PCH          equ	115	;# 
  2707   000074                     CM2CON0         equ	116	;# 
  2708   000075                     CM2CON1         equ	117	;# 
  2709   000076                     CM2NCH          equ	118	;# 
  2710   000077                     CM2PCH          equ	119	;# 
  2711   000078                     WDTCON0         equ	120	;# 
  2712   000079                     WDTCON1         equ	121	;# 
  2713   00007A                     WDTPSL          equ	122	;# 
  2714   00007B                     WDTPSH          equ	123	;# 
  2715   00007C                     WDTTMR          equ	124	;# 
  2716   00007D                     DAC1DAT         equ	125	;# 
  2717   00007D                     DAC1DATL        equ	125	;# 
  2718   00007F                     DAC1CON         equ	127	;# 
  2719   000080                     SPI1RXB         equ	128	;# 
  2720   000081                     SPI1TXB         equ	129	;# 
  2721   000082                     SPI1TCNT        equ	130	;# 
  2722   000082                     SPI1TCNTL       equ	130	;# 
  2723   000083                     SPI1TCNTH       equ	131	;# 
  2724   000084                     SPI1CON0        equ	132	;# 
  2725   000085                     SPI1CON1        equ	133	;# 
  2726   000086                     SPI1CON2        equ	134	;# 
  2727   000087                     SPI1STATUS      equ	135	;# 
  2728   000088                     SPI1TWIDTH      equ	136	;# 
  2729   000089                     SPI1BAUD        equ	137	;# 
  2730   00008A                     SPI1INTF        equ	138	;# 
  2731   00008B                     SPI1INTE        equ	139	;# 
  2732   00008C                     SPI1CLK         equ	140	;# 
  2733   00008D                     SPI2RXB         equ	141	;# 
  2734   00008E                     SPI2TXB         equ	142	;# 
  2735   00008F                     SPI2TCNT        equ	143	;# 
  2736   00008F                     SPI2TCNTL       equ	143	;# 
  2737   000090                     SPI2TCNTH       equ	144	;# 
  2738   000091                     SPI2CON0        equ	145	;# 
  2739   000092                     SPI2CON1        equ	146	;# 
  2740   000093                     SPI2CON2        equ	147	;# 
  2741   000094                     SPI2STATUS      equ	148	;# 
  2742   000095                     SPI2TWIDTH      equ	149	;# 
  2743   000096                     SPI2BAUD        equ	150	;# 
  2744   000097                     SPI2INTF        equ	151	;# 
  2745   000098                     SPI2INTE        equ	152	;# 
  2746   000099                     SPI2CLK         equ	153	;# 
  2747   0000AC                     ACTCON          equ	172	;# 
  2748   0000AD                     OSCCON1         equ	173	;# 
  2749   0000AE                     OSCCON2         equ	174	;# 
  2750   0000AF                     OSCCON3         equ	175	;# 
  2751   0000B0                     OSCTUNE         equ	176	;# 
  2752   0000B1                     OSCFRQ          equ	177	;# 
  2753   0000B1                     OSCFREQ         equ	177	;# 
  2754   0000B2                     OSCSTAT         equ	178	;# 
  2755   0000B2                     OSCSTAT1        equ	178	;# 
  2756   0000B3                     OSCEN           equ	179	;# 
  2757   0000B4                     PRLOCK          equ	180	;# 
  2758   0000B5                     SCANPR          equ	181	;# 
  2759   0000B6                     DMA1PR          equ	182	;# 
  2760   0000B7                     DMA2PR          equ	183	;# 
  2761   0000B8                     DMA3PR          equ	184	;# 
  2762   0000B9                     DMA4PR          equ	185	;# 
  2763   0000BA                     DMA5PR          equ	186	;# 
  2764   0000BB                     DMA6PR          equ	187	;# 
  2765   0000BC                     DMA7PR          equ	188	;# 
  2766   0000BD                     DMA8PR          equ	189	;# 
  2767   0000BE                     MAINPR          equ	190	;# 
  2768   0000BF                     ISRPR           equ	191	;# 
  2769   0000D4                     CLCDATA         equ	212	;# 
  2770   0000D5                     CLCSELECT       equ	213	;# 
  2771   0000D6                     CLCnCON         equ	214	;# 
  2772   0000D7                     CLCnPOL         equ	215	;# 
  2773   0000D8                     CLCnSEL0        equ	216	;# 
  2774   0000D9                     CLCnSEL1        equ	217	;# 
  2775   0000DA                     CLCnSEL2        equ	218	;# 
  2776   0000DB                     CLCnSEL3        equ	219	;# 
  2777   0000DC                     CLCnGLS0        equ	220	;# 
  2778   0000DD                     CLCnGLS1        equ	221	;# 
  2779   0000DE                     CLCnGLS2        equ	222	;# 
  2780   0000DF                     CLCnGLS3        equ	223	;# 
  2781   0000E8                     DMASELECT       equ	232	;# 
  2782   0000E9                     DMAnBUF         equ	233	;# 
  2783   0000EA                     DMAnDCNT        equ	234	;# 
  2784   0000EA                     DMAnDCNTL       equ	234	;# 
  2785   0000EB                     DMAnDCNTH       equ	235	;# 
  2786   0000EC                     DMAnDPTR        equ	236	;# 
  2787   0000EC                     DMAnDPTRL       equ	236	;# 
  2788   0000ED                     DMAnDPTRH       equ	237	;# 
  2789   0000EE                     DMAnDSZ         equ	238	;# 
  2790   0000EE                     DMAnDSZL        equ	238	;# 
  2791   0000EF                     DMAnDSZH        equ	239	;# 
  2792   0000F0                     DMAnDSA         equ	240	;# 
  2793   0000F0                     DMAnDSAL        equ	240	;# 
  2794   0000F1                     DMAnDSAH        equ	241	;# 
  2795   0000F2                     DMAnSCNT        equ	242	;# 
  2796   0000F2                     DMAnSCNTL       equ	242	;# 
  2797   0000F3                     DMAnSCNTH       equ	243	;# 
  2798   0000F4                     DMAnSPTR        equ	244	;# 
  2799   0000F4                     DMAnSPTRL       equ	244	;# 
  2800   0000F5                     DMAnSPTRH       equ	245	;# 
  2801   0000F6                     DMAnSPTRU       equ	246	;# 
  2802   0000F7                     DMAnSSZ         equ	247	;# 
  2803   0000F7                     DMAnSSZL        equ	247	;# 
  2804   0000F8                     DMAnSSZH        equ	248	;# 
  2805   0000F9                     DMAnSSA         equ	249	;# 
  2806   0000F9                     DMAnSSAL        equ	249	;# 
  2807   0000FA                     DMAnSSAH        equ	250	;# 
  2808   0000FB                     DMAnSSAU        equ	251	;# 
  2809   0000FC                     DMAnCON0        equ	252	;# 
  2810   0000FD                     DMAnCON1        equ	253	;# 
  2811   0000FE                     DMAnAIRQ        equ	254	;# 
  2812   0000FF                     DMAnSIRQ        equ	255	;# 
  2813   000100                     C1CONL          equ	256	;# 
  2814   000101                     C1CONH          equ	257	;# 
  2815   000102                     C1CONU          equ	258	;# 
  2816   000103                     C1CONT          equ	259	;# 
  2817   000104                     C1NBTCFGL       equ	260	;# 
  2818   000105                     C1NBTCFGH       equ	261	;# 
  2819   000106                     C1NBTCFGU       equ	262	;# 
  2820   000107                     C1NBTCFGT       equ	263	;# 
  2821   000108                     C1DBTCFGL       equ	264	;# 
  2822   000109                     C1DBTCFGH       equ	265	;# 
  2823   00010A                     C1DBTCFGU       equ	266	;# 
  2824   00010B                     C1DBTCFGT       equ	267	;# 
  2825   00010C                     C1TDCL          equ	268	;# 
  2826   00010D                     C1TDCH          equ	269	;# 
  2827   00010E                     C1TDCU          equ	270	;# 
  2828   000110                     C1TBC           equ	272	;# 
  2829   000110                     C1TBCL          equ	272	;# 
  2830   000111                     C1TBCH          equ	273	;# 
  2831   000112                     C1TBCU          equ	274	;# 
  2832   000113                     C1TBCT          equ	275	;# 
  2833   000114                     C1TSCONL        equ	276	;# 
  2834   000115                     C1TSCONH        equ	277	;# 
  2835   000116                     C1TSCONU        equ	278	;# 
  2836   000117                     C1TSCONT        equ	279	;# 
  2837   000118                     C1VECL          equ	280	;# 
  2838   000119                     C1VECH          equ	281	;# 
  2839   00011A                     C1VECU          equ	282	;# 
  2840   00011B                     C1VECT          equ	283	;# 
  2841   00011C                     C1INTL          equ	284	;# 
  2842   00011D                     C1INTH          equ	285	;# 
  2843   00011E                     C1INTU          equ	286	;# 
  2844   00011F                     C1INTT          equ	287	;# 
  2845   000120                     C1RXIF          equ	288	;# 
  2846   000120                     C1RXIFL         equ	288	;# 
  2847   000121                     C1RXIFH         equ	289	;# 
  2848   000122                     C1RXIFU         equ	290	;# 
  2849   000123                     C1RXIFT         equ	291	;# 
  2850   000124                     C1TXIF          equ	292	;# 
  2851   000124                     C1TXIFL         equ	292	;# 
  2852   000125                     C1TXIFH         equ	293	;# 
  2853   000126                     C1TXIFU         equ	294	;# 
  2854   000127                     C1TXIFT         equ	295	;# 
  2855   000128                     C1RXOVIF        equ	296	;# 
  2856   000128                     C1RXOVIFL       equ	296	;# 
  2857   000129                     C1RXOVIFH       equ	297	;# 
  2858   00012A                     C1RXOVIFU       equ	298	;# 
  2859   00012B                     C1RXOVIFT       equ	299	;# 
  2860   00012C                     C1TXATIF        equ	300	;# 
  2861   00012C                     C1TXATIFL       equ	300	;# 
  2862   00012D                     C1TXATIFH       equ	301	;# 
  2863   00012E                     C1TXATIFU       equ	302	;# 
  2864   00012F                     C1TXATIFT       equ	303	;# 
  2865   000130                     C1TXREQ         equ	304	;# 
  2866   000130                     C1TXREQL        equ	304	;# 
  2867   000131                     C1TXREQH        equ	305	;# 
  2868   000132                     C1TXREQU        equ	306	;# 
  2869   000133                     C1TXREQT        equ	307	;# 
  2870   000134                     C1TRECL         equ	308	;# 
  2871   000135                     C1TRECH         equ	309	;# 
  2872   000136                     C1TRECU         equ	310	;# 
  2873   000137                     C1TRECT         equ	311	;# 
  2874   000138                     C1BDIAG0L       equ	312	;# 
  2875   000139                     C1BDIAG0H       equ	313	;# 
  2876   00013C                     C1BDIAG1L       equ	316	;# 
  2877   00013D                     C1BDIAG1H       equ	317	;# 
  2878   00013E                     C1BDIAG1U       equ	318	;# 
  2879   00013F                     C1BDIAG1T       equ	319	;# 
  2880   000140                     C1TEFCONL       equ	320	;# 
  2881   000141                     C1TEFCONH       equ	321	;# 
  2882   000142                     C1TEFCONU       equ	322	;# 
  2883   000143                     C1TEFCONT       equ	323	;# 
  2884   000144                     C1TEFSTAL       equ	324	;# 
  2885   000145                     C1TEFSTAH       equ	325	;# 
  2886   000146                     C1TEFSTAU       equ	326	;# 
  2887   000147                     C1TEFSTAT       equ	327	;# 
  2888   000148                     C1TEFUA         equ	328	;# 
  2889   000148                     C1TEFUAL        equ	328	;# 
  2890   000149                     C1TEFUAH        equ	329	;# 
  2891   00014A                     C1TEFUAU        equ	330	;# 
  2892   00014B                     C1TEFUAT        equ	331	;# 
  2893   00014C                     C1FIFOBA        equ	332	;# 
  2894   00014C                     C1FIFOBAL       equ	332	;# 
  2895   00014D                     C1FIFOBAH       equ	333	;# 
  2896   00014E                     C1FIFOBAU       equ	334	;# 
  2897   00014F                     C1FIFOBAT       equ	335	;# 
  2898   000150                     C1TXQCONL       equ	336	;# 
  2899   000151                     C1TXQCONH       equ	337	;# 
  2900   000152                     C1TXQCONU       equ	338	;# 
  2901   000153                     C1TXQCONT       equ	339	;# 
  2902   000154                     C1TXQSTAL       equ	340	;# 
  2903   000155                     C1TXQSTAH       equ	341	;# 
  2904   000156                     C1TXQSTAU       equ	342	;# 
  2905   000157                     C1TXQSTAT       equ	343	;# 
  2906   000158                     C1TXQUA         equ	344	;# 
  2907   000158                     C1TXQUAL        equ	344	;# 
  2908   000159                     C1TXQUAH        equ	345	;# 
  2909   00015A                     C1TXQUAU        equ	346	;# 
  2910   00015B                     C1TXQUAT        equ	347	;# 
  2911   00015C                     C1FIFOCON1      equ	348	;# 
  2912   00015C                     C1FIFOCON1L     equ	348	;# 
  2913   00015D                     C1FIFOCON1H     equ	349	;# 
  2914   00015E                     C1FIFOCON1U     equ	350	;# 
  2915   00015F                     C1FIFOCON1T     equ	351	;# 
  2916   000160                     C1FIFOSTA1      equ	352	;# 
  2917   000160                     C1FIFOSTA1L     equ	352	;# 
  2918   000161                     C1FIFOSTA1H     equ	353	;# 
  2919   000162                     C1FIFOSTA1U     equ	354	;# 
  2920   000163                     C1FIFOSTA1T     equ	355	;# 
  2921   000164                     C1FIFOUA1       equ	356	;# 
  2922   000164                     C1FIFOUA1L      equ	356	;# 
  2923   000165                     C1FIFOUA1H      equ	357	;# 
  2924   000166                     C1FIFOUA1U      equ	358	;# 
  2925   000167                     C1FIFOUA1T      equ	359	;# 
  2926   000168                     C1FIFOCON2      equ	360	;# 
  2927   000168                     C1FIFOCON2L     equ	360	;# 
  2928   000169                     C1FIFOCON2H     equ	361	;# 
  2929   00016A                     C1FIFOCON2U     equ	362	;# 
  2930   00016B                     C1FIFOCON2T     equ	363	;# 
  2931   00016C                     C1FIFOSTA2      equ	364	;# 
  2932   00016C                     C1FIFOSTA2L     equ	364	;# 
  2933   00016D                     C1FIFOSTA2H     equ	365	;# 
  2934   00016E                     C1FIFOSTA2U     equ	366	;# 
  2935   00016F                     C1FIFOSTA2T     equ	367	;# 
  2936   000170                     C1FIFOUA2       equ	368	;# 
  2937   000170                     C1FIFOUA2L      equ	368	;# 
  2938   000171                     C1FIFOUA2H      equ	369	;# 
  2939   000172                     C1FIFOUA2U      equ	370	;# 
  2940   000173                     C1FIFOUA2T      equ	371	;# 
  2941   000174                     C1FIFOCON3      equ	372	;# 
  2942   000174                     C1FIFOCON3L     equ	372	;# 
  2943   000175                     C1FIFOCON3H     equ	373	;# 
  2944   000176                     C1FIFOCON3U     equ	374	;# 
  2945   000177                     C1FIFOCON3T     equ	375	;# 
  2946   000178                     C1FIFOSTA3      equ	376	;# 
  2947   000178                     C1FIFOSTA3L     equ	376	;# 
  2948   000179                     C1FIFOSTA3H     equ	377	;# 
  2949   00017A                     C1FIFOSTA3U     equ	378	;# 
  2950   00017B                     C1FIFOSTA3T     equ	379	;# 
  2951   00017C                     C1FIFOUA3       equ	380	;# 
  2952   00017C                     C1FIFOUA3L      equ	380	;# 
  2953   00017D                     C1FIFOUA3H      equ	381	;# 
  2954   00017E                     C1FIFOUA3U      equ	382	;# 
  2955   00017F                     C1FIFOUA3T      equ	383	;# 
  2956   000180                     C1FLTCON0L      equ	384	;# 
  2957   000181                     C1FLTCON0H      equ	385	;# 
  2958   000182                     C1FLTCON0U      equ	386	;# 
  2959   000183                     C1FLTCON0T      equ	387	;# 
  2960   000184                     C1FLTCON1L      equ	388	;# 
  2961   000185                     C1FLTCON1H      equ	389	;# 
  2962   000186                     C1FLTCON1U      equ	390	;# 
  2963   000187                     C1FLTCON1T      equ	391	;# 
  2964   000188                     C1FLTCON2L      equ	392	;# 
  2965   000189                     C1FLTCON2H      equ	393	;# 
  2966   00018A                     C1FLTCON2U      equ	394	;# 
  2967   00018B                     C1FLTCON2T      equ	395	;# 
  2968   00018C                     C1FLTOBJ0       equ	396	;# 
  2969   00018C                     C1FLTOBJ0L      equ	396	;# 
  2970   00018D                     C1FLTOBJ0H      equ	397	;# 
  2971   00018E                     C1FLTOBJ0U      equ	398	;# 
  2972   00018F                     C1FLTOBJ0T      equ	399	;# 
  2973   000190                     C1MASK0         equ	400	;# 
  2974   000190                     C1MASK0L        equ	400	;# 
  2975   000191                     C1MASK0H        equ	401	;# 
  2976   000192                     C1MASK0U        equ	402	;# 
  2977   000193                     C1MASK0T        equ	403	;# 
  2978   000194                     C1FLTOBJ1       equ	404	;# 
  2979   000194                     C1FLTOBJ1L      equ	404	;# 
  2980   000195                     C1FLTOBJ1H      equ	405	;# 
  2981   000196                     C1FLTOBJ1U      equ	406	;# 
  2982   000197                     C1FLTOBJ1T      equ	407	;# 
  2983   000198                     C1MASK1         equ	408	;# 
  2984   000198                     C1MASK1L        equ	408	;# 
  2985   000199                     C1MASK1H        equ	409	;# 
  2986   00019A                     C1MASK1U        equ	410	;# 
  2987   00019B                     C1MASK1T        equ	411	;# 
  2988   00019C                     C1FLTOBJ2       equ	412	;# 
  2989   00019C                     C1FLTOBJ2L      equ	412	;# 
  2990   00019D                     C1FLTOBJ2H      equ	413	;# 
  2991   00019E                     C1FLTOBJ2U      equ	414	;# 
  2992   00019F                     C1FLTOBJ2T      equ	415	;# 
  2993   0001A0                     C1MASK2         equ	416	;# 
  2994   0001A0                     C1MASK2L        equ	416	;# 
  2995   0001A1                     C1MASK2H        equ	417	;# 
  2996   0001A2                     C1MASK2U        equ	418	;# 
  2997   0001A3                     C1MASK2T        equ	419	;# 
  2998   0001A4                     C1FLTOBJ3       equ	420	;# 
  2999   0001A4                     C1FLTOBJ3L      equ	420	;# 
  3000   0001A5                     C1FLTOBJ3H      equ	421	;# 
  3001   0001A6                     C1FLTOBJ3U      equ	422	;# 
  3002   0001A7                     C1FLTOBJ3T      equ	423	;# 
  3003   0001A8                     C1MASK3         equ	424	;# 
  3004   0001A8                     C1MASK3L        equ	424	;# 
  3005   0001A9                     C1MASK3H        equ	425	;# 
  3006   0001AA                     C1MASK3U        equ	426	;# 
  3007   0001AB                     C1MASK3T        equ	427	;# 
  3008   0001AC                     C1FLTOBJ4       equ	428	;# 
  3009   0001AC                     C1FLTOBJ4L      equ	428	;# 
  3010   0001AD                     C1FLTOBJ4H      equ	429	;# 
  3011   0001AE                     C1FLTOBJ4U      equ	430	;# 
  3012   0001AF                     C1FLTOBJ4T      equ	431	;# 
  3013   0001B0                     C1MASK4         equ	432	;# 
  3014   0001B0                     C1MASK4L        equ	432	;# 
  3015   0001B1                     C1MASK4H        equ	433	;# 
  3016   0001B2                     C1MASK4U        equ	434	;# 
  3017   0001B3                     C1MASK4T        equ	435	;# 
  3018   0001B4                     C1FLTOBJ5       equ	436	;# 
  3019   0001B4                     C1FLTOBJ5L      equ	436	;# 
  3020   0001B5                     C1FLTOBJ5H      equ	437	;# 
  3021   0001B6                     C1FLTOBJ5U      equ	438	;# 
  3022   0001B7                     C1FLTOBJ5T      equ	439	;# 
  3023   0001B8                     C1MASK5         equ	440	;# 
  3024   0001B8                     C1MASK5L        equ	440	;# 
  3025   0001B9                     C1MASK5H        equ	441	;# 
  3026   0001BA                     C1MASK5U        equ	442	;# 
  3027   0001BB                     C1MASK5T        equ	443	;# 
  3028   0001BC                     C1FLTOBJ6       equ	444	;# 
  3029   0001BC                     C1FLTOBJ6L      equ	444	;# 
  3030   0001BD                     C1FLTOBJ6H      equ	445	;# 
  3031   0001BE                     C1FLTOBJ6U      equ	446	;# 
  3032   0001BF                     C1FLTOBJ6T      equ	447	;# 
  3033   0001C0                     C1MASK6         equ	448	;# 
  3034   0001C0                     C1MASK6L        equ	448	;# 
  3035   0001C1                     C1MASK6H        equ	449	;# 
  3036   0001C2                     C1MASK6U        equ	450	;# 
  3037   0001C3                     C1MASK6T        equ	451	;# 
  3038   0001C4                     C1FLTOBJ7       equ	452	;# 
  3039   0001C4                     C1FLTOBJ7L      equ	452	;# 
  3040   0001C5                     C1FLTOBJ7H      equ	453	;# 
  3041   0001C6                     C1FLTOBJ7U      equ	454	;# 
  3042   0001C7                     C1FLTOBJ7T      equ	455	;# 
  3043   0001C8                     C1MASK7         equ	456	;# 
  3044   0001C8                     C1MASK7L        equ	456	;# 
  3045   0001C9                     C1MASK7H        equ	457	;# 
  3046   0001CA                     C1MASK7U        equ	458	;# 
  3047   0001CB                     C1MASK7T        equ	459	;# 
  3048   0001CC                     C1FLTOBJ8       equ	460	;# 
  3049   0001CC                     C1FLTOBJ8L      equ	460	;# 
  3050   0001CD                     C1FLTOBJ8H      equ	461	;# 
  3051   0001CE                     C1FLTOBJ8U      equ	462	;# 
  3052   0001CF                     C1FLTOBJ8T      equ	463	;# 
  3053   0001D0                     C1MASK8         equ	464	;# 
  3054   0001D0                     C1MASK8L        equ	464	;# 
  3055   0001D1                     C1MASK8H        equ	465	;# 
  3056   0001D2                     C1MASK8U        equ	466	;# 
  3057   0001D3                     C1MASK8T        equ	467	;# 
  3058   0001D4                     C1FLTOBJ9       equ	468	;# 
  3059   0001D4                     C1FLTOBJ9L      equ	468	;# 
  3060   0001D5                     C1FLTOBJ9H      equ	469	;# 
  3061   0001D6                     C1FLTOBJ9U      equ	470	;# 
  3062   0001D7                     C1FLTOBJ9T      equ	471	;# 
  3063   0001D8                     C1MASK9         equ	472	;# 
  3064   0001D8                     C1MASK9L        equ	472	;# 
  3065   0001D9                     C1MASK9H        equ	473	;# 
  3066   0001DA                     C1MASK9U        equ	474	;# 
  3067   0001DB                     C1MASK9T        equ	475	;# 
  3068   0001DC                     C1FLTOBJ10      equ	476	;# 
  3069   0001DC                     C1FLTOBJ10L     equ	476	;# 
  3070   0001DD                     C1FLTOBJ10H     equ	477	;# 
  3071   0001DE                     C1FLTOBJ10U     equ	478	;# 
  3072   0001DF                     C1FLTOBJ10T     equ	479	;# 
  3073   0001E0                     C1MASK10        equ	480	;# 
  3074   0001E0                     C1MASK10L       equ	480	;# 
  3075   0001E1                     C1MASK10H       equ	481	;# 
  3076   0001E2                     C1MASK10U       equ	482	;# 
  3077   0001E3                     C1MASK10T       equ	483	;# 
  3078   0001E4                     C1FLTOBJ11      equ	484	;# 
  3079   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3080   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3081   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3082   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3083   0001E8                     C1MASK11        equ	488	;# 
  3084   0001E8                     C1MASK11L       equ	488	;# 
  3085   0001E9                     C1MASK11H       equ	489	;# 
  3086   0001EA                     C1MASK11U       equ	490	;# 
  3087   0001EB                     C1MASK11T       equ	491	;# 
  3088   000200                     PPSLOCK         equ	512	;# 
  3089   000201                     RA0PPS          equ	513	;# 
  3090   000202                     RA1PPS          equ	514	;# 
  3091   000203                     RA2PPS          equ	515	;# 
  3092   000204                     RA3PPS          equ	516	;# 
  3093   000205                     RA4PPS          equ	517	;# 
  3094   000206                     RA5PPS          equ	518	;# 
  3095   000207                     RA6PPS          equ	519	;# 
  3096   000208                     RA7PPS          equ	520	;# 
  3097   000209                     RB0PPS          equ	521	;# 
  3098   00020A                     RB1PPS          equ	522	;# 
  3099   00020B                     RB2PPS          equ	523	;# 
  3100   00020C                     RB3PPS          equ	524	;# 
  3101   00020D                     RB4PPS          equ	525	;# 
  3102   00020E                     RB5PPS          equ	526	;# 
  3103   00020F                     RB6PPS          equ	527	;# 
  3104   000210                     RB7PPS          equ	528	;# 
  3105   000211                     RC0PPS          equ	529	;# 
  3106   000212                     RC1PPS          equ	530	;# 
  3107   000213                     RC2PPS          equ	531	;# 
  3108   000214                     RC3PPS          equ	532	;# 
  3109   000215                     RC4PPS          equ	533	;# 
  3110   000216                     RC5PPS          equ	534	;# 
  3111   000217                     RC6PPS          equ	535	;# 
  3112   000218                     RC7PPS          equ	536	;# 
  3113   000219                     RD0PPS          equ	537	;# 
  3114   00021A                     RD1PPS          equ	538	;# 
  3115   00021B                     RD2PPS          equ	539	;# 
  3116   00021C                     RD3PPS          equ	540	;# 
  3117   00021D                     RD4PPS          equ	541	;# 
  3118   00021E                     RD5PPS          equ	542	;# 
  3119   00021F                     RD6PPS          equ	543	;# 
  3120   000220                     RD7PPS          equ	544	;# 
  3121   000221                     RE0PPS          equ	545	;# 
  3122   000222                     RE1PPS          equ	546	;# 
  3123   000223                     RE2PPS          equ	547	;# 
  3124   00023D                     CANRXPPS        equ	573	;# 
  3125   00023E                     INT0PPS         equ	574	;# 
  3126   00023F                     INT1PPS         equ	575	;# 
  3127   000240                     INT2PPS         equ	576	;# 
  3128   000241                     T0CKIPPS        equ	577	;# 
  3129   000242                     T1CKIPPS        equ	578	;# 
  3130   000243                     T1GPPS          equ	579	;# 
  3131   000244                     T3CKIPPS        equ	580	;# 
  3132   000245                     T3GPPS          equ	581	;# 
  3133   000246                     T5CKIPPS        equ	582	;# 
  3134   000247                     T5GPPS          equ	583	;# 
  3135   000248                     T2INPPS         equ	584	;# 
  3136   000249                     T4INPPS         equ	585	;# 
  3137   00024A                     T6INPPS         equ	586	;# 
  3138   00024B                     TUIN0PPS        equ	587	;# 
  3139   00024C                     TUIN1PPS        equ	588	;# 
  3140   00024F                     CCP1PPS         equ	591	;# 
  3141   000250                     CCP2PPS         equ	592	;# 
  3142   000251                     CCP3PPS         equ	593	;# 
  3143   000253                     PWM1ERSPPS      equ	595	;# 
  3144   000254                     PWM2ERSPPS      equ	596	;# 
  3145   000255                     PWM3ERSPPS      equ	597	;# 
  3146   000256                     PWM4ERSPPS      equ	598	;# 
  3147   000257                     PWMIN0PPS       equ	599	;# 
  3148   000258                     PWMIN1PPS       equ	600	;# 
  3149   000259                     SMT1WINPPS      equ	601	;# 
  3150   00025A                     SMT1SIGPPS      equ	602	;# 
  3151   00025B                     CWG1PPS         equ	603	;# 
  3152   00025B                     CWG1INPPS       equ	603	;# 
  3153   00025C                     CWG2PPS         equ	604	;# 
  3154   00025C                     CWG2INPPS       equ	604	;# 
  3155   00025D                     CWG3PPS         equ	605	;# 
  3156   00025D                     CWG3INPPS       equ	605	;# 
  3157   00025E                     MD1CARLPPS      equ	606	;# 
  3158   00025E                     MDCARLPPS       equ	606	;# 
  3159   00025F                     MD1CARHPPS      equ	607	;# 
  3160   00025F                     MDCARHPPS       equ	607	;# 
  3161   000260                     MD1SRCPPS       equ	608	;# 
  3162   000260                     MDSRCPPS        equ	608	;# 
  3163   000261                     CLCIN0PPS       equ	609	;# 
  3164   000262                     CLCIN1PPS       equ	610	;# 
  3165   000263                     CLCIN2PPS       equ	611	;# 
  3166   000264                     CLCIN3PPS       equ	612	;# 
  3167   000265                     CLCIN4PPS       equ	613	;# 
  3168   000266                     CLCIN5PPS       equ	614	;# 
  3169   000267                     CLCIN6PPS       equ	615	;# 
  3170   000268                     CLCIN7PPS       equ	616	;# 
  3171   000269                     ADACTPPS        equ	617	;# 
  3172   00026A                     SPI1SCKPPS      equ	618	;# 
  3173   00026B                     SPI1SDIPPS      equ	619	;# 
  3174   00026C                     SPI1SSPPS       equ	620	;# 
  3175   00026D                     SPI2SCKPPS      equ	621	;# 
  3176   00026E                     SPI2SDIPPS      equ	622	;# 
  3177   00026F                     SPI2SSPPS       equ	623	;# 
  3178   000270                     I2C1SDAPPS      equ	624	;# 
  3179   000271                     I2C1SCLPPS      equ	625	;# 
  3180   000272                     U1RXPPS         equ	626	;# 
  3181   000273                     U1CTSPPS        equ	627	;# 
  3182   000274                     U2RXPPS         equ	628	;# 
  3183   000275                     U2CTSPPS        equ	629	;# 
  3184   000276                     U3RXPPS         equ	630	;# 
  3185   000277                     U3CTSPPS        equ	631	;# 
  3186   000278                     U4RXPPS         equ	632	;# 
  3187   000279                     U4CTSPPS        equ	633	;# 
  3188   00027A                     U5RXPPS         equ	634	;# 
  3189   00027B                     U5CTSPPS        equ	635	;# 
  3190   000286                     RC4I2C          equ	646	;# 
  3191   000287                     RC3I2C          equ	647	;# 
  3192   000288                     RB2I2C          equ	648	;# 
  3193   000289                     RB1I2C          equ	649	;# 
  3194   00028A                     I2C1RXB         equ	650	;# 
  3195   00028B                     I2C1TXB         equ	651	;# 
  3196   00028C                     I2C1CNTL        equ	652	;# 
  3197   00028D                     I2C1CNTH        equ	653	;# 
  3198   00028E                     I2C1ADB0        equ	654	;# 
  3199   00028F                     I2C1ADB1        equ	655	;# 
  3200   000290                     I2C1ADR0        equ	656	;# 
  3201   000291                     I2C1ADR1        equ	657	;# 
  3202   000292                     I2C1ADR2        equ	658	;# 
  3203   000293                     I2C1ADR3        equ	659	;# 
  3204   000294                     I2C1CON0        equ	660	;# 
  3205   000295                     I2C1CON1        equ	661	;# 
  3206   000296                     I2C1CON2        equ	662	;# 
  3207   000297                     I2C1ERR         equ	663	;# 
  3208   000298                     I2C1STAT0       equ	664	;# 
  3209   000299                     I2C1STAT1       equ	665	;# 
  3210   00029A                     I2C1PIR         equ	666	;# 
  3211   00029B                     I2C1PIE         equ	667	;# 
  3212   00029C                     I2C1BTO         equ	668	;# 
  3213   00029D                     I2C1BAUD        equ	669	;# 
  3214   00029E                     I2C1CLK         equ	670	;# 
  3215   00029F                     I2C1BTOC        equ	671	;# 
  3216   0002A1                     U1RXB           equ	673	;# 
  3217   0002A1                     U1RXBL          equ	673	;# 
  3218   0002A2                     U1RXCHK         equ	674	;# 
  3219   0002A3                     U1TXB           equ	675	;# 
  3220   0002A3                     U1TXBL          equ	675	;# 
  3221   0002A4                     U1TXCHK         equ	676	;# 
  3222   0002A5                     U1P1            equ	677	;# 
  3223   0002A5                     U1P1L           equ	677	;# 
  3224   0002A6                     U1P1H           equ	678	;# 
  3225   0002A7                     U1P2            equ	679	;# 
  3226   0002A7                     U1P2L           equ	679	;# 
  3227   0002A8                     U1P2H           equ	680	;# 
  3228   0002A9                     U1P3            equ	681	;# 
  3229   0002A9                     U1P3L           equ	681	;# 
  3230   0002AA                     U1P3H           equ	682	;# 
  3231   0002AB                     U1CON0          equ	683	;# 
  3232   0002AC                     U1CON1          equ	684	;# 
  3233   0002AD                     U1CON2          equ	685	;# 
  3234   0002AE                     U1BRG           equ	686	;# 
  3235   0002AE                     U1BRGL          equ	686	;# 
  3236   0002AF                     U1BRGH          equ	687	;# 
  3237   0002B0                     U1FIFO          equ	688	;# 
  3238   0002B1                     U1UIR           equ	689	;# 
  3239   0002B2                     U1ERRIR         equ	690	;# 
  3240   0002B3                     U1ERRIE         equ	691	;# 
  3241   0002B4                     U2RXB           equ	692	;# 
  3242   0002B4                     U2RXBL          equ	692	;# 
  3243   0002B5                     U2RXCHK         equ	693	;# 
  3244   0002B6                     U2TXB           equ	694	;# 
  3245   0002B6                     U2TXBL          equ	694	;# 
  3246   0002B7                     U2TXCHK         equ	695	;# 
  3247   0002B8                     U2P1            equ	696	;# 
  3248   0002B8                     U2P1L           equ	696	;# 
  3249   0002B9                     U2P1H           equ	697	;# 
  3250   0002BA                     U2P2            equ	698	;# 
  3251   0002BA                     U2P2L           equ	698	;# 
  3252   0002BB                     U2P2H           equ	699	;# 
  3253   0002BC                     U2P3            equ	700	;# 
  3254   0002BC                     U2P3L           equ	700	;# 
  3255   0002BD                     U2P3H           equ	701	;# 
  3256   0002BE                     U2CON0          equ	702	;# 
  3257   0002BF                     U2CON1          equ	703	;# 
  3258   0002C0                     U2CON2          equ	704	;# 
  3259   0002C1                     U2BRG           equ	705	;# 
  3260   0002C1                     U2BRGL          equ	705	;# 
  3261   0002C2                     U2BRGH          equ	706	;# 
  3262   0002C3                     U2FIFO          equ	707	;# 
  3263   0002C4                     U2UIR           equ	708	;# 
  3264   0002C5                     U2ERRIR         equ	709	;# 
  3265   0002C6                     U2ERRIE         equ	710	;# 
  3266   0002C7                     U3RXB           equ	711	;# 
  3267   0002C7                     U3RXBL          equ	711	;# 
  3268   0002C9                     U3TXB           equ	713	;# 
  3269   0002C9                     U3TXBL          equ	713	;# 
  3270   0002CB                     U3P1            equ	715	;# 
  3271   0002CB                     U3P1L           equ	715	;# 
  3272   0002CD                     U3P2            equ	717	;# 
  3273   0002CD                     U3P2L           equ	717	;# 
  3274   0002CF                     U3P3            equ	719	;# 
  3275   0002CF                     U3P3L           equ	719	;# 
  3276   0002D1                     U3CON0          equ	721	;# 
  3277   0002D2                     U3CON1          equ	722	;# 
  3278   0002D3                     U3CON2          equ	723	;# 
  3279   0002D4                     U3BRG           equ	724	;# 
  3280   0002D4                     U3BRGL          equ	724	;# 
  3281   0002D5                     U3BRGH          equ	725	;# 
  3282   0002D6                     U3FIFO          equ	726	;# 
  3283   0002D7                     U3UIR           equ	727	;# 
  3284   0002D8                     U3ERRIR         equ	728	;# 
  3285   0002D9                     U3ERRIE         equ	729	;# 
  3286   0002DA                     U4RXB           equ	730	;# 
  3287   0002DA                     U4RXBL          equ	730	;# 
  3288   0002DC                     U4TXB           equ	732	;# 
  3289   0002DC                     U4TXBL          equ	732	;# 
  3290   0002DE                     U4P1            equ	734	;# 
  3291   0002DE                     U4P1L           equ	734	;# 
  3292   0002E0                     U4P2            equ	736	;# 
  3293   0002E0                     U4P2L           equ	736	;# 
  3294   0002E2                     U4P3            equ	738	;# 
  3295   0002E2                     U4P3L           equ	738	;# 
  3296   0002E4                     U4CON0          equ	740	;# 
  3297   0002E5                     U4CON1          equ	741	;# 
  3298   0002E6                     U4CON2          equ	742	;# 
  3299   0002E7                     U4BRG           equ	743	;# 
  3300   0002E7                     U4BRGL          equ	743	;# 
  3301   0002E8                     U4BRGH          equ	744	;# 
  3302   0002E9                     U4FIFO          equ	745	;# 
  3303   0002EA                     U4UIR           equ	746	;# 
  3304   0002EB                     U4ERRIR         equ	747	;# 
  3305   0002EC                     U4ERRIE         equ	748	;# 
  3306   0002ED                     U5RXB           equ	749	;# 
  3307   0002ED                     U5RXBL          equ	749	;# 
  3308   0002EF                     U5TXB           equ	751	;# 
  3309   0002EF                     U5TXBL          equ	751	;# 
  3310   0002F1                     U5P1            equ	753	;# 
  3311   0002F1                     U5P1L           equ	753	;# 
  3312   0002F3                     U5P2            equ	755	;# 
  3313   0002F3                     U5P2L           equ	755	;# 
  3314   0002F5                     U5P3            equ	757	;# 
  3315   0002F5                     U5P3L           equ	757	;# 
  3316   0002F7                     U5CON0          equ	759	;# 
  3317   0002F8                     U5CON1          equ	760	;# 
  3318   0002F9                     U5CON2          equ	761	;# 
  3319   0002FA                     U5BRG           equ	762	;# 
  3320   0002FA                     U5BRGL          equ	762	;# 
  3321   0002FB                     U5BRGH          equ	763	;# 
  3322   0002FC                     U5FIFO          equ	764	;# 
  3323   0002FD                     U5UIR           equ	765	;# 
  3324   0002FE                     U5ERRIR         equ	766	;# 
  3325   0002FF                     U5ERRIE         equ	767	;# 
  3326   000300                     SMT1TMR         equ	768	;# 
  3327   000300                     SMT1TMRL        equ	768	;# 
  3328   000301                     SMT1TMRH        equ	769	;# 
  3329   000302                     SMT1TMRU        equ	770	;# 
  3330   000303                     SMT1CPR         equ	771	;# 
  3331   000303                     SMT1CPRL        equ	771	;# 
  3332   000304                     SMT1CPRH        equ	772	;# 
  3333   000305                     SMT1CPRU        equ	773	;# 
  3334   000306                     SMT1CPW         equ	774	;# 
  3335   000306                     SMT1CPWL        equ	774	;# 
  3336   000307                     SMT1CPWH        equ	775	;# 
  3337   000308                     SMT1CPWU        equ	776	;# 
  3338   000309                     SMT1PR          equ	777	;# 
  3339   000309                     SMT1PRL         equ	777	;# 
  3340   00030A                     SMT1PRH         equ	778	;# 
  3341   00030B                     SMT1PRU         equ	779	;# 
  3342   00030C                     SMT1CON0        equ	780	;# 
  3343   00030D                     SMT1CON1        equ	781	;# 
  3344   00030E                     SMT1STAT        equ	782	;# 
  3345   00030F                     SMT1CLK         equ	783	;# 
  3346   000310                     SMT1SIG         equ	784	;# 
  3347   000311                     SMT1WIN         equ	785	;# 
  3348   000318                     TMR0L           equ	792	;# 
  3349   000318                     TMR0            equ	792	;# 
  3350   000319                     TMR0H           equ	793	;# 
  3351   000319                     PR0             equ	793	;# 
  3352   00031A                     T0CON0          equ	794	;# 
  3353   00031B                     T0CON1          equ	795	;# 
  3354   00031C                     TMR1            equ	796	;# 
  3355   00031C                     TMR1L           equ	796	;# 
  3356   00031D                     TMR1H           equ	797	;# 
  3357   00031E                     T1CON           equ	798	;# 
  3358   00031E                     TMR1CON         equ	798	;# 
  3359   00031F                     T1GCON          equ	799	;# 
  3360   00031F                     TMR1GCON        equ	799	;# 
  3361   000320                     T1GATE          equ	800	;# 
  3362   000320                     TMR1GATE        equ	800	;# 
  3363   000321                     T1CLK           equ	801	;# 
  3364   000321                     TMR1CLK         equ	801	;# 
  3365   000321                     PR1             equ	801	;# 
  3366   000322                     T2TMR           equ	802	;# 
  3367   000322                     TMR2            equ	802	;# 
  3368   000323                     T2PR            equ	803	;# 
  3369   000323                     PR2             equ	803	;# 
  3370   000324                     T2CON           equ	804	;# 
  3371   000325                     T2HLT           equ	805	;# 
  3372   000326                     T2CLKCON        equ	806	;# 
  3373   000326                     T2CLK           equ	806	;# 
  3374   000327                     T2RST           equ	807	;# 
  3375   000328                     TMR3            equ	808	;# 
  3376   000328                     TMR3L           equ	808	;# 
  3377   000329                     TMR3H           equ	809	;# 
  3378   00032A                     T3CON           equ	810	;# 
  3379   00032A                     TMR3CON         equ	810	;# 
  3380   00032B                     T3GCON          equ	811	;# 
  3381   00032B                     TMR3GCON        equ	811	;# 
  3382   00032C                     T3GATE          equ	812	;# 
  3383   00032C                     TMR3GATE        equ	812	;# 
  3384   00032D                     T3CLK           equ	813	;# 
  3385   00032D                     TMR3CLK         equ	813	;# 
  3386   00032D                     PR3             equ	813	;# 
  3387   00032E                     T4TMR           equ	814	;# 
  3388   00032E                     TMR4            equ	814	;# 
  3389   00032F                     T4PR            equ	815	;# 
  3390   00032F                     PR4             equ	815	;# 
  3391   000330                     T4CON           equ	816	;# 
  3392   000331                     T4HLT           equ	817	;# 
  3393   000332                     T4CLKCON        equ	818	;# 
  3394   000332                     T4CLK           equ	818	;# 
  3395   000333                     T4RST           equ	819	;# 
  3396   000334                     TMR5            equ	820	;# 
  3397   000334                     TMR5L           equ	820	;# 
  3398   000335                     TMR5H           equ	821	;# 
  3399   000336                     T5CON           equ	822	;# 
  3400   000336                     TMR5CON         equ	822	;# 
  3401   000337                     T5GCON          equ	823	;# 
  3402   000337                     TMR5GCON        equ	823	;# 
  3403   000338                     T5GATE          equ	824	;# 
  3404   000338                     TMR5GATE        equ	824	;# 
  3405   000339                     T5CLK           equ	825	;# 
  3406   000339                     TMR5CLK         equ	825	;# 
  3407   000339                     PR5             equ	825	;# 
  3408   00033A                     T6TMR           equ	826	;# 
  3409   00033A                     TMR6            equ	826	;# 
  3410   00033B                     T6PR            equ	827	;# 
  3411   00033B                     PR6             equ	827	;# 
  3412   00033C                     T6CON           equ	828	;# 
  3413   00033D                     T6HLT           equ	829	;# 
  3414   00033E                     T6CLKCON        equ	830	;# 
  3415   00033E                     T6CLK           equ	830	;# 
  3416   00033F                     T6RST           equ	831	;# 
  3417   000340                     CCPR1           equ	832	;# 
  3418   000340                     CCPR1L          equ	832	;# 
  3419   000341                     CCPR1H          equ	833	;# 
  3420   000342                     CCP1CON         equ	834	;# 
  3421   000343                     CCP1CAP         equ	835	;# 
  3422   000344                     CCPR2           equ	836	;# 
  3423   000344                     CCPR2L          equ	836	;# 
  3424   000345                     CCPR2H          equ	837	;# 
  3425   000346                     CCP2CON         equ	838	;# 
  3426   000347                     CCP2CAP         equ	839	;# 
  3427   000348                     CCPR3           equ	840	;# 
  3428   000348                     CCPR3L          equ	840	;# 
  3429   000349                     CCPR3H          equ	841	;# 
  3430   00034A                     CCP3CON         equ	842	;# 
  3431   00034B                     CCP3CAP         equ	843	;# 
  3432   00034C                     CCPTMRS0        equ	844	;# 
  3433   00034F                     CRCDATA         equ	847	;# 
  3434   00034F                     CRCDATAL        equ	847	;# 
  3435   000350                     CRCDATAH        equ	848	;# 
  3436   000351                     CRCDATAU        equ	849	;# 
  3437   000352                     CRCDATAT        equ	850	;# 
  3438   000353                     CRCOUT          equ	851	;# 
  3439   000353                     CRCSHFT         equ	851	;# 
  3440   000353                     CRCXOR          equ	851	;# 
  3441   000353                     CRCOUTL         equ	851	;# 
  3442   000353                     CRCSHFTL        equ	851	;# 
  3443   000353                     CRCSHIFTL       equ	851	;# 
  3444   000353                     CRCXORL         equ	851	;# 
  3445   000354                     CRCOUTH         equ	852	;# 
  3446   000354                     CRCSHFTH        equ	852	;# 
  3447   000354                     CRCSHIFTH       equ	852	;# 
  3448   000354                     CRCXORH         equ	852	;# 
  3449   000355                     CRCOUTU         equ	853	;# 
  3450   000355                     CRCSHFTU        equ	853	;# 
  3451   000355                     CRCSHIFTU       equ	853	;# 
  3452   000355                     CRCXORU         equ	853	;# 
  3453   000356                     CRCOUTT         equ	854	;# 
  3454   000356                     CRCSHFTT        equ	854	;# 
  3455   000356                     CRCSHIFTT       equ	854	;# 
  3456   000356                     CRCXORT         equ	854	;# 
  3457   000357                     CRCCON0         equ	855	;# 
  3458   000358                     CRCCON1         equ	856	;# 
  3459   000359                     CRCCON2         equ	857	;# 
  3460   00035A                     SCANLADR        equ	858	;# 
  3461   00035A                     SCANLADRL       equ	858	;# 
  3462   00035B                     SCANLADRH       equ	859	;# 
  3463   00035C                     SCANLADRU       equ	860	;# 
  3464   00035D                     SCANHADR        equ	861	;# 
  3465   00035D                     SCANHADRL       equ	861	;# 
  3466   00035E                     SCANHADRH       equ	862	;# 
  3467   00035F                     SCANHADRU       equ	863	;# 
  3468   000360                     SCANCON0        equ	864	;# 
  3469   000361                     SCANTRIG        equ	865	;# 
  3470   000362                     IPR0            equ	866	;# 
  3471   000363                     IPR1            equ	867	;# 
  3472   000364                     IPR2            equ	868	;# 
  3473   000365                     IPR3            equ	869	;# 
  3474   000366                     IPR4            equ	870	;# 
  3475   000367                     IPR5            equ	871	;# 
  3476   000368                     IPR6            equ	872	;# 
  3477   000369                     IPR7            equ	873	;# 
  3478   00036A                     IPR8            equ	874	;# 
  3479   00036B                     IPR9            equ	875	;# 
  3480   00036C                     IPR10           equ	876	;# 
  3481   00036D                     IPR11           equ	877	;# 
  3482   00036E                     IPR12           equ	878	;# 
  3483   00036F                     IPR13           equ	879	;# 
  3484   000370                     IPR14           equ	880	;# 
  3485   000371                     IPR15           equ	881	;# 
  3486   000373                     STATUS_CSHAD    equ	883	;# 
  3487   000374                     WREG_CSHAD      equ	884	;# 
  3488   000375                     BSR_CSHAD       equ	885	;# 
  3489   000376                     SHADCON         equ	886	;# 
  3490   000377                     STATUS_SHAD     equ	887	;# 
  3491   000378                     WREG_SHAD       equ	888	;# 
  3492   000379                     BSR_SHAD        equ	889	;# 
  3493   00037A                     PCLATH_SHAD     equ	890	;# 
  3494   00037B                     PCLATU_SHAD     equ	891	;# 
  3495   00037C                     FSR0SH          equ	892	;# 
  3496   00037C                     FSR0L_SHAD      equ	892	;# 
  3497   00037D                     FSR0H_SHAD      equ	893	;# 
  3498   00037E                     FSR1SH          equ	894	;# 
  3499   00037E                     FSR1L_SHAD      equ	894	;# 
  3500   00037F                     FSR1H_SHAD      equ	895	;# 
  3501   000380                     FSR2SH          equ	896	;# 
  3502   000380                     FSR2L_SHAD      equ	896	;# 
  3503   000381                     FSR2H_SHAD      equ	897	;# 
  3504   000382                     PRODSH          equ	898	;# 
  3505   000382                     PRODL_SHAD      equ	898	;# 
  3506   000383                     PRODH_SHAD      equ	899	;# 
  3507   000387                     TU16ACON0       equ	903	;# 
  3508   000388                     TU16ACON1       equ	904	;# 
  3509   000389                     TU16AHLT        equ	905	;# 
  3510   00038A                     TU16APS         equ	906	;# 
  3511   00038B                     TU16ATMR        equ	907	;# 
  3512   00038B                     TU16ACR         equ	907	;# 
  3513   00038B                     TU16ATMRL       equ	907	;# 
  3514   00038B                     TU16ACRL        equ	907	;# 
  3515   00038C                     TU16ATMRH       equ	908	;# 
  3516   00038C                     TU16ACRH        equ	908	;# 
  3517   00038D                     TU16APR         equ	909	;# 
  3518   00038D                     TU16APRL        equ	909	;# 
  3519   00038E                     TU16APRH        equ	910	;# 
  3520   00038F                     TU16ACLK        equ	911	;# 
  3521   000390                     TU16AERS        equ	912	;# 
  3522   000393                     TU16BCON0       equ	915	;# 
  3523   000394                     TU16BCON1       equ	916	;# 
  3524   000395                     TU16BHLT        equ	917	;# 
  3525   000396                     TU16BPS         equ	918	;# 
  3526   000397                     TU16BTMR        equ	919	;# 
  3527   000397                     TU16BCR         equ	919	;# 
  3528   000397                     TU16BTMRL       equ	919	;# 
  3529   000397                     TU16BCRL        equ	919	;# 
  3530   000398                     TU16BTMRH       equ	920	;# 
  3531   000398                     TU16BCRH        equ	920	;# 
  3532   000399                     TU16BPR         equ	921	;# 
  3533   000399                     TU16BPRL        equ	921	;# 
  3534   00039A                     TU16BPRH        equ	922	;# 
  3535   00039B                     TU16BCLK        equ	923	;# 
  3536   00039C                     TU16BERS        equ	924	;# 
  3537   0003BB                     TUCHAIN         equ	955	;# 
  3538   0003BC                     CWG1CLK         equ	956	;# 
  3539   0003BC                     CWG1CLKCON      equ	956	;# 
  3540   0003BD                     CWG1ISM         equ	957	;# 
  3541   0003BE                     CWG1DBR         equ	958	;# 
  3542   0003BF                     CWG1DBF         equ	959	;# 
  3543   0003C0                     CWG1CON0        equ	960	;# 
  3544   0003C1                     CWG1CON1        equ	961	;# 
  3545   0003C2                     CWG1AS0         equ	962	;# 
  3546   0003C3                     CWG1AS1         equ	963	;# 
  3547   0003C4                     CWG1STR         equ	964	;# 
  3548   0003C5                     CWG2CLK         equ	965	;# 
  3549   0003C5                     CWG2CLKCON      equ	965	;# 
  3550   0003C6                     CWG2ISM         equ	966	;# 
  3551   0003C7                     CWG2DBR         equ	967	;# 
  3552   0003C8                     CWG2DBF         equ	968	;# 
  3553   0003C9                     CWG2CON0        equ	969	;# 
  3554   0003CA                     CWG2CON1        equ	970	;# 
  3555   0003CB                     CWG2AS0         equ	971	;# 
  3556   0003CC                     CWG2AS1         equ	972	;# 
  3557   0003CD                     CWG2STR         equ	973	;# 
  3558   0003CE                     CWG3CLK         equ	974	;# 
  3559   0003CE                     CWG3CLKCON      equ	974	;# 
  3560   0003CF                     CWG3ISM         equ	975	;# 
  3561   0003D0                     CWG3DBR         equ	976	;# 
  3562   0003D1                     CWG3DBF         equ	977	;# 
  3563   0003D2                     CWG3CON0        equ	978	;# 
  3564   0003D3                     CWG3CON1        equ	979	;# 
  3565   0003D4                     CWG3AS0         equ	980	;# 
  3566   0003D5                     CWG3AS1         equ	981	;# 
  3567   0003D6                     CWG3STR         equ	982	;# 
  3568   0003D7                     FVRCON          equ	983	;# 
  3569   0003D8                     ADCPCON         equ	984	;# 
  3570   0003D8                     ADCP            equ	984	;# 
  3571   0003D9                     ADLTH           equ	985	;# 
  3572   0003D9                     ADLTHL          equ	985	;# 
  3573   0003DA                     ADLTHH          equ	986	;# 
  3574   0003DB                     ADUTH           equ	987	;# 
  3575   0003DB                     ADUTHL          equ	987	;# 
  3576   0003DC                     ADUTHH          equ	988	;# 
  3577   0003DD                     ADERR           equ	989	;# 
  3578   0003DD                     ADERRL          equ	989	;# 
  3579   0003DE                     ADERRH          equ	990	;# 
  3580   0003DF                     ADSTPT          equ	991	;# 
  3581   0003DF                     ADSTPTL         equ	991	;# 
  3582   0003E0                     ADSTPTH         equ	992	;# 
  3583   0003E1                     ADFLTR          equ	993	;# 
  3584   0003E1                     ADFLTRL         equ	993	;# 
  3585   0003E2                     ADFLTRH         equ	994	;# 
  3586   0003E3                     ADACC           equ	995	;# 
  3587   0003E3                     ADACCL          equ	995	;# 
  3588   0003E4                     ADACCH          equ	996	;# 
  3589   0003E5                     ADACCU          equ	997	;# 
  3590   0003E6                     ADCNT           equ	998	;# 
  3591   0003E7                     ADRPT           equ	999	;# 
  3592   0003E8                     ADPREV          equ	1000	;# 
  3593   0003E8                     ADPREVL         equ	1000	;# 
  3594   0003E9                     ADPREVH         equ	1001	;# 
  3595   0003EA                     ADRES           equ	1002	;# 
  3596   0003EA                     ADRESL          equ	1002	;# 
  3597   0003EB                     ADRESH          equ	1003	;# 
  3598   0003EC                     ADPCH           equ	1004	;# 
  3599   0003EE                     ADACQ           equ	1006	;# 
  3600   0003EE                     ADACQL          equ	1006	;# 
  3601   0003EF                     ADACQH          equ	1007	;# 
  3602   0003F0                     ADCAP           equ	1008	;# 
  3603   0003F1                     ADPRE           equ	1009	;# 
  3604   0003F1                     ADPREL          equ	1009	;# 
  3605   0003F2                     ADPREH          equ	1010	;# 
  3606   0003F3                     ADCON0          equ	1011	;# 
  3607   0003F4                     ADCON1          equ	1012	;# 
  3608   0003F5                     ADCON2          equ	1013	;# 
  3609   0003F6                     ADCON3          equ	1014	;# 
  3610   0003F7                     ADSTAT          equ	1015	;# 
  3611   0003F8                     ADREF           equ	1016	;# 
  3612   0003F9                     ADACT           equ	1017	;# 
  3613   0003FA                     ADCLK           equ	1018	;# 
  3614   0003FB                     ADCTX           equ	1019	;# 
  3615   0003FC                     ADCSEL1         equ	1020	;# 
  3616   0003FD                     ADCSEL2         equ	1021	;# 
  3617   0003FE                     ADCSEL3         equ	1022	;# 
  3618   0003FF                     ADCSEL4         equ	1023	;# 
  3619   000400                     ANSELA          equ	1024	;# 
  3620   000401                     WPUA            equ	1025	;# 
  3621   000402                     ODCONA          equ	1026	;# 
  3622   000403                     SLRCONA         equ	1027	;# 
  3623   000404                     INLVLA          equ	1028	;# 
  3624   000405                     IOCAP           equ	1029	;# 
  3625   000406                     IOCAN           equ	1030	;# 
  3626   000407                     IOCAF           equ	1031	;# 
  3627   000408                     ANSELB          equ	1032	;# 
  3628   000409                     WPUB            equ	1033	;# 
  3629   00040A                     ODCONB          equ	1034	;# 
  3630   00040B                     SLRCONB         equ	1035	;# 
  3631   00040C                     INLVLB          equ	1036	;# 
  3632   00040D                     IOCBP           equ	1037	;# 
  3633   00040E                     IOCBN           equ	1038	;# 
  3634   00040F                     IOCBF           equ	1039	;# 
  3635   000410                     ANSELC          equ	1040	;# 
  3636   000411                     WPUC            equ	1041	;# 
  3637   000412                     ODCONC          equ	1042	;# 
  3638   000413                     SLRCONC         equ	1043	;# 
  3639   000414                     INLVLC          equ	1044	;# 
  3640   000415                     IOCCP           equ	1045	;# 
  3641   000416                     IOCCN           equ	1046	;# 
  3642   000417                     IOCCF           equ	1047	;# 
  3643   000418                     ANSELD          equ	1048	;# 
  3644   000419                     WPUD            equ	1049	;# 
  3645   00041A                     ODCOND          equ	1050	;# 
  3646   00041B                     SLRCOND         equ	1051	;# 
  3647   00041C                     INLVLD          equ	1052	;# 
  3648   000420                     ANSELE          equ	1056	;# 
  3649   000421                     WPUE            equ	1057	;# 
  3650   000422                     ODCONE          equ	1058	;# 
  3651   000423                     SLRCONE         equ	1059	;# 
  3652   000424                     INLVLE          equ	1060	;# 
  3653   000425                     IOCEP           equ	1061	;# 
  3654   000426                     IOCEN           equ	1062	;# 
  3655   000427                     IOCEF           equ	1063	;# 
  3656   000440                     NCO1ACC         equ	1088	;# 
  3657   000440                     NCO1ACCL        equ	1088	;# 
  3658   000441                     NCO1ACCH        equ	1089	;# 
  3659   000442                     NCO1ACCU        equ	1090	;# 
  3660   000443                     NCO1INC         equ	1091	;# 
  3661   000443                     NCO1INCL        equ	1091	;# 
  3662   000444                     NCO1INCH        equ	1092	;# 
  3663   000445                     NCO1INCU        equ	1093	;# 
  3664   000446                     NCO1CON         equ	1094	;# 
  3665   000447                     NCO1CLK         equ	1095	;# 
  3666   000448                     NCO2ACC         equ	1096	;# 
  3667   000448                     NCO2ACCL        equ	1096	;# 
  3668   000449                     NCO2ACCH        equ	1097	;# 
  3669   00044A                     NCO2ACCU        equ	1098	;# 
  3670   00044B                     NCO2INC         equ	1099	;# 
  3671   00044B                     NCO2INCL        equ	1099	;# 
  3672   00044C                     NCO2INCH        equ	1100	;# 
  3673   00044D                     NCO2INCU        equ	1101	;# 
  3674   00044E                     NCO2CON         equ	1102	;# 
  3675   00044F                     NCO2CLK         equ	1103	;# 
  3676   000450                     NCO3ACC         equ	1104	;# 
  3677   000450                     NCO3ACCL        equ	1104	;# 
  3678   000451                     NCO3ACCH        equ	1105	;# 
  3679   000452                     NCO3ACCU        equ	1106	;# 
  3680   000453                     NCO3INC         equ	1107	;# 
  3681   000453                     NCO3INCL        equ	1107	;# 
  3682   000454                     NCO3INCH        equ	1108	;# 
  3683   000455                     NCO3INCU        equ	1109	;# 
  3684   000456                     NCO3CON         equ	1110	;# 
  3685   000457                     NCO3CLK         equ	1111	;# 
  3686   000458                     FSCMCON         equ	1112	;# 
  3687   000459                     IVTLOCK         equ	1113	;# 
  3688   00045A                     IVTAD           equ	1114	;# 
  3689   00045A                     IVTADL          equ	1114	;# 
  3690   00045B                     IVTADH          equ	1115	;# 
  3691   00045C                     IVTADU          equ	1116	;# 
  3692   00045D                     IVTBASE         equ	1117	;# 
  3693   00045D                     IVTBASEL        equ	1117	;# 
  3694   00045E                     IVTBASEH        equ	1118	;# 
  3695   00045F                     IVTBASEU        equ	1119	;# 
  3696   000460                     PWM1ERS         equ	1120	;# 
  3697   000461                     PWM1CLK         equ	1121	;# 
  3698   000462                     PWM1LDS         equ	1122	;# 
  3699   000463                     PWM1PR          equ	1123	;# 
  3700   000463                     PWM1PRL         equ	1123	;# 
  3701   000464                     PWM1PRH         equ	1124	;# 
  3702   000465                     PWM1CPRE        equ	1125	;# 
  3703   000466                     PWM1PIPOS       equ	1126	;# 
  3704   000467                     PWM1GIR         equ	1127	;# 
  3705   000468                     PWM1GIE         equ	1128	;# 
  3706   000469                     PWM1CON         equ	1129	;# 
  3707   00046A                     PWM1S1CFG       equ	1130	;# 
  3708   00046B                     PWM1S1P1        equ	1131	;# 
  3709   00046B                     PWM1S1P1L       equ	1131	;# 
  3710   00046C                     PWM1S1P1H       equ	1132	;# 
  3711   00046D                     PWM1S1P2        equ	1133	;# 
  3712   00046D                     PWM1S1P2L       equ	1133	;# 
  3713   00046E                     PWM1S1P2H       equ	1134	;# 
  3714   00046F                     PWM2ERS         equ	1135	;# 
  3715   000470                     PWM2CLK         equ	1136	;# 
  3716   000471                     PWM2LDS         equ	1137	;# 
  3717   000472                     PWM2PR          equ	1138	;# 
  3718   000472                     PWM2PRL         equ	1138	;# 
  3719   000473                     PWM2PRH         equ	1139	;# 
  3720   000474                     PWM2CPRE        equ	1140	;# 
  3721   000475                     PWM2PIPOS       equ	1141	;# 
  3722   000476                     PWM2GIR         equ	1142	;# 
  3723   000477                     PWM2GIE         equ	1143	;# 
  3724   000478                     PWM2CON         equ	1144	;# 
  3725   000479                     PWM2S1CFG       equ	1145	;# 
  3726   00047A                     PWM2S1P1        equ	1146	;# 
  3727   00047A                     PWM2S1P1L       equ	1146	;# 
  3728   00047B                     PWM2S1P1H       equ	1147	;# 
  3729   00047C                     PWM2S1P2        equ	1148	;# 
  3730   00047C                     PWM2S1P2L       equ	1148	;# 
  3731   00047D                     PWM2S1P2H       equ	1149	;# 
  3732   00047E                     PWM3ERS         equ	1150	;# 
  3733   00047F                     PWM3CLK         equ	1151	;# 
  3734   000480                     PWM3LDS         equ	1152	;# 
  3735   000481                     PWM3PR          equ	1153	;# 
  3736   000481                     PWM3PRL         equ	1153	;# 
  3737   000482                     PWM3PRH         equ	1154	;# 
  3738   000483                     PWM3CPRE        equ	1155	;# 
  3739   000484                     PWM3PIPOS       equ	1156	;# 
  3740   000485                     PWM3GIR         equ	1157	;# 
  3741   000486                     PWM3GIE         equ	1158	;# 
  3742   000487                     PWM3CON         equ	1159	;# 
  3743   000488                     PWM3S1CFG       equ	1160	;# 
  3744   000489                     PWM3S1P1        equ	1161	;# 
  3745   000489                     PWM3S1P1L       equ	1161	;# 
  3746   00048A                     PWM3S1P1H       equ	1162	;# 
  3747   00048B                     PWM3S1P2        equ	1163	;# 
  3748   00048B                     PWM3S1P2L       equ	1163	;# 
  3749   00048C                     PWM3S1P2H       equ	1164	;# 
  3750   00048D                     PWM4ERS         equ	1165	;# 
  3751   00048E                     PWM4CLK         equ	1166	;# 
  3752   00048F                     PWM4LDS         equ	1167	;# 
  3753   000490                     PWM4PR          equ	1168	;# 
  3754   000490                     PWM4PRL         equ	1168	;# 
  3755   000491                     PWM4PRH         equ	1169	;# 
  3756   000492                     PWM4CPRE        equ	1170	;# 
  3757   000493                     PWM4PIPOS       equ	1171	;# 
  3758   000494                     PWM4GIR         equ	1172	;# 
  3759   000495                     PWM4GIE         equ	1173	;# 
  3760   000496                     PWM4CON         equ	1174	;# 
  3761   000497                     PWM4S1CFG       equ	1175	;# 
  3762   000498                     PWM4S1P1        equ	1176	;# 
  3763   000498                     PWM4S1P1L       equ	1176	;# 
  3764   000499                     PWM4S1P1H       equ	1177	;# 
  3765   00049A                     PWM4S1P2        equ	1178	;# 
  3766   00049A                     PWM4S1P2L       equ	1178	;# 
  3767   00049B                     PWM4S1P2H       equ	1179	;# 
  3768   00049C                     PWMLOAD         equ	1180	;# 
  3769   00049D                     PWMEN           equ	1181	;# 
  3770   00049E                     PIE0            equ	1182	;# 
  3771   00049F                     PIE1            equ	1183	;# 
  3772   0004A0                     PIE2            equ	1184	;# 
  3773   0004A1                     PIE3            equ	1185	;# 
  3774   0004A2                     PIE4            equ	1186	;# 
  3775   0004A3                     PIE5            equ	1187	;# 
  3776   0004A4                     PIE6            equ	1188	;# 
  3777   0004A5                     PIE7            equ	1189	;# 
  3778   0004A6                     PIE8            equ	1190	;# 
  3779   0004A7                     PIE9            equ	1191	;# 
  3780   0004A8                     PIE10           equ	1192	;# 
  3781   0004A9                     PIE11           equ	1193	;# 
  3782   0004AA                     PIE12           equ	1194	;# 
  3783   0004AB                     PIE13           equ	1195	;# 
  3784   0004AC                     PIE14           equ	1196	;# 
  3785   0004AD                     PIE15           equ	1197	;# 
  3786   0004AE                     PIR0            equ	1198	;# 
  3787   0004AF                     PIR1            equ	1199	;# 
  3788   0004B0                     PIR2            equ	1200	;# 
  3789   0004B1                     PIR3            equ	1201	;# 
  3790   0004B2                     PIR4            equ	1202	;# 
  3791   0004B3                     PIR5            equ	1203	;# 
  3792   0004B4                     PIR6            equ	1204	;# 
  3793   0004B5                     PIR7            equ	1205	;# 
  3794   0004B6                     PIR8            equ	1206	;# 
  3795   0004B7                     PIR9            equ	1207	;# 
  3796   0004B8                     PIR10           equ	1208	;# 
  3797   0004B9                     PIR11           equ	1209	;# 
  3798   0004BA                     PIR12           equ	1210	;# 
  3799   0004BB                     PIR13           equ	1211	;# 
  3800   0004BC                     PIR14           equ	1212	;# 
  3801   0004BD                     PIR15           equ	1213	;# 
  3802   0004BE                     LATA            equ	1214	;# 
  3803   0004BF                     LATB            equ	1215	;# 
  3804   0004C0                     LATC            equ	1216	;# 
  3805   0004C1                     LATD            equ	1217	;# 
  3806   0004C2                     LATE            equ	1218	;# 
  3807   0004C6                     TRISA           equ	1222	;# 
  3808   0004C7                     TRISB           equ	1223	;# 
  3809   0004C8                     TRISC           equ	1224	;# 
  3810   0004C9                     TRISD           equ	1225	;# 
  3811   0004CA                     TRISE           equ	1226	;# 
  3812   0004CE                     PORTA           equ	1230	;# 
  3813   0004CF                     PORTB           equ	1231	;# 
  3814   0004D0                     PORTC           equ	1232	;# 
  3815   0004D1                     PORTD           equ	1233	;# 
  3816   0004D2                     PORTE           equ	1234	;# 
  3817   0004D6                     INTCON0         equ	1238	;# 
  3818   0004D7                     INTCON1         equ	1239	;# 
  3819   0004D8                     STATUS          equ	1240	;# 
  3820   0004D9                     FSR2            equ	1241	;# 
  3821   0004D9                     FSR2L           equ	1241	;# 
  3822   0004DA                     FSR2H           equ	1242	;# 
  3823   0004DB                     PLUSW2          equ	1243	;# 
  3824   0004DC                     PREINC2         equ	1244	;# 
  3825   0004DD                     POSTDEC2        equ	1245	;# 
  3826   0004DE                     POSTINC2        equ	1246	;# 
  3827   0004DF                     INDF2           equ	1247	;# 
  3828   0004E0                     BSR             equ	1248	;# 
  3829   0004E1                     FSR1            equ	1249	;# 
  3830   0004E1                     FSR1L           equ	1249	;# 
  3831   0004E2                     FSR1H           equ	1250	;# 
  3832   0004E3                     PLUSW1          equ	1251	;# 
  3833   0004E4                     PREINC1         equ	1252	;# 
  3834   0004E5                     POSTDEC1        equ	1253	;# 
  3835   0004E6                     POSTINC1        equ	1254	;# 
  3836   0004E7                     INDF1           equ	1255	;# 
  3837   0004E8                     WREG            equ	1256	;# 
  3838   0004E9                     FSR0            equ	1257	;# 
  3839   0004E9                     FSR0L           equ	1257	;# 
  3840   0004EA                     FSR0H           equ	1258	;# 
  3841   0004EB                     PLUSW0          equ	1259	;# 
  3842   0004EC                     PREINC0         equ	1260	;# 
  3843   0004ED                     POSTDEC0        equ	1261	;# 
  3844   0004EE                     POSTINC0        equ	1262	;# 
  3845   0004EF                     INDF0           equ	1263	;# 
  3846   0004F0                     PCON0           equ	1264	;# 
  3847   0004F1                     PCON1           equ	1265	;# 
  3848   0004F2                     CPUDOZE         equ	1266	;# 
  3849   0004F3                     PROD            equ	1267	;# 
  3850   0004F3                     PRODL           equ	1267	;# 
  3851   0004F4                     PRODH           equ	1268	;# 
  3852   0004F5                     TABLAT          equ	1269	;# 
  3853   0004F6                     TBLPTR          equ	1270	;# 
  3854   0004F6                     TBLPTRL         equ	1270	;# 
  3855   0004F7                     TBLPTRH         equ	1271	;# 
  3856   0004F8                     TBLPTRU         equ	1272	;# 
  3857   0004F9                     PCLAT           equ	1273	;# 
  3858   0004F9                     PCL             equ	1273	;# 
  3859   0004FA                     PCLATH          equ	1274	;# 
  3860   0004FB                     PCLATU          equ	1275	;# 
  3861   0004FC                     STKPTR          equ	1276	;# 
  3862   0004FD                     TOS             equ	1277	;# 
  3863   0004FD                     TOSL            equ	1277	;# 
  3864   0004FE                     TOSH            equ	1278	;# 
  3865   0004FF                     TOSU            equ	1279	;# 
  3866   000038                     BOOTREG         equ	56	;# 
  3867   000039                     CLKRCON         equ	57	;# 
  3868   00003A                     CLKRCLK         equ	58	;# 
  3869   000040                     NVMCON0         equ	64	;# 
  3870   000041                     NVMCON1         equ	65	;# 
  3871   000042                     NVMLOCK         equ	66	;# 
  3872   000043                     NVMADR          equ	67	;# 
  3873   000043                     NVMADRL         equ	67	;# 
  3874   000044                     NVMADRH         equ	68	;# 
  3875   000045                     NVMADRU         equ	69	;# 
  3876   000046                     NVMDAT          equ	70	;# 
  3877   000046                     NVMDATL         equ	70	;# 
  3878   000047                     NVMDATH         equ	71	;# 
  3879   000048                     VREGCON         equ	72	;# 
  3880   000049                     BORCON          equ	73	;# 
  3881   00004A                     HLVDCON0        equ	74	;# 
  3882   00004B                     HLVDCON1        equ	75	;# 
  3883   00004C                     ZCDCON          equ	76	;# 
  3884   000060                     PMD0            equ	96	;# 
  3885   000061                     PMD1            equ	97	;# 
  3886   000062                     PMD2            equ	98	;# 
  3887   000063                     PMD3            equ	99	;# 
  3888   000064                     PMD4            equ	100	;# 
  3889   000065                     PMD5            equ	101	;# 
  3890   000066                     PMD6            equ	102	;# 
  3891   000067                     PMD7            equ	103	;# 
  3892   000068                     PMD8            equ	104	;# 
  3893   00006A                     MD1CON0         equ	106	;# 
  3894   00006B                     MD1CON1         equ	107	;# 
  3895   00006C                     MD1SRC          equ	108	;# 
  3896   00006D                     MD1CARL         equ	109	;# 
  3897   00006E                     MD1CARH         equ	110	;# 
  3898   00006F                     CMOUT           equ	111	;# 
  3899   000070                     CM1CON0         equ	112	;# 
  3900   000071                     CM1CON1         equ	113	;# 
  3901   000072                     CM1NCH          equ	114	;# 
  3902   000073                     CM1PCH          equ	115	;# 
  3903   000074                     CM2CON0         equ	116	;# 
  3904   000075                     CM2CON1         equ	117	;# 
  3905   000076                     CM2NCH          equ	118	;# 
  3906   000077                     CM2PCH          equ	119	;# 
  3907   000078                     WDTCON0         equ	120	;# 
  3908   000079                     WDTCON1         equ	121	;# 
  3909   00007A                     WDTPSL          equ	122	;# 
  3910   00007B                     WDTPSH          equ	123	;# 
  3911   00007C                     WDTTMR          equ	124	;# 
  3912   00007D                     DAC1DAT         equ	125	;# 
  3913   00007D                     DAC1DATL        equ	125	;# 
  3914   00007F                     DAC1CON         equ	127	;# 
  3915   000080                     SPI1RXB         equ	128	;# 
  3916   000081                     SPI1TXB         equ	129	;# 
  3917   000082                     SPI1TCNT        equ	130	;# 
  3918   000082                     SPI1TCNTL       equ	130	;# 
  3919   000083                     SPI1TCNTH       equ	131	;# 
  3920   000084                     SPI1CON0        equ	132	;# 
  3921   000085                     SPI1CON1        equ	133	;# 
  3922   000086                     SPI1CON2        equ	134	;# 
  3923   000087                     SPI1STATUS      equ	135	;# 
  3924   000088                     SPI1TWIDTH      equ	136	;# 
  3925   000089                     SPI1BAUD        equ	137	;# 
  3926   00008A                     SPI1INTF        equ	138	;# 
  3927   00008B                     SPI1INTE        equ	139	;# 
  3928   00008C                     SPI1CLK         equ	140	;# 
  3929   00008D                     SPI2RXB         equ	141	;# 
  3930   00008E                     SPI2TXB         equ	142	;# 
  3931   00008F                     SPI2TCNT        equ	143	;# 
  3932   00008F                     SPI2TCNTL       equ	143	;# 
  3933   000090                     SPI2TCNTH       equ	144	;# 
  3934   000091                     SPI2CON0        equ	145	;# 
  3935   000092                     SPI2CON1        equ	146	;# 
  3936   000093                     SPI2CON2        equ	147	;# 
  3937   000094                     SPI2STATUS      equ	148	;# 
  3938   000095                     SPI2TWIDTH      equ	149	;# 
  3939   000096                     SPI2BAUD        equ	150	;# 
  3940   000097                     SPI2INTF        equ	151	;# 
  3941   000098                     SPI2INTE        equ	152	;# 
  3942   000099                     SPI2CLK         equ	153	;# 
  3943   0000AC                     ACTCON          equ	172	;# 
  3944   0000AD                     OSCCON1         equ	173	;# 
  3945   0000AE                     OSCCON2         equ	174	;# 
  3946   0000AF                     OSCCON3         equ	175	;# 
  3947   0000B0                     OSCTUNE         equ	176	;# 
  3948   0000B1                     OSCFRQ          equ	177	;# 
  3949   0000B1                     OSCFREQ         equ	177	;# 
  3950   0000B2                     OSCSTAT         equ	178	;# 
  3951   0000B2                     OSCSTAT1        equ	178	;# 
  3952   0000B3                     OSCEN           equ	179	;# 
  3953   0000B4                     PRLOCK          equ	180	;# 
  3954   0000B5                     SCANPR          equ	181	;# 
  3955   0000B6                     DMA1PR          equ	182	;# 
  3956   0000B7                     DMA2PR          equ	183	;# 
  3957   0000B8                     DMA3PR          equ	184	;# 
  3958   0000B9                     DMA4PR          equ	185	;# 
  3959   0000BA                     DMA5PR          equ	186	;# 
  3960   0000BB                     DMA6PR          equ	187	;# 
  3961   0000BC                     DMA7PR          equ	188	;# 
  3962   0000BD                     DMA8PR          equ	189	;# 
  3963   0000BE                     MAINPR          equ	190	;# 
  3964   0000BF                     ISRPR           equ	191	;# 
  3965   0000D4                     CLCDATA         equ	212	;# 
  3966   0000D5                     CLCSELECT       equ	213	;# 
  3967   0000D6                     CLCnCON         equ	214	;# 
  3968   0000D7                     CLCnPOL         equ	215	;# 
  3969   0000D8                     CLCnSEL0        equ	216	;# 
  3970   0000D9                     CLCnSEL1        equ	217	;# 
  3971   0000DA                     CLCnSEL2        equ	218	;# 
  3972   0000DB                     CLCnSEL3        equ	219	;# 
  3973   0000DC                     CLCnGLS0        equ	220	;# 
  3974   0000DD                     CLCnGLS1        equ	221	;# 
  3975   0000DE                     CLCnGLS2        equ	222	;# 
  3976   0000DF                     CLCnGLS3        equ	223	;# 
  3977   0000E8                     DMASELECT       equ	232	;# 
  3978   0000E9                     DMAnBUF         equ	233	;# 
  3979   0000EA                     DMAnDCNT        equ	234	;# 
  3980   0000EA                     DMAnDCNTL       equ	234	;# 
  3981   0000EB                     DMAnDCNTH       equ	235	;# 
  3982   0000EC                     DMAnDPTR        equ	236	;# 
  3983   0000EC                     DMAnDPTRL       equ	236	;# 
  3984   0000ED                     DMAnDPTRH       equ	237	;# 
  3985   0000EE                     DMAnDSZ         equ	238	;# 
  3986   0000EE                     DMAnDSZL        equ	238	;# 
  3987   0000EF                     DMAnDSZH        equ	239	;# 
  3988   0000F0                     DMAnDSA         equ	240	;# 
  3989   0000F0                     DMAnDSAL        equ	240	;# 
  3990   0000F1                     DMAnDSAH        equ	241	;# 
  3991   0000F2                     DMAnSCNT        equ	242	;# 
  3992   0000F2                     DMAnSCNTL       equ	242	;# 
  3993   0000F3                     DMAnSCNTH       equ	243	;# 
  3994   0000F4                     DMAnSPTR        equ	244	;# 
  3995   0000F4                     DMAnSPTRL       equ	244	;# 
  3996   0000F5                     DMAnSPTRH       equ	245	;# 
  3997   0000F6                     DMAnSPTRU       equ	246	;# 
  3998   0000F7                     DMAnSSZ         equ	247	;# 
  3999   0000F7                     DMAnSSZL        equ	247	;# 
  4000   0000F8                     DMAnSSZH        equ	248	;# 
  4001   0000F9                     DMAnSSA         equ	249	;# 
  4002   0000F9                     DMAnSSAL        equ	249	;# 
  4003   0000FA                     DMAnSSAH        equ	250	;# 
  4004   0000FB                     DMAnSSAU        equ	251	;# 
  4005   0000FC                     DMAnCON0        equ	252	;# 
  4006   0000FD                     DMAnCON1        equ	253	;# 
  4007   0000FE                     DMAnAIRQ        equ	254	;# 
  4008   0000FF                     DMAnSIRQ        equ	255	;# 
  4009   000100                     C1CONL          equ	256	;# 
  4010   000101                     C1CONH          equ	257	;# 
  4011   000102                     C1CONU          equ	258	;# 
  4012   000103                     C1CONT          equ	259	;# 
  4013   000104                     C1NBTCFGL       equ	260	;# 
  4014   000105                     C1NBTCFGH       equ	261	;# 
  4015   000106                     C1NBTCFGU       equ	262	;# 
  4016   000107                     C1NBTCFGT       equ	263	;# 
  4017   000108                     C1DBTCFGL       equ	264	;# 
  4018   000109                     C1DBTCFGH       equ	265	;# 
  4019   00010A                     C1DBTCFGU       equ	266	;# 
  4020   00010B                     C1DBTCFGT       equ	267	;# 
  4021   00010C                     C1TDCL          equ	268	;# 
  4022   00010D                     C1TDCH          equ	269	;# 
  4023   00010E                     C1TDCU          equ	270	;# 
  4024   000110                     C1TBC           equ	272	;# 
  4025   000110                     C1TBCL          equ	272	;# 
  4026   000111                     C1TBCH          equ	273	;# 
  4027   000112                     C1TBCU          equ	274	;# 
  4028   000113                     C1TBCT          equ	275	;# 
  4029   000114                     C1TSCONL        equ	276	;# 
  4030   000115                     C1TSCONH        equ	277	;# 
  4031   000116                     C1TSCONU        equ	278	;# 
  4032   000117                     C1TSCONT        equ	279	;# 
  4033   000118                     C1VECL          equ	280	;# 
  4034   000119                     C1VECH          equ	281	;# 
  4035   00011A                     C1VECU          equ	282	;# 
  4036   00011B                     C1VECT          equ	283	;# 
  4037   00011C                     C1INTL          equ	284	;# 
  4038   00011D                     C1INTH          equ	285	;# 
  4039   00011E                     C1INTU          equ	286	;# 
  4040   00011F                     C1INTT          equ	287	;# 
  4041   000120                     C1RXIF          equ	288	;# 
  4042   000120                     C1RXIFL         equ	288	;# 
  4043   000121                     C1RXIFH         equ	289	;# 
  4044   000122                     C1RXIFU         equ	290	;# 
  4045   000123                     C1RXIFT         equ	291	;# 
  4046   000124                     C1TXIF          equ	292	;# 
  4047   000124                     C1TXIFL         equ	292	;# 
  4048   000125                     C1TXIFH         equ	293	;# 
  4049   000126                     C1TXIFU         equ	294	;# 
  4050   000127                     C1TXIFT         equ	295	;# 
  4051   000128                     C1RXOVIF        equ	296	;# 
  4052   000128                     C1RXOVIFL       equ	296	;# 
  4053   000129                     C1RXOVIFH       equ	297	;# 
  4054   00012A                     C1RXOVIFU       equ	298	;# 
  4055   00012B                     C1RXOVIFT       equ	299	;# 
  4056   00012C                     C1TXATIF        equ	300	;# 
  4057   00012C                     C1TXATIFL       equ	300	;# 
  4058   00012D                     C1TXATIFH       equ	301	;# 
  4059   00012E                     C1TXATIFU       equ	302	;# 
  4060   00012F                     C1TXATIFT       equ	303	;# 
  4061   000130                     C1TXREQ         equ	304	;# 
  4062   000130                     C1TXREQL        equ	304	;# 
  4063   000131                     C1TXREQH        equ	305	;# 
  4064   000132                     C1TXREQU        equ	306	;# 
  4065   000133                     C1TXREQT        equ	307	;# 
  4066   000134                     C1TRECL         equ	308	;# 
  4067   000135                     C1TRECH         equ	309	;# 
  4068   000136                     C1TRECU         equ	310	;# 
  4069   000137                     C1TRECT         equ	311	;# 
  4070   000138                     C1BDIAG0L       equ	312	;# 
  4071   000139                     C1BDIAG0H       equ	313	;# 
  4072   00013C                     C1BDIAG1L       equ	316	;# 
  4073   00013D                     C1BDIAG1H       equ	317	;# 
  4074   00013E                     C1BDIAG1U       equ	318	;# 
  4075   00013F                     C1BDIAG1T       equ	319	;# 
  4076   000140                     C1TEFCONL       equ	320	;# 
  4077   000141                     C1TEFCONH       equ	321	;# 
  4078   000142                     C1TEFCONU       equ	322	;# 
  4079   000143                     C1TEFCONT       equ	323	;# 
  4080   000144                     C1TEFSTAL       equ	324	;# 
  4081   000145                     C1TEFSTAH       equ	325	;# 
  4082   000146                     C1TEFSTAU       equ	326	;# 
  4083   000147                     C1TEFSTAT       equ	327	;# 
  4084   000148                     C1TEFUA         equ	328	;# 
  4085   000148                     C1TEFUAL        equ	328	;# 
  4086   000149                     C1TEFUAH        equ	329	;# 
  4087   00014A                     C1TEFUAU        equ	330	;# 
  4088   00014B                     C1TEFUAT        equ	331	;# 
  4089   00014C                     C1FIFOBA        equ	332	;# 
  4090   00014C                     C1FIFOBAL       equ	332	;# 
  4091   00014D                     C1FIFOBAH       equ	333	;# 
  4092   00014E                     C1FIFOBAU       equ	334	;# 
  4093   00014F                     C1FIFOBAT       equ	335	;# 
  4094   000150                     C1TXQCONL       equ	336	;# 
  4095   000151                     C1TXQCONH       equ	337	;# 
  4096   000152                     C1TXQCONU       equ	338	;# 
  4097   000153                     C1TXQCONT       equ	339	;# 
  4098   000154                     C1TXQSTAL       equ	340	;# 
  4099   000155                     C1TXQSTAH       equ	341	;# 
  4100   000156                     C1TXQSTAU       equ	342	;# 
  4101   000157                     C1TXQSTAT       equ	343	;# 
  4102   000158                     C1TXQUA         equ	344	;# 
  4103   000158                     C1TXQUAL        equ	344	;# 
  4104   000159                     C1TXQUAH        equ	345	;# 
  4105   00015A                     C1TXQUAU        equ	346	;# 
  4106   00015B                     C1TXQUAT        equ	347	;# 
  4107   00015C                     C1FIFOCON1      equ	348	;# 
  4108   00015C                     C1FIFOCON1L     equ	348	;# 
  4109   00015D                     C1FIFOCON1H     equ	349	;# 
  4110   00015E                     C1FIFOCON1U     equ	350	;# 
  4111   00015F                     C1FIFOCON1T     equ	351	;# 
  4112   000160                     C1FIFOSTA1      equ	352	;# 
  4113   000160                     C1FIFOSTA1L     equ	352	;# 
  4114   000161                     C1FIFOSTA1H     equ	353	;# 
  4115   000162                     C1FIFOSTA1U     equ	354	;# 
  4116   000163                     C1FIFOSTA1T     equ	355	;# 
  4117   000164                     C1FIFOUA1       equ	356	;# 
  4118   000164                     C1FIFOUA1L      equ	356	;# 
  4119   000165                     C1FIFOUA1H      equ	357	;# 
  4120   000166                     C1FIFOUA1U      equ	358	;# 
  4121   000167                     C1FIFOUA1T      equ	359	;# 
  4122   000168                     C1FIFOCON2      equ	360	;# 
  4123   000168                     C1FIFOCON2L     equ	360	;# 
  4124   000169                     C1FIFOCON2H     equ	361	;# 
  4125   00016A                     C1FIFOCON2U     equ	362	;# 
  4126   00016B                     C1FIFOCON2T     equ	363	;# 
  4127   00016C                     C1FIFOSTA2      equ	364	;# 
  4128   00016C                     C1FIFOSTA2L     equ	364	;# 
  4129   00016D                     C1FIFOSTA2H     equ	365	;# 
  4130   00016E                     C1FIFOSTA2U     equ	366	;# 
  4131   00016F                     C1FIFOSTA2T     equ	367	;# 
  4132   000170                     C1FIFOUA2       equ	368	;# 
  4133   000170                     C1FIFOUA2L      equ	368	;# 
  4134   000171                     C1FIFOUA2H      equ	369	;# 
  4135   000172                     C1FIFOUA2U      equ	370	;# 
  4136   000173                     C1FIFOUA2T      equ	371	;# 
  4137   000174                     C1FIFOCON3      equ	372	;# 
  4138   000174                     C1FIFOCON3L     equ	372	;# 
  4139   000175                     C1FIFOCON3H     equ	373	;# 
  4140   000176                     C1FIFOCON3U     equ	374	;# 
  4141   000177                     C1FIFOCON3T     equ	375	;# 
  4142   000178                     C1FIFOSTA3      equ	376	;# 
  4143   000178                     C1FIFOSTA3L     equ	376	;# 
  4144   000179                     C1FIFOSTA3H     equ	377	;# 
  4145   00017A                     C1FIFOSTA3U     equ	378	;# 
  4146   00017B                     C1FIFOSTA3T     equ	379	;# 
  4147   00017C                     C1FIFOUA3       equ	380	;# 
  4148   00017C                     C1FIFOUA3L      equ	380	;# 
  4149   00017D                     C1FIFOUA3H      equ	381	;# 
  4150   00017E                     C1FIFOUA3U      equ	382	;# 
  4151   00017F                     C1FIFOUA3T      equ	383	;# 
  4152   000180                     C1FLTCON0L      equ	384	;# 
  4153   000181                     C1FLTCON0H      equ	385	;# 
  4154   000182                     C1FLTCON0U      equ	386	;# 
  4155   000183                     C1FLTCON0T      equ	387	;# 
  4156   000184                     C1FLTCON1L      equ	388	;# 
  4157   000185                     C1FLTCON1H      equ	389	;# 
  4158   000186                     C1FLTCON1U      equ	390	;# 
  4159   000187                     C1FLTCON1T      equ	391	;# 
  4160   000188                     C1FLTCON2L      equ	392	;# 
  4161   000189                     C1FLTCON2H      equ	393	;# 
  4162   00018A                     C1FLTCON2U      equ	394	;# 
  4163   00018B                     C1FLTCON2T      equ	395	;# 
  4164   00018C                     C1FLTOBJ0       equ	396	;# 
  4165   00018C                     C1FLTOBJ0L      equ	396	;# 
  4166   00018D                     C1FLTOBJ0H      equ	397	;# 
  4167   00018E                     C1FLTOBJ0U      equ	398	;# 
  4168   00018F                     C1FLTOBJ0T      equ	399	;# 
  4169   000190                     C1MASK0         equ	400	;# 
  4170   000190                     C1MASK0L        equ	400	;# 
  4171   000191                     C1MASK0H        equ	401	;# 
  4172   000192                     C1MASK0U        equ	402	;# 
  4173   000193                     C1MASK0T        equ	403	;# 
  4174   000194                     C1FLTOBJ1       equ	404	;# 
  4175   000194                     C1FLTOBJ1L      equ	404	;# 
  4176   000195                     C1FLTOBJ1H      equ	405	;# 
  4177   000196                     C1FLTOBJ1U      equ	406	;# 
  4178   000197                     C1FLTOBJ1T      equ	407	;# 
  4179   000198                     C1MASK1         equ	408	;# 
  4180   000198                     C1MASK1L        equ	408	;# 
  4181   000199                     C1MASK1H        equ	409	;# 
  4182   00019A                     C1MASK1U        equ	410	;# 
  4183   00019B                     C1MASK1T        equ	411	;# 
  4184   00019C                     C1FLTOBJ2       equ	412	;# 
  4185   00019C                     C1FLTOBJ2L      equ	412	;# 
  4186   00019D                     C1FLTOBJ2H      equ	413	;# 
  4187   00019E                     C1FLTOBJ2U      equ	414	;# 
  4188   00019F                     C1FLTOBJ2T      equ	415	;# 
  4189   0001A0                     C1MASK2         equ	416	;# 
  4190   0001A0                     C1MASK2L        equ	416	;# 
  4191   0001A1                     C1MASK2H        equ	417	;# 
  4192   0001A2                     C1MASK2U        equ	418	;# 
  4193   0001A3                     C1MASK2T        equ	419	;# 
  4194   0001A4                     C1FLTOBJ3       equ	420	;# 
  4195   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4196   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4197   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4198   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4199   0001A8                     C1MASK3         equ	424	;# 
  4200   0001A8                     C1MASK3L        equ	424	;# 
  4201   0001A9                     C1MASK3H        equ	425	;# 
  4202   0001AA                     C1MASK3U        equ	426	;# 
  4203   0001AB                     C1MASK3T        equ	427	;# 
  4204   0001AC                     C1FLTOBJ4       equ	428	;# 
  4205   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4206   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4207   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4208   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4209   0001B0                     C1MASK4         equ	432	;# 
  4210   0001B0                     C1MASK4L        equ	432	;# 
  4211   0001B1                     C1MASK4H        equ	433	;# 
  4212   0001B2                     C1MASK4U        equ	434	;# 
  4213   0001B3                     C1MASK4T        equ	435	;# 
  4214   0001B4                     C1FLTOBJ5       equ	436	;# 
  4215   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4216   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4217   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4218   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4219   0001B8                     C1MASK5         equ	440	;# 
  4220   0001B8                     C1MASK5L        equ	440	;# 
  4221   0001B9                     C1MASK5H        equ	441	;# 
  4222   0001BA                     C1MASK5U        equ	442	;# 
  4223   0001BB                     C1MASK5T        equ	443	;# 
  4224   0001BC                     C1FLTOBJ6       equ	444	;# 
  4225   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4226   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4227   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4228   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4229   0001C0                     C1MASK6         equ	448	;# 
  4230   0001C0                     C1MASK6L        equ	448	;# 
  4231   0001C1                     C1MASK6H        equ	449	;# 
  4232   0001C2                     C1MASK6U        equ	450	;# 
  4233   0001C3                     C1MASK6T        equ	451	;# 
  4234   0001C4                     C1FLTOBJ7       equ	452	;# 
  4235   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4236   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4237   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4238   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4239   0001C8                     C1MASK7         equ	456	;# 
  4240   0001C8                     C1MASK7L        equ	456	;# 
  4241   0001C9                     C1MASK7H        equ	457	;# 
  4242   0001CA                     C1MASK7U        equ	458	;# 
  4243   0001CB                     C1MASK7T        equ	459	;# 
  4244   0001CC                     C1FLTOBJ8       equ	460	;# 
  4245   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4246   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4247   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4248   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4249   0001D0                     C1MASK8         equ	464	;# 
  4250   0001D0                     C1MASK8L        equ	464	;# 
  4251   0001D1                     C1MASK8H        equ	465	;# 
  4252   0001D2                     C1MASK8U        equ	466	;# 
  4253   0001D3                     C1MASK8T        equ	467	;# 
  4254   0001D4                     C1FLTOBJ9       equ	468	;# 
  4255   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4256   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4257   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4258   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4259   0001D8                     C1MASK9         equ	472	;# 
  4260   0001D8                     C1MASK9L        equ	472	;# 
  4261   0001D9                     C1MASK9H        equ	473	;# 
  4262   0001DA                     C1MASK9U        equ	474	;# 
  4263   0001DB                     C1MASK9T        equ	475	;# 
  4264   0001DC                     C1FLTOBJ10      equ	476	;# 
  4265   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4266   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4267   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4268   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4269   0001E0                     C1MASK10        equ	480	;# 
  4270   0001E0                     C1MASK10L       equ	480	;# 
  4271   0001E1                     C1MASK10H       equ	481	;# 
  4272   0001E2                     C1MASK10U       equ	482	;# 
  4273   0001E3                     C1MASK10T       equ	483	;# 
  4274   0001E4                     C1FLTOBJ11      equ	484	;# 
  4275   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4276   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4277   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4278   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4279   0001E8                     C1MASK11        equ	488	;# 
  4280   0001E8                     C1MASK11L       equ	488	;# 
  4281   0001E9                     C1MASK11H       equ	489	;# 
  4282   0001EA                     C1MASK11U       equ	490	;# 
  4283   0001EB                     C1MASK11T       equ	491	;# 
  4284   000200                     PPSLOCK         equ	512	;# 
  4285   000201                     RA0PPS          equ	513	;# 
  4286   000202                     RA1PPS          equ	514	;# 
  4287   000203                     RA2PPS          equ	515	;# 
  4288   000204                     RA3PPS          equ	516	;# 
  4289   000205                     RA4PPS          equ	517	;# 
  4290   000206                     RA5PPS          equ	518	;# 
  4291   000207                     RA6PPS          equ	519	;# 
  4292   000208                     RA7PPS          equ	520	;# 
  4293   000209                     RB0PPS          equ	521	;# 
  4294   00020A                     RB1PPS          equ	522	;# 
  4295   00020B                     RB2PPS          equ	523	;# 
  4296   00020C                     RB3PPS          equ	524	;# 
  4297   00020D                     RB4PPS          equ	525	;# 
  4298   00020E                     RB5PPS          equ	526	;# 
  4299   00020F                     RB6PPS          equ	527	;# 
  4300   000210                     RB7PPS          equ	528	;# 
  4301   000211                     RC0PPS          equ	529	;# 
  4302   000212                     RC1PPS          equ	530	;# 
  4303   000213                     RC2PPS          equ	531	;# 
  4304   000214                     RC3PPS          equ	532	;# 
  4305   000215                     RC4PPS          equ	533	;# 
  4306   000216                     RC5PPS          equ	534	;# 
  4307   000217                     RC6PPS          equ	535	;# 
  4308   000218                     RC7PPS          equ	536	;# 
  4309   000219                     RD0PPS          equ	537	;# 
  4310   00021A                     RD1PPS          equ	538	;# 
  4311   00021B                     RD2PPS          equ	539	;# 
  4312   00021C                     RD3PPS          equ	540	;# 
  4313   00021D                     RD4PPS          equ	541	;# 
  4314   00021E                     RD5PPS          equ	542	;# 
  4315   00021F                     RD6PPS          equ	543	;# 
  4316   000220                     RD7PPS          equ	544	;# 
  4317   000221                     RE0PPS          equ	545	;# 
  4318   000222                     RE1PPS          equ	546	;# 
  4319   000223                     RE2PPS          equ	547	;# 
  4320   00023D                     CANRXPPS        equ	573	;# 
  4321   00023E                     INT0PPS         equ	574	;# 
  4322   00023F                     INT1PPS         equ	575	;# 
  4323   000240                     INT2PPS         equ	576	;# 
  4324   000241                     T0CKIPPS        equ	577	;# 
  4325   000242                     T1CKIPPS        equ	578	;# 
  4326   000243                     T1GPPS          equ	579	;# 
  4327   000244                     T3CKIPPS        equ	580	;# 
  4328   000245                     T3GPPS          equ	581	;# 
  4329   000246                     T5CKIPPS        equ	582	;# 
  4330   000247                     T5GPPS          equ	583	;# 
  4331   000248                     T2INPPS         equ	584	;# 
  4332   000249                     T4INPPS         equ	585	;# 
  4333   00024A                     T6INPPS         equ	586	;# 
  4334   00024B                     TUIN0PPS        equ	587	;# 
  4335   00024C                     TUIN1PPS        equ	588	;# 
  4336   00024F                     CCP1PPS         equ	591	;# 
  4337   000250                     CCP2PPS         equ	592	;# 
  4338   000251                     CCP3PPS         equ	593	;# 
  4339   000253                     PWM1ERSPPS      equ	595	;# 
  4340   000254                     PWM2ERSPPS      equ	596	;# 
  4341   000255                     PWM3ERSPPS      equ	597	;# 
  4342   000256                     PWM4ERSPPS      equ	598	;# 
  4343   000257                     PWMIN0PPS       equ	599	;# 
  4344   000258                     PWMIN1PPS       equ	600	;# 
  4345   000259                     SMT1WINPPS      equ	601	;# 
  4346   00025A                     SMT1SIGPPS      equ	602	;# 
  4347   00025B                     CWG1PPS         equ	603	;# 
  4348   00025B                     CWG1INPPS       equ	603	;# 
  4349   00025C                     CWG2PPS         equ	604	;# 
  4350   00025C                     CWG2INPPS       equ	604	;# 
  4351   00025D                     CWG3PPS         equ	605	;# 
  4352   00025D                     CWG3INPPS       equ	605	;# 
  4353   00025E                     MD1CARLPPS      equ	606	;# 
  4354   00025E                     MDCARLPPS       equ	606	;# 
  4355   00025F                     MD1CARHPPS      equ	607	;# 
  4356   00025F                     MDCARHPPS       equ	607	;# 
  4357   000260                     MD1SRCPPS       equ	608	;# 
  4358   000260                     MDSRCPPS        equ	608	;# 
  4359   000261                     CLCIN0PPS       equ	609	;# 
  4360   000262                     CLCIN1PPS       equ	610	;# 
  4361   000263                     CLCIN2PPS       equ	611	;# 
  4362   000264                     CLCIN3PPS       equ	612	;# 
  4363   000265                     CLCIN4PPS       equ	613	;# 
  4364   000266                     CLCIN5PPS       equ	614	;# 
  4365   000267                     CLCIN6PPS       equ	615	;# 
  4366   000268                     CLCIN7PPS       equ	616	;# 
  4367   000269                     ADACTPPS        equ	617	;# 
  4368   00026A                     SPI1SCKPPS      equ	618	;# 
  4369   00026B                     SPI1SDIPPS      equ	619	;# 
  4370   00026C                     SPI1SSPPS       equ	620	;# 
  4371   00026D                     SPI2SCKPPS      equ	621	;# 
  4372   00026E                     SPI2SDIPPS      equ	622	;# 
  4373   00026F                     SPI2SSPPS       equ	623	;# 
  4374   000270                     I2C1SDAPPS      equ	624	;# 
  4375   000271                     I2C1SCLPPS      equ	625	;# 
  4376   000272                     U1RXPPS         equ	626	;# 
  4377   000273                     U1CTSPPS        equ	627	;# 
  4378   000274                     U2RXPPS         equ	628	;# 
  4379   000275                     U2CTSPPS        equ	629	;# 
  4380   000276                     U3RXPPS         equ	630	;# 
  4381   000277                     U3CTSPPS        equ	631	;# 
  4382   000278                     U4RXPPS         equ	632	;# 
  4383   000279                     U4CTSPPS        equ	633	;# 
  4384   00027A                     U5RXPPS         equ	634	;# 
  4385   00027B                     U5CTSPPS        equ	635	;# 
  4386   000286                     RC4I2C          equ	646	;# 
  4387   000287                     RC3I2C          equ	647	;# 
  4388   000288                     RB2I2C          equ	648	;# 
  4389   000289                     RB1I2C          equ	649	;# 
  4390   00028A                     I2C1RXB         equ	650	;# 
  4391   00028B                     I2C1TXB         equ	651	;# 
  4392   00028C                     I2C1CNTL        equ	652	;# 
  4393   00028D                     I2C1CNTH        equ	653	;# 
  4394   00028E                     I2C1ADB0        equ	654	;# 
  4395   00028F                     I2C1ADB1        equ	655	;# 
  4396   000290                     I2C1ADR0        equ	656	;# 
  4397   000291                     I2C1ADR1        equ	657	;# 
  4398   000292                     I2C1ADR2        equ	658	;# 
  4399   000293                     I2C1ADR3        equ	659	;# 
  4400   000294                     I2C1CON0        equ	660	;# 
  4401   000295                     I2C1CON1        equ	661	;# 
  4402   000296                     I2C1CON2        equ	662	;# 
  4403   000297                     I2C1ERR         equ	663	;# 
  4404   000298                     I2C1STAT0       equ	664	;# 
  4405   000299                     I2C1STAT1       equ	665	;# 
  4406   00029A                     I2C1PIR         equ	666	;# 
  4407   00029B                     I2C1PIE         equ	667	;# 
  4408   00029C                     I2C1BTO         equ	668	;# 
  4409   00029D                     I2C1BAUD        equ	669	;# 
  4410   00029E                     I2C1CLK         equ	670	;# 
  4411   00029F                     I2C1BTOC        equ	671	;# 
  4412   0002A1                     U1RXB           equ	673	;# 
  4413   0002A1                     U1RXBL          equ	673	;# 
  4414   0002A2                     U1RXCHK         equ	674	;# 
  4415   0002A3                     U1TXB           equ	675	;# 
  4416   0002A3                     U1TXBL          equ	675	;# 
  4417   0002A4                     U1TXCHK         equ	676	;# 
  4418   0002A5                     U1P1            equ	677	;# 
  4419   0002A5                     U1P1L           equ	677	;# 
  4420   0002A6                     U1P1H           equ	678	;# 
  4421   0002A7                     U1P2            equ	679	;# 
  4422   0002A7                     U1P2L           equ	679	;# 
  4423   0002A8                     U1P2H           equ	680	;# 
  4424   0002A9                     U1P3            equ	681	;# 
  4425   0002A9                     U1P3L           equ	681	;# 
  4426   0002AA                     U1P3H           equ	682	;# 
  4427   0002AB                     U1CON0          equ	683	;# 
  4428   0002AC                     U1CON1          equ	684	;# 
  4429   0002AD                     U1CON2          equ	685	;# 
  4430   0002AE                     U1BRG           equ	686	;# 
  4431   0002AE                     U1BRGL          equ	686	;# 
  4432   0002AF                     U1BRGH          equ	687	;# 
  4433   0002B0                     U1FIFO          equ	688	;# 
  4434   0002B1                     U1UIR           equ	689	;# 
  4435   0002B2                     U1ERRIR         equ	690	;# 
  4436   0002B3                     U1ERRIE         equ	691	;# 
  4437   0002B4                     U2RXB           equ	692	;# 
  4438   0002B4                     U2RXBL          equ	692	;# 
  4439   0002B5                     U2RXCHK         equ	693	;# 
  4440   0002B6                     U2TXB           equ	694	;# 
  4441   0002B6                     U2TXBL          equ	694	;# 
  4442   0002B7                     U2TXCHK         equ	695	;# 
  4443   0002B8                     U2P1            equ	696	;# 
  4444   0002B8                     U2P1L           equ	696	;# 
  4445   0002B9                     U2P1H           equ	697	;# 
  4446   0002BA                     U2P2            equ	698	;# 
  4447   0002BA                     U2P2L           equ	698	;# 
  4448   0002BB                     U2P2H           equ	699	;# 
  4449   0002BC                     U2P3            equ	700	;# 
  4450   0002BC                     U2P3L           equ	700	;# 
  4451   0002BD                     U2P3H           equ	701	;# 
  4452   0002BE                     U2CON0          equ	702	;# 
  4453   0002BF                     U2CON1          equ	703	;# 
  4454   0002C0                     U2CON2          equ	704	;# 
  4455   0002C1                     U2BRG           equ	705	;# 
  4456   0002C1                     U2BRGL          equ	705	;# 
  4457   0002C2                     U2BRGH          equ	706	;# 
  4458   0002C3                     U2FIFO          equ	707	;# 
  4459   0002C4                     U2UIR           equ	708	;# 
  4460   0002C5                     U2ERRIR         equ	709	;# 
  4461   0002C6                     U2ERRIE         equ	710	;# 
  4462   0002C7                     U3RXB           equ	711	;# 
  4463   0002C7                     U3RXBL          equ	711	;# 
  4464   0002C9                     U3TXB           equ	713	;# 
  4465   0002C9                     U3TXBL          equ	713	;# 
  4466   0002CB                     U3P1            equ	715	;# 
  4467   0002CB                     U3P1L           equ	715	;# 
  4468   0002CD                     U3P2            equ	717	;# 
  4469   0002CD                     U3P2L           equ	717	;# 
  4470   0002CF                     U3P3            equ	719	;# 
  4471   0002CF                     U3P3L           equ	719	;# 
  4472   0002D1                     U3CON0          equ	721	;# 
  4473   0002D2                     U3CON1          equ	722	;# 
  4474   0002D3                     U3CON2          equ	723	;# 
  4475   0002D4                     U3BRG           equ	724	;# 
  4476   0002D4                     U3BRGL          equ	724	;# 
  4477   0002D5                     U3BRGH          equ	725	;# 
  4478   0002D6                     U3FIFO          equ	726	;# 
  4479   0002D7                     U3UIR           equ	727	;# 
  4480   0002D8                     U3ERRIR         equ	728	;# 
  4481   0002D9                     U3ERRIE         equ	729	;# 
  4482   0002DA                     U4RXB           equ	730	;# 
  4483   0002DA                     U4RXBL          equ	730	;# 
  4484   0002DC                     U4TXB           equ	732	;# 
  4485   0002DC                     U4TXBL          equ	732	;# 
  4486   0002DE                     U4P1            equ	734	;# 
  4487   0002DE                     U4P1L           equ	734	;# 
  4488   0002E0                     U4P2            equ	736	;# 
  4489   0002E0                     U4P2L           equ	736	;# 
  4490   0002E2                     U4P3            equ	738	;# 
  4491   0002E2                     U4P3L           equ	738	;# 
  4492   0002E4                     U4CON0          equ	740	;# 
  4493   0002E5                     U4CON1          equ	741	;# 
  4494   0002E6                     U4CON2          equ	742	;# 
  4495   0002E7                     U4BRG           equ	743	;# 
  4496   0002E7                     U4BRGL          equ	743	;# 
  4497   0002E8                     U4BRGH          equ	744	;# 
  4498   0002E9                     U4FIFO          equ	745	;# 
  4499   0002EA                     U4UIR           equ	746	;# 
  4500   0002EB                     U4ERRIR         equ	747	;# 
  4501   0002EC                     U4ERRIE         equ	748	;# 
  4502   0002ED                     U5RXB           equ	749	;# 
  4503   0002ED                     U5RXBL          equ	749	;# 
  4504   0002EF                     U5TXB           equ	751	;# 
  4505   0002EF                     U5TXBL          equ	751	;# 
  4506   0002F1                     U5P1            equ	753	;# 
  4507   0002F1                     U5P1L           equ	753	;# 
  4508   0002F3                     U5P2            equ	755	;# 
  4509   0002F3                     U5P2L           equ	755	;# 
  4510   0002F5                     U5P3            equ	757	;# 
  4511   0002F5                     U5P3L           equ	757	;# 
  4512   0002F7                     U5CON0          equ	759	;# 
  4513   0002F8                     U5CON1          equ	760	;# 
  4514   0002F9                     U5CON2          equ	761	;# 
  4515   0002FA                     U5BRG           equ	762	;# 
  4516   0002FA                     U5BRGL          equ	762	;# 
  4517   0002FB                     U5BRGH          equ	763	;# 
  4518   0002FC                     U5FIFO          equ	764	;# 
  4519   0002FD                     U5UIR           equ	765	;# 
  4520   0002FE                     U5ERRIR         equ	766	;# 
  4521   0002FF                     U5ERRIE         equ	767	;# 
  4522   000300                     SMT1TMR         equ	768	;# 
  4523   000300                     SMT1TMRL        equ	768	;# 
  4524   000301                     SMT1TMRH        equ	769	;# 
  4525   000302                     SMT1TMRU        equ	770	;# 
  4526   000303                     SMT1CPR         equ	771	;# 
  4527   000303                     SMT1CPRL        equ	771	;# 
  4528   000304                     SMT1CPRH        equ	772	;# 
  4529   000305                     SMT1CPRU        equ	773	;# 
  4530   000306                     SMT1CPW         equ	774	;# 
  4531   000306                     SMT1CPWL        equ	774	;# 
  4532   000307                     SMT1CPWH        equ	775	;# 
  4533   000308                     SMT1CPWU        equ	776	;# 
  4534   000309                     SMT1PR          equ	777	;# 
  4535   000309                     SMT1PRL         equ	777	;# 
  4536   00030A                     SMT1PRH         equ	778	;# 
  4537   00030B                     SMT1PRU         equ	779	;# 
  4538   00030C                     SMT1CON0        equ	780	;# 
  4539   00030D                     SMT1CON1        equ	781	;# 
  4540   00030E                     SMT1STAT        equ	782	;# 
  4541   00030F                     SMT1CLK         equ	783	;# 
  4542   000310                     SMT1SIG         equ	784	;# 
  4543   000311                     SMT1WIN         equ	785	;# 
  4544   000318                     TMR0L           equ	792	;# 
  4545   000318                     TMR0            equ	792	;# 
  4546   000319                     TMR0H           equ	793	;# 
  4547   000319                     PR0             equ	793	;# 
  4548   00031A                     T0CON0          equ	794	;# 
  4549   00031B                     T0CON1          equ	795	;# 
  4550   00031C                     TMR1            equ	796	;# 
  4551   00031C                     TMR1L           equ	796	;# 
  4552   00031D                     TMR1H           equ	797	;# 
  4553   00031E                     T1CON           equ	798	;# 
  4554   00031E                     TMR1CON         equ	798	;# 
  4555   00031F                     T1GCON          equ	799	;# 
  4556   00031F                     TMR1GCON        equ	799	;# 
  4557   000320                     T1GATE          equ	800	;# 
  4558   000320                     TMR1GATE        equ	800	;# 
  4559   000321                     T1CLK           equ	801	;# 
  4560   000321                     TMR1CLK         equ	801	;# 
  4561   000321                     PR1             equ	801	;# 
  4562   000322                     T2TMR           equ	802	;# 
  4563   000322                     TMR2            equ	802	;# 
  4564   000323                     T2PR            equ	803	;# 
  4565   000323                     PR2             equ	803	;# 
  4566   000324                     T2CON           equ	804	;# 
  4567   000325                     T2HLT           equ	805	;# 
  4568   000326                     T2CLKCON        equ	806	;# 
  4569   000326                     T2CLK           equ	806	;# 
  4570   000327                     T2RST           equ	807	;# 
  4571   000328                     TMR3            equ	808	;# 
  4572   000328                     TMR3L           equ	808	;# 
  4573   000329                     TMR3H           equ	809	;# 
  4574   00032A                     T3CON           equ	810	;# 
  4575   00032A                     TMR3CON         equ	810	;# 
  4576   00032B                     T3GCON          equ	811	;# 
  4577   00032B                     TMR3GCON        equ	811	;# 
  4578   00032C                     T3GATE          equ	812	;# 
  4579   00032C                     TMR3GATE        equ	812	;# 
  4580   00032D                     T3CLK           equ	813	;# 
  4581   00032D                     TMR3CLK         equ	813	;# 
  4582   00032D                     PR3             equ	813	;# 
  4583   00032E                     T4TMR           equ	814	;# 
  4584   00032E                     TMR4            equ	814	;# 
  4585   00032F                     T4PR            equ	815	;# 
  4586   00032F                     PR4             equ	815	;# 
  4587   000330                     T4CON           equ	816	;# 
  4588   000331                     T4HLT           equ	817	;# 
  4589   000332                     T4CLKCON        equ	818	;# 
  4590   000332                     T4CLK           equ	818	;# 
  4591   000333                     T4RST           equ	819	;# 
  4592   000334                     TMR5            equ	820	;# 
  4593   000334                     TMR5L           equ	820	;# 
  4594   000335                     TMR5H           equ	821	;# 
  4595   000336                     T5CON           equ	822	;# 
  4596   000336                     TMR5CON         equ	822	;# 
  4597   000337                     T5GCON          equ	823	;# 
  4598   000337                     TMR5GCON        equ	823	;# 
  4599   000338                     T5GATE          equ	824	;# 
  4600   000338                     TMR5GATE        equ	824	;# 
  4601   000339                     T5CLK           equ	825	;# 
  4602   000339                     TMR5CLK         equ	825	;# 
  4603   000339                     PR5             equ	825	;# 
  4604   00033A                     T6TMR           equ	826	;# 
  4605   00033A                     TMR6            equ	826	;# 
  4606   00033B                     T6PR            equ	827	;# 
  4607   00033B                     PR6             equ	827	;# 
  4608   00033C                     T6CON           equ	828	;# 
  4609   00033D                     T6HLT           equ	829	;# 
  4610   00033E                     T6CLKCON        equ	830	;# 
  4611   00033E                     T6CLK           equ	830	;# 
  4612   00033F                     T6RST           equ	831	;# 
  4613   000340                     CCPR1           equ	832	;# 
  4614   000340                     CCPR1L          equ	832	;# 
  4615   000341                     CCPR1H          equ	833	;# 
  4616   000342                     CCP1CON         equ	834	;# 
  4617   000343                     CCP1CAP         equ	835	;# 
  4618   000344                     CCPR2           equ	836	;# 
  4619   000344                     CCPR2L          equ	836	;# 
  4620   000345                     CCPR2H          equ	837	;# 
  4621   000346                     CCP2CON         equ	838	;# 
  4622   000347                     CCP2CAP         equ	839	;# 
  4623   000348                     CCPR3           equ	840	;# 
  4624   000348                     CCPR3L          equ	840	;# 
  4625   000349                     CCPR3H          equ	841	;# 
  4626   00034A                     CCP3CON         equ	842	;# 
  4627   00034B                     CCP3CAP         equ	843	;# 
  4628   00034C                     CCPTMRS0        equ	844	;# 
  4629   00034F                     CRCDATA         equ	847	;# 
  4630   00034F                     CRCDATAL        equ	847	;# 
  4631   000350                     CRCDATAH        equ	848	;# 
  4632   000351                     CRCDATAU        equ	849	;# 
  4633   000352                     CRCDATAT        equ	850	;# 
  4634   000353                     CRCOUT          equ	851	;# 
  4635   000353                     CRCSHFT         equ	851	;# 
  4636   000353                     CRCXOR          equ	851	;# 
  4637   000353                     CRCOUTL         equ	851	;# 
  4638   000353                     CRCSHFTL        equ	851	;# 
  4639   000353                     CRCSHIFTL       equ	851	;# 
  4640   000353                     CRCXORL         equ	851	;# 
  4641   000354                     CRCOUTH         equ	852	;# 
  4642   000354                     CRCSHFTH        equ	852	;# 
  4643   000354                     CRCSHIFTH       equ	852	;# 
  4644   000354                     CRCXORH         equ	852	;# 
  4645   000355                     CRCOUTU         equ	853	;# 
  4646   000355                     CRCSHFTU        equ	853	;# 
  4647   000355                     CRCSHIFTU       equ	853	;# 
  4648   000355                     CRCXORU         equ	853	;# 
  4649   000356                     CRCOUTT         equ	854	;# 
  4650   000356                     CRCSHFTT        equ	854	;# 
  4651   000356                     CRCSHIFTT       equ	854	;# 
  4652   000356                     CRCXORT         equ	854	;# 
  4653   000357                     CRCCON0         equ	855	;# 
  4654   000358                     CRCCON1         equ	856	;# 
  4655   000359                     CRCCON2         equ	857	;# 
  4656   00035A                     SCANLADR        equ	858	;# 
  4657   00035A                     SCANLADRL       equ	858	;# 
  4658   00035B                     SCANLADRH       equ	859	;# 
  4659   00035C                     SCANLADRU       equ	860	;# 
  4660   00035D                     SCANHADR        equ	861	;# 
  4661   00035D                     SCANHADRL       equ	861	;# 
  4662   00035E                     SCANHADRH       equ	862	;# 
  4663   00035F                     SCANHADRU       equ	863	;# 
  4664   000360                     SCANCON0        equ	864	;# 
  4665   000361                     SCANTRIG        equ	865	;# 
  4666   000362                     IPR0            equ	866	;# 
  4667   000363                     IPR1            equ	867	;# 
  4668   000364                     IPR2            equ	868	;# 
  4669   000365                     IPR3            equ	869	;# 
  4670   000366                     IPR4            equ	870	;# 
  4671   000367                     IPR5            equ	871	;# 
  4672   000368                     IPR6            equ	872	;# 
  4673   000369                     IPR7            equ	873	;# 
  4674   00036A                     IPR8            equ	874	;# 
  4675   00036B                     IPR9            equ	875	;# 
  4676   00036C                     IPR10           equ	876	;# 
  4677   00036D                     IPR11           equ	877	;# 
  4678   00036E                     IPR12           equ	878	;# 
  4679   00036F                     IPR13           equ	879	;# 
  4680   000370                     IPR14           equ	880	;# 
  4681   000371                     IPR15           equ	881	;# 
  4682   000373                     STATUS_CSHAD    equ	883	;# 
  4683   000374                     WREG_CSHAD      equ	884	;# 
  4684   000375                     BSR_CSHAD       equ	885	;# 
  4685   000376                     SHADCON         equ	886	;# 
  4686   000377                     STATUS_SHAD     equ	887	;# 
  4687   000378                     WREG_SHAD       equ	888	;# 
  4688   000379                     BSR_SHAD        equ	889	;# 
  4689   00037A                     PCLATH_SHAD     equ	890	;# 
  4690   00037B                     PCLATU_SHAD     equ	891	;# 
  4691   00037C                     FSR0SH          equ	892	;# 
  4692   00037C                     FSR0L_SHAD      equ	892	;# 
  4693   00037D                     FSR0H_SHAD      equ	893	;# 
  4694   00037E                     FSR1SH          equ	894	;# 
  4695   00037E                     FSR1L_SHAD      equ	894	;# 
  4696   00037F                     FSR1H_SHAD      equ	895	;# 
  4697   000380                     FSR2SH          equ	896	;# 
  4698   000380                     FSR2L_SHAD      equ	896	;# 
  4699   000381                     FSR2H_SHAD      equ	897	;# 
  4700   000382                     PRODSH          equ	898	;# 
  4701   000382                     PRODL_SHAD      equ	898	;# 
  4702   000383                     PRODH_SHAD      equ	899	;# 
  4703   000387                     TU16ACON0       equ	903	;# 
  4704   000388                     TU16ACON1       equ	904	;# 
  4705   000389                     TU16AHLT        equ	905	;# 
  4706   00038A                     TU16APS         equ	906	;# 
  4707   00038B                     TU16ATMR        equ	907	;# 
  4708   00038B                     TU16ACR         equ	907	;# 
  4709   00038B                     TU16ATMRL       equ	907	;# 
  4710   00038B                     TU16ACRL        equ	907	;# 
  4711   00038C                     TU16ATMRH       equ	908	;# 
  4712   00038C                     TU16ACRH        equ	908	;# 
  4713   00038D                     TU16APR         equ	909	;# 
  4714   00038D                     TU16APRL        equ	909	;# 
  4715   00038E                     TU16APRH        equ	910	;# 
  4716   00038F                     TU16ACLK        equ	911	;# 
  4717   000390                     TU16AERS        equ	912	;# 
  4718   000393                     TU16BCON0       equ	915	;# 
  4719   000394                     TU16BCON1       equ	916	;# 
  4720   000395                     TU16BHLT        equ	917	;# 
  4721   000396                     TU16BPS         equ	918	;# 
  4722   000397                     TU16BTMR        equ	919	;# 
  4723   000397                     TU16BCR         equ	919	;# 
  4724   000397                     TU16BTMRL       equ	919	;# 
  4725   000397                     TU16BCRL        equ	919	;# 
  4726   000398                     TU16BTMRH       equ	920	;# 
  4727   000398                     TU16BCRH        equ	920	;# 
  4728   000399                     TU16BPR         equ	921	;# 
  4729   000399                     TU16BPRL        equ	921	;# 
  4730   00039A                     TU16BPRH        equ	922	;# 
  4731   00039B                     TU16BCLK        equ	923	;# 
  4732   00039C                     TU16BERS        equ	924	;# 
  4733   0003BB                     TUCHAIN         equ	955	;# 
  4734   0003BC                     CWG1CLK         equ	956	;# 
  4735   0003BC                     CWG1CLKCON      equ	956	;# 
  4736   0003BD                     CWG1ISM         equ	957	;# 
  4737   0003BE                     CWG1DBR         equ	958	;# 
  4738   0003BF                     CWG1DBF         equ	959	;# 
  4739   0003C0                     CWG1CON0        equ	960	;# 
  4740   0003C1                     CWG1CON1        equ	961	;# 
  4741   0003C2                     CWG1AS0         equ	962	;# 
  4742   0003C3                     CWG1AS1         equ	963	;# 
  4743   0003C4                     CWG1STR         equ	964	;# 
  4744   0003C5                     CWG2CLK         equ	965	;# 
  4745   0003C5                     CWG2CLKCON      equ	965	;# 
  4746   0003C6                     CWG2ISM         equ	966	;# 
  4747   0003C7                     CWG2DBR         equ	967	;# 
  4748   0003C8                     CWG2DBF         equ	968	;# 
  4749   0003C9                     CWG2CON0        equ	969	;# 
  4750   0003CA                     CWG2CON1        equ	970	;# 
  4751   0003CB                     CWG2AS0         equ	971	;# 
  4752   0003CC                     CWG2AS1         equ	972	;# 
  4753   0003CD                     CWG2STR         equ	973	;# 
  4754   0003CE                     CWG3CLK         equ	974	;# 
  4755   0003CE                     CWG3CLKCON      equ	974	;# 
  4756   0003CF                     CWG3ISM         equ	975	;# 
  4757   0003D0                     CWG3DBR         equ	976	;# 
  4758   0003D1                     CWG3DBF         equ	977	;# 
  4759   0003D2                     CWG3CON0        equ	978	;# 
  4760   0003D3                     CWG3CON1        equ	979	;# 
  4761   0003D4                     CWG3AS0         equ	980	;# 
  4762   0003D5                     CWG3AS1         equ	981	;# 
  4763   0003D6                     CWG3STR         equ	982	;# 
  4764   0003D7                     FVRCON          equ	983	;# 
  4765   0003D8                     ADCPCON         equ	984	;# 
  4766   0003D8                     ADCP            equ	984	;# 
  4767   0003D9                     ADLTH           equ	985	;# 
  4768   0003D9                     ADLTHL          equ	985	;# 
  4769   0003DA                     ADLTHH          equ	986	;# 
  4770   0003DB                     ADUTH           equ	987	;# 
  4771   0003DB                     ADUTHL          equ	987	;# 
  4772   0003DC                     ADUTHH          equ	988	;# 
  4773   0003DD                     ADERR           equ	989	;# 
  4774   0003DD                     ADERRL          equ	989	;# 
  4775   0003DE                     ADERRH          equ	990	;# 
  4776   0003DF                     ADSTPT          equ	991	;# 
  4777   0003DF                     ADSTPTL         equ	991	;# 
  4778   0003E0                     ADSTPTH         equ	992	;# 
  4779   0003E1                     ADFLTR          equ	993	;# 
  4780   0003E1                     ADFLTRL         equ	993	;# 
  4781   0003E2                     ADFLTRH         equ	994	;# 
  4782   0003E3                     ADACC           equ	995	;# 
  4783   0003E3                     ADACCL          equ	995	;# 
  4784   0003E4                     ADACCH          equ	996	;# 
  4785   0003E5                     ADACCU          equ	997	;# 
  4786   0003E6                     ADCNT           equ	998	;# 
  4787   0003E7                     ADRPT           equ	999	;# 
  4788   0003E8                     ADPREV          equ	1000	;# 
  4789   0003E8                     ADPREVL         equ	1000	;# 
  4790   0003E9                     ADPREVH         equ	1001	;# 
  4791   0003EA                     ADRES           equ	1002	;# 
  4792   0003EA                     ADRESL          equ	1002	;# 
  4793   0003EB                     ADRESH          equ	1003	;# 
  4794   0003EC                     ADPCH           equ	1004	;# 
  4795   0003EE                     ADACQ           equ	1006	;# 
  4796   0003EE                     ADACQL          equ	1006	;# 
  4797   0003EF                     ADACQH          equ	1007	;# 
  4798   0003F0                     ADCAP           equ	1008	;# 
  4799   0003F1                     ADPRE           equ	1009	;# 
  4800   0003F1                     ADPREL          equ	1009	;# 
  4801   0003F2                     ADPREH          equ	1010	;# 
  4802   0003F3                     ADCON0          equ	1011	;# 
  4803   0003F4                     ADCON1          equ	1012	;# 
  4804   0003F5                     ADCON2          equ	1013	;# 
  4805   0003F6                     ADCON3          equ	1014	;# 
  4806   0003F7                     ADSTAT          equ	1015	;# 
  4807   0003F8                     ADREF           equ	1016	;# 
  4808   0003F9                     ADACT           equ	1017	;# 
  4809   0003FA                     ADCLK           equ	1018	;# 
  4810   0003FB                     ADCTX           equ	1019	;# 
  4811   0003FC                     ADCSEL1         equ	1020	;# 
  4812   0003FD                     ADCSEL2         equ	1021	;# 
  4813   0003FE                     ADCSEL3         equ	1022	;# 
  4814   0003FF                     ADCSEL4         equ	1023	;# 
  4815   000400                     ANSELA          equ	1024	;# 
  4816   000401                     WPUA            equ	1025	;# 
  4817   000402                     ODCONA          equ	1026	;# 
  4818   000403                     SLRCONA         equ	1027	;# 
  4819   000404                     INLVLA          equ	1028	;# 
  4820   000405                     IOCAP           equ	1029	;# 
  4821   000406                     IOCAN           equ	1030	;# 
  4822   000407                     IOCAF           equ	1031	;# 
  4823   000408                     ANSELB          equ	1032	;# 
  4824   000409                     WPUB            equ	1033	;# 
  4825   00040A                     ODCONB          equ	1034	;# 
  4826   00040B                     SLRCONB         equ	1035	;# 
  4827   00040C                     INLVLB          equ	1036	;# 
  4828   00040D                     IOCBP           equ	1037	;# 
  4829   00040E                     IOCBN           equ	1038	;# 
  4830   00040F                     IOCBF           equ	1039	;# 
  4831   000410                     ANSELC          equ	1040	;# 
  4832   000411                     WPUC            equ	1041	;# 
  4833   000412                     ODCONC          equ	1042	;# 
  4834   000413                     SLRCONC         equ	1043	;# 
  4835   000414                     INLVLC          equ	1044	;# 
  4836   000415                     IOCCP           equ	1045	;# 
  4837   000416                     IOCCN           equ	1046	;# 
  4838   000417                     IOCCF           equ	1047	;# 
  4839   000418                     ANSELD          equ	1048	;# 
  4840   000419                     WPUD            equ	1049	;# 
  4841   00041A                     ODCOND          equ	1050	;# 
  4842   00041B                     SLRCOND         equ	1051	;# 
  4843   00041C                     INLVLD          equ	1052	;# 
  4844   000420                     ANSELE          equ	1056	;# 
  4845   000421                     WPUE            equ	1057	;# 
  4846   000422                     ODCONE          equ	1058	;# 
  4847   000423                     SLRCONE         equ	1059	;# 
  4848   000424                     INLVLE          equ	1060	;# 
  4849   000425                     IOCEP           equ	1061	;# 
  4850   000426                     IOCEN           equ	1062	;# 
  4851   000427                     IOCEF           equ	1063	;# 
  4852   000440                     NCO1ACC         equ	1088	;# 
  4853   000440                     NCO1ACCL        equ	1088	;# 
  4854   000441                     NCO1ACCH        equ	1089	;# 
  4855   000442                     NCO1ACCU        equ	1090	;# 
  4856   000443                     NCO1INC         equ	1091	;# 
  4857   000443                     NCO1INCL        equ	1091	;# 
  4858   000444                     NCO1INCH        equ	1092	;# 
  4859   000445                     NCO1INCU        equ	1093	;# 
  4860   000446                     NCO1CON         equ	1094	;# 
  4861   000447                     NCO1CLK         equ	1095	;# 
  4862   000448                     NCO2ACC         equ	1096	;# 
  4863   000448                     NCO2ACCL        equ	1096	;# 
  4864   000449                     NCO2ACCH        equ	1097	;# 
  4865   00044A                     NCO2ACCU        equ	1098	;# 
  4866   00044B                     NCO2INC         equ	1099	;# 
  4867   00044B                     NCO2INCL        equ	1099	;# 
  4868   00044C                     NCO2INCH        equ	1100	;# 
  4869   00044D                     NCO2INCU        equ	1101	;# 
  4870   00044E                     NCO2CON         equ	1102	;# 
  4871   00044F                     NCO2CLK         equ	1103	;# 
  4872   000450                     NCO3ACC         equ	1104	;# 
  4873   000450                     NCO3ACCL        equ	1104	;# 
  4874   000451                     NCO3ACCH        equ	1105	;# 
  4875   000452                     NCO3ACCU        equ	1106	;# 
  4876   000453                     NCO3INC         equ	1107	;# 
  4877   000453                     NCO3INCL        equ	1107	;# 
  4878   000454                     NCO3INCH        equ	1108	;# 
  4879   000455                     NCO3INCU        equ	1109	;# 
  4880   000456                     NCO3CON         equ	1110	;# 
  4881   000457                     NCO3CLK         equ	1111	;# 
  4882   000458                     FSCMCON         equ	1112	;# 
  4883   000459                     IVTLOCK         equ	1113	;# 
  4884   00045A                     IVTAD           equ	1114	;# 
  4885   00045A                     IVTADL          equ	1114	;# 
  4886   00045B                     IVTADH          equ	1115	;# 
  4887   00045C                     IVTADU          equ	1116	;# 
  4888   00045D                     IVTBASE         equ	1117	;# 
  4889   00045D                     IVTBASEL        equ	1117	;# 
  4890   00045E                     IVTBASEH        equ	1118	;# 
  4891   00045F                     IVTBASEU        equ	1119	;# 
  4892   000460                     PWM1ERS         equ	1120	;# 
  4893   000461                     PWM1CLK         equ	1121	;# 
  4894   000462                     PWM1LDS         equ	1122	;# 
  4895   000463                     PWM1PR          equ	1123	;# 
  4896   000463                     PWM1PRL         equ	1123	;# 
  4897   000464                     PWM1PRH         equ	1124	;# 
  4898   000465                     PWM1CPRE        equ	1125	;# 
  4899   000466                     PWM1PIPOS       equ	1126	;# 
  4900   000467                     PWM1GIR         equ	1127	;# 
  4901   000468                     PWM1GIE         equ	1128	;# 
  4902   000469                     PWM1CON         equ	1129	;# 
  4903   00046A                     PWM1S1CFG       equ	1130	;# 
  4904   00046B                     PWM1S1P1        equ	1131	;# 
  4905   00046B                     PWM1S1P1L       equ	1131	;# 
  4906   00046C                     PWM1S1P1H       equ	1132	;# 
  4907   00046D                     PWM1S1P2        equ	1133	;# 
  4908   00046D                     PWM1S1P2L       equ	1133	;# 
  4909   00046E                     PWM1S1P2H       equ	1134	;# 
  4910   00046F                     PWM2ERS         equ	1135	;# 
  4911   000470                     PWM2CLK         equ	1136	;# 
  4912   000471                     PWM2LDS         equ	1137	;# 
  4913   000472                     PWM2PR          equ	1138	;# 
  4914   000472                     PWM2PRL         equ	1138	;# 
  4915   000473                     PWM2PRH         equ	1139	;# 
  4916   000474                     PWM2CPRE        equ	1140	;# 
  4917   000475                     PWM2PIPOS       equ	1141	;# 
  4918   000476                     PWM2GIR         equ	1142	;# 
  4919   000477                     PWM2GIE         equ	1143	;# 
  4920   000478                     PWM2CON         equ	1144	;# 
  4921   000479                     PWM2S1CFG       equ	1145	;# 
  4922   00047A                     PWM2S1P1        equ	1146	;# 
  4923   00047A                     PWM2S1P1L       equ	1146	;# 
  4924   00047B                     PWM2S1P1H       equ	1147	;# 
  4925   00047C                     PWM2S1P2        equ	1148	;# 
  4926   00047C                     PWM2S1P2L       equ	1148	;# 
  4927   00047D                     PWM2S1P2H       equ	1149	;# 
  4928   00047E                     PWM3ERS         equ	1150	;# 
  4929   00047F                     PWM3CLK         equ	1151	;# 
  4930   000480                     PWM3LDS         equ	1152	;# 
  4931   000481                     PWM3PR          equ	1153	;# 
  4932   000481                     PWM3PRL         equ	1153	;# 
  4933   000482                     PWM3PRH         equ	1154	;# 
  4934   000483                     PWM3CPRE        equ	1155	;# 
  4935   000484                     PWM3PIPOS       equ	1156	;# 
  4936   000485                     PWM3GIR         equ	1157	;# 
  4937   000486                     PWM3GIE         equ	1158	;# 
  4938   000487                     PWM3CON         equ	1159	;# 
  4939   000488                     PWM3S1CFG       equ	1160	;# 
  4940   000489                     PWM3S1P1        equ	1161	;# 
  4941   000489                     PWM3S1P1L       equ	1161	;# 
  4942   00048A                     PWM3S1P1H       equ	1162	;# 
  4943   00048B                     PWM3S1P2        equ	1163	;# 
  4944   00048B                     PWM3S1P2L       equ	1163	;# 
  4945   00048C                     PWM3S1P2H       equ	1164	;# 
  4946   00048D                     PWM4ERS         equ	1165	;# 
  4947   00048E                     PWM4CLK         equ	1166	;# 
  4948   00048F                     PWM4LDS         equ	1167	;# 
  4949   000490                     PWM4PR          equ	1168	;# 
  4950   000490                     PWM4PRL         equ	1168	;# 
  4951   000491                     PWM4PRH         equ	1169	;# 
  4952   000492                     PWM4CPRE        equ	1170	;# 
  4953   000493                     PWM4PIPOS       equ	1171	;# 
  4954   000494                     PWM4GIR         equ	1172	;# 
  4955   000495                     PWM4GIE         equ	1173	;# 
  4956   000496                     PWM4CON         equ	1174	;# 
  4957   000497                     PWM4S1CFG       equ	1175	;# 
  4958   000498                     PWM4S1P1        equ	1176	;# 
  4959   000498                     PWM4S1P1L       equ	1176	;# 
  4960   000499                     PWM4S1P1H       equ	1177	;# 
  4961   00049A                     PWM4S1P2        equ	1178	;# 
  4962   00049A                     PWM4S1P2L       equ	1178	;# 
  4963   00049B                     PWM4S1P2H       equ	1179	;# 
  4964   00049C                     PWMLOAD         equ	1180	;# 
  4965   00049D                     PWMEN           equ	1181	;# 
  4966   00049E                     PIE0            equ	1182	;# 
  4967   00049F                     PIE1            equ	1183	;# 
  4968   0004A0                     PIE2            equ	1184	;# 
  4969   0004A1                     PIE3            equ	1185	;# 
  4970   0004A2                     PIE4            equ	1186	;# 
  4971   0004A3                     PIE5            equ	1187	;# 
  4972   0004A4                     PIE6            equ	1188	;# 
  4973   0004A5                     PIE7            equ	1189	;# 
  4974   0004A6                     PIE8            equ	1190	;# 
  4975   0004A7                     PIE9            equ	1191	;# 
  4976   0004A8                     PIE10           equ	1192	;# 
  4977   0004A9                     PIE11           equ	1193	;# 
  4978   0004AA                     PIE12           equ	1194	;# 
  4979   0004AB                     PIE13           equ	1195	;# 
  4980   0004AC                     PIE14           equ	1196	;# 
  4981   0004AD                     PIE15           equ	1197	;# 
  4982   0004AE                     PIR0            equ	1198	;# 
  4983   0004AF                     PIR1            equ	1199	;# 
  4984   0004B0                     PIR2            equ	1200	;# 
  4985   0004B1                     PIR3            equ	1201	;# 
  4986   0004B2                     PIR4            equ	1202	;# 
  4987   0004B3                     PIR5            equ	1203	;# 
  4988   0004B4                     PIR6            equ	1204	;# 
  4989   0004B5                     PIR7            equ	1205	;# 
  4990   0004B6                     PIR8            equ	1206	;# 
  4991   0004B7                     PIR9            equ	1207	;# 
  4992   0004B8                     PIR10           equ	1208	;# 
  4993   0004B9                     PIR11           equ	1209	;# 
  4994   0004BA                     PIR12           equ	1210	;# 
  4995   0004BB                     PIR13           equ	1211	;# 
  4996   0004BC                     PIR14           equ	1212	;# 
  4997   0004BD                     PIR15           equ	1213	;# 
  4998   0004BE                     LATA            equ	1214	;# 
  4999   0004BF                     LATB            equ	1215	;# 
  5000   0004C0                     LATC            equ	1216	;# 
  5001   0004C1                     LATD            equ	1217	;# 
  5002   0004C2                     LATE            equ	1218	;# 
  5003   0004C6                     TRISA           equ	1222	;# 
  5004   0004C7                     TRISB           equ	1223	;# 
  5005   0004C8                     TRISC           equ	1224	;# 
  5006   0004C9                     TRISD           equ	1225	;# 
  5007   0004CA                     TRISE           equ	1226	;# 
  5008   0004CE                     PORTA           equ	1230	;# 
  5009   0004CF                     PORTB           equ	1231	;# 
  5010   0004D0                     PORTC           equ	1232	;# 
  5011   0004D1                     PORTD           equ	1233	;# 
  5012   0004D2                     PORTE           equ	1234	;# 
  5013   0004D6                     INTCON0         equ	1238	;# 
  5014   0004D7                     INTCON1         equ	1239	;# 
  5015   0004D8                     STATUS          equ	1240	;# 
  5016   0004D9                     FSR2            equ	1241	;# 
  5017   0004D9                     FSR2L           equ	1241	;# 
  5018   0004DA                     FSR2H           equ	1242	;# 
  5019   0004DB                     PLUSW2          equ	1243	;# 
  5020   0004DC                     PREINC2         equ	1244	;# 
  5021   0004DD                     POSTDEC2        equ	1245	;# 
  5022   0004DE                     POSTINC2        equ	1246	;# 
  5023   0004DF                     INDF2           equ	1247	;# 
  5024   0004E0                     BSR             equ	1248	;# 
  5025   0004E1                     FSR1            equ	1249	;# 
  5026   0004E1                     FSR1L           equ	1249	;# 
  5027   0004E2                     FSR1H           equ	1250	;# 
  5028   0004E3                     PLUSW1          equ	1251	;# 
  5029   0004E4                     PREINC1         equ	1252	;# 
  5030   0004E5                     POSTDEC1        equ	1253	;# 
  5031   0004E6                     POSTINC1        equ	1254	;# 
  5032   0004E7                     INDF1           equ	1255	;# 
  5033   0004E8                     WREG            equ	1256	;# 
  5034   0004E9                     FSR0            equ	1257	;# 
  5035   0004E9                     FSR0L           equ	1257	;# 
  5036   0004EA                     FSR0H           equ	1258	;# 
  5037   0004EB                     PLUSW0          equ	1259	;# 
  5038   0004EC                     PREINC0         equ	1260	;# 
  5039   0004ED                     POSTDEC0        equ	1261	;# 
  5040   0004EE                     POSTINC0        equ	1262	;# 
  5041   0004EF                     INDF0           equ	1263	;# 
  5042   0004F0                     PCON0           equ	1264	;# 
  5043   0004F1                     PCON1           equ	1265	;# 
  5044   0004F2                     CPUDOZE         equ	1266	;# 
  5045   0004F3                     PROD            equ	1267	;# 
  5046   0004F3                     PRODL           equ	1267	;# 
  5047   0004F4                     PRODH           equ	1268	;# 
  5048   0004F5                     TABLAT          equ	1269	;# 
  5049   0004F6                     TBLPTR          equ	1270	;# 
  5050   0004F6                     TBLPTRL         equ	1270	;# 
  5051   0004F7                     TBLPTRH         equ	1271	;# 
  5052   0004F8                     TBLPTRU         equ	1272	;# 
  5053   0004F9                     PCLAT           equ	1273	;# 
  5054   0004F9                     PCL             equ	1273	;# 
  5055   0004FA                     PCLATH          equ	1274	;# 
  5056   0004FB                     PCLATU          equ	1275	;# 
  5057   0004FC                     STKPTR          equ	1276	;# 
  5058   0004FD                     TOS             equ	1277	;# 
  5059   0004FD                     TOSL            equ	1277	;# 
  5060   0004FE                     TOSH            equ	1278	;# 
  5061   0004FF                     TOSU            equ	1279	;# 
  5062   000038                     BOOTREG         equ	56	;# 
  5063   000039                     CLKRCON         equ	57	;# 
  5064   00003A                     CLKRCLK         equ	58	;# 
  5065   000040                     NVMCON0         equ	64	;# 
  5066   000041                     NVMCON1         equ	65	;# 
  5067   000042                     NVMLOCK         equ	66	;# 
  5068   000043                     NVMADR          equ	67	;# 
  5069   000043                     NVMADRL         equ	67	;# 
  5070   000044                     NVMADRH         equ	68	;# 
  5071   000045                     NVMADRU         equ	69	;# 
  5072   000046                     NVMDAT          equ	70	;# 
  5073   000046                     NVMDATL         equ	70	;# 
  5074   000047                     NVMDATH         equ	71	;# 
  5075   000048                     VREGCON         equ	72	;# 
  5076   000049                     BORCON          equ	73	;# 
  5077   00004A                     HLVDCON0        equ	74	;# 
  5078   00004B                     HLVDCON1        equ	75	;# 
  5079   00004C                     ZCDCON          equ	76	;# 
  5080   000060                     PMD0            equ	96	;# 
  5081   000061                     PMD1            equ	97	;# 
  5082   000062                     PMD2            equ	98	;# 
  5083   000063                     PMD3            equ	99	;# 
  5084   000064                     PMD4            equ	100	;# 
  5085   000065                     PMD5            equ	101	;# 
  5086   000066                     PMD6            equ	102	;# 
  5087   000067                     PMD7            equ	103	;# 
  5088   000068                     PMD8            equ	104	;# 
  5089   00006A                     MD1CON0         equ	106	;# 
  5090   00006B                     MD1CON1         equ	107	;# 
  5091   00006C                     MD1SRC          equ	108	;# 
  5092   00006D                     MD1CARL         equ	109	;# 
  5093   00006E                     MD1CARH         equ	110	;# 
  5094   00006F                     CMOUT           equ	111	;# 
  5095   000070                     CM1CON0         equ	112	;# 
  5096   000071                     CM1CON1         equ	113	;# 
  5097   000072                     CM1NCH          equ	114	;# 
  5098   000073                     CM1PCH          equ	115	;# 
  5099   000074                     CM2CON0         equ	116	;# 
  5100   000075                     CM2CON1         equ	117	;# 
  5101   000076                     CM2NCH          equ	118	;# 
  5102   000077                     CM2PCH          equ	119	;# 
  5103   000078                     WDTCON0         equ	120	;# 
  5104   000079                     WDTCON1         equ	121	;# 
  5105   00007A                     WDTPSL          equ	122	;# 
  5106   00007B                     WDTPSH          equ	123	;# 
  5107   00007C                     WDTTMR          equ	124	;# 
  5108   00007D                     DAC1DAT         equ	125	;# 
  5109   00007D                     DAC1DATL        equ	125	;# 
  5110   00007F                     DAC1CON         equ	127	;# 
  5111   000080                     SPI1RXB         equ	128	;# 
  5112   000081                     SPI1TXB         equ	129	;# 
  5113   000082                     SPI1TCNT        equ	130	;# 
  5114   000082                     SPI1TCNTL       equ	130	;# 
  5115   000083                     SPI1TCNTH       equ	131	;# 
  5116   000084                     SPI1CON0        equ	132	;# 
  5117   000085                     SPI1CON1        equ	133	;# 
  5118   000086                     SPI1CON2        equ	134	;# 
  5119   000087                     SPI1STATUS      equ	135	;# 
  5120   000088                     SPI1TWIDTH      equ	136	;# 
  5121   000089                     SPI1BAUD        equ	137	;# 
  5122   00008A                     SPI1INTF        equ	138	;# 
  5123   00008B                     SPI1INTE        equ	139	;# 
  5124   00008C                     SPI1CLK         equ	140	;# 
  5125   00008D                     SPI2RXB         equ	141	;# 
  5126   00008E                     SPI2TXB         equ	142	;# 
  5127   00008F                     SPI2TCNT        equ	143	;# 
  5128   00008F                     SPI2TCNTL       equ	143	;# 
  5129   000090                     SPI2TCNTH       equ	144	;# 
  5130   000091                     SPI2CON0        equ	145	;# 
  5131   000092                     SPI2CON1        equ	146	;# 
  5132   000093                     SPI2CON2        equ	147	;# 
  5133   000094                     SPI2STATUS      equ	148	;# 
  5134   000095                     SPI2TWIDTH      equ	149	;# 
  5135   000096                     SPI2BAUD        equ	150	;# 
  5136   000097                     SPI2INTF        equ	151	;# 
  5137   000098                     SPI2INTE        equ	152	;# 
  5138   000099                     SPI2CLK         equ	153	;# 
  5139   0000AC                     ACTCON          equ	172	;# 
  5140   0000AD                     OSCCON1         equ	173	;# 
  5141   0000AE                     OSCCON2         equ	174	;# 
  5142   0000AF                     OSCCON3         equ	175	;# 
  5143   0000B0                     OSCTUNE         equ	176	;# 
  5144   0000B1                     OSCFRQ          equ	177	;# 
  5145   0000B1                     OSCFREQ         equ	177	;# 
  5146   0000B2                     OSCSTAT         equ	178	;# 
  5147   0000B2                     OSCSTAT1        equ	178	;# 
  5148   0000B3                     OSCEN           equ	179	;# 
  5149   0000B4                     PRLOCK          equ	180	;# 
  5150   0000B5                     SCANPR          equ	181	;# 
  5151   0000B6                     DMA1PR          equ	182	;# 
  5152   0000B7                     DMA2PR          equ	183	;# 
  5153   0000B8                     DMA3PR          equ	184	;# 
  5154   0000B9                     DMA4PR          equ	185	;# 
  5155   0000BA                     DMA5PR          equ	186	;# 
  5156   0000BB                     DMA6PR          equ	187	;# 
  5157   0000BC                     DMA7PR          equ	188	;# 
  5158   0000BD                     DMA8PR          equ	189	;# 
  5159   0000BE                     MAINPR          equ	190	;# 
  5160   0000BF                     ISRPR           equ	191	;# 
  5161   0000D4                     CLCDATA         equ	212	;# 
  5162   0000D5                     CLCSELECT       equ	213	;# 
  5163   0000D6                     CLCnCON         equ	214	;# 
  5164   0000D7                     CLCnPOL         equ	215	;# 
  5165   0000D8                     CLCnSEL0        equ	216	;# 
  5166   0000D9                     CLCnSEL1        equ	217	;# 
  5167   0000DA                     CLCnSEL2        equ	218	;# 
  5168   0000DB                     CLCnSEL3        equ	219	;# 
  5169   0000DC                     CLCnGLS0        equ	220	;# 
  5170   0000DD                     CLCnGLS1        equ	221	;# 
  5171   0000DE                     CLCnGLS2        equ	222	;# 
  5172   0000DF                     CLCnGLS3        equ	223	;# 
  5173   0000E8                     DMASELECT       equ	232	;# 
  5174   0000E9                     DMAnBUF         equ	233	;# 
  5175   0000EA                     DMAnDCNT        equ	234	;# 
  5176   0000EA                     DMAnDCNTL       equ	234	;# 
  5177   0000EB                     DMAnDCNTH       equ	235	;# 
  5178   0000EC                     DMAnDPTR        equ	236	;# 
  5179   0000EC                     DMAnDPTRL       equ	236	;# 
  5180   0000ED                     DMAnDPTRH       equ	237	;# 
  5181   0000EE                     DMAnDSZ         equ	238	;# 
  5182   0000EE                     DMAnDSZL        equ	238	;# 
  5183   0000EF                     DMAnDSZH        equ	239	;# 
  5184   0000F0                     DMAnDSA         equ	240	;# 
  5185   0000F0                     DMAnDSAL        equ	240	;# 
  5186   0000F1                     DMAnDSAH        equ	241	;# 
  5187   0000F2                     DMAnSCNT        equ	242	;# 
  5188   0000F2                     DMAnSCNTL       equ	242	;# 
  5189   0000F3                     DMAnSCNTH       equ	243	;# 
  5190   0000F4                     DMAnSPTR        equ	244	;# 
  5191   0000F4                     DMAnSPTRL       equ	244	;# 
  5192   0000F5                     DMAnSPTRH       equ	245	;# 
  5193   0000F6                     DMAnSPTRU       equ	246	;# 
  5194   0000F7                     DMAnSSZ         equ	247	;# 
  5195   0000F7                     DMAnSSZL        equ	247	;# 
  5196   0000F8                     DMAnSSZH        equ	248	;# 
  5197   0000F9                     DMAnSSA         equ	249	;# 
  5198   0000F9                     DMAnSSAL        equ	249	;# 
  5199   0000FA                     DMAnSSAH        equ	250	;# 
  5200   0000FB                     DMAnSSAU        equ	251	;# 
  5201   0000FC                     DMAnCON0        equ	252	;# 
  5202   0000FD                     DMAnCON1        equ	253	;# 
  5203   0000FE                     DMAnAIRQ        equ	254	;# 
  5204   0000FF                     DMAnSIRQ        equ	255	;# 
  5205   000100                     C1CONL          equ	256	;# 
  5206   000101                     C1CONH          equ	257	;# 
  5207   000102                     C1CONU          equ	258	;# 
  5208   000103                     C1CONT          equ	259	;# 
  5209   000104                     C1NBTCFGL       equ	260	;# 
  5210   000105                     C1NBTCFGH       equ	261	;# 
  5211   000106                     C1NBTCFGU       equ	262	;# 
  5212   000107                     C1NBTCFGT       equ	263	;# 
  5213   000108                     C1DBTCFGL       equ	264	;# 
  5214   000109                     C1DBTCFGH       equ	265	;# 
  5215   00010A                     C1DBTCFGU       equ	266	;# 
  5216   00010B                     C1DBTCFGT       equ	267	;# 
  5217   00010C                     C1TDCL          equ	268	;# 
  5218   00010D                     C1TDCH          equ	269	;# 
  5219   00010E                     C1TDCU          equ	270	;# 
  5220   000110                     C1TBC           equ	272	;# 
  5221   000110                     C1TBCL          equ	272	;# 
  5222   000111                     C1TBCH          equ	273	;# 
  5223   000112                     C1TBCU          equ	274	;# 
  5224   000113                     C1TBCT          equ	275	;# 
  5225   000114                     C1TSCONL        equ	276	;# 
  5226   000115                     C1TSCONH        equ	277	;# 
  5227   000116                     C1TSCONU        equ	278	;# 
  5228   000117                     C1TSCONT        equ	279	;# 
  5229   000118                     C1VECL          equ	280	;# 
  5230   000119                     C1VECH          equ	281	;# 
  5231   00011A                     C1VECU          equ	282	;# 
  5232   00011B                     C1VECT          equ	283	;# 
  5233   00011C                     C1INTL          equ	284	;# 
  5234   00011D                     C1INTH          equ	285	;# 
  5235   00011E                     C1INTU          equ	286	;# 
  5236   00011F                     C1INTT          equ	287	;# 
  5237   000120                     C1RXIF          equ	288	;# 
  5238   000120                     C1RXIFL         equ	288	;# 
  5239   000121                     C1RXIFH         equ	289	;# 
  5240   000122                     C1RXIFU         equ	290	;# 
  5241   000123                     C1RXIFT         equ	291	;# 
  5242   000124                     C1TXIF          equ	292	;# 
  5243   000124                     C1TXIFL         equ	292	;# 
  5244   000125                     C1TXIFH         equ	293	;# 
  5245   000126                     C1TXIFU         equ	294	;# 
  5246   000127                     C1TXIFT         equ	295	;# 
  5247   000128                     C1RXOVIF        equ	296	;# 
  5248   000128                     C1RXOVIFL       equ	296	;# 
  5249   000129                     C1RXOVIFH       equ	297	;# 
  5250   00012A                     C1RXOVIFU       equ	298	;# 
  5251   00012B                     C1RXOVIFT       equ	299	;# 
  5252   00012C                     C1TXATIF        equ	300	;# 
  5253   00012C                     C1TXATIFL       equ	300	;# 
  5254   00012D                     C1TXATIFH       equ	301	;# 
  5255   00012E                     C1TXATIFU       equ	302	;# 
  5256   00012F                     C1TXATIFT       equ	303	;# 
  5257   000130                     C1TXREQ         equ	304	;# 
  5258   000130                     C1TXREQL        equ	304	;# 
  5259   000131                     C1TXREQH        equ	305	;# 
  5260   000132                     C1TXREQU        equ	306	;# 
  5261   000133                     C1TXREQT        equ	307	;# 
  5262   000134                     C1TRECL         equ	308	;# 
  5263   000135                     C1TRECH         equ	309	;# 
  5264   000136                     C1TRECU         equ	310	;# 
  5265   000137                     C1TRECT         equ	311	;# 
  5266   000138                     C1BDIAG0L       equ	312	;# 
  5267   000139                     C1BDIAG0H       equ	313	;# 
  5268   00013C                     C1BDIAG1L       equ	316	;# 
  5269   00013D                     C1BDIAG1H       equ	317	;# 
  5270   00013E                     C1BDIAG1U       equ	318	;# 
  5271   00013F                     C1BDIAG1T       equ	319	;# 
  5272   000140                     C1TEFCONL       equ	320	;# 
  5273   000141                     C1TEFCONH       equ	321	;# 
  5274   000142                     C1TEFCONU       equ	322	;# 
  5275   000143                     C1TEFCONT       equ	323	;# 
  5276   000144                     C1TEFSTAL       equ	324	;# 
  5277   000145                     C1TEFSTAH       equ	325	;# 
  5278   000146                     C1TEFSTAU       equ	326	;# 
  5279   000147                     C1TEFSTAT       equ	327	;# 
  5280   000148                     C1TEFUA         equ	328	;# 
  5281   000148                     C1TEFUAL        equ	328	;# 
  5282   000149                     C1TEFUAH        equ	329	;# 
  5283   00014A                     C1TEFUAU        equ	330	;# 
  5284   00014B                     C1TEFUAT        equ	331	;# 
  5285   00014C                     C1FIFOBA        equ	332	;# 
  5286   00014C                     C1FIFOBAL       equ	332	;# 
  5287   00014D                     C1FIFOBAH       equ	333	;# 
  5288   00014E                     C1FIFOBAU       equ	334	;# 
  5289   00014F                     C1FIFOBAT       equ	335	;# 
  5290   000150                     C1TXQCONL       equ	336	;# 
  5291   000151                     C1TXQCONH       equ	337	;# 
  5292   000152                     C1TXQCONU       equ	338	;# 
  5293   000153                     C1TXQCONT       equ	339	;# 
  5294   000154                     C1TXQSTAL       equ	340	;# 
  5295   000155                     C1TXQSTAH       equ	341	;# 
  5296   000156                     C1TXQSTAU       equ	342	;# 
  5297   000157                     C1TXQSTAT       equ	343	;# 
  5298   000158                     C1TXQUA         equ	344	;# 
  5299   000158                     C1TXQUAL        equ	344	;# 
  5300   000159                     C1TXQUAH        equ	345	;# 
  5301   00015A                     C1TXQUAU        equ	346	;# 
  5302   00015B                     C1TXQUAT        equ	347	;# 
  5303   00015C                     C1FIFOCON1      equ	348	;# 
  5304   00015C                     C1FIFOCON1L     equ	348	;# 
  5305   00015D                     C1FIFOCON1H     equ	349	;# 
  5306   00015E                     C1FIFOCON1U     equ	350	;# 
  5307   00015F                     C1FIFOCON1T     equ	351	;# 
  5308   000160                     C1FIFOSTA1      equ	352	;# 
  5309   000160                     C1FIFOSTA1L     equ	352	;# 
  5310   000161                     C1FIFOSTA1H     equ	353	;# 
  5311   000162                     C1FIFOSTA1U     equ	354	;# 
  5312   000163                     C1FIFOSTA1T     equ	355	;# 
  5313   000164                     C1FIFOUA1       equ	356	;# 
  5314   000164                     C1FIFOUA1L      equ	356	;# 
  5315   000165                     C1FIFOUA1H      equ	357	;# 
  5316   000166                     C1FIFOUA1U      equ	358	;# 
  5317   000167                     C1FIFOUA1T      equ	359	;# 
  5318   000168                     C1FIFOCON2      equ	360	;# 
  5319   000168                     C1FIFOCON2L     equ	360	;# 
  5320   000169                     C1FIFOCON2H     equ	361	;# 
  5321   00016A                     C1FIFOCON2U     equ	362	;# 
  5322   00016B                     C1FIFOCON2T     equ	363	;# 
  5323   00016C                     C1FIFOSTA2      equ	364	;# 
  5324   00016C                     C1FIFOSTA2L     equ	364	;# 
  5325   00016D                     C1FIFOSTA2H     equ	365	;# 
  5326   00016E                     C1FIFOSTA2U     equ	366	;# 
  5327   00016F                     C1FIFOSTA2T     equ	367	;# 
  5328   000170                     C1FIFOUA2       equ	368	;# 
  5329   000170                     C1FIFOUA2L      equ	368	;# 
  5330   000171                     C1FIFOUA2H      equ	369	;# 
  5331   000172                     C1FIFOUA2U      equ	370	;# 
  5332   000173                     C1FIFOUA2T      equ	371	;# 
  5333   000174                     C1FIFOCON3      equ	372	;# 
  5334   000174                     C1FIFOCON3L     equ	372	;# 
  5335   000175                     C1FIFOCON3H     equ	373	;# 
  5336   000176                     C1FIFOCON3U     equ	374	;# 
  5337   000177                     C1FIFOCON3T     equ	375	;# 
  5338   000178                     C1FIFOSTA3      equ	376	;# 
  5339   000178                     C1FIFOSTA3L     equ	376	;# 
  5340   000179                     C1FIFOSTA3H     equ	377	;# 
  5341   00017A                     C1FIFOSTA3U     equ	378	;# 
  5342   00017B                     C1FIFOSTA3T     equ	379	;# 
  5343   00017C                     C1FIFOUA3       equ	380	;# 
  5344   00017C                     C1FIFOUA3L      equ	380	;# 
  5345   00017D                     C1FIFOUA3H      equ	381	;# 
  5346   00017E                     C1FIFOUA3U      equ	382	;# 
  5347   00017F                     C1FIFOUA3T      equ	383	;# 
  5348   000180                     C1FLTCON0L      equ	384	;# 
  5349   000181                     C1FLTCON0H      equ	385	;# 
  5350   000182                     C1FLTCON0U      equ	386	;# 
  5351   000183                     C1FLTCON0T      equ	387	;# 
  5352   000184                     C1FLTCON1L      equ	388	;# 
  5353   000185                     C1FLTCON1H      equ	389	;# 
  5354   000186                     C1FLTCON1U      equ	390	;# 
  5355   000187                     C1FLTCON1T      equ	391	;# 
  5356   000188                     C1FLTCON2L      equ	392	;# 
  5357   000189                     C1FLTCON2H      equ	393	;# 
  5358   00018A                     C1FLTCON2U      equ	394	;# 
  5359   00018B                     C1FLTCON2T      equ	395	;# 
  5360   00018C                     C1FLTOBJ0       equ	396	;# 
  5361   00018C                     C1FLTOBJ0L      equ	396	;# 
  5362   00018D                     C1FLTOBJ0H      equ	397	;# 
  5363   00018E                     C1FLTOBJ0U      equ	398	;# 
  5364   00018F                     C1FLTOBJ0T      equ	399	;# 
  5365   000190                     C1MASK0         equ	400	;# 
  5366   000190                     C1MASK0L        equ	400	;# 
  5367   000191                     C1MASK0H        equ	401	;# 
  5368   000192                     C1MASK0U        equ	402	;# 
  5369   000193                     C1MASK0T        equ	403	;# 
  5370   000194                     C1FLTOBJ1       equ	404	;# 
  5371   000194                     C1FLTOBJ1L      equ	404	;# 
  5372   000195                     C1FLTOBJ1H      equ	405	;# 
  5373   000196                     C1FLTOBJ1U      equ	406	;# 
  5374   000197                     C1FLTOBJ1T      equ	407	;# 
  5375   000198                     C1MASK1         equ	408	;# 
  5376   000198                     C1MASK1L        equ	408	;# 
  5377   000199                     C1MASK1H        equ	409	;# 
  5378   00019A                     C1MASK1U        equ	410	;# 
  5379   00019B                     C1MASK1T        equ	411	;# 
  5380   00019C                     C1FLTOBJ2       equ	412	;# 
  5381   00019C                     C1FLTOBJ2L      equ	412	;# 
  5382   00019D                     C1FLTOBJ2H      equ	413	;# 
  5383   00019E                     C1FLTOBJ2U      equ	414	;# 
  5384   00019F                     C1FLTOBJ2T      equ	415	;# 
  5385   0001A0                     C1MASK2         equ	416	;# 
  5386   0001A0                     C1MASK2L        equ	416	;# 
  5387   0001A1                     C1MASK2H        equ	417	;# 
  5388   0001A2                     C1MASK2U        equ	418	;# 
  5389   0001A3                     C1MASK2T        equ	419	;# 
  5390   0001A4                     C1FLTOBJ3       equ	420	;# 
  5391   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5392   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5393   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5394   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5395   0001A8                     C1MASK3         equ	424	;# 
  5396   0001A8                     C1MASK3L        equ	424	;# 
  5397   0001A9                     C1MASK3H        equ	425	;# 
  5398   0001AA                     C1MASK3U        equ	426	;# 
  5399   0001AB                     C1MASK3T        equ	427	;# 
  5400   0001AC                     C1FLTOBJ4       equ	428	;# 
  5401   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5402   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5403   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5404   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5405   0001B0                     C1MASK4         equ	432	;# 
  5406   0001B0                     C1MASK4L        equ	432	;# 
  5407   0001B1                     C1MASK4H        equ	433	;# 
  5408   0001B2                     C1MASK4U        equ	434	;# 
  5409   0001B3                     C1MASK4T        equ	435	;# 
  5410   0001B4                     C1FLTOBJ5       equ	436	;# 
  5411   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5412   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5413   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5414   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5415   0001B8                     C1MASK5         equ	440	;# 
  5416   0001B8                     C1MASK5L        equ	440	;# 
  5417   0001B9                     C1MASK5H        equ	441	;# 
  5418   0001BA                     C1MASK5U        equ	442	;# 
  5419   0001BB                     C1MASK5T        equ	443	;# 
  5420   0001BC                     C1FLTOBJ6       equ	444	;# 
  5421   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5422   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5423   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5424   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5425   0001C0                     C1MASK6         equ	448	;# 
  5426   0001C0                     C1MASK6L        equ	448	;# 
  5427   0001C1                     C1MASK6H        equ	449	;# 
  5428   0001C2                     C1MASK6U        equ	450	;# 
  5429   0001C3                     C1MASK6T        equ	451	;# 
  5430   0001C4                     C1FLTOBJ7       equ	452	;# 
  5431   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5432   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5433   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5434   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5435   0001C8                     C1MASK7         equ	456	;# 
  5436   0001C8                     C1MASK7L        equ	456	;# 
  5437   0001C9                     C1MASK7H        equ	457	;# 
  5438   0001CA                     C1MASK7U        equ	458	;# 
  5439   0001CB                     C1MASK7T        equ	459	;# 
  5440   0001CC                     C1FLTOBJ8       equ	460	;# 
  5441   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5442   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5443   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5444   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5445   0001D0                     C1MASK8         equ	464	;# 
  5446   0001D0                     C1MASK8L        equ	464	;# 
  5447   0001D1                     C1MASK8H        equ	465	;# 
  5448   0001D2                     C1MASK8U        equ	466	;# 
  5449   0001D3                     C1MASK8T        equ	467	;# 
  5450   0001D4                     C1FLTOBJ9       equ	468	;# 
  5451   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5452   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5453   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5454   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5455   0001D8                     C1MASK9         equ	472	;# 
  5456   0001D8                     C1MASK9L        equ	472	;# 
  5457   0001D9                     C1MASK9H        equ	473	;# 
  5458   0001DA                     C1MASK9U        equ	474	;# 
  5459   0001DB                     C1MASK9T        equ	475	;# 
  5460   0001DC                     C1FLTOBJ10      equ	476	;# 
  5461   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5462   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5463   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5464   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5465   0001E0                     C1MASK10        equ	480	;# 
  5466   0001E0                     C1MASK10L       equ	480	;# 
  5467   0001E1                     C1MASK10H       equ	481	;# 
  5468   0001E2                     C1MASK10U       equ	482	;# 
  5469   0001E3                     C1MASK10T       equ	483	;# 
  5470   0001E4                     C1FLTOBJ11      equ	484	;# 
  5471   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5472   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5473   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5474   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5475   0001E8                     C1MASK11        equ	488	;# 
  5476   0001E8                     C1MASK11L       equ	488	;# 
  5477   0001E9                     C1MASK11H       equ	489	;# 
  5478   0001EA                     C1MASK11U       equ	490	;# 
  5479   0001EB                     C1MASK11T       equ	491	;# 
  5480   000200                     PPSLOCK         equ	512	;# 
  5481   000201                     RA0PPS          equ	513	;# 
  5482   000202                     RA1PPS          equ	514	;# 
  5483   000203                     RA2PPS          equ	515	;# 
  5484   000204                     RA3PPS          equ	516	;# 
  5485   000205                     RA4PPS          equ	517	;# 
  5486   000206                     RA5PPS          equ	518	;# 
  5487   000207                     RA6PPS          equ	519	;# 
  5488   000208                     RA7PPS          equ	520	;# 
  5489   000209                     RB0PPS          equ	521	;# 
  5490   00020A                     RB1PPS          equ	522	;# 
  5491   00020B                     RB2PPS          equ	523	;# 
  5492   00020C                     RB3PPS          equ	524	;# 
  5493   00020D                     RB4PPS          equ	525	;# 
  5494   00020E                     RB5PPS          equ	526	;# 
  5495   00020F                     RB6PPS          equ	527	;# 
  5496   000210                     RB7PPS          equ	528	;# 
  5497   000211                     RC0PPS          equ	529	;# 
  5498   000212                     RC1PPS          equ	530	;# 
  5499   000213                     RC2PPS          equ	531	;# 
  5500   000214                     RC3PPS          equ	532	;# 
  5501   000215                     RC4PPS          equ	533	;# 
  5502   000216                     RC5PPS          equ	534	;# 
  5503   000217                     RC6PPS          equ	535	;# 
  5504   000218                     RC7PPS          equ	536	;# 
  5505   000219                     RD0PPS          equ	537	;# 
  5506   00021A                     RD1PPS          equ	538	;# 
  5507   00021B                     RD2PPS          equ	539	;# 
  5508   00021C                     RD3PPS          equ	540	;# 
  5509   00021D                     RD4PPS          equ	541	;# 
  5510   00021E                     RD5PPS          equ	542	;# 
  5511   00021F                     RD6PPS          equ	543	;# 
  5512   000220                     RD7PPS          equ	544	;# 
  5513   000221                     RE0PPS          equ	545	;# 
  5514   000222                     RE1PPS          equ	546	;# 
  5515   000223                     RE2PPS          equ	547	;# 
  5516   00023D                     CANRXPPS        equ	573	;# 
  5517   00023E                     INT0PPS         equ	574	;# 
  5518   00023F                     INT1PPS         equ	575	;# 
  5519   000240                     INT2PPS         equ	576	;# 
  5520   000241                     T0CKIPPS        equ	577	;# 
  5521   000242                     T1CKIPPS        equ	578	;# 
  5522   000243                     T1GPPS          equ	579	;# 
  5523   000244                     T3CKIPPS        equ	580	;# 
  5524   000245                     T3GPPS          equ	581	;# 
  5525   000246                     T5CKIPPS        equ	582	;# 
  5526   000247                     T5GPPS          equ	583	;# 
  5527   000248                     T2INPPS         equ	584	;# 
  5528   000249                     T4INPPS         equ	585	;# 
  5529   00024A                     T6INPPS         equ	586	;# 
  5530   00024B                     TUIN0PPS        equ	587	;# 
  5531   00024C                     TUIN1PPS        equ	588	;# 
  5532   00024F                     CCP1PPS         equ	591	;# 
  5533   000250                     CCP2PPS         equ	592	;# 
  5534   000251                     CCP3PPS         equ	593	;# 
  5535   000253                     PWM1ERSPPS      equ	595	;# 
  5536   000254                     PWM2ERSPPS      equ	596	;# 
  5537   000255                     PWM3ERSPPS      equ	597	;# 
  5538   000256                     PWM4ERSPPS      equ	598	;# 
  5539   000257                     PWMIN0PPS       equ	599	;# 
  5540   000258                     PWMIN1PPS       equ	600	;# 
  5541   000259                     SMT1WINPPS      equ	601	;# 
  5542   00025A                     SMT1SIGPPS      equ	602	;# 
  5543   00025B                     CWG1PPS         equ	603	;# 
  5544   00025B                     CWG1INPPS       equ	603	;# 
  5545   00025C                     CWG2PPS         equ	604	;# 
  5546   00025C                     CWG2INPPS       equ	604	;# 
  5547   00025D                     CWG3PPS         equ	605	;# 
  5548   00025D                     CWG3INPPS       equ	605	;# 
  5549   00025E                     MD1CARLPPS      equ	606	;# 
  5550   00025E                     MDCARLPPS       equ	606	;# 
  5551   00025F                     MD1CARHPPS      equ	607	;# 
  5552   00025F                     MDCARHPPS       equ	607	;# 
  5553   000260                     MD1SRCPPS       equ	608	;# 
  5554   000260                     MDSRCPPS        equ	608	;# 
  5555   000261                     CLCIN0PPS       equ	609	;# 
  5556   000262                     CLCIN1PPS       equ	610	;# 
  5557   000263                     CLCIN2PPS       equ	611	;# 
  5558   000264                     CLCIN3PPS       equ	612	;# 
  5559   000265                     CLCIN4PPS       equ	613	;# 
  5560   000266                     CLCIN5PPS       equ	614	;# 
  5561   000267                     CLCIN6PPS       equ	615	;# 
  5562   000268                     CLCIN7PPS       equ	616	;# 
  5563   000269                     ADACTPPS        equ	617	;# 
  5564   00026A                     SPI1SCKPPS      equ	618	;# 
  5565   00026B                     SPI1SDIPPS      equ	619	;# 
  5566   00026C                     SPI1SSPPS       equ	620	;# 
  5567   00026D                     SPI2SCKPPS      equ	621	;# 
  5568   00026E                     SPI2SDIPPS      equ	622	;# 
  5569   00026F                     SPI2SSPPS       equ	623	;# 
  5570   000270                     I2C1SDAPPS      equ	624	;# 
  5571   000271                     I2C1SCLPPS      equ	625	;# 
  5572   000272                     U1RXPPS         equ	626	;# 
  5573   000273                     U1CTSPPS        equ	627	;# 
  5574   000274                     U2RXPPS         equ	628	;# 
  5575   000275                     U2CTSPPS        equ	629	;# 
  5576   000276                     U3RXPPS         equ	630	;# 
  5577   000277                     U3CTSPPS        equ	631	;# 
  5578   000278                     U4RXPPS         equ	632	;# 
  5579   000279                     U4CTSPPS        equ	633	;# 
  5580   00027A                     U5RXPPS         equ	634	;# 
  5581   00027B                     U5CTSPPS        equ	635	;# 
  5582   000286                     RC4I2C          equ	646	;# 
  5583   000287                     RC3I2C          equ	647	;# 
  5584   000288                     RB2I2C          equ	648	;# 
  5585   000289                     RB1I2C          equ	649	;# 
  5586   00028A                     I2C1RXB         equ	650	;# 
  5587   00028B                     I2C1TXB         equ	651	;# 
  5588   00028C                     I2C1CNTL        equ	652	;# 
  5589   00028D                     I2C1CNTH        equ	653	;# 
  5590   00028E                     I2C1ADB0        equ	654	;# 
  5591   00028F                     I2C1ADB1        equ	655	;# 
  5592   000290                     I2C1ADR0        equ	656	;# 
  5593   000291                     I2C1ADR1        equ	657	;# 
  5594   000292                     I2C1ADR2        equ	658	;# 
  5595   000293                     I2C1ADR3        equ	659	;# 
  5596   000294                     I2C1CON0        equ	660	;# 
  5597   000295                     I2C1CON1        equ	661	;# 
  5598   000296                     I2C1CON2        equ	662	;# 
  5599   000297                     I2C1ERR         equ	663	;# 
  5600   000298                     I2C1STAT0       equ	664	;# 
  5601   000299                     I2C1STAT1       equ	665	;# 
  5602   00029A                     I2C1PIR         equ	666	;# 
  5603   00029B                     I2C1PIE         equ	667	;# 
  5604   00029C                     I2C1BTO         equ	668	;# 
  5605   00029D                     I2C1BAUD        equ	669	;# 
  5606   00029E                     I2C1CLK         equ	670	;# 
  5607   00029F                     I2C1BTOC        equ	671	;# 
  5608   0002A1                     U1RXB           equ	673	;# 
  5609   0002A1                     U1RXBL          equ	673	;# 
  5610   0002A2                     U1RXCHK         equ	674	;# 
  5611   0002A3                     U1TXB           equ	675	;# 
  5612   0002A3                     U1TXBL          equ	675	;# 
  5613   0002A4                     U1TXCHK         equ	676	;# 
  5614   0002A5                     U1P1            equ	677	;# 
  5615   0002A5                     U1P1L           equ	677	;# 
  5616   0002A6                     U1P1H           equ	678	;# 
  5617   0002A7                     U1P2            equ	679	;# 
  5618   0002A7                     U1P2L           equ	679	;# 
  5619   0002A8                     U1P2H           equ	680	;# 
  5620   0002A9                     U1P3            equ	681	;# 
  5621   0002A9                     U1P3L           equ	681	;# 
  5622   0002AA                     U1P3H           equ	682	;# 
  5623   0002AB                     U1CON0          equ	683	;# 
  5624   0002AC                     U1CON1          equ	684	;# 
  5625   0002AD                     U1CON2          equ	685	;# 
  5626   0002AE                     U1BRG           equ	686	;# 
  5627   0002AE                     U1BRGL          equ	686	;# 
  5628   0002AF                     U1BRGH          equ	687	;# 
  5629   0002B0                     U1FIFO          equ	688	;# 
  5630   0002B1                     U1UIR           equ	689	;# 
  5631   0002B2                     U1ERRIR         equ	690	;# 
  5632   0002B3                     U1ERRIE         equ	691	;# 
  5633   0002B4                     U2RXB           equ	692	;# 
  5634   0002B4                     U2RXBL          equ	692	;# 
  5635   0002B5                     U2RXCHK         equ	693	;# 
  5636   0002B6                     U2TXB           equ	694	;# 
  5637   0002B6                     U2TXBL          equ	694	;# 
  5638   0002B7                     U2TXCHK         equ	695	;# 
  5639   0002B8                     U2P1            equ	696	;# 
  5640   0002B8                     U2P1L           equ	696	;# 
  5641   0002B9                     U2P1H           equ	697	;# 
  5642   0002BA                     U2P2            equ	698	;# 
  5643   0002BA                     U2P2L           equ	698	;# 
  5644   0002BB                     U2P2H           equ	699	;# 
  5645   0002BC                     U2P3            equ	700	;# 
  5646   0002BC                     U2P3L           equ	700	;# 
  5647   0002BD                     U2P3H           equ	701	;# 
  5648   0002BE                     U2CON0          equ	702	;# 
  5649   0002BF                     U2CON1          equ	703	;# 
  5650   0002C0                     U2CON2          equ	704	;# 
  5651   0002C1                     U2BRG           equ	705	;# 
  5652   0002C1                     U2BRGL          equ	705	;# 
  5653   0002C2                     U2BRGH          equ	706	;# 
  5654   0002C3                     U2FIFO          equ	707	;# 
  5655   0002C4                     U2UIR           equ	708	;# 
  5656   0002C5                     U2ERRIR         equ	709	;# 
  5657   0002C6                     U2ERRIE         equ	710	;# 
  5658   0002C7                     U3RXB           equ	711	;# 
  5659   0002C7                     U3RXBL          equ	711	;# 
  5660   0002C9                     U3TXB           equ	713	;# 
  5661   0002C9                     U3TXBL          equ	713	;# 
  5662   0002CB                     U3P1            equ	715	;# 
  5663   0002CB                     U3P1L           equ	715	;# 
  5664   0002CD                     U3P2            equ	717	;# 
  5665   0002CD                     U3P2L           equ	717	;# 
  5666   0002CF                     U3P3            equ	719	;# 
  5667   0002CF                     U3P3L           equ	719	;# 
  5668   0002D1                     U3CON0          equ	721	;# 
  5669   0002D2                     U3CON1          equ	722	;# 
  5670   0002D3                     U3CON2          equ	723	;# 
  5671   0002D4                     U3BRG           equ	724	;# 
  5672   0002D4                     U3BRGL          equ	724	;# 
  5673   0002D5                     U3BRGH          equ	725	;# 
  5674   0002D6                     U3FIFO          equ	726	;# 
  5675   0002D7                     U3UIR           equ	727	;# 
  5676   0002D8                     U3ERRIR         equ	728	;# 
  5677   0002D9                     U3ERRIE         equ	729	;# 
  5678   0002DA                     U4RXB           equ	730	;# 
  5679   0002DA                     U4RXBL          equ	730	;# 
  5680   0002DC                     U4TXB           equ	732	;# 
  5681   0002DC                     U4TXBL          equ	732	;# 
  5682   0002DE                     U4P1            equ	734	;# 
  5683   0002DE                     U4P1L           equ	734	;# 
  5684   0002E0                     U4P2            equ	736	;# 
  5685   0002E0                     U4P2L           equ	736	;# 
  5686   0002E2                     U4P3            equ	738	;# 
  5687   0002E2                     U4P3L           equ	738	;# 
  5688   0002E4                     U4CON0          equ	740	;# 
  5689   0002E5                     U4CON1          equ	741	;# 
  5690   0002E6                     U4CON2          equ	742	;# 
  5691   0002E7                     U4BRG           equ	743	;# 
  5692   0002E7                     U4BRGL          equ	743	;# 
  5693   0002E8                     U4BRGH          equ	744	;# 
  5694   0002E9                     U4FIFO          equ	745	;# 
  5695   0002EA                     U4UIR           equ	746	;# 
  5696   0002EB                     U4ERRIR         equ	747	;# 
  5697   0002EC                     U4ERRIE         equ	748	;# 
  5698   0002ED                     U5RXB           equ	749	;# 
  5699   0002ED                     U5RXBL          equ	749	;# 
  5700   0002EF                     U5TXB           equ	751	;# 
  5701   0002EF                     U5TXBL          equ	751	;# 
  5702   0002F1                     U5P1            equ	753	;# 
  5703   0002F1                     U5P1L           equ	753	;# 
  5704   0002F3                     U5P2            equ	755	;# 
  5705   0002F3                     U5P2L           equ	755	;# 
  5706   0002F5                     U5P3            equ	757	;# 
  5707   0002F5                     U5P3L           equ	757	;# 
  5708   0002F7                     U5CON0          equ	759	;# 
  5709   0002F8                     U5CON1          equ	760	;# 
  5710   0002F9                     U5CON2          equ	761	;# 
  5711   0002FA                     U5BRG           equ	762	;# 
  5712   0002FA                     U5BRGL          equ	762	;# 
  5713   0002FB                     U5BRGH          equ	763	;# 
  5714   0002FC                     U5FIFO          equ	764	;# 
  5715   0002FD                     U5UIR           equ	765	;# 
  5716   0002FE                     U5ERRIR         equ	766	;# 
  5717   0002FF                     U5ERRIE         equ	767	;# 
  5718   000300                     SMT1TMR         equ	768	;# 
  5719   000300                     SMT1TMRL        equ	768	;# 
  5720   000301                     SMT1TMRH        equ	769	;# 
  5721   000302                     SMT1TMRU        equ	770	;# 
  5722   000303                     SMT1CPR         equ	771	;# 
  5723   000303                     SMT1CPRL        equ	771	;# 
  5724   000304                     SMT1CPRH        equ	772	;# 
  5725   000305                     SMT1CPRU        equ	773	;# 
  5726   000306                     SMT1CPW         equ	774	;# 
  5727   000306                     SMT1CPWL        equ	774	;# 
  5728   000307                     SMT1CPWH        equ	775	;# 
  5729   000308                     SMT1CPWU        equ	776	;# 
  5730   000309                     SMT1PR          equ	777	;# 
  5731   000309                     SMT1PRL         equ	777	;# 
  5732   00030A                     SMT1PRH         equ	778	;# 
  5733   00030B                     SMT1PRU         equ	779	;# 
  5734   00030C                     SMT1CON0        equ	780	;# 
  5735   00030D                     SMT1CON1        equ	781	;# 
  5736   00030E                     SMT1STAT        equ	782	;# 
  5737   00030F                     SMT1CLK         equ	783	;# 
  5738   000310                     SMT1SIG         equ	784	;# 
  5739   000311                     SMT1WIN         equ	785	;# 
  5740   000318                     TMR0L           equ	792	;# 
  5741   000318                     TMR0            equ	792	;# 
  5742   000319                     TMR0H           equ	793	;# 
  5743   000319                     PR0             equ	793	;# 
  5744   00031A                     T0CON0          equ	794	;# 
  5745   00031B                     T0CON1          equ	795	;# 
  5746   00031C                     TMR1            equ	796	;# 
  5747   00031C                     TMR1L           equ	796	;# 
  5748   00031D                     TMR1H           equ	797	;# 
  5749   00031E                     T1CON           equ	798	;# 
  5750   00031E                     TMR1CON         equ	798	;# 
  5751   00031F                     T1GCON          equ	799	;# 
  5752   00031F                     TMR1GCON        equ	799	;# 
  5753   000320                     T1GATE          equ	800	;# 
  5754   000320                     TMR1GATE        equ	800	;# 
  5755   000321                     T1CLK           equ	801	;# 
  5756   000321                     TMR1CLK         equ	801	;# 
  5757   000321                     PR1             equ	801	;# 
  5758   000322                     T2TMR           equ	802	;# 
  5759   000322                     TMR2            equ	802	;# 
  5760   000323                     T2PR            equ	803	;# 
  5761   000323                     PR2             equ	803	;# 
  5762   000324                     T2CON           equ	804	;# 
  5763   000325                     T2HLT           equ	805	;# 
  5764   000326                     T2CLKCON        equ	806	;# 
  5765   000326                     T2CLK           equ	806	;# 
  5766   000327                     T2RST           equ	807	;# 
  5767   000328                     TMR3            equ	808	;# 
  5768   000328                     TMR3L           equ	808	;# 
  5769   000329                     TMR3H           equ	809	;# 
  5770   00032A                     T3CON           equ	810	;# 
  5771   00032A                     TMR3CON         equ	810	;# 
  5772   00032B                     T3GCON          equ	811	;# 
  5773   00032B                     TMR3GCON        equ	811	;# 
  5774   00032C                     T3GATE          equ	812	;# 
  5775   00032C                     TMR3GATE        equ	812	;# 
  5776   00032D                     T3CLK           equ	813	;# 
  5777   00032D                     TMR3CLK         equ	813	;# 
  5778   00032D                     PR3             equ	813	;# 
  5779   00032E                     T4TMR           equ	814	;# 
  5780   00032E                     TMR4            equ	814	;# 
  5781   00032F                     T4PR            equ	815	;# 
  5782   00032F                     PR4             equ	815	;# 
  5783   000330                     T4CON           equ	816	;# 
  5784   000331                     T4HLT           equ	817	;# 
  5785   000332                     T4CLKCON        equ	818	;# 
  5786   000332                     T4CLK           equ	818	;# 
  5787   000333                     T4RST           equ	819	;# 
  5788   000334                     TMR5            equ	820	;# 
  5789   000334                     TMR5L           equ	820	;# 
  5790   000335                     TMR5H           equ	821	;# 
  5791   000336                     T5CON           equ	822	;# 
  5792   000336                     TMR5CON         equ	822	;# 
  5793   000337                     T5GCON          equ	823	;# 
  5794   000337                     TMR5GCON        equ	823	;# 
  5795   000338                     T5GATE          equ	824	;# 
  5796   000338                     TMR5GATE        equ	824	;# 
  5797   000339                     T5CLK           equ	825	;# 
  5798   000339                     TMR5CLK         equ	825	;# 
  5799   000339                     PR5             equ	825	;# 
  5800   00033A                     T6TMR           equ	826	;# 
  5801   00033A                     TMR6            equ	826	;# 
  5802   00033B                     T6PR            equ	827	;# 
  5803   00033B                     PR6             equ	827	;# 
  5804   00033C                     T6CON           equ	828	;# 
  5805   00033D                     T6HLT           equ	829	;# 
  5806   00033E                     T6CLKCON        equ	830	;# 
  5807   00033E                     T6CLK           equ	830	;# 
  5808   00033F                     T6RST           equ	831	;# 
  5809   000340                     CCPR1           equ	832	;# 
  5810   000340                     CCPR1L          equ	832	;# 
  5811   000341                     CCPR1H          equ	833	;# 
  5812   000342                     CCP1CON         equ	834	;# 
  5813   000343                     CCP1CAP         equ	835	;# 
  5814   000344                     CCPR2           equ	836	;# 
  5815   000344                     CCPR2L          equ	836	;# 
  5816   000345                     CCPR2H          equ	837	;# 
  5817   000346                     CCP2CON         equ	838	;# 
  5818   000347                     CCP2CAP         equ	839	;# 
  5819   000348                     CCPR3           equ	840	;# 
  5820   000348                     CCPR3L          equ	840	;# 
  5821   000349                     CCPR3H          equ	841	;# 
  5822   00034A                     CCP3CON         equ	842	;# 
  5823   00034B                     CCP3CAP         equ	843	;# 
  5824   00034C                     CCPTMRS0        equ	844	;# 
  5825   00034F                     CRCDATA         equ	847	;# 
  5826   00034F                     CRCDATAL        equ	847	;# 
  5827   000350                     CRCDATAH        equ	848	;# 
  5828   000351                     CRCDATAU        equ	849	;# 
  5829   000352                     CRCDATAT        equ	850	;# 
  5830   000353                     CRCOUT          equ	851	;# 
  5831   000353                     CRCSHFT         equ	851	;# 
  5832   000353                     CRCXOR          equ	851	;# 
  5833   000353                     CRCOUTL         equ	851	;# 
  5834   000353                     CRCSHFTL        equ	851	;# 
  5835   000353                     CRCSHIFTL       equ	851	;# 
  5836   000353                     CRCXORL         equ	851	;# 
  5837   000354                     CRCOUTH         equ	852	;# 
  5838   000354                     CRCSHFTH        equ	852	;# 
  5839   000354                     CRCSHIFTH       equ	852	;# 
  5840   000354                     CRCXORH         equ	852	;# 
  5841   000355                     CRCOUTU         equ	853	;# 
  5842   000355                     CRCSHFTU        equ	853	;# 
  5843   000355                     CRCSHIFTU       equ	853	;# 
  5844   000355                     CRCXORU         equ	853	;# 
  5845   000356                     CRCOUTT         equ	854	;# 
  5846   000356                     CRCSHFTT        equ	854	;# 
  5847   000356                     CRCSHIFTT       equ	854	;# 
  5848   000356                     CRCXORT         equ	854	;# 
  5849   000357                     CRCCON0         equ	855	;# 
  5850   000358                     CRCCON1         equ	856	;# 
  5851   000359                     CRCCON2         equ	857	;# 
  5852   00035A                     SCANLADR        equ	858	;# 
  5853   00035A                     SCANLADRL       equ	858	;# 
  5854   00035B                     SCANLADRH       equ	859	;# 
  5855   00035C                     SCANLADRU       equ	860	;# 
  5856   00035D                     SCANHADR        equ	861	;# 
  5857   00035D                     SCANHADRL       equ	861	;# 
  5858   00035E                     SCANHADRH       equ	862	;# 
  5859   00035F                     SCANHADRU       equ	863	;# 
  5860   000360                     SCANCON0        equ	864	;# 
  5861   000361                     SCANTRIG        equ	865	;# 
  5862   000362                     IPR0            equ	866	;# 
  5863   000363                     IPR1            equ	867	;# 
  5864   000364                     IPR2            equ	868	;# 
  5865   000365                     IPR3            equ	869	;# 
  5866   000366                     IPR4            equ	870	;# 
  5867   000367                     IPR5            equ	871	;# 
  5868   000368                     IPR6            equ	872	;# 
  5869   000369                     IPR7            equ	873	;# 
  5870   00036A                     IPR8            equ	874	;# 
  5871   00036B                     IPR9            equ	875	;# 
  5872   00036C                     IPR10           equ	876	;# 
  5873   00036D                     IPR11           equ	877	;# 
  5874   00036E                     IPR12           equ	878	;# 
  5875   00036F                     IPR13           equ	879	;# 
  5876   000370                     IPR14           equ	880	;# 
  5877   000371                     IPR15           equ	881	;# 
  5878   000373                     STATUS_CSHAD    equ	883	;# 
  5879   000374                     WREG_CSHAD      equ	884	;# 
  5880   000375                     BSR_CSHAD       equ	885	;# 
  5881   000376                     SHADCON         equ	886	;# 
  5882   000377                     STATUS_SHAD     equ	887	;# 
  5883   000378                     WREG_SHAD       equ	888	;# 
  5884   000379                     BSR_SHAD        equ	889	;# 
  5885   00037A                     PCLATH_SHAD     equ	890	;# 
  5886   00037B                     PCLATU_SHAD     equ	891	;# 
  5887   00037C                     FSR0SH          equ	892	;# 
  5888   00037C                     FSR0L_SHAD      equ	892	;# 
  5889   00037D                     FSR0H_SHAD      equ	893	;# 
  5890   00037E                     FSR1SH          equ	894	;# 
  5891   00037E                     FSR1L_SHAD      equ	894	;# 
  5892   00037F                     FSR1H_SHAD      equ	895	;# 
  5893   000380                     FSR2SH          equ	896	;# 
  5894   000380                     FSR2L_SHAD      equ	896	;# 
  5895   000381                     FSR2H_SHAD      equ	897	;# 
  5896   000382                     PRODSH          equ	898	;# 
  5897   000382                     PRODL_SHAD      equ	898	;# 
  5898   000383                     PRODH_SHAD      equ	899	;# 
  5899   000387                     TU16ACON0       equ	903	;# 
  5900   000388                     TU16ACON1       equ	904	;# 
  5901   000389                     TU16AHLT        equ	905	;# 
  5902   00038A                     TU16APS         equ	906	;# 
  5903   00038B                     TU16ATMR        equ	907	;# 
  5904   00038B                     TU16ACR         equ	907	;# 
  5905   00038B                     TU16ATMRL       equ	907	;# 
  5906   00038B                     TU16ACRL        equ	907	;# 
  5907   00038C                     TU16ATMRH       equ	908	;# 
  5908   00038C                     TU16ACRH        equ	908	;# 
  5909   00038D                     TU16APR         equ	909	;# 
  5910   00038D                     TU16APRL        equ	909	;# 
  5911   00038E                     TU16APRH        equ	910	;# 
  5912   00038F                     TU16ACLK        equ	911	;# 
  5913   000390                     TU16AERS        equ	912	;# 
  5914   000393                     TU16BCON0       equ	915	;# 
  5915   000394                     TU16BCON1       equ	916	;# 
  5916   000395                     TU16BHLT        equ	917	;# 
  5917   000396                     TU16BPS         equ	918	;# 
  5918   000397                     TU16BTMR        equ	919	;# 
  5919   000397                     TU16BCR         equ	919	;# 
  5920   000397                     TU16BTMRL       equ	919	;# 
  5921   000397                     TU16BCRL        equ	919	;# 
  5922   000398                     TU16BTMRH       equ	920	;# 
  5923   000398                     TU16BCRH        equ	920	;# 
  5924   000399                     TU16BPR         equ	921	;# 
  5925   000399                     TU16BPRL        equ	921	;# 
  5926   00039A                     TU16BPRH        equ	922	;# 
  5927   00039B                     TU16BCLK        equ	923	;# 
  5928   00039C                     TU16BERS        equ	924	;# 
  5929   0003BB                     TUCHAIN         equ	955	;# 
  5930   0003BC                     CWG1CLK         equ	956	;# 
  5931   0003BC                     CWG1CLKCON      equ	956	;# 
  5932   0003BD                     CWG1ISM         equ	957	;# 
  5933   0003BE                     CWG1DBR         equ	958	;# 
  5934   0003BF                     CWG1DBF         equ	959	;# 
  5935   0003C0                     CWG1CON0        equ	960	;# 
  5936   0003C1                     CWG1CON1        equ	961	;# 
  5937   0003C2                     CWG1AS0         equ	962	;# 
  5938   0003C3                     CWG1AS1         equ	963	;# 
  5939   0003C4                     CWG1STR         equ	964	;# 
  5940   0003C5                     CWG2CLK         equ	965	;# 
  5941   0003C5                     CWG2CLKCON      equ	965	;# 
  5942   0003C6                     CWG2ISM         equ	966	;# 
  5943   0003C7                     CWG2DBR         equ	967	;# 
  5944   0003C8                     CWG2DBF         equ	968	;# 
  5945   0003C9                     CWG2CON0        equ	969	;# 
  5946   0003CA                     CWG2CON1        equ	970	;# 
  5947   0003CB                     CWG2AS0         equ	971	;# 
  5948   0003CC                     CWG2AS1         equ	972	;# 
  5949   0003CD                     CWG2STR         equ	973	;# 
  5950   0003CE                     CWG3CLK         equ	974	;# 
  5951   0003CE                     CWG3CLKCON      equ	974	;# 
  5952   0003CF                     CWG3ISM         equ	975	;# 
  5953   0003D0                     CWG3DBR         equ	976	;# 
  5954   0003D1                     CWG3DBF         equ	977	;# 
  5955   0003D2                     CWG3CON0        equ	978	;# 
  5956   0003D3                     CWG3CON1        equ	979	;# 
  5957   0003D4                     CWG3AS0         equ	980	;# 
  5958   0003D5                     CWG3AS1         equ	981	;# 
  5959   0003D6                     CWG3STR         equ	982	;# 
  5960   0003D7                     FVRCON          equ	983	;# 
  5961   0003D8                     ADCPCON         equ	984	;# 
  5962   0003D8                     ADCP            equ	984	;# 
  5963   0003D9                     ADLTH           equ	985	;# 
  5964   0003D9                     ADLTHL          equ	985	;# 
  5965   0003DA                     ADLTHH          equ	986	;# 
  5966   0003DB                     ADUTH           equ	987	;# 
  5967   0003DB                     ADUTHL          equ	987	;# 
  5968   0003DC                     ADUTHH          equ	988	;# 
  5969   0003DD                     ADERR           equ	989	;# 
  5970   0003DD                     ADERRL          equ	989	;# 
  5971   0003DE                     ADERRH          equ	990	;# 
  5972   0003DF                     ADSTPT          equ	991	;# 
  5973   0003DF                     ADSTPTL         equ	991	;# 
  5974   0003E0                     ADSTPTH         equ	992	;# 
  5975   0003E1                     ADFLTR          equ	993	;# 
  5976   0003E1                     ADFLTRL         equ	993	;# 
  5977   0003E2                     ADFLTRH         equ	994	;# 
  5978   0003E3                     ADACC           equ	995	;# 
  5979   0003E3                     ADACCL          equ	995	;# 
  5980   0003E4                     ADACCH          equ	996	;# 
  5981   0003E5                     ADACCU          equ	997	;# 
  5982   0003E6                     ADCNT           equ	998	;# 
  5983   0003E7                     ADRPT           equ	999	;# 
  5984   0003E8                     ADPREV          equ	1000	;# 
  5985   0003E8                     ADPREVL         equ	1000	;# 
  5986   0003E9                     ADPREVH         equ	1001	;# 
  5987   0003EA                     ADRES           equ	1002	;# 
  5988   0003EA                     ADRESL          equ	1002	;# 
  5989   0003EB                     ADRESH          equ	1003	;# 
  5990   0003EC                     ADPCH           equ	1004	;# 
  5991   0003EE                     ADACQ           equ	1006	;# 
  5992   0003EE                     ADACQL          equ	1006	;# 
  5993   0003EF                     ADACQH          equ	1007	;# 
  5994   0003F0                     ADCAP           equ	1008	;# 
  5995   0003F1                     ADPRE           equ	1009	;# 
  5996   0003F1                     ADPREL          equ	1009	;# 
  5997   0003F2                     ADPREH          equ	1010	;# 
  5998   0003F3                     ADCON0          equ	1011	;# 
  5999   0003F4                     ADCON1          equ	1012	;# 
  6000   0003F5                     ADCON2          equ	1013	;# 
  6001   0003F6                     ADCON3          equ	1014	;# 
  6002   0003F7                     ADSTAT          equ	1015	;# 
  6003   0003F8                     ADREF           equ	1016	;# 
  6004   0003F9                     ADACT           equ	1017	;# 
  6005   0003FA                     ADCLK           equ	1018	;# 
  6006   0003FB                     ADCTX           equ	1019	;# 
  6007   0003FC                     ADCSEL1         equ	1020	;# 
  6008   0003FD                     ADCSEL2         equ	1021	;# 
  6009   0003FE                     ADCSEL3         equ	1022	;# 
  6010   0003FF                     ADCSEL4         equ	1023	;# 
  6011   000400                     ANSELA          equ	1024	;# 
  6012   000401                     WPUA            equ	1025	;# 
  6013   000402                     ODCONA          equ	1026	;# 
  6014   000403                     SLRCONA         equ	1027	;# 
  6015   000404                     INLVLA          equ	1028	;# 
  6016   000405                     IOCAP           equ	1029	;# 
  6017   000406                     IOCAN           equ	1030	;# 
  6018   000407                     IOCAF           equ	1031	;# 
  6019   000408                     ANSELB          equ	1032	;# 
  6020   000409                     WPUB            equ	1033	;# 
  6021   00040A                     ODCONB          equ	1034	;# 
  6022   00040B                     SLRCONB         equ	1035	;# 
  6023   00040C                     INLVLB          equ	1036	;# 
  6024   00040D                     IOCBP           equ	1037	;# 
  6025   00040E                     IOCBN           equ	1038	;# 
  6026   00040F                     IOCBF           equ	1039	;# 
  6027   000410                     ANSELC          equ	1040	;# 
  6028   000411                     WPUC            equ	1041	;# 
  6029   000412                     ODCONC          equ	1042	;# 
  6030   000413                     SLRCONC         equ	1043	;# 
  6031   000414                     INLVLC          equ	1044	;# 
  6032   000415                     IOCCP           equ	1045	;# 
  6033   000416                     IOCCN           equ	1046	;# 
  6034   000417                     IOCCF           equ	1047	;# 
  6035   000418                     ANSELD          equ	1048	;# 
  6036   000419                     WPUD            equ	1049	;# 
  6037   00041A                     ODCOND          equ	1050	;# 
  6038   00041B                     SLRCOND         equ	1051	;# 
  6039   00041C                     INLVLD          equ	1052	;# 
  6040   000420                     ANSELE          equ	1056	;# 
  6041   000421                     WPUE            equ	1057	;# 
  6042   000422                     ODCONE          equ	1058	;# 
  6043   000423                     SLRCONE         equ	1059	;# 
  6044   000424                     INLVLE          equ	1060	;# 
  6045   000425                     IOCEP           equ	1061	;# 
  6046   000426                     IOCEN           equ	1062	;# 
  6047   000427                     IOCEF           equ	1063	;# 
  6048   000440                     NCO1ACC         equ	1088	;# 
  6049   000440                     NCO1ACCL        equ	1088	;# 
  6050   000441                     NCO1ACCH        equ	1089	;# 
  6051   000442                     NCO1ACCU        equ	1090	;# 
  6052   000443                     NCO1INC         equ	1091	;# 
  6053   000443                     NCO1INCL        equ	1091	;# 
  6054   000444                     NCO1INCH        equ	1092	;# 
  6055   000445                     NCO1INCU        equ	1093	;# 
  6056   000446                     NCO1CON         equ	1094	;# 
  6057   000447                     NCO1CLK         equ	1095	;# 
  6058   000448                     NCO2ACC         equ	1096	;# 
  6059   000448                     NCO2ACCL        equ	1096	;# 
  6060   000449                     NCO2ACCH        equ	1097	;# 
  6061   00044A                     NCO2ACCU        equ	1098	;# 
  6062   00044B                     NCO2INC         equ	1099	;# 
  6063   00044B                     NCO2INCL        equ	1099	;# 
  6064   00044C                     NCO2INCH        equ	1100	;# 
  6065   00044D                     NCO2INCU        equ	1101	;# 
  6066   00044E                     NCO2CON         equ	1102	;# 
  6067   00044F                     NCO2CLK         equ	1103	;# 
  6068   000450                     NCO3ACC         equ	1104	;# 
  6069   000450                     NCO3ACCL        equ	1104	;# 
  6070   000451                     NCO3ACCH        equ	1105	;# 
  6071   000452                     NCO3ACCU        equ	1106	;# 
  6072   000453                     NCO3INC         equ	1107	;# 
  6073   000453                     NCO3INCL        equ	1107	;# 
  6074   000454                     NCO3INCH        equ	1108	;# 
  6075   000455                     NCO3INCU        equ	1109	;# 
  6076   000456                     NCO3CON         equ	1110	;# 
  6077   000457                     NCO3CLK         equ	1111	;# 
  6078   000458                     FSCMCON         equ	1112	;# 
  6079   000459                     IVTLOCK         equ	1113	;# 
  6080   00045A                     IVTAD           equ	1114	;# 
  6081   00045A                     IVTADL          equ	1114	;# 
  6082   00045B                     IVTADH          equ	1115	;# 
  6083   00045C                     IVTADU          equ	1116	;# 
  6084   00045D                     IVTBASE         equ	1117	;# 
  6085   00045D                     IVTBASEL        equ	1117	;# 
  6086   00045E                     IVTBASEH        equ	1118	;# 
  6087   00045F                     IVTBASEU        equ	1119	;# 
  6088   000460                     PWM1ERS         equ	1120	;# 
  6089   000461                     PWM1CLK         equ	1121	;# 
  6090   000462                     PWM1LDS         equ	1122	;# 
  6091   000463                     PWM1PR          equ	1123	;# 
  6092   000463                     PWM1PRL         equ	1123	;# 
  6093   000464                     PWM1PRH         equ	1124	;# 
  6094   000465                     PWM1CPRE        equ	1125	;# 
  6095   000466                     PWM1PIPOS       equ	1126	;# 
  6096   000467                     PWM1GIR         equ	1127	;# 
  6097   000468                     PWM1GIE         equ	1128	;# 
  6098   000469                     PWM1CON         equ	1129	;# 
  6099   00046A                     PWM1S1CFG       equ	1130	;# 
  6100   00046B                     PWM1S1P1        equ	1131	;# 
  6101   00046B                     PWM1S1P1L       equ	1131	;# 
  6102   00046C                     PWM1S1P1H       equ	1132	;# 
  6103   00046D                     PWM1S1P2        equ	1133	;# 
  6104   00046D                     PWM1S1P2L       equ	1133	;# 
  6105   00046E                     PWM1S1P2H       equ	1134	;# 
  6106   00046F                     PWM2ERS         equ	1135	;# 
  6107   000470                     PWM2CLK         equ	1136	;# 
  6108   000471                     PWM2LDS         equ	1137	;# 
  6109   000472                     PWM2PR          equ	1138	;# 
  6110   000472                     PWM2PRL         equ	1138	;# 
  6111   000473                     PWM2PRH         equ	1139	;# 
  6112   000474                     PWM2CPRE        equ	1140	;# 
  6113   000475                     PWM2PIPOS       equ	1141	;# 
  6114   000476                     PWM2GIR         equ	1142	;# 
  6115   000477                     PWM2GIE         equ	1143	;# 
  6116   000478                     PWM2CON         equ	1144	;# 
  6117   000479                     PWM2S1CFG       equ	1145	;# 
  6118   00047A                     PWM2S1P1        equ	1146	;# 
  6119   00047A                     PWM2S1P1L       equ	1146	;# 
  6120   00047B                     PWM2S1P1H       equ	1147	;# 
  6121   00047C                     PWM2S1P2        equ	1148	;# 
  6122   00047C                     PWM2S1P2L       equ	1148	;# 
  6123   00047D                     PWM2S1P2H       equ	1149	;# 
  6124   00047E                     PWM3ERS         equ	1150	;# 
  6125   00047F                     PWM3CLK         equ	1151	;# 
  6126   000480                     PWM3LDS         equ	1152	;# 
  6127   000481                     PWM3PR          equ	1153	;# 
  6128   000481                     PWM3PRL         equ	1153	;# 
  6129   000482                     PWM3PRH         equ	1154	;# 
  6130   000483                     PWM3CPRE        equ	1155	;# 
  6131   000484                     PWM3PIPOS       equ	1156	;# 
  6132   000485                     PWM3GIR         equ	1157	;# 
  6133   000486                     PWM3GIE         equ	1158	;# 
  6134   000487                     PWM3CON         equ	1159	;# 
  6135   000488                     PWM3S1CFG       equ	1160	;# 
  6136   000489                     PWM3S1P1        equ	1161	;# 
  6137   000489                     PWM3S1P1L       equ	1161	;# 
  6138   00048A                     PWM3S1P1H       equ	1162	;# 
  6139   00048B                     PWM3S1P2        equ	1163	;# 
  6140   00048B                     PWM3S1P2L       equ	1163	;# 
  6141   00048C                     PWM3S1P2H       equ	1164	;# 
  6142   00048D                     PWM4ERS         equ	1165	;# 
  6143   00048E                     PWM4CLK         equ	1166	;# 
  6144   00048F                     PWM4LDS         equ	1167	;# 
  6145   000490                     PWM4PR          equ	1168	;# 
  6146   000490                     PWM4PRL         equ	1168	;# 
  6147   000491                     PWM4PRH         equ	1169	;# 
  6148   000492                     PWM4CPRE        equ	1170	;# 
  6149   000493                     PWM4PIPOS       equ	1171	;# 
  6150   000494                     PWM4GIR         equ	1172	;# 
  6151   000495                     PWM4GIE         equ	1173	;# 
  6152   000496                     PWM4CON         equ	1174	;# 
  6153   000497                     PWM4S1CFG       equ	1175	;# 
  6154   000498                     PWM4S1P1        equ	1176	;# 
  6155   000498                     PWM4S1P1L       equ	1176	;# 
  6156   000499                     PWM4S1P1H       equ	1177	;# 
  6157   00049A                     PWM4S1P2        equ	1178	;# 
  6158   00049A                     PWM4S1P2L       equ	1178	;# 
  6159   00049B                     PWM4S1P2H       equ	1179	;# 
  6160   00049C                     PWMLOAD         equ	1180	;# 
  6161   00049D                     PWMEN           equ	1181	;# 
  6162   00049E                     PIE0            equ	1182	;# 
  6163   00049F                     PIE1            equ	1183	;# 
  6164   0004A0                     PIE2            equ	1184	;# 
  6165   0004A1                     PIE3            equ	1185	;# 
  6166   0004A2                     PIE4            equ	1186	;# 
  6167   0004A3                     PIE5            equ	1187	;# 
  6168   0004A4                     PIE6            equ	1188	;# 
  6169   0004A5                     PIE7            equ	1189	;# 
  6170   0004A6                     PIE8            equ	1190	;# 
  6171   0004A7                     PIE9            equ	1191	;# 
  6172   0004A8                     PIE10           equ	1192	;# 
  6173   0004A9                     PIE11           equ	1193	;# 
  6174   0004AA                     PIE12           equ	1194	;# 
  6175   0004AB                     PIE13           equ	1195	;# 
  6176   0004AC                     PIE14           equ	1196	;# 
  6177   0004AD                     PIE15           equ	1197	;# 
  6178   0004AE                     PIR0            equ	1198	;# 
  6179   0004AF                     PIR1            equ	1199	;# 
  6180   0004B0                     PIR2            equ	1200	;# 
  6181   0004B1                     PIR3            equ	1201	;# 
  6182   0004B2                     PIR4            equ	1202	;# 
  6183   0004B3                     PIR5            equ	1203	;# 
  6184   0004B4                     PIR6            equ	1204	;# 
  6185   0004B5                     PIR7            equ	1205	;# 
  6186   0004B6                     PIR8            equ	1206	;# 
  6187   0004B7                     PIR9            equ	1207	;# 
  6188   0004B8                     PIR10           equ	1208	;# 
  6189   0004B9                     PIR11           equ	1209	;# 
  6190   0004BA                     PIR12           equ	1210	;# 
  6191   0004BB                     PIR13           equ	1211	;# 
  6192   0004BC                     PIR14           equ	1212	;# 
  6193   0004BD                     PIR15           equ	1213	;# 
  6194   0004BE                     LATA            equ	1214	;# 
  6195   0004BF                     LATB            equ	1215	;# 
  6196   0004C0                     LATC            equ	1216	;# 
  6197   0004C1                     LATD            equ	1217	;# 
  6198   0004C2                     LATE            equ	1218	;# 
  6199   0004C6                     TRISA           equ	1222	;# 
  6200   0004C7                     TRISB           equ	1223	;# 
  6201   0004C8                     TRISC           equ	1224	;# 
  6202   0004C9                     TRISD           equ	1225	;# 
  6203   0004CA                     TRISE           equ	1226	;# 
  6204   0004CE                     PORTA           equ	1230	;# 
  6205   0004CF                     PORTB           equ	1231	;# 
  6206   0004D0                     PORTC           equ	1232	;# 
  6207   0004D1                     PORTD           equ	1233	;# 
  6208   0004D2                     PORTE           equ	1234	;# 
  6209   0004D6                     INTCON0         equ	1238	;# 
  6210   0004D7                     INTCON1         equ	1239	;# 
  6211   0004D8                     STATUS          equ	1240	;# 
  6212   0004D9                     FSR2            equ	1241	;# 
  6213   0004D9                     FSR2L           equ	1241	;# 
  6214   0004DA                     FSR2H           equ	1242	;# 
  6215   0004DB                     PLUSW2          equ	1243	;# 
  6216   0004DC                     PREINC2         equ	1244	;# 
  6217   0004DD                     POSTDEC2        equ	1245	;# 
  6218   0004DE                     POSTINC2        equ	1246	;# 
  6219   0004DF                     INDF2           equ	1247	;# 
  6220   0004E0                     BSR             equ	1248	;# 
  6221   0004E1                     FSR1            equ	1249	;# 
  6222   0004E1                     FSR1L           equ	1249	;# 
  6223   0004E2                     FSR1H           equ	1250	;# 
  6224   0004E3                     PLUSW1          equ	1251	;# 
  6225   0004E4                     PREINC1         equ	1252	;# 
  6226   0004E5                     POSTDEC1        equ	1253	;# 
  6227   0004E6                     POSTINC1        equ	1254	;# 
  6228   0004E7                     INDF1           equ	1255	;# 
  6229   0004E8                     WREG            equ	1256	;# 
  6230   0004E9                     FSR0            equ	1257	;# 
  6231   0004E9                     FSR0L           equ	1257	;# 
  6232   0004EA                     FSR0H           equ	1258	;# 
  6233   0004EB                     PLUSW0          equ	1259	;# 
  6234   0004EC                     PREINC0         equ	1260	;# 
  6235   0004ED                     POSTDEC0        equ	1261	;# 
  6236   0004EE                     POSTINC0        equ	1262	;# 
  6237   0004EF                     INDF0           equ	1263	;# 
  6238   0004F0                     PCON0           equ	1264	;# 
  6239   0004F1                     PCON1           equ	1265	;# 
  6240   0004F2                     CPUDOZE         equ	1266	;# 
  6241   0004F3                     PROD            equ	1267	;# 
  6242   0004F3                     PRODL           equ	1267	;# 
  6243   0004F4                     PRODH           equ	1268	;# 
  6244   0004F5                     TABLAT          equ	1269	;# 
  6245   0004F6                     TBLPTR          equ	1270	;# 
  6246   0004F6                     TBLPTRL         equ	1270	;# 
  6247   0004F7                     TBLPTRH         equ	1271	;# 
  6248   0004F8                     TBLPTRU         equ	1272	;# 
  6249   0004F9                     PCLAT           equ	1273	;# 
  6250   0004F9                     PCL             equ	1273	;# 
  6251   0004FA                     PCLATH          equ	1274	;# 
  6252   0004FB                     PCLATU          equ	1275	;# 
  6253   0004FC                     STKPTR          equ	1276	;# 
  6254   0004FD                     TOS             equ	1277	;# 
  6255   0004FD                     TOSL            equ	1277	;# 
  6256   0004FE                     TOSH            equ	1278	;# 
  6257   0004FF                     TOSU            equ	1279	;# 
  6258                           
  6259                           	psect	idataBANK7
  6260   000192                     __pidataBANK7:
  6261                           	callstack 0
  6262                           
  6263                           ;initializer for _t_conf
  6264   000192  50                 	db	low STR_53
  6265   000193  FF                 	db	high STR_53
  6266   000194  DB                 	db	low _clk_fs
  6267   000195  07                 	db	high _clk_fs
  6268   000196  58                 	db	low STR_54
  6269   000197  FF                 	db	high STR_54
  6270   000198  DF                 	db	low _bioreq_ubuffadr
  6271   000199  07                 	db	high _bioreq_ubuffadr
  6272                           
  6273                           ;initializer for _start_lba
  6274   00019A  FFFF               	dw	65535
  6275   00019C  FFFF               	dw	65535
  6276                           
  6277                           ;initializer for _SPI_SD_ctx
  6278   00019E  CF                 	db	low _pic18f47q43_spi_ctx
  6279   00019F  08                 	db	high _pic18f47q43_spi_ctx
  6280                           
  6281                           ;initializer for _mon16
  6282   0001A0  E3                 	db	low STR_52
  6283   0001A1  FE                 	db	high STR_52
  6284                           
  6285                           ;initializer for _mon02
  6286   0001A2  D8                 	db	low STR_51
  6287   0001A3  FE                 	db	high STR_51
  6288                           
  6289                           ;initializer for _conf16
  6290   0001A4  CD                 	db	low STR_50
  6291   0001A5  FE                 	db	high STR_50
  6292                           
  6293                           ;initializer for _conf02
  6294   0001A6  C2                 	db	low STR_49
  6295   0001A7  FE                 	db	high STR_49
  6296                           
  6297                           ;initializer for _board_name
  6298   0001A8  22                 	db	low STR_48
  6299   0001A9  F5                 	db	high STR_48
  6300                           
  6301                           ;initializer for _mezID
  6302   0001AA  48                 	db	low STR_47
  6303   0001AB  FF                 	db	high STR_47
  6304                           
  6305                           	psect	idataBANK8
  6306   000254                     __pidataBANK8:
  6307                           	callstack 0
  6308                           
  6309                           ;initializer for _strin_func
  6310   000254  12                 	db	low _get_str
  6311   000255  EE                 	db	high _get_str
  6312   000256  01                 	db	low (_get_str shr (0+16))
  6313   000257  E0                 	db	low _str_inf
  6314   000258  A8                 	db	high _str_inf
  6315   000259  01                 	db	low (_str_inf shr (0+16))
  6316                           
  6317                           ;initializer for _get_char
  6318   00025A  4C                 	db	low _u_getch
  6319   00025B  F5                 	db	high _u_getch
  6320   00025C  01                 	db	low (_u_getch shr (0+16))
  6321   00025D  A6                 	db	low _in_file
  6322   00025E  BF                 	db	high _in_file
  6323   00025F  01                 	db	low (_in_file shr (0+16))
  6324                           
  6325                           	psect	idataBANK9
  6326   01F05E                     __pidataBANK9:
  6327                           	callstack 0
  6328                           
  6329                           ;initializer for _cmd
  6330   01F05E  F3                 	db	low STR_55
  6331   01F05F  FF                 	db	high STR_55
  6332   01F060  74                 	db	low _scan_files
  6333   01F061  98                 	db	high _scan_files
  6334   01F062  01                 	db	low (_scan_files shr (0+16))
  6335   01F063  E1                 	db	low STR_56
  6336   01F064  FF                 	db	high STR_56
  6337   01F065  06                 	db	low _scan_files1
  6338   01F066  96                 	db	high _scan_files1
  6339   01F067  01                 	db	low (_scan_files1 shr (0+16))
  6340   01F068  F0                 	db	low STR_57
  6341   01F069  FF                 	db	high STR_57
  6342   01F06A  46                 	db	low _change_directory
  6343   01F06B  02                 	db	high _change_directory
  6344   01F06C  00                 	db	low (_change_directory shr (0+16))
  6345   01F06D  B7                 	db	low STR_58
  6346   01F06E  FF                 	db	high STR_58
  6347   01F06F  78                 	db	low _load_file
  6348   01F070  ED                 	db	high _load_file
  6349   01F071  01                 	db	low (_load_file shr (0+16))
  6350   01F072  77                 	db	low STR_59
  6351   01F073  FF                 	db	high STR_59
  6352   01F074  AC                 	db	low _restart_prog
  6353   01F075  E9                 	db	high _restart_prog
  6354   01F076  01                 	db	low (_restart_prog shr (0+16))
  6355   01F077  7E                 	db	low STR_60
  6356   01F078  FF                 	db	high STR_60
  6357   01F079  54                 	db	low _wstart_prog
  6358   01F07A  EA                 	db	high _wstart_prog
  6359   01F07B  01                 	db	low (_wstart_prog shr (0+16))
  6360   01F07C  BC                 	db	low STR_61
  6361   01F07D  FF                 	db	high STR_61
  6362   01F07E  36                 	db	low _return_cpu
  6363   01F07F  02                 	db	high _return_cpu
  6364   01F080  00                 	db	low (_return_cpu shr (0+16))
  6365   01F081  DD                 	db	low STR_62
  6366   01F082  FF                 	db	high STR_62
  6367   01F083  B8                 	db	low _print_reg
  6368   01F084  AF                 	db	high _print_reg
  6369   01F085  01                 	db	low (_print_reg shr (0+16))
  6370   01F086  60                 	db	low STR_63
  6371   01F087  FF                 	db	high STR_63
  6372   01F088  3C                 	db	low _mon_prog
  6373   01F089  D7                 	db	high _mon_prog
  6374   01F08A  01                 	db	low (_mon_prog shr (0+16))
  6375   01F08B  8B                 	db	low STR_64
  6376   01F08C  FF                 	db	high STR_64
  6377   01F08D  70                 	db	low _mem_dump
  6378   01F08E  F3                 	db	high _mem_dump
  6379   01F08F  01                 	db	low (_mem_dump shr (0+16))
  6380   01F090  C6                 	db	low STR_65
  6381   01F091  FF                 	db	high STR_65
  6382   01F092  D4                 	db	low _see_file
  6383   01F093  53                 	db	high _see_file
  6384   01F094  01                 	db	low (_see_file shr (0+16))
  6385   01F095  85                 	db	low STR_66
  6386   01F096  FF                 	db	high STR_66
  6387   01F097  42                 	db	low _flash_apl
  6388   01F098  FC                 	db	high _flash_apl
  6389   01F099  01                 	db	low (_flash_apl shr (0+16))
  6390   01F09A  C1                 	db	low STR_67
  6391   01F09B  FF                 	db	high STR_67
  6392   01F09C  D4                 	db	low _print_com
  6393   01F09D  E4                 	db	high _print_com
  6394   01F09E  01                 	db	low (_print_com shr (0+16))
  6395   01F09F  FC                 	db	low STR_68
  6396   01F0A0  FF                 	db	high STR_68
  6397   01F0A1  D4                 	db	low _print_com
  6398   01F0A2  E4                 	db	high _print_com
  6399   01F0A3  01                 	db	low (_print_com shr (0+16))
  6400   01F0A4  64                 	db	low (STR_72+22)
  6401   01F0A5  FB                 	db	high (STR_72+22)
  6402   01F0A6  6E                 	db	low _boot_file
  6403   01F0A7  7C                 	db	high _boot_file
  6404   01F0A8  01                 	db	low (_boot_file shr (0+16))
  6405                           
  6406                           ;initializer for _cpm_drives
  6407   01F0A9  0080               	dw	128
  6408   01F0AB  00                 	db	0
  6409   01F0AC  00                 	db	0
  6410   01F0AD  0080               	dw	128
  6411   01F0AF  00                 	db	0
  6412   01F0B0  00                 	db	0
  6413   01F0B1  0080               	dw	128
  6414   01F0B3  00                 	db	0
  6415   01F0B4  00                 	db	0
  6416   01F0B5  0080               	dw	128
  6417   01F0B7  00                 	db	0
  6418   01F0B8  00                 	db	0
  6419   01F0B9  0000               	dw	0
  6420   01F0BB  00                 	db	0
  6421   01F0BC  00                 	db	0
  6422   01F0BD  0000               	dw	0
  6423   01F0BF  00                 	db	0
  6424   01F0C0  00                 	db	0
  6425   01F0C1  0000               	dw	0
  6426   01F0C3  00                 	db	0
  6427   01F0C4  00                 	db	0
  6428   01F0C5  0000               	dw	0
  6429   01F0C7  00                 	db	0
  6430   01F0C8  00                 	db	0
  6431   01F0C9  0000               	dw	0
  6432   01F0CB  00                 	db	0
  6433   01F0CC  00                 	db	0
  6434   01F0CD  0000               	dw	0
  6435   01F0CF  00                 	db	0
  6436   01F0D0  00                 	db	0
  6437   01F0D1  0000               	dw	0
  6438   01F0D3  00                 	db	0
  6439   01F0D4  00                 	db	0
  6440   01F0D5  0000               	dw	0
  6441   01F0D7  00                 	db	0
  6442   01F0D8  00                 	db	0
  6443   01F0D9  0000               	dw	0
  6444   01F0DB  00                 	db	0
  6445   01F0DC  00                 	db	0
  6446   01F0DD  0000               	dw	0
  6447   01F0DF  00                 	db	0
  6448   01F0E0  00                 	db	0
  6449   01F0E1  0000               	dw	0
  6450   01F0E3  00                 	db	0
  6451   01F0E4  00                 	db	0
  6452   01F0E5  4064               	dw	16484
  6453   01F0E7  00                 	db	0
  6454   01F0E8  00                 	db	0
  6455                           
  6456                           	psect	mediumconst
  6457   00F200                     __pmediumconst:
  6458                           	callstack 0
  6459   00F200  00                 	db	0
  6460   00F201                     _DbcTbl:
  6461                           	callstack 0
  6462   00F201  81                 	db	129
  6463   00F202  9F                 	db	159
  6464   00F203  E0                 	db	224
  6465   00F204  FC                 	db	252
  6466   00F205  40                 	db	64
  6467   00F206  7E                 	db	126
  6468   00F207  80                 	db	128
  6469   00F208  FC                 	db	252
  6470   00F209  00                 	db	0
  6471   00F20A  00                 	db	0
  6472   00F20B                     __end_of_DbcTbl:
  6473                           	callstack 0
  6474   00F20B  0000               	dw	0
  6475   00F20D                     __end_of_debug_flags@SDCard$F3998:
  6476                           	callstack 0
  6477   00F20D  0000               	dw	0
  6478   00F20F                     __end_of_debug_flags:
  6479                           	callstack 0
  6480   00F20F                     _rom:
  6481                           	callstack 0
  6482   00F20F  38                 	db	56
  6483   00F210  FB                 	db	251
  6484   00F211  DB                 	db	219
  6485   00F212  FF                 	db	255
  6486   00F213  FF                 	db	255
  6487   00F214  FF                 	db	255
  6488   00F215  FF                 	db	255
  6489   00F216  FF                 	db	255
  6490   00F217  FF                 	db	255
  6491   00F218  FF                 	db	255
  6492   00F219  F2                 	db	242
  6493   00F21A  FF                 	db	255
  6494   00F21B  F0                 	db	240
  6495   00F21C  FF                 	db	255
  6496   00F21D  F2                 	db	242
  6497   00F21E  FF                 	db	255
  6498   00F21F                     __end_of_rom:
  6499                           	callstack 0
  6500   000080                     _SPI1RXB        set	128
  6501   000081                     _SPI1TXB        set	129
  6502   000082                     _SPI1TCNTL      set	130
  6503   000083                     _SPI1TCNTH      set	131
  6504   000089                     _SPI1BAUD       set	137
  6505   00008C                     _SPI1CLK        set	140
  6506   000086                     _SPI1CON2bits   set	134
  6507   000085                     _SPI1CON1bits   set	133
  6508   00008B                     _SPI1INTE       set	139
  6509   000088                     _SPI1TWIDTH     set	136
  6510   000084                     _SPI1CON0bits   set	132
  6511   000085                     _SPI1CON1       set	133
  6512   000084                     _SPI1CON0       set	132
  6513   0000D6                     _CLCnCON        set	214
  6514   0000D7                     _CLCnPOL        set	215
  6515   0000DF                     _CLCnGLS3       set	223
  6516   0000DE                     _CLCnGLS2       set	222
  6517   0000DD                     _CLCnGLS1       set	221
  6518   0000DC                     _CLCnGLS0       set	220
  6519   0000DB                     _CLCnSEL3       set	219
  6520   0000DA                     _CLCnSEL2       set	218
  6521   0000D9                     _CLCnSEL1       set	217
  6522   0000D8                     _CLCnSEL0       set	216
  6523   0000B1                     _OSCFRQ         set	177
  6524   0000D5                     _CLCSELECT      set	213
  6525   00059D                     _MFOEN          set	1437
  6526   0006BA                     _G3POL          set	1722
  6527   0006A7                     _CLC8OUT        set	1703
  6528   0006B9                     _G2POL          set	1721
  6529   0002D4                     _U3BRG          set	724
  6530   00026B                     _SPI1SDIPPS     set	619
  6531   00026A                     _SPI1SCKPPS     set	618
  6532   000209                     _RB0PPS         set	521
  6533   00020A                     _RB1PPS         set	522
  6534   000203                     _RA2PPS         set	515
  6535   000201                     _RA0PPS         set	513
  6536   000204                     _RA3PPS         set	516
  6537   000207                     _RA6PPS         set	519
  6538   000276                     _U3RXPPS        set	630
  6539   0002C9                     _U3TXB          set	713
  6540   0002C7                     _U3RXB          set	711
  6541   001697                     _U3ON           set	5783
  6542   00168D                     _U3TXEN         set	5773
  6543   00168C                     _U3RXEN         set	5772
  6544   000318                     _TMR0L          set	792
  6545   000319                     _TMR0H          set	793
  6546   00031B                     _T0CON1         set	795
  6547   00031A                     _T0CON0         set	794
  6548   002237                     _NCO1EN         set	8759
  6549   002235                     _NCO1OUT        set	8757
  6550   002230                     _NCO1PFM        set	8752
  6551   00210A                     _WPUE2          set	8458
  6552   00200C                     _WPUA4          set	8204
  6553   002009                     _WPUA1          set	8201
  6554   00200D                     _WPUA5          set	8205
  6555   00200A                     _WPUA2          set	8202
  6556   00200B                     _WPUA3          set	8203
  6557   002008                     _WPUA0          set	8200
  6558   002109                     _WPUE1          set	8457
  6559   002108                     _WPUE0          set	8456
  6560   002102                     _ANSELE2        set	8450
  6561   002101                     _ANSELE1        set	8449
  6562   002100                     _ANSELE0        set	8448
  6563   002588                     _SPI1RXIF       set	9608
  6564   00263A                     _TRISB2         set	9786
  6565   002639                     _TRISB1         set	9785
  6566   002638                     _TRISB0         set	9784
  6567   002675                     _RA5            set	9845
  6568   002636                     _TRISA6         set	9782
  6569   0025F6                     _LATA6          set	9718
  6570   002637                     _TRISA7         set	9783
  6571   002652                     _TRISE2         set	9810
  6572   002612                     _LATE2          set	9746
  6573   002634                     _TRISA4         set	9780
  6574   0025F4                     _LATA4          set	9716
  6575   002631                     _TRISA1         set	9777
  6576   0025F1                     _LATA1          set	9713
  6577   002635                     _TRISA5         set	9781
  6578   0025F2                     _LATA2          set	9714
  6579   002632                     _TRISA2         set	9778
  6580   002633                     _TRISA3         set	9779
  6581   0025F3                     _LATA3          set	9715
  6582   002630                     _TRISA0         set	9776
  6583   002651                     _TRISE1         set	9809
  6584   002611                     _LATE1          set	9745
  6585   002650                     _TRISE0         set	9808
  6586   002610                     _LATE0          set	9744
  6587   0025F0                     _LATA0          set	9712
  6588   002538                     _U3RXIE         set	9528
  6589   0025B9                     _U3TXIF         set	9657
  6590   00250F                     _TMR0IE         set	9487
  6591   00258F                     _TMR0IF         set	9615
  6592   0026B7                     _GIE            set	9911
  6593   00045D                     _IVTBASE        set	1117
  6594   000443                     _NCO1INC        set	1091
  6595   000459                     _IVTLOCKbits    set	1113
  6596   000459                     _IVTLOCK        set	1113
  6597   0004CF                     _PORTB          set	1231
  6598   000447                     _NCO1CLK        set	1095
  6599   00040B                     _SLRCONBbits    set	1035
  6600   0004C7                     _TRISB          set	1223
  6601   0004BF                     _LATB           set	1215
  6602   000409                     _WPUB           set	1033
  6603   0004C9                     _TRISD          set	1225
  6604   0004C1                     _LATD           set	1217
  6605   000419                     _WPUD           set	1049
  6606   0004C8                     _TRISC          set	1224
  6607   0004C0                     _LATC           set	1216
  6608   000411                     _WPUC           set	1041
  6609   000418                     _ANSELD         set	1048
  6610   000410                     _ANSELC         set	1040
  6611   000408                     _ANSELB         set	1032
  6612   000400                     _ANSELA         set	1024
  6613   00F21F                     STR_114:
  6614                           
  6615                           ; BSR set to: 7
  6616   00F21F  41                 	db	65	;'A'
  6617   00F220  3D                 	db	61	;'='
  6618   00F221  24                 	db	36
  6619   00F222  25                 	db	37
  6620   00F223  30                 	db	48	;'0'
  6621   00F224  32                 	db	50	;'2'
  6622   00F225  58                 	db	88	;'X'
  6623   00F226  20                 	db	32
  6624   00F227  58                 	db	88	;'X'
  6625   00F228  3D                 	db	61	;'='
  6626   00F229  24                 	db	36
  6627   00F22A  25                 	db	37
  6628   00F22B  30                 	db	48	;'0'
  6629   00F22C  32                 	db	50	;'2'
  6630   00F22D  58                 	db	88	;'X'
  6631   00F22E  20                 	db	32
  6632   00F22F  59                 	db	89	;'Y'
  6633   00F230  3D                 	db	61	;'='
  6634   00F231  24                 	db	36
  6635   00F232  25                 	db	37
  6636   00F233  30                 	db	48	;'0'
  6637   00F234  32                 	db	50	;'2'
  6638   00F235  58                 	db	88	;'X'
  6639   00F236  20                 	db	32
  6640   00F237  53                 	db	83	;'S'
  6641   00F238  50                 	db	80	;'P'
  6642   00F239  3D                 	db	61	;'='
  6643   00F23A  24                 	db	36
  6644   00F23B  30                 	db	48	;'0'
  6645   00F23C  31                 	db	49	;'1'
  6646   00F23D  25                 	db	37
  6647   00F23E  30                 	db	48	;'0'
  6648   00F23F  32                 	db	50	;'2'
  6649   00F240  58                 	db	88	;'X'
  6650   00F241  20                 	db	32
  6651   00F242  50                 	db	80	;'P'
  6652   00F243  43                 	db	67	;'C'
  6653   00F244  3D                 	db	61	;'='
  6654   00F245  24                 	db	36
  6655   00F246  25                 	db	37
  6656   00F247  30                 	db	48	;'0'
  6657   00F248  34                 	db	52	;'4'
  6658   00F249  58                 	db	88	;'X'
  6659   00F24A  20                 	db	32
  6660   00F24B  50                 	db	80	;'P'
  6661   00F24C  53                 	db	83	;'S'
  6662   00F24D  52                 	db	82	;'R'
  6663   00F24E  3D                 	db	61	;'='
  6664   00F24F  24                 	db	36
  6665   00F250  25                 	db	37
  6666   00F251  30                 	db	48	;'0'
  6667   00F252  32                 	db	50	;'2'
  6668   00F253  58                 	db	88	;'X'
  6669   00F254  0D                 	db	13
  6670   00F255  0A                 	db	10
  6671   00F256  00                 	db	0
  6672   00F257                     STR_193:
  6673                           
  6674                           ; BSR set to: 7
  6675   00F257  53                 	db	83	;'S'
  6676   00F258  44                 	db	68	;'D'
  6677   00F259  20                 	db	32
  6678   00F25A  43                 	db	67	;'C'
  6679   00F25B  61                 	db	97	;'a'
  6680   00F25C  72                 	db	114	;'r'
  6681   00F25D  64                 	db	100	;'d'
  6682   00F25E  3A                 	db	58	;':'
  6683   00F25F  20                 	db	32
  6684   00F260  72                 	db	114	;'r'
  6685   00F261  65                 	db	101	;'e'
  6686   00F262  61                 	db	97	;'a'
  6687   00F263  64                 	db	100	;'d'
  6688   00F264  35                 	db	53	;'5'
  6689   00F265  31                 	db	49	;'1'
  6690   00F266  32                 	db	50	;'2'
  6691   00F267  3A                 	db	58	;':'
  6692   00F268  20                 	db	32
  6693   00F269  43                 	db	67	;'C'
  6694   00F26A  52                 	db	82	;'R'
  6695   00F26B  43                 	db	67	;'C'
  6696   00F26C  20                 	db	32
  6697   00F26D  65                 	db	101	;'e'
  6698   00F26E  72                 	db	114	;'r'
  6699   00F26F  72                 	db	114	;'r'
  6700   00F270  6F                 	db	111	;'o'
  6701   00F271  72                 	db	114	;'r'
  6702   00F272  20                 	db	32
  6703   00F273  28                 	db	40
  6704   00F274  25                 	db	37
  6705   00F275  30                 	db	48	;'0'
  6706   00F276  34                 	db	52	;'4'
  6707   00F277  78                 	db	120	;'x'
  6708   00F278  20                 	db	32
  6709   00F279  21                 	db	33
  6710   00F27A  3D                 	db	61	;'='
  6711   00F27B  20                 	db	32
  6712   00F27C  25                 	db	37
  6713   00F27D  30                 	db	48	;'0'
  6714   00F27E  34                 	db	52	;'4'
  6715   00F27F  78                 	db	120	;'x'
  6716   00F280  2C                 	db	44
  6717   00F281  20                 	db	32
  6718   00F282  72                 	db	114	;'r'
  6719   00F283  65                 	db	101	;'e'
  6720   00F284  74                 	db	116	;'t'
  6721   00F285  72                 	db	114	;'r'
  6722   00F286  79                 	db	121	;'y'
  6723   00F287  3D                 	db	61	;'='
  6724   00F288  25                 	db	37
  6725   00F289  64                 	db	100	;'d'
  6726   00F28A  29                 	db	41
  6727   00F28B  0A                 	db	10
  6728   00F28C  0D                 	db	13
  6729   00F28D  00                 	db	0
  6730   00F28E                     STR_112:
  6731                           
  6732                           ; BSR set to: 7
  6733   00F28E  41                 	db	65	;'A'
  6734   00F28F  3D                 	db	61	;'='
  6735   00F290  24                 	db	36
  6736   00F291  25                 	db	37
  6737   00F292  30                 	db	48	;'0'
  6738   00F293  34                 	db	52	;'4'
  6739   00F294  58                 	db	88	;'X'
  6740   00F295  20                 	db	32
  6741   00F296  58                 	db	88	;'X'
  6742   00F297  3D                 	db	61	;'='
  6743   00F298  24                 	db	36
  6744   00F299  25                 	db	37
  6745   00F29A  30                 	db	48	;'0'
  6746   00F29B  34                 	db	52	;'4'
  6747   00F29C  58                 	db	88	;'X'
  6748   00F29D  20                 	db	32
  6749   00F29E  59                 	db	89	;'Y'
  6750   00F29F  3D                 	db	61	;'='
  6751   00F2A0  24                 	db	36
  6752   00F2A1  25                 	db	37
  6753   00F2A2  30                 	db	48	;'0'
  6754   00F2A3  34                 	db	52	;'4'
  6755   00F2A4  58                 	db	88	;'X'
  6756   00F2A5  20                 	db	32
  6757   00F2A6  53                 	db	83	;'S'
  6758   00F2A7  50                 	db	80	;'P'
  6759   00F2A8  3D                 	db	61	;'='
  6760   00F2A9  24                 	db	36
  6761   00F2AA  25                 	db	37
  6762   00F2AB  30                 	db	48	;'0'
  6763   00F2AC  34                 	db	52	;'4'
  6764   00F2AD  58                 	db	88	;'X'
  6765   00F2AE  20                 	db	32
  6766   00F2AF  50                 	db	80	;'P'
  6767   00F2B0  43                 	db	67	;'C'
  6768   00F2B1  3D                 	db	61	;'='
  6769   00F2B2  24                 	db	36
  6770   00F2B3  25                 	db	37
  6771   00F2B4  30                 	db	48	;'0'
  6772   00F2B5  34                 	db	52	;'4'
  6773   00F2B6  58                 	db	88	;'X'
  6774   00F2B7  20                 	db	32
  6775   00F2B8  50                 	db	80	;'P'
  6776   00F2B9  53                 	db	83	;'S'
  6777   00F2BA  52                 	db	82	;'R'
  6778   00F2BB  3D                 	db	61	;'='
  6779   00F2BC  24                 	db	36
  6780   00F2BD  25                 	db	37
  6781   00F2BE  30                 	db	48	;'0'
  6782   00F2BF  32                 	db	50	;'2'
  6783   00F2C0  58                 	db	88	;'X'
  6784   00F2C1  0D                 	db	13
  6785   00F2C2  0A                 	db	10
  6786   00F2C3  00                 	db	0
  6787   00F2C4                     
  6788                           ; BSR set to: 7
  6789   00F2C4  53                 	db	83	;'S'
  6790   00F2C5  44                 	db	68	;'D'
  6791   00F2C6  20                 	db	32
  6792   00F2C7  43                 	db	67	;'C'
  6793   00F2C8  61                 	db	97	;'a'
  6794   00F2C9  72                 	db	114	;'r'
  6795   00F2CA  64                 	db	100	;'d'
  6796   00F2CB  3A                 	db	58	;':'
  6797   00F2CC  20                 	db	32
  6798   00F2CD  20                 	db	32
  6799   00F2CE  72                 	db	114	;'r'
  6800   00F2CF  65                 	db	101	;'e'
  6801   00F2D0  61                 	db	97	;'a'
  6802   00F2D1  64                 	db	100	;'d'
  6803   00F2D2  35                 	db	53	;'5'
  6804   00F2D3  31                 	db	49	;'1'
  6805   00F2D4  32                 	db	50	;'2'
  6806   00F2D5  3A                 	db	58	;':'
  6807   00F2D6  20                 	db	32
  6808   00F2D7  61                 	db	97	;'a'
  6809   00F2D8  64                 	db	100	;'d'
  6810   00F2D9  64                 	db	100	;'d'
  6811   00F2DA  72                 	db	114	;'r'
  6812   00F2DB  3D                 	db	61	;'='
  6813   00F2DC  25                 	db	37
  6814   00F2DD  38                 	db	56	;'8'
  6815   00F2DE  6C                 	db	108	;'l'
  6816   00F2DF  64                 	db	100	;'d'
  6817   00F2E0  2C                 	db	44
  6818   00F2E1  20                 	db	32
  6819   00F2E2  6F                 	db	111	;'o'
  6820   00F2E3  66                 	db	102	;'f'
  6821   00F2E4  66                 	db	102	;'f'
  6822   00F2E5  73                 	db	115	;'s'
  6823   00F2E6  3D                 	db	61	;'='
  6824   00F2E7  25                 	db	37
  6825   00F2E8  64                 	db	100	;'d'
  6826   00F2E9  2C                 	db	44
  6827   00F2EA  20                 	db	32
  6828   00F2EB  63                 	db	99	;'c'
  6829   00F2EC  6F                 	db	111	;'o'
  6830   00F2ED  75                 	db	117	;'u'
  6831   00F2EE  6E                 	db	110	;'n'
  6832   00F2EF  74                 	db	116	;'t'
  6833   00F2F0  3D                 	db	61	;'='
  6834   00F2F1  25                 	db	37
  6835   00F2F2  64                 	db	100	;'d'
  6836   00F2F3  0A                 	db	10
  6837   00F2F4  0D                 	db	13
  6838   00F2F5  00                 	db	0
  6839   00F2F6                     
  6840                           ; BSR set to: 7
  6841   00F2F6  53                 	db	83	;'S'
  6842   00F2F7  44                 	db	68	;'D'
  6843   00F2F8  20                 	db	32
  6844   00F2F9  43                 	db	67	;'C'
  6845   00F2FA  61                 	db	97	;'a'
  6846   00F2FB  72                 	db	114	;'r'
  6847   00F2FC  64                 	db	100	;'d'
  6848   00F2FD  3A                 	db	58	;':'
  6849   00F2FE  20                 	db	32
  6850   00F2FF  77                 	db	119	;'w'
  6851   00F300  72                 	db	114	;'r'
  6852   00F301  69                 	db	105	;'i'
  6853   00F302  74                 	db	116	;'t'
  6854   00F303  65                 	db	101	;'e'
  6855   00F304  35                 	db	53	;'5'
  6856   00F305  31                 	db	49	;'1'
  6857   00F306  32                 	db	50	;'2'
  6858   00F307  3A                 	db	58	;':'
  6859   00F308  20                 	db	32
  6860   00F309  61                 	db	97	;'a'
  6861   00F30A  64                 	db	100	;'d'
  6862   00F30B  64                 	db	100	;'d'
  6863   00F30C  72                 	db	114	;'r'
  6864   00F30D  3D                 	db	61	;'='
  6865   00F30E  25                 	db	37
  6866   00F30F  38                 	db	56	;'8'
  6867   00F310  6C                 	db	108	;'l'
  6868   00F311  64                 	db	100	;'d'
  6869   00F312  2C                 	db	44
  6870   00F313  20                 	db	32
  6871   00F314  6F                 	db	111	;'o'
  6872   00F315  66                 	db	102	;'f'
  6873   00F316  66                 	db	102	;'f'
  6874   00F317  73                 	db	115	;'s'
  6875   00F318  3D                 	db	61	;'='
  6876   00F319  25                 	db	37
  6877   00F31A  64                 	db	100	;'d'
  6878   00F31B  2C                 	db	44
  6879   00F31C  20                 	db	32
  6880   00F31D  63                 	db	99	;'c'
  6881   00F31E  6F                 	db	111	;'o'
  6882   00F31F  75                 	db	117	;'u'
  6883   00F320  6E                 	db	110	;'n'
  6884   00F321  74                 	db	116	;'t'
  6885   00F322  3D                 	db	61	;'='
  6886   00F323  25                 	db	37
  6887   00F324  64                 	db	100	;'d'
  6888   00F325  0A                 	db	10
  6889   00F326  0D                 	db	13
  6890   00F327  00                 	db	0
  6891   00F328                     
  6892                           ; BSR set to: 7
  6893   00F328  53                 	db	83	;'S'
  6894   00F329  44                 	db	68	;'D'
  6895   00F32A  20                 	db	32
  6896   00F32B  43                 	db	67	;'C'
  6897   00F32C  61                 	db	97	;'a'
  6898   00F32D  72                 	db	114	;'r'
  6899   00F32E  64                 	db	100	;'d'
  6900   00F32F  3A                 	db	58	;':'
  6901   00F330  20                 	db	32
  6902   00F331  77                 	db	119	;'w'
  6903   00F332  72                 	db	114	;'r'
  6904   00F333  69                 	db	105	;'i'
  6905   00F334  74                 	db	116	;'t'
  6906   00F335  65                 	db	101	;'e'
  6907   00F336  35                 	db	53	;'5'
  6908   00F337  31                 	db	49	;'1'
  6909   00F338  32                 	db	50	;'2'
  6910   00F339  3A                 	db	58	;':'
  6911   00F33A  20                 	db	32
  6912   00F33B  66                 	db	102	;'f'
  6913   00F33C  61                 	db	97	;'a'
  6914   00F33D  69                 	db	105	;'i'
  6915   00F33E  6C                 	db	108	;'l'
  6916   00F33F  65                 	db	101	;'e'
  6917   00F340  64                 	db	100	;'d'
  6918   00F341  20                 	db	32
  6919   00F342  74                 	db	116	;'t'
  6920   00F343  6F                 	db	111	;'o'
  6921   00F344  20                 	db	32
  6922   00F345  67                 	db	103	;'g'
  6923   00F346  65                 	db	101	;'e'
  6924   00F347  74                 	db	116	;'t'
  6925   00F348  20                 	db	32
  6926   00F349  74                 	db	116	;'t'
  6927   00F34A  6F                 	db	111	;'o'
  6928   00F34B  6B                 	db	107	;'k'
  6929   00F34C  65                 	db	101	;'e'
  6930   00F34D  6E                 	db	110	;'n'
  6931   00F34E  2C                 	db	44
  6932   00F34F  20                 	db	32
  6933   00F350  74                 	db	116	;'t'
  6934   00F351  69                 	db	105	;'i'
  6935   00F352  6D                 	db	109	;'m'
  6936   00F353  65                 	db	101	;'e'
  6937   00F354  6F                 	db	111	;'o'
  6938   00F355  75                 	db	117	;'u'
  6939   00F356  74                 	db	116	;'t'
  6940   00F357  0A                 	db	10
  6941   00F358  0D                 	db	13
  6942   00F359  00                 	db	0
  6943   00F35A                     
  6944                           ; BSR set to: 7
  6945   00F35A  64                 	db	100	;'d'
  6946   00F35B  69                 	db	105	;'i'
  6947   00F35C  73                 	db	115	;'s'
  6948   00F35D  6B                 	db	107	;'k'
  6949   00F35E  5F                 	db	95	;'_'
  6950   00F35F  69                 	db	105	;'i'
  6951   00F360  6F                 	db	111	;'o'
  6952   00F361  63                 	db	99	;'c'
  6953   00F362  74                 	db	116	;'t'
  6954   00F363  6C                 	db	108	;'l'
  6955   00F364  3A                 	db	58	;':'
  6956   00F365  20                 	db	32
  6957   00F366  70                 	db	112	;'p'
  6958   00F367  64                 	db	100	;'d'
  6959   00F368  72                 	db	114	;'r'
  6960   00F369  76                 	db	118	;'v'
  6961   00F36A  3D                 	db	61	;'='
  6962   00F36B  25                 	db	37
  6963   00F36C  64                 	db	100	;'d'
  6964   00F36D  2C                 	db	44
  6965   00F36E  20                 	db	32
  6966   00F36F  63                 	db	99	;'c'
  6967   00F370  6D                 	db	109	;'m'
  6968   00F371  64                 	db	100	;'d'
  6969   00F372  3D                 	db	61	;'='
  6970   00F373  25                 	db	37
  6971   00F374  64                 	db	100	;'d'
  6972   00F375  2C                 	db	44
  6973   00F376  20                 	db	32
  6974   00F377  62                 	db	98	;'b'
  6975   00F378  75                 	db	117	;'u'
  6976   00F379  66                 	db	102	;'f'
  6977   00F37A  66                 	db	102	;'f'
  6978   00F37B  3D                 	db	61	;'='
  6979   00F37C  30                 	db	48	;'0'
  6980   00F37D  78                 	db	120	;'x'
  6981   00F37E  25                 	db	37
  6982   00F37F  6C                 	db	108	;'l'
  6983   00F380  78                 	db	120	;'x'
  6984   00F381  3A                 	db	58	;':'
  6985   00F382  20                 	db	32
  6986   00F383  72                 	db	114	;'r'
  6987   00F384  65                 	db	101	;'e'
  6988   00F385  73                 	db	115	;'s'
  6989   00F386  3D                 	db	61	;'='
  6990   00F387  25                 	db	37
  6991   00F388  64                 	db	100	;'d'
  6992   00F389  0A                 	db	10
  6993   00F38A  0D                 	db	13
  6994   00F38B  00                 	db	0
  6995   00F38C                     STR_115:
  6996                           
  6997                           ; BSR set to: 7
  6998   00F38C  0D                 	db	13
  6999   00F38D  0A                 	db	10
  7000   00F38E  3C                 	db	60	;'<'
  7001   00F38F  3C                 	db	60	;'<'
  7002   00F390  20                 	db	32
  7003   00F391  4D                 	db	77	;'M'
  7004   00F392  45                 	db	69	;'E'
  7005   00F393  5A                 	db	90	;'Z'
  7006   00F394  57                 	db	87	;'W'
  7007   00F395  36                 	db	54	;'6'
  7008   00F396  35                 	db	53	;'5'
  7009   00F397  43                 	db	67	;'C'
  7010   00F398  5F                 	db	95	;'_'
  7011   00F399  52                 	db	82	;'R'
  7012   00F39A  41                 	db	65	;'A'
  7013   00F39B  4D                 	db	77	;'M'
  7014   00F39C  20                 	db	32
  7015   00F39D  46                 	db	70	;'F'
  7016   00F39E  69                 	db	105	;'i'
  7017   00F39F  72                 	db	114	;'r'
  7018   00F3A0  6D                 	db	109	;'m'
  7019   00F3A1  77                 	db	119	;'w'
  7020   00F3A2  61                 	db	97	;'a'
  7021   00F3A3  72                 	db	114	;'r'
  7022   00F3A4  65                 	db	101	;'e'
  7023   00F3A5  20                 	db	32
  7024   00F3A6  42                 	db	66	;'B'
  7025   00F3A7  75                 	db	117	;'u'
  7026   00F3A8  69                 	db	105	;'i'
  7027   00F3A9  6C                 	db	108	;'l'
  7028   00F3AA  74                 	db	116	;'t'
  7029   00F3AB  2D                 	db	45
  7030   00F3AC  69                 	db	105	;'i'
  7031   00F3AD  6E                 	db	110	;'n'
  7032   00F3AE  20                 	db	32
  7033   00F3AF  63                 	db	99	;'c'
  7034   00F3B0  6F                 	db	111	;'o'
  7035   00F3B1  6D                 	db	109	;'m'
  7036   00F3B2  6D                 	db	109	;'m'
  7037   00F3B3  61                 	db	97	;'a'
  7038   00F3B4  6E                 	db	110	;'n'
  7039   00F3B5  64                 	db	100	;'d'
  7040   00F3B6  20                 	db	32
  7041   00F3B7  3E                 	db	62	;'>'
  7042   00F3B8  3E                 	db	62	;'>'
  7043   00F3B9  0D                 	db	13
  7044   00F3BA  0A                 	db	10
  7045   00F3BB  00                 	db	0
  7046   00F3BC                     
  7047                           ; BSR set to: 7
  7048   00F3BC  53                 	db	83	;'S'
  7049   00F3BD  44                 	db	68	;'D'
  7050   00F3BE  20                 	db	32
  7051   00F3BF  43                 	db	67	;'C'
  7052   00F3C0  61                 	db	97	;'a'
  7053   00F3C1  72                 	db	114	;'r'
  7054   00F3C2  64                 	db	100	;'d'
  7055   00F3C3  3A                 	db	58	;':'
  7056   00F3C4  20                 	db	32
  7057   00F3C5  77                 	db	119	;'w'
  7058   00F3C6  72                 	db	114	;'r'
  7059   00F3C7  69                 	db	105	;'i'
  7060   00F3C8  74                 	db	116	;'t'
  7061   00F3C9  65                 	db	101	;'e'
  7062   00F3CA  35                 	db	53	;'5'
  7063   00F3CB  31                 	db	49	;'1'
  7064   00F3CC  32                 	db	50	;'2'
  7065   00F3CD  3A                 	db	58	;':'
  7066   00F3CE  20                 	db	32
  7067   00F3CF  74                 	db	116	;'t'
  7068   00F3D0  69                 	db	105	;'i'
  7069   00F3D1  6D                 	db	109	;'m'
  7070   00F3D2  65                 	db	101	;'e'
  7071   00F3D3  6F                 	db	111	;'o'
  7072   00F3D4  75                 	db	117	;'u'
  7073   00F3D5  74                 	db	116	;'t'
  7074   00F3D6  2C                 	db	44
  7075   00F3D7  20                 	db	32
  7076   00F3D8  72                 	db	114	;'r'
  7077   00F3D9  65                 	db	101	;'e'
  7078   00F3DA  73                 	db	115	;'s'
  7079   00F3DB  70                 	db	112	;'p'
  7080   00F3DC  6F                 	db	111	;'o'
  7081   00F3DD  6E                 	db	110	;'n'
  7082   00F3DE  73                 	db	115	;'s'
  7083   00F3DF  65                 	db	101	;'e'
  7084   00F3E0  20                 	db	32
  7085   00F3E1  69                 	db	105	;'i'
  7086   00F3E2  73                 	db	115	;'s'
  7087   00F3E3  20                 	db	32
  7088   00F3E4  25                 	db	37
  7089   00F3E5  30                 	db	48	;'0'
  7090   00F3E6  32                 	db	50	;'2'
  7091   00F3E7  78                 	db	120	;'x'
  7092   00F3E8  0A                 	db	10
  7093   00F3E9  0D                 	db	13
  7094   00F3EA  00                 	db	0
  7095   00F3EB                     
  7096                           ; BSR set to: 7
  7097   00F3EB  53                 	db	83	;'S'
  7098   00F3EC  44                 	db	68	;'D'
  7099   00F3ED  20                 	db	32
  7100   00F3EE  43                 	db	67	;'C'
  7101   00F3EF  61                 	db	97	;'a'
  7102   00F3F0  72                 	db	114	;'r'
  7103   00F3F1  64                 	db	100	;'d'
  7104   00F3F2  3A                 	db	58	;':'
  7105   00F3F3  20                 	db	32
  7106   00F3F4  43                 	db	67	;'C'
  7107   00F3F5  4D                 	db	77	;'M'
  7108   00F3F6  44                 	db	68	;'D'
  7109   00F3F7  35                 	db	53	;'5'
  7110   00F3F8  38                 	db	56	;'8'
  7111   00F3F9  2C                 	db	44
  7112   00F3FA  20                 	db	32
  7113   00F3FB  52                 	db	82	;'R'
  7114   00F3FC  33                 	db	51	;'3'
  7115   00F3FD  3D                 	db	61	;'='
  7116   00F3FE  25                 	db	37
  7117   00F3FF  30                 	db	48	;'0'
  7118   00F400  32                 	db	50	;'2'
  7119   00F401  78                 	db	120	;'x'
  7120   00F402  20                 	db	32
  7121   00F403  25                 	db	37
  7122   00F404  30                 	db	48	;'0'
  7123   00F405  32                 	db	50	;'2'
  7124   00F406  78                 	db	120	;'x'
  7125   00F407  20                 	db	32
  7126   00F408  25                 	db	37
  7127   00F409  30                 	db	48	;'0'
  7128   00F40A  32                 	db	50	;'2'
  7129   00F40B  78                 	db	120	;'x'
  7130   00F40C  20                 	db	32
  7131   00F40D  25                 	db	37
  7132   00F40E  30                 	db	48	;'0'
  7133   00F40F  32                 	db	50	;'2'
  7134   00F410  78                 	db	120	;'x'
  7135   00F411  20                 	db	32
  7136   00F412  25                 	db	37
  7137   00F413  30                 	db	48	;'0'
  7138   00F414  32                 	db	50	;'2'
  7139   00F415  78                 	db	120	;'x'
  7140   00F416  0A                 	db	10
  7141   00F417  0D                 	db	13
  7142   00F418  00                 	db	0
  7143   00F419                     STR_174:
  7144                           
  7145                           ; BSR set to: 7
  7146   00F419  25                 	db	37
  7147   00F41A  73                 	db	115	;'s'
  7148   00F41B  3A                 	db	58	;':'
  7149   00F41C  20                 	db	32
  7150   00F41D  45                 	db	69	;'E'
  7151   00F41E  52                 	db	82	;'R'
  7152   00F41F  52                 	db	82	;'R'
  7153   00F420  4F                 	db	79	;'O'
  7154   00F421  52                 	db	82	;'R'
  7155   00F422  3A                 	db	58	;':'
  7156   00F423  20                 	db	32
  7157   00F424  63                 	db	99	;'c'
  7158   00F425  6C                 	db	108	;'l'
  7159   00F426  6F                 	db	111	;'o'
  7160   00F427  63                 	db	99	;'c'
  7161   00F428  6B                 	db	107	;'k'
  7162   00F429  20                 	db	32
  7163   00F42A  73                 	db	115	;'s'
  7164   00F42B  70                 	db	112	;'p'
  7165   00F42C  65                 	db	101	;'e'
  7166   00F42D  65                 	db	101	;'e'
  7167   00F42E  64                 	db	100	;'d'
  7168   00F42F  20                 	db	32
  7169   00F430  25                 	db	37
  7170   00F431  64                 	db	100	;'d'
  7171   00F432  20                 	db	32
  7172   00F433  69                 	db	105	;'i'
  7173   00F434  73                 	db	115	;'s'
  7174   00F435  20                 	db	32
  7175   00F436  6E                 	db	110	;'n'
  7176   00F437  6F                 	db	111	;'o'
  7177   00F438  74                 	db	116	;'t'
  7178   00F439  20                 	db	32
  7179   00F43A  73                 	db	115	;'s'
  7180   00F43B  75                 	db	117	;'u'
  7181   00F43C  70                 	db	112	;'p'
  7182   00F43D  70                 	db	112	;'p'
  7183   00F43E  6F                 	db	111	;'o'
  7184   00F43F  72                 	db	114	;'r'
  7185   00F440  74                 	db	116	;'t'
  7186   00F441  65                 	db	101	;'e'
  7187   00F442  64                 	db	100	;'d'
  7188   00F443  0A                 	db	10
  7189   00F444  0D                 	db	13
  7190   00F445  00                 	db	0
  7191   00F446                     
  7192                           ; BSR set to: 7
  7193   00F446  53                 	db	83	;'S'
  7194   00F447  44                 	db	68	;'D'
  7195   00F448  20                 	db	32
  7196   00F449  43                 	db	67	;'C'
  7197   00F44A  61                 	db	97	;'a'
  7198   00F44B  72                 	db	114	;'r'
  7199   00F44C  64                 	db	100	;'d'
  7200   00F44D  3A                 	db	58	;':'
  7201   00F44E  20                 	db	32
  7202   00F44F  43                 	db	67	;'C'
  7203   00F450  4D                 	db	77	;'M'
  7204   00F451  44                 	db	68	;'D'
  7205   00F452  38                 	db	56	;'8'
  7206   00F453  2C                 	db	44
  7207   00F454  20                 	db	32
  7208   00F455  52                 	db	82	;'R'
  7209   00F456  37                 	db	55	;'7'
  7210   00F457  3D                 	db	61	;'='
  7211   00F458  25                 	db	37
  7212   00F459  30                 	db	48	;'0'
  7213   00F45A  32                 	db	50	;'2'
  7214   00F45B  78                 	db	120	;'x'
  7215   00F45C  20                 	db	32
  7216   00F45D  25                 	db	37
  7217   00F45E  30                 	db	48	;'0'
  7218   00F45F  32                 	db	50	;'2'
  7219   00F460  78                 	db	120	;'x'
  7220   00F461  20                 	db	32
  7221   00F462  25                 	db	37
  7222   00F463  30                 	db	48	;'0'
  7223   00F464  32                 	db	50	;'2'
  7224   00F465  78                 	db	120	;'x'
  7225   00F466  20                 	db	32
  7226   00F467  25                 	db	37
  7227   00F468  30                 	db	48	;'0'
  7228   00F469  32                 	db	50	;'2'
  7229   00F46A  78                 	db	120	;'x'
  7230   00F46B  20                 	db	32
  7231   00F46C  25                 	db	37
  7232   00F46D  30                 	db	48	;'0'
  7233   00F46E  32                 	db	50	;'2'
  7234   00F46F  78                 	db	120	;'x'
  7235   00F470  0A                 	db	10
  7236   00F471  0D                 	db	13
  7237   00F472  00                 	db	0
  7238   00F473                     STR_17:
  7239                           
  7240                           ; BSR set to: 7
  7241   00F473  64                 	db	100	;'d'
  7242   00F474  69                 	db	105	;'i'
  7243   00F475  73                 	db	115	;'s'
  7244   00F476  6B                 	db	107	;'k'
  7245   00F477  5F                 	db	95	;'_'
  7246   00F478  69                 	db	105	;'i'
  7247   00F479  6F                 	db	111	;'o'
  7248   00F47A  63                 	db	99	;'c'
  7249   00F47B  74                 	db	116	;'t'
  7250   00F47C  6C                 	db	108	;'l'
  7251   00F47D  3A                 	db	58	;':'
  7252   00F47E  20                 	db	32
  7253   00F47F  70                 	db	112	;'p'
  7254   00F480  64                 	db	100	;'d'
  7255   00F481  72                 	db	114	;'r'
  7256   00F482  76                 	db	118	;'v'
  7257   00F483  3D                 	db	61	;'='
  7258   00F484  25                 	db	37
  7259   00F485  64                 	db	100	;'d'
  7260   00F486  2C                 	db	44
  7261   00F487  20                 	db	32
  7262   00F488  63                 	db	99	;'c'
  7263   00F489  6D                 	db	109	;'m'
  7264   00F48A  64                 	db	100	;'d'
  7265   00F48B  3D                 	db	61	;'='
  7266   00F48C  25                 	db	37
  7267   00F48D  64                 	db	100	;'d'
  7268   00F48E  3A                 	db	58	;':'
  7269   00F48F  20                 	db	32
  7270   00F490  4E                 	db	78	;'N'
  7271   00F491  6F                 	db	111	;'o'
  7272   00F492  74                 	db	116	;'t'
  7273   00F493  20                 	db	32
  7274   00F494  68                 	db	104	;'h'
  7275   00F495  61                 	db	97	;'a'
  7276   00F496  6E                 	db	110	;'n'
  7277   00F497  64                 	db	100	;'d'
  7278   00F498  6C                 	db	108	;'l'
  7279   00F499  65                 	db	101	;'e'
  7280   00F49A  64                 	db	100	;'d'
  7281   00F49B  2E                 	db	46
  7282   00F49C  0A                 	db	10
  7283   00F49D  0D                 	db	13
  7284   00F49E  00                 	db	0
  7285   00F49F                     
  7286                           ; BSR set to: 7
  7287   00F49F  64                 	db	100	;'d'
  7288   00F4A0  69                 	db	105	;'i'
  7289   00F4A1  73                 	db	115	;'s'
  7290   00F4A2  6B                 	db	107	;'k'
  7291   00F4A3  5F                 	db	95	;'_'
  7292   00F4A4  72                 	db	114	;'r'
  7293   00F4A5  65                 	db	101	;'e'
  7294   00F4A6  61                 	db	97	;'a'
  7295   00F4A7  64                 	db	100	;'d'
  7296   00F4A8  3A                 	db	58	;':'
  7297   00F4A9  20                 	db	32
  7298   00F4AA  20                 	db	32
  7299   00F4AB  70                 	db	112	;'p'
  7300   00F4AC  64                 	db	100	;'d'
  7301   00F4AD  72                 	db	114	;'r'
  7302   00F4AE  76                 	db	118	;'v'
  7303   00F4AF  3D                 	db	61	;'='
  7304   00F4B0  25                 	db	37
  7305   00F4B1  64                 	db	100	;'d'
  7306   00F4B2  2C                 	db	44
  7307   00F4B3  20                 	db	32
  7308   00F4B4  73                 	db	115	;'s'
  7309   00F4B5  65                 	db	101	;'e'
  7310   00F4B6  63                 	db	99	;'c'
  7311   00F4B7  74                 	db	116	;'t'
  7312   00F4B8  6F                 	db	111	;'o'
  7313   00F4B9  72                 	db	114	;'r'
  7314   00F4BA  3D                 	db	61	;'='
  7315   00F4BB  25                 	db	37
  7316   00F4BC  6C                 	db	108	;'l'
  7317   00F4BD  64                 	db	100	;'d'
  7318   00F4BE  2C                 	db	44
  7319   00F4BF  20                 	db	32
  7320   00F4C0  63                 	db	99	;'c'
  7321   00F4C1  6F                 	db	111	;'o'
  7322   00F4C2  75                 	db	117	;'u'
  7323   00F4C3  6E                 	db	110	;'n'
  7324   00F4C4  74                 	db	116	;'t'
  7325   00F4C5  3D                 	db	61	;'='
  7326   00F4C6  25                 	db	37
  7327   00F4C7  64                 	db	100	;'d'
  7328   00F4C8  0A                 	db	10
  7329   00F4C9  0D                 	db	13
  7330   00F4CA  00                 	db	0
  7331   00F4CB                     
  7332                           ; BSR set to: 7
  7333   00F4CB  64                 	db	100	;'d'
  7334   00F4CC  69                 	db	105	;'i'
  7335   00F4CD  73                 	db	115	;'s'
  7336   00F4CE  6B                 	db	107	;'k'
  7337   00F4CF  5F                 	db	95	;'_'
  7338   00F4D0  77                 	db	119	;'w'
  7339   00F4D1  72                 	db	114	;'r'
  7340   00F4D2  69                 	db	105	;'i'
  7341   00F4D3  74                 	db	116	;'t'
  7342   00F4D4  65                 	db	101	;'e'
  7343   00F4D5  3A                 	db	58	;':'
  7344   00F4D6  20                 	db	32
  7345   00F4D7  70                 	db	112	;'p'
  7346   00F4D8  64                 	db	100	;'d'
  7347   00F4D9  72                 	db	114	;'r'
  7348   00F4DA  76                 	db	118	;'v'
  7349   00F4DB  3D                 	db	61	;'='
  7350   00F4DC  25                 	db	37
  7351   00F4DD  64                 	db	100	;'d'
  7352   00F4DE  2C                 	db	44
  7353   00F4DF  20                 	db	32
  7354   00F4E0  73                 	db	115	;'s'
  7355   00F4E1  65                 	db	101	;'e'
  7356   00F4E2  63                 	db	99	;'c'
  7357   00F4E3  74                 	db	116	;'t'
  7358   00F4E4  6F                 	db	111	;'o'
  7359   00F4E5  72                 	db	114	;'r'
  7360   00F4E6  3D                 	db	61	;'='
  7361   00F4E7  25                 	db	37
  7362   00F4E8  6C                 	db	108	;'l'
  7363   00F4E9  64                 	db	100	;'d'
  7364   00F4EA  2C                 	db	44
  7365   00F4EB  20                 	db	32
  7366   00F4EC  63                 	db	99	;'c'
  7367   00F4ED  6F                 	db	111	;'o'
  7368   00F4EE  75                 	db	117	;'u'
  7369   00F4EF  6E                 	db	110	;'n'
  7370   00F4F0  74                 	db	116	;'t'
  7371   00F4F1  3D                 	db	61	;'='
  7372   00F4F2  25                 	db	37
  7373   00F4F3  64                 	db	100	;'d'
  7374   00F4F4  0A                 	db	10
  7375   00F4F5  0D                 	db	13
  7376   00F4F6  00                 	db	0
  7377   00F4F7                     
  7378                           ; BSR set to: 7
  7379   00F4F7  53                 	db	83	;'S'
  7380   00F4F8  44                 	db	68	;'D'
  7381   00F4F9  20                 	db	32
  7382   00F4FA  43                 	db	67	;'C'
  7383   00F4FB  61                 	db	97	;'a'
  7384   00F4FC  72                 	db	114	;'r'
  7385   00F4FD  64                 	db	100	;'d'
  7386   00F4FE  3A                 	db	58	;':'
  7387   00F4FF  20                 	db	32
  7388   00F500  43                 	db	67	;'C'
  7389   00F501  43                 	db	67	;'C'
  7390   00F502  53                 	db	83	;'S'
  7391   00F503  20                 	db	32
  7392   00F504  28                 	db	40
  7393   00F505  43                 	db	67	;'C'
  7394   00F506  61                 	db	97	;'a'
  7395   00F507  72                 	db	114	;'r'
  7396   00F508  64                 	db	100	;'d'
  7397   00F509  20                 	db	32
  7398   00F50A  43                 	db	67	;'C'
  7399   00F50B  61                 	db	97	;'a'
  7400   00F50C  70                 	db	112	;'p'
  7401   00F50D  61                 	db	97	;'a'
  7402   00F50E  63                 	db	99	;'c'
  7403   00F50F  69                 	db	105	;'i'
  7404   00F510  74                 	db	116	;'t'
  7405   00F511  79                 	db	121	;'y'
  7406   00F512  20                 	db	32
  7407   00F513  53                 	db	83	;'S'
  7408   00F514  74                 	db	116	;'t'
  7409   00F515  61                 	db	97	;'a'
  7410   00F516  74                 	db	116	;'t'
  7411   00F517  75                 	db	117	;'u'
  7412   00F518  73                 	db	115	;'s'
  7413   00F519  29                 	db	41
  7414   00F51A  20                 	db	32
  7415   00F51B  69                 	db	105	;'i'
  7416   00F51C  73                 	db	115	;'s'
  7417   00F51D  20                 	db	32
  7418   00F51E  30                 	db	48	;'0'
  7419   00F51F  0A                 	db	10
  7420   00F520  0D                 	db	13
  7421   00F521  00                 	db	0
  7422   00F522                     STR_48:
  7423                           
  7424                           ; BSR set to: 7
  7425   00F522  4D                 	db	77	;'M'
  7426   00F523  65                 	db	101	;'e'
  7427   00F524  7A                 	db	122	;'z'
  7428   00F525  7A                 	db	122	;'z'
  7429   00F526  61                 	db	97	;'a'
  7430   00F527  6E                 	db	110	;'n'
  7431   00F528  69                 	db	105	;'i'
  7432   00F529  6E                 	db	110	;'n'
  7433   00F52A  65                 	db	101	;'e'
  7434   00F52B  20                 	db	32
  7435   00F52C  43                 	db	67	;'C'
  7436   00F52D  61                 	db	97	;'a'
  7437   00F52E  72                 	db	114	;'r'
  7438   00F52F  64                 	db	100	;'d'
  7439   00F530  20                 	db	32
  7440   00F531  4D                 	db	77	;'M'
  7441   00F532  45                 	db	69	;'E'
  7442   00F533  5A                 	db	90	;'Z'
  7443   00F534  57                 	db	87	;'W'
  7444   00F535  36                 	db	54	;'6'
  7445   00F536  35                 	db	53	;'5'
  7446   00F537  43                 	db	67	;'C'
  7447   00F538  5F                 	db	95	;'_'
  7448   00F539  52                 	db	82	;'R'
  7449   00F53A  41                 	db	65	;'A'
  7450   00F53B  4D                 	db	77	;'M'
  7451   00F53C  20                 	db	32
  7452   00F53D  66                 	db	102	;'f'
  7453   00F53E  69                 	db	105	;'i'
  7454   00F53F  72                 	db	114	;'r'
  7455   00F540  6D                 	db	109	;'m'
  7456   00F541  77                 	db	119	;'w'
  7457   00F542  61                 	db	97	;'a'
  7458   00F543  72                 	db	114	;'r'
  7459   00F544  65                 	db	101	;'e'
  7460   00F545  20                 	db	32
  7461   00F546  52                 	db	82	;'R'
  7462   00F547  65                 	db	101	;'e'
  7463   00F548  76                 	db	118	;'v'
  7464   00F549  32                 	db	50	;'2'
  7465   00F54A  2E                 	db	46
  7466   00F54B  30                 	db	48	;'0'
  7467   00F54C  00                 	db	0
  7468   00F54D                     
  7469                           ; BSR set to: 7
  7470   00F54D  53                 	db	83	;'S'
  7471   00F54E  44                 	db	68	;'D'
  7472   00F54F  20                 	db	32
  7473   00F550  43                 	db	67	;'C'
  7474   00F551  61                 	db	97	;'a'
  7475   00F552  72                 	db	114	;'r'
  7476   00F553  64                 	db	100	;'d'
  7477   00F554  3A                 	db	58	;':'
  7478   00F555  20                 	db	32
  7479   00F556  77                 	db	119	;'w'
  7480   00F557  72                 	db	114	;'r'
  7481   00F558  69                 	db	105	;'i'
  7482   00F559  74                 	db	116	;'t'
  7483   00F55A  65                 	db	101	;'e'
  7484   00F55B  35                 	db	53	;'5'
  7485   00F55C  31                 	db	49	;'1'
  7486   00F55D  32                 	db	50	;'2'
  7487   00F55E  3A                 	db	58	;':'
  7488   00F55F  20                 	db	32
  7489   00F560  43                 	db	67	;'C'
  7490   00F561  52                 	db	82	;'R'
  7491   00F562  43                 	db	67	;'C'
  7492   00F563  20                 	db	32
  7493   00F564  65                 	db	101	;'e'
  7494   00F565  72                 	db	114	;'r'
  7495   00F566  72                 	db	114	;'r'
  7496   00F567  6F                 	db	111	;'o'
  7497   00F568  72                 	db	114	;'r'
  7498   00F569  20                 	db	32
  7499   00F56A  28                 	db	40
  7500   00F56B  72                 	db	114	;'r'
  7501   00F56C  65                 	db	101	;'e'
  7502   00F56D  74                 	db	116	;'t'
  7503   00F56E  72                 	db	114	;'r'
  7504   00F56F  79                 	db	121	;'y'
  7505   00F570  3D                 	db	61	;'='
  7506   00F571  25                 	db	37
  7507   00F572  64                 	db	100	;'d'
  7508   00F573  29                 	db	41
  7509   00F574  0A                 	db	10
  7510   00F575  0D                 	db	13
  7511   00F576  00                 	db	0
  7512   00F577                     
  7513                           ; BSR set to: 7
  7514   00F577  53                 	db	83	;'S'
  7515   00F578  44                 	db	68	;'D'
  7516   00F579  20                 	db	32
  7517   00F57A  43                 	db	67	;'C'
  7518   00F57B  61                 	db	97	;'a'
  7519   00F57C  72                 	db	114	;'r'
  7520   00F57D  64                 	db	100	;'d'
  7521   00F57E  3A                 	db	58	;':'
  7522   00F57F  20                 	db	32
  7523   00F580  43                 	db	67	;'C'
  7524   00F581  61                 	db	97	;'a'
  7525   00F582  72                 	db	114	;'r'
  7526   00F583  64                 	db	100	;'d'
  7527   00F584  20                 	db	32
  7528   00F585  70                 	db	112	;'p'
  7529   00F586  6F                 	db	111	;'o'
  7530   00F587  77                 	db	119	;'w'
  7531   00F588  65                 	db	101	;'e'
  7532   00F589  72                 	db	114	;'r'
  7533   00F58A  20                 	db	32
  7534   00F58B  75                 	db	117	;'u'
  7535   00F58C  70                 	db	112	;'p'
  7536   00F58D  20                 	db	32
  7537   00F58E  73                 	db	115	;'s'
  7538   00F58F  74                 	db	116	;'t'
  7539   00F590  61                 	db	97	;'a'
  7540   00F591  74                 	db	116	;'t'
  7541   00F592  75                 	db	117	;'u'
  7542   00F593  73                 	db	115	;'s'
  7543   00F594  20                 	db	32
  7544   00F595  62                 	db	98	;'b'
  7545   00F596  69                 	db	105	;'i'
  7546   00F597  73                 	db	115	;'s'
  7547   00F598  20                 	db	32
  7548   00F599  69                 	db	105	;'i'
  7549   00F59A  73                 	db	115	;'s'
  7550   00F59B  20                 	db	32
  7551   00F59C  30                 	db	48	;'0'
  7552   00F59D  0A                 	db	10
  7553   00F59E  0D                 	db	13
  7554   00F59F  00                 	db	0
  7555   00F5A0                     STR_118:
  7556                           
  7557                           ; BSR set to: 7
  7558   00F5A0  20                 	db	32
  7559   00F5A1  20                 	db	32
  7560   00F5A2  4C                 	db	76	;'L'
  7561   00F5A3  4F                 	db	79	;'O'
  7562   00F5A4  41                 	db	65	;'A'
  7563   00F5A5  44                 	db	68	;'D'
  7564   00F5A6  20                 	db	32
  7565   00F5A7  5B                 	db	91	;'['
  7566   00F5A8  4C                 	db	76	;'L'
  7567   00F5A9  3D                 	db	61	;'='
  7568   00F5AA  6C                 	db	108	;'l'
  7569   00F5AB  6F                 	db	111	;'o'
  7570   00F5AC  61                 	db	97	;'a'
  7571   00F5AD  64                 	db	100	;'d'
  7572   00F5AE  20                 	db	32
  7573   00F5AF  61                 	db	97	;'a'
  7574   00F5B0  64                 	db	100	;'d'
  7575   00F5B1  64                 	db	100	;'d'
  7576   00F5B2  72                 	db	114	;'r'
  7577   00F5B3  65                 	db	101	;'e'
  7578   00F5B4  73                 	db	115	;'s'
  7579   00F5B5  73                 	db	115	;'s'
  7580   00F5B6  28                 	db	40
  7581   00F5B7  48                 	db	72	;'H'
  7582   00F5B8  65                 	db	101	;'e'
  7583   00F5B9  78                 	db	120	;'x'
  7584   00F5BA  29                 	db	41
  7585   00F5BB  5D                 	db	93	;']'
  7586   00F5BC  20                 	db	32
  7587   00F5BD  66                 	db	102	;'f'
  7588   00F5BE  69                 	db	105	;'i'
  7589   00F5BF  6C                 	db	108	;'l'
  7590   00F5C0  65                 	db	101	;'e'
  7591   00F5C1  20                 	db	32
  7592   00F5C2  6E                 	db	110	;'n'
  7593   00F5C3  61                 	db	97	;'a'
  7594   00F5C4  6D                 	db	109	;'m'
  7595   00F5C5  65                 	db	101	;'e'
  7596   00F5C6  0D                 	db	13
  7597   00F5C7  0A                 	db	10
  7598   00F5C8  00                 	db	0
  7599   00F5C9                     STR_116:
  7600                           
  7601                           ; BSR set to: 7
  7602   00F5C9  20                 	db	32
  7603   00F5CA  20                 	db	32
  7604   00F5CB  4C                 	db	76	;'L'
  7605   00F5CC  53                 	db	83	;'S'
  7606   00F5CD  20                 	db	32
  7607   00F5CE  7C                 	db	124
  7608   00F5CF  20                 	db	32
  7609   00F5D0  44                 	db	68	;'D'
  7610   00F5D1  49                 	db	73	;'I'
  7611   00F5D2  52                 	db	82	;'R'
  7612   00F5D3  20                 	db	32
  7613   00F5D4  5B                 	db	91	;'['
  7614   00F5D5  66                 	db	102	;'f'
  7615   00F5D6  69                 	db	105	;'i'
  7616   00F5D7  6C                 	db	108	;'l'
  7617   00F5D8  65                 	db	101	;'e'
  7618   00F5D9  20                 	db	32
  7619   00F5DA  6E                 	db	110	;'n'
  7620   00F5DB  61                 	db	97	;'a'
  7621   00F5DC  6D                 	db	109	;'m'
  7622   00F5DD  65                 	db	101	;'e'
  7623   00F5DE  20                 	db	32
  7624   00F5DF  7C                 	db	124
  7625   00F5E0  20                 	db	32
  7626   00F5E1  64                 	db	100	;'d'
  7627   00F5E2  69                 	db	105	;'i'
  7628   00F5E3  72                 	db	114	;'r'
  7629   00F5E4  65                 	db	101	;'e'
  7630   00F5E5  63                 	db	99	;'c'
  7631   00F5E6  74                 	db	116	;'t'
  7632   00F5E7  6F                 	db	111	;'o'
  7633   00F5E8  72                 	db	114	;'r'
  7634   00F5E9  79                 	db	121	;'y'
  7635   00F5EA  20                 	db	32
  7636   00F5EB  6E                 	db	110	;'n'
  7637   00F5EC  61                 	db	97	;'a'
  7638   00F5ED  6D                 	db	109	;'m'
  7639   00F5EE  65                 	db	101	;'e'
  7640   00F5EF  0D                 	db	13
  7641   00F5F0  0A                 	db	10
  7642   00F5F1  00                 	db	0
  7643   00F5F2                     STR_77:
  7644                           
  7645                           ; BSR set to: 7
  7646   00F5F2  49                 	db	73	;'I'
  7647   00F5F3  6E                 	db	110	;'n'
  7648   00F5F4  76                 	db	118	;'v'
  7649   00F5F5  61                 	db	97	;'a'
  7650   00F5F6  6C                 	db	108	;'l'
  7651   00F5F7  69                 	db	105	;'i'
  7652   00F5F8  64                 	db	100	;'d'
  7653   00F5F9  28                 	db	40
  7654   00F5FA  20                 	db	32
  7655   00F5FB  63                 	db	99	;'c'
  7656   00F5FC  6F                 	db	111	;'o'
  7657   00F5FD  6D                 	db	109	;'m'
  7658   00F5FE  6D                 	db	109	;'m'
  7659   00F5FF  61                 	db	97	;'a'
  7660   00F600  6E                 	db	110	;'n'
  7661   00F601  64                 	db	100	;'d'
  7662   00F602  20                 	db	32
  7663   00F603  7C                 	db	124
  7664   00F604  20                 	db	32
  7665   00F605  66                 	db	102	;'f'
  7666   00F606  69                 	db	105	;'i'
  7667   00F607  6C                 	db	108	;'l'
  7668   00F608  65                 	db	101	;'e'
  7669   00F609  20                 	db	32
  7670   00F60A  7C                 	db	124
  7671   00F60B  20                 	db	32
  7672   00F60C  64                 	db	100	;'d'
  7673   00F60D  69                 	db	105	;'i'
  7674   00F60E  72                 	db	114	;'r'
  7675   00F60F  65                 	db	101	;'e'
  7676   00F610  63                 	db	99	;'c'
  7677   00F611  74                 	db	116	;'t'
  7678   00F612  6F                 	db	111	;'o'
  7679   00F613  72                 	db	114	;'r'
  7680   00F614  79                 	db	121	;'y'
  7681   00F615  20                 	db	32
  7682   00F616  29                 	db	41
  7683   00F617  0D                 	db	13
  7684   00F618  0A                 	db	10
  7685   00F619  00                 	db	0
  7686   00F61A                     STR_83:
  7687                           
  7688                           ; BSR set to: 7
  7689   00F61A  4C                 	db	76	;'L'
  7690   00F61B  6F                 	db	111	;'o'
  7691   00F61C  61                 	db	97	;'a'
  7692   00F61D  64                 	db	100	;'d'
  7693   00F61E  20                 	db	32
  7694   00F61F  25                 	db	37
  7695   00F620  73                 	db	115	;'s'
  7696   00F621  20                 	db	32
  7697   00F622  3A                 	db	58	;':'
  7698   00F623  20                 	db	32
  7699   00F624  41                 	db	65	;'A'
  7700   00F625  64                 	db	100	;'d'
  7701   00F626  72                 	db	114	;'r'
  7702   00F627  20                 	db	32
  7703   00F628  3D                 	db	61	;'='
  7704   00F629  20                 	db	32
  7705   00F62A  24                 	db	36
  7706   00F62B  25                 	db	37
  7707   00F62C  30                 	db	48	;'0'
  7708   00F62D  36                 	db	54	;'6'
  7709   00F62E  6C                 	db	108	;'l'
  7710   00F62F  58                 	db	88	;'X'
  7711   00F630  2C                 	db	44
  7712   00F631  20                 	db	32
  7713   00F632  53                 	db	83	;'S'
  7714   00F633  69                 	db	105	;'i'
  7715   00F634  7A                 	db	122	;'z'
  7716   00F635  65                 	db	101	;'e'
  7717   00F636  20                 	db	32
  7718   00F637  3D                 	db	61	;'='
  7719   00F638  20                 	db	32
  7720   00F639  24                 	db	36
  7721   00F63A  25                 	db	37
  7722   00F63B  30                 	db	48	;'0'
  7723   00F63C  34                 	db	52	;'4'
  7724   00F63D  58                 	db	88	;'X'
  7725   00F63E  0D                 	db	13
  7726   00F63F  0A                 	db	10
  7727   00F640  00                 	db	0
  7728   00F641                     
  7729                           ; BSR set to: 7
  7730   00F641  72                 	db	114	;'r'
  7731   00F642  65                 	db	101	;'e'
  7732   00F643  61                 	db	97	;'a'
  7733   00F644  64                 	db	100	;'d'
  7734   00F645  20                 	db	32
  7735   00F646  4D                 	db	77	;'M'
  7736   00F647  42                 	db	66	;'B'
  7737   00F648  52                 	db	82	;'R'
  7738   00F649  20                 	db	32
  7739   00F64A  70                 	db	112	;'p'
  7740   00F64B  61                 	db	97	;'a'
  7741   00F64C  72                 	db	114	;'r'
  7742   00F64D  74                 	db	116	;'t'
  7743   00F64E  69                 	db	105	;'i'
  7744   00F64F  74                 	db	116	;'t'
  7745   00F650  69                 	db	105	;'i'
  7746   00F651  6F                 	db	111	;'o'
  7747   00F652  6E                 	db	110	;'n'
  7748   00F653  20                 	db	32
  7749   00F654  74                 	db	116	;'t'
  7750   00F655  61                 	db	97	;'a'
  7751   00F656  62                 	db	98	;'b'
  7752   00F657  6C                 	db	108	;'l'
  7753   00F658  65                 	db	101	;'e'
  7754   00F659  20                 	db	32
  7755   00F65A  61                 	db	97	;'a'
  7756   00F65B  74                 	db	116	;'t'
  7757   00F65C  20                 	db	32
  7758   00F65D  73                 	db	115	;'s'
  7759   00F65E  65                 	db	101	;'e'
  7760   00F65F  63                 	db	99	;'c'
  7761   00F660  74                 	db	116	;'t'
  7762   00F661  6F                 	db	111	;'o'
  7763   00F662  72                 	db	114	;'r'
  7764   00F663  20                 	db	32
  7765   00F664  30                 	db	48	;'0'
  7766   00F665  0A                 	db	10
  7767   00F666  0D                 	db	13
  7768   00F667  00                 	db	0
  7769   00F668                     
  7770                           ; BSR set to: 7
  7771   00F668  53                 	db	83	;'S'
  7772   00F669  44                 	db	68	;'D'
  7773   00F66A  20                 	db	32
  7774   00F66B  43                 	db	67	;'C'
  7775   00F66C  61                 	db	97	;'a'
  7776   00F66D  72                 	db	114	;'r'
  7777   00F66E  64                 	db	100	;'d'
  7778   00F66F  3A                 	db	58	;':'
  7779   00F670  20                 	db	32
  7780   00F671  53                 	db	83	;'S'
  7781   00F672  44                 	db	68	;'D'
  7782   00F673  48                 	db	72	;'H'
  7783   00F674  43                 	db	67	;'C'
  7784   00F675  20                 	db	32
  7785   00F676  6F                 	db	111	;'o'
  7786   00F677  72                 	db	114	;'r'
  7787   00F678  20                 	db	32
  7788   00F679  53                 	db	83	;'S'
  7789   00F67A  44                 	db	68	;'D'
  7790   00F67B  58                 	db	88	;'X'
  7791   00F67C  43                 	db	67	;'C'
  7792   00F67D  20                 	db	32
  7793   00F67E  63                 	db	99	;'c'
  7794   00F67F  61                 	db	97	;'a'
  7795   00F680  72                 	db	114	;'r'
  7796   00F681  64                 	db	100	;'d'
  7797   00F682  20                 	db	32
  7798   00F683  64                 	db	100	;'d'
  7799   00F684  65                 	db	101	;'e'
  7800   00F685  74                 	db	116	;'t'
  7801   00F686  65                 	db	101	;'e'
  7802   00F687  63                 	db	99	;'c'
  7803   00F688  74                 	db	116	;'t'
  7804   00F689  65                 	db	101	;'e'
  7805   00F68A  64                 	db	100	;'d'
  7806   00F68B  0A                 	db	10
  7807   00F68C  0D                 	db	13
  7808   00F68D  00                 	db	0
  7809   00F68E                     STR_172:
  7810                           
  7811                           ; BSR set to: 7
  7812   00F68E  25                 	db	37
  7813   00F68F  73                 	db	115	;'s'
  7814   00F690  3A                 	db	58	;':'
  7815   00F691  20                 	db	32
  7816   00F692  45                 	db	69	;'E'
  7817   00F693  52                 	db	82	;'R'
  7818   00F694  52                 	db	82	;'R'
  7819   00F695  4F                 	db	79	;'O'
  7820   00F696  52                 	db	82	;'R'
  7821   00F697  3A                 	db	58	;':'
  7822   00F698  20                 	db	32
  7823   00F699  6D                 	db	109	;'m'
  7824   00F69A  6F                 	db	111	;'o'
  7825   00F69B  64                 	db	100	;'d'
  7826   00F69C  65                 	db	101	;'e'
  7827   00F69D  20                 	db	32
  7828   00F69E  25                 	db	37
  7829   00F69F  64                 	db	100	;'d'
  7830   00F6A0  20                 	db	32
  7831   00F6A1  69                 	db	105	;'i'
  7832   00F6A2  73                 	db	115	;'s'
  7833   00F6A3  20                 	db	32
  7834   00F6A4  6E                 	db	110	;'n'
  7835   00F6A5  6F                 	db	111	;'o'
  7836   00F6A6  74                 	db	116	;'t'
  7837   00F6A7  20                 	db	32
  7838   00F6A8  73                 	db	115	;'s'
  7839   00F6A9  75                 	db	117	;'u'
  7840   00F6AA  70                 	db	112	;'p'
  7841   00F6AB  70                 	db	112	;'p'
  7842   00F6AC  6F                 	db	111	;'o'
  7843   00F6AD  72                 	db	114	;'r'
  7844   00F6AE  74                 	db	116	;'t'
  7845   00F6AF  65                 	db	101	;'e'
  7846   00F6B0  64                 	db	100	;'d'
  7847   00F6B1  0A                 	db	10
  7848   00F6B2  0D                 	db	13
  7849   00F6B3  00                 	db	0
  7850   00F6B4                     STR_159:
  7851                           
  7852                           ; BSR set to: 7
  7853   00F6B4  44                 	db	68	;'D'
  7854   00F6B5  50                 	db	80	;'P'
  7855   00F6B6  52                 	db	82	;'R'
  7856   00F6B7  20                 	db	32
  7857   00F6B8  3A                 	db	58	;':'
  7858   00F6B9  20                 	db	32
  7859   00F6BA  24                 	db	36
  7860   00F6BB  25                 	db	37
  7861   00F6BC  30                 	db	48	;'0'
  7862   00F6BD  34                 	db	52	;'4'
  7863   00F6BE  58                 	db	88	;'X'
  7864   00F6BF  20                 	db	32
  7865   00F6C0  50                 	db	80	;'P'
  7866   00F6C1  42                 	db	66	;'B'
  7867   00F6C2  52                 	db	82	;'R'
  7868   00F6C3  20                 	db	32
  7869   00F6C4  3A                 	db	58	;':'
  7870   00F6C5  20                 	db	32
  7871   00F6C6  24                 	db	36
  7872   00F6C7  25                 	db	37
  7873   00F6C8  30                 	db	48	;'0'
  7874   00F6C9  32                 	db	50	;'2'
  7875   00F6CA  58                 	db	88	;'X'
  7876   00F6CB  20                 	db	32
  7877   00F6CC  44                 	db	68	;'D'
  7878   00F6CD  42                 	db	66	;'B'
  7879   00F6CE  52                 	db	82	;'R'
  7880   00F6CF  20                 	db	32
  7881   00F6D0  3A                 	db	58	;':'
  7882   00F6D1  20                 	db	32
  7883   00F6D2  24                 	db	36
  7884   00F6D3  25                 	db	37
  7885   00F6D4  30                 	db	48	;'0'
  7886   00F6D5  32                 	db	50	;'2'
  7887   00F6D6  58                 	db	88	;'X'
  7888   00F6D7  0D                 	db	13
  7889   00F6D8  0A                 	db	10
  7890   00F6D9  00                 	db	0
  7891   00F6DA                     
  7892                           ; BSR set to: 7
  7893   00F6DA  53                 	db	83	;'S'
  7894   00F6DB  44                 	db	68	;'D'
  7895   00F6DC  20                 	db	32
  7896   00F6DD  43                 	db	67	;'C'
  7897   00F6DE  61                 	db	97	;'a'
  7898   00F6DF  72                 	db	114	;'r'
  7899   00F6E0  64                 	db	100	;'d'
  7900   00F6E1  3A                 	db	58	;':'
  7901   00F6E2  20                 	db	32
  7902   00F6E3  69                 	db	105	;'i'
  7903   00F6E4  6E                 	db	110	;'n'
  7904   00F6E5  69                 	db	105	;'i'
  7905   00F6E6  74                 	db	116	;'t'
  7906   00F6E7  69                 	db	105	;'i'
  7907   00F6E8  61                 	db	97	;'a'
  7908   00F6E9  6C                 	db	108	;'l'
  7909   00F6EA  69                 	db	105	;'i'
  7910   00F6EB  7A                 	db	122	;'z'
  7911   00F6EC  65                 	db	101	;'e'
  7912   00F6ED  20                 	db	32
  7913   00F6EE  2E                 	db	46
  7914   00F6EF  2E                 	db	46
  7915   00F6F0  2E                 	db	46
  7916   00F6F1  20                 	db	32
  7917   00F6F2  73                 	db	115	;'s'
  7918   00F6F3  75                 	db	117	;'u'
  7919   00F6F4  63                 	db	99	;'c'
  7920   00F6F5  63                 	db	99	;'c'
  7921   00F6F6  65                 	db	101	;'e'
  7922   00F6F7  65                 	db	101	;'e'
  7923   00F6F8  64                 	db	100	;'d'
  7924   00F6F9  65                 	db	101	;'e'
  7925   00F6FA  64                 	db	100	;'d'
  7926   00F6FB  0A                 	db	10
  7927   00F6FC  0D                 	db	13
  7928   00F6FD  00                 	db	0
  7929   00F6FE                     
  7930                           ; BSR set to: 7
  7931   00F6FE  53                 	db	83	;'S'
  7932   00F6FF  44                 	db	68	;'D'
  7933   00F700  20                 	db	32
  7934   00F701  43                 	db	67	;'C'
  7935   00F702  61                 	db	97	;'a'
  7936   00F703  72                 	db	114	;'r'
  7937   00F704  64                 	db	100	;'d'
  7938   00F705  3A                 	db	58	;':'
  7939   00F706  20                 	db	32
  7940   00F707  75                 	db	117	;'u'
  7941   00F708  6E                 	db	110	;'n'
  7942   00F709  65                 	db	101	;'e'
  7943   00F70A  78                 	db	120	;'x'
  7944   00F70B  70                 	db	112	;'p'
  7945   00F70C  65                 	db	101	;'e'
  7946   00F70D  63                 	db	99	;'c'
  7947   00F70E  74                 	db	116	;'t'
  7948   00F70F  65                 	db	101	;'e'
  7949   00F710  64                 	db	100	;'d'
  7950   00F711  20                 	db	32
  7951   00F712  72                 	db	114	;'r'
  7952   00F713  65                 	db	101	;'e'
  7953   00F714  73                 	db	115	;'s'
  7954   00F715  70                 	db	112	;'p'
  7955   00F716  6F                 	db	111	;'o'
  7956   00F717  6E                 	db	110	;'n'
  7957   00F718  73                 	db	115	;'s'
  7958   00F719  65                 	db	101	;'e'
  7959   00F71A  20                 	db	32
  7960   00F71B  25                 	db	37
  7961   00F71C  30                 	db	48	;'0'
  7962   00F71D  32                 	db	50	;'2'
  7963   00F71E  78                 	db	120	;'x'
  7964   00F71F  0A                 	db	10
  7965   00F720  0D                 	db	13
  7966   00F721  00                 	db	0
  7967   00F722                     STR_78:
  7968                           
  7969                           ; BSR set to: 7
  7970   00F722  49                 	db	73	;'I'
  7971   00F723  6E                 	db	110	;'n'
  7972   00F724  73                 	db	115	;'s'
  7973   00F725  74                 	db	116	;'t'
  7974   00F726  61                 	db	97	;'a'
  7975   00F727  6C                 	db	108	;'l'
  7976   00F728  6C                 	db	108	;'l'
  7977   00F729  20                 	db	32
  7978   00F72A  4D                 	db	77	;'M'
  7979   00F72B  6F                 	db	111	;'o'
  7980   00F72C  6E                 	db	110	;'n'
  7981   00F72D  69                 	db	105	;'i'
  7982   00F72E  74                 	db	116	;'t'
  7983   00F72F  6F                 	db	111	;'o'
  7984   00F730  72                 	db	114	;'r'
  7985   00F731  20                 	db	32
  7986   00F732  50                 	db	80	;'P'
  7987   00F733  72                 	db	114	;'r'
  7988   00F734  6F                 	db	111	;'o'
  7989   00F735  67                 	db	103	;'g'
  7990   00F736  72                 	db	114	;'r'
  7991   00F737  61                 	db	97	;'a'
  7992   00F738  6D                 	db	109	;'m'
  7993   00F739  2E                 	db	46
  7994   00F73A  2E                 	db	46
  7995   00F73B  2E                 	db	46
  7996   00F73C  2E                 	db	46
  7997   00F73D  2E                 	db	46
  7998   00F73E  2E                 	db	46
  7999   00F73F  2E                 	db	46
  8000   00F740  2E                 	db	46
  8001   00F741  2E                 	db	46
  8002   00F742  2E                 	db	46
  8003   00F743  0D                 	db	13
  8004   00F744  0A                 	db	10
  8005   00F745  00                 	db	0
  8006   00F746                     
  8007                           ; BSR set to: 7
  8008   00F746  53                 	db	83	;'S'
  8009   00F747  44                 	db	68	;'D'
  8010   00F748  20                 	db	32
  8011   00F749  43                 	db	67	;'C'
  8012   00F74A  61                 	db	97	;'a'
  8013   00F74B  72                 	db	114	;'r'
  8014   00F74C  64                 	db	100	;'d'
  8015   00F74D  3A                 	db	58	;':'
  8016   00F74E  20                 	db	32
  8017   00F74F  41                 	db	65	;'A'
  8018   00F750  43                 	db	67	;'C'
  8019   00F751  4D                 	db	77	;'M'
  8020   00F752  44                 	db	68	;'D'
  8021   00F753  34                 	db	52	;'4'
  8022   00F754  31                 	db	49	;'1'
  8023   00F755  20                 	db	32
  8024   00F756  72                 	db	114	;'r'
  8025   00F757  65                 	db	101	;'e'
  8026   00F758  73                 	db	115	;'s'
  8027   00F759  70                 	db	112	;'p'
  8028   00F75A  6F                 	db	111	;'o'
  8029   00F75B  6E                 	db	110	;'n'
  8030   00F75C  73                 	db	115	;'s'
  8031   00F75D  65                 	db	101	;'e'
  8032   00F75E  20                 	db	32
  8033   00F75F  69                 	db	105	;'i'
  8034   00F760  73                 	db	115	;'s'
  8035   00F761  20                 	db	32
  8036   00F762  25                 	db	37
  8037   00F763  30                 	db	48	;'0'
  8038   00F764  32                 	db	50	;'2'
  8039   00F765  78                 	db	120	;'x'
  8040   00F766  0A                 	db	10
  8041   00F767  0D                 	db	13
  8042   00F768  00                 	db	0
  8043   00F769                     
  8044                           ; BSR set to: 7
  8045   00F769  53                 	db	83	;'S'
  8046   00F76A  44                 	db	68	;'D'
  8047   00F76B  20                 	db	32
  8048   00F76C  43                 	db	67	;'C'
  8049   00F76D  61                 	db	97	;'a'
  8050   00F76E  72                 	db	114	;'r'
  8051   00F76F  64                 	db	100	;'d'
  8052   00F770  3A                 	db	58	;':'
  8053   00F771  20                 	db	32
  8054   00F772  77                 	db	119	;'w'
  8055   00F773  72                 	db	114	;'r'
  8056   00F774  69                 	db	105	;'i'
  8057   00F775  74                 	db	116	;'t'
  8058   00F776  65                 	db	101	;'e'
  8059   00F777  35                 	db	53	;'5'
  8060   00F778  31                 	db	49	;'1'
  8061   00F779  32                 	db	50	;'2'
  8062   00F77A  3A                 	db	58	;':'
  8063   00F77B  20                 	db	32
  8064   00F77C  74                 	db	116	;'t'
  8065   00F77D  6F                 	db	111	;'o'
  8066   00F77E  6B                 	db	107	;'k'
  8067   00F77F  65                 	db	101	;'e'
  8068   00F780  6E                 	db	110	;'n'
  8069   00F781  20                 	db	32
  8070   00F782  69                 	db	105	;'i'
  8071   00F783  73                 	db	115	;'s'
  8072   00F784  20                 	db	32
  8073   00F785  25                 	db	37
  8074   00F786  30                 	db	48	;'0'
  8075   00F787  32                 	db	50	;'2'
  8076   00F788  78                 	db	120	;'x'
  8077   00F789  0A                 	db	10
  8078   00F78A  0D                 	db	13
  8079   00F78B  00                 	db	0
  8080   00F78C                     STR_46:
  8081                           
  8082                           ; BSR set to: 7
  8083   00F78C  4D                 	db	77	;'M'
  8084   00F78D  65                 	db	101	;'e'
  8085   00F78E  6D                 	db	109	;'m'
  8086   00F78F  6F                 	db	111	;'o'
  8087   00F790  72                 	db	114	;'r'
  8088   00F791  79                 	db	121	;'y'
  8089   00F792  20                 	db	32
  8090   00F793  24                 	db	36
  8091   00F794  30                 	db	48	;'0'
  8092   00F795  30                 	db	48	;'0'
  8093   00F796  30                 	db	48	;'0'
  8094   00F797  30                 	db	48	;'0'
  8095   00F798  30                 	db	48	;'0'
  8096   00F799  30                 	db	48	;'0'
  8097   00F79A  20                 	db	32
  8098   00F79B  2D                 	db	45
  8099   00F79C  20                 	db	32
  8100   00F79D  24                 	db	36
  8101   00F79E  25                 	db	37
  8102   00F79F  30                 	db	48	;'0'
  8103   00F7A0  36                 	db	54	;'6'
  8104   00F7A1  6C                 	db	108	;'l'
  8105   00F7A2  58                 	db	88	;'X'
  8106   00F7A3  20                 	db	32
  8107   00F7A4  25                 	db	37
  8108   00F7A5  64                 	db	100	;'d'
  8109   00F7A6  20                 	db	32
  8110   00F7A7  4B                 	db	75	;'K'
  8111   00F7A8  42                 	db	66	;'B'
  8112   00F7A9  20                 	db	32
  8113   00F7AA  4F                 	db	79	;'O'
  8114   00F7AB  4B                 	db	75	;'K'
  8115   00F7AC  0D                 	db	13
  8116   00F7AD  0A                 	db	10
  8117   00F7AE  00                 	db	0
  8118   00F7AF                     
  8119                           ; BSR set to: 7
  8120   00F7AF  53                 	db	83	;'S'
  8121   00F7B0  44                 	db	68	;'D'
  8122   00F7B1  20                 	db	32
  8123   00F7B2  43                 	db	67	;'C'
  8124   00F7B3  61                 	db	97	;'a'
  8125   00F7B4  72                 	db	114	;'r'
  8126   00F7B5  64                 	db	100	;'d'
  8127   00F7B6  3A                 	db	58	;':'
  8128   00F7B7  20                 	db	32
  8129   00F7B8  43                 	db	67	;'C'
  8130   00F7B9  4D                 	db	77	;'M'
  8131   00F7BA  44                 	db	68	;'D'
  8132   00F7BB  35                 	db	53	;'5'
  8133   00F7BC  39                 	db	57	;'9'
  8134   00F7BD  20                 	db	32
  8135   00F7BE  72                 	db	114	;'r'
  8136   00F7BF  65                 	db	101	;'e'
  8137   00F7C0  73                 	db	115	;'s'
  8138   00F7C1  70                 	db	112	;'p'
  8139   00F7C2  6F                 	db	111	;'o'
  8140   00F7C3  6E                 	db	110	;'n'
  8141   00F7C4  73                 	db	115	;'s'
  8142   00F7C5  65                 	db	101	;'e'
  8143   00F7C6  20                 	db	32
  8144   00F7C7  69                 	db	105	;'i'
  8145   00F7C8  73                 	db	115	;'s'
  8146   00F7C9  20                 	db	32
  8147   00F7CA  25                 	db	37
  8148   00F7CB  30                 	db	48	;'0'
  8149   00F7CC  32                 	db	50	;'2'
  8150   00F7CD  78                 	db	120	;'x'
  8151   00F7CE  0A                 	db	10
  8152   00F7CF  0D                 	db	13
  8153   00F7D0  00                 	db	0
  8154   00F7D1                     STR_110:
  8155                           
  8156                           ; BSR set to: 7
  8157   00F7D1  52                 	db	82	;'R'
  8158   00F7D2  65                 	db	101	;'e'
  8159   00F7D3  6C                 	db	108	;'l'
  8160   00F7D4  6F                 	db	111	;'o'
  8161   00F7D5  61                 	db	97	;'a'
  8162   00F7D6  64                 	db	100	;'d'
  8163   00F7D7  20                 	db	32
  8164   00F7D8  25                 	db	37
  8165   00F7D9  73                 	db	115	;'s'
  8166   00F7DA  20                 	db	32
  8167   00F7DB  66                 	db	102	;'f'
  8168   00F7DC  6F                 	db	111	;'o'
  8169   00F7DD  72                 	db	114	;'r'
  8170   00F7DE  20                 	db	32
  8171   00F7DF  45                 	db	69	;'E'
  8172   00F7E0  6D                 	db	109	;'m'
  8173   00F7E1  75                 	db	117	;'u'
  8174   00F7E2  6C                 	db	108	;'l'
  8175   00F7E3  61                 	db	97	;'a'
  8176   00F7E4  74                 	db	116	;'t'
  8177   00F7E5  69                 	db	105	;'i'
  8178   00F7E6  6F                 	db	111	;'o'
  8179   00F7E7  6E                 	db	110	;'n'
  8180   00F7E8  20                 	db	32
  8181   00F7E9  4D                 	db	77	;'M'
  8182   00F7EA  6F                 	db	111	;'o'
  8183   00F7EB  64                 	db	100	;'d'
  8184   00F7EC  65                 	db	101	;'e'
  8185   00F7ED  2E                 	db	46
  8186   00F7EE  2E                 	db	46
  8187   00F7EF  2E                 	db	46
  8188   00F7F0  0D                 	db	13
  8189   00F7F1  0A                 	db	10
  8190   00F7F2  00                 	db	0
  8191   00F7F3                     STR_146:
  8192                           
  8193                           ; BSR set to: 7
  8194   00F7F3  44                 	db	68	;'D'
  8195   00F7F4  50                 	db	80	;'P'
  8196   00F7F5  52                 	db	82	;'R'
  8197   00F7F6  20                 	db	32
  8198   00F7F7  3A                 	db	58	;':'
  8199   00F7F8  20                 	db	32
  8200   00F7F9  24                 	db	36
  8201   00F7FA  25                 	db	37
  8202   00F7FB  30                 	db	48	;'0'
  8203   00F7FC  34                 	db	52	;'4'
  8204   00F7FD  58                 	db	88	;'X'
  8205   00F7FE  20                 	db	32
  8206   00F7FF  50                 	db	80	;'P'
  8207   00F800  42                 	db	66	;'B'
  8208   00F801  52                 	db	82	;'R'
  8209   00F802  20                 	db	32
  8210   00F803  3A                 	db	58	;':'
  8211   00F804  20                 	db	32
  8212   00F805  24                 	db	36
  8213   00F806  30                 	db	48	;'0'
  8214   00F807  30                 	db	48	;'0'
  8215   00F808  20                 	db	32
  8216   00F809  44                 	db	68	;'D'
  8217   00F80A  42                 	db	66	;'B'
  8218   00F80B  52                 	db	82	;'R'
  8219   00F80C  20                 	db	32
  8220   00F80D  3A                 	db	58	;':'
  8221   00F80E  20                 	db	32
  8222   00F80F  24                 	db	36
  8223   00F810  30                 	db	48	;'0'
  8224   00F811  30                 	db	48	;'0'
  8225   00F812  0D                 	db	13
  8226   00F813  0A                 	db	10
  8227   00F814  00                 	db	0
  8228   00F815                     STR_147:
  8229                           
  8230                           ; BSR set to: 7
  8231   00F815  50                 	db	80	;'P'
  8232   00F816  49                 	db	73	;'I'
  8233   00F817  43                 	db	67	;'C'
  8234   00F818  20                 	db	32
  8235   00F819  49                 	db	73	;'I'
  8236   00F81A  2F                 	db	47
  8237   00F81B  46                 	db	70	;'F'
  8238   00F81C  20                 	db	32
  8239   00F81D  53                 	db	83	;'S'
  8240   00F81E  68                 	db	104	;'h'
  8241   00F81F  61                 	db	97	;'a'
  8242   00F820  72                 	db	114	;'r'
  8243   00F821  65                 	db	101	;'e'
  8244   00F822  64                 	db	100	;'d'
  8245   00F823  20                 	db	32
  8246   00F824  6D                 	db	109	;'m'
  8247   00F825  65                 	db	101	;'e'
  8248   00F826  6D                 	db	109	;'m'
  8249   00F827  6F                 	db	111	;'o'
  8250   00F828  72                 	db	114	;'r'
  8251   00F829  79                 	db	121	;'y'
  8252   00F82A  20                 	db	32
  8253   00F82B  3A                 	db	58	;':'
  8254   00F82C  20                 	db	32
  8255   00F82D  24                 	db	36
  8256   00F82E  25                 	db	37
  8257   00F82F  30                 	db	48	;'0'
  8258   00F830  36                 	db	54	;'6'
  8259   00F831  6C                 	db	108	;'l'
  8260   00F832  58                 	db	88	;'X'
  8261   00F833  0D                 	db	13
  8262   00F834  0A                 	db	10
  8263   00F835  00                 	db	0
  8264   00F836                     
  8265                           ; BSR set to: 7
  8266   00F836  70                 	db	112	;'p'
  8267   00F837  61                 	db	97	;'a'
  8268   00F838  72                 	db	114	;'r'
  8269   00F839  74                 	db	116	;'t'
  8270   00F83A  69                 	db	105	;'i'
  8271   00F83B  74                 	db	116	;'t'
  8272   00F83C  69                 	db	105	;'i'
  8273   00F83D  6F                 	db	111	;'o'
  8274   00F83E  6E                 	db	110	;'n'
  8275   00F83F  20                 	db	32
  8276   00F840  73                 	db	115	;'s'
  8277   00F841  74                 	db	116	;'t'
  8278   00F842  61                 	db	97	;'a'
  8279   00F843  72                 	db	114	;'r'
  8280   00F844  74                 	db	116	;'t'
  8281   00F845  73                 	db	115	;'s'
  8282   00F846  20                 	db	32
  8283   00F847  61                 	db	97	;'a'
  8284   00F848  74                 	db	116	;'t'
  8285   00F849  20                 	db	32
  8286   00F84A  73                 	db	115	;'s'
  8287   00F84B  65                 	db	101	;'e'
  8288   00F84C  63                 	db	99	;'c'
  8289   00F84D  74                 	db	116	;'t'
  8290   00F84E  6F                 	db	111	;'o'
  8291   00F84F  72                 	db	114	;'r'
  8292   00F850  20                 	db	32
  8293   00F851  25                 	db	37
  8294   00F852  6C                 	db	108	;'l'
  8295   00F853  64                 	db	100	;'d'
  8296   00F854  0A                 	db	10
  8297   00F855  0D                 	db	13
  8298   00F856  00                 	db	0
  8299   00F857                     STR_113:
  8300                           
  8301                           ; BSR set to: 7
  8302   00F857  50                 	db	80	;'P'
  8303   00F858  42                 	db	66	;'B'
  8304   00F859  52                 	db	82	;'R'
  8305   00F85A  3D                 	db	61	;'='
  8306   00F85B  24                 	db	36
  8307   00F85C  25                 	db	37
  8308   00F85D  30                 	db	48	;'0'
  8309   00F85E  32                 	db	50	;'2'
  8310   00F85F  58                 	db	88	;'X'
  8311   00F860  20                 	db	32
  8312   00F861  44                 	db	68	;'D'
  8313   00F862  42                 	db	66	;'B'
  8314   00F863  52                 	db	82	;'R'
  8315   00F864  3D                 	db	61	;'='
  8316   00F865  24                 	db	36
  8317   00F866  25                 	db	37
  8318   00F867  30                 	db	48	;'0'
  8319   00F868  32                 	db	50	;'2'
  8320   00F869  58                 	db	88	;'X'
  8321   00F86A  20                 	db	32
  8322   00F86B  44                 	db	68	;'D'
  8323   00F86C  50                 	db	80	;'P'
  8324   00F86D  52                 	db	82	;'R'
  8325   00F86E  3D                 	db	61	;'='
  8326   00F86F  24                 	db	36
  8327   00F870  25                 	db	37
  8328   00F871  30                 	db	48	;'0'
  8329   00F872  34                 	db	52	;'4'
  8330   00F873  58                 	db	88	;'X'
  8331   00F874  0D                 	db	13
  8332   00F875  0A                 	db	10
  8333   00F876  00                 	db	0
  8334   00F877                     STR_37:
  8335                           
  8336                           ; BSR set to: 7
  8337   00F877  66                 	db	102	;'f'
  8338   00F878  5F                 	db	95	;'_'
  8339   00F879  77                 	db	119	;'w'
  8340   00F87A  72                 	db	114	;'r'
  8341   00F87B  69                 	db	105	;'i'
  8342   00F87C  74                 	db	116	;'t'
  8343   00F87D  65                 	db	101	;'e'
  8344   00F87E  28                 	db	40
  8345   00F87F  29                 	db	41
  8346   00F880  3A                 	db	58	;':'
  8347   00F881  20                 	db	32
  8348   00F882  45                 	db	69	;'E'
  8349   00F883  52                 	db	82	;'R'
  8350   00F884  52                 	db	82	;'R'
  8351   00F885  4F                 	db	79	;'O'
  8352   00F886  52                 	db	82	;'R'
  8353   00F887  20                 	db	32
  8354   00F888  72                 	db	114	;'r'
  8355   00F889  65                 	db	101	;'e'
  8356   00F88A  73                 	db	115	;'s'
  8357   00F88B  3D                 	db	61	;'='
  8358   00F88C  25                 	db	37
  8359   00F88D  64                 	db	100	;'d'
  8360   00F88E  2C                 	db	44
  8361   00F88F  20                 	db	32
  8362   00F890  6E                 	db	110	;'n'
  8363   00F891  3D                 	db	61	;'='
  8364   00F892  25                 	db	37
  8365   00F893  64                 	db	100	;'d'
  8366   00F894  0A                 	db	10
  8367   00F895  0D                 	db	13
  8368   00F896  00                 	db	0
  8369   00F897                     STR_111:
  8370                           
  8371                           ; BSR set to: 7
  8372   00F897  52                 	db	82	;'R'
  8373   00F898  65                 	db	101	;'e'
  8374   00F899  6C                 	db	108	;'l'
  8375   00F89A  6F                 	db	111	;'o'
  8376   00F89B  61                 	db	97	;'a'
  8377   00F89C  64                 	db	100	;'d'
  8378   00F89D  20                 	db	32
  8379   00F89E  25                 	db	37
  8380   00F89F  73                 	db	115	;'s'
  8381   00F8A0  20                 	db	32
  8382   00F8A1  66                 	db	102	;'f'
  8383   00F8A2  6F                 	db	111	;'o'
  8384   00F8A3  72                 	db	114	;'r'
  8385   00F8A4  20                 	db	32
  8386   00F8A5  4E                 	db	78	;'N'
  8387   00F8A6  61                 	db	97	;'a'
  8388   00F8A7  74                 	db	116	;'t'
  8389   00F8A8  69                 	db	105	;'i'
  8390   00F8A9  76                 	db	118	;'v'
  8391   00F8AA  65                 	db	101	;'e'
  8392   00F8AB  20                 	db	32
  8393   00F8AC  4D                 	db	77	;'M'
  8394   00F8AD  6F                 	db	111	;'o'
  8395   00F8AE  64                 	db	100	;'d'
  8396   00F8AF  65                 	db	101	;'e'
  8397   00F8B0  2E                 	db	46
  8398   00F8B1  2E                 	db	46
  8399   00F8B2  2E                 	db	46
  8400   00F8B3  0D                 	db	13
  8401   00F8B4  0A                 	db	10
  8402   00F8B5  00                 	db	0
  8403   00F8B6                     STR_136:
  8404                           
  8405                           ; BSR set to: 7
  8406   00F8B6  4E                 	db	78	;'N'
  8407   00F8B7  6F                 	db	111	;'o'
  8408   00F8B8  74                 	db	116	;'t'
  8409   00F8B9  20                 	db	32
  8410   00F8BA  4D                 	db	77	;'M'
  8411   00F8BB  45                 	db	69	;'E'
  8412   00F8BC  5A                 	db	90	;'Z'
  8413   00F8BD  57                 	db	87	;'W'
  8414   00F8BE  36                 	db	54	;'6'
  8415   00F8BF  35                 	db	53	;'5'
  8416   00F8C0  43                 	db	67	;'C'
  8417   00F8C1  5F                 	db	95	;'_'
  8418   00F8C2  52                 	db	82	;'R'
  8419   00F8C3  41                 	db	65	;'A'
  8420   00F8C4  4D                 	db	77	;'M'
  8421   00F8C5  20                 	db	32
  8422   00F8C6  66                 	db	102	;'f'
  8423   00F8C7  6F                 	db	111	;'o'
  8424   00F8C8  72                 	db	114	;'r'
  8425   00F8C9  6D                 	db	109	;'m'
  8426   00F8CA  61                 	db	97	;'a'
  8427   00F8CB  74                 	db	116	;'t'
  8428   00F8CC  20                 	db	32
  8429   00F8CD  66                 	db	102	;'f'
  8430   00F8CE  69                 	db	105	;'i'
  8431   00F8CF  6C                 	db	108	;'l'
  8432   00F8D0  65                 	db	101	;'e'
  8433   00F8D1  2E                 	db	46
  8434   00F8D2  0D                 	db	13
  8435   00F8D3  0A                 	db	10
  8436   00F8D4  00                 	db	0
  8437   00F8D5                     STR_39:
  8438                           
  8439                           ; BSR set to: 7
  8440   00F8D5  66                 	db	102	;'f'
  8441   00F8D6  5F                 	db	95	;'_'
  8442   00F8D7  72                 	db	114	;'r'
  8443   00F8D8  65                 	db	101	;'e'
  8444   00F8D9  61                 	db	97	;'a'
  8445   00F8DA  64                 	db	100	;'d'
  8446   00F8DB  28                 	db	40
  8447   00F8DC  29                 	db	41
  8448   00F8DD  3A                 	db	58	;':'
  8449   00F8DE  20                 	db	32
  8450   00F8DF  45                 	db	69	;'E'
  8451   00F8E0  52                 	db	82	;'R'
  8452   00F8E1  52                 	db	82	;'R'
  8453   00F8E2  4F                 	db	79	;'O'
  8454   00F8E3  52                 	db	82	;'R'
  8455   00F8E4  20                 	db	32
  8456   00F8E5  72                 	db	114	;'r'
  8457   00F8E6  65                 	db	101	;'e'
  8458   00F8E7  73                 	db	115	;'s'
  8459   00F8E8  3D                 	db	61	;'='
  8460   00F8E9  25                 	db	37
  8461   00F8EA  64                 	db	100	;'d'
  8462   00F8EB  2C                 	db	44
  8463   00F8EC  20                 	db	32
  8464   00F8ED  6E                 	db	110	;'n'
  8465   00F8EE  3D                 	db	61	;'='
  8466   00F8EF  25                 	db	37
  8467   00F8F0  64                 	db	100	;'d'
  8468   00F8F1  0A                 	db	10
  8469   00F8F2  0D                 	db	13
  8470   00F8F3  00                 	db	0
  8471   00F8F4                     STR_135:
  8472                           
  8473                           ; BSR set to: 7
  8474   00F8F4  0D                 	db	13
  8475   00F8F5  0A                 	db	10
  8476   00F8F6  25                 	db	37
  8477   00F8F7  73                 	db	115	;'s'
  8478   00F8F8  20                 	db	32
  8479   00F8F9  3A                 	db	58	;':'
  8480   00F8FA  20                 	db	32
  8481   00F8FB  53                 	db	83	;'S'
  8482   00F8FC  69                 	db	105	;'i'
  8483   00F8FD  7A                 	db	122	;'z'
  8484   00F8FE  65                 	db	101	;'e'
  8485   00F8FF  20                 	db	32
  8486   00F900  3D                 	db	61	;'='
  8487   00F901  20                 	db	32
  8488   00F902  24                 	db	36
  8489   00F903  25                 	db	37
  8490   00F904  30                 	db	48	;'0'
  8491   00F905  34                 	db	52	;'4'
  8492   00F906  58                 	db	88	;'X'
  8493   00F907  20                 	db	32
  8494   00F908  62                 	db	98	;'b'
  8495   00F909  79                 	db	121	;'y'
  8496   00F90A  74                 	db	116	;'t'
  8497   00F90B  65                 	db	101	;'e'
  8498   00F90C  73                 	db	115	;'s'
  8499   00F90D  2E                 	db	46
  8500   00F90E  0D                 	db	13
  8501   00F90F  0A                 	db	10
  8502   00F910  00                 	db	0
  8503   00F911                     STR_137:
  8504                           
  8505                           ; BSR set to: 7
  8506   00F911  46                 	db	70	;'F'
  8507   00F912  49                 	db	73	;'I'
  8508   00F913  6C                 	db	108	;'l'
  8509   00F914  65                 	db	101	;'e'
  8510   00F915  20                 	db	32
  8511   00F916  6C                 	db	108	;'l'
  8512   00F917  6F                 	db	111	;'o'
  8513   00F918  61                 	db	97	;'a'
  8514   00F919  64                 	db	100	;'d'
  8515   00F91A  20                 	db	32
  8516   00F91B  61                 	db	97	;'a'
  8517   00F91C  64                 	db	100	;'d'
  8518   00F91D  64                 	db	100	;'d'
  8519   00F91E  72                 	db	114	;'r'
  8520   00F91F  65                 	db	101	;'e'
  8521   00F920  73                 	db	115	;'s'
  8522   00F921  73                 	db	115	;'s'
  8523   00F922  20                 	db	32
  8524   00F923  3A                 	db	58	;':'
  8525   00F924  20                 	db	32
  8526   00F925  24                 	db	36
  8527   00F926  25                 	db	37
  8528   00F927  30                 	db	48	;'0'
  8529   00F928  36                 	db	54	;'6'
  8530   00F929  6C                 	db	108	;'l'
  8531   00F92A  58                 	db	88	;'X'
  8532   00F92B  0D                 	db	13
  8533   00F92C  0A                 	db	10
  8534   00F92D  00                 	db	0
  8535   00F92E                     
  8536                           ; BSR set to: 7
  8537   00F92E  66                 	db	102	;'f'
  8538   00F92F  61                 	db	97	;'a'
  8539   00F930  69                 	db	105	;'i'
  8540   00F931  6C                 	db	108	;'l'
  8541   00F932  65                 	db	101	;'e'
  8542   00F933  64                 	db	100	;'d'
  8543   00F934  20                 	db	32
  8544   00F935  74                 	db	116	;'t'
  8545   00F936  6F                 	db	111	;'o'
  8546   00F937  20                 	db	32
  8547   00F938  77                 	db	119	;'w'
  8548   00F939  72                 	db	114	;'r'
  8549   00F93A  69                 	db	105	;'i'
  8550   00F93B  74                 	db	116	;'t'
  8551   00F93C  65                 	db	101	;'e'
  8552   00F93D  20                 	db	32
  8553   00F93E  73                 	db	115	;'s'
  8554   00F93F  65                 	db	101	;'e'
  8555   00F940  63                 	db	99	;'c'
  8556   00F941  74                 	db	116	;'t'
  8557   00F942  6F                 	db	111	;'o'
  8558   00F943  72                 	db	114	;'r'
  8559   00F944  20                 	db	32
  8560   00F945  25                 	db	37
  8561   00F946  6C                 	db	108	;'l'
  8562   00F947  64                 	db	100	;'d'
  8563   00F948  0A                 	db	10
  8564   00F949  0D                 	db	13
  8565   00F94A  00                 	db	0
  8566   00F94B                     
  8567                           ; BSR set to: 7
  8568   00F94B  0A                 	db	10
  8569   00F94C  0D                 	db	13
  8570   00F94D  53                 	db	83	;'S'
  8571   00F94E  44                 	db	68	;'D'
  8572   00F94F  20                 	db	32
  8573   00F950  43                 	db	67	;'C'
  8574   00F951  61                 	db	97	;'a'
  8575   00F952  72                 	db	114	;'r'
  8576   00F953  64                 	db	100	;'d'
  8577   00F954  3A                 	db	58	;':'
  8578   00F955  20                 	db	32
  8579   00F956  69                 	db	105	;'i'
  8580   00F957  6E                 	db	110	;'n'
  8581   00F958  69                 	db	105	;'i'
  8582   00F959  74                 	db	116	;'t'
  8583   00F95A  69                 	db	105	;'i'
  8584   00F95B  61                 	db	97	;'a'
  8585   00F95C  6C                 	db	108	;'l'
  8586   00F95D  69                 	db	105	;'i'
  8587   00F95E  7A                 	db	122	;'z'
  8588   00F95F  65                 	db	101	;'e'
  8589   00F960  20                 	db	32
  8590   00F961  2E                 	db	46
  8591   00F962  2E                 	db	46
  8592   00F963  2E                 	db	46
  8593   00F964  0A                 	db	10
  8594   00F965  0D                 	db	13
  8595   00F966  00                 	db	0
  8596   00F967                     
  8597                           ; BSR set to: 7
  8598   00F967  66                 	db	102	;'f'
  8599   00F968  61                 	db	97	;'a'
  8600   00F969  69                 	db	105	;'i'
  8601   00F96A  6C                 	db	108	;'l'
  8602   00F96B  65                 	db	101	;'e'
  8603   00F96C  64                 	db	100	;'d'
  8604   00F96D  20                 	db	32
  8605   00F96E  74                 	db	116	;'t'
  8606   00F96F  6F                 	db	111	;'o'
  8607   00F970  20                 	db	32
  8608   00F971  72                 	db	114	;'r'
  8609   00F972  65                 	db	101	;'e'
  8610   00F973  61                 	db	97	;'a'
  8611   00F974  64                 	db	100	;'d'
  8612   00F975  20                 	db	32
  8613   00F976  73                 	db	115	;'s'
  8614   00F977  65                 	db	101	;'e'
  8615   00F978  63                 	db	99	;'c'
  8616   00F979  74                 	db	116	;'t'
  8617   00F97A  6F                 	db	111	;'o'
  8618   00F97B  72                 	db	114	;'r'
  8619   00F97C  20                 	db	32
  8620   00F97D  25                 	db	37
  8621   00F97E  6C                 	db	108	;'l'
  8622   00F97F  64                 	db	100	;'d'
  8623   00F980  0A                 	db	10
  8624   00F981  0D                 	db	13
  8625   00F982  00                 	db	0
  8626   00F983                     
  8627                           ; BSR set to: 7
  8628   00F983  53                 	db	83	;'S'
  8629   00F984  44                 	db	68	;'D'
  8630   00F985  20                 	db	32
  8631   00F986  43                 	db	67	;'C'
  8632   00F987  61                 	db	97	;'a'
  8633   00F988  72                 	db	114	;'r'
  8634   00F989  64                 	db	100	;'d'
  8635   00F98A  3A                 	db	58	;':'
  8636   00F98B  20                 	db	32
  8637   00F98C  41                 	db	65	;'A'
  8638   00F98D  43                 	db	67	;'C'
  8639   00F98E  4D                 	db	77	;'M'
  8640   00F98F  44                 	db	68	;'D'
  8641   00F990  34                 	db	52	;'4'
  8642   00F991  31                 	db	49	;'1'
  8643   00F992  2C                 	db	44
  8644   00F993  20                 	db	32
  8645   00F994  52                 	db	82	;'R'
  8646   00F995  31                 	db	49	;'1'
  8647   00F996  3D                 	db	61	;'='
  8648   00F997  25                 	db	37
  8649   00F998  30                 	db	48	;'0'
  8650   00F999  32                 	db	50	;'2'
  8651   00F99A  78                 	db	120	;'x'
  8652   00F99B  0A                 	db	10
  8653   00F99C  0D                 	db	13
  8654   00F99D  00                 	db	0
  8655   00F99E                     STR_162:
  8656                           
  8657                           ; BSR set to: 7
  8658   00F99E  4E                 	db	78	;'N'
  8659   00F99F  6F                 	db	111	;'o'
  8660   00F9A0  20                 	db	32
  8661   00F9A1  50                 	db	80	;'P'
  8662   00F9A2  72                 	db	114	;'r'
  8663   00F9A3  6F                 	db	111	;'o'
  8664   00F9A4  67                 	db	103	;'g'
  8665   00F9A5  72                 	db	114	;'r'
  8666   00F9A6  61                 	db	97	;'a'
  8667   00F9A7  6D                 	db	109	;'m'
  8668   00F9A8  20                 	db	32
  8669   00F9A9  74                 	db	116	;'t'
  8670   00F9AA  6F                 	db	111	;'o'
  8671   00F9AB  20                 	db	32
  8672   00F9AC  74                 	db	116	;'t'
  8673   00F9AD  65                 	db	101	;'e'
  8674   00F9AE  72                 	db	114	;'r'
  8675   00F9AF  6D                 	db	109	;'m'
  8676   00F9B0  69                 	db	105	;'i'
  8677   00F9B1  6E                 	db	110	;'n'
  8678   00F9B2  61                 	db	97	;'a'
  8679   00F9B3  74                 	db	116	;'t'
  8680   00F9B4  65                 	db	101	;'e'
  8681   00F9B5  2E                 	db	46
  8682   00F9B6  0D                 	db	13
  8683   00F9B7  0A                 	db	10
  8684   00F9B8  00                 	db	0
  8685   00F9B9                     STR_86:
  8686                           
  8687                           ; BSR set to: 7
  8688   00F9B9  46                 	db	70	;'F'
  8689   00F9BA  61                 	db	97	;'a'
  8690   00F9BB  69                 	db	105	;'i'
  8691   00F9BC  6C                 	db	108	;'l'
  8692   00F9BD  65                 	db	101	;'e'
  8693   00F9BE  64                 	db	100	;'d'
  8694   00F9BF  20                 	db	32
  8695   00F9C0  74                 	db	116	;'t'
  8696   00F9C1  6F                 	db	111	;'o'
  8697   00F9C2  20                 	db	32
  8698   00F9C3  6D                 	db	109	;'m'
  8699   00F9C4  6F                 	db	111	;'o'
  8700   00F9C5  75                 	db	117	;'u'
  8701   00F9C6  6E                 	db	110	;'n'
  8702   00F9C7  74                 	db	116	;'t'
  8703   00F9C8  20                 	db	32
  8704   00F9C9  53                 	db	83	;'S'
  8705   00F9CA  44                 	db	68	;'D'
  8706   00F9CB  20                 	db	32
  8707   00F9CC  43                 	db	67	;'C'
  8708   00F9CD  61                 	db	97	;'a'
  8709   00F9CE  72                 	db	114	;'r'
  8710   00F9CF  64                 	db	100	;'d'
  8711   00F9D0  2E                 	db	46
  8712   00F9D1  0A                 	db	10
  8713   00F9D2  0D                 	db	13
  8714   00F9D3  00                 	db	0
  8715   00F9D4                     STR_168:
  8716                           
  8717                           ; BSR set to: 7
  8718   00F9D4  77                 	db	119	;'w'
  8719   00F9D5  61                 	db	97	;'a'
  8720   00F9D6  69                 	db	105	;'i'
  8721   00F9D7  74                 	db	116	;'t'
  8722   00F9D8  20                 	db	32
  8723   00F9D9  66                 	db	102	;'f'
  8724   00F9DA  6F                 	db	111	;'o'
  8725   00F9DB  72                 	db	114	;'r'
  8726   00F9DC  20                 	db	32
  8727   00F9DD  70                 	db	112	;'p'
  8728   00F9DE  72                 	db	114	;'r'
  8729   00F9DF  6F                 	db	111	;'o'
  8730   00F9E0  67                 	db	103	;'g'
  8731   00F9E1  72                 	db	114	;'r'
  8732   00F9E2  61                 	db	97	;'a'
  8733   00F9E3  6D                 	db	109	;'m'
  8734   00F9E4  6D                 	db	109	;'m'
  8735   00F9E5  65                 	db	101	;'e'
  8736   00F9E6  72                 	db	114	;'r'
  8737   00F9E7  20                 	db	32
  8738   00F9E8  2E                 	db	46
  8739   00F9E9  2E                 	db	46
  8740   00F9EA  2E                 	db	46
  8741   00F9EB  0D                 	db	13
  8742   00F9EC  0A                 	db	10
  8743   00F9ED  00                 	db	0
  8744   00F9EE                     STR_76:
  8745                           
  8746                           ; BSR set to: 7
  8747   00F9EE  0D                 	db	13
  8748   00F9EF  0A                 	db	10
  8749   00F9F0  41                 	db	65	;'A'
  8750   00F9F1  73                 	db	115	;'s'
  8751   00F9F2  73                 	db	115	;'s'
  8752   00F9F3  65                 	db	101	;'e'
  8753   00F9F4  72                 	db	114	;'r'
  8754   00F9F5  74                 	db	116	;'t'
  8755   00F9F6  20                 	db	32
  8756   00F9F7  4E                 	db	78	;'N'
  8757   00F9F8  4D                 	db	77	;'M'
  8758   00F9F9  49                 	db	73	;'I'
  8759   00F9FA  20                 	db	32
  8760   00F9FB  69                 	db	105	;'i'
  8761   00F9FC  6E                 	db	110	;'n'
  8762   00F9FD  74                 	db	116	;'t'
  8763   00F9FE  65                 	db	101	;'e'
  8764   00F9FF  72                 	db	114	;'r'
  8765   00FA00  72                 	db	114	;'r'
  8766   00FA01  75                 	db	117	;'u'
  8767   00FA02  70                 	db	112	;'p'
  8768   00FA03  74                 	db	116	;'t'
  8769   00FA04  2E                 	db	46
  8770   00FA05  0D                 	db	13
  8771   00FA06  0A                 	db	10
  8772   00FA07  00                 	db	0
  8773   00FA08                     STR_142:
  8774                           
  8775                           ; BSR set to: 7
  8776   00FA08  57                 	db	87	;'W'
  8777   00FA09  36                 	db	54	;'6'
  8778   00FA0A  35                 	db	53	;'5'
  8779   00FA0B  43                 	db	67	;'C'
  8780   00FA0C  30                 	db	48	;'0'
  8781   00FA0D  32                 	db	50	;'2'
  8782   00FA0E  20                 	db	32
  8783   00FA0F  28                 	db	40
  8784   00FA10  45                 	db	69	;'E'
  8785   00FA11  6D                 	db	109	;'m'
  8786   00FA12  75                 	db	117	;'u'
  8787   00FA13  6C                 	db	108	;'l'
  8788   00FA14  61                 	db	97	;'a'
  8789   00FA15  74                 	db	116	;'t'
  8790   00FA16  69                 	db	105	;'i'
  8791   00FA17  6F                 	db	111	;'o'
  8792   00FA18  6E                 	db	110	;'n'
  8793   00FA19  20                 	db	32
  8794   00FA1A  4D                 	db	77	;'M'
  8795   00FA1B  6F                 	db	111	;'o'
  8796   00FA1C  64                 	db	100	;'d'
  8797   00FA1D  65                 	db	101	;'e'
  8798   00FA1E  29                 	db	41
  8799   00FA1F  0A                 	db	10
  8800   00FA20  0D                 	db	13
  8801   00FA21  00                 	db	0
  8802   00FA22                     STR_156:
  8803                           
  8804                           ; BSR set to: 7
  8805   00FA22  42                 	db	66	;'B'
  8806   00FA23  6F                 	db	111	;'o'
  8807   00FA24  74                 	db	116	;'t'
  8808   00FA25  68                 	db	104	;'h'
  8809   00FA26  20                 	db	32
  8810   00FA27  57                 	db	87	;'W'
  8811   00FA28  36                 	db	54	;'6'
  8812   00FA29  35                 	db	53	;'5'
  8813   00FA2A  43                 	db	67	;'C'
  8814   00FA2B  30                 	db	48	;'0'
  8815   00FA2C  32                 	db	50	;'2'
  8816   00FA2D  20                 	db	32
  8817   00FA2E  61                 	db	97	;'a'
  8818   00FA2F  6E                 	db	110	;'n'
  8819   00FA30  64                 	db	100	;'d'
  8820   00FA31  20                 	db	32
  8821   00FA32  57                 	db	87	;'W'
  8822   00FA33  36                 	db	54	;'6'
  8823   00FA34  35                 	db	53	;'5'
  8824   00FA35  43                 	db	67	;'C'
  8825   00FA36  38                 	db	56	;'8'
  8826   00FA37  31                 	db	49	;'1'
  8827   00FA38  36                 	db	54	;'6'
  8828   00FA39  0A                 	db	10
  8829   00FA3A  0D                 	db	13
  8830   00FA3B  00                 	db	0
  8831   00FA3C                     STR_42:
  8832                           
  8833                           ; BSR set to: 7
  8834   00FA3C  0A                 	db	10
  8835   00FA3D  4D                 	db	77	;'M'
  8836   00FA3E  65                 	db	101	;'e'
  8837   00FA3F  6D                 	db	109	;'m'
  8838   00FA40  6F                 	db	111	;'o'
  8839   00FA41  72                 	db	114	;'r'
  8840   00FA42  79                 	db	121	;'y'
  8841   00FA43  20                 	db	32
  8842   00FA44  65                 	db	101	;'e'
  8843   00FA45  72                 	db	114	;'r'
  8844   00FA46  72                 	db	114	;'r'
  8845   00FA47  6F                 	db	111	;'o'
  8846   00FA48  72                 	db	114	;'r'
  8847   00FA49  20                 	db	32
  8848   00FA4A  61                 	db	97	;'a'
  8849   00FA4B  74                 	db	116	;'t'
  8850   00FA4C  20                 	db	32
  8851   00FA4D  24                 	db	36
  8852   00FA4E  25                 	db	37
  8853   00FA4F  30                 	db	48	;'0'
  8854   00FA50  36                 	db	54	;'6'
  8855   00FA51  6C                 	db	108	;'l'
  8856   00FA52  58                 	db	88	;'X'
  8857   00FA53  0A                 	db	10
  8858   00FA54  0D                 	db	13
  8859   00FA55  00                 	db	0
  8860   00FA56                     
  8861                           ; BSR set to: 7
  8862   00FA56  66                 	db	102	;'f'
  8863   00FA57  61                 	db	97	;'a'
  8864   00FA58  69                 	db	105	;'i'
  8865   00FA59  6C                 	db	108	;'l'
  8866   00FA5A  65                 	db	101	;'e'
  8867   00FA5B  64                 	db	100	;'d'
  8868   00FA5C  20                 	db	32
  8869   00FA5D  74                 	db	116	;'t'
  8870   00FA5E  6F                 	db	111	;'o'
  8871   00FA5F  20                 	db	32
  8872   00FA60  72                 	db	114	;'r'
  8873   00FA61  65                 	db	101	;'e'
  8874   00FA62  61                 	db	97	;'a'
  8875   00FA63  64                 	db	100	;'d'
  8876   00FA64  20                 	db	32
  8877   00FA65  73                 	db	115	;'s'
  8878   00FA66  65                 	db	101	;'e'
  8879   00FA67  63                 	db	99	;'c'
  8880   00FA68  74                 	db	116	;'t'
  8881   00FA69  6F                 	db	111	;'o'
  8882   00FA6A  72                 	db	114	;'r'
  8883   00FA6B  20                 	db	32
  8884   00FA6C  30                 	db	48	;'0'
  8885   00FA6D  0A                 	db	10
  8886   00FA6E  0D                 	db	13
  8887   00FA6F  00                 	db	0
  8888   00FA70                     
  8889                           ; BSR set to: 7
  8890   00FA70  53                 	db	83	;'S'
  8891   00FA71  44                 	db	68	;'D'
  8892   00FA72  20                 	db	32
  8893   00FA73  43                 	db	67	;'C'
  8894   00FA74  61                 	db	97	;'a'
  8895   00FA75  72                 	db	114	;'r'
  8896   00FA76  64                 	db	100	;'d'
  8897   00FA77  3A                 	db	58	;':'
  8898   00FA78  20                 	db	32
  8899   00FA79  6E                 	db	110	;'n'
  8900   00FA7A  6F                 	db	111	;'o'
  8901   00FA7B  74                 	db	116	;'t'
  8902   00FA7C  20                 	db	32
  8903   00FA7D  73                 	db	115	;'s'
  8904   00FA7E  75                 	db	117	;'u'
  8905   00FA7F  70                 	db	112	;'p'
  8906   00FA80  6F                 	db	111	;'o'
  8907   00FA81  70                 	db	112	;'p'
  8908   00FA82  72                 	db	114	;'r'
  8909   00FA83  74                 	db	116	;'t'
  8910   00FA84  65                 	db	101	;'e'
  8911   00FA85  64                 	db	100	;'d'
  8912   00FA86  0A                 	db	10
  8913   00FA87  0D                 	db	13
  8914   00FA88  00                 	db	0
  8915   00FA89                     
  8916                           ; BSR set to: 7
  8917   00FA89  53                 	db	83	;'S'
  8918   00FA8A  44                 	db	68	;'D'
  8919   00FA8B  20                 	db	32
  8920   00FA8C  43                 	db	67	;'C'
  8921   00FA8D  61                 	db	97	;'a'
  8922   00FA8E  72                 	db	114	;'r'
  8923   00FA8F  64                 	db	100	;'d'
  8924   00FA90  3A                 	db	58	;':'
  8925   00FA91  20                 	db	32
  8926   00FA92  43                 	db	67	;'C'
  8927   00FA93  4D                 	db	77	;'M'
  8928   00FA94  44                 	db	68	;'D'
  8929   00FA95  30                 	db	48	;'0'
  8930   00FA96  2C                 	db	44
  8931   00FA97  20                 	db	32
  8932   00FA98  52                 	db	82	;'R'
  8933   00FA99  31                 	db	49	;'1'
  8934   00FA9A  3D                 	db	61	;'='
  8935   00FA9B  25                 	db	37
  8936   00FA9C  30                 	db	48	;'0'
  8937   00FA9D  32                 	db	50	;'2'
  8938   00FA9E  78                 	db	120	;'x'
  8939   00FA9F  0A                 	db	10
  8940   00FAA0  0D                 	db	13
  8941   00FAA1  00                 	db	0
  8942   00FAA2                     STR_81:
  8943                           
  8944                           ; BSR set to: 7
  8945   00FAA2  57                 	db	87	;'W'
  8946   00FAA3  6F                 	db	111	;'o'
  8947   00FAA4  72                 	db	114	;'r'
  8948   00FAA5  6B                 	db	107	;'k'
  8949   00FAA6  20                 	db	32
  8950   00FAA7  6F                 	db	111	;'o'
  8951   00FAA8  6E                 	db	110	;'n'
  8952   00FAA9  20                 	db	32
  8953   00FAAA  6F                 	db	111	;'o'
  8954   00FAAB  6E                 	db	110	;'n'
  8955   00FAAC  6C                 	db	108	;'l'
  8956   00FAAD  79                 	db	121	;'y'
  8957   00FAAE  20                 	db	32
  8958   00FAAF  57                 	db	87	;'W'
  8959   00FAB0  36                 	db	54	;'6'
  8960   00FAB1  35                 	db	53	;'5'
  8961   00FAB2  43                 	db	67	;'C'
  8962   00FAB3  38                 	db	56	;'8'
  8963   00FAB4  31                 	db	49	;'1'
  8964   00FAB5  36                 	db	54	;'6'
  8965   00FAB6  2E                 	db	46
  8966   00FAB7  2E                 	db	46
  8967   00FAB8  0D                 	db	13
  8968   00FAB9  0A                 	db	10
  8969   00FABA  00                 	db	0
  8970   00FABB                     STR_88:
  8971                           
  8972                           ; BSR set to: 7
  8973   00FABB  25                 	db	37
  8974   00FABC  73                 	db	115	;'s'
  8975   00FABD  20                 	db	32
  8976   00FABE  66                 	db	102	;'f'
  8977   00FABF  69                 	db	105	;'i'
  8978   00FAC0  6C                 	db	108	;'l'
  8979   00FAC1  65                 	db	101	;'e'
  8980   00FAC2  20                 	db	32
  8981   00FAC3  69                 	db	105	;'i'
  8982   00FAC4  73                 	db	115	;'s'
  8983   00FAC5  20                 	db	32
  8984   00FAC6  6E                 	db	110	;'n'
  8985   00FAC7  6F                 	db	111	;'o'
  8986   00FAC8  74                 	db	116	;'t'
  8987   00FAC9  20                 	db	32
  8988   00FACA  66                 	db	102	;'f'
  8989   00FACB  6F                 	db	111	;'o'
  8990   00FACC  75                 	db	117	;'u'
  8991   00FACD  6E                 	db	110	;'n'
  8992   00FACE  64                 	db	100	;'d'
  8993   00FACF  2E                 	db	46
  8994   00FAD0  2E                 	db	46
  8995   00FAD1  0D                 	db	13
  8996   00FAD2  0A                 	db	10
  8997   00FAD3  00                 	db	0
  8998   00FAD4                     STR_41:
  8999                           
  9000                           ; BSR set to: 7
  9001   00FAD4  4D                 	db	77	;'M'
  9002   00FAD5  65                 	db	101	;'e'
  9003   00FAD6  6D                 	db	109	;'m'
  9004   00FAD7  6F                 	db	111	;'o'
  9005   00FAD8  72                 	db	114	;'r'
  9006   00FAD9  79                 	db	121	;'y'
  9007   00FADA  20                 	db	32
  9008   00FADB  24                 	db	36
  9009   00FADC  30                 	db	48	;'0'
  9010   00FADD  30                 	db	48	;'0'
  9011   00FADE  30                 	db	48	;'0'
  9012   00FADF  30                 	db	48	;'0'
  9013   00FAE0  30                 	db	48	;'0'
  9014   00FAE1  30                 	db	48	;'0'
  9015   00FAE2  20                 	db	32
  9016   00FAE3  2D                 	db	45
  9017   00FAE4  20                 	db	32
  9018   00FAE5  24                 	db	36
  9019   00FAE6  25                 	db	37
  9020   00FAE7  30                 	db	48	;'0'
  9021   00FAE8  36                 	db	54	;'6'
  9022   00FAE9  6C                 	db	108	;'l'
  9023   00FAEA  58                 	db	88	;'X'
  9024   00FAEB  0D                 	db	13
  9025   00FAEC  00                 	db	0
  9026   00FAED                     
  9027                           ; BSR set to: 7
  9028   00FAED  64                 	db	100	;'d'
  9029   00FAEE  69                 	db	105	;'i'
  9030   00FAEF  73                 	db	115	;'s'
  9031   00FAF0  6B                 	db	107	;'k'
  9032   00FAF1  5F                 	db	95	;'_'
  9033   00FAF2  69                 	db	105	;'i'
  9034   00FAF3  6E                 	db	110	;'n'
  9035   00FAF4  69                 	db	105	;'i'
  9036   00FAF5  74                 	db	116	;'t'
  9037   00FAF6  69                 	db	105	;'i'
  9038   00FAF7  61                 	db	97	;'a'
  9039   00FAF8  6C                 	db	108	;'l'
  9040   00FAF9  69                 	db	105	;'i'
  9041   00FAFA  7A                 	db	122	;'z'
  9042   00FAFB  65                 	db	101	;'e'
  9043   00FAFC  28                 	db	40
  9044   00FAFD  25                 	db	37
  9045   00FAFE  64                 	db	100	;'d'
  9046   00FAFF  29                 	db	41
  9047   00FB00  2E                 	db	46
  9048   00FB01  2E                 	db	46
  9049   00FB02  2E                 	db	46
  9050   00FB03  0A                 	db	10
  9051   00FB04  0D                 	db	13
  9052   00FB05  00                 	db	0
  9053   00FB06                     STR_80:
  9054                           
  9055                           ; BSR set to: 7
  9056   00FB06  49                 	db	73	;'I'
  9057   00FB07  6E                 	db	110	;'n'
  9058   00FB08  76                 	db	118	;'v'
  9059   00FB09  61                 	db	97	;'a'
  9060   00FB0A  6C                 	db	108	;'l'
  9061   00FB0B  69                 	db	105	;'i'
  9062   00FB0C  64                 	db	100	;'d'
  9063   00FB0D  20                 	db	32
  9064   00FB0E  4D                 	db	77	;'M'
  9065   00FB0F  45                 	db	69	;'E'
  9066   00FB10  5A                 	db	90	;'Z'
  9067   00FB11  57                 	db	87	;'W'
  9068   00FB12  36                 	db	54	;'6'
  9069   00FB13  35                 	db	53	;'5'
  9070   00FB14  43                 	db	67	;'C'
  9071   00FB15  20                 	db	32
  9072   00FB16  66                 	db	102	;'f'
  9073   00FB17  69                 	db	105	;'i'
  9074   00FB18  6C                 	db	108	;'l'
  9075   00FB19  65                 	db	101	;'e'
  9076   00FB1A  2E                 	db	46
  9077   00FB1B  0D                 	db	13
  9078   00FB1C  0A                 	db	10
  9079   00FB1D  00                 	db	0
  9080   00FB1E                     STR_117:
  9081                           
  9082                           ; BSR set to: 7
  9083   00FB1E  20                 	db	32
  9084   00FB1F  20                 	db	32
  9085   00FB20  43                 	db	67	;'C'
  9086   00FB21  44                 	db	68	;'D'
  9087   00FB22  20                 	db	32
  9088   00FB23  5B                 	db	91	;'['
  9089   00FB24  64                 	db	100	;'d'
  9090   00FB25  69                 	db	105	;'i'
  9091   00FB26  72                 	db	114	;'r'
  9092   00FB27  65                 	db	101	;'e'
  9093   00FB28  63                 	db	99	;'c'
  9094   00FB29  74                 	db	116	;'t'
  9095   00FB2A  6F                 	db	111	;'o'
  9096   00FB2B  72                 	db	114	;'r'
  9097   00FB2C  79                 	db	121	;'y'
  9098   00FB2D  20                 	db	32
  9099   00FB2E  6E                 	db	110	;'n'
  9100   00FB2F  61                 	db	97	;'a'
  9101   00FB30  6D                 	db	109	;'m'
  9102   00FB31  65                 	db	101	;'e'
  9103   00FB32  5D                 	db	93	;']'
  9104   00FB33  0A                 	db	10
  9105   00FB34  0D                 	db	13
  9106   00FB35  00                 	db	0
  9107   00FB36                     STR_25:
  9108                           
  9109                           ; BSR set to: 7
  9110   00FB36  25                 	db	37
  9111   00FB37  73                 	db	115	;'s'
  9112   00FB38  25                 	db	37
  9113   00FB39  35                 	db	53	;'5'
  9114   00FB3A  33                 	db	51	;'3'
  9115   00FB3B  73                 	db	115	;'s'
  9116   00FB3C  20                 	db	32
  9117   00FB3D  43                 	db	67	;'C'
  9118   00FB3E  48                 	db	72	;'H'
  9119   00FB3F  45                 	db	69	;'E'
  9120   00FB40  43                 	db	67	;'C'
  9121   00FB41  4B                 	db	75	;'K'
  9122   00FB42  53                 	db	83	;'S'
  9123   00FB43  55                 	db	85	;'U'
  9124   00FB44  4D                 	db	77	;'M'
  9125   00FB45  3A                 	db	58	;':'
  9126   00FB46  20                 	db	32
  9127   00FB47  25                 	db	37
  9128   00FB48  30                 	db	48	;'0'
  9129   00FB49  32                 	db	50	;'2'
  9130   00FB4A  78                 	db	120	;'x'
  9131   00FB4B  0A                 	db	10
  9132   00FB4C  0D                 	db	13
  9133   00FB4D  00                 	db	0
  9134   00FB4E                     STR_72:
  9135                           
  9136                           ; BSR set to: 7
  9137   00FB4E  0D                 	db	13
  9138   00FB4F  0A                 	db	10
  9139   00FB50  55                 	db	85	;'U'
  9140   00FB51  73                 	db	115	;'s'
  9141   00FB52  65                 	db	101	;'e'
  9142   00FB53  20                 	db	32
  9143   00FB54  4E                 	db	78	;'N'
  9144   00FB55  43                 	db	67	;'C'
  9145   00FB56  4F                 	db	79	;'O'
  9146   00FB57  31                 	db	49	;'1'
  9147   00FB58  20                 	db	32
  9148   00FB59  25                 	db	37
  9149   00FB5A  32                 	db	50	;'2'
  9150   00FB5B  2E                 	db	46
  9151   00FB5C  33                 	db	51	;'3'
  9152   00FB5D  66                 	db	102	;'f'
  9153   00FB5E  4D                 	db	77	;'M'
  9154   00FB5F  48                 	db	72	;'H'
  9155   00FB60  7A                 	db	122	;'z'
  9156   00FB61  0D                 	db	13
  9157   00FB62  0A                 	db	10
  9158   00FB63  0A                 	db	10
  9159   00FB64  00                 	db	0
  9160   00FB65                     STR_89:
  9161                           
  9162                           ; BSR set to: 7
  9163   00FB65  25                 	db	37
  9164   00FB66  73                 	db	115	;'s'
  9165   00FB67  20                 	db	32
  9166   00FB68  3A                 	db	58	;':'
  9167   00FB69  20                 	db	32
  9168   00FB6A  69                 	db	105	;'i'
  9169   00FB6B  6E                 	db	110	;'n'
  9170   00FB6C  76                 	db	118	;'v'
  9171   00FB6D  61                 	db	97	;'a'
  9172   00FB6E  6C                 	db	108	;'l'
  9173   00FB6F  69                 	db	105	;'i'
  9174   00FB70  64                 	db	100	;'d'
  9175   00FB71  20                 	db	32
  9176   00FB72  76                 	db	118	;'v'
  9177   00FB73  61                 	db	97	;'a'
  9178   00FB74  6C                 	db	108	;'l'
  9179   00FB75  75                 	db	117	;'u'
  9180   00FB76  65                 	db	101	;'e'
  9181   00FB77  21                 	db	33
  9182   00FB78  21                 	db	33
  9183   00FB79  0D                 	db	13
  9184   00FB7A  0A                 	db	10
  9185   00FB7B  00                 	db	0
  9186   00FB7C                     STR_119:
  9187                           
  9188                           ; BSR set to: 7
  9189   00FB7C  20                 	db	32
  9190   00FB7D  20                 	db	32
  9191   00FB7E  4D                 	db	77	;'M'
  9192   00FB7F  44                 	db	68	;'D'
  9193   00FB80  55                 	db	85	;'U'
  9194   00FB81  4D                 	db	77	;'M'
  9195   00FB82  50                 	db	80	;'P'
  9196   00FB83  20                 	db	32
  9197   00FB84  61                 	db	97	;'a'
  9198   00FB85  64                 	db	100	;'d'
  9199   00FB86  64                 	db	100	;'d'
  9200   00FB87  72                 	db	114	;'r'
  9201   00FB88  65                 	db	101	;'e'
  9202   00FB89  73                 	db	115	;'s'
  9203   00FB8A  73                 	db	115	;'s'
  9204   00FB8B  28                 	db	40
  9205   00FB8C  48                 	db	72	;'H'
  9206   00FB8D  65                 	db	101	;'e'
  9207   00FB8E  78                 	db	120	;'x'
  9208   00FB8F  29                 	db	41
  9209   00FB90  0D                 	db	13
  9210   00FB91  0A                 	db	10
  9211   00FB92  00                 	db	0
  9212   00FB93                     STR_71:
  9213                           
  9214                           ; BSR set to: 7
  9215   00FB93  43                 	db	67	;'C'
  9216   00FB94  50                 	db	80	;'P'
  9217   00FB95  55                 	db	85	;'U'
  9218   00FB96  20                 	db	32
  9219   00FB97  53                 	db	83	;'S'
  9220   00FB98  65                 	db	101	;'e'
  9221   00FB99  74                 	db	116	;'t'
  9222   00FB9A  74                 	db	116	;'t'
  9223   00FB9B  69                 	db	105	;'i'
  9224   00FB9C  6E                 	db	110	;'n'
  9225   00FB9D  67                 	db	103	;'g'
  9226   00FB9E  3A                 	db	58	;':'
  9227   00FB9F  20                 	db	32
  9228   00FBA0  57                 	db	87	;'W'
  9229   00FBA1  36                 	db	54	;'6'
  9230   00FBA2  35                 	db	53	;'5'
  9231   00FBA3  43                 	db	67	;'C'
  9232   00FBA4  38                 	db	56	;'8'
  9233   00FBA5  31                 	db	49	;'1'
  9234   00FBA6  36                 	db	54	;'6'
  9235   00FBA7  0D                 	db	13
  9236   00FBA8  0A                 	db	10
  9237   00FBA9  00                 	db	0
  9238   00FBAA                     STR_45:
  9239                           
  9240                           ; BSR set to: 7
  9241   00FBAA  0A                 	db	10
  9242   00FBAB  4D                 	db	77	;'M'
  9243   00FBAC  65                 	db	101	;'e'
  9244   00FBAD  6D                 	db	109	;'m'
  9245   00FBAE  6F                 	db	111	;'o'
  9246   00FBAF  72                 	db	114	;'r'
  9247   00FBB0  79                 	db	121	;'y'
  9248   00FBB1  20                 	db	32
  9249   00FBB2  77                 	db	119	;'w'
  9250   00FBB3  72                 	db	114	;'r'
  9251   00FBB4  61                 	db	97	;'a'
  9252   00FBB5  70                 	db	112	;'p'
  9253   00FBB6  20                 	db	32
  9254   00FBB7  61                 	db	97	;'a'
  9255   00FBB8  72                 	db	114	;'r'
  9256   00FBB9  6F                 	db	111	;'o'
  9257   00FBBA  75                 	db	117	;'u'
  9258   00FBBB  6E                 	db	110	;'n'
  9259   00FBBC  64                 	db	100	;'d'
  9260   00FBBD  2E                 	db	46
  9261   00FBBE  0A                 	db	10
  9262   00FBBF  0D                 	db	13
  9263   00FBC0  00                 	db	0
  9264   00FBC1                     STR_2:
  9265                           
  9266                           ; BSR set to: 7
  9267   00FBC1  70                 	db	112	;'p'
  9268   00FBC2  68                 	db	104	;'h'
  9269   00FBC3  79                 	db	121	;'y'
  9270   00FBC4  73                 	db	115	;'s'
  9271   00FBC5  69                 	db	105	;'i'
  9272   00FBC6  63                 	db	99	;'c'
  9273   00FBC7  61                 	db	97	;'a'
  9274   00FBC8  6C                 	db	108	;'l'
  9275   00FBC9  20                 	db	32
  9276   00FBCA  64                 	db	100	;'d'
  9277   00FBCB  72                 	db	114	;'r'
  9278   00FBCC  69                 	db	105	;'i'
  9279   00FBCD  76                 	db	118	;'v'
  9280   00FBCE  65                 	db	101	;'e'
  9281   00FBCF  72                 	db	114	;'r'
  9282   00FBD0  20                 	db	32
  9283   00FBD1  21                 	db	33
  9284   00FBD2  3D                 	db	61	;'='
  9285   00FBD3  20                 	db	32
  9286   00FBD4  30                 	db	48	;'0'
  9287   00FBD5  0A                 	db	10
  9288   00FBD6  0D                 	db	13
  9289   00FBD7  00                 	db	0
  9290   00FBD8                     STR_109:
  9291                           
  9292                           ; BSR set to: 7
  9293   00FBD8  46                 	db	70	;'F'
  9294   00FBD9  6C                 	db	108	;'l'
  9295   00FBDA  69                 	db	105	;'i'
  9296   00FBDB  65                 	db	101	;'e'
  9297   00FBDC  28                 	db	40
  9298   00FBDD  25                 	db	37
  9299   00FBDE  73                 	db	115	;'s'
  9300   00FBDF  29                 	db	41
  9301   00FBE0  20                 	db	32
  9302   00FBE1  6C                 	db	108	;'l'
  9303   00FBE2  6F                 	db	111	;'o'
  9304   00FBE3  61                 	db	97	;'a'
  9305   00FBE4  64                 	db	100	;'d'
  9306   00FBE5  69                 	db	105	;'i'
  9307   00FBE6  6E                 	db	110	;'n'
  9308   00FBE7  67                 	db	103	;'g'
  9309   00FBE8  2E                 	db	46
  9310   00FBE9  2E                 	db	46
  9311   00FBEA  2E                 	db	46
  9312   00FBEB  0D                 	db	13
  9313   00FBEC  0A                 	db	10
  9314   00FBED  00                 	db	0
  9315   00FBEE                     STR_70:
  9316                           
  9317                           ; BSR set to: 7
  9318   00FBEE  43                 	db	67	;'C'
  9319   00FBEF  50                 	db	80	;'P'
  9320   00FBF0  55                 	db	85	;'U'
  9321   00FBF1  20                 	db	32
  9322   00FBF2  53                 	db	83	;'S'
  9323   00FBF3  65                 	db	101	;'e'
  9324   00FBF4  74                 	db	116	;'t'
  9325   00FBF5  74                 	db	116	;'t'
  9326   00FBF6  69                 	db	105	;'i'
  9327   00FBF7  6E                 	db	110	;'n'
  9328   00FBF8  67                 	db	103	;'g'
  9329   00FBF9  3A                 	db	58	;':'
  9330   00FBFA  20                 	db	32
  9331   00FBFB  57                 	db	87	;'W'
  9332   00FBFC  36                 	db	54	;'6'
  9333   00FBFD  35                 	db	53	;'5'
  9334   00FBFE  43                 	db	67	;'C'
  9335   00FBFF  30                 	db	48	;'0'
  9336   00FC00  32                 	db	50	;'2'
  9337   00FC01  0D                 	db	13
  9338   00FC02  0A                 	db	10
  9339   00FC03  00                 	db	0
  9340   00FC04                     STR_163:
  9341                           
  9342                           ; BSR set to: 7
  9343   00FC04  46                 	db	70	;'F'
  9344   00FC05  69                 	db	105	;'i'
  9345   00FC06  6C                 	db	108	;'l'
  9346   00FC07  65                 	db	101	;'e'
  9347   00FC08  20                 	db	32
  9348   00FC09  4F                 	db	79	;'O'
  9349   00FC0A  70                 	db	112	;'p'
  9350   00FC0B  65                 	db	101	;'e'
  9351   00FC0C  6E                 	db	110	;'n'
  9352   00FC0D  20                 	db	32
  9353   00FC0E  45                 	db	69	;'E'
  9354   00FC0F  72                 	db	114	;'r'
  9355   00FC10  72                 	db	114	;'r'
  9356   00FC11  6F                 	db	111	;'o'
  9357   00FC12  72                 	db	114	;'r'
  9358   00FC13  2E                 	db	46
  9359   00FC14  20                 	db	32
  9360   00FC15  25                 	db	37
  9361   00FC16  73                 	db	115	;'s'
  9362   00FC17  0D                 	db	13
  9363   00FC18  0A                 	db	10
  9364   00FC19  00                 	db	0
  9365   00FC1A                     STR_143:
  9366                           
  9367                           ; BSR set to: 7
  9368   00FC1A  57                 	db	87	;'W'
  9369   00FC1B  36                 	db	54	;'6'
  9370   00FC1C  35                 	db	53	;'5'
  9371   00FC1D  43                 	db	67	;'C'
  9372   00FC1E  38                 	db	56	;'8'
  9373   00FC1F  31                 	db	49	;'1'
  9374   00FC20  36                 	db	54	;'6'
  9375   00FC21  20                 	db	32
  9376   00FC22  4E                 	db	78	;'N'
  9377   00FC23  61                 	db	97	;'a'
  9378   00FC24  74                 	db	116	;'t'
  9379   00FC25  69                 	db	105	;'i'
  9380   00FC26  76                 	db	118	;'v'
  9381   00FC27  65                 	db	101	;'e'
  9382   00FC28  20                 	db	32
  9383   00FC29  6D                 	db	109	;'m'
  9384   00FC2A  6F                 	db	111	;'o'
  9385   00FC2B  64                 	db	100	;'d'
  9386   00FC2C  65                 	db	101	;'e'
  9387   00FC2D  0A                 	db	10
  9388   00FC2E  0D                 	db	13
  9389   00FC2F  00                 	db	0
  9390   00FC30                     STR_35:
  9391                           
  9392                           ; BSR set to: 7
  9393   00FC30  66                 	db	102	;'f'
  9394   00FC31  5F                 	db	95	;'_'
  9395   00FC32  6C                 	db	108	;'l'
  9396   00FC33  73                 	db	115	;'s'
  9397   00FC34  65                 	db	101	;'e'
  9398   00FC35  65                 	db	101	;'e'
  9399   00FC36  6B                 	db	107	;'k'
  9400   00FC37  28                 	db	40
  9401   00FC38  29                 	db	41
  9402   00FC39  3A                 	db	58	;':'
  9403   00FC3A  20                 	db	32
  9404   00FC3B  45                 	db	69	;'E'
  9405   00FC3C  52                 	db	82	;'R'
  9406   00FC3D  52                 	db	82	;'R'
  9407   00FC3E  4F                 	db	79	;'O'
  9408   00FC3F  52                 	db	82	;'R'
  9409   00FC40  20                 	db	32
  9410   00FC41  25                 	db	37
  9411   00FC42  64                 	db	100	;'d'
  9412   00FC43  0A                 	db	10
  9413   00FC44  0D                 	db	13
  9414   00FC45  00                 	db	0
  9415   00FC46                     STR_170:
  9416                           
  9417                           ; BSR set to: 7
  9418   00FC46  4D                 	db	77	;'M'
  9419   00FC47  65                 	db	101	;'e'
  9420   00FC48  6D                 	db	109	;'m'
  9421   00FC49  6F                 	db	111	;'o'
  9422   00FC4A  72                 	db	114	;'r'
  9423   00FC4B  79                 	db	121	;'y'
  9424   00FC4C  20                 	db	32
  9425   00FC4D  57                 	db	87	;'W'
  9426   00FC4E  72                 	db	114	;'r'
  9427   00FC4F  69                 	db	105	;'i'
  9428   00FC50  74                 	db	116	;'t'
  9429   00FC51  65                 	db	101	;'e'
  9430   00FC52  20                 	db	32
  9431   00FC53  45                 	db	69	;'E'
  9432   00FC54  72                 	db	114	;'r'
  9433   00FC55  72                 	db	114	;'r'
  9434   00FC56  6F                 	db	111	;'o'
  9435   00FC57  72                 	db	114	;'r'
  9436   00FC58  0D                 	db	13
  9437   00FC59  0A                 	db	10
  9438   00FC5A  00                 	db	0
  9439   00FC5B                     STR_134:
  9440                           
  9441                           ; BSR set to: 7
  9442   00FC5B  0D                 	db	13
  9443   00FC5C  0A                 	db	10
  9444   00FC5D  46                 	db	70	;'F'
  9445   00FC5E  69                 	db	105	;'i'
  9446   00FC5F  6C                 	db	108	;'l'
  9447   00FC60  65                 	db	101	;'e'
  9448   00FC61  20                 	db	32
  9449   00FC62  4F                 	db	79	;'O'
  9450   00FC63  70                 	db	112	;'p'
  9451   00FC64  65                 	db	101	;'e'
  9452   00FC65  6E                 	db	110	;'n'
  9453   00FC66  20                 	db	32
  9454   00FC67  45                 	db	69	;'E'
  9455   00FC68  72                 	db	114	;'r'
  9456   00FC69  72                 	db	114	;'r'
  9457   00FC6A  6F                 	db	111	;'o'
  9458   00FC6B  72                 	db	114	;'r'
  9459   00FC6C  2E                 	db	46
  9460   00FC6D  0D                 	db	13
  9461   00FC6E  0A                 	db	10
  9462   00FC6F  00                 	db	0
  9463   00FC70                     STR_38:
  9464                           
  9465                           ; BSR set to: 7
  9466   00FC70  66                 	db	102	;'f'
  9467   00FC71  5F                 	db	95	;'_'
  9468   00FC72  73                 	db	115	;'s'
  9469   00FC73  79                 	db	121	;'y'
  9470   00FC74  6E                 	db	110	;'n'
  9471   00FC75  63                 	db	99	;'c'
  9472   00FC76  28                 	db	40
  9473   00FC77  29                 	db	41
  9474   00FC78  3A                 	db	58	;':'
  9475   00FC79  20                 	db	32
  9476   00FC7A  45                 	db	69	;'E'
  9477   00FC7B  52                 	db	82	;'R'
  9478   00FC7C  52                 	db	82	;'R'
  9479   00FC7D  4F                 	db	79	;'O'
  9480   00FC7E  52                 	db	82	;'R'
  9481   00FC7F  20                 	db	32
  9482   00FC80  25                 	db	37
  9483   00FC81  64                 	db	100	;'d'
  9484   00FC82  0A                 	db	10
  9485   00FC83  0D                 	db	13
  9486   00FC84  00                 	db	0
  9487   00FC85                     
  9488                           ; BSR set to: 7
  9489   00FC85  6E                 	db	110	;'n'
  9490   00FC86  6F                 	db	111	;'o'
  9491   00FC87  20                 	db	32
  9492   00FC88  46                 	db	70	;'F'
  9493   00FC89  41                 	db	65	;'A'
  9494   00FC8A  54                 	db	84	;'T'
  9495   00FC8B  33                 	db	51	;'3'
  9496   00FC8C  32                 	db	50	;'2'
  9497   00FC8D  20                 	db	32
  9498   00FC8E  70                 	db	112	;'p'
  9499   00FC8F  61                 	db	97	;'a'
  9500   00FC90  72                 	db	114	;'r'
  9501   00FC91  74                 	db	116	;'t'
  9502   00FC92  69                 	db	105	;'i'
  9503   00FC93  74                 	db	116	;'t'
  9504   00FC94  69                 	db	105	;'i'
  9505   00FC95  6F                 	db	111	;'o'
  9506   00FC96  6E                 	db	110	;'n'
  9507   00FC97  0A                 	db	10
  9508   00FC98  0D                 	db	13
  9509   00FC99  00                 	db	0
  9510   00FC9A                     STR_97:
  9511                           
  9512                           ; BSR set to: 7
  9513   00FC9A  20                 	db	32
  9514   00FC9B  20                 	db	32
  9515   00FC9C  25                 	db	37
  9516   00FC9D  31                 	db	49	;'1'
  9517   00FC9E  32                 	db	50	;'2'
  9518   00FC9F  73                 	db	115	;'s'
  9519   00FCA0  09                 	db	9
  9520   00FCA1  25                 	db	37
  9521   00FCA2  6C                 	db	108	;'l'
  9522   00FCA3  64                 	db	100	;'d'
  9523   00FCA4  20                 	db	32
  9524   00FCA5  62                 	db	98	;'b'
  9525   00FCA6  79                 	db	121	;'y'
  9526   00FCA7  74                 	db	116	;'t'
  9527   00FCA8  65                 	db	101	;'e'
  9528   00FCA9  73                 	db	115	;'s'
  9529   00FCAA  2E                 	db	46
  9530   00FCAB  0D                 	db	13
  9531   00FCAC  0A                 	db	10
  9532   00FCAD  00                 	db	0
  9533   00FCAE                     STR_107:
  9534                           
  9535                           ; BSR set to: 7
  9536   00FCAE  52                 	db	82	;'R'
  9537   00FCAF  65                 	db	101	;'e'
  9538   00FCB0  6C                 	db	108	;'l'
  9539   00FCB1  6F                 	db	111	;'o'
  9540   00FCB2  61                 	db	97	;'a'
  9541   00FCB3  64                 	db	100	;'d'
  9542   00FCB4  20                 	db	32
  9543   00FCB5  6D                 	db	109	;'m'
  9544   00FCB6  6F                 	db	111	;'o'
  9545   00FCB7  6E                 	db	110	;'n'
  9546   00FCB8  69                 	db	105	;'i'
  9547   00FCB9  74                 	db	116	;'t'
  9548   00FCBA  6F                 	db	111	;'o'
  9549   00FCBB  72                 	db	114	;'r'
  9550   00FCBC  20                 	db	32
  9551   00FCBD  25                 	db	37
  9552   00FCBE  73                 	db	115	;'s'
  9553   00FCBF  0D                 	db	13
  9554   00FCC0  0A                 	db	10
  9555   00FCC1  00                 	db	0
  9556   00FCC2                     STR_141:
  9557                           
  9558                           ; BSR set to: 7
  9559   00FCC2  4F                 	db	79	;'O'
  9560   00FCC3  70                 	db	112	;'p'
  9561   00FCC4  65                 	db	101	;'e'
  9562   00FCC5  72                 	db	114	;'r'
  9563   00FCC6  61                 	db	97	;'a'
  9564   00FCC7  74                 	db	116	;'t'
  9565   00FCC8  69                 	db	105	;'i'
  9566   00FCC9  6F                 	db	111	;'o'
  9567   00FCCA  6E                 	db	110	;'n'
  9568   00FCCB  61                 	db	97	;'a'
  9569   00FCCC  6C                 	db	108	;'l'
  9570   00FCCD  20                 	db	32
  9571   00FCCE  4D                 	db	77	;'M'
  9572   00FCCF  6F                 	db	111	;'o'
  9573   00FCD0  64                 	db	100	;'d'
  9574   00FCD1  65                 	db	101	;'e'
  9575   00FCD2  20                 	db	32
  9576   00FCD3  3A                 	db	58	;':'
  9577   00FCD4  20                 	db	32
  9578   00FCD5  00                 	db	0
  9579   00FCD6                     
  9580                           ; BSR set to: 7
  9581   00FCD6  53                 	db	83	;'S'
  9582   00FCD7  44                 	db	68	;'D'
  9583   00FCD8  20                 	db	32
  9584   00FCD9  43                 	db	67	;'C'
  9585   00FCDA  61                 	db	97	;'a'
  9586   00FCDB  72                 	db	114	;'r'
  9587   00FCDC  64                 	db	100	;'d'
  9588   00FCDD  3A                 	db	58	;':'
  9589   00FCDE  20                 	db	32
  9590   00FCDF  74                 	db	116	;'t'
  9591   00FCE0  69                 	db	105	;'i'
  9592   00FCE1  6D                 	db	109	;'m'
  9593   00FCE2  65                 	db	101	;'e'
  9594   00FCE3  6F                 	db	111	;'o'
  9595   00FCE4  75                 	db	117	;'u'
  9596   00FCE5  74                 	db	116	;'t'
  9597   00FCE6  0A                 	db	10
  9598   00FCE7  0D                 	db	13
  9599   00FCE8  00                 	db	0
  9600   00FCE9                     STR_91:
  9601                           
  9602                           ; BSR set to: 7
  9603   00FCE9  46                 	db	70	;'F'
  9604   00FCEA  69                 	db	105	;'i'
  9605   00FCEB  6C                 	db	108	;'l'
  9606   00FCEC  65                 	db	101	;'e'
  9607   00FCED  20                 	db	32
  9608   00FCEE  72                 	db	114	;'r'
  9609   00FCEF  65                 	db	101	;'e'
  9610   00FCF0  61                 	db	97	;'a'
  9611   00FCF1  64                 	db	100	;'d'
  9612   00FCF2  20                 	db	32
  9613   00FCF3  65                 	db	101	;'e'
  9614   00FCF4  72                 	db	114	;'r'
  9615   00FCF5  72                 	db	114	;'r'
  9616   00FCF6  6F                 	db	111	;'o'
  9617   00FCF7  72                 	db	114	;'r'
  9618   00FCF8  21                 	db	33
  9619   00FCF9  0D                 	db	13
  9620   00FCFA  0A                 	db	10
  9621   00FCFB  00                 	db	0
  9622   00FCFC                     STR_84:
  9623                           
  9624                           ; BSR set to: 7
  9625   00FCFC  46                 	db	70	;'F'
  9626   00FCFD  69                 	db	105	;'i'
  9627   00FCFE  6C                 	db	108	;'l'
  9628   00FCFF  65                 	db	101	;'e'
  9629   00FD00  20                 	db	32
  9630   00FD01  4C                 	db	76	;'L'
  9631   00FD02  6F                 	db	111	;'o'
  9632   00FD03  61                 	db	97	;'a'
  9633   00FD04  64                 	db	100	;'d'
  9634   00FD05  20                 	db	32
  9635   00FD06  45                 	db	69	;'E'
  9636   00FD07  72                 	db	114	;'r'
  9637   00FD08  72                 	db	114	;'r'
  9638   00FD09  6F                 	db	111	;'o'
  9639   00FD0A  72                 	db	114	;'r'
  9640   00FD0B  2E                 	db	46
  9641   00FD0C  0D                 	db	13
  9642   00FD0D  0A                 	db	10
  9643   00FD0E  00                 	db	0
  9644   00FD0F                     STR_164:
  9645                           
  9646                           ; BSR set to: 7
  9647   00FD0F  46                 	db	70	;'F'
  9648   00FD10  69                 	db	105	;'i'
  9649   00FD11  6C                 	db	108	;'l'
  9650   00FD12  65                 	db	101	;'e'
  9651   00FD13  20                 	db	32
  9652   00FD14  72                 	db	114	;'r'
  9653   00FD15  65                 	db	101	;'e'
  9654   00FD16  61                 	db	97	;'a'
  9655   00FD17  64                 	db	100	;'d'
  9656   00FD18  20                 	db	32
  9657   00FD19  65                 	db	101	;'e'
  9658   00FD1A  72                 	db	114	;'r'
  9659   00FD1B  72                 	db	114	;'r'
  9660   00FD1C  6F                 	db	111	;'o'
  9661   00FD1D  72                 	db	114	;'r'
  9662   00FD1E  2E                 	db	46
  9663   00FD1F  0D                 	db	13
  9664   00FD20  0A                 	db	10
  9665   00FD21  00                 	db	0
  9666   00FD22                     STR_125:
  9667                           
  9668                           ; BSR set to: 7
  9669   00FD22  20                 	db	32
  9670   00FD23  20                 	db	32
  9671   00FD24  53                 	db	83	;'S'
  9672   00FD25  48                 	db	72	;'H'
  9673   00FD26  4F                 	db	79	;'O'
  9674   00FD27  57                 	db	87	;'W'
  9675   00FD28  20                 	db	32
  9676   00FD29  66                 	db	102	;'f'
  9677   00FD2A  69                 	db	105	;'i'
  9678   00FD2B  6C                 	db	108	;'l'
  9679   00FD2C  65                 	db	101	;'e'
  9680   00FD2D  20                 	db	32
  9681   00FD2E  6E                 	db	110	;'n'
  9682   00FD2F  61                 	db	97	;'a'
  9683   00FD30  6D                 	db	109	;'m'
  9684   00FD31  65                 	db	101	;'e'
  9685   00FD32  0D                 	db	13
  9686   00FD33  0A                 	db	10
  9687   00FD34  00                 	db	0
  9688   00FD35                     STR_151:
  9689                           
  9690                           ; BSR set to: 7
  9691   00FD35  4D                 	db	77	;'M'
  9692   00FD36  4E                 	db	78	;'N'
  9693   00FD37  49                 	db	73	;'I'
  9694   00FD38  20                 	db	32
  9695   00FD39  3A                 	db	58	;':'
  9696   00FD3A  20                 	db	32
  9697   00FD3B  4E                 	db	78	;'N'
  9698   00FD3C  6F                 	db	111	;'o'
  9699   00FD3D  20                 	db	32
  9700   00FD3E  73                 	db	115	;'s'
  9701   00FD3F  75                 	db	117	;'u'
  9702   00FD40  70                 	db	112	;'p'
  9703   00FD41  70                 	db	112	;'p'
  9704   00FD42  6F                 	db	111	;'o'
  9705   00FD43  72                 	db	114	;'r'
  9706   00FD44  74                 	db	116	;'t'
  9707   00FD45  0D                 	db	13
  9708   00FD46  0A                 	db	10
  9709   00FD47  00                 	db	0
  9710   00FD48                     STR_149:
  9711                           
  9712                           ; BSR set to: 7
  9713   00FD48  49                 	db	73	;'I'
  9714   00FD49  52                 	db	82	;'R'
  9715   00FD4A  51                 	db	81	;'Q'
  9716   00FD4B  20                 	db	32
  9717   00FD4C  3A                 	db	58	;':'
  9718   00FD4D  20                 	db	32
  9719   00FD4E  4E                 	db	78	;'N'
  9720   00FD4F  6F                 	db	111	;'o'
  9721   00FD50  20                 	db	32
  9722   00FD51  73                 	db	115	;'s'
  9723   00FD52  75                 	db	117	;'u'
  9724   00FD53  70                 	db	112	;'p'
  9725   00FD54  70                 	db	112	;'p'
  9726   00FD55  6F                 	db	111	;'o'
  9727   00FD56  72                 	db	114	;'r'
  9728   00FD57  74                 	db	116	;'t'
  9729   00FD58  2C                 	db	44
  9730   00FD59  20                 	db	32
  9731   00FD5A  00                 	db	0
  9732   00FD5B                     
  9733                           ; BSR set to: 7
  9734   00FD5B  6E                 	db	110	;'n'
  9735   00FD5C  6F                 	db	111	;'o'
  9736   00FD5D  20                 	db	32
  9737   00FD5E  4D                 	db	77	;'M'
  9738   00FD5F  42                 	db	66	;'B'
  9739   00FD60  52                 	db	82	;'R'
  9740   00FD61  20                 	db	32
  9741   00FD62  73                 	db	115	;'s'
  9742   00FD63  69                 	db	105	;'i'
  9743   00FD64  67                 	db	103	;'g'
  9744   00FD65  6E                 	db	110	;'n'
  9745   00FD66  61                 	db	97	;'a'
  9746   00FD67  74                 	db	116	;'t'
  9747   00FD68  75                 	db	117	;'u'
  9748   00FD69  72                 	db	114	;'r'
  9749   00FD6A  65                 	db	101	;'e'
  9750   00FD6B  0A                 	db	10
  9751   00FD6C  0D                 	db	13
  9752   00FD6D  00                 	db	0
  9753   00FD6E                     
  9754                           ; BSR set to: 7
  9755   00FD6E  53                 	db	83	;'S'
  9756   00FD6F  44                 	db	68	;'D'
  9757   00FD70  20                 	db	32
  9758   00FD71  43                 	db	67	;'C'
  9759   00FD72  61                 	db	97	;'a'
  9760   00FD73  72                 	db	114	;'r'
  9761   00FD74  64                 	db	100	;'d'
  9762   00FD75  3A                 	db	58	;':'
  9763   00FD76  20                 	db	32
  9764   00FD77  72                 	db	114	;'r'
  9765   00FD78  65                 	db	101	;'e'
  9766   00FD79  61                 	db	97	;'a'
  9767   00FD7A  64                 	db	100	;'d'
  9768   00FD7B  79                 	db	121	;'y'
  9769   00FD7C  2E                 	db	46
  9770   00FD7D  0A                 	db	10
  9771   00FD7E  0D                 	db	13
  9772   00FD7F  00                 	db	0
  9773   00FD80                     STR_152:
  9774                           
  9775                           ; BSR set to: 7
  9776   00FD80  55                 	db	85	;'U'
  9777   00FD81  73                 	db	115	;'s'
  9778   00FD82  69                 	db	105	;'i'
  9779   00FD83  6E                 	db	110	;'n'
  9780   00FD84  67                 	db	103	;'g'
  9781   00FD85  20                 	db	32
  9782   00FD86  42                 	db	66	;'B'
  9783   00FD87  49                 	db	73	;'I'
  9784   00FD88  4F                 	db	79	;'O'
  9785   00FD89  53                 	db	83	;'S'
  9786   00FD8A  20                 	db	32
  9787   00FD8B  43                 	db	67	;'C'
  9788   00FD8C  41                 	db	65	;'A'
  9789   00FD8D  4C                 	db	76	;'L'
  9790   00FD8E  4C                 	db	76	;'L'
  9791   00FD8F  0A                 	db	10
  9792   00FD90  0D                 	db	13
  9793   00FD91  00                 	db	0
  9794   00FD92                     
  9795                           ; BSR set to: 7
  9796   00FD92  6E                 	db	110	;'n'
  9797   00FD93  6F                 	db	111	;'o'
  9798   00FD94  20                 	db	32
  9799   00FD95  76                 	db	118	;'v'
  9800   00FD96  61                 	db	97	;'a'
  9801   00FD97  6C                 	db	108	;'l'
  9802   00FD98  69                 	db	105	;'i'
  9803   00FD99  64                 	db	100	;'d'
  9804   00FD9A  20                 	db	32
  9805   00FD9B  76                 	db	118	;'v'
  9806   00FD9C  6F                 	db	111	;'o'
  9807   00FD9D  6C                 	db	108	;'l'
  9808   00FD9E  75                 	db	117	;'u'
  9809   00FD9F  6D                 	db	109	;'m'
  9810   00FDA0  65                 	db	101	;'e'
  9811   00FDA1  0A                 	db	10
  9812   00FDA2  0D                 	db	13
  9813   00FDA3  00                 	db	0
  9814   00FDA4                     STR_173:
  9815                           
  9816                           ; BSR set to: 7
  9817   00FDA4  53                 	db	83	;'S'
  9818   00FDA5  50                 	db	80	;'P'
  9819   00FDA6  49                 	db	73	;'I'
  9820   00FDA7  5F                 	db	95	;'_'
  9821   00FDA8  53                 	db	83	;'S'
  9822   00FDA9  44                 	db	68	;'D'
  9823   00FDAA  5F                 	db	95	;'_'
  9824   00FDAB  63                 	db	99	;'c'
  9825   00FDAC  6F                 	db	111	;'o'
  9826   00FDAD  6E                 	db	110	;'n'
  9827   00FDAE  66                 	db	102	;'f'
  9828   00FDAF  69                 	db	105	;'i'
  9829   00FDB0  67                 	db	103	;'g'
  9830   00FDB1  75                 	db	117	;'u'
  9831   00FDB2  72                 	db	114	;'r'
  9832   00FDB3  65                 	db	101	;'e'
  9833   00FDB4  00                 	db	0
  9834   00FDB5                     STR_144:
  9835                           
  9836                           ; BSR set to: 7
  9837   00FDB5  43                 	db	67	;'C'
  9838   00FDB6  53                 	db	83	;'S'
  9839   00FDB7  54                 	db	84	;'T'
  9840   00FDB8  41                 	db	65	;'A'
  9841   00FDB9  52                 	db	82	;'R'
  9842   00FDBA  54                 	db	84	;'T'
  9843   00FDBB  20                 	db	32
  9844   00FDBC  3A                 	db	58	;':'
  9845   00FDBD  20                 	db	32
  9846   00FDBE  24                 	db	36
  9847   00FDBF  25                 	db	37
  9848   00FDC0  30                 	db	48	;'0'
  9849   00FDC1  34                 	db	52	;'4'
  9850   00FDC2  58                 	db	88	;'X'
  9851   00FDC3  0D                 	db	13
  9852   00FDC4  0A                 	db	10
  9853   00FDC5  00                 	db	0
  9854   00FDC6                     STR_145:
  9855                           
  9856                           ; BSR set to: 7
  9857   00FDC6  57                 	db	87	;'W'
  9858   00FDC7  53                 	db	83	;'S'
  9859   00FDC8  54                 	db	84	;'T'
  9860   00FDC9  41                 	db	65	;'A'
  9861   00FDCA  52                 	db	82	;'R'
  9862   00FDCB  54                 	db	84	;'T'
  9863   00FDCC  20                 	db	32
  9864   00FDCD  3A                 	db	58	;':'
  9865   00FDCE  20                 	db	32
  9866   00FDCF  24                 	db	36
  9867   00FDD0  25                 	db	37
  9868   00FDD1  30                 	db	48	;'0'
  9869   00FDD2  34                 	db	52	;'4'
  9870   00FDD3  58                 	db	88	;'X'
  9871   00FDD4  0D                 	db	13
  9872   00FDD5  0A                 	db	10
  9873   00FDD6  00                 	db	0
  9874   00FDD7                     STR_120:
  9875                           
  9876                           ; BSR set to: 7
  9877   00FDD7  20                 	db	32
  9878   00FDD8  20                 	db	32
  9879   00FDD9  4D                 	db	77	;'M'
  9880   00FDDA  4F                 	db	79	;'O'
  9881   00FDDB  4E                 	db	78	;'N'
  9882   00FDDC  49                 	db	73	;'I'
  9883   00FDDD  54                 	db	84	;'T'
  9884   00FDDE  4F                 	db	79	;'O'
  9885   00FDDF  52                 	db	82	;'R'
  9886   00FDE0  20                 	db	32
  9887   00FDE1  5B                 	db	91	;'['
  9888   00FDE2  57                 	db	87	;'W'
  9889   00FDE3  5D                 	db	93	;']'
  9890   00FDE4  0D                 	db	13
  9891   00FDE5  0A                 	db	10
  9892   00FDE6  00                 	db	0
  9893   00FDE7                     STR_150:
  9894                           
  9895                           ; BSR set to: 7
  9896   00FDE7  4D                 	db	77	;'M'
  9897   00FDE8  4E                 	db	78	;'N'
  9898   00FDE9  49                 	db	73	;'I'
  9899   00FDEA  20                 	db	32
  9900   00FDEB  3A                 	db	58	;':'
  9901   00FDEC  20                 	db	32
  9902   00FDED  53                 	db	83	;'S'
  9903   00FDEE  75                 	db	117	;'u'
  9904   00FDEF  70                 	db	112	;'p'
  9905   00FDF0  70                 	db	112	;'p'
  9906   00FDF1  6F                 	db	111	;'o'
  9907   00FDF2  72                 	db	114	;'r'
  9908   00FDF3  74                 	db	116	;'t'
  9909   00FDF4  0D                 	db	13
  9910   00FDF5  0A                 	db	10
  9911   00FDF6  00                 	db	0
  9912   00FDF7                     STR_148:
  9913                           
  9914                           ; BSR set to: 7
  9915   00FDF7  49                 	db	73	;'I'
  9916   00FDF8  52                 	db	82	;'R'
  9917   00FDF9  51                 	db	81	;'Q'
  9918   00FDFA  20                 	db	32
  9919   00FDFB  3A                 	db	58	;':'
  9920   00FDFC  20                 	db	32
  9921   00FDFD  53                 	db	83	;'S'
  9922   00FDFE  75                 	db	117	;'u'
  9923   00FDFF  70                 	db	112	;'p'
  9924   00FE00  70                 	db	112	;'p'
  9925   00FE01  6F                 	db	111	;'o'
  9926   00FE02  72                 	db	114	;'r'
  9927   00FE03  74                 	db	116	;'t'
  9928   00FE04  2C                 	db	44
  9929   00FE05  20                 	db	32
  9930   00FE06  00                 	db	0
  9931   00FE07                     STR_96:
  9932                           
  9933                           ; BSR set to: 7
  9934   00FE07  20                 	db	32
  9935   00FE08  20                 	db	32
  9936   00FE09  25                 	db	37
  9937   00FE0A  31                 	db	49	;'1'
  9938   00FE0B  32                 	db	50	;'2'
  9939   00FE0C  73                 	db	115	;'s'
  9940   00FE0D  09                 	db	9
  9941   00FE0E  3C                 	db	60	;'<'
  9942   00FE0F  44                 	db	68	;'D'
  9943   00FE10  49                 	db	73	;'I'
  9944   00FE11  52                 	db	82	;'R'
  9945   00FE12  3E                 	db	62	;'>'
  9946   00FE13  0D                 	db	13
  9947   00FE14  0A                 	db	10
  9948   00FE15  00                 	db	0
  9949   00FE16                     STR_161:
  9950                           
  9951                           ; BSR set to: 7
  9952   00FE16  54                 	db	84	;'T'
  9953   00FE17  65                 	db	101	;'e'
  9954   00FE18  72                 	db	114	;'r'
  9955   00FE19  6D                 	db	109	;'m'
  9956   00FE1A  69                 	db	105	;'i'
  9957   00FE1B  6E                 	db	110	;'n'
  9958   00FE1C  61                 	db	97	;'a'
  9959   00FE1D  74                 	db	116	;'t'
  9960   00FE1E  65                 	db	101	;'e'
  9961   00FE1F  20                 	db	32
  9962   00FE20  25                 	db	37
  9963   00FE21  73                 	db	115	;'s'
  9964   00FE22  0D                 	db	13
  9965   00FE23  0A                 	db	10
  9966   00FE24  00                 	db	0
  9967   00FE25                     STR_27:
  9968                           
  9969                           ; BSR set to: 7
  9970   00FE25  2A                 	db	42
  9971   00FE26  2B                 	db	43
  9972   00FE27  2C                 	db	44
  9973   00FE28  3A                 	db	58	;':'
  9974   00FE29  3B                 	db	59	;';'
  9975   00FE2A  3C                 	db	60	;'<'
  9976   00FE2B  3D                 	db	61	;'='
  9977   00FE2C  3E                 	db	62	;'>'
  9978   00FE2D  5B                 	db	91	;'['
  9979   00FE2E  5D                 	db	93	;']'
  9980   00FE2F  7C                 	db	124
  9981   00FE30  22                 	db	34
  9982   00FE31  3F                 	db	63	;'?'
  9983   00FE32  7F                 	db	127
  9984   00FE33  00                 	db	0
  9985   00FE34                     STR_171:
  9986                           
  9987                           ; BSR set to: 7
  9988   00FE34  4E                 	db	78	;'N'
  9989   00FE35  6F                 	db	111	;'o'
  9990   00FE36  20                 	db	32
  9991   00FE37  53                 	db	83	;'S'
  9992   00FE38  44                 	db	68	;'D'
  9993   00FE39  20                 	db	32
  9994   00FE3A  43                 	db	67	;'C'
  9995   00FE3B  61                 	db	97	;'a'
  9996   00FE3C  72                 	db	114	;'r'
  9997   00FE3D  64                 	db	100	;'d'
  9998   00FE3E  3F                 	db	63	;'?'
  9999   00FE3F  0A                 	db	10
 10000   00FE40  0D                 	db	13
 10001   00FE41  00                 	db	0
 10002   00FE42                     STR_90:
 10003                           
 10004                           ; BSR set to: 7
 10005   00FE42  25                 	db	37
 10006   00FE43  73                 	db	115	;'s'
 10007   00FE44  20                 	db	32
 10008   00FE45  3A                 	db	58	;':'
 10009   00FE46  20                 	db	32
 10010   00FE47  24                 	db	36
 10011   00FE48  25                 	db	37
 10012   00FE49  30                 	db	48	;'0'
 10013   00FE4A  36                 	db	54	;'6'
 10014   00FE4B  6C                 	db	108	;'l'
 10015   00FE4C  78                 	db	120	;'x'
 10016   00FE4D  0D                 	db	13
 10017   00FE4E  0A                 	db	10
 10018   00FE4F  00                 	db	0
 10019   00FE50                     STR_139:
 10020                           
 10021                           ; BSR set to: 7
 10022   00FE50  53                 	db	83	;'S'
 10023   00FE51  74                 	db	116	;'t'
 10024   00FE52  61                 	db	97	;'a'
 10025   00FE53  6E                 	db	110	;'n'
 10026   00FE54  64                 	db	100	;'d'
 10027   00FE55  2D                 	db	45
 10028   00FE56  61                 	db	97	;'a'
 10029   00FE57  6C                 	db	108	;'l'
 10030   00FE58  6F                 	db	111	;'o'
 10031   00FE59  6E                 	db	110	;'n'
 10032   00FE5A  65                 	db	101	;'e'
 10033   00FE5B  0A                 	db	10
 10034   00FE5C  0D                 	db	13
 10035   00FE5D  00                 	db	0
 10036   00FE5E                     STR_74:
 10037                           
 10038                           ; BSR set to: 7
 10039   00FE5E  0D                 	db	13
 10040   00FE5F  0A                 	db	10
 10041   00FE60  42                 	db	66	;'B'
 10042   00FE61  6F                 	db	111	;'o'
 10043   00FE62  61                 	db	97	;'a'
 10044   00FE63  72                 	db	114	;'r'
 10045   00FE64  64                 	db	100	;'d'
 10046   00FE65  3A                 	db	58	;':'
 10047   00FE66  20                 	db	32
 10048   00FE67  25                 	db	37
 10049   00FE68  73                 	db	115	;'s'
 10050   00FE69  0A                 	db	10
 10051   00FE6A  0D                 	db	13
 10052   00FE6B  00                 	db	0
 10053   00FE6C                     STR_73:
 10054                           
 10055                           ; BSR set to: 7
 10056   00FE6C  53                 	db	83	;'S'
 10057   00FE6D  79                 	db	121	;'y'
 10058   00FE6E  73                 	db	115	;'s'
 10059   00FE6F  74                 	db	116	;'t'
 10060   00FE70  65                 	db	101	;'e'
 10061   00FE71  6D                 	db	109	;'m'
 10062   00FE72  20                 	db	32
 10063   00FE73  73                 	db	115	;'s'
 10064   00FE74  74                 	db	116	;'t'
 10065   00FE75  6F                 	db	111	;'o'
 10066   00FE76  70                 	db	112	;'p'
 10067   00FE77  21                 	db	33
 10068   00FE78  21                 	db	33
 10069   00FE79  00                 	db	0
 10070   00FE7A                     STR_127:
 10071                           
 10072                           ; BSR set to: 7
 10073   00FE7A  20                 	db	32
 10074   00FE7B  20                 	db	32
 10075   00FE7C  48                 	db	72	;'H'
 10076   00FE7D  45                 	db	69	;'E'
 10077   00FE7E  4C                 	db	76	;'L'
 10078   00FE7F  50                 	db	80	;'P'
 10079   00FE80  20                 	db	32
 10080   00FE81  7C                 	db	124
 10081   00FE82  20                 	db	32
 10082   00FE83  3F                 	db	63	;'?'
 10083   00FE84  0D                 	db	13
 10084   00FE85  0A                 	db	10
 10085   00FE86  00                 	db	0
 10086   00FE87                     STR_138:
 10087                           
 10088                           ; BSR set to: 7
 10089   00FE87  46                 	db	70	;'F'
 10090   00FE88  69                 	db	105	;'i'
 10091   00FE89  6C                 	db	108	;'l'
 10092   00FE8A  65                 	db	101	;'e'
 10093   00FE8B  20                 	db	32
 10094   00FE8C  54                 	db	84	;'T'
 10095   00FE8D  79                 	db	121	;'y'
 10096   00FE8E  70                 	db	112	;'p'
 10097   00FE8F  65                 	db	101	;'e'
 10098   00FE90  20                 	db	32
 10099   00FE91  3A                 	db	58	;':'
 10100   00FE92  20                 	db	32
 10101   00FE93  00                 	db	0
 10102   00FE94                     STR_95:
 10103                           
 10104                           ; BSR set to: 7
 10105   00FE94  3C                 	db	60	;'<'
 10106   00FE95  20                 	db	32
 10107   00FE96  25                 	db	37
 10108   00FE97  73                 	db	115	;'s'
 10109   00FE98  2F                 	db	47
 10110   00FE99  25                 	db	37
 10111   00FE9A  73                 	db	115	;'s'
 10112   00FE9B  20                 	db	32
 10113   00FE9C  3E                 	db	62	;'>'
 10114   00FE9D  0D                 	db	13
 10115   00FE9E  0A                 	db	10
 10116   00FE9F  00                 	db	0
 10117   00FEA0                     STR_87:
 10118                           
 10119                           ; BSR set to: 7
 10120   00FEA0  0D                 	db	13
 10121   00FEA1  0A                 	db	10
 10122   00FEA2  4C                 	db	76	;'L'
 10123   00FEA3  6F                 	db	111	;'o'
 10124   00FEA4  61                 	db	97	;'a'
 10125   00FEA5  64                 	db	100	;'d'
 10126   00FEA6  20                 	db	32
 10127   00FEA7  25                 	db	37
 10128   00FEA8  73                 	db	115	;'s'
 10129   00FEA9  0D                 	db	13
 10130   00FEAA  0A                 	db	10
 10131   00FEAB  00                 	db	0
 10132   00FEAC                     STR_121:
 10133                           
 10134                           ; BSR set to: 7
 10135   00FEAC  20                 	db	32
 10136   00FEAD  20                 	db	32
 10137   00FEAE  43                 	db	67	;'C'
 10138   00FEAF  53                 	db	83	;'S'
 10139   00FEB0  54                 	db	84	;'T'
 10140   00FEB1  41                 	db	65	;'A'
 10141   00FEB2  52                 	db	82	;'R'
 10142   00FEB3  54                 	db	84	;'T'
 10143   00FEB4  0D                 	db	13
 10144   00FEB5  0A                 	db	10
 10145   00FEB6  00                 	db	0
 10146   00FEB7                     STR_122:
 10147                           
 10148                           ; BSR set to: 7
 10149   00FEB7  20                 	db	32
 10150   00FEB8  20                 	db	32
 10151   00FEB9  57                 	db	87	;'W'
 10152   00FEBA  53                 	db	83	;'S'
 10153   00FEBB  54                 	db	84	;'T'
 10154   00FEBC  41                 	db	65	;'A'
 10155   00FEBD  52                 	db	82	;'R'
 10156   00FEBE  54                 	db	84	;'T'
 10157   00FEBF  0D                 	db	13
 10158   00FEC0  0A                 	db	10
 10159   00FEC1  00                 	db	0
 10160   00FEC2                     STR_49:
 10161                           
 10162                           ; BSR set to: 7
 10163   00FEC2  4D                 	db	77	;'M'
 10164   00FEC3  45                 	db	69	;'E'
 10165   00FEC4  5A                 	db	90	;'Z'
 10166   00FEC5  57                 	db	87	;'W'
 10167   00FEC6  30                 	db	48	;'0'
 10168   00FEC7  32                 	db	50	;'2'
 10169   00FEC8  2E                 	db	46
 10170   00FEC9  43                 	db	67	;'C'
 10171   00FECA  46                 	db	70	;'F'
 10172   00FECB  47                 	db	71	;'G'
 10173   00FECC  00                 	db	0
 10174   00FECD                     STR_50:
 10175                           
 10176                           ; BSR set to: 7
 10177   00FECD  4D                 	db	77	;'M'
 10178   00FECE  45                 	db	69	;'E'
 10179   00FECF  5A                 	db	90	;'Z'
 10180   00FED0  57                 	db	87	;'W'
 10181   00FED1  31                 	db	49	;'1'
 10182   00FED2  36                 	db	54	;'6'
 10183   00FED3  2E                 	db	46
 10184   00FED4  43                 	db	67	;'C'
 10185   00FED5  46                 	db	70	;'F'
 10186   00FED6  47                 	db	71	;'G'
 10187   00FED7  00                 	db	0
 10188   00FED8                     STR_51:
 10189                           
 10190                           ; BSR set to: 7
 10191   00FED8  2F                 	db	47
 10192   00FED9  4D                 	db	77	;'M'
 10193   00FEDA  4F                 	db	79	;'O'
 10194   00FEDB  4E                 	db	78	;'N'
 10195   00FEDC  30                 	db	48	;'0'
 10196   00FEDD  32                 	db	50	;'2'
 10197   00FEDE  2E                 	db	46
 10198   00FEDF  53                 	db	83	;'S'
 10199   00FEE0  59                 	db	89	;'Y'
 10200   00FEE1  53                 	db	83	;'S'
 10201   00FEE2  00                 	db	0
 10202   00FEE3                     STR_52:
 10203                           
 10204                           ; BSR set to: 7
 10205   00FEE3  2F                 	db	47
 10206   00FEE4  4D                 	db	77	;'M'
 10207   00FEE5  4F                 	db	79	;'O'
 10208   00FEE6  4E                 	db	78	;'N'
 10209   00FEE7  31                 	db	49	;'1'
 10210   00FEE8  36                 	db	54	;'6'
 10211   00FEE9  2E                 	db	46
 10212   00FEEA  53                 	db	83	;'S'
 10213   00FEEB  59                 	db	89	;'Y'
 10214   00FEEC  53                 	db	83	;'S'
 10215   00FEED  00                 	db	0
 10216   00FEEE                     STR_94:
 10217                           
 10218                           ; BSR set to: 7
 10219   00FEEE  3C                 	db	60	;'<'
 10220   00FEEF  20                 	db	32
 10221   00FEF0  2F                 	db	47
 10222   00FEF1  25                 	db	37
 10223   00FEF2  73                 	db	115	;'s'
 10224   00FEF3  20                 	db	32
 10225   00FEF4  3E                 	db	62	;'>'
 10226   00FEF5  0D                 	db	13
 10227   00FEF6  0A                 	db	10
 10228   00FEF7  00                 	db	0
 10229   00FEF8                     STR_126:
 10230                           
 10231                           ; BSR set to: 7
 10232   00FEF8  20                 	db	32
 10233   00FEF9  20                 	db	32
 10234   00FEFA  46                 	db	70	;'F'
 10235   00FEFB  4C                 	db	76	;'L'
 10236   00FEFC  41                 	db	65	;'A'
 10237   00FEFD  53                 	db	83	;'S'
 10238   00FEFE  48                 	db	72	;'H'
 10239   00FEFF  0D                 	db	13
 10240   00FF00  0A                 	db	10
 10241   00FF01  00                 	db	0
 10242   00FF02                     STR_140:
 10243                           
 10244                           ; BSR set to: 7
 10245   00FF02  4D                 	db	77	;'M'
 10246   00FF03  4F                 	db	79	;'O'
 10247   00FF04  4E                 	db	78	;'N'
 10248   00FF05  49                 	db	73	;'I'
 10249   00FF06  54                 	db	84	;'T'
 10250   00FF07  4F                 	db	79	;'O'
 10251   00FF08  52                 	db	82	;'R'
 10252   00FF09  0A                 	db	10
 10253   00FF0A  0D                 	db	13
 10254   00FF0B  00                 	db	0
 10255   00FF0C                     STR_93:
 10256                           
 10257                           ; BSR set to: 7
 10258   00FF0C  3C                 	db	60	;'<'
 10259   00FF0D  20                 	db	32
 10260   00FF0E  25                 	db	37
 10261   00FF0F  73                 	db	115	;'s'
 10262   00FF10  20                 	db	32
 10263   00FF11  3E                 	db	62	;'>'
 10264   00FF12  0D                 	db	13
 10265   00FF13  0A                 	db	10
 10266   00FF14  00                 	db	0
 10267   00FF15                     STR_123:
 10268                           
 10269                           ; BSR set to: 7
 10270   00FF15  20                 	db	32
 10271   00FF16  20                 	db	32
 10272   00FF17  52                 	db	82	;'R'
 10273   00FF18  45                 	db	69	;'E'
 10274   00FF19  54                 	db	84	;'T'
 10275   00FF1A  49                 	db	73	;'I'
 10276   00FF1B  0D                 	db	13
 10277   00FF1C  0A                 	db	10
 10278   00FF1D  00                 	db	0
 10279   00FF1E                     STR_29:
 10280                           
 10281                           ; BSR set to: 7
 10282   00FF1E  46                 	db	70	;'F'
 10283   00FF1F  41                 	db	65	;'A'
 10284   00FF20  54                 	db	84	;'T'
 10285   00FF21  33                 	db	51	;'3'
 10286   00FF22  32                 	db	50	;'2'
 10287   00FF23  20                 	db	32
 10288   00FF24  20                 	db	32
 10289   00FF25  20                 	db	32
 10290   00FF26  00                 	db	0
 10291   00FF27                     STR_22:
 10292                           
 10293                           ; BSR set to: 7
 10294   00FF27  25                 	db	37
 10295   00FF28  73                 	db	115	;'s'
 10296   00FF29  25                 	db	37
 10297   00FF2A  30                 	db	48	;'0'
 10298   00FF2B  36                 	db	54	;'6'
 10299   00FF2C  6C                 	db	108	;'l'
 10300   00FF2D  78                 	db	120	;'x'
 10301   00FF2E  3A                 	db	58	;':'
 10302   00FF2F  00                 	db	0
 10303   00FF30                     STR_124:
 10304                           
 10305                           ; BSR set to: 7
 10306   00FF30  20                 	db	32
 10307   00FF31  20                 	db	32
 10308   00FF32  52                 	db	82	;'R'
 10309   00FF33  45                 	db	69	;'E'
 10310   00FF34  47                 	db	71	;'G'
 10311   00FF35  0D                 	db	13
 10312   00FF36  0A                 	db	10
 10313   00FF37  00                 	db	0
 10314   00FF38                     STR_104:
 10315                           
 10316                           ; BSR set to: 7
 10317   00FF38  20                 	db	32
 10318   00FF39  25                 	db	37
 10319   00FF3A  31                 	db	49	;'1'
 10320   00FF3B  32                 	db	50	;'2'
 10321   00FF3C  73                 	db	115	;'s'
 10322   00FF3D  20                 	db	32
 10323   00FF3E  20                 	db	32
 10324   00FF3F  00                 	db	0
 10325   00FF40                     STR_103:
 10326                           
 10327                           ; BSR set to: 7
 10328   00FF40  5B                 	db	91	;'['
 10329   00FF41  25                 	db	37
 10330   00FF42  31                 	db	49	;'1'
 10331   00FF43  32                 	db	50	;'2'
 10332   00FF44  73                 	db	115	;'s'
 10333   00FF45  5D                 	db	93	;']'
 10334   00FF46  20                 	db	32
 10335   00FF47  00                 	db	0
 10336   00FF48                     STR_47:
 10337                           
 10338                           ; BSR set to: 7
 10339   00FF48  4D                 	db	77	;'M'
 10340   00FF49  45                 	db	69	;'E'
 10341   00FF4A  5A                 	db	90	;'Z'
 10342   00FF4B  57                 	db	87	;'W'
 10343   00FF4C  36                 	db	54	;'6'
 10344   00FF4D  35                 	db	53	;'5'
 10345   00FF4E  43                 	db	67	;'C'
 10346   00FF4F  00                 	db	0
 10347   00FF50                     STR_53:
 10348                           
 10349                           ; BSR set to: 7
 10350   00FF50  43                 	db	67	;'C'
 10351   00FF51  4C                 	db	76	;'L'
 10352   00FF52  4B                 	db	75	;'K'
 10353   00FF53  5F                 	db	95	;'_'
 10354   00FF54  49                 	db	73	;'I'
 10355   00FF55  4E                 	db	78	;'N'
 10356   00FF56  43                 	db	67	;'C'
 10357   00FF57  00                 	db	0
 10358   00FF58                     STR_54:
 10359                           
 10360                           ; BSR set to: 7
 10361   00FF58  52                 	db	82	;'R'
 10362   00FF59  45                 	db	69	;'E'
 10363   00FF5A  51                 	db	81	;'Q'
 10364   00FF5B  5F                 	db	95	;'_'
 10365   00FF5C  48                 	db	72	;'H'
 10366   00FF5D  44                 	db	68	;'D'
 10367   00FF5E  52                 	db	82	;'R'
 10368   00FF5F  00                 	db	0
 10369   00FF60                     STR_63:
 10370                           
 10371                           ; BSR set to: 7
 10372   00FF60  4D                 	db	77	;'M'
 10373   00FF61  4F                 	db	79	;'O'
 10374   00FF62  4E                 	db	78	;'N'
 10375   00FF63  49                 	db	73	;'I'
 10376   00FF64  54                 	db	84	;'T'
 10377   00FF65  4F                 	db	79	;'O'
 10378   00FF66  52                 	db	82	;'R'
 10379   00FF67  00                 	db	0
 10380   00FF68                     STR_19:
 10381                           
 10382                           ; BSR set to: 7
 10383   00FF68  25                 	db	37
 10384   00FF69  73                 	db	115	;'s'
 10385   00FF6A  25                 	db	37
 10386   00FF6B  30                 	db	48	;'0'
 10387   00FF6C  34                 	db	52	;'4'
 10388   00FF6D  78                 	db	120	;'x'
 10389   00FF6E  3A                 	db	58	;':'
 10390   00FF6F  00                 	db	0
 10391   00FF70                     STR_206:
 10392                           
 10393                           ; BSR set to: 7
 10394   00FF70  28                 	db	40
 10395   00FF71  6E                 	db	110	;'n'
 10396   00FF72  75                 	db	117	;'u'
 10397   00FF73  6C                 	db	108	;'l'
 10398   00FF74  6C                 	db	108	;'l'
 10399   00FF75  29                 	db	41
 10400   00FF76  00                 	db	0
 10401   00FF77                     STR_59:
 10402                           
 10403                           ; BSR set to: 7
 10404   00FF77  43                 	db	67	;'C'
 10405   00FF78  53                 	db	83	;'S'
 10406   00FF79  54                 	db	84	;'T'
 10407   00FF7A  41                 	db	65	;'A'
 10408   00FF7B  52                 	db	82	;'R'
 10409   00FF7C  54                 	db	84	;'T'
 10410   00FF7D  00                 	db	0
 10411   00FF7E                     STR_60:
 10412                           
 10413                           ; BSR set to: 7
 10414   00FF7E  57                 	db	87	;'W'
 10415   00FF7F  53                 	db	83	;'S'
 10416   00FF80  54                 	db	84	;'T'
 10417   00FF81  41                 	db	65	;'A'
 10418   00FF82  52                 	db	82	;'R'
 10419   00FF83  54                 	db	84	;'T'
 10420   00FF84  00                 	db	0
 10421   00FF85                     STR_66:
 10422                           
 10423                           ; BSR set to: 7
 10424   00FF85  46                 	db	70	;'F'
 10425   00FF86  4C                 	db	76	;'L'
 10426   00FF87  41                 	db	65	;'A'
 10427   00FF88  53                 	db	83	;'S'
 10428   00FF89  48                 	db	72	;'H'
 10429   00FF8A  00                 	db	0
 10430   00FF8B                     STR_64:
 10431                           
 10432                           ; BSR set to: 7
 10433   00FF8B  4D                 	db	77	;'M'
 10434   00FF8C  44                 	db	68	;'D'
 10435   00FF8D  55                 	db	85	;'U'
 10436   00FF8E  4D                 	db	77	;'M'
 10437   00FF8F  50                 	db	80	;'P'
 10438   00FF90  00                 	db	0
 10439   00FF91                     STR_36:
 10440                           
 10441                           ; BSR set to: 7
 10442   00FF91  62                 	db	98	;'b'
 10443   00FF92  75                 	db	117	;'u'
 10444   00FF93  66                 	db	102	;'f'
 10445   00FF94  3A                 	db	58	;':'
 10446   00FF95  20                 	db	32
 10447   00FF96  00                 	db	0
 10448   00FF97                     STR_20:
 10449                           
 10450                           ; BSR set to: 7
 10451   00FF97  20                 	db	32
 10452   00FF98  25                 	db	37
 10453   00FF99  30                 	db	48	;'0'
 10454   00FF9A  32                 	db	50	;'2'
 10455   00FF9B  78                 	db	120	;'x'
 10456   00FF9C  00                 	db	0
 10457   00FF9D                     STR_13:
 10458                           
 10459                           ; BSR set to: 7
 10460   00FF9D  66                 	db	102	;'f'
 10461   00FF9E  61                 	db	97	;'a'
 10462   00FF9F  74                 	db	116	;'t'
 10463   00FFA0  3A                 	db	58	;':'
 10464   00FFA1  20                 	db	32
 10465   00FFA2  00                 	db	0
 10466   00FFA3                     STR_192:
 10467                           
 10468                           ; BSR set to: 7
 10469   00FFA3  53                 	db	83	;'S'
 10470   00FFA4  44                 	db	68	;'D'
 10471   00FFA5  3A                 	db	58	;':'
 10472   00FFA6  20                 	db	32
 10473   00FFA7  00                 	db	0
 10474   00FFA8                     STR_75:
 10475                           
 10476                           ; BSR set to: 7
 10477   00FFA8  25                 	db	37
 10478   00FFA9  73                 	db	115	;'s'
 10479   00FFAA  3E                 	db	62	;'>'
 10480   00FFAB  20                 	db	32
 10481   00FFAC  00                 	db	0
 10482   00FFAD                     STR_133:
 10483                           
 10484                           ; BSR set to: 7
 10485   00FFAD  4D                 	db	77	;'M'
 10486   00FFAE  65                 	db	101	;'e'
 10487   00FFAF  6D                 	db	109	;'m'
 10488   00FFB0  20                 	db	32
 10489   00FFB1  00                 	db	0
 10490   00FFB2                     STR_85:
 10491                           
 10492                           ; BSR set to: 7
 10493   00FFB2  30                 	db	48	;'0'
 10494   00FFB3  3A                 	db	58	;':'
 10495   00FFB4  2F                 	db	47
 10496   00FFB5  2F                 	db	47
 10497   00FFB6  00                 	db	0
 10498   00FFB7                     STR_58:
 10499                           
 10500                           ; BSR set to: 7
 10501   00FFB7  4C                 	db	76	;'L'
 10502   00FFB8  4F                 	db	79	;'O'
 10503   00FFB9  41                 	db	65	;'A'
 10504   00FFBA  44                 	db	68	;'D'
 10505   00FFBB  00                 	db	0
 10506   00FFBC                     STR_61:
 10507                           
 10508                           ; BSR set to: 7
 10509   00FFBC  52                 	db	82	;'R'
 10510   00FFBD  45                 	db	69	;'E'
 10511   00FFBE  54                 	db	84	;'T'
 10512   00FFBF  49                 	db	73	;'I'
 10513   00FFC0  00                 	db	0
 10514   00FFC1                     STR_67:
 10515                           
 10516                           ; BSR set to: 7
 10517   00FFC1  48                 	db	72	;'H'
 10518   00FFC2  45                 	db	69	;'E'
 10519   00FFC3  4C                 	db	76	;'L'
 10520   00FFC4  50                 	db	80	;'P'
 10521   00FFC5  00                 	db	0
 10522   00FFC6                     STR_65:
 10523                           
 10524                           ; BSR set to: 7
 10525   00FFC6  53                 	db	83	;'S'
 10526   00FFC7  48                 	db	72	;'H'
 10527   00FFC8  4F                 	db	79	;'O'
 10528   00FFC9  57                 	db	87	;'W'
 10529   00FFCA  00                 	db	0
 10530   00FFCB                     STR_44:
 10531                           
 10532                           ; BSR set to: 7
 10533   00FFCB  52                 	db	82	;'R'
 10534   00FFCC  44                 	db	68	;'D'
 10535   00FFCD  3A                 	db	58	;':'
 10536   00FFCE  20                 	db	32
 10537   00FFCF  00                 	db	0
 10538   00FFD0                     STR_43:
 10539                           
 10540                           ; BSR set to: 7
 10541   00FFD0  57                 	db	87	;'W'
 10542   00FFD1  52                 	db	82	;'R'
 10543   00FFD2  3A                 	db	58	;':'
 10544   00FFD3  20                 	db	32
 10545   00FFD4  00                 	db	0
 10546   00FFD5                     STR_200:
 10547                           
 10548                           ; BSR set to: 7
 10549   00FFD5  69                 	db	105	;'i'
 10550   00FFD6  6E                 	db	110	;'n'
 10551   00FFD7  66                 	db	102	;'f'
 10552   00FFD8  00                 	db	0
 10553   00FFD9                     STR_203:
 10554                           
 10555                           ; BSR set to: 7
 10556   00FFD9  6E                 	db	110	;'n'
 10557   00FFDA  61                 	db	97	;'a'
 10558   00FFDB  6E                 	db	110	;'n'
 10559   00FFDC  00                 	db	0
 10560   00FFDD                     STR_62:
 10561                           
 10562                           ; BSR set to: 7
 10563   00FFDD  52                 	db	82	;'R'
 10564   00FFDE  45                 	db	69	;'E'
 10565   00FFDF  47                 	db	71	;'G'
 10566   00FFE0  00                 	db	0
 10567   00FFE1                     STR_56:
 10568                           
 10569                           ; BSR set to: 7
 10570   00FFE1  44                 	db	68	;'D'
 10571   00FFE2  49                 	db	73	;'I'
 10572   00FFE3  52                 	db	82	;'R'
 10573   00FFE4  00                 	db	0
 10574   00FFE5                     
 10575                           ; BSR set to: 7
 10576   00FFE5  49                 	db	73	;'I'
 10577   00FFE6  4E                 	db	78	;'N'
 10578   00FFE7  46                 	db	70	;'F'
 10579   00FFE8  00                 	db	0
 10580   00FFE9                     
 10581                           ; BSR set to: 7
 10582   00FFE9  4E                 	db	78	;'N'
 10583   00FFEA  61                 	db	97	;'a'
 10584   00FFEB  4E                 	db	78	;'N'
 10585   00FFEC  00                 	db	0
 10586   00FFED                     STR_128:
 10587                           
 10588                           ; BSR set to: 7
 10589   00FFED  4C                 	db	76	;'L'
 10590   00FFEE  3D                 	db	61	;'='
 10591   00FFEF  00                 	db	0
 10592   00FFF0                     STR_57:
 10593                           
 10594                           ; BSR set to: 7
 10595   00FFF0  43                 	db	67	;'C'
 10596   00FFF1  44                 	db	68	;'D'
 10597   00FFF2  00                 	db	0
 10598   00FFF3                     STR_55:
 10599                           
 10600                           ; BSR set to: 7
 10601   00FFF3  4C                 	db	76	;'L'
 10602   00FFF4  53                 	db	83	;'S'
 10603   00FFF5  00                 	db	0
 10604   00FFF6                     STR_82:
 10605                           
 10606                           ; BSR set to: 7
 10607   00FFF6  25                 	db	37
 10608   00FFF7  73                 	db	115	;'s'
 10609   00FFF8  00                 	db	0
 10610   00FFF9                     STR_33:
 10611                           
 10612                           ; BSR set to: 7
 10613   00FFF9  4F                 	db	79	;'O'
 10614   00FFFA  56                 	db	86	;'V'
 10615   00FFFB  00                 	db	0
 10616   00FFFC                     STR_68:
 10617                           
 10618                           ; BSR set to: 7
 10619   00FFFC  3F                 	db	63	;'?'
 10620   00FFFD  00                 	db	0
 10621   00FE25                     STR_28          equ	STR_27
 10622   00FF97                     STR_23          equ	STR_20
 10623   00FFF6                     STR_108         equ	STR_82
 10624   00FFD9                     STR_204         equ	STR_203
 10625   00FFD9                     STR_205         equ	STR_203
 10626   00FFD5                     STR_201         equ	STR_200
 10627   00FFD5                     STR_202         equ	STR_200
 10628   00FDA4                     STR_175         equ	STR_173
 10629   00FFC9                     STR_130         equ	STR_65+3
 10630   00FFC9                     STR_131         equ	STR_65+3
 10631   00FFF9                     STR_34          equ	STR_33
 10632   00FFED                     STR_129         equ	STR_128
 10633   00FF9D                     STR_16          equ	STR_13
 10634   00FF91                     STR_40          equ	STR_36
 10635   00FFA3                     STR_195         equ	STR_192
 10636   00FCC2                     STR_153         equ	STR_141
 10637   00FF1E                     STR_30          equ	STR_29
 10638   00FE66                     STR_21          equ	STR_74+8
 10639   00FE66                     STR_24          equ	STR_74+8
 10640   00FC1A                     STR_155         equ	STR_143
 10641   00FBC1                     STR_9           equ	STR_2
 10642   00FA08                     STR_154         equ	STR_142
 10643   00F28B                     STR_167         equ	STR_193+52
 10644   00F28B                     STR_169         equ	STR_193+52
 10645   00FC04                     STR_165         equ	STR_163
 10646   00FDC6                     STR_158         equ	STR_145
 10647   00FDB5                     STR_157         equ	STR_144
 10648   00FE94                     STR_101         equ	STR_95
 10649   00FEEE                     STR_100         equ	STR_94
 10650   00FF0C                     STR_99          equ	STR_93
 10651   00FC9A                     STR_98          equ	STR_97
 10652   00FC9A                     STR_106         equ	STR_97
 10653   00FD0F                     STR_166         equ	STR_164
 10654   00FC5D                     STR_79          equ	STR_134+2
 10655   00FB79                     STR_92          equ	STR_89+20
 10656   00FB79                     STR_102         equ	STR_89+20
 10657   00FB79                     STR_105         equ	STR_89+20
 10658   00FB79                     STR_132         equ	STR_89+20
 10659   00FB79                     STR_160         equ	STR_89+20
 10660   00FB64                     STR_5           equ	STR_72+22
 10661   00FB64                     STR_26          equ	STR_72+22
 10662   00FB64                     STR_69          equ	STR_72+22
 10663   00FFFE  00                 	db	0	; dummy byte at the end
 10664   000003                     __activetblptr  equ	3
 10665                           
 10666                           ; #config settings
 10667                           
 10668                           	psect	cinit
 10669   01E1C0                     __pcinit:
 10670                           	callstack 0
 10671   01E1C0                     start_initialization:
 10672                           	callstack 0
 10673   01E1C0                     __initialization:
 10674                           	callstack 0
 10675                           
 10676                           ; Initialize objects allocated to BANK9 (139 bytes)
 10677                           ; load TBLPTR registers with __pidataBANK9
 10678   01E1C0  0E5E               	movlw	low __pidataBANK9
 10679   01E1C2  6EF6               	movwf	tblptrl,c
 10680   01E1C4  0EF0               	movlw	high __pidataBANK9
 10681   01E1C6  6EF7               	movwf	tblptrh,c
 10682   01E1C8  0E01               	movlw	low (__pidataBANK9 shr (0+16))
 10683   01E1CA  6EF8               	movwf	tblptru,c
 10684   01E1CC  EE02  F100         	lfsr	0,__pdataBANK9
 10685   01E1D0  EE10 F08B          	lfsr	1,139
 10686   01E1D4                     copy_data0:
 10687   01E1D4  0009               	tblrd		*+
 10688   01E1D6  C4F5 F4EE          	movff	tablat,postinc0
 10689   01E1DA  50E5               	movf	postdec1,w,c
 10690   01E1DC  50E1               	movf	fsr1l,w,c
 10691   01E1DE  E1FA               	bnz	copy_data0
 10692                           
 10693                           ; Initialize objects allocated to BANK8 (12 bytes)
 10694                           ; load TBLPTR registers with __pidataBANK8
 10695   01E1E0  0E54               	movlw	low __pidataBANK8
 10696   01E1E2  6EF6               	movwf	tblptrl,c
 10697   01E1E4  0E02               	movlw	high __pidataBANK8
 10698   01E1E6  6EF7               	movwf	tblptrh,c
 10699   01E1E8  0E00               	movlw	low (__pidataBANK8 shr (0+16))
 10700   01E1EA  6EF8               	movwf	tblptru,c
 10701   01E1EC  EE02  F0D3         	lfsr	0,__pdataBANK8
 10702   01E1F0  EE10 F00C          	lfsr	1,12
 10703   01E1F4                     copy_data1:
 10704   01E1F4  0009               	tblrd		*+
 10705   01E1F6  C4F5 F4EE          	movff	tablat,postinc0
 10706   01E1FA  50E5               	movf	postdec1,w,c
 10707   01E1FC  50E1               	movf	fsr1l,w,c
 10708   01E1FE  E1FA               	bnz	copy_data1
 10709                           
 10710                           ; Initialize objects allocated to BANK7 (26 bytes)
 10711                           ; load TBLPTR registers with __pidataBANK7
 10712   01E200  0E92               	movlw	low __pidataBANK7
 10713   01E202  6EF6               	movwf	tblptrl,c
 10714   01E204  0E01               	movlw	high __pidataBANK7
 10715   01E206  6EF7               	movwf	tblptrh,c
 10716   01E208  0E00               	movlw	low (__pidataBANK7 shr (0+16))
 10717   01E20A  6EF8               	movwf	tblptru,c
 10718   01E20C  EE01  F3E6         	lfsr	0,__pdataBANK7
 10719   01E210  EE10 F01A          	lfsr	1,26
 10720   01E214                     copy_data2:
 10721   01E214  0009               	tblrd		*+
 10722   01E216  C4F5 F4EE          	movff	tablat,postinc0
 10723   01E21A  50E5               	movf	postdec1,w,c
 10724   01E21C  50E1               	movf	fsr1l,w,c
 10725   01E21E  E1FA               	bnz	copy_data2
 10726                           
 10727                           ; Clear objects allocated to BIGRAM (2680 bytes)
 10728   01E220  EE02  F380         	lfsr	0,__pbssBIGRAM
 10729   01E224  EE12 F278          	lfsr	1,2680
 10730   01E228                     clear_0:
 10731   01E228  6AEE               	clrf	postinc0,c
 10732   01E22A  50E5               	movf	postdec1,w,c
 10733   01E22C  50E1               	movf	fsr1l,w,c
 10734   01E22E  E1FC               	bnz	clear_0
 10735   01E230  50E2               	movf	fsr1h,w,c
 10736   01E232  E1FA               	bnz	clear_0
 10737                           
 10738                           ; Clear objects allocated to BANK11 (128 bytes)
 10739   01E234  EE02  F300         	lfsr	0,__pbssBANK11
 10740   01E238  0E80               	movlw	128
 10741   01E23A                     clear_1:
 10742   01E23A  6AEE               	clrf	postinc0,c
 10743   01E23C  06E8               	decf	wreg,f,c
 10744   01E23E  E1FD               	bnz	clear_1
 10745                           
 10746                           ; Clear objects allocated to BANK10 (209 bytes)
 10747   01E240  EE02  F200         	lfsr	0,__pbssBANK10
 10748   01E244  0ED1               	movlw	209
 10749   01E246                     clear_2:
 10750   01E246  6AEE               	clrf	postinc0,c
 10751   01E248  06E8               	decf	wreg,f,c
 10752   01E24A  E1FD               	bnz	clear_2
 10753                           
 10754                           ; Clear objects allocated to BANK9 (40 bytes)
 10755   01E24C  EE02  F18B         	lfsr	0,__pbssBANK9
 10756   01E250  0E28               	movlw	40
 10757   01E252                     clear_3:
 10758   01E252  6AEE               	clrf	postinc0,c
 10759   01E254  06E8               	decf	wreg,f,c
 10760   01E256  E1FD               	bnz	clear_3
 10761                           
 10762                           ; Clear objects allocated to BANK8 (211 bytes)
 10763   01E258  EE02  F000         	lfsr	0,__pbssBANK8
 10764   01E25C  0ED3               	movlw	211
 10765   01E25E                     clear_4:
 10766   01E25E  6AEE               	clrf	postinc0,c
 10767   01E260  06E8               	decf	wreg,f,c
 10768   01E262  E1FD               	bnz	clear_4
 10769                           
 10770                           ; Clear objects allocated to BANK7 (72 bytes)
 10771   01E264  EE01  F39E         	lfsr	0,__pbssBANK7
 10772   01E268  0E48               	movlw	72
 10773   01E26A                     clear_5:
 10774   01E26A  6AEE               	clrf	postinc0,c
 10775   01E26C  06E8               	decf	wreg,f,c
 10776   01E26E  E1FD               	bnz	clear_5
 10777                           
 10778                           ; Clear objects allocated to COMRAM (3 bytes)
 10779   01E270  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
 10780   01E272  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
 10781   01E274  6A5A               	clrf	__pbssCOMRAM& (0+255),c
 10782                           
 10783                           ;
 10784                           ; Setup IVTBASE
 10785                           ;
 10786   00045D                     IVTBASEL        equ	1117
 10787   00045E                     IVTBASEH        equ	1118
 10788   00045F                     IVTBASEU        equ	1119
 10789   01E276  0104               	movlb	4
 10790   01E278  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 10791   01E27A  6F5D               	movwf	93,b
 10792   01E27C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 10793   01E27E  6F5E               	movwf	94,b
 10794   01E280  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 10795   01E282  6F5F               	movwf	95,b
 10796   01E284                     end_of_initialization:
 10797                           	callstack 0
 10798   01E284                     __end_of__initialization:
 10799                           	callstack 0
 10800   01E284  0100               	movlb	0
 10801   01E286  EFD0  F0B8         	goto	_main	;jump to C main() function
 10802                           
 10803                           	psect	bssCOMRAM
 10804   00055A                     __pbssCOMRAM:
 10805                           	callstack 0
 10806   00055A                     _prec:
 10807                           	callstack 0
 10808   00055A                     	ds	2
 10809   00055C                     _flags:
 10810                           	callstack 0
 10811   00055C                     	ds	1
 10812                           
 10813                           	psect	bssBANK7
 10814   00079E                     __pbssBANK7:
 10815                           	callstack 0
 10816   00079E                     _arg:
 10817                           	callstack 0
 10818   00079E                     	ds	10
 10819   0007A8                     _ctx_:
 10820                           	callstack 0
 10821   0007A8                     	ds	5
 10822   0007AD                     _raw_addr:
 10823                           	callstack 0
 10824   0007AD                     	ds	4
 10825   0007B1                     _width:
 10826                           	callstack 0
 10827   0007B1                     	ds	2
 10828   0007B3                     _errno:
 10829                           	callstack 0
 10830   0007B3                     	ds	2
 10831   0007B5                     setup_sd@retry:
 10832                           	callstack 0
 10833   0007B5                     	ds	2
 10834   0007B7                     _rx_rp:
 10835                           	callstack 0
 10836   0007B7                     	ds	2
 10837   0007B9                     _rx_wp:
 10838                           	callstack 0
 10839   0007B9                     	ds	2
 10840   0007BB                     _file_size:
 10841                           	callstack 0
 10842   0007BB                     	ds	2
 10843   0007BD                     _fin_size:
 10844                           	callstack 0
 10845   0007BD                     	ds	2
 10846   0007BF                     _frd_ptr:
 10847                           	callstack 0
 10848   0007BF                     	ds	2
 10849   0007C1                     _rx_cnt:
 10850                           	callstack 0
 10851   0007C1                     	ds	2
 10852   0007C3                     _Fsid:
 10853                           	callstack 0
 10854   0007C3                     	ds	2
 10855   0007C5                     _FatFs:
 10856                           	callstack 0
 10857   0007C5                     	ds	2
 10858   0007C7                     _irq_flg:
 10859                           	callstack 0
 10860   0007C7                     	ds	1
 10861   0007C8                     _mon:
 10862                           	callstack 0
 10863   0007C8                     	ds	1
 10864   0007C9                     _load_flg:
 10865                           	callstack 0
 10866   0007C9                     	ds	1
 10867   0007CA                     _nmi_sig:
 10868                           	callstack 0
 10869   0007CA                     	ds	1
 10870   0007CB                     _wup_flg:
 10871                           	callstack 0
 10872   0007CB                     	ds	1
 10873   0007CC                     _cin_no:
 10874                           	callstack 0
 10875   0007CC                     	ds	1
 10876   0007CD                     _CurrVol:
 10877                           	callstack 0
 10878   0007CD                     	ds	1
 10879   0007CE                     _req_tbl:
 10880                           	callstack 0
 10881   0007CE                     	ds	13
 10882   0007DB                     _clk_fs:
 10883                           	callstack 0
 10884   0007DB                     	ds	4
 10885   0007DF                     _bioreq_ubuffadr:
 10886                           	callstack 0
 10887   0007DF                     	ds	4
 10888   0007E3                     _fin_cnt:
 10889                           	callstack 0
 10890   0007E3                     	ds	2
 10891   0007E5                     _cpu_flg:
 10892                           	callstack 0
 10893   0007E5                     	ds	1
 10894                           
 10895                           	psect	dataBANK7
 10896   0007E6                     __pdataBANK7:
 10897                           	callstack 0
 10898   0007E6                     _t_conf:
 10899                           	callstack 0
 10900   0007E6                     	ds	8
 10901   0007EE                     _start_lba:
 10902                           	callstack 0
 10903   0007EE                     	ds	4
 10904   0007F2                     _SPI_SD_ctx:
 10905                           	callstack 0
 10906   0007F2                     	ds	2
 10907   0007F4                     	ds	2
 10908   0007F6                     	ds	2
 10909   0007F8                     	ds	2
 10910   0007FA                     	ds	2
 10911   0007FC                     	ds	2
 10912   0007FE                     	ds	2
 10913                           
 10914                           	psect	bssBANK8
 10915   000800                     __pbssBANK8:
 10916                           	callstack 0
 10917   000800                     	ds	22
 10918   000816                     _debug:
 10919                           	callstack 0
 10920   000816                     	ds	6
 10921   00081C                     floorf@F521:
 10922                           	callstack 0
 10923   00081C                     	ds	4
 10924   000820                     ___fpclassifyf@F465:
 10925                           	callstack 0
 10926   000820                     	ds	4
 10927   000824                     _bioreq_cbuffadr:
 10928                           	callstack 0
 10929   000824                     	ds	4
 10930   000828                     _dbuf:
 10931                           	callstack 0
 10932   000828                     	ds	80
 10933   000878                     _binv:
 10934                           	callstack 0
 10935   000878                     	ds	42
 10936   0008A2                     _fh:
 10937                           	callstack 0
 10938   0008A2                     	ds	32
 10939   0008C2                     _fin_name:
 10940                           	callstack 0
 10941   0008C2                     	ds	13
 10942   0008CF                     _pic18f47q43_spi_ctx:
 10943                           	callstack 0
 10944   0008CF                     	ds	4
 10945                           
 10946                           	psect	dataBANK8
 10947   0008D3                     __pdataBANK8:
 10948                           	callstack 0
 10949   0008D3                     _strin_func:
 10950                           	callstack 0
 10951   0008D3                     	ds	6
 10952   0008D9                     _get_char:
 10953                           	callstack 0
 10954   0008D9                     	ds	6
 10955                           
 10956                           	psect	bssBANK9
 10957   00098B                     __pbssBANK9:
 10958                           	callstack 0
 10959   00098B                     	ds	40
 10960                           
 10961                           	psect	dataBANK9
 10962   000900                     __pdataBANK9:
 10963                           	callstack 0
 10964   000900                     _cmd:
 10965                           	callstack 0
 10966   000900                     	ds	75
 10967   00094B                     _cpm_drives:
 10968                           	callstack 0
 10969   00094B                     	ds	64
 10970                           
 10971                           	psect	bssBANK10
 10972   000A00                     __pbssBANK10:
 10973                           	callstack 0
 10974   000A00                     _disk_buf:
 10975                           	callstack 0
 10976   000A00                     	ds	128
 10977   000A80                     _line_buf:
 10978                           	callstack 0
 10979   000A80                     	ds	81
 10980                           
 10981                           	psect	bssBANK11
 10982   000B00                     __pbssBANK11:
 10983                           	callstack 0
 10984   000B00                     _rx_buf:
 10985                           	callstack 0
 10986   000B00                     	ds	128
 10987                           
 10988                           	psect	bssBIGRAM
 10989   000B80                     __pbssBIGRAM:
 10990                           	callstack 0
 10991   000B80                     _fs:
 10992                           	callstack 0
 10993   000B80                     	ds	564
 10994   000DB4                     _in_fl:
 10995                           	callstack 0
 10996   000DB4                     	ds	546
 10997   000FD6                     _rom_fl:
 10998                           	callstack 0
 10999   000FD6                     	ds	546
 11000   0011F8                     _cin_file:
 11001                           	callstack 0
 11002   0011F8                     	ds	512
 11003   0013F8                     _tmp_buf:
 11004                           	callstack 0
 11005   0013F8                     	ds	512
 11006                           
 11007                           	psect	cstackBANK7
 11008   000700                     __pcstackBANK7:
 11009                           	callstack 0
 11010   000700                     ?_u_getch:
 11011                           	callstack 0
 11012   000700                     ?_in_file:
 11013                           	callstack 0
 11014   000700                     ?_get_str:
 11015                           	callstack 0
 11016   000700                     ?_str_inf:
 11017                           	callstack 0
 11018   000700                     ?_load_config:
 11019                           	callstack 0
 11020   000700                     ?_load_program:
 11021                           	callstack 0
 11022   000700                     load_program@fname:
 11023                           	callstack 0
 11024   000700                     str_inf@buf:
 11025                           	callstack 0
 11026   000700                     get_str@buf:
 11027                           	callstack 0
 11028   000700                     f_getcwd@ccl:
 11029                           	callstack 0
 11030   000700                     ??_see_file:
 11031                           
 11032                           ; 1 bytes @ 0x0
 11033   000700                     	ds	2
 11034   000702                     str_inf@cnt:
 11035                           	callstack 0
 11036   000702                     get_str@cnt:
 11037                           	callstack 0
 11038   000702                     see_file@rdbuf:
 11039                           	callstack 0
 11040   000702                     load_program@adr0:
 11041                           	callstack 0
 11042   000702                     ??_u_getch:
 11043   000702                     ??_load_config:
 11044                           
 11045                           ; 1 bytes @ 0x2
 11046   000702                     	ds	1
 11047   000703                     ??_get_str:
 11048   000703                     ??_str_inf:
 11049                           
 11050                           ; 1 bytes @ 0x3
 11051   000703                     	ds	1
 11052   000704                     f_getcwd@tp:
 11053                           	callstack 0
 11054   000704                     see_file@br:
 11055                           	callstack 0
 11056                           
 11057                           ; 2 bytes @ 0x4
 11058   000704                     	ds	1
 11059   000705                     str_inf@c:
 11060                           	callstack 0
 11061   000705                     get_str@c:
 11062                           	callstack 0
 11063                           
 11064                           ; 2 bytes @ 0x5
 11065   000705                     	ds	1
 11066   000706                     see_file@fr:
 11067                           	callstack 0
 11068   000706                     f_getcwd@n:
 11069                           	callstack 0
 11070   000706                     load_program@rdbuf:
 11071                           	callstack 0
 11072                           
 11073                           ; 2 bytes @ 0x6
 11074   000706                     	ds	1
 11075   000707                     str_inf@a:
 11076                           	callstack 0
 11077   000707                     see_file@header:
 11078                           	callstack 0
 11079   000707                     get_str@i:
 11080                           	callstack 0
 11081                           
 11082                           ; 2 bytes @ 0x7
 11083   000707                     	ds	1
 11084   000708                     f_getcwd@i:
 11085                           	callstack 0
 11086   000708                     load_program@btr:
 11087                           	callstack 0
 11088   000708                     str_inf@i:
 11089                           	callstack 0
 11090                           
 11091                           ; 2 bytes @ 0x8
 11092   000708                     	ds	2
 11093   00070A                     f_getcwd@fs:
 11094                           	callstack 0
 11095   00070A                     _unimon_console$2625:
 11096                           	callstack 0
 11097   00070A                     load_config@buf:
 11098                           	callstack 0
 11099   00070A                     load_program@adr:
 11100                           	callstack 0
 11101                           
 11102                           ; 4 bytes @ 0xA
 11103   00070A                     	ds	2
 11104   00070C                     load_config@fr:
 11105                           	callstack 0
 11106   00070C                     unimon_console@buf:
 11107                           	callstack 0
 11108   00070C                     f_getcwd@fno:
 11109                           	callstack 0
 11110                           
 11111                           ; 22 bytes @ 0xC
 11112   00070C                     	ds	1
 11113   00070D                     load_config@a:
 11114                           	callstack 0
 11115                           
 11116                           ; 2 bytes @ 0xD
 11117   00070D                     	ds	1
 11118   00070E                     unimon_console@cnt:
 11119                           	callstack 0
 11120   00070E                     load_program@cnt:
 11121                           	callstack 0
 11122                           
 11123                           ; 2 bytes @ 0xE
 11124   00070E                     	ds	1
 11125   00070F                     load_config@conf:
 11126                           	callstack 0
 11127                           
 11128                           ; 2 bytes @ 0xF
 11129   00070F                     	ds	1
 11130   000710                     _bus_master_operation$2630:
 11131                           	callstack 0
 11132   000710                     load_program@br:
 11133                           	callstack 0
 11134                           
 11135                           ; 2 bytes @ 0x10
 11136   000710                     	ds	1
 11137   000711                     load_config@str:
 11138                           	callstack 0
 11139                           
 11140                           ; 2 bytes @ 0x11
 11141   000711                     	ds	1
 11142   000712                     load_program@fr:
 11143                           	callstack 0
 11144   000712                     bus_master_operation@buf:
 11145                           	callstack 0
 11146                           
 11147                           ; 2 bytes @ 0x12
 11148   000712                     	ds	1
 11149   000713                     load_program@header:
 11150                           	callstack 0
 11151   000713                     load_config@i:
 11152                           	callstack 0
 11153                           
 11154                           ; 2 bytes @ 0x13
 11155   000713                     	ds	1
 11156   000714                     bus_master_operation@cnt:
 11157                           	callstack 0
 11158                           
 11159                           ; 2 bytes @ 0x14
 11160   000714                     	ds	1
 11161   000715                     load_file@p:
 11162                           	callstack 0
 11163                           
 11164                           ; 2 bytes @ 0x15
 11165   000715                     	ds	1
 11166   000716                     ?_setup_monitor:
 11167                           	callstack 0
 11168   000716                     boot_file@flag:
 11169                           	callstack 0
 11170   000716                     return_cpu@rs:
 11171                           	callstack 0
 11172   000716                     wstart_prog@rs:
 11173                           	callstack 0
 11174   000716                     restart_prog@rs:
 11175                           	callstack 0
 11176   000716                     mon_prog@p:
 11177                           	callstack 0
 11178                           
 11179                           ; 2 bytes @ 0x16
 11180   000716                     	ds	1
 11181   000717                     boot_file@m:
 11182                           	callstack 0
 11183                           
 11184                           ; 1 bytes @ 0x17
 11185   000717                     	ds	1
 11186   000718                     boot_file@rs:
 11187                           	callstack 0
 11188   000718                     mon_prog@rs:
 11189                           	callstack 0
 11190   000718                     setup_monitor@rs:
 11191                           	callstack 0
 11192                           
 11193                           ; 2 bytes @ 0x18
 11194   000718                     	ds	1
 11195   000719                     mon_prog@sw:
 11196                           	callstack 0
 11197                           
 11198                           ; 1 bytes @ 0x19
 11199   000719                     	ds	9
 11200   000722                     f_getcwd@res:
 11201                           	callstack 0
 11202                           
 11203                           ; 1 bytes @ 0x22
 11204   000722                     	ds	1
 11205   000723                     f_getcwd@dj:
 11206                           	callstack 0
 11207                           
 11208                           ; 40 bytes @ 0x23
 11209   000723                     	ds	40
 11210   00074B                     scan_files@fn:
 11211                           	callstack 0
 11212   00074B                     scan_files1@fn:
 11213                           	callstack 0
 11214                           
 11215                           ; 2 bytes @ 0x4B
 11216   00074B                     	ds	2
 11217   00074D                     scan_files1@fcnt:
 11218                           	callstack 0
 11219   00074D                     scan_files@p:
 11220                           	callstack 0
 11221                           
 11222                           ; 2 bytes @ 0x4D
 11223   00074D                     	ds	1
 11224   00074E                     scan_files1@p:
 11225                           	callstack 0
 11226                           
 11227                           ; 2 bytes @ 0x4E
 11228   00074E                     	ds	1
 11229   00074F                     scan_files@res:
 11230                           	callstack 0
 11231                           
 11232                           ; 1 bytes @ 0x4F
 11233   00074F                     	ds	1
 11234   000750                     scan_files1@res:
 11235                           	callstack 0
 11236   000750                     scan_files@path:
 11237                           	callstack 0
 11238                           
 11239                           ; 2 bytes @ 0x50
 11240   000750                     	ds	1
 11241   000751                     scan_files1@path:
 11242                           	callstack 0
 11243                           
 11244                           ; 2 bytes @ 0x51
 11245   000751                     	ds	1
 11246   000752                     scan_files@fno:
 11247                           	callstack 0
 11248                           
 11249                           ; 22 bytes @ 0x52
 11250   000752                     	ds	1
 11251   000753                     scan_files1@fno:
 11252                           	callstack 0
 11253                           
 11254                           ; 22 bytes @ 0x53
 11255   000753                     	ds	21
 11256   000768                     scan_files@dir:
 11257                           	callstack 0
 11258                           
 11259                           ; 40 bytes @ 0x68
 11260   000768                     	ds	1
 11261   000769                     scan_files1@dir:
 11262                           	callstack 0
 11263                           
 11264                           ; 40 bytes @ 0x69
 11265   000769                     	ds	40
 11266   000791                     ??_main:
 11267                           
 11268                           ; 1 bytes @ 0x91
 11269   000791                     	ds	2
 11270   000793                     _main$5277:
 11271                           	callstack 0
 11272                           
 11273                           ; 4 bytes @ 0x93
 11274   000793                     	ds	4
 11275   000797                     main@res:
 11276                           	callstack 0
 11277                           
 11278                           ; 2 bytes @ 0x97
 11279   000797                     	ds	2
 11280   000799                     main@rs:
 11281                           	callstack 0
 11282                           
 11283                           ; 1 bytes @ 0x99
 11284   000799                     	ds	1
 11285   00079A                     main@buf:
 11286                           	callstack 0
 11287                           
 11288                           ; 2 bytes @ 0x9A
 11289   00079A                     	ds	2
 11290   00079C                     main@c:
 11291                           	callstack 0
 11292                           
 11293                           ; 2 bytes @ 0x9C
 11294   00079C                     	ds	2
 11295                           
 11296                           	psect	cstackBANK6
 11297   000600                     __pcstackBANK6:
 11298                           	callstack 0
 11299   000600                     disk_read@buff:
 11300                           	callstack 0
 11301   000600                     disk_write@buff:
 11302                           	callstack 0
 11303   000600                     disk_initialize@buf:
 11304                           	callstack 0
 11305                           
 11306                           ; 128 bytes @ 0x0
 11307   000600                     	ds	2
 11308   000602                     disk_read@sector:
 11309                           	callstack 0
 11310   000602                     disk_write@sector:
 11311                           	callstack 0
 11312                           
 11313                           ; 4 bytes @ 0x2
 11314   000602                     	ds	4
 11315   000606                     disk_read@count:
 11316                           	callstack 0
 11317   000606                     disk_write@count:
 11318                           	callstack 0
 11319                           
 11320                           ; 2 bytes @ 0x6
 11321   000606                     	ds	2
 11322   000608                     sync_window@fs:
 11323                           	callstack 0
 11324                           
 11325                           ; 2 bytes @ 0x8
 11326   000608                     	ds	2
 11327   00060A                     ??_sync_window:
 11328                           
 11329                           ; 1 bytes @ 0xA
 11330   00060A                     	ds	16
 11331   00061A                     move_window@fs:
 11332                           	callstack 0
 11333   00061A                     sync_fs@fs:
 11334                           	callstack 0
 11335   00061A                     dir_clear@fs:
 11336                           	callstack 0
 11337                           
 11338                           ; 2 bytes @ 0x1A
 11339   00061A                     	ds	2
 11340   00061C                     move_window@sect:
 11341                           	callstack 0
 11342   00061C                     dir_clear@clst:
 11343                           	callstack 0
 11344   00061C                     ??_sync_fs:
 11345                           
 11346                           ; 1 bytes @ 0x1C
 11347   00061C                     	ds	4
 11348   000620                     dir_clear@ibuf:
 11349                           	callstack 0
 11350   000620                     
 11351                           ; 1 bytes @ 0x20
 11352   000620                     	ds	2
 11353   000622                     dir_clear@sect:
 11354                           	callstack 0
 11355                           
 11356                           ; 4 bytes @ 0x22
 11357   000622                     	ds	2
 11358   000624                     ?_check_fs:
 11359                           	callstack 0
 11360   000624                     ?_get_fat:
 11361                           	callstack 0
 11362   000624                     get_fat@obj:
 11363                           	callstack 0
 11364   000624                     put_fat@fs:
 11365                           	callstack 0
 11366   000624                     check_fs@fs:
 11367                           	callstack 0
 11368   000624                     f_sync@fp:
 11369                           	callstack 0
 11370                           
 11371                           ; 2 bytes @ 0x24
 11372   000624                     	ds	2
 11373   000626                     dir_clear@szb:
 11374                           	callstack 0
 11375   000626                     get_fat@clst:
 11376                           	callstack 0
 11377   000626                     put_fat@clst:
 11378                           	callstack 0
 11379   000626                     check_fs@sect:
 11380                           	callstack 0
 11381   000626                     f_sync@tm:
 11382                           	callstack 0
 11383                           
 11384                           ; 4 bytes @ 0x26
 11385   000626                     	ds	2
 11386   000628                     dir_clear@n:
 11387                           	callstack 0
 11388                           
 11389                           ; 2 bytes @ 0x28
 11390   000628                     	ds	2
 11391   00062A                     f_sync@res:
 11392                           	callstack 0
 11393   00062A                     put_fat@val:
 11394                           	callstack 0
 11395   00062A                     ??_get_fat:
 11396   00062A                     ??_check_fs:
 11397                           
 11398                           ; 1 bytes @ 0x2A
 11399   00062A                     	ds	1
 11400   00062B                     f_sync@dir:
 11401                           	callstack 0
 11402                           
 11403                           ; 2 bytes @ 0x2B
 11404   00062B                     	ds	2
 11405   00062D                     check_fs@sign:
 11406                           	callstack 0
 11407   00062D                     f_sync@fs:
 11408                           	callstack 0
 11409                           
 11410                           ; 2 bytes @ 0x2D
 11411   00062D                     	ds	1
 11412   00062E                     ??_put_fat:
 11413                           
 11414                           ; 1 bytes @ 0x2E
 11415   00062E                     	ds	1
 11416   00062F                     check_fs@w:
 11417                           	callstack 0
 11418   00062F                     f_close@fp:
 11419                           	callstack 0
 11420                           
 11421                           ; 2 bytes @ 0x2F
 11422   00062F                     	ds	2
 11423   000631                     check_fs@b:
 11424                           	callstack 0
 11425   000631                     f_close@fs:
 11426                           	callstack 0
 11427                           
 11428                           ; 2 bytes @ 0x31
 11429   000631                     	ds	1
 11430   000632                     ?_find_volume:
 11431                           	callstack 0
 11432   000632                     _get_fat$435:
 11433                           	callstack 0
 11434   000632                     find_volume@fs:
 11435                           	callstack 0
 11436                           
 11437                           ; 2 bytes @ 0x32
 11438   000632                     	ds	1
 11439   000633                     f_close@res:
 11440                           	callstack 0
 11441                           
 11442                           ; 1 bytes @ 0x33
 11443   000633                     	ds	1
 11444   000634                     get_fat@wc:
 11445                           	callstack 0
 11446   000634                     find_volume@part:
 11447                           	callstack 0
 11448                           
 11449                           ; 2 bytes @ 0x34
 11450   000634                     	ds	2
 11451   000636                     get_fat@val:
 11452                           	callstack 0
 11453   000636                     ??_find_volume:
 11454                           
 11455                           ; 1 bytes @ 0x36
 11456   000636                     	ds	4
 11457   00063A                     get_fat@bc:
 11458                           	callstack 0
 11459                           
 11460                           ; 2 bytes @ 0x3A
 11461   00063A                     	ds	2
 11462   00063C                     get_fat@fs:
 11463                           	callstack 0
 11464   00063C                     _put_fat$465:
 11465                           	callstack 0
 11466   00063C                     find_volume@mbr_pt:
 11467                           	callstack 0
 11468                           
 11469                           ; 16 bytes @ 0x3C
 11470   00063C                     	ds	2
 11471   00063E                     _put_fat$466:
 11472                           	callstack 0
 11473   00063E                     dir_sdi@dp:
 11474                           	callstack 0
 11475   00063E                     f_read@fp:
 11476                           	callstack 0
 11477                           
 11478                           ; 2 bytes @ 0x3E
 11479   00063E                     	ds	2
 11480   000640                     put_fat@p:
 11481                           	callstack 0
 11482   000640                     f_read@buff:
 11483                           	callstack 0
 11484   000640                     dir_sdi@ofs:
 11485                           	callstack 0
 11486                           
 11487                           ; 4 bytes @ 0x40
 11488   000640                     	ds	2
 11489   000642                     put_fat@bc:
 11490                           	callstack 0
 11491   000642                     f_read@btr:
 11492                           	callstack 0
 11493                           
 11494                           ; 2 bytes @ 0x42
 11495   000642                     	ds	2
 11496   000644                     put_fat@res:
 11497                           	callstack 0
 11498   000644                     f_read@br:
 11499                           	callstack 0
 11500   000644                     ??_dir_sdi:
 11501                           
 11502                           ; 1 bytes @ 0x44
 11503   000644                     	ds	1
 11504   000645                     ?_create_chain:
 11505                           	callstack 0
 11506   000645                     remove_chain@obj:
 11507                           	callstack 0
 11508   000645                     create_chain@obj:
 11509                           	callstack 0
 11510                           
 11511                           ; 2 bytes @ 0x45
 11512   000645                     	ds	1
 11513   000646                     ??_f_read:
 11514                           
 11515                           ; 1 bytes @ 0x46
 11516   000646                     	ds	1
 11517   000647                     remove_chain@clst:
 11518                           	callstack 0
 11519   000647                     create_chain@clst:
 11520                           	callstack 0
 11521                           
 11522                           ; 4 bytes @ 0x47
 11523   000647                     	ds	4
 11524   00064B                     remove_chain@pclst:
 11525                           	callstack 0
 11526   00064B                     ??_create_chain:
 11527                           
 11528                           ; 1 bytes @ 0x4B
 11529   00064B                     	ds	1
 11530   00064C                     find_volume@fmt:
 11531                           	callstack 0
 11532                           
 11533                           ; 2 bytes @ 0x4C
 11534   00064C                     	ds	2
 11535   00064E                     find_volume@i:
 11536                           	callstack 0
 11537   00064E                     dir_sdi@csz:
 11538                           	callstack 0
 11539                           
 11540                           ; 4 bytes @ 0x4E
 11541   00064E                     	ds	1
 11542   00064F                     ??_remove_chain:
 11543                           
 11544                           ; 1 bytes @ 0x4F
 11545   00064F                     	ds	3
 11546   000652                     dir_sdi@clst:
 11547                           	callstack 0
 11548   000652                     f_read@remain:
 11549                           	callstack 0
 11550                           
 11551                           ; 4 bytes @ 0x52
 11552   000652                     	ds	1
 11553   000653                     create_chain@res:
 11554                           	callstack 0
 11555                           
 11556                           ; 1 bytes @ 0x53
 11557   000653                     	ds	1
 11558   000654                     create_chain@scl:
 11559                           	callstack 0
 11560                           
 11561                           ; 4 bytes @ 0x54
 11562   000654                     	ds	2
 11563   000656                     f_read@res:
 11564                           	callstack 0
 11565   000656                     dir_sdi@fs:
 11566                           	callstack 0
 11567                           
 11568                           ; 2 bytes @ 0x56
 11569   000656                     	ds	1
 11570   000657                     remove_chain@nxt:
 11571                           	callstack 0
 11572   000657                     f_read@clst:
 11573                           	callstack 0
 11574                           
 11575                           ; 4 bytes @ 0x57
 11576   000657                     	ds	1
 11577   000658                     create_chain@ncl:
 11578                           	callstack 0
 11579                           
 11580                           ; 4 bytes @ 0x58
 11581   000658                     	ds	3
 11582   00065B                     remove_chain@res:
 11583                           	callstack 0
 11584   00065B                     f_read@rbuff:
 11585                           	callstack 0
 11586                           
 11587                           ; 2 bytes @ 0x5B
 11588   00065B                     	ds	1
 11589   00065C                     remove_chain@fs:
 11590                           	callstack 0
 11591   00065C                     create_chain@fs:
 11592                           	callstack 0
 11593                           
 11594                           ; 2 bytes @ 0x5C
 11595   00065C                     	ds	1
 11596   00065D                     f_read@csect:
 11597                           	callstack 0
 11598                           
 11599                           ; 2 bytes @ 0x5D
 11600   00065D                     	ds	1
 11601   00065E                     create_chain@cs:
 11602                           	callstack 0
 11603                           
 11604                           ; 4 bytes @ 0x5E
 11605   00065E                     	ds	1
 11606   00065F                     f_read@cc:
 11607                           	callstack 0
 11608                           
 11609                           ; 2 bytes @ 0x5F
 11610   00065F                     	ds	2
 11611   000661                     f_read@rcnt:
 11612                           	callstack 0
 11613                           
 11614                           ; 2 bytes @ 0x61
 11615   000661                     	ds	1
 11616   000662                     dir_next@dp:
 11617                           	callstack 0
 11618   000662                     f_write@fp:
 11619                           	callstack 0
 11620   000662                     f_lseek@fp:
 11621                           	callstack 0
 11622                           
 11623                           ; 2 bytes @ 0x62
 11624   000662                     	ds	1
 11625   000663                     f_read@sect:
 11626                           	callstack 0
 11627                           
 11628                           ; 4 bytes @ 0x63
 11629   000663                     	ds	1
 11630   000664                     dir_next@stretch:
 11631                           	callstack 0
 11632   000664                     f_write@buff:
 11633                           	callstack 0
 11634   000664                     f_lseek@ofs:
 11635                           	callstack 0
 11636                           
 11637                           ; 4 bytes @ 0x64
 11638   000664                     	ds	2
 11639   000666                     f_write@btw:
 11640                           	callstack 0
 11641   000666                     ??_dir_next:
 11642                           
 11643                           ; 1 bytes @ 0x66
 11644   000666                     	ds	1
 11645   000667                     f_read@fs:
 11646                           	callstack 0
 11647                           
 11648                           ; 2 bytes @ 0x67
 11649   000667                     	ds	1
 11650   000668                     f_write@bw:
 11651                           	callstack 0
 11652   000668                     ??_f_lseek:
 11653                           
 11654                           ; 1 bytes @ 0x68
 11655   000668                     	ds	1
 11656   000669                     ?_f_gets:
 11657                           	callstack 0
 11658   000669                     f_gets@buff:
 11659                           	callstack 0
 11660                           
 11661                           ; 2 bytes @ 0x69
 11662   000669                     	ds	1
 11663   00066A                     ??_f_write:
 11664                           
 11665                           ; 1 bytes @ 0x6A
 11666   00066A                     	ds	1
 11667   00066B                     f_gets@len:
 11668                           	callstack 0
 11669                           
 11670                           ; 2 bytes @ 0x6B
 11671   00066B                     	ds	2
 11672   00066D                     f_gets@fp:
 11673                           	callstack 0
 11674                           
 11675                           ; 2 bytes @ 0x6D
 11676   00066D                     	ds	2
 11677   00066F                     f_gets@nc:
 11678                           	callstack 0
 11679                           
 11680                           ; 2 bytes @ 0x6F
 11681   00066F                     	ds	2
 11682   000671                     f_gets@p:
 11683                           	callstack 0
 11684                           
 11685                           ; 2 bytes @ 0x71
 11686   000671                     	ds	1
 11687   000672                     dir_next@ofs:
 11688                           	callstack 0
 11689                           
 11690                           ; 4 bytes @ 0x72
 11691   000672                     	ds	1
 11692   000673                     f_gets@dc:
 11693                           	callstack 0
 11694                           
 11695                           ; 4 bytes @ 0x73
 11696   000673                     	ds	3
 11697   000676                     dir_next@fs:
 11698                           	callstack 0
 11699   000676                     _f_write$1491:
 11700                           	callstack 0
 11701                           
 11702                           ; 4 bytes @ 0x76
 11703   000676                     	ds	1
 11704   000677                     f_gets@rc:
 11705                           	callstack 0
 11706                           
 11707                           ; 2 bytes @ 0x77
 11708   000677                     	ds	1
 11709   000678                     dir_next@clst:
 11710                           	callstack 0
 11711   000678                     f_lseek@ifptr:
 11712                           	callstack 0
 11713                           
 11714                           ; 4 bytes @ 0x78
 11715   000678                     	ds	1
 11716   000679                     f_gets@s:
 11717                           	callstack 0
 11718                           
 11719                           ; 4 bytes @ 0x79
 11720   000679                     	ds	1
 11721   00067A                     f_write@res:
 11722                           	callstack 0
 11723                           
 11724                           ; 1 bytes @ 0x7A
 11725   00067A                     	ds	1
 11726   00067B                     f_write@wbuff:
 11727                           	callstack 0
 11728                           
 11729                           ; 2 bytes @ 0x7B
 11730   00067B                     	ds	1
 11731   00067C                     dir_alloc@dp:
 11732                           	callstack 0
 11733   00067C                     dir_read@dp:
 11734                           	callstack 0
 11735   00067C                     dir_find@dp:
 11736                           	callstack 0
 11737   00067C                     f_lseek@nsect:
 11738                           	callstack 0
 11739                           
 11740                           ; 4 bytes @ 0x7C
 11741   00067C                     	ds	1
 11742   00067D                     f_write@csect:
 11743                           	callstack 0
 11744                           
 11745                           ; 2 bytes @ 0x7D
 11746   00067D                     	ds	1
 11747   00067E                     dir_alloc@n_ent:
 11748                           	callstack 0
 11749   00067E                     dir_read@vol:
 11750                           	callstack 0
 11751   00067E                     ??_dir_find:
 11752                           
 11753                           ; 1 bytes @ 0x7E
 11754   00067E                     	ds	1
 11755   00067F                     f_write@cc:
 11756                           	callstack 0
 11757                           
 11758                           ; 2 bytes @ 0x7F
 11759   00067F                     	ds	1
 11760   000680                     disk_initialize@pdrv:
 11761                           	callstack 0
 11762   000680                     f_lseek@res:
 11763                           	callstack 0
 11764   000680                     dir_find@fs:
 11765                           	callstack 0
 11766   000680                     ??_dir_alloc:
 11767   000680                     ??_dir_read:
 11768                           
 11769                           ; 1 bytes @ 0x80
 11770   000680                     	ds	1
 11771   000681                     mount_volume@path:
 11772                           	callstack 0
 11773   000681                     f_write@clst:
 11774                           	callstack 0
 11775   000681                     f_lseek@bcs:
 11776                           	callstack 0
 11777                           
 11778                           ; 4 bytes @ 0x81
 11779   000681                     	ds	1
 11780   000682                     dir_find@c:
 11781                           	callstack 0
 11782                           
 11783                           ; 1 bytes @ 0x82
 11784   000682                     	ds	1
 11785   000683                     dir_find@res:
 11786                           	callstack 0
 11787   000683                     dir_alloc@fs:
 11788                           	callstack 0
 11789   000683                     mount_volume@rfs:
 11790                           	callstack 0
 11791                           
 11792                           ; 2 bytes @ 0x83
 11793   000683                     	ds	1
 11794   000684                     dir_read@fs:
 11795                           	callstack 0
 11796   000684                     follow_path@dp:
 11797                           	callstack 0
 11798                           
 11799                           ; 2 bytes @ 0x84
 11800   000684                     	ds	1
 11801   000685                     mount_volume@mode:
 11802                           	callstack 0
 11803   000685                     dir_alloc@n:
 11804                           	callstack 0
 11805   000685                     f_write@wcnt:
 11806                           	callstack 0
 11807   000685                     f_lseek@fs:
 11808                           	callstack 0
 11809                           
 11810                           ; 2 bytes @ 0x85
 11811   000685                     	ds	1
 11812   000686                     dir_read@attr:
 11813                           	callstack 0
 11814   000686                     follow_path@path:
 11815                           	callstack 0
 11816   000686                     ??_mount_volume:
 11817                           
 11818                           ; 1 bytes @ 0x86
 11819   000686                     	ds	1
 11820   000687                     dir_alloc@res:
 11821                           	callstack 0
 11822   000687                     dir_read@b:
 11823                           	callstack 0
 11824   000687                     f_write@sect:
 11825                           	callstack 0
 11826   000687                     f_lseek@clst:
 11827                           	callstack 0
 11828                           
 11829                           ; 4 bytes @ 0x87
 11830   000687                     	ds	1
 11831   000688                     dir_read@res:
 11832                           	callstack 0
 11833   000688                     dir_register@dp:
 11834                           	callstack 0
 11835   000688                     ??_follow_path:
 11836                           
 11837                           ; 1 bytes @ 0x88
 11838   000688                     	ds	1
 11839   000689                     f_readdir@dp:
 11840                           	callstack 0
 11841                           
 11842                           ; 2 bytes @ 0x89
 11843   000689                     	ds	1
 11844   00068A                     dir_register@fs:
 11845                           	callstack 0
 11846                           
 11847                           ; 2 bytes @ 0x8A
 11848   00068A                     	ds	1
 11849   00068B                     ?_seek_disk:
 11850                           	callstack 0
 11851   00068B                     f_write@fs:
 11852                           	callstack 0
 11853   00068B                     f_readdir@fno:
 11854                           	callstack 0
 11855                           
 11856                           ; 2 bytes @ 0x8B
 11857   00068B                     	ds	1
 11858   00068C                     dir_register@res:
 11859                           	callstack 0
 11860                           
 11861                           ; 1 bytes @ 0x8C
 11862   00068C                     	ds	1
 11863   00068D                     f_readdir@fs:
 11864                           	callstack 0
 11865   00068D                     ??_seek_disk:
 11866                           
 11867                           ; 1 bytes @ 0x8D
 11868   00068D                     	ds	1
 11869   00068E                     follow_path@fs:
 11870                           	callstack 0
 11871   00068E                     mount_volume@szbfat:
 11872                           	callstack 0
 11873                           
 11874                           ; 4 bytes @ 0x8E
 11875   00068E                     	ds	1
 11876   00068F                     f_readdir@res:
 11877                           	callstack 0
 11878                           
 11879                           ; 1 bytes @ 0x8F
 11880   00068F                     	ds	1
 11881   000690                     follow_path@ns:
 11882                           	callstack 0
 11883                           
 11884                           ; 1 bytes @ 0x90
 11885   000690                     	ds	1
 11886   000691                     follow_path@res:
 11887                           	callstack 0
 11888                           
 11889                           ; 1 bytes @ 0x91
 11890   000691                     	ds	1
 11891   000692                     mount_volume@vol:
 11892                           	callstack 0
 11893                           
 11894                           ; 2 bytes @ 0x92
 11895   000692                     	ds	1
 11896   000693                     seek_disk@sector:
 11897                           	callstack 0
 11898                           
 11899                           ; 4 bytes @ 0x93
 11900   000693                     	ds	1
 11901   000694                     mount_volume@sysect:
 11902                           	callstack 0
 11903                           
 11904                           ; 4 bytes @ 0x94
 11905   000694                     	ds	3
 11906   000697                     seek_disk@filep:
 11907                           	callstack 0
 11908                           
 11909                           ; 2 bytes @ 0x97
 11910   000697                     	ds	1
 11911   000698                     mount_volume@nrsv:
 11912                           	callstack 0
 11913                           
 11914                           ; 2 bytes @ 0x98
 11915   000698                     	ds	1
 11916   000699                     seek_disk@fres:
 11917                           	callstack 0
 11918                           
 11919                           ; 1 bytes @ 0x99
 11920   000699                     	ds	1
 11921   00069A                     ?_write_sector:
 11922                           	callstack 0
 11923   00069A                     ?_read_sector:
 11924                           	callstack 0
 11925   00069A                     mount_volume@tsect:
 11926                           	callstack 0
 11927                           
 11928                           ; 4 bytes @ 0x9A
 11929   00069A                     	ds	2
 11930   00069C                     ??_write_sector:
 11931   00069C                     ??_read_sector:
 11932                           
 11933                           ; 1 bytes @ 0x9C
 11934   00069C                     	ds	2
 11935   00069E                     mount_volume@bsect:
 11936                           	callstack 0
 11937                           
 11938                           ; 4 bytes @ 0x9E
 11939   00069E                     	ds	1
 11940   00069F                     write_sector@filep:
 11941                           	callstack 0
 11942   00069F                     read_sector@filep:
 11943                           	callstack 0
 11944                           
 11945                           ; 2 bytes @ 0x9F
 11946   00069F                     	ds	2
 11947   0006A1                     write_sector@fres:
 11948                           	callstack 0
 11949   0006A1                     read_sector@fres:
 11950                           	callstack 0
 11951                           
 11952                           ; 1 bytes @ 0xA1
 11953   0006A1                     	ds	1
 11954   0006A2                     mount_volume@stat:
 11955                           	callstack 0
 11956   0006A2                     write_sector@n:
 11957                           	callstack 0
 11958   0006A2                     read_sector@n:
 11959                           	callstack 0
 11960                           
 11961                           ; 2 bytes @ 0xA2
 11962   0006A2                     	ds	1
 11963   0006A3                     mount_volume@nclst:
 11964                           	callstack 0
 11965                           
 11966                           ; 4 bytes @ 0xA3
 11967   0006A3                     	ds	4
 11968   0006A7                     mount_volume@fasize:
 11969                           	callstack 0
 11970                           
 11971                           ; 4 bytes @ 0xA7
 11972   0006A7                     	ds	4
 11973   0006AB                     mount_volume@fmt:
 11974                           	callstack 0
 11975                           
 11976                           ; 2 bytes @ 0xAB
 11977   0006AB                     	ds	2
 11978   0006AD                     mount_volume@fs:
 11979                           	callstack 0
 11980                           
 11981                           ; 2 bytes @ 0xAD
 11982   0006AD                     	ds	2
 11983   0006AF                     f_mount@fs:
 11984                           	callstack 0
 11985   0006AF                     f_open@fp:
 11986                           	callstack 0
 11987   0006AF                     f_chdir@path:
 11988                           	callstack 0
 11989   0006AF                     f_getcwd@buff:
 11990                           	callstack 0
 11991   0006AF                     f_opendir@dp:
 11992                           	callstack 0
 11993                           
 11994                           ; 2 bytes @ 0xAF
 11995   0006AF                     	ds	2
 11996   0006B1                     f_chdir@res:
 11997                           	callstack 0
 11998   0006B1                     f_mount@path:
 11999                           	callstack 0
 12000   0006B1                     f_open@path:
 12001                           	callstack 0
 12002   0006B1                     f_getcwd@len:
 12003                           	callstack 0
 12004   0006B1                     f_opendir@path:
 12005                           	callstack 0
 12006                           
 12007                           ; 2 bytes @ 0xB1
 12008   0006B1                     	ds	1
 12009   0006B2                     f_chdir@fs:
 12010                           	callstack 0
 12011                           
 12012                           ; 2 bytes @ 0xB2
 12013   0006B2                     	ds	1
 12014   0006B3                     f_mount@opt:
 12015                           	callstack 0
 12016   0006B3                     f_open@mode:
 12017                           	callstack 0
 12018   0006B3                     f_opendir@fs:
 12019                           	callstack 0
 12020   0006B3                     ??_f_getcwd:
 12021                           
 12022                           ; 1 bytes @ 0xB3
 12023   0006B3                     	ds	1
 12024   0006B4                     f_mount@res:
 12025                           	callstack 0
 12026   0006B4                     f_chdir@dj:
 12027                           	callstack 0
 12028   0006B4                     ??_f_open:
 12029                           
 12030                           ; 1 bytes @ 0xB4
 12031   0006B4                     	ds	1
 12032   0006B5                     f_opendir@res:
 12033                           	callstack 0
 12034   0006B5                     f_mount@rp:
 12035                           	callstack 0
 12036                           
 12037                           ; 2 bytes @ 0xB5
 12038   0006B5                     	ds	2
 12039   0006B7                     f_mount@cfs:
 12040                           	callstack 0
 12041                           
 12042                           ; 2 bytes @ 0xB7
 12043   0006B7                     	ds	2
 12044   0006B9                     f_mount@vol:
 12045                           	callstack 0
 12046                           
 12047                           ; 2 bytes @ 0xB9
 12048   0006B9                     	ds	2
 12049   0006BB                     ?_disk_init:
 12050                           	callstack 0
 12051                           
 12052                           ; 2 bytes @ 0xBB
 12053   0006BB                     	ds	1
 12054   0006BC                     f_open@bcs:
 12055                           	callstack 0
 12056                           
 12057                           ; 4 bytes @ 0xBC
 12058   0006BC                     	ds	4
 12059   0006C0                     f_open@tm:
 12060                           	callstack 0
 12061                           
 12062                           ; 4 bytes @ 0xC0
 12063   0006C0                     	ds	4
 12064   0006C4                     f_open@cl:
 12065                           	callstack 0
 12066                           
 12067                           ; 4 bytes @ 0xC4
 12068   0006C4                     	ds	4
 12069   0006C8                     f_open@sc:
 12070                           	callstack 0
 12071                           
 12072                           ; 4 bytes @ 0xC8
 12073   0006C8                     	ds	4
 12074   0006CC                     f_open@ofs:
 12075                           	callstack 0
 12076                           
 12077                           ; 4 bytes @ 0xCC
 12078   0006CC                     	ds	4
 12079   0006D0                     f_open@clst:
 12080                           	callstack 0
 12081                           
 12082                           ; 4 bytes @ 0xD0
 12083   0006D0                     	ds	4
 12084   0006D4                     f_open@fs:
 12085                           	callstack 0
 12086                           
 12087                           ; 2 bytes @ 0xD4
 12088   0006D4                     	ds	2
 12089   0006D6                     f_open@res:
 12090                           	callstack 0
 12091                           
 12092                           ; 1 bytes @ 0xD6
 12093   0006D6                     	ds	1
 12094   0006D7                     f_open@dj:
 12095                           	callstack 0
 12096                           
 12097                           ; 40 bytes @ 0xD7
 12098   0006D7                     	ds	40
 12099   0006FF                     drive_cpu@rs:
 12100                           	callstack 0
 12101                           
 12102                           ; 1 bytes @ 0xFF
 12103   0006FF                     	ds	1
 12104                           
 12105                           	psect	cstackBANK5
 12106   000560                     __pcstackBANK5:
 12107                           	callstack 0
 12108   000560                     efgtoa@fp:
 12109                           	callstack 0
 12110                           
 12111                           ; 2 bytes @ 0x0
 12112   000560                     	ds	2
 12113   000562                     efgtoa@f:
 12114                           	callstack 0
 12115                           
 12116                           ; 4 bytes @ 0x2
 12117   000562                     	ds	4
 12118   000566                     efgtoa@c:
 12119                           	callstack 0
 12120                           
 12121                           ; 1 bytes @ 0x6
 12122   000566                     	ds	1
 12123   000567                     efgtoa@ne:
 12124                           	callstack 0
 12125                           
 12126                           ; 2 bytes @ 0x7
 12127   000567                     	ds	2
 12128   000569                     efgtoa@p:
 12129                           	callstack 0
 12130                           
 12131                           ; 2 bytes @ 0x9
 12132   000569                     	ds	2
 12133   00056B                     efgtoa@t:
 12134                           	callstack 0
 12135                           
 12136                           ; 2 bytes @ 0xB
 12137   00056B                     	ds	2
 12138   00056D                     _efgtoa$4721:
 12139                           	callstack 0
 12140                           
 12141                           ; 2 bytes @ 0xD
 12142   00056D                     	ds	2
 12143   00056F                     efgtoa@pp:
 12144                           	callstack 0
 12145                           
 12146                           ; 1 bytes @ 0xF
 12147   00056F                     	ds	1
 12148   000570                     efgtoa@mode:
 12149                           	callstack 0
 12150                           
 12151                           ; 1 bytes @ 0x10
 12152   000570                     	ds	1
 12153   000571                     efgtoa@nmode:
 12154                           	callstack 0
 12155                           
 12156                           ; 1 bytes @ 0x11
 12157   000571                     	ds	1
 12158   000572                     efgtoa@d:
 12159                           	callstack 0
 12160                           
 12161                           ; 2 bytes @ 0x12
 12162   000572                     	ds	2
 12163   000574                     efgtoa@m:
 12164                           	callstack 0
 12165                           
 12166                           ; 2 bytes @ 0x14
 12167   000574                     	ds	2
 12168   000576                     efgtoa@e:
 12169                           	callstack 0
 12170                           
 12171                           ; 2 bytes @ 0x16
 12172   000576                     	ds	2
 12173   000578                     efgtoa@ou:
 12174                           	callstack 0
 12175                           
 12176                           ; 4 bytes @ 0x18
 12177   000578                     	ds	4
 12178   00057C                     efgtoa@w:
 12179                           	callstack 0
 12180                           
 12181                           ; 2 bytes @ 0x1C
 12182   00057C                     	ds	2
 12183   00057E                     efgtoa@h:
 12184                           	callstack 0
 12185                           
 12186                           ; 4 bytes @ 0x1E
 12187   00057E                     	ds	4
 12188   000582                     efgtoa@l:
 12189                           	callstack 0
 12190                           
 12191                           ; 4 bytes @ 0x22
 12192   000582                     	ds	4
 12193   000586                     efgtoa@i:
 12194                           	callstack 0
 12195                           
 12196                           ; 2 bytes @ 0x26
 12197   000586                     	ds	2
 12198   000588                     efgtoa@sign:
 12199                           	callstack 0
 12200                           
 12201                           ; 1 bytes @ 0x28
 12202   000588                     	ds	1
 12203   000589                     efgtoa@g:
 12204                           	callstack 0
 12205                           
 12206                           ; 4 bytes @ 0x29
 12207   000589                     	ds	4
 12208   00058D                     efgtoa@n:
 12209                           	callstack 0
 12210                           
 12211                           ; 2 bytes @ 0x2D
 12212   00058D                     	ds	2
 12213   00058F                     efgtoa@u:
 12214                           	callstack 0
 12215                           
 12216                           ; 4 bytes @ 0x2F
 12217   00058F                     	ds	4
 12218   000593                     vfpfcnvrt@fp:
 12219                           	callstack 0
 12220                           
 12221                           ; 2 bytes @ 0x33
 12222   000593                     	ds	2
 12223   000595                     vfpfcnvrt@fmt:
 12224                           	callstack 0
 12225                           
 12226                           ; 2 bytes @ 0x35
 12227   000595                     	ds	2
 12228   000597                     vfpfcnvrt@ap:
 12229                           	callstack 0
 12230                           
 12231                           ; 2 bytes @ 0x37
 12232   000597                     	ds	2
 12233   000599                     ??_vfpfcnvrt:
 12234                           
 12235                           ; 1 bytes @ 0x39
 12236   000599                     	ds	4
 12237   00059D                     vfpfcnvrt@done:
 12238                           	callstack 0
 12239                           
 12240                           ; 1 bytes @ 0x3D
 12241   00059D                     	ds	1
 12242   00059E                     vfpfcnvrt@convarg:
 12243                           	callstack 0
 12244                           
 12245                           ; 4 bytes @ 0x3E
 12246   00059E                     	ds	4
 12247   0005A2                     vfpfcnvrt@c:
 12248                           	callstack 0
 12249                           
 12250                           ; 1 bytes @ 0x42
 12251   0005A2                     	ds	1
 12252   0005A3                     vfpfcnvrt@cp:
 12253                           	callstack 0
 12254                           
 12255                           ; 2 bytes @ 0x43
 12256   0005A3                     	ds	2
 12257   0005A5                     ?_vfprintf:
 12258                           	callstack 0
 12259   0005A5                     vfprintf@fp:
 12260                           	callstack 0
 12261                           
 12262                           ; 2 bytes @ 0x45
 12263   0005A5                     	ds	2
 12264   0005A7                     vfprintf@fmt:
 12265                           	callstack 0
 12266                           
 12267                           ; 2 bytes @ 0x47
 12268   0005A7                     	ds	2
 12269   0005A9                     vfprintf@ap:
 12270                           	callstack 0
 12271                           
 12272                           ; 2 bytes @ 0x49
 12273   0005A9                     	ds	2
 12274   0005AB                     vfprintf@cfmt:
 12275                           	callstack 0
 12276                           
 12277                           ; 2 bytes @ 0x4B
 12278   0005AB                     	ds	2
 12279   0005AD                     ?_printf:
 12280                           	callstack 0
 12281   0005AD                     ?_sprintf:
 12282                           	callstack 0
 12283   0005AD                     sprintf@s:
 12284                           	callstack 0
 12285   0005AD                     printf@fmt:
 12286                           	callstack 0
 12287                           
 12288                           ; 2 bytes @ 0x4D
 12289   0005AD                     	ds	2
 12290   0005AF                     sprintf@fmt:
 12291                           	callstack 0
 12292                           
 12293                           ; 2 bytes @ 0x4F
 12294   0005AF                     	ds	4
 12295   0005B3                     sprintf@ap:
 12296                           	callstack 0
 12297                           
 12298                           ; 2 bytes @ 0x53
 12299   0005B3                     	ds	2
 12300   0005B5                     sprintf@f:
 12301                           	callstack 0
 12302                           
 12303                           ; 11 bytes @ 0x55
 12304   0005B5                     	ds	6
 12305   0005BB                     printf@ap:
 12306                           	callstack 0
 12307                           
 12308                           ; 2 bytes @ 0x5B
 12309   0005BB                     	ds	2
 12310   0005BD                     ?_get_line:
 12311                           	callstack 0
 12312   0005BD                     disk_status@pdrv:
 12313                           	callstack 0
 12314   0005BD                     disk_ioctl@cmd:
 12315                           	callstack 0
 12316   0005BD                     util_hexdump@header:
 12317                           	callstack 0
 12318   0005BD                     util_addrdump@header:
 12319                           	callstack 0
 12320   0005BD                     get_line@s:
 12321                           	callstack 0
 12322   0005BD                     SPI_SD_configure@ctx_:
 12323                           	callstack 0
 12324   0005BD                     ??_print_reg:
 12325   0005BD                     ??_wait_for_programmer:
 12326   0005BD                     ??_reset_cpu:
 12327                           
 12328                           ; 1 bytes @ 0x5D
 12329   0005BD                     	ds	1
 12330   0005BE                     disk_ioctl@buff:
 12331                           	callstack 0
 12332   0005BE                     validate@obj:
 12333                           	callstack 0
 12334                           
 12335                           ; 2 bytes @ 0x5E
 12336   0005BE                     	ds	1
 12337   0005BF                     util_hexdump@addr:
 12338                           	callstack 0
 12339   0005BF                     get_line@length:
 12340                           	callstack 0
 12341   0005BF                     SPI_SD_configure@clock_speed:
 12342                           	callstack 0
 12343   0005BF                     util_addrdump@addr_offs:
 12344                           	callstack 0
 12345                           
 12346                           ; 4 bytes @ 0x5F
 12347   0005BF                     	ds	1
 12348   0005C0                     disk_ioctl@pdrv:
 12349                           	callstack 0
 12350   0005C0                     validate@rfs:
 12351                           	callstack 0
 12352                           
 12353                           ; 2 bytes @ 0x60
 12354   0005C0                     	ds	1
 12355   0005C1                     disk_ioctl@res:
 12356                           	callstack 0
 12357   0005C1                     SPI_SD_configure@bit_order:
 12358                           	callstack 0
 12359   0005C1                     util_hexdump@size:
 12360                           	callstack 0
 12361   0005C1                     get_line@c:
 12362                           	callstack 0
 12363                           
 12364                           ; 2 bytes @ 0x61
 12365   0005C1                     	ds	1
 12366   0005C2                     SPI_SD_configure@data_mode:
 12367                           	callstack 0
 12368   0005C2                     print_reg@reg_02:
 12369                           	callstack 0
 12370   0005C2                     ??_validate:
 12371                           
 12372                           ; 1 bytes @ 0x62
 12373   0005C2                     	ds	1
 12374   0005C3                     get_line@n:
 12375                           	callstack 0
 12376   0005C3                     util_addrdump@addr:
 12377                           	callstack 0
 12378   0005C3                     ??_util_hexdump:
 12379   0005C3                     ??_SPI_SD_configure:
 12380                           
 12381                           ; 1 bytes @ 0x63
 12382   0005C3                     	ds	1
 12383   0005C4                     print_reg@reg_816:
 12384                           	callstack 0
 12385                           
 12386                           ; 2 bytes @ 0x64
 12387   0005C4                     	ds	1
 12388   0005C5                     ?_SDCard_init:
 12389                           	callstack 0
 12390   0005C5                     util_addrdump@size:
 12391                           	callstack 0
 12392   0005C5                     SDCard_init@initial_clock_speed:
 12393                           	callstack 0
 12394   0005C5                     util_hexdump@chars:
 12395                           	callstack 0
 12396                           
 12397                           ; 17 bytes @ 0x65
 12398   0005C5                     	ds	1
 12399   0005C6                     _validate$1173:
 12400                           	callstack 0
 12401                           
 12402                           ; 2 bytes @ 0x66
 12403   0005C6                     	ds	1
 12404   0005C7                     SDCard_init@clock_speed:
 12405                           	callstack 0
 12406   0005C7                     ??_util_addrdump:
 12407                           
 12408                           ; 1 bytes @ 0x67
 12409   0005C7                     	ds	1
 12410   0005C8                     validate@res:
 12411                           	callstack 0
 12412                           
 12413                           ; 1 bytes @ 0x68
 12414   0005C8                     	ds	1
 12415   0005C9                     f_closedir@dp:
 12416                           	callstack 0
 12417   0005C9                     SDCard_init@timeout:
 12418                           	callstack 0
 12419   0005C9                     util_addrdump@chars:
 12420                           	callstack 0
 12421                           
 12422                           ; 17 bytes @ 0x69
 12423   0005C9                     	ds	2
 12424   0005CB                     f_closedir@fs:
 12425                           	callstack 0
 12426   0005CB                     ??_SDCard_init:
 12427                           
 12428                           ; 1 bytes @ 0x6B
 12429   0005CB                     	ds	1
 12430   0005CC                     SDCard_init@i:
 12431                           	callstack 0
 12432                           
 12433                           ; 2 bytes @ 0x6C
 12434   0005CC                     	ds	1
 12435   0005CD                     f_closedir@res:
 12436                           	callstack 0
 12437                           
 12438                           ; 1 bytes @ 0x6D
 12439   0005CD                     	ds	1
 12440   0005CE                     SDCard_init@spi:
 12441                           	callstack 0
 12442                           
 12443                           ; 2 bytes @ 0x6E
 12444   0005CE                     	ds	2
 12445   0005D0                     SDCard_init@buf:
 12446                           	callstack 0
 12447                           
 12448                           ; 5 bytes @ 0x70
 12449   0005D0                     	ds	5
 12450   0005D5                     ??_setup_sd:
 12451                           
 12452                           ; 1 bytes @ 0x75
 12453   0005D5                     	ds	1
 12454   0005D6                     util_hexdump@buf:
 12455                           	callstack 0
 12456                           
 12457                           ; 2 bytes @ 0x76
 12458   0005D6                     	ds	2
 12459   0005D8                     util_hexdump@i:
 12460                           	callstack 0
 12461                           
 12462                           ; 2 bytes @ 0x78
 12463   0005D8                     	ds	2
 12464   0005DA                     util_addrdump@buf:
 12465                           	callstack 0
 12466   0005DA                     util_hexdump_sum@header:
 12467                           	callstack 0
 12468                           
 12469                           ; 2 bytes @ 0x7A
 12470   0005DA                     	ds	2
 12471   0005DC                     util_addrdump@i:
 12472                           	callstack 0
 12473   0005DC                     util_hexdump_sum@addr:
 12474                           	callstack 0
 12475                           
 12476                           ; 2 bytes @ 0x7C
 12477   0005DC                     	ds	2
 12478   0005DE                     ?_SDCard_read512:
 12479                           	callstack 0
 12480   0005DE                     ?_SDCard_write512:
 12481                           	callstack 0
 12482   0005DE                     ?_mem_init:
 12483                           	callstack 0
 12484   0005DE                     util_hexdump_sum@size:
 12485                           	callstack 0
 12486   0005DE                     mem_dump@p:
 12487                           	callstack 0
 12488   0005DE                     SDCard_read512@addr:
 12489                           	callstack 0
 12490   0005DE                     SDCard_write512@addr:
 12491                           	callstack 0
 12492                           
 12493                           ; 4 bytes @ 0x7E
 12494   0005DE                     	ds	2
 12495   0005E0                     util_hexdump_sum@p:
 12496                           	callstack 0
 12497   0005E0                     mem_dump@addr:
 12498                           	callstack 0
 12499                           
 12500                           ; 4 bytes @ 0x80
 12501   0005E0                     	ds	2
 12502   0005E2                     util_hexdump_sum@i:
 12503                           	callstack 0
 12504   0005E2                     SDCard_read512@offs:
 12505                           	callstack 0
 12506   0005E2                     SDCard_write512@offs:
 12507                           	callstack 0
 12508   0005E2                     ??_mem_init:
 12509                           
 12510                           ; 1 bytes @ 0x82
 12511   0005E2                     	ds	2
 12512   0005E4                     util_hexdump_sum@sum:
 12513                           	callstack 0
 12514   0005E4                     SDCard_read512@buf:
 12515                           	callstack 0
 12516   0005E4                     SDCard_write512@buf:
 12517                           	callstack 0
 12518                           
 12519                           ; 2 bytes @ 0x84
 12520   0005E4                     	ds	2
 12521   0005E6                     mem_init@i:
 12522                           	callstack 0
 12523   0005E6                     SDCard_read512@count:
 12524                           	callstack 0
 12525   0005E6                     SDCard_write512@count:
 12526                           	callstack 0
 12527                           
 12528                           ; 2 bytes @ 0x86
 12529   0005E6                     	ds	2
 12530   0005E8                     mem_init@addr:
 12531                           	callstack 0
 12532   0005E8                     ??_SDCard_read512:
 12533   0005E8                     ??_SDCard_write512:
 12534                           
 12535                           ; 1 bytes @ 0x88
 12536   0005E8                     	ds	4
 12537   0005EC                     SDCard_read512@i:
 12538                           	callstack 0
 12539   0005EC                     SDCard_write512@i:
 12540                           	callstack 0
 12541                           
 12542                           ; 2 bytes @ 0x8C
 12543   0005EC                     	ds	2
 12544   0005EE                     SDCard_read512@i_4067:
 12545                           	callstack 0
 12546   0005EE                     SDCard_write512@i_4084:
 12547                           	callstack 0
 12548                           
 12549                           ; 2 bytes @ 0x8E
 12550   0005EE                     	ds	2
 12551   0005F0                     SDCard_read512@retry:
 12552                           	callstack 0
 12553   0005F0                     SDCard_write512@retry:
 12554                           	callstack 0
 12555                           
 12556                           ; 2 bytes @ 0x90
 12557   0005F0                     	ds	2
 12558   0005F2                     SDCard_read512@resp_crc:
 12559                           	callstack 0
 12560   0005F2                     SDCard_write512@result:
 12561                           	callstack 0
 12562                           
 12563                           ; 2 bytes @ 0x92
 12564   0005F2                     	ds	2
 12565   0005F4                     SDCard_read512@result:
 12566                           	callstack 0
 12567   0005F4                     SDCard_write512@crc:
 12568                           	callstack 0
 12569                           
 12570                           ; 2 bytes @ 0x94
 12571   0005F4                     	ds	2
 12572   0005F6                     SDCard_read512@spi:
 12573                           	callstack 0
 12574   0005F6                     SDCard_write512@spi:
 12575                           	callstack 0
 12576                           
 12577                           ; 2 bytes @ 0x96
 12578   0005F6                     	ds	2
 12579   0005F8                     SDCard_write512@response:
 12580                           	callstack 0
 12581   0005F8                     SDCard_read512@crc:
 12582                           	callstack 0
 12583                           
 12584                           ; 2 bytes @ 0x98
 12585   0005F8                     	ds	1
 12586   0005F9                     disk_write@pdrv:
 12587                           	callstack 0
 12588                           
 12589                           ; 1 bytes @ 0x99
 12590   0005F9                     	ds	1
 12591   0005FA                     SDCard_read512@response:
 12592                           	callstack 0
 12593   0005FA                     disk_write@i:
 12594                           	callstack 0
 12595                           
 12596                           ; 2 bytes @ 0x9A
 12597   0005FA                     	ds	1
 12598   0005FB                     disk_read@pdrv:
 12599                           	callstack 0
 12600   0005FB                     ??_disk_initialize:
 12601                           
 12602                           ; 1 bytes @ 0x9B
 12603   0005FB                     	ds	1
 12604   0005FC                     sync_window@res:
 12605                           	callstack 0
 12606   0005FC                     disk_read@i:
 12607                           	callstack 0
 12608                           
 12609                           ; 2 bytes @ 0x9C
 12610   0005FC                     	ds	1
 12611   0005FD                     sync_fs@res:
 12612                           	callstack 0
 12613   0005FD                     
 12614                           ; 1 bytes @ 0x9D
 12615   0005FD                     	ds	1
 12616   0005FE                     move_window@res:
 12617                           	callstack 0
 12618                           
 12619                           ; 1 bytes @ 0x9E
 12620   0005FE                     	ds	1
 12621   0005FF                     in_file@chr:
 12622                           	callstack 0
 12623   0005FF                     u_getch@c:
 12624                           	callstack 0
 12625   0005FF                     ??_f_gets:
 12626   0005FF                     
 12627                           ; 1 bytes @ 0x9F
 12628   0005FF                     	ds	1
 12629                           
 12630                           	psect	cstackCOMRAM
 12631   000501                     __pcstackCOMRAM:
 12632                           	callstack 0
 12633   000501                     ??_URT3Rx_ISR:
 12634                           
 12635                           ; 1 bytes @ 0x0
 12636   000501                     	ds	2
 12637   000503                     URT3Rx_ISR@rx_data:
 12638                           	callstack 0
 12639                           
 12640                           ; 1 bytes @ 0x2
 12641   000503                     	ds	1
 12642   000504                     ?_memcmp:
 12643                           	callstack 0
 12644   000504                     ?_strchr:
 12645                           	callstack 0
 12646   000504                     ?___fpclassifyf:
 12647                           	callstack 0
 12648   000504                     ?_strlen:
 12649                           	callstack 0
 12650   000504                     ?_getch:
 12651                           	callstack 0
 12652   000504                     ?___SDCard_crc16:
 12653                           	callstack 0
 12654   000504                     ?_strncmp:
 12655                           	callstack 0
 12656   000504                     ?_ld_word:
 12657                           	callstack 0
 12658   000504                     ?_dbc_1st:
 12659                           	callstack 0
 12660   000504                     ?_dbc_2nd:
 12661                           	callstack 0
 12662   000504                     ?_get_ldnumber:
 12663                           	callstack 0
 12664   000504                     ?_setup_drive:
 12665                           	callstack 0
 12666   000504                     ?_read_prec_or_width:
 12667                           	callstack 0
 12668   000504                     ?___fladd:
 12669                           	callstack 0
 12670   000504                     ?_labs:
 12671                           	callstack 0
 12672   000504                     ?_get_fattime:
 12673                           	callstack 0
 12674   000504                     ?_get_hex:
 12675                           	callstack 0
 12676   000504                     ?_ld_dword:
 12677                           	callstack 0
 12678   000504                     ?___lmul:
 12679                           	callstack 0
 12680   000504                     ?___lldiv:
 12681                           	callstack 0
 12682   000504                     ?___aldiv:
 12683                           	callstack 0
 12684   000504                     ?___almod:
 12685                           	callstack 0
 12686   000504                     ?___flneg:
 12687                           	callstack 0
 12688   000504                     ?___fltol:
 12689                           	callstack 0
 12690   000504                     ?___xxtofl:
 12691                           	callstack 0
 12692   000504                     putch@c:
 12693                           	callstack 0
 12694   000504                     get_hex@buf:
 12695                           	callstack 0
 12696   000504                     ld_word@ptr:
 12697                           	callstack 0
 12698   000504                     ld_dword@ptr:
 12699                           	callstack 0
 12700   000504                     st_word@ptr:
 12701                           	callstack 0
 12702   000504                     st_dword@ptr:
 12703                           	callstack 0
 12704   000504                     get_ldnumber@path:
 12705                           	callstack 0
 12706   000504                     del_space@bytes:
 12707                           	callstack 0
 12708   000504                     set_arg@buf:
 12709                           	callstack 0
 12710   000504                     acquire_bus@ctx_:
 12711                           	callstack 0
 12712   000504                     release_bus@ctx_:
 12713                           	callstack 0
 12714   000504                     SPI_SD_begin@ctx_:
 12715                           	callstack 0
 12716   000504                     SPI_SD_send@ctx_:
 12717                           	callstack 0
 12718   000504                     SPI_SD_receive@ctx_:
 12719                           	callstack 0
 12720   000504                     SPI_SD_select@ctx_:
 12721                           	callstack 0
 12722   000504                     SDCard_crc@buf:
 12723                           	callstack 0
 12724   000504                     ___SDCard_crc16@crc:
 12725                           	callstack 0
 12726   000504                     memcmp@vl:
 12727                           	callstack 0
 12728   000504                     memcpy@d1:
 12729                           	callstack 0
 12730   000504                     memset@dest:
 12731                           	callstack 0
 12732   000504                     read_prec_or_width@fmt:
 12733                           	callstack 0
 12734   000504                     strchr@s:
 12735                           	callstack 0
 12736   000504                     strcpy@dest:
 12737                           	callstack 0
 12738   000504                     strlen@s:
 12739                           	callstack 0
 12740   000504                     strncmp@l:
 12741                           	callstack 0
 12742   000504                     write_sram@addr:
 12743                           	callstack 0
 12744   000504                     read_sram@addr:
 12745                           	callstack 0
 12746   000504                     ___lmul@multiplier:
 12747                           	callstack 0
 12748   000504                     ___lldiv@dividend:
 12749                           	callstack 0
 12750   000504                     ___aldiv@dividend:
 12751                           	callstack 0
 12752   000504                     ___almod@dividend:
 12753                           	callstack 0
 12754   000504                     ___fleq@ff1:
 12755                           	callstack 0
 12756   000504                     ___flneg@f1:
 12757                           	callstack 0
 12758   000504                     ___fltol@f1:
 12759                           	callstack 0
 12760   000504                     ___fladd@b:
 12761                           	callstack 0
 12762   000504                     ___xxtofl@val:
 12763                           	callstack 0
 12764   000504                     ___fpclassifyf@x:
 12765                           	callstack 0
 12766   000504                     labs@a:
 12767                           	callstack 0
 12768   000504                     ??_start_cpu:
 12769   000504                     
 12770                           ; 1 bytes @ 0x3
 12771   000504                     	ds	1
 12772   000505                     fputc@c:
 12773                           	callstack 0
 12774                           
 12775                           ; 2 bytes @ 0x4
 12776   000505                     	ds	1
 12777   000506                     dbc_1st@c:
 12778                           	callstack 0
 12779   000506                     dbc_2nd@c:
 12780                           	callstack 0
 12781   000506                     st_word@val:
 12782                           	callstack 0
 12783   000506                     set_arg@i:
 12784                           	callstack 0
 12785   000506                     acquire_bus@ctx:
 12786                           	callstack 0
 12787   000506                     release_bus@ctx:
 12788                           	callstack 0
 12789   000506                     SPI_SD_begin@ctx:
 12790                           	callstack 0
 12791   000506                     SPI_SD_send@buf:
 12792                           	callstack 0
 12793   000506                     SPI_SD_receive@buf:
 12794                           	callstack 0
 12795   000506                     SPI_SD_select@select:
 12796                           	callstack 0
 12797   000506                     SDCard_crc@count:
 12798                           	callstack 0
 12799   000506                     ___SDCard_crc16@buf:
 12800                           	callstack 0
 12801   000506                     memcmp@vr:
 12802                           	callstack 0
 12803   000506                     memcpy@s1:
 12804                           	callstack 0
 12805   000506                     memset@c:
 12806                           	callstack 0
 12807   000506                     read_prec_or_width@ap:
 12808                           	callstack 0
 12809   000506                     strchr@c:
 12810                           	callstack 0
 12811   000506                     strcpy@src:
 12812                           	callstack 0
 12813   000506                     strlen@a:
 12814                           	callstack 0
 12815   000506                     strncmp@r:
 12816                           	callstack 0
 12817   000506                     st_dword@val:
 12818                           	callstack 0
 12819   000506                     ??_getch:
 12820   000506                     ??_ld_word:
 12821   000506                     ??_get_ldnumber:
 12822   000506                     ??_del_space:
 12823   000506                     
 12824                           ; 1 bytes @ 0x5
 12825   000506                     	ds	1
 12826   000507                     del_space@i:
 12827                           	callstack 0
 12828   000507                     fputc@fp:
 12829                           	callstack 0
 12830                           
 12831                           ; 2 bytes @ 0x6
 12832   000507                     	ds	1
 12833   000508                     del_space@pos:
 12834                           	callstack 0
 12835   000508                     getch@c:
 12836                           	callstack 0
 12837   000508                     st_clust@fs:
 12838                           	callstack 0
 12839   000508                     get_ldnumber@i:
 12840                           	callstack 0
 12841   000508                     write_sram@buf:
 12842                           	callstack 0
 12843   000508                     read_sram@buf:
 12844                           	callstack 0
 12845   000508                     SPI_SD_begin_transaction@ctx_:
 12846                           	callstack 0
 12847   000508                     SPI_SD_end_transaction@ctx_:
 12848                           	callstack 0
 12849   000508                     SPI_SD_send@count:
 12850                           	callstack 0
 12851   000508                     SPI_SD_receive@count:
 12852                           	callstack 0
 12853   000508                     SDCard_crc@endp:
 12854                           	callstack 0
 12855   000508                     ___SDCard_crc16@count:
 12856                           	callstack 0
 12857   000508                     memcmp@n:
 12858                           	callstack 0
 12859   000508                     memcpy@n:
 12860                           	callstack 0
 12861   000508                     memset@n:
 12862                           	callstack 0
 12863   000508                     strcpy@d:
 12864                           	callstack 0
 12865   000508                     strncmp@n:
 12866                           	callstack 0
 12867   000508                     ___lmul@multiplicand:
 12868                           	callstack 0
 12869   000508                     ___lldiv@divisor:
 12870                           	callstack 0
 12871   000508                     ___aldiv@divisor:
 12872                           	callstack 0
 12873   000508                     ___almod@divisor:
 12874                           	callstack 0
 12875   000508                     ___fleq@ff2:
 12876                           	callstack 0
 12877   000508                     ___fladd@a:
 12878                           	callstack 0
 12879   000508                     ??_strchr:
 12880   000508                     ??___fpclassifyf:
 12881   000508                     ??_labs:
 12882   000508                     ??_get_hex:
 12883   000508                     ??_ld_dword:
 12884   000508                     ??___fltol:
 12885   000508                     ??___xxtofl:
 12886   000508                     ??_read_prec_or_width:
 12887                           
 12888                           ; 1 bytes @ 0x7
 12889   000508                     	ds	1
 12890   000509                     del_space@c:
 12891                           	callstack 0
 12892   000509                     ld_word@rv:
 12893                           	callstack 0
 12894   000509                     ??_fputc:
 12895                           
 12896                           ; 1 bytes @ 0x8
 12897   000509                     	ds	1
 12898   00050A                     get_ldnumber@tc:
 12899                           	callstack 0
 12900   00050A                     memcpy@tmp:
 12901                           	callstack 0
 12902   00050A                     read_prec_or_width@c:
 12903                           	callstack 0
 12904   00050A                     st_clust@dir:
 12905                           	callstack 0
 12906   00050A                     write_sram@len:
 12907                           	callstack 0
 12908   00050A                     read_sram@len:
 12909                           	callstack 0
 12910   00050A                     SPI_SD_send@i:
 12911                           	callstack 0
 12912   00050A                     SDCard_crc@i:
 12913                           	callstack 0
 12914   00050A                     memset@p:
 12915                           	callstack 0
 12916   00050A                     ??_memcmp:
 12917   00050A                     ??___SDCard_crc16:
 12918   00050A                     ??_strncmp:
 12919   00050A                     ??_SPI_SD_receive:
 12920                           
 12921                           ; 1 bytes @ 0x9
 12922   00050A                     	ds	1
 12923   00050B                     ?_strstr:
 12924                           	callstack 0
 12925   00050B                     ?_ld_clust:
 12926                           	callstack 0
 12927   00050B                     ld_clust@fs:
 12928                           	callstack 0
 12929   00050B                     get_ldnumber@tt:
 12930                           	callstack 0
 12931   00050B                     memcpy@d:
 12932                           	callstack 0
 12933   00050B                     read_prec_or_width@n:
 12934                           	callstack 0
 12935   00050B                     strstr@h:
 12936                           	callstack 0
 12937                           
 12938                           ; 2 bytes @ 0xA
 12939   00050B                     	ds	1
 12940   00050C                     SPI_SD_receive@repeat:
 12941                           	callstack 0
 12942   00050C                     SDCard_crc@crc:
 12943                           	callstack 0
 12944   00050C                     ___aldiv@counter:
 12945                           	callstack 0
 12946   00050C                     ___almod@counter:
 12947                           	callstack 0
 12948   00050C                     ___fltol@sign1:
 12949                           	callstack 0
 12950   00050C                     ___xxtofl@sign:
 12951                           	callstack 0
 12952   00050C                     get_hex@c:
 12953                           	callstack 0
 12954   00050C                     create_name@dp:
 12955                           	callstack 0
 12956   00050C                     read_sram@i:
 12957                           	callstack 0
 12958   00050C                     SPI_SD_send@p:
 12959                           	callstack 0
 12960   00050C                     ___fpclassifyf@e:
 12961                           	callstack 0
 12962   00050C                     memcmp@l:
 12963                           	callstack 0
 12964   00050C                     st_clust@cl:
 12965                           	callstack 0
 12966   00050C                     ___lmul@product:
 12967                           	callstack 0
 12968   00050C                     ___lldiv@quotient:
 12969                           	callstack 0
 12970   00050C                     ??_write_sram:
 12971   00050C                     ??___fladd:
 12972   00050C                     ??___fleq:
 12973                           
 12974                           ; 1 bytes @ 0xB
 12975   00050C                     	ds	1
 12976   00050D                     ___aldiv@sign:
 12977                           	callstack 0
 12978   00050D                     ___almod@sign:
 12979                           	callstack 0
 12980   00050D                     ___fltol@exp1:
 12981                           	callstack 0
 12982   00050D                     ___xxtofl@exp:
 12983                           	callstack 0
 12984   00050D                     ld_clust@dir:
 12985                           	callstack 0
 12986   00050D                     get_ldnumber@vol:
 12987                           	callstack 0
 12988   00050D                     SPI_SD_receive@i:
 12989                           	callstack 0
 12990   00050D                     SDCard_crc@p:
 12991                           	callstack 0
 12992   00050D                     ___SDCard_crc16@endp:
 12993                           	callstack 0
 12994   00050D                     memcpy@s:
 12995                           	callstack 0
 12996   00050D                     strstr@n:
 12997                           	callstack 0
 12998   00050D                     ld_dword@rv:
 12999                           	callstack 0
 13000                           
 13001                           ; 4 bytes @ 0xC
 13002   00050D                     	ds	1
 13003   00050E                     ?_abs:
 13004                           	callstack 0
 13005   00050E                     create_name@path:
 13006                           	callstack 0
 13007   00050E                     write_sram@i:
 13008                           	callstack 0
 13009   00050E                     SPI_SD_dummy_clocks@ctx_:
 13010                           	callstack 0
 13011   00050E                     memcmp@r:
 13012                           	callstack 0
 13013   00050E                     stoa@fp:
 13014                           	callstack 0
 13015   00050E                     abs@a:
 13016                           	callstack 0
 13017   00050E                     fputs@s:
 13018                           	callstack 0
 13019   00050E                     get_hex@d:
 13020                           	callstack 0
 13021   00050E                     read_sram@ab:
 13022                           	callstack 0
 13023   00050E                     ___aldiv@quotient:
 13024                           	callstack 0
 13025   00050E                     ___xxtofl@arg:
 13026                           	callstack 0
 13027   00050E                     ___fpclassifyf@u:
 13028                           	callstack 0
 13029                           
 13030                           ; 4 bytes @ 0xD
 13031   00050E                     	ds	1
 13032   00050F                     SPI_SD_receive@i_3984:
 13033                           	callstack 0
 13034   00050F                     get_ldnumber@tp:
 13035                           	callstack 0
 13036   00050F                     ___SDCard_crc16@p:
 13037                           	callstack 0
 13038   00050F                     strstr@nl:
 13039                           	callstack 0
 13040   00050F                     ??_ld_clust:
 13041                           
 13042                           ; 1 bytes @ 0xE
 13043   00050F                     	ds	1
 13044   000510                     ?___strtoxl:
 13045                           	callstack 0
 13046   000510                     ?_clst2sect:
 13047                           	callstack 0
 13048   000510                     ___lldiv@counter:
 13049                           	callstack 0
 13050   000510                     ___fladd@signs:
 13051                           	callstack 0
 13052   000510                     clst2sect@fs:
 13053                           	callstack 0
 13054   000510                     SPI_SD_receive@p:
 13055                           	callstack 0
 13056   000510                     SPI_SD_dummy_clocks@clocks:
 13057                           	callstack 0
 13058   000510                     ___strtoxl@s:
 13059                           	callstack 0
 13060   000510                     stoa@s:
 13061                           	callstack 0
 13062   000510                     fputs@fp:
 13063                           	callstack 0
 13064   000510                     write_sram@ab:
 13065                           	callstack 0
 13066   000510                     ??_abs:
 13067   000510                     ??_create_name:
 13068                           
 13069                           ; 1 bytes @ 0xF
 13070   000510                     	ds	1
 13071   000511                     ___fladd@aexp:
 13072                           	callstack 0
 13073   000511                     get_fileinfo@dp:
 13074                           	callstack 0
 13075                           
 13076                           ; 2 bytes @ 0x10
 13077   000511                     	ds	1
 13078   000512                     ?___flmul:
 13079                           	callstack 0
 13080   000512                     ___fladd@bexp:
 13081                           	callstack 0
 13082   000512                     fputs@c:
 13083                           	callstack 0
 13084   000512                     SPI_SD_dummy_clocks@i:
 13085                           	callstack 0
 13086   000512                     SPI_SD_receive_byte@ctx_:
 13087                           	callstack 0
 13088   000512                     ___strtoxl@endptr:
 13089                           	callstack 0
 13090   000512                     get_hex@hexval:
 13091                           	callstack 0
 13092   000512                     clst2sect@clst:
 13093                           	callstack 0
 13094   000512                     ___flmul@b:
 13095                           	callstack 0
 13096   000512                     ??_stoa:
 13097                           
 13098                           ; 1 bytes @ 0x11
 13099   000512                     	ds	1
 13100   000513                     ___fladd@grs:
 13101                           	callstack 0
 13102   000513                     get_fileinfo@fno:
 13103                           	callstack 0
 13104   000513                     _create_name$968:
 13105                           	callstack 0
 13106   000513                     fputs@i:
 13107                           	callstack 0
 13108   000513                     ld_clust@cl:
 13109                           	callstack 0
 13110                           
 13111                           ; 4 bytes @ 0x12
 13112   000513                     	ds	1
 13113   000514                     SPI_SD_dummy_clocks@dummy:
 13114                           	callstack 0
 13115   000514                     SPI_SD_receive_byte@dummy:
 13116                           	callstack 0
 13117   000514                     ___strtoxl@base:
 13118                           	callstack 0
 13119   000514                     stoa@p:
 13120                           	callstack 0
 13121   000514                     
 13122                           ; 1 bytes @ 0x13
 13123   000514                     	ds	1
 13124   000515                     _create_name$972:
 13125                           	callstack 0
 13126   000515                     SDCard_end_transaction@spi:
 13127                           	callstack 0
 13128   000515                     ___SDCard_wait_response@attempts:
 13129                           	callstack 0
 13130   000515                     pad@fp:
 13131                           	callstack 0
 13132   000515                     ??_get_fileinfo:
 13133   000515                     
 13134                           ; 1 bytes @ 0x14
 13135   000515                     	ds	1
 13136   000516                     get_hex@ch:
 13137                           	callstack 0
 13138   000516                     ___strtoxl@is_signed:
 13139                           	callstack 0
 13140   000516                     stoa@w:
 13141                           	callstack 0
 13142   000516                     ___flmul@a:
 13143                           	callstack 0
 13144   000516                     ??_clst2sect:
 13145                           
 13146                           ; 1 bytes @ 0x15
 13147   000516                     	ds	1
 13148   000517                     create_name@d:
 13149                           	callstack 0
 13150   000517                     ___SDCard_wait_response@no_response:
 13151                           	callstack 0
 13152   000517                     pad@buf:
 13153                           	callstack 0
 13154   000517                     ??___strtoxl:
 13155   000517                     
 13156                           ; 1 bytes @ 0x16
 13157   000517                     	ds	1
 13158   000518                     create_name@ni:
 13159                           	callstack 0
 13160   000518                     ___SDCard_wait_response@spi:
 13161                           	callstack 0
 13162   000518                     stoa@cp:
 13163                           	callstack 0
 13164                           
 13165                           ; 2 bytes @ 0x17
 13166   000518                     	ds	1
 13167   000519                     get_fileinfo@si:
 13168                           	callstack 0
 13169   000519                     pad@p:
 13170                           	callstack 0
 13171                           
 13172                           ; 2 bytes @ 0x18
 13173   000519                     	ds	1
 13174   00051A                     ___SDCard_wait_response@response:
 13175                           	callstack 0
 13176   00051A                     create_name@i:
 13177                           	callstack 0
 13178   00051A                     stoa@l:
 13179                           	callstack 0
 13180   00051A                     ___strtoxl@prev_a:
 13181                           	callstack 0
 13182   00051A                     ??___flmul:
 13183                           
 13184                           ; 1 bytes @ 0x19
 13185   00051A                     	ds	1
 13186   00051B                     ?___SDCard_command_r1:
 13187                           	callstack 0
 13188   00051B                     get_fileinfo@c:
 13189                           	callstack 0
 13190   00051B                     ___SDCard_command_r1@argument:
 13191                           	callstack 0
 13192   00051B                     ??_pad:
 13193                           
 13194                           ; 1 bytes @ 0x1A
 13195   00051B                     	ds	1
 13196   00051C                     get_fileinfo@di:
 13197                           	callstack 0
 13198   00051C                     create_name@sfn:
 13199                           	callstack 0
 13200   00051C                     pad@i:
 13201                           	callstack 0
 13202                           
 13203                           ; 2 bytes @ 0x1B
 13204   00051C                     	ds	2
 13205   00051E                     ___flmul@sign:
 13206                           	callstack 0
 13207   00051E                     create_name@p:
 13208                           	callstack 0
 13209   00051E                     ___strtoxl$4576:
 13210                           	callstack 0
 13211   00051E                     dtoa@fp:
 13212                           	callstack 0
 13213   00051E                     xtoa@fp:
 13214                           	callstack 0
 13215                           
 13216                           ; 2 bytes @ 0x1D
 13217   00051E                     	ds	1
 13218   00051F                     ___flmul@aexp:
 13219                           	callstack 0
 13220   00051F                     ___SDCard_command_r1@r1:
 13221                           	callstack 0
 13222                           
 13223                           ; 2 bytes @ 0x1E
 13224   00051F                     	ds	1
 13225   000520                     create_name@si:
 13226                           	callstack 0
 13227   000520                     ___strtoxl$4577:
 13228                           	callstack 0
 13229   000520                     ___flmul@grs:
 13230                           	callstack 0
 13231   000520                     dtoa@d:
 13232                           	callstack 0
 13233   000520                     xtoa@d:
 13234                           	callstack 0
 13235                           
 13236                           ; 4 bytes @ 0x1F
 13237   000520                     	ds	1
 13238   000521                     ___SDCard_command_r1@command:
 13239                           	callstack 0
 13240   000521                     
 13241                           ; 1 bytes @ 0x20
 13242   000521                     	ds	1
 13243   000522                     create_name@c:
 13244                           	callstack 0
 13245   000522                     ___strtoxl@limit:
 13246                           	callstack 0
 13247   000522                     ___SDCard_command_r1@buf:
 13248                           	callstack 0
 13249                           
 13250                           ; 6 bytes @ 0x21
 13251   000522                     	ds	2
 13252   000524                     ___flmul@bexp:
 13253                           	callstack 0
 13254   000524                     xtoa@x:
 13255                           	callstack 0
 13256   000524                     _dtoa$4690:
 13257                           	callstack 0
 13258   000524                     
 13259                           ; 1 bytes @ 0x23
 13260   000524                     	ds	1
 13261   000525                     ___flmul@prod:
 13262                           	callstack 0
 13263   000525                     ??_xtoa:
 13264                           
 13265                           ; 1 bytes @ 0x24
 13266   000525                     	ds	1
 13267   000526                     ___strtoxl@flags:
 13268                           	callstack 0
 13269   000526                     dtoa@p:
 13270                           	callstack 0
 13271                           
 13272                           ; 2 bytes @ 0x25
 13273   000526                     	ds	1
 13274   000527                     ___strtoxl@a:
 13275                           	callstack 0
 13276                           
 13277                           ; 4 bytes @ 0x26
 13278   000527                     	ds	1
 13279   000528                     ___SDCard_command_r1@response:
 13280                           	callstack 0
 13281   000528                     dtoa@w:
 13282                           	callstack 0
 13283                           
 13284                           ; 2 bytes @ 0x27
 13285   000528                     	ds	1
 13286   000529                     xtoa@a:
 13287                           	callstack 0
 13288   000529                     ___SDCard_command_r1@spi:
 13289                           	callstack 0
 13290   000529                     ___flmul@temp:
 13291                           	callstack 0
 13292                           
 13293                           ; 2 bytes @ 0x28
 13294   000529                     	ds	1
 13295   00052A                     dtoa@s:
 13296                           	callstack 0
 13297   00052A                     _xtoa$4743:
 13298                           	callstack 0
 13299                           
 13300                           ; 2 bytes @ 0x29
 13301   00052A                     	ds	1
 13302   00052B                     ?___fldiv:
 13303                           	callstack 0
 13304   00052B                     ?___flsub:
 13305                           	callstack 0
 13306   00052B                     ___strtoxl@cp:
 13307                           	callstack 0
 13308   00052B                     dtoa@i:
 13309                           	callstack 0
 13310   00052B                     SDCard_command@argument:
 13311                           	callstack 0
 13312   00052B                     ___flge@ff1:
 13313                           	callstack 0
 13314   00052B                     ___flsub@b:
 13315                           	callstack 0
 13316   00052B                     ___fldiv@b:
 13317                           	callstack 0
 13318                           
 13319                           ; 4 bytes @ 0x2A
 13320   00052B                     	ds	1
 13321   00052C                     xtoa@p:
 13322                           	callstack 0
 13323                           
 13324                           ; 2 bytes @ 0x2B
 13325   00052C                     	ds	1
 13326   00052D                     ___strtoxl@c:
 13327                           	callstack 0
 13328                           
 13329                           ; 1 bytes @ 0x2C
 13330   00052D                     	ds	1
 13331   00052E                     xtoa@w:
 13332                           	callstack 0
 13333                           
 13334                           ; 2 bytes @ 0x2D
 13335   00052E                     	ds	1
 13336   00052F                     SDCard_command@response_buffer:
 13337                           	callstack 0
 13338   00052F                     ___flge@ff2:
 13339                           	callstack 0
 13340   00052F                     ___flsub@a:
 13341                           	callstack 0
 13342   00052F                     ___fldiv@a:
 13343                           	callstack 0
 13344                           
 13345                           ; 4 bytes @ 0x2E
 13346   00052F                     	ds	1
 13347   000530                     xtoa@c:
 13348                           	callstack 0
 13349                           
 13350                           ; 1 bytes @ 0x2F
 13351   000530                     	ds	1
 13352   000531                     SDCard_command@length:
 13353                           	callstack 0
 13354   000531                     xtoa@i:
 13355                           	callstack 0
 13356                           
 13357                           ; 2 bytes @ 0x30
 13358   000531                     	ds	2
 13359   000533                     SDCard_command@command:
 13360                           	callstack 0
 13361   000533                     ??___fldiv:
 13362   000533                     ??___flge:
 13363                           
 13364                           ; 1 bytes @ 0x32
 13365   000533                     	ds	1
 13366   000534                     SDCard_command@spi:
 13367                           	callstack 0
 13368                           
 13369                           ; 2 bytes @ 0x33
 13370   000534                     	ds	2
 13371   000536                     SDCard_command@result:
 13372                           	callstack 0
 13373                           
 13374                           ; 2 bytes @ 0x35
 13375   000536                     	ds	1
 13376   000537                     ___fldiv@rem:
 13377                           	callstack 0
 13378                           
 13379                           ; 4 bytes @ 0x36
 13380   000537                     	ds	1
 13381   000538                     SDCard_command@responsep:
 13382                           	callstack 0
 13383                           
 13384                           ; 2 bytes @ 0x37
 13385   000538                     	ds	3
 13386   00053B                     ___fldiv@sign:
 13387                           	callstack 0
 13388                           
 13389                           ; 1 bytes @ 0x3A
 13390   00053B                     	ds	1
 13391   00053C                     ___fldiv@new_exp:
 13392                           	callstack 0
 13393                           
 13394                           ; 2 bytes @ 0x3B
 13395   00053C                     	ds	2
 13396   00053E                     ___fldiv@grs:
 13397                           	callstack 0
 13398                           
 13399                           ; 4 bytes @ 0x3D
 13400   00053E                     	ds	4
 13401   000542                     ___fldiv@bexp:
 13402                           	callstack 0
 13403                           
 13404                           ; 1 bytes @ 0x41
 13405   000542                     	ds	1
 13406   000543                     ___fldiv@aexp:
 13407                           	callstack 0
 13408                           
 13409                           ; 1 bytes @ 0x42
 13410   000543                     	ds	1
 13411   000544                     ?_floorf:
 13412                           	callstack 0
 13413   000544                     floorf@x:
 13414                           	callstack 0
 13415                           
 13416                           ; 4 bytes @ 0x43
 13417   000544                     	ds	4
 13418   000548                     ??_floorf:
 13419                           
 13420                           ; 1 bytes @ 0x47
 13421   000548                     	ds	6
 13422   00054E                     floorf@m:
 13423                           	callstack 0
 13424                           
 13425                           ; 4 bytes @ 0x4D
 13426   00054E                     	ds	4
 13427   000552                     floorf@e:
 13428                           	callstack 0
 13429                           
 13430                           ; 2 bytes @ 0x51
 13431   000552                     	ds	2
 13432   000554                     floorf@u:
 13433                           	callstack 0
 13434                           
 13435                           ; 4 bytes @ 0x53
 13436   000554                     	ds	4
 13437   000558                     ??_efgtoa:
 13438                           
 13439                           ; 1 bytes @ 0x57
 13440   000558                     	ds	2
 13441   00055A                     
 13442                           ; 1 bytes @ 0x59
 13443 ;;
 13444 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 13445 ;;
 13446 ;; *************** function _main *****************
 13447 ;; Defined at:
 13448 ;;		line 183 in file "../src/w65_main.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  c               2  156[BANK7 ] int 
 13453 ;;  buf             2  154[BANK7 ] PTR unsigned char 
 13454 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 13455 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 13456 ;;  res             2  151[BANK7 ] PTR unsigned char 
 13457 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 13458 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 13459 ;;  fr              2    0        int 
 13460 ;;  rs              1  153[BANK7 ] enum E23452
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 13471 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 13472 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 13473 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 13474 ;;Total ram usage:       13 bytes
 13475 ;; Hardware stack levels required when called: 26
 13476 ;; This function calls:
 13477 ;;		___fldiv
 13478 ;;		___flmul
 13479 ;;		___xxtofl
 13480 ;;		_boot_file
 13481 ;;		_change_directory
 13482 ;;		_clc_init
 13483 ;;		_clk_init
 13484 ;;		_disk_init
 13485 ;;		_f_getcwd
 13486 ;;		_flash_apl
 13487 ;;		_get_line
 13488 ;;		_load_config
 13489 ;;		_load_file
 13490 ;;		_mem_dump
 13491 ;;		_mem_init
 13492 ;;		_mon_prog
 13493 ;;		_port_init
 13494 ;;		_print_com
 13495 ;;		_print_reg
 13496 ;;		_printf
 13497 ;;		_reset_clk
 13498 ;;		_reset_cpu
 13499 ;;		_restart_prog
 13500 ;;		_return_cpu
 13501 ;;		_scan_files
 13502 ;;		_scan_files1
 13503 ;;		_see_file
 13504 ;;		_set_arg
 13505 ;;		_setup_monitor
 13506 ;;		_setup_sd
 13507 ;;		_strlen
 13508 ;;		_strstr
 13509 ;;		_uart_init
 13510 ;;		_wait_for_programmer
 13511 ;;		_wstart_prog
 13512 ;; This function is called by:
 13513 ;;		Startup code after reset
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text0
 13518   0171A0                     __ptext0:
 13519                           	callstack 0
 13520   0171A0                     _main:
 13521                           	callstack 101
 13522   0171A0                     
 13523                           ;../src/w65_main.c: 185:  int c, fr;;../src/w65_main.c: 186:  char *buf, *res;;../src/w6
      +                          5_main.c: 187:  FRESULT rs;;../src/w65_main.c: 189:  cin_no = 0;
 13524   0171A0  0107               	movlb	7	; () banked
 13525   0171A2  6BCC               	clrf	_cin_no& (0+255),b
 13526                           
 13527                           ;../src/w65_main.c: 190:  wup_flg = 0;
 13528   0171A4  6BCB               	clrf	_wup_flg& (0+255),b
 13529                           
 13530                           ;../src/w65_main.c: 191:  nmi_sig = 0;
 13531   0171A6  6BCA               	clrf	_nmi_sig& (0+255),b
 13532                           
 13533                           ;../src/w65_main.c: 192:  fh.nmi_sw = 0;
 13534   0171A8  0108               	movlb	8	; () banked
 13535   0171AA  6BC0               	clrf	(_fh+30)& (0+255),b
 13536   0171AC                     
 13537                           ; BSR set to: 8
 13538                           ;../src/w65_main.c: 193:  raw_addr = 0;
 13539   0171AC  0E00               	movlw	0
 13540   0171AE  0107               	movlb	7	; () banked
 13541   0171B0  6FAD               	movwf	_raw_addr& (0+255),b
 13542   0171B2  0E00               	movlw	0
 13543   0171B4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 13544   0171B6  0E00               	movlw	0
 13545   0171B8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 13546   0171BA  0E00               	movlw	0
 13547   0171BC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 13548   0171BE                     
 13549                           ; BSR set to: 7
 13550                           ;../src/w65_main.c: 194:  load_flg = 0;
 13551   0171BE  6BC9               	clrf	_load_flg& (0+255),b
 13552   0171C0                     
 13553                           ; BSR set to: 7
 13554                           ;../src/w65_main.c: 195:  binv.sw = 0;
 13555   0171C0  0108               	movlb	8	; () banked
 13556   0171C2  6B78               	clrf	_binv& (0+255),b
 13557   0171C4                     
 13558                           ; BSR set to: 8
 13559                           ;../src/w65_main.c: 197:  port_init();
 13560   0171C4  EC48  F0FB         	call	_port_init	;wreg free
 13561   0171C8                     
 13562                           ;../src/w65_main.c: 198:  uart_init();
 13563   0171C8  EC82  F0FE         	call	_uart_init	;wreg free
 13564   0171CC                     
 13565                           ;../src/w65_main.c: 199:  wait_for_programmer();
 13566   0171CC  EC73  F0FD         	call	_wait_for_programmer	;wreg free
 13567   0171D0                     
 13568                           ;../src/w65_main.c: 201:  setup_sd();
 13569   0171D0  ECA0  F0F7         	call	_setup_sd	;wreg free
 13570   0171D4                     
 13571                           ;../src/w65_main.c: 202:  if (disk_init() < 0) while (1);
 13572   0171D4  EC87  F0FC         	call	_disk_init	;wreg free
 13573   0171D8  0106               	movlb	6	; () banked
 13574   0171DA  BFBC               	btfsc	(?_disk_init+1)& (0+255),7,b
 13575   0171DC  EFF4  F0B8         	goto	u36720
 13576   0171E0  EFF2  F0B8         	goto	u36721
 13577   0171E4                     u36721:
 13578   0171E4  EFF6  F0B8         	goto	l26207
 13579   0171E8                     u36720:
 13580   0171E8                     l1516:
 13581   0171E8  EFF4  F0B8         	goto	l1516
 13582   0171EC                     l26207:
 13583                           
 13584                           ; BSR set to: 6
 13585                           ;../src/w65_main.c: 204:  clk_init();
 13586   0171EC  ECBA  F000         	call	_clk_init	;wreg free
 13587   0171F0                     
 13588                           ;../src/w65_main.c: 205:  reset_cpu();
 13589   0171F0  EC3E  F0EF         	call	_reset_cpu	;wreg free
 13590   0171F4                     
 13591                           ;../src/w65_main.c: 208:  cpu_flg = 1;
 13592   0171F4  0E01               	movlw	1
 13593   0171F6  0107               	movlb	7	; () banked
 13594   0171F8  6FE5               	movwf	_cpu_flg& (0+255),b
 13595   0171FA                     
 13596                           ; BSR set to: 7
 13597                           ;../src/w65_main.c: 209:  if ( mem_init() <= 0x10000 ) {
 13598   0171FA  EC7C  F0C8         	call	_mem_init	;wreg free
 13599   0171FE  0105               	movlb	5	; () banked
 13600   017200  51E1               	movf	(?_mem_init+3)& (0+255),w,b
 13601   017202  E10A               	bnz	u36731
 13602   017204  05DE               	decf	?_mem_init& (0+255),w,b
 13603   017206  0E00               	movlw	0
 13604   017208  59DF               	subwfb	(?_mem_init+1)& (0+255),w,b
 13605   01720A  0E01               	movlw	1
 13606   01720C  59E0               	subwfb	(?_mem_init+2)& (0+255),w,b
 13607   01720E  B0D8               	btfsc	status,0,c
 13608   017210  EF0C  F0B9         	goto	u36731
 13609   017214  EF0E  F0B9         	goto	u36730
 13610   017218                     u36731:
 13611   017218  EF19  F0B9         	goto	l26219
 13612   01721C                     u36730:
 13613   01721C                     
 13614                           ; BSR set to: 5
 13615                           ;../src/w65_main.c: 210:   cpu_flg = 0;
 13616   01721C  0107               	movlb	7	; () banked
 13617   01721E  6BE5               	clrf	_cpu_flg& (0+255),b
 13618   017220                     
 13619                           ; BSR set to: 7
 13620                           ;../src/w65_main.c: 211:   printf("CPU Setting: W65C02\r\n");
 13621   017220  0EEE               	movlw	low STR_70
 13622   017222  0105               	movlb	5	; () banked
 13623   017224  6FAD               	movwf	printf@fmt& (0+255),b
 13624   017226  0EFB               	movlw	high STR_70
 13625   017228  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13626   01722A  ECDA  F0FF         	call	_printf	;wreg free
 13627                           
 13628                           ;../src/w65_main.c: 212:  }
 13629   01722E  EF23  F0B9         	goto	l26223
 13630   017232                     l26219:
 13631                           
 13632                           ; BSR set to: 5
 13633                           ;../src/w65_main.c: 214:   cpu_flg = 1;
 13634   017232  0E01               	movlw	1
 13635   017234  0107               	movlb	7	; () banked
 13636   017236  6FE5               	movwf	_cpu_flg& (0+255),b
 13637   017238                     
 13638                           ; BSR set to: 7
 13639                           ;../src/w65_main.c: 215:   printf("CPU Setting: W65C816\r\n");
 13640   017238  0E93               	movlw	low STR_71
 13641   01723A  0105               	movlb	5	; () banked
 13642   01723C  6FAD               	movwf	printf@fmt& (0+255),b
 13643   01723E  0EFB               	movlw	high STR_71
 13644   017240  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13645   017242  ECDA  F0FF         	call	_printf	;wreg free
 13646   017246                     l26223:
 13647                           
 13648                           ;../src/w65_main.c: 218:  if( load_config() < 0) while (1);
 13649   017246  ECED  F0B6         	call	_load_config	;wreg free
 13650   01724A  0107               	movlb	7	; () banked
 13651   01724C  BF01               	btfsc	(?_load_config+1)& (0+255),7,b
 13652   01724E  EF2D  F0B9         	goto	u36740
 13653   017252  EF2B  F0B9         	goto	u36741
 13654   017256                     u36741:
 13655   017256  EF2F  F0B9         	goto	l26225
 13656   01725A                     u36740:
 13657   01725A                     l1522:
 13658   01725A  EF2D  F0B9         	goto	l1522
 13659   01725E                     l26225:
 13660                           
 13661                           ; BSR set to: 7
 13662                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 13663   01725E  0E00               	movlw	0
 13664   017260  6E16               	movwf	___flmul@a^(0+1280),c
 13665   017262  0E24               	movlw	36
 13666   017264  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 13667   017266  0EF4               	movlw	244
 13668   017268  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 13669   01726A  0E41               	movlw	65
 13670   01726C  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 13671   01726E  C7DB  F504         	movff	_clk_fs,___xxtofl@val
 13672   017272  C7DC  F505         	movff	_clk_fs+1,___xxtofl@val+1
 13673   017276  C7DD  F506         	movff	_clk_fs+2,___xxtofl@val+2
 13674   01727A  C7DE  F507         	movff	_clk_fs+3,___xxtofl@val+3
 13675   01727E  0E00               	movlw	0
 13676   017280  EC53  F0D5         	call	___xxtofl
 13677   017284  C504  F512         	movff	?___xxtofl,___flmul@b
 13678   017288  C505  F513         	movff	?___xxtofl+1,___flmul@b+1
 13679   01728C  C506  F514         	movff	?___xxtofl+2,___flmul@b+2
 13680   017290  C507  F515         	movff	?___xxtofl+3,___flmul@b+3
 13681   017294  ECE4  F0B2         	call	___flmul	;wreg free
 13682   017298  C512  F52B         	movff	?___flmul,___fldiv@b
 13683   01729C  C513  F52C         	movff	?___flmul+1,___fldiv@b+1
 13684   0172A0  C514  F52D         	movff	?___flmul+2,___fldiv@b+2
 13685   0172A4  C515  F52E         	movff	?___flmul+3,___fldiv@b+3
 13686   0172A8  0E00               	movlw	0
 13687   0172AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 13688   0172AC  0E24               	movlw	36
 13689   0172AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 13690   0172B0  0E74               	movlw	116
 13691   0172B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 13692   0172B4  0E49               	movlw	73
 13693   0172B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 13694   0172B8  ECAA  F0BA         	call	___fldiv	;wreg free
 13695   0172BC  C52B  F793         	movff	?___fldiv,_main$5277
 13696   0172C0  C52C  F794         	movff	?___fldiv+1,_main$5277+1
 13697   0172C4  C52D  F795         	movff	?___fldiv+2,_main$5277+2
 13698   0172C8  C52E  F796         	movff	?___fldiv+3,_main$5277+3
 13699   0172CC                     
 13700                           ;../src/w65_main.c: 219:  printf("\r\nUse NCO1 %2.3fMHz\r\n\n",clk_fs * 30.5175781 / 100
      +                          0000);
 13701   0172CC  0E4E               	movlw	low STR_72
 13702   0172CE  0105               	movlb	5	; () banked
 13703   0172D0  6FAD               	movwf	printf@fmt& (0+255),b
 13704   0172D2  0EFB               	movlw	high STR_72
 13705   0172D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13706   0172D6  C793  F5AF         	movff	_main$5277,?_printf+2
 13707   0172DA  C794  F5B0         	movff	_main$5277+1,?_printf+3
 13708   0172DE  C795  F5B1         	movff	_main$5277+2,?_printf+4
 13709   0172E2  C796  F5B2         	movff	_main$5277+3,?_printf+5
 13710   0172E6  ECDA  F0FF         	call	_printf	;wreg free
 13711   0172EA                     
 13712                           ;../src/w65_main.c: 221:  reset_clk();
 13713   0172EA  ECE3  F000         	call	_reset_clk	;wreg free
 13714   0172EE                     
 13715                           ;../src/w65_main.c: 222:  clc_init();
 13716   0172EE  EC90  F0E0         	call	_clc_init	;wreg free
 13717   0172F2                     
 13718                           ;../src/w65_main.c: 225:  GIE = 1;
 13719   0172F2  8ED6               	bsf	1238,7,c	;volatile
 13720   0172F4                     
 13721                           ;../src/w65_main.c: 228:  if ( setup_monitor() ) {
 13722   0172F4  EC2C  F0F4         	call	_setup_monitor	;wreg free
 13723   0172F8  0107               	movlb	7	; () banked
 13724   0172FA  5116               	movf	?_setup_monitor& (0+255),w,b
 13725   0172FC  1117               	iorwf	(?_setup_monitor+1)& (0+255),w,b
 13726   0172FE  B4D8               	btfsc	status,2,c
 13727   017300  EF84  F0B9         	goto	u36751
 13728   017304  EF86  F0B9         	goto	u36750
 13729   017308                     u36751:
 13730   017308  EF8F  F0B9         	goto	l26239
 13731   01730C                     u36750:
 13732   01730C                     
 13733                           ; BSR set to: 7
 13734                           ;../src/w65_main.c: 229:   printf("System stop!!");
 13735   01730C  0E6C               	movlw	low STR_73
 13736   01730E  0105               	movlb	5	; () banked
 13737   017310  6FAD               	movwf	printf@fmt& (0+255),b
 13738   017312  0EFE               	movlw	high STR_73
 13739   017314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13740   017316  ECDA  F0FF         	call	_printf	;wreg free
 13741   01731A                     l1526:
 13742   01731A  EF8D  F0B9         	goto	l1526
 13743   01731E                     l26239:
 13744                           
 13745                           ; BSR set to: 7
 13746                           ;../src/w65_main.c: 233:  printf("\r\nBoard: %s\n\r", board_name);
 13747   01731E  0E5E               	movlw	low STR_74
 13748   017320  0105               	movlb	5	; () banked
 13749   017322  6FAD               	movwf	printf@fmt& (0+255),b
 13750   017324  0EFE               	movlw	high STR_74
 13751   017326  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13752   017328  0E22               	movlw	low STR_48
 13753   01732A  6FAF               	movwf	(?_printf+2)& (0+255),b
 13754   01732C  0EF5               	movlw	high STR_48
 13755   01732E  6FB0               	movwf	(?_printf+3)& (0+255),b
 13756   017330  ECDA  F0FF         	call	_printf	;wreg free
 13757   017334                     
 13758                           ;../src/w65_main.c: 236:  line_buf[0] = '\0';
 13759   017334  010A               	movlb	10	; () banked
 13760   017336  6B80               	clrf	_line_buf& (0+255),b
 13761   017338                     
 13762                           ; BSR set to: 10
 13763                           ;../src/w65_main.c: 237:  arg[0] = &line_buf[0];
 13764   017338  0E80               	movlw	low _line_buf
 13765   01733A  0107               	movlb	7	; () banked
 13766   01733C  6F9E               	movwf	_arg& (0+255),b
 13767   01733E  0E0A               	movlw	high _line_buf
 13768   017340  6F9F               	movwf	(_arg+1)& (0+255),b
 13769   017342                     
 13770                           ; BSR set to: 7
 13771                           ;../src/w65_main.c: 238:  scan_files();
 13772   017342  EC3A  F0CC         	call	_scan_files	;wreg free
 13773   017346                     l1529:
 13774                           
 13775                           ;../src/w65_main.c: 241:   buf = (char *)&tmp_buf[0][0];
 13776   017346  0EF8               	movlw	low _tmp_buf
 13777   017348  0107               	movlb	7	; () banked
 13778   01734A  6F9A               	movwf	main@buf& (0+255),b
 13779   01734C  0E13               	movlw	high _tmp_buf
 13780   01734E  6F9B               	movwf	(main@buf+1)& (0+255),b
 13781   017350                     
 13782                           ; BSR set to: 7
 13783                           ;../src/w65_main.c: 242:   f_getcwd(buf, 256);
 13784   017350  C79A  F6AF         	movff	main@buf,f_getcwd@buff
 13785   017354  C79B  F6B0         	movff	main@buf+1,f_getcwd@buff+1
 13786   017358  0E01               	movlw	1
 13787   01735A  0106               	movlb	6	; () banked
 13788   01735C  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 13789   01735E  0E00               	movlw	0
 13790   017360  6FB1               	movwf	f_getcwd@len& (0+255),b
 13791   017362  EC93  F0A7         	call	_f_getcwd	;wreg free
 13792   017366                     
 13793                           ;../src/w65_main.c: 243:   printf("%s> ", buf);
 13794   017366  0EA8               	movlw	low STR_75
 13795   017368  0105               	movlb	5	; () banked
 13796   01736A  6FAD               	movwf	printf@fmt& (0+255),b
 13797   01736C  0EFF               	movlw	high STR_75
 13798   01736E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 13799   017370  C79A  F5AF         	movff	main@buf,?_printf+2
 13800   017374  C79B  F5B0         	movff	main@buf+1,?_printf+3
 13801   017378  ECDA  F0FF         	call	_printf	;wreg free
 13802   01737C                     
 13803                           ;../src/w65_main.c: 244:   for(c = 0; c < 5; c++) arg[c] = 0;
 13804   01737C  0E00               	movlw	0
 13805   01737E  0107               	movlb	7	; () banked
 13806   017380  6F9D               	movwf	(main@c+1)& (0+255),b
 13807   017382  0E00               	movlw	0
 13808   017384  6F9C               	movwf	main@c& (0+255),b
 13809   017386                     l26257:
 13810                           
 13811                           ; BSR set to: 7
 13812   017386  90D8               	bcf	status,0,c
 13813   017388  359C               	rlcf	main@c& (0+255),w,b
 13814   01738A  6ED9               	movwf	fsr2l,c
 13815   01738C  359D               	rlcf	(main@c+1)& (0+255),w,b
 13816   01738E  6EDA               	movwf	fsr2h,c
 13817   017390  0E9E               	movlw	low _arg
 13818   017392  26D9               	addwf	fsr2l,f,c
 13819   017394  0E07               	movlw	high _arg
 13820   017396  22DA               	addwfc	fsr2h,f,c
 13821   017398  6ADE               	clrf	postinc2,c
 13822   01739A  6ADD               	clrf	postdec2,c
 13823   01739C                     
 13824                           ; BSR set to: 7
 13825   01739C  4B9C               	infsnz	main@c& (0+255),f,b
 13826   01739E  2B9D               	incf	(main@c+1)& (0+255),f,b
 13827   0173A0                     
 13828                           ; BSR set to: 7
 13829   0173A0  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 13830   0173A2  EFDC  F0B9         	goto	u36761
 13831   0173A6  519D               	movf	(main@c+1)& (0+255),w,b
 13832   0173A8  E109               	bnz	u36760
 13833   0173AA  0E05               	movlw	5
 13834   0173AC  5D9C               	subwf	main@c& (0+255),w,b
 13835   0173AE  A0D8               	btfss	status,0,c
 13836   0173B0  EFDC  F0B9         	goto	u36761
 13837   0173B4  EFDE  F0B9         	goto	u36760
 13838   0173B8                     u36761:
 13839   0173B8  EFC3  F0B9         	goto	l26257
 13840   0173BC                     u36760:
 13841   0173BC                     
 13842                           ; BSR set to: 7
 13843                           ;../src/w65_main.c: 246:   if (!get_line(&line_buf[0], 81)) continue;
 13844   0173BC  0E80               	movlw	low _line_buf
 13845   0173BE  0105               	movlb	5	; () banked
 13846   0173C0  6FBD               	movwf	get_line@s& (0+255),b
 13847   0173C2  0E0A               	movlw	high _line_buf
 13848   0173C4  6FBE               	movwf	(get_line@s+1)& (0+255),b
 13849   0173C6  0E00               	movlw	0
 13850   0173C8  6FC0               	movwf	(get_line@length+1)& (0+255),b
 13851   0173CA  0E51               	movlw	81
 13852   0173CC  6FBF               	movwf	get_line@length& (0+255),b
 13853   0173CE  EC11  F0E7         	call	_get_line	;wreg free
 13854   0173D2  0105               	movlb	5	; () banked
 13855   0173D4  51BD               	movf	?_get_line& (0+255),w,b
 13856   0173D6  11BE               	iorwf	(?_get_line+1)& (0+255),w,b
 13857   0173D8  A4D8               	btfss	status,2,c
 13858   0173DA  EFF1  F0B9         	goto	u36771
 13859   0173DE  EFF3  F0B9         	goto	u36770
 13860   0173E2                     u36771:
 13861   0173E2  EFF5  F0B9         	goto	l26267
 13862   0173E6                     u36770:
 13863   0173E6  EFA3  F0B9         	goto	l1529
 13864   0173EA                     l26267:
 13865                           
 13866                           ; BSR set to: 5
 13867                           ;../src/w65_main.c: 248:   for( c=0; c < 14; c++ ) {
 13868   0173EA  0E00               	movlw	0
 13869   0173EC  0107               	movlb	7	; () banked
 13870   0173EE  6F9D               	movwf	(main@c+1)& (0+255),b
 13871   0173F0  0E00               	movlw	0
 13872   0173F2  6F9C               	movwf	main@c& (0+255),b
 13873   0173F4                     l26273:
 13874                           
 13875                           ; BSR set to: 7
 13876                           ;../src/w65_main.c: 249:    if ((res = strstr(&line_buf[0], cmd[c].cmd_name ))) {
 13877   0173F4  0E80               	movlw	low _line_buf
 13878   0173F6  6E0B               	movwf	strstr@h^(0+1280),c
 13879   0173F8  0E0A               	movlw	high _line_buf
 13880   0173FA  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 13881   0173FC  0E05               	movlw	5
 13882   0173FE  039C               	mulwf	main@c& (0+255),b
 13883   017400  C4F3 F791          	movff	prodl,??_main
 13884   017404  C4F4 F792          	movff	prodh,??_main+1
 13885   017408  039D               	mulwf	(main@c+1)& (0+255),b
 13886   01740A  50F3               	movf	prodl,w,c
 13887   01740C  2792               	addwf	(??_main+1)& (0+255),f,b
 13888   01740E  0E00               	movlw	low _cmd
 13889   017410  2591               	addwf	??_main& (0+255),w,b
 13890   017412  6ED9               	movwf	fsr2l,c
 13891   017414  0E09               	movlw	high _cmd
 13892   017416  2192               	addwfc	(??_main+1)& (0+255),w,b
 13893   017418  6EDA               	movwf	fsr2h,c
 13894   01741A  C4DE F50D          	movff	postinc2,strstr@n
 13895   01741E  C4DD F50E          	movff	postdec2,strstr@n+1
 13896   017422  ECCF  F0EE         	call	_strstr	;wreg free
 13897   017426  C50B  F797         	movff	?_strstr,main@res
 13898   01742A  C50C  F798         	movff	?_strstr+1,main@res+1
 13899   01742E  0107               	movlb	7	; () banked
 13900   017430  5197               	movf	main@res& (0+255),w,b
 13901   017432  1198               	iorwf	(main@res+1)& (0+255),w,b
 13902   017434  B4D8               	btfsc	status,2,c
 13903   017436  EF1F  F0BA         	goto	u36781
 13904   01743A  EF21  F0BA         	goto	u36780
 13905   01743E                     u36781:
 13906   01743E  EF45  F0BA         	goto	l26279
 13907   017442                     u36780:
 13908   017442                     
 13909                           ; BSR set to: 7
 13910                           ;../src/w65_main.c: 250:     buf = (char *)(res+strlen(cmd[c].cmd_name));
 13911   017442  0E05               	movlw	5
 13912   017444  039C               	mulwf	main@c& (0+255),b
 13913   017446  C4F3 F791          	movff	prodl,??_main
 13914   01744A  C4F4 F792          	movff	prodh,??_main+1
 13915   01744E  039D               	mulwf	(main@c+1)& (0+255),b
 13916   017450  50F3               	movf	prodl,w,c
 13917   017452  2792               	addwf	(??_main+1)& (0+255),f,b
 13918   017454  0E00               	movlw	low _cmd
 13919   017456  2591               	addwf	??_main& (0+255),w,b
 13920   017458  6ED9               	movwf	fsr2l,c
 13921   01745A  0E09               	movlw	high _cmd
 13922   01745C  2192               	addwfc	(??_main+1)& (0+255),w,b
 13923   01745E  6EDA               	movwf	fsr2h,c
 13924   017460  C4DE F504          	movff	postinc2,strlen@s
 13925   017464  C4DD F505          	movff	postdec2,strlen@s+1
 13926   017468  ECB0  F0FC         	call	_strlen	;wreg free
 13927   01746C  5004               	movf	?_strlen^(0+1280),w,c
 13928   01746E  0107               	movlb	7	; () banked
 13929   017470  2597               	addwf	main@res& (0+255),w,b
 13930   017472  6F9A               	movwf	main@buf& (0+255),b
 13931   017474  5005               	movf	(?_strlen+1)^(0+1280),w,c
 13932   017476  2198               	addwfc	(main@res+1)& (0+255),w,b
 13933   017478  6F9B               	movwf	(main@buf+1)& (0+255),b
 13934   01747A                     
 13935                           ; BSR set to: 7
 13936                           ;../src/w65_main.c: 251:     set_arg(buf);
 13937   01747A  C79A  F504         	movff	main@buf,set_arg@buf
 13938   01747E  C79B  F505         	movff	main@buf+1,set_arg@buf+1
 13939   017482  EC05  F0D7         	call	_set_arg	;wreg free
 13940                           
 13941                           ;../src/w65_main.c: 252:     break;
 13942   017486  EF55  F0BA         	goto	l26283
 13943   01748A                     l26279:
 13944                           
 13945                           ; BSR set to: 7
 13946                           ;../src/w65_main.c: 254:   }
 13947   01748A  4B9C               	infsnz	main@c& (0+255),f,b
 13948   01748C  2B9D               	incf	(main@c+1)& (0+255),f,b
 13949   01748E                     
 13950                           ; BSR set to: 7
 13951   01748E  BF9D               	btfsc	(main@c+1)& (0+255),7,b
 13952   017490  EF53  F0BA         	goto	u36791
 13953   017494  519D               	movf	(main@c+1)& (0+255),w,b
 13954   017496  E109               	bnz	u36790
 13955   017498  0E0E               	movlw	14
 13956   01749A  5D9C               	subwf	main@c& (0+255),w,b
 13957   01749C  A0D8               	btfss	status,0,c
 13958   01749E  EF53  F0BA         	goto	u36791
 13959   0174A2  EF55  F0BA         	goto	u36790
 13960   0174A6                     u36791:
 13961   0174A6  EFFA  F0B9         	goto	l26273
 13962   0174AA                     u36790:
 13963   0174AA                     l26283:
 13964                           
 13965                           ;../src/w65_main.c: 256:   if ( c == 14 ) set_arg(&line_buf[0]);
 13966   0174AA  0E0E               	movlw	14
 13967   0174AC  0107               	movlb	7	; () banked
 13968   0174AE  199C               	xorwf	main@c& (0+255),w,b
 13969   0174B0  119D               	iorwf	(main@c+1)& (0+255),w,b
 13970   0174B2  A4D8               	btfss	status,2,c
 13971   0174B4  EF5E  F0BA         	goto	u36801
 13972   0174B8  EF60  F0BA         	goto	u36800
 13973   0174BC                     u36801:
 13974   0174BC  EF66  F0BA         	goto	l26287
 13975   0174C0                     u36800:
 13976   0174C0                     
 13977                           ; BSR set to: 7
 13978   0174C0  0E80               	movlw	low _line_buf
 13979   0174C2  6E04               	movwf	set_arg@buf^(0+1280),c
 13980   0174C4  0E0A               	movlw	high _line_buf
 13981   0174C6  6E05               	movwf	(set_arg@buf+1)^(0+1280),c
 13982   0174C8  EC05  F0D7         	call	_set_arg	;wreg free
 13983   0174CC                     l26287:
 13984                           
 13985                           ;../src/w65_main.c: 257:   rs = (*cmd[c].func)();
 13986   0174CC  0E05               	movlw	5
 13987   0174CE  0107               	movlb	7	; () banked
 13988   0174D0  039C               	mulwf	main@c& (0+255),b
 13989   0174D2  C4F3 F791          	movff	prodl,??_main
 13990   0174D6  C4F4 F792          	movff	prodh,??_main+1
 13991   0174DA  039D               	mulwf	(main@c+1)& (0+255),b
 13992   0174DC  50F3               	movf	prodl,w,c
 13993   0174DE  2792               	addwf	(??_main+1)& (0+255),f,b
 13994   0174E0  0E02               	movlw	low (_cmd+2)
 13995   0174E2  2591               	addwf	??_main& (0+255),w,b
 13996   0174E4  6ED9               	movwf	fsr2l,c
 13997   0174E6  0E09               	movlw	high (_cmd+2)
 13998   0174E8  2192               	addwfc	(??_main+1)& (0+255),w,b
 13999   0174EA  6EDA               	movwf	fsr2h,c
 14000   0174EC  D802               	call	u36818
 14001   0174EE  EF83  F0BA         	goto	u36819
 14002   0174F2                     u36818:
 14003   0174F2  0005               	push	
 14004   0174F4  6EFA               	movwf	pclath,c
 14005   0174F6  50DE               	movf	postinc2,w,c
 14006   0174F8  6EFD               	movwf	tosl,c
 14007   0174FA  50DE               	movf	postinc2,w,c
 14008   0174FC  6EFE               	movwf	tosh,c
 14009   0174FE  50DE               	movf	postinc2,w,c
 14010   017500  6EFF               	movwf	tosu,c
 14011   017502  50FA               	movf	pclath,w,c
 14012   017504  0012               	return		;indir
 14013   017506                     u36819:
 14014   017506  0107               	movlb	7	; () banked
 14015   017508  6F99               	movwf	main@rs& (0+255),b
 14016   01750A                     
 14017                           ; BSR set to: 7
 14018                           ;../src/w65_main.c: 259:   if( rs == (FRESULT)-2 ) printf("\r\nAssert NMI interrupt.\r\n
      +                          ");
 14019   01750A  0EFE               	movlw	254
 14020   01750C  1999               	xorwf	main@rs& (0+255),w,b
 14021   01750E  A4D8               	btfss	status,2,c
 14022   017510  EF8C  F0BA         	goto	u36821
 14023   017514  EF8E  F0BA         	goto	u36820
 14024   017518                     u36821:
 14025   017518  EF97  F0BA         	goto	l26293
 14026   01751C                     u36820:
 14027   01751C                     
 14028                           ; BSR set to: 7
 14029   01751C  0EEE               	movlw	low STR_76
 14030   01751E  0105               	movlb	5	; () banked
 14031   017520  6FAD               	movwf	printf@fmt& (0+255),b
 14032   017522  0EF9               	movlw	high STR_76
 14033   017524  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14034   017526  ECDA  F0FF         	call	_printf	;wreg free
 14035   01752A  EFA3  F0B9         	goto	l1529
 14036   01752E                     l26293:
 14037                           
 14038                           ; BSR set to: 7
 14039   01752E  5199               	movf	main@rs& (0+255),w,b
 14040   017530  B4D8               	btfsc	status,2,c
 14041   017532  EF9D  F0BA         	goto	u36831
 14042   017536  EF9F  F0BA         	goto	u36830
 14043   01753A                     u36831:
 14044   01753A  EFA3  F0B9         	goto	l1529
 14045   01753E                     u36830:
 14046   01753E                     
 14047                           ; BSR set to: 7
 14048   01753E  0EF2               	movlw	low STR_77
 14049   017540  0105               	movlb	5	; () banked
 14050   017542  6FAD               	movwf	printf@fmt& (0+255),b
 14051   017544  0EF5               	movlw	high STR_77
 14052   017546  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14053   017548  ECDA  F0FF         	call	_printf	;wreg free
 14054   01754C  EFA3  F0B9         	goto	l1529
 14055   017550  EF85  F000         	goto	start
 14056   017554                     __end_of_main:
 14057                           	callstack 0
 14058                           
 14059 ;; *************** function _boot_file *****************
 14060 ;; Defined at:
 14061 ;;		line 639 in file "../src/w65_main.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;		None
 14064 ;; Auto vars:     Size  Location     Type
 14065 ;;  cnt             2    0        unsigned int 
 14066 ;;  rs              1   24[BANK7 ] enum E23452
 14067 ;;  m               1   23[BANK7 ] unsigned char 
 14068 ;;  flag            1   22[BANK7 ] unsigned char 
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      enum E23452
 14071 ;; Registers used:
 14072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14079 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14081 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14082 ;;Total ram usage:        3 bytes
 14083 ;; Hardware stack levels used: 1
 14084 ;; Hardware stack levels required when called: 25
 14085 ;; This function calls:
 14086 ;;		_drive_cpu
 14087 ;;		_load_program
 14088 ;;		_printf
 14089 ;;		_prt_reload
 14090 ;;		_sprintf
 14091 ;;		_start_cpu
 14092 ;;		_strstr
 14093 ;;		_write_sram
 14094 ;; This function is called by:
 14095 ;;		_main
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099                           	psect	text1
 14100   017C6E                     __ptext1:
 14101                           	callstack 0
 14102   017C6E                     _boot_file:
 14103                           	callstack 101
 14104   017C6E                     
 14105                           ;../src/w65_main.c: 641:  FRESULT rs;;../src/w65_main.c: 642:  uint8_t flag, m;;../src/w
      +                          65_main.c: 643:  UINT cnt;;../src/w65_main.c: 645:  if ( *arg[1] == '<' ) {
 14106   017C6E  C7A0  F4F6         	movff	_arg+2,tblptrl
 14107   017C72  C7A1  F4F7         	movff	_arg+3,tblptrh
 14108   017C76  0E00               	movlw	low (__mediumconst shr (0+16))
 14109   017C78  6EF8               	movwf	tblptru,c
 14110   017C7A  0E3F               	movlw	(high __ramtop+-1)
 14111   017C7C  64F7               	cpfsgt	tblptrh,c
 14112   017C7E  D003               	bra	u35157
 14113   017C80  0008               	tblrd		*
 14114   017C82  50F5               	movf	tablat,w,c
 14115   017C84  D005               	bra	u35150
 14116   017C86                     u35157:
 14117   017C86  C4F6 F4E9          	movff	tblptrl,fsr0l
 14118   017C8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 14119   017C8E  50EF               	movf	indf0,w,c
 14120   017C90                     u35150:
 14121   017C90  0A3C               	xorlw	60
 14122   017C92  A4D8               	btfss	status,2,c
 14123   017C94  EF4E  F0BE         	goto	u35161
 14124   017C98  EF50  F0BE         	goto	u35160
 14125   017C9C                     u35161:
 14126   017C9C  EF64  F0BE         	goto	l25203
 14127   017CA0                     u35160:
 14128   017CA0                     
 14129                           ;../src/w65_main.c: 646:   sprintf(&fin_name[0], "%s", arg[2]);
 14130   017CA0  0EC2               	movlw	low _fin_name
 14131   017CA2  0105               	movlb	5	; () banked
 14132   017CA4  6FAD               	movwf	sprintf@s& (0+255),b
 14133   017CA6  0E08               	movlw	high _fin_name
 14134   017CA8  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 14135   017CAA  0EF6               	movlw	low STR_82
 14136   017CAC  6FAF               	movwf	sprintf@fmt& (0+255),b
 14137   017CAE  0EFF               	movlw	high STR_82
 14138   017CB0  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 14139   017CB2  C7A2  F5B1         	movff	_arg+4,?_sprintf+4
 14140   017CB6  C7A3  F5B2         	movff	_arg+5,?_sprintf+5
 14141   017CBA  ECD8  F0FC         	call	_sprintf	;wreg free
 14142   017CBE                     
 14143                           ;../src/w65_main.c: 647:   fin_cnt = 0xffff;
 14144   017CBE  0107               	movlb	7	; () banked
 14145   017CC0  69E3               	setf	_fin_cnt& (0+255),b
 14146   017CC2  69E4               	setf	(_fin_cnt+1)& (0+255),b
 14147   017CC4                     
 14148                           ; BSR set to: 7
 14149                           ;../src/w65_main.c: 648:   cin_no = 1;
 14150   017CC4  0E01               	movlw	1
 14151   017CC6  6FCC               	movwf	_cin_no& (0+255),b
 14152   017CC8                     l25203:
 14153                           
 14154                           ;../src/w65_main.c: 650:  if ( strstr((const char *)arg[0], mon02+1) ) m = 0;
 14155   017CC8  C79E  F50B         	movff	_arg,strstr@h
 14156   017CCC  C79F  F50C         	movff	_arg+1,strstr@h+1
 14157   017CD0  0ED9               	movlw	low (STR_51+1)
 14158   017CD2  6E0D               	movwf	strstr@n^(0+1280),c
 14159   017CD4  0EFE               	movlw	high (STR_51+1)
 14160   017CD6  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 14161   017CD8  ECCF  F0EE         	call	_strstr	;wreg free
 14162   017CDC  500B               	movf	?_strstr^(0+1280),w,c
 14163   017CDE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 14164   017CE0  B4D8               	btfsc	status,2,c
 14165   017CE2  EF75  F0BE         	goto	u35171
 14166   017CE6  EF77  F0BE         	goto	u35170
 14167   017CEA                     u35171:
 14168   017CEA  EF7B  F0BE         	goto	l25207
 14169   017CEE                     u35170:
 14170   017CEE  0107               	movlb	7	; () banked
 14171   017CF0  6B17               	clrf	boot_file@m& (0+255),b
 14172   017CF2  EF96  F0BE         	goto	l25213
 14173   017CF6                     l25207:
 14174   017CF6  C79E  F50B         	movff	_arg,strstr@h
 14175   017CFA  C79F  F50C         	movff	_arg+1,strstr@h+1
 14176   017CFE  0EE4               	movlw	low (STR_52+1)
 14177   017D00  6E0D               	movwf	strstr@n^(0+1280),c
 14178   017D02  0EFE               	movlw	high (STR_52+1)
 14179   017D04  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 14180   017D06  ECCF  F0EE         	call	_strstr	;wreg free
 14181   017D0A  500B               	movf	?_strstr^(0+1280),w,c
 14182   017D0C  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 14183   017D0E  B4D8               	btfsc	status,2,c
 14184   017D10  EF8C  F0BE         	goto	u35181
 14185   017D14  EF8E  F0BE         	goto	u35180
 14186   017D18                     u35181:
 14187   017D18  EF93  F0BE         	goto	l25211
 14188   017D1C                     u35180:
 14189   017D1C  0E01               	movlw	1
 14190   017D1E  0107               	movlb	7	; () banked
 14191   017D20  6F17               	movwf	boot_file@m& (0+255),b
 14192   017D22  EF96  F0BE         	goto	l25213
 14193   017D26                     l25211:
 14194   017D26  0E02               	movlw	2
 14195   017D28  0107               	movlb	7	; () banked
 14196   017D2A  6F17               	movwf	boot_file@m& (0+255),b
 14197   017D2C                     l25213:
 14198                           
 14199                           ; BSR set to: 7
 14200                           ;../src/w65_main.c: 653:  if ( m != 2) {
 14201   017D2C  0E02               	movlw	2
 14202   017D2E  1917               	xorwf	boot_file@m& (0+255),w,b
 14203   017D30  B4D8               	btfsc	status,2,c
 14204   017D32  EF9D  F0BE         	goto	u35191
 14205   017D36  EF9F  F0BE         	goto	u35190
 14206   017D3A                     u35191:
 14207   017D3A  EFD5  F0BE         	goto	l1692
 14208   017D3E                     u35190:
 14209   017D3E                     
 14210                           ; BSR set to: 7
 14211                           ;../src/w65_main.c: 654:   mon = m;
 14212   017D3E  C717  F7C8         	movff	boot_file@m,_mon
 14213   017D42                     
 14214                           ; BSR set to: 7
 14215                           ;../src/w65_main.c: 655:   prt_reload();
 14216   017D42  ECEF  F000         	call	_prt_reload	;wreg free
 14217   017D46                     
 14218                           ;../src/w65_main.c: 656:   binv.sw = 0;
 14219   017D46  0108               	movlb	8	; () banked
 14220   017D48  6B78               	clrf	_binv& (0+255),b
 14221                           
 14222                           ;../src/w65_main.c: 657:   rs = (FRESULT)load_program((uint8_t *)arg[0]);
 14223   017D4A  C79E  F700         	movff	_arg,load_program@fname
 14224   017D4E  C79F  F701         	movff	_arg+1,load_program@fname+1
 14225   017D52  EC86  F0AE         	call	_load_program	;wreg free
 14226   017D56  0107               	movlb	7	; () banked
 14227   017D58  5100               	movf	?_load_program& (0+255),w,b
 14228   017D5A  6F18               	movwf	boot_file@rs& (0+255),b
 14229   017D5C                     
 14230                           ; BSR set to: 7
 14231                           ;../src/w65_main.c: 658:   if ( rs ) return 0;
 14232   017D5C  5118               	movf	boot_file@rs& (0+255),w,b
 14233   017D5E  B4D8               	btfsc	status,2,c
 14234   017D60  EFB4  F0BE         	goto	u35201
 14235   017D64  EFB6  F0BE         	goto	u35200
 14236   017D68                     u35201:
 14237   017D68  EFB9  F0BE         	goto	l25227
 14238   017D6C                     u35200:
 14239   017D6C                     l25223:
 14240                           
 14241                           ; BSR set to: 7
 14242   017D6C  0E00               	movlw	0
 14243   017D6E  EFDE  F0BF         	goto	l1694
 14244   017D72                     l25227:
 14245                           
 14246                           ; BSR set to: 7
 14247                           ;../src/w65_main.c: 661:   write_sram(0, &cpu_flg, 1);
 14248   017D72  0E00               	movlw	0
 14249   017D74  6E04               	movwf	write_sram@addr^(0+1280),c
 14250   017D76  0E00               	movlw	0
 14251   017D78  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14252   017D7A  0E00               	movlw	0
 14253   017D7C  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14254   017D7E  0E00               	movlw	0
 14255   017D80  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14256   017D82  0EE5               	movlw	low _cpu_flg
 14257   017D84  6E08               	movwf	write_sram@buf^(0+1280),c
 14258   017D86  0E07               	movlw	high _cpu_flg
 14259   017D88  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14260   017D8A  0E00               	movlw	0
 14261   017D8C  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14262   017D8E  0E01               	movlw	1
 14263   017D90  6E0A               	movwf	write_sram@len^(0+1280),c
 14264   017D92  EC9F  F0E8         	call	_write_sram	;wreg free
 14265   017D96                     
 14266                           ;../src/w65_main.c: 663:   start_cpu();
 14267   017D96  ECF8  F0FE         	call	_start_cpu	;wreg free
 14268   017D9A                     
 14269                           ;../src/w65_main.c: 664:   rs = drive_cpu();
 14270   017D9A  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14271   017D9E  0107               	movlb	7	; () banked
 14272   017DA0  6F18               	movwf	boot_file@rs& (0+255),b
 14273   017DA2                     l25233:
 14274                           
 14275                           ;../src/w65_main.c: 665:   return rs;
 14276   017DA2  0107               	movlb	7	; () banked
 14277   017DA4  5118               	movf	boot_file@rs& (0+255),w,b
 14278   017DA6  EFDE  F0BF         	goto	l1694
 14279   017DAA                     l1692:
 14280                           
 14281                           ; BSR set to: 7
 14282                           ;../src/w65_main.c: 668:  flag = 0;
 14283   017DAA  6B16               	clrf	boot_file@flag& (0+255),b
 14284   017DAC                     
 14285                           ; BSR set to: 7
 14286                           ;../src/w65_main.c: 669:  printf("Flie(%s) loading...\r\n", arg[0]);
 14287   017DAC  0ED8               	movlw	low STR_109
 14288   017DAE  0105               	movlb	5	; () banked
 14289   017DB0  6FAD               	movwf	printf@fmt& (0+255),b
 14290   017DB2  0EFB               	movlw	high STR_109
 14291   017DB4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14292   017DB6  C79E  F5AF         	movff	_arg,?_printf+2
 14293   017DBA  C79F  F5B0         	movff	_arg+1,?_printf+3
 14294   017DBE  ECDA  F0FF         	call	_printf	;wreg free
 14295                           
 14296                           ;../src/w65_main.c: 671:  rs = (FRESULT)load_program((uint8_t *)arg[0]);
 14297   017DC2  C79E  F700         	movff	_arg,load_program@fname
 14298   017DC6  C79F  F701         	movff	_arg+1,load_program@fname+1
 14299   017DCA  EC86  F0AE         	call	_load_program	;wreg free
 14300   017DCE  0107               	movlb	7	; () banked
 14301   017DD0  5100               	movf	?_load_program& (0+255),w,b
 14302   017DD2  6F18               	movwf	boot_file@rs& (0+255),b
 14303   017DD4                     
 14304                           ; BSR set to: 7
 14305                           ;../src/w65_main.c: 672:  if ( rs ) return 0;
 14306   017DD4  5118               	movf	boot_file@rs& (0+255),w,b
 14307   017DD6  B4D8               	btfsc	status,2,c
 14308   017DD8  EFF0  F0BE         	goto	u35211
 14309   017DDC  EFF2  F0BE         	goto	u35210
 14310   017DE0                     u35211:
 14311   017DE0  EFF4  F0BE         	goto	l25245
 14312   017DE4                     u35210:
 14313   017DE4  EFB6  F0BE         	goto	l25223
 14314   017DE8                     l25245:
 14315                           
 14316                           ; BSR set to: 7
 14317                           ;../src/w65_main.c: 674:  if ( binv.sw ) {
 14318   017DE8  0108               	movlb	8	; () banked
 14319   017DEA  5178               	movf	_binv& (0+255),w,b
 14320   017DEC  B4D8               	btfsc	status,2,c
 14321   017DEE  EFFB  F0BE         	goto	u35221
 14322   017DF2  EFFD  F0BE         	goto	u35220
 14323   017DF6                     u35221:
 14324   017DF6  EF80  F0BF         	goto	l1696
 14325   017DFA                     u35220:
 14326   017DFA                     
 14327                           ; BSR set to: 8
 14328                           ;../src/w65_main.c: 675:   if ( cpu_flg ) {
 14329   017DFA  0107               	movlb	7	; () banked
 14330   017DFC  51E5               	movf	_cpu_flg& (0+255),w,b
 14331   017DFE  B4D8               	btfsc	status,2,c
 14332   017E00  EF04  F0BF         	goto	u35231
 14333   017E04  EF06  F0BF         	goto	u35230
 14334   017E08                     u35231:
 14335   017E08  EF65  F0BF         	goto	l1697
 14336   017E0C                     u35230:
 14337   017E0C                     
 14338                           ; BSR set to: 7
 14339                           ;../src/w65_main.c: 676:    if ( mon ) {
 14340   017E0C  51C8               	movf	_mon& (0+255),w,b
 14341   017E0E  B4D8               	btfsc	status,2,c
 14342   017E10  EF0C  F0BF         	goto	u35241
 14343   017E14  EF0E  F0BF         	goto	u35240
 14344   017E18                     u35241:
 14345   017E18  EF2C  F0BF         	goto	l25261
 14346   017E1C                     u35240:
 14347   017E1C                     
 14348                           ; BSR set to: 7
 14349                           ;../src/w65_main.c: 677:     if ( !binv.sw_816 ) {
 14350   017E1C  0108               	movlb	8	; () banked
 14351   017E1E  5183               	movf	(_binv+11)& (0+255),w,b
 14352   017E20  A4D8               	btfss	status,2,c
 14353   017E22  EF15  F0BF         	goto	u35251
 14354   017E26  EF17  F0BF         	goto	u35250
 14355   017E2A                     u35251:
 14356   017E2A  EF49  F0BF         	goto	l25271
 14357   017E2E                     u35250:
 14358   017E2E                     
 14359                           ; BSR set to: 8
 14360                           ;../src/w65_main.c: 678:      arg[0] = mon02;
 14361   017E2E  0ED8               	movlw	low STR_51
 14362   017E30  0107               	movlb	7	; () banked
 14363   017E32  6F9E               	movwf	_arg& (0+255),b
 14364   017E34  0EFE               	movlw	high STR_51
 14365   017E36  6F9F               	movwf	(_arg+1)& (0+255),b
 14366   017E38                     
 14367                           ; BSR set to: 7
 14368                           ;../src/w65_main.c: 679:      mon = 0;
 14369   017E38  6BC8               	clrf	_mon& (0+255),b
 14370   017E3A                     
 14371                           ; BSR set to: 7
 14372                           ;../src/w65_main.c: 680:      flag = 1;
 14373   017E3A  0E01               	movlw	1
 14374   017E3C  6F16               	movwf	boot_file@flag& (0+255),b
 14375   017E3E                     
 14376                           ; BSR set to: 7
 14377                           ;../src/w65_main.c: 681:      printf("Reload %s for Emulation Mode...\r\n", arg[0]);
 14378   017E3E  0ED1               	movlw	low STR_110
 14379   017E40  0105               	movlb	5	; () banked
 14380   017E42  6FAD               	movwf	printf@fmt& (0+255),b
 14381   017E44  0EF7               	movlw	high STR_110
 14382   017E46  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14383   017E48  C79E  F5AF         	movff	_arg,?_printf+2
 14384   017E4C  C79F  F5B0         	movff	_arg+1,?_printf+3
 14385   017E50  ECDA  F0FF         	call	_printf	;wreg free
 14386   017E54  EF49  F0BF         	goto	l25271
 14387   017E58                     l25261:
 14388                           
 14389                           ; BSR set to: 7
 14390                           ;../src/w65_main.c: 685:     if ( binv.sw_816 ) {
 14391   017E58  0108               	movlb	8	; () banked
 14392   017E5A  5183               	movf	(_binv+11)& (0+255),w,b
 14393   017E5C  B4D8               	btfsc	status,2,c
 14394   017E5E  EF33  F0BF         	goto	u35261
 14395   017E62  EF35  F0BF         	goto	u35260
 14396   017E66                     u35261:
 14397   017E66  EF49  F0BF         	goto	l25271
 14398   017E6A                     u35260:
 14399   017E6A                     
 14400                           ; BSR set to: 8
 14401                           ;../src/w65_main.c: 686:      arg[0] = mon16;
 14402   017E6A  0EE3               	movlw	low STR_52
 14403   017E6C  0107               	movlb	7	; () banked
 14404   017E6E  6F9E               	movwf	_arg& (0+255),b
 14405   017E70  0EFE               	movlw	high STR_52
 14406   017E72  6F9F               	movwf	(_arg+1)& (0+255),b
 14407   017E74                     
 14408                           ; BSR set to: 7
 14409                           ;../src/w65_main.c: 687:      mon = 1;
 14410   017E74  0E01               	movlw	1
 14411   017E76  6FC8               	movwf	_mon& (0+255),b
 14412   017E78                     
 14413                           ; BSR set to: 7
 14414                           ;../src/w65_main.c: 688:      flag = 1;
 14415   017E78  0E01               	movlw	1
 14416   017E7A  6F16               	movwf	boot_file@flag& (0+255),b
 14417   017E7C                     
 14418                           ; BSR set to: 7
 14419                           ;../src/w65_main.c: 689:      printf("Reload %s for Native Mode...\r\n", arg[0]);
 14420   017E7C  0E97               	movlw	low STR_111
 14421   017E7E  0105               	movlb	5	; () banked
 14422   017E80  6FAD               	movwf	printf@fmt& (0+255),b
 14423   017E82  0EF8               	movlw	high STR_111
 14424   017E84  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14425   017E86  C79E  F5AF         	movff	_arg,?_printf+2
 14426   017E8A  C79F  F5B0         	movff	_arg+1,?_printf+3
 14427   017E8E  ECDA  F0FF         	call	_printf	;wreg free
 14428   017E92                     l25271:
 14429                           
 14430                           ;../src/w65_main.c: 692:    if ( flag ) {
 14431   017E92  0107               	movlb	7	; () banked
 14432   017E94  5116               	movf	boot_file@flag& (0+255),w,b
 14433   017E96  B4D8               	btfsc	status,2,c
 14434   017E98  EF50  F0BF         	goto	u35271
 14435   017E9C  EF52  F0BF         	goto	u35270
 14436   017EA0                     u35271:
 14437   017EA0  EF65  F0BF         	goto	l1697
 14438   017EA4                     u35270:
 14439   017EA4                     
 14440                           ; BSR set to: 7
 14441                           ;../src/w65_main.c: 693:     rs = (FRESULT)load_program((uint8_t *)arg[0]);
 14442   017EA4  C79E  F700         	movff	_arg,load_program@fname
 14443   017EA8  C79F  F701         	movff	_arg+1,load_program@fname+1
 14444   017EAC  EC86  F0AE         	call	_load_program	;wreg free
 14445   017EB0  0107               	movlb	7	; () banked
 14446   017EB2  5100               	movf	?_load_program& (0+255),w,b
 14447   017EB4  6F18               	movwf	boot_file@rs& (0+255),b
 14448   017EB6                     
 14449                           ; BSR set to: 7
 14450                           ;../src/w65_main.c: 694:     if ( rs ) return 0;
 14451   017EB6  5118               	movf	boot_file@rs& (0+255),w,b
 14452   017EB8  B4D8               	btfsc	status,2,c
 14453   017EBA  EF61  F0BF         	goto	u35281
 14454   017EBE  EF63  F0BF         	goto	u35280
 14455   017EC2                     u35281:
 14456   017EC2  EF65  F0BF         	goto	l1697
 14457   017EC6                     u35280:
 14458   017EC6  EFB6  F0BE         	goto	l25223
 14459   017ECA                     l1697:
 14460                           
 14461                           ; BSR set to: 7
 14462                           ;../src/w65_main.c: 697:   binv.addr = binv.caddr;
 14463   017ECA  C87F  F879         	movff	_binv+7,_binv+1
 14464   017ECE  C880  F87A         	movff	_binv+8,_binv+2
 14465   017ED2                     
 14466                           ; BSR set to: 7
 14467                           ;../src/w65_main.c: 698:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 14468   017ED2  0E08               	movlw	8
 14469   017ED4  0108               	movlb	8	; () banked
 14470   017ED6  25B2               	addwf	(_fh+16)& (0+255),w,b
 14471   017ED8  6E04               	movwf	write_sram@addr^(0+1280),c
 14472   017EDA  0E00               	movlw	0
 14473   017EDC  21B3               	addwfc	(_fh+17)& (0+255),w,b
 14474   017EDE  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14475   017EE0  0E00               	movlw	0
 14476   017EE2  21B4               	addwfc	(_fh+18)& (0+255),w,b
 14477   017EE4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14478   017EE6  0E00               	movlw	0
 14479   017EE8  21B5               	addwfc	(_fh+19)& (0+255),w,b
 14480   017EEA  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14481   017EEC  0E78               	movlw	low _binv
 14482   017EEE  6E08               	movwf	write_sram@buf^(0+1280),c
 14483   017EF0  0E08               	movlw	high _binv
 14484   017EF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14485   017EF4  0E00               	movlw	0
 14486   017EF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14487   017EF8  0E07               	movlw	7
 14488   017EFA  6E0A               	movwf	write_sram@len^(0+1280),c
 14489   017EFC  EC9F  F0E8         	call	_write_sram	;wreg free
 14490   017F00                     l1696:
 14491                           
 14492                           ;../src/w65_main.c: 702:  write_sram(0, &cpu_flg, 1);
 14493   017F00  0E00               	movlw	0
 14494   017F02  6E04               	movwf	write_sram@addr^(0+1280),c
 14495   017F04  0E00               	movlw	0
 14496   017F06  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 14497   017F08  0E00               	movlw	0
 14498   017F0A  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 14499   017F0C  0E00               	movlw	0
 14500   017F0E  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 14501   017F10  0EE5               	movlw	low _cpu_flg
 14502   017F12  6E08               	movwf	write_sram@buf^(0+1280),c
 14503   017F14  0E07               	movlw	high _cpu_flg
 14504   017F16  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 14505   017F18  0E00               	movlw	0
 14506   017F1A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 14507   017F1C  0E01               	movlw	1
 14508   017F1E  6E0A               	movwf	write_sram@len^(0+1280),c
 14509   017F20  EC9F  F0E8         	call	_write_sram	;wreg free
 14510   017F24                     
 14511                           ;../src/w65_main.c: 704:  start_cpu();
 14512   017F24  ECF8  F0FE         	call	_start_cpu	;wreg free
 14513   017F28                     
 14514                           ;../src/w65_main.c: 705:  rs = drive_cpu();
 14515   017F28  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14516   017F2C  0107               	movlb	7	; () banked
 14517   017F2E  6F18               	movwf	boot_file@rs& (0+255),b
 14518   017F30                     
 14519                           ; BSR set to: 7
 14520                           ;../src/w65_main.c: 706:  if ( !rs ) {
 14521   017F30  5118               	movf	boot_file@rs& (0+255),w,b
 14522   017F32  A4D8               	btfss	status,2,c
 14523   017F34  EF9E  F0BF         	goto	u35291
 14524   017F38  EFA0  F0BF         	goto	u35290
 14525   017F3C                     u35291:
 14526   017F3C  EFD1  F0BE         	goto	l25233
 14527   017F40                     u35290:
 14528   017F40                     
 14529                           ; BSR set to: 7
 14530                           ;../src/w65_main.c: 707:   if ( !fh.bios_sw ) {
 14531   017F40  0108               	movlb	8	; () banked
 14532   017F42  51C1               	movf	(_fh+31)& (0+255),w,b
 14533   017F44  A4D8               	btfss	status,2,c
 14534   017F46  EFA7  F0BF         	goto	u35301
 14535   017F4A  EFA9  F0BF         	goto	u35300
 14536   017F4E                     u35301:
 14537   017F4E  EFDA  F0BF         	goto	l25315
 14538   017F52                     u35300:
 14539   017F52                     
 14540                           ; BSR set to: 8
 14541                           ;../src/w65_main.c: 708:    if (cpu_flg) {
 14542   017F52  0107               	movlb	7	; () banked
 14543   017F54  51E5               	movf	_cpu_flg& (0+255),w,b
 14544   017F56  B4D8               	btfsc	status,2,c
 14545   017F58  EFB0  F0BF         	goto	u35311
 14546   017F5C  EFB2  F0BF         	goto	u35310
 14547   017F60                     u35311:
 14548   017F60  EFBA  F0BF         	goto	l25297
 14549   017F64                     u35310:
 14550   017F64                     
 14551                           ; BSR set to: 7
 14552                           ;../src/w65_main.c: 709:     arg[0] = mon16;
 14553   017F64  0EE3               	movlw	low STR_52
 14554   017F66  6F9E               	movwf	_arg& (0+255),b
 14555   017F68  0EFE               	movlw	high STR_52
 14556   017F6A  6F9F               	movwf	(_arg+1)& (0+255),b
 14557   017F6C                     
 14558                           ; BSR set to: 7
 14559                           ;../src/w65_main.c: 710:     mon = 1;
 14560   017F6C  0E01               	movlw	1
 14561   017F6E  6FC8               	movwf	_mon& (0+255),b
 14562                           
 14563                           ;../src/w65_main.c: 711:    }
 14564   017F70  EFBF  F0BF         	goto	l25301
 14565   017F74                     l25297:
 14566                           
 14567                           ; BSR set to: 7
 14568                           ;../src/w65_main.c: 713:     arg[0] = mon02;
 14569   017F74  0ED8               	movlw	low STR_51
 14570   017F76  6F9E               	movwf	_arg& (0+255),b
 14571   017F78  0EFE               	movlw	high STR_51
 14572   017F7A  6F9F               	movwf	(_arg+1)& (0+255),b
 14573   017F7C                     
 14574                           ; BSR set to: 7
 14575                           ;../src/w65_main.c: 714:     mon = 0;
 14576   017F7C  6BC8               	clrf	_mon& (0+255),b
 14577   017F7E                     l25301:
 14578                           
 14579                           ; BSR set to: 7
 14580                           ;../src/w65_main.c: 716:    prt_reload();
 14581   017F7E  ECEF  F000         	call	_prt_reload	;wreg free
 14582   017F82                     
 14583                           ;../src/w65_main.c: 717:    rs = (FRESULT)load_program((uint8_t *)arg[0]);
 14584   017F82  C79E  F700         	movff	_arg,load_program@fname
 14585   017F86  C79F  F701         	movff	_arg+1,load_program@fname+1
 14586   017F8A  EC86  F0AE         	call	_load_program	;wreg free
 14587   017F8E  0107               	movlb	7	; () banked
 14588   017F90  5100               	movf	?_load_program& (0+255),w,b
 14589   017F92  6F18               	movwf	boot_file@rs& (0+255),b
 14590   017F94                     
 14591                           ; BSR set to: 7
 14592                           ;../src/w65_main.c: 718:    if ( rs ) return 0;
 14593   017F94  5118               	movf	boot_file@rs& (0+255),w,b
 14594   017F96  B4D8               	btfsc	status,2,c
 14595   017F98  EFD0  F0BF         	goto	u35321
 14596   017F9C  EFD2  F0BF         	goto	u35320
 14597   017FA0                     u35321:
 14598   017FA0  EFD4  F0BF         	goto	l25311
 14599   017FA4                     u35320:
 14600   017FA4  EFB6  F0BE         	goto	l25223
 14601   017FA8                     l25311:
 14602                           
 14603                           ; BSR set to: 7
 14604                           ;../src/w65_main.c: 719:    start_cpu();
 14605   017FA8  ECF8  F0FE         	call	_start_cpu	;wreg free
 14606   017FAC                     
 14607                           ;../src/w65_main.c: 720:    rs = drive_cpu();
 14608   017FAC  ECA0  F0FE         	call	_drive_cpu	;wreg free
 14609   017FB0  0107               	movlb	7	; () banked
 14610   017FB2  6F18               	movwf	boot_file@rs& (0+255),b
 14611   017FB4                     l25315:
 14612                           
 14613                           ;../src/w65_main.c: 722:   binv.sw = 0;
 14614   017FB4  0108               	movlb	8	; () banked
 14615   017FB6  6B78               	clrf	_binv& (0+255),b
 14616   017FB8  EFD1  F0BE         	goto	l25233
 14617   017FBC                     l1694:
 14618                           
 14619                           ; BSR set to: 7
 14620   017FBC  0012               	return		;funcret
 14621   017FBE                     __end_of_boot_file:
 14622                           	callstack 0
 14623                           
 14624 ;; *************** function _print_com *****************
 14625 ;; Defined at:
 14626 ;;		line 758 in file "../src/w65_main.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;		None
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;		None
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  1    wreg      enum E23452
 14633 ;; Registers used:
 14634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14644 ;;Total ram usage:        0 bytes
 14645 ;; Hardware stack levels used: 1
 14646 ;; Hardware stack levels required when called: 9
 14647 ;; This function calls:
 14648 ;;		_printf
 14649 ;; This function is called by:
 14650 ;;		_main
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           
 14654                           	psect	text2
 14655   01E4D4                     __ptext2:
 14656                           	callstack 0
 14657   01E4D4                     _print_com:
 14658                           	callstack 117
 14659   01E4D4                     
 14660                           ;../src/w65_main.c: 760:  printf("\r\n<< MEZW65C_RAM Firmware Built-in command >>\r\n");
 14661   01E4D4  0E8C               	movlw	low STR_115
 14662   01E4D6  0105               	movlb	5	; () banked
 14663   01E4D8  6FAD               	movwf	printf@fmt& (0+255),b
 14664   01E4DA  0EF3               	movlw	high STR_115
 14665   01E4DC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14666   01E4DE  ECDA  F0FF         	call	_printf	;wreg free
 14667                           
 14668                           ;../src/w65_main.c: 761:  printf("  LS | DIR [file name | directory name\r\n");
 14669   01E4E2  0EC9               	movlw	low STR_116
 14670   01E4E4  0105               	movlb	5	; () banked
 14671   01E4E6  6FAD               	movwf	printf@fmt& (0+255),b
 14672   01E4E8  0EF5               	movlw	high STR_116
 14673   01E4EA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14674   01E4EC  ECDA  F0FF         	call	_printf	;wreg free
 14675                           
 14676                           ;../src/w65_main.c: 762:  printf("  CD [directory name]\n\r");
 14677   01E4F0  0E1E               	movlw	low STR_117
 14678   01E4F2  0105               	movlb	5	; () banked
 14679   01E4F4  6FAD               	movwf	printf@fmt& (0+255),b
 14680   01E4F6  0EFB               	movlw	high STR_117
 14681   01E4F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14682   01E4FA  ECDA  F0FF         	call	_printf	;wreg free
 14683                           
 14684                           ;../src/w65_main.c: 763:  printf("  LOAD [L=load address(Hex)] file name\r\n");
 14685   01E4FE  0EA0               	movlw	low STR_118
 14686   01E500  0105               	movlb	5	; () banked
 14687   01E502  6FAD               	movwf	printf@fmt& (0+255),b
 14688   01E504  0EF5               	movlw	high STR_118
 14689   01E506  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14690   01E508  ECDA  F0FF         	call	_printf	;wreg free
 14691                           
 14692                           ;../src/w65_main.c: 764:  printf("  MDUMP address(Hex)\r\n");
 14693   01E50C  0E7C               	movlw	low STR_119
 14694   01E50E  0105               	movlb	5	; () banked
 14695   01E510  6FAD               	movwf	printf@fmt& (0+255),b
 14696   01E512  0EFB               	movlw	high STR_119
 14697   01E514  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14698   01E516  ECDA  F0FF         	call	_printf	;wreg free
 14699                           
 14700                           ;../src/w65_main.c: 765:  printf("  MONITOR [W]\r\n");
 14701   01E51A  0ED7               	movlw	low STR_120
 14702   01E51C  0105               	movlb	5	; () banked
 14703   01E51E  6FAD               	movwf	printf@fmt& (0+255),b
 14704   01E520  0EFD               	movlw	high STR_120
 14705   01E522  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14706   01E524  ECDA  F0FF         	call	_printf	;wreg free
 14707                           
 14708                           ;../src/w65_main.c: 766:  printf("  CSTART\r\n");
 14709   01E528  0EAC               	movlw	low STR_121
 14710   01E52A  0105               	movlb	5	; () banked
 14711   01E52C  6FAD               	movwf	printf@fmt& (0+255),b
 14712   01E52E  0EFE               	movlw	high STR_121
 14713   01E530  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14714   01E532  ECDA  F0FF         	call	_printf	;wreg free
 14715                           
 14716                           ;../src/w65_main.c: 767:  printf("  WSTART\r\n");
 14717   01E536  0EB7               	movlw	low STR_122
 14718   01E538  0105               	movlb	5	; () banked
 14719   01E53A  6FAD               	movwf	printf@fmt& (0+255),b
 14720   01E53C  0EFE               	movlw	high STR_122
 14721   01E53E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14722   01E540  ECDA  F0FF         	call	_printf	;wreg free
 14723                           
 14724                           ;../src/w65_main.c: 768:  printf("  RETI\r\n");
 14725   01E544  0E15               	movlw	low STR_123
 14726   01E546  0105               	movlb	5	; () banked
 14727   01E548  6FAD               	movwf	printf@fmt& (0+255),b
 14728   01E54A  0EFF               	movlw	high STR_123
 14729   01E54C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14730   01E54E  ECDA  F0FF         	call	_printf	;wreg free
 14731                           
 14732                           ;../src/w65_main.c: 769:  printf("  REG\r\n");
 14733   01E552  0E30               	movlw	low STR_124
 14734   01E554  0105               	movlb	5	; () banked
 14735   01E556  6FAD               	movwf	printf@fmt& (0+255),b
 14736   01E558  0EFF               	movlw	high STR_124
 14737   01E55A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14738   01E55C  ECDA  F0FF         	call	_printf	;wreg free
 14739                           
 14740                           ;../src/w65_main.c: 770:  printf("  SHOW file name\r\n");
 14741   01E560  0E22               	movlw	low STR_125
 14742   01E562  0105               	movlb	5	; () banked
 14743   01E564  6FAD               	movwf	printf@fmt& (0+255),b
 14744   01E566  0EFD               	movlw	high STR_125
 14745   01E568  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14746   01E56A  ECDA  F0FF         	call	_printf	;wreg free
 14747                           
 14748                           ;../src/w65_main.c: 771:  printf("  FLASH\r\n");
 14749   01E56E  0EF8               	movlw	low STR_126
 14750   01E570  0105               	movlb	5	; () banked
 14751   01E572  6FAD               	movwf	printf@fmt& (0+255),b
 14752   01E574  0EFE               	movlw	high STR_126
 14753   01E576  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14754   01E578  ECDA  F0FF         	call	_printf	;wreg free
 14755                           
 14756                           ;../src/w65_main.c: 772:  printf("  HELP | ?\r\n");
 14757   01E57C  0E7A               	movlw	low STR_127
 14758   01E57E  0105               	movlb	5	; () banked
 14759   01E580  6FAD               	movwf	printf@fmt& (0+255),b
 14760   01E582  0EFE               	movlw	high STR_127
 14761   01E584  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14762   01E586  ECDA  F0FF         	call	_printf	;wreg free
 14763   01E58A                     
 14764                           ;../src/w65_main.c: 773:  return FR_OK;
 14765   01E58A  0E00               	movlw	0
 14766   01E58C  0012               	return		;funcret
 14767   01E58E                     __end_of_print_com:
 14768                           	callstack 0
 14769                           
 14770 ;; *************** function _flash_apl *****************
 14771 ;; Defined at:
 14772 ;;		line 933 in file "../src/w65_main.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      enum E23452
 14779 ;; Registers used:
 14780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used: 1
 14792 ;; Hardware stack levels required when called: 9
 14793 ;; This function calls:
 14794 ;;		_printf
 14795 ;; This function is called by:
 14796 ;;		_main
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           	psect	text3
 14801   01FC42                     __ptext3:
 14802                           	callstack 0
 14803   01FC42                     _flash_apl:
 14804                           	callstack 117
 14805   01FC42                     
 14806                           ;../src/w65_main.c: 934:  if ( binv.sw ) {
 14807   01FC42  0108               	movlb	8	; () banked
 14808   01FC44  5178               	movf	_binv& (0+255),w,b
 14809   01FC46  B4D8               	btfsc	status,2,c
 14810   01FC48  EF28  F0FE         	goto	u35481
 14811   01FC4C  EF2A  F0FE         	goto	u35480
 14812   01FC50                     u35481:
 14813   01FC50  EF39  F0FE         	goto	l25525
 14814   01FC54                     u35480:
 14815   01FC54                     
 14816                           ; BSR set to: 8
 14817                           ;../src/w65_main.c: 935:   printf("Terminate %s\r\n",binv.fname);
 14818   01FC54  0E16               	movlw	low STR_161
 14819   01FC56  0105               	movlb	5	; () banked
 14820   01FC58  6FAD               	movwf	printf@fmt& (0+255),b
 14821   01FC5A  0EFE               	movlw	high STR_161
 14822   01FC5C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14823   01FC5E  0E84               	movlw	low (_binv+12)
 14824   01FC60  6FAF               	movwf	(?_printf+2)& (0+255),b
 14825   01FC62  0E08               	movlw	high (_binv+12)
 14826   01FC64  6FB0               	movwf	(?_printf+3)& (0+255),b
 14827   01FC66  ECDA  F0FF         	call	_printf	;wreg free
 14828   01FC6A                     
 14829                           ;../src/w65_main.c: 936:   binv.sw = 0;
 14830   01FC6A  0108               	movlb	8	; () banked
 14831   01FC6C  6B78               	clrf	_binv& (0+255),b
 14832                           
 14833                           ;../src/w65_main.c: 937:  }
 14834   01FC6E  EF40  F0FE         	goto	l25527
 14835   01FC72                     l25525:
 14836                           
 14837                           ; BSR set to: 8
 14838   01FC72  0E9E               	movlw	low STR_162
 14839   01FC74  0105               	movlb	5	; () banked
 14840   01FC76  6FAD               	movwf	printf@fmt& (0+255),b
 14841   01FC78  0EF9               	movlw	high STR_162
 14842   01FC7A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14843   01FC7C  ECDA  F0FF         	call	_printf	;wreg free
 14844   01FC80                     l25527:
 14845                           
 14846                           ;../src/w65_main.c: 940:  return FR_OK;
 14847   01FC80  0E00               	movlw	0
 14848   01FC82  0012               	return		;funcret
 14849   01FC84                     __end_of_flash_apl:
 14850                           	callstack 0
 14851                           
 14852 ;; *************** function _see_file *****************
 14853 ;; Defined at:
 14854 ;;		line 863 in file "../src/w65_main.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;		None
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  header          2    7[BANK7 ] PTR struct .
 14859 ;;		 -> tmp_buf(512), 
 14860 ;;  br              2    4[BANK7 ] unsigned int 
 14861 ;;  rdbuf           2    2[BANK7 ] PTR void 
 14862 ;;		 -> tmp_buf(512), 
 14863 ;;  fr              1    6[BANK7 ] enum E23452
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      enum E23452
 14866 ;; Registers used:
 14867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14874 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14875 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14876 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 14877 ;;Total ram usage:        9 bytes
 14878 ;; Hardware stack levels used: 1
 14879 ;; Hardware stack levels required when called: 20
 14880 ;; This function calls:
 14881 ;;		_f_close
 14882 ;;		_f_open
 14883 ;;		_f_read
 14884 ;;		_printf
 14885 ;;		_strstr
 14886 ;; This function is called by:
 14887 ;;		_main
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text4
 14892   0153D4                     __ptext4:
 14893                           	callstack 0
 14894   0153D4                     _see_file:
 14895                           	callstack 106
 14896   0153D4                     
 14897                           ;../src/w65_main.c: 865:  FRESULT fr;;../src/w65_main.c: 866:  void *rdbuf;;../src/w65_m
      +                          ain.c: 867:  UINT br;;../src/w65_main.c: 868:  file_header *header;;../src/w65_main.c: 8
      +                          70:  rdbuf = (void *)&tmp_buf[0][0];
 14898   0153D4  0EF8               	movlw	low _tmp_buf
 14899   0153D6  0107               	movlb	7	; () banked
 14900   0153D8  6F02               	movwf	see_file@rdbuf& (0+255),b
 14901   0153DA  0E13               	movlw	high _tmp_buf
 14902   0153DC  6F03               	movwf	(see_file@rdbuf+1)& (0+255),b
 14903                           
 14904                           ;../src/w65_main.c: 871:  header = (file_header *)&tmp_buf[0][0];
 14905   0153DE  0EF8               	movlw	low _tmp_buf
 14906   0153E0  6F07               	movwf	see_file@header& (0+255),b
 14907   0153E2  0E13               	movlw	high _tmp_buf
 14908   0153E4  6F08               	movwf	(see_file@header+1)& (0+255),b
 14909   0153E6                     
 14910                           ; BSR set to: 7
 14911                           ;../src/w65_main.c: 873:  fr = f_open(&rom_fl, (TCHAR *)arg[0], 0x01);
 14912   0153E6  0ED6               	movlw	low _rom_fl
 14913   0153E8  0106               	movlb	6	; () banked
 14914   0153EA  6FAF               	movwf	f_open@fp& (0+255),b
 14915   0153EC  0E0F               	movlw	high _rom_fl
 14916   0153EE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 14917   0153F0  C79E  F6B1         	movff	_arg,f_open@path
 14918   0153F4  C79F  F6B2         	movff	_arg+1,f_open@path+1
 14919   0153F8  0E01               	movlw	1
 14920   0153FA  6FB3               	movwf	f_open@mode& (0+255),b
 14921   0153FC  ECDB  F092         	call	_f_open	;wreg free
 14922   015400  0107               	movlb	7	; () banked
 14923   015402  6F06               	movwf	see_file@fr& (0+255),b
 14924   015404                     
 14925                           ; BSR set to: 7
 14926                           ;../src/w65_main.c: 874:  if ( fr != FR_OK ) {
 14927   015404  5106               	movf	see_file@fr& (0+255),w,b
 14928   015406  B4D8               	btfsc	status,2,c
 14929   015408  EF08  F0AA         	goto	u35381
 14930   01540C  EF0A  F0AA         	goto	u35380
 14931   015410                     u35381:
 14932   015410  EF14  F0AA         	goto	l1746
 14933   015414                     u35380:
 14934   015414                     
 14935                           ; BSR set to: 7
 14936                           ;../src/w65_main.c: 875:   printf("\r\nFile Open Error.\r\n");
 14937   015414  0E5B               	movlw	low STR_134
 14938   015416  0105               	movlb	5	; () banked
 14939   015418  6FAD               	movwf	printf@fmt& (0+255),b
 14940   01541A  0EFC               	movlw	high STR_134
 14941   01541C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14942   01541E  ECDA  F0FF         	call	_printf	;wreg free
 14943   015422                     l25449:
 14944                           
 14945                           ;../src/w65_main.c: 876:   return 0;
 14946   015422  0E00               	movlw	0
 14947   015424  EF37  F0AC         	goto	l1747
 14948   015428                     l1746:
 14949                           
 14950                           ; BSR set to: 7
 14951                           ;../src/w65_main.c: 879:  file_size = (uint16_t)((&rom_fl)->obj.objsize);
 14952   015428  0063  FF80  F7BB   	movff	_rom_fl+10,_file_size
 14953   01542E  0063  FF84  F7BC   	movff	_rom_fl+11,_file_size+1
 14954   015434                     
 14955                           ; BSR set to: 7
 14956                           ;../src/w65_main.c: 880:  fr = f_read(&rom_fl, rdbuf, 256 * 2, &br);
 14957   015434  0ED6               	movlw	low _rom_fl
 14958   015436  0106               	movlb	6	; () banked
 14959   015438  6F3E               	movwf	f_read@fp& (0+255),b
 14960   01543A  0E0F               	movlw	high _rom_fl
 14961   01543C  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 14962   01543E  C702  F640         	movff	see_file@rdbuf,f_read@buff
 14963   015442  C703  F641         	movff	see_file@rdbuf+1,f_read@buff+1
 14964   015446  0E02               	movlw	2
 14965   015448  6F43               	movwf	(f_read@btr+1)& (0+255),b
 14966   01544A  0E00               	movlw	0
 14967   01544C  6F42               	movwf	f_read@btr& (0+255),b
 14968   01544E  0E04               	movlw	low see_file@br
 14969   015450  6F44               	movwf	f_read@br& (0+255),b
 14970   015452  0E07               	movlw	high see_file@br
 14971   015454  6F45               	movwf	(f_read@br+1)& (0+255),b
 14972   015456  EC9B  F096         	call	_f_read	;wreg free
 14973   01545A  0107               	movlb	7	; () banked
 14974   01545C  6F06               	movwf	see_file@fr& (0+255),b
 14975   01545E                     
 14976                           ; BSR set to: 7
 14977                           ;../src/w65_main.c: 881:  if (fr == FR_OK) {
 14978   01545E  5106               	movf	see_file@fr& (0+255),w,b
 14979   015460  A4D8               	btfss	status,2,c
 14980   015462  EF35  F0AA         	goto	u35391
 14981   015466  EF37  F0AA         	goto	u35390
 14982   01546A                     u35391:
 14983   01546A  EF27  F0AC         	goto	l25513
 14984   01546E                     u35390:
 14985   01546E                     
 14986                           ; BSR set to: 7
 14987                           ;../src/w65_main.c: 883:   printf("\r\n%s : Size = $%04X bytes.\r\n", arg[0], file_size)
      +                          ;
 14988   01546E  0EF4               	movlw	low STR_135
 14989   015470  0105               	movlb	5	; () banked
 14990   015472  6FAD               	movwf	printf@fmt& (0+255),b
 14991   015474  0EF8               	movlw	high STR_135
 14992   015476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 14993   015478  C79E  F5AF         	movff	_arg,?_printf+2
 14994   01547C  C79F  F5B0         	movff	_arg+1,?_printf+3
 14995   015480  C7BB  F5B1         	movff	_file_size,?_printf+4
 14996   015484  C7BC  F5B2         	movff	_file_size+1,?_printf+5
 14997   015488  ECDA  F0FF         	call	_printf	;wreg free
 14998   01548C                     
 14999                           ;../src/w65_main.c: 884:   if (!strstr((const char *)header->mezID, mezID)) {
 15000   01548C  0E08               	movlw	8
 15001   01548E  0107               	movlb	7	; () banked
 15002   015490  2507               	addwf	see_file@header& (0+255),w,b
 15003   015492  6E0B               	movwf	strstr@h^(0+1280),c
 15004   015494  0E00               	movlw	0
 15005   015496  2108               	addwfc	(see_file@header+1)& (0+255),w,b
 15006   015498  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 15007   01549A  0E48               	movlw	low STR_47
 15008   01549C  6E0D               	movwf	strstr@n^(0+1280),c
 15009   01549E  0EFF               	movlw	high STR_47
 15010   0154A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 15011   0154A2  ECCF  F0EE         	call	_strstr	;wreg free
 15012   0154A6  500B               	movf	?_strstr^(0+1280),w,c
 15013   0154A8  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 15014   0154AA  A4D8               	btfss	status,2,c
 15015   0154AC  EF5A  F0AA         	goto	u35401
 15016   0154B0  EF5C  F0AA         	goto	u35400
 15017   0154B4                     u35401:
 15018   0154B4  EF65  F0AA         	goto	l25463
 15019   0154B8                     u35400:
 15020   0154B8                     
 15021                           ;../src/w65_main.c: 885:    printf("Not MEZW65C_RAM format file.\r\n");
 15022   0154B8  0EB6               	movlw	low STR_136
 15023   0154BA  0105               	movlb	5	; () banked
 15024   0154BC  6FAD               	movwf	printf@fmt& (0+255),b
 15025   0154BE  0EF8               	movlw	high STR_136
 15026   0154C0  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15027   0154C2  ECDA  F0FF         	call	_printf	;wreg free
 15028                           
 15029                           ;../src/w65_main.c: 886:   }
 15030   0154C6  EF27  F0AC         	goto	l25513
 15031   0154CA                     l25463:
 15032                           
 15033                           ;../src/w65_main.c: 888:    printf("FIle load address : $%06lX\r\n", (unsigned long)head
      +                          er->load_p );
 15034   0154CA  0E11               	movlw	low STR_137
 15035   0154CC  0105               	movlb	5	; () banked
 15036   0154CE  6FAD               	movwf	printf@fmt& (0+255),b
 15037   0154D0  0EF9               	movlw	high STR_137
 15038   0154D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15039   0154D4  0107               	movlb	7	; () banked
 15040   0154D6  EE20 F010          	lfsr	2,16
 15041   0154DA  5107               	movf	see_file@header& (0+255),w,b
 15042   0154DC  26D9               	addwf	fsr2l,f,c
 15043   0154DE  5108               	movf	(see_file@header+1)& (0+255),w,b
 15044   0154E0  22DA               	addwfc	fsr2h,f,c
 15045   0154E2  C4DE F5AF          	movff	postinc2,?_printf+2
 15046   0154E6  C4DE F5B0          	movff	postinc2,?_printf+3
 15047   0154EA  C4DE F5B1          	movff	postinc2,?_printf+4
 15048   0154EE  C4DE F5B2          	movff	postinc2,?_printf+5
 15049   0154F2  ECDA  F0FF         	call	_printf	;wreg free
 15050                           
 15051                           ;../src/w65_main.c: 889:    printf("File Type : ");
 15052   0154F6  0E87               	movlw	low STR_138
 15053   0154F8  0105               	movlb	5	; () banked
 15054   0154FA  6FAD               	movwf	printf@fmt& (0+255),b
 15055   0154FC  0EFE               	movlw	high STR_138
 15056   0154FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15057   015500  ECDA  F0FF         	call	_printf	;wreg free
 15058                           
 15059                           ;../src/w65_main.c: 890:    switch (header->bios_sw) {
 15060   015504  EF11  F0AC         	goto	l25511
 15061   015508                     l25465:
 15062                           
 15063                           ; BSR set to: 7
 15064                           ;../src/w65_main.c: 893:      if ( !header->bios_sw ) printf("Stand-alone\n\r");
 15065   015508  EE20 F01F          	lfsr	2,31
 15066   01550C  5107               	movf	see_file@header& (0+255),w,b
 15067   01550E  26D9               	addwf	fsr2l,f,c
 15068   015510  5108               	movf	(see_file@header+1)& (0+255),w,b
 15069   015512  22DA               	addwfc	fsr2h,f,c
 15070   015514  50DF               	movf	indf2,w,c
 15071   015516  A4D8               	btfss	status,2,c
 15072   015518  EF90  F0AA         	goto	u35411
 15073   01551C  EF92  F0AA         	goto	u35410
 15074   015520                     u35411:
 15075   015520  EF9B  F0AA         	goto	l25469
 15076   015524                     u35410:
 15077   015524                     
 15078                           ; BSR set to: 7
 15079   015524  0E50               	movlw	low STR_139
 15080   015526  0105               	movlb	5	; () banked
 15081   015528  6FAD               	movwf	printf@fmt& (0+255),b
 15082   01552A  0EFE               	movlw	high STR_139
 15083   01552C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15084   01552E  ECDA  F0FF         	call	_printf	;wreg free
 15085   015532  EFA2  F0AA         	goto	l1755
 15086   015536                     l25469:
 15087                           
 15088                           ; BSR set to: 7
 15089   015536  0E02               	movlw	low STR_140
 15090   015538  0105               	movlb	5	; () banked
 15091   01553A  6FAD               	movwf	printf@fmt& (0+255),b
 15092   01553C  0EFF               	movlw	high STR_140
 15093   01553E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15094   015540  ECDA  F0FF         	call	_printf	;wreg free
 15095   015544                     l1755:
 15096                           
 15097                           ;../src/w65_main.c: 895:      printf("Operational Mode : ");
 15098   015544  0EC2               	movlw	low STR_141
 15099   015546  0105               	movlb	5	; () banked
 15100   015548  6FAD               	movwf	printf@fmt& (0+255),b
 15101   01554A  0EFC               	movlw	high STR_141
 15102   01554C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15103   01554E  ECDA  F0FF         	call	_printf	;wreg free
 15104   015552                     
 15105                           ;../src/w65_main.c: 896:      if (!header->sw_816) printf("W65C02 (Emulation Mode)\n\r")
      +                          ;
 15106   015552  0107               	movlb	7	; () banked
 15107   015554  EE20 F018          	lfsr	2,24
 15108   015558  5107               	movf	see_file@header& (0+255),w,b
 15109   01555A  26D9               	addwf	fsr2l,f,c
 15110   01555C  5108               	movf	(see_file@header+1)& (0+255),w,b
 15111   01555E  22DA               	addwfc	fsr2h,f,c
 15112   015560  50DF               	movf	indf2,w,c
 15113   015562  A4D8               	btfss	status,2,c
 15114   015564  EFB6  F0AA         	goto	u35421
 15115   015568  EFB8  F0AA         	goto	u35420
 15116   01556C                     u35421:
 15117   01556C  EFC1  F0AA         	goto	l25475
 15118   015570                     u35420:
 15119   015570                     
 15120                           ; BSR set to: 7
 15121   015570  0E08               	movlw	low STR_142
 15122   015572  0105               	movlb	5	; () banked
 15123   015574  6FAD               	movwf	printf@fmt& (0+255),b
 15124   015576  0EFA               	movlw	high STR_142
 15125   015578  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15126   01557A  ECDA  F0FF         	call	_printf	;wreg free
 15127   01557E  EFC8  F0AA         	goto	l1757
 15128   015582                     l25475:
 15129                           
 15130                           ; BSR set to: 7
 15131   015582  0E1A               	movlw	low STR_143
 15132   015584  0105               	movlb	5	; () banked
 15133   015586  6FAD               	movwf	printf@fmt& (0+255),b
 15134   015588  0EFC               	movlw	high STR_143
 15135   01558A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15136   01558C  ECDA  F0FF         	call	_printf	;wreg free
 15137   015590                     l1757:
 15138                           
 15139                           ;../src/w65_main.c: 898:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 15140   015590  0EB5               	movlw	low STR_144
 15141   015592  0105               	movlb	5	; () banked
 15142   015594  6FAD               	movwf	printf@fmt& (0+255),b
 15143   015596  0EFD               	movlw	high STR_144
 15144   015598  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15145   01559A  0107               	movlb	7	; () banked
 15146   01559C  EE20 F001          	lfsr	2,1
 15147   0155A0  5107               	movf	see_file@header& (0+255),w,b
 15148   0155A2  26D9               	addwf	fsr2l,f,c
 15149   0155A4  5108               	movf	(see_file@header+1)& (0+255),w,b
 15150   0155A6  22DA               	addwfc	fsr2h,f,c
 15151   0155A8  C4DE F5AF          	movff	postinc2,?_printf+2
 15152   0155AC  C4DD F5B0          	movff	postdec2,?_printf+3
 15153   0155B0  ECDA  F0FF         	call	_printf	;wreg free
 15154                           
 15155                           ;../src/w65_main.c: 899:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 15156   0155B4  0EC6               	movlw	low STR_145
 15157   0155B6  0105               	movlb	5	; () banked
 15158   0155B8  6FAD               	movwf	printf@fmt& (0+255),b
 15159   0155BA  0EFD               	movlw	high STR_145
 15160   0155BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15161   0155BE  0107               	movlb	7	; () banked
 15162   0155C0  EE20 F004          	lfsr	2,4
 15163   0155C4  5107               	movf	see_file@header& (0+255),w,b
 15164   0155C6  26D9               	addwf	fsr2l,f,c
 15165   0155C8  5108               	movf	(see_file@header+1)& (0+255),w,b
 15166   0155CA  22DA               	addwfc	fsr2h,f,c
 15167   0155CC  C4DE F5AF          	movff	postinc2,?_printf+2
 15168   0155D0  C4DD F5B0          	movff	postdec2,?_printf+3
 15169   0155D4  ECDA  F0FF         	call	_printf	;wreg free
 15170   0155D8                     
 15171                           ;../src/w65_main.c: 900:      if (header->sw_816 == 1) printf("DPR : $%04X PBR : $00 DBR
      +                           : $00\r\n",header->direct_page);
 15172   0155D8  0107               	movlb	7	; () banked
 15173   0155DA  EE20 F018          	lfsr	2,24
 15174   0155DE  5107               	movf	see_file@header& (0+255),w,b
 15175   0155E0  26D9               	addwf	fsr2l,f,c
 15176   0155E2  5108               	movf	(see_file@header+1)& (0+255),w,b
 15177   0155E4  22DA               	addwfc	fsr2h,f,c
 15178   0155E6  04DE               	decf	postinc2,w,c
 15179   0155E8  A4D8               	btfss	status,2,c
 15180   0155EA  EFF9  F0AA         	goto	u35431
 15181   0155EE  EFFB  F0AA         	goto	u35430
 15182   0155F2                     u35431:
 15183   0155F2  EF0D  F0AB         	goto	l1758
 15184   0155F6                     u35430:
 15185   0155F6                     
 15186                           ; BSR set to: 7
 15187   0155F6  0EF3               	movlw	low STR_146
 15188   0155F8  0105               	movlb	5	; () banked
 15189   0155FA  6FAD               	movwf	printf@fmt& (0+255),b
 15190   0155FC  0EF7               	movlw	high STR_146
 15191   0155FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15192   015600  0107               	movlb	7	; () banked
 15193   015602  EE20 F006          	lfsr	2,6
 15194   015606  5107               	movf	see_file@header& (0+255),w,b
 15195   015608  26D9               	addwf	fsr2l,f,c
 15196   01560A  5108               	movf	(see_file@header+1)& (0+255),w,b
 15197   01560C  22DA               	addwfc	fsr2h,f,c
 15198   01560E  C4DE F5AF          	movff	postinc2,?_printf+2
 15199   015612  C4DD F5B0          	movff	postdec2,?_printf+3
 15200   015616  ECDA  F0FF         	call	_printf	;wreg free
 15201   01561A                     l1758:
 15202                           
 15203                           ;../src/w65_main.c: 901:      printf("PIC I/F Shared memory : $%06lX\r\n",(unsigned long
      +                          )header->picif_p);
 15204   01561A  0E15               	movlw	low STR_147
 15205   01561C  0105               	movlb	5	; () banked
 15206   01561E  6FAD               	movwf	printf@fmt& (0+255),b
 15207   015620  0EF8               	movlw	high STR_147
 15208   015622  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15209   015624  0107               	movlb	7	; () banked
 15210   015626  EE20 F014          	lfsr	2,20
 15211   01562A  5107               	movf	see_file@header& (0+255),w,b
 15212   01562C  26D9               	addwf	fsr2l,f,c
 15213   01562E  5108               	movf	(see_file@header+1)& (0+255),w,b
 15214   015630  22DA               	addwfc	fsr2h,f,c
 15215   015632  C4DE F5AF          	movff	postinc2,?_printf+2
 15216   015636  C4DE F5B0          	movff	postinc2,?_printf+3
 15217   01563A  C4DE F5B1          	movff	postinc2,?_printf+4
 15218   01563E  C4DE F5B2          	movff	postinc2,?_printf+5
 15219   015642  ECDA  F0FF         	call	_printf	;wreg free
 15220   015646                     
 15221                           ;../src/w65_main.c: 902:      if ( header->bios_sw == 2 ) {
 15222   015646  0107               	movlb	7	; () banked
 15223   015648  EE20 F01F          	lfsr	2,31
 15224   01564C  5107               	movf	see_file@header& (0+255),w,b
 15225   01564E  26D9               	addwf	fsr2l,f,c
 15226   015650  5108               	movf	(see_file@header+1)& (0+255),w,b
 15227   015652  22DA               	addwfc	fsr2h,f,c
 15228   015654  0E02               	movlw	2
 15229   015656  18DE               	xorwf	postinc2,w,c
 15230   015658  A4D8               	btfss	status,2,c
 15231   01565A  EF31  F0AB         	goto	u35441
 15232   01565E  EF33  F0AB         	goto	u35440
 15233   015662                     u35441:
 15234   015662  EF27  F0AC         	goto	l25513
 15235   015666                     u35440:
 15236   015666                     
 15237                           ; BSR set to: 7
 15238                           ;../src/w65_main.c: 903:       if( header->irq_sw ) printf("IRQ : Support, ");
 15239   015666  EE20 F019          	lfsr	2,25
 15240   01566A  5107               	movf	see_file@header& (0+255),w,b
 15241   01566C  26D9               	addwf	fsr2l,f,c
 15242   01566E  5108               	movf	(see_file@header+1)& (0+255),w,b
 15243   015670  22DA               	addwfc	fsr2h,f,c
 15244   015672  50DF               	movf	indf2,w,c
 15245   015674  B4D8               	btfsc	status,2,c
 15246   015676  EF3F  F0AB         	goto	u35451
 15247   01567A  EF41  F0AB         	goto	u35450
 15248   01567E                     u35451:
 15249   01567E  EF4A  F0AB         	goto	l25487
 15250   015682                     u35450:
 15251   015682                     
 15252                           ; BSR set to: 7
 15253   015682  0EF7               	movlw	low STR_148
 15254   015684  0105               	movlb	5	; () banked
 15255   015686  6FAD               	movwf	printf@fmt& (0+255),b
 15256   015688  0EFD               	movlw	high STR_148
 15257   01568A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15258   01568C  ECDA  F0FF         	call	_printf	;wreg free
 15259   015690  EF51  F0AB         	goto	l25489
 15260   015694                     l25487:
 15261                           
 15262                           ; BSR set to: 7
 15263   015694  0E48               	movlw	low STR_149
 15264   015696  0105               	movlb	5	; () banked
 15265   015698  6FAD               	movwf	printf@fmt& (0+255),b
 15266   01569A  0EFD               	movlw	high STR_149
 15267   01569C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15268   01569E  ECDA  F0FF         	call	_printf	;wreg free
 15269   0156A2                     l25489:
 15270                           
 15271                           ;../src/w65_main.c: 905:       if( header->nmi_sw ) printf("MNI : Support\r\n");
 15272   0156A2  0107               	movlb	7	; () banked
 15273   0156A4  EE20 F01E          	lfsr	2,30
 15274   0156A8  5107               	movf	see_file@header& (0+255),w,b
 15275   0156AA  26D9               	addwf	fsr2l,f,c
 15276   0156AC  5108               	movf	(see_file@header+1)& (0+255),w,b
 15277   0156AE  22DA               	addwfc	fsr2h,f,c
 15278   0156B0  50DF               	movf	indf2,w,c
 15279   0156B2  B4D8               	btfsc	status,2,c
 15280   0156B4  EF5E  F0AB         	goto	u35461
 15281   0156B8  EF60  F0AB         	goto	u35460
 15282   0156BC                     u35461:
 15283   0156BC  EF69  F0AB         	goto	l25493
 15284   0156C0                     u35460:
 15285   0156C0                     
 15286                           ; BSR set to: 7
 15287   0156C0  0EE7               	movlw	low STR_150
 15288   0156C2  0105               	movlb	5	; () banked
 15289   0156C4  6FAD               	movwf	printf@fmt& (0+255),b
 15290   0156C6  0EFD               	movlw	high STR_150
 15291   0156C8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15292   0156CA  ECDA  F0FF         	call	_printf	;wreg free
 15293   0156CE  EF27  F0AC         	goto	l25513
 15294   0156D2                     l25493:
 15295                           
 15296                           ; BSR set to: 7
 15297   0156D2  0E35               	movlw	low STR_151
 15298   0156D4  0105               	movlb	5	; () banked
 15299   0156D6  6FAD               	movwf	printf@fmt& (0+255),b
 15300   0156D8  0EFD               	movlw	high STR_151
 15301   0156DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15302   0156DC  ECDA  F0FF         	call	_printf	;wreg free
 15303   0156E0  EF27  F0AC         	goto	l25513
 15304   0156E4                     l25495:
 15305                           
 15306                           ; BSR set to: 7
 15307                           ;../src/w65_main.c: 910:      printf("Using BIOS CALL\n\r");
 15308   0156E4  0E80               	movlw	low STR_152
 15309   0156E6  0105               	movlb	5	; () banked
 15310   0156E8  6FAD               	movwf	printf@fmt& (0+255),b
 15311   0156EA  0EFD               	movlw	high STR_152
 15312   0156EC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15313   0156EE  ECDA  F0FF         	call	_printf	;wreg free
 15314                           
 15315                           ;../src/w65_main.c: 911:      printf("Operational Mode : ");
 15316   0156F2  0EC2               	movlw	low STR_141
 15317   0156F4  0105               	movlb	5	; () banked
 15318   0156F6  6FAD               	movwf	printf@fmt& (0+255),b
 15319   0156F8  0EFC               	movlw	high STR_141
 15320   0156FA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15321   0156FC  ECDA  F0FF         	call	_printf	;wreg free
 15322                           
 15323                           ;../src/w65_main.c: 912:      switch (header->sw_816) {
 15324   015700  EF9D  F0AB         	goto	l25503
 15325   015704                     l25497:
 15326                           
 15327                           ; BSR set to: 7
 15328                           ;../src/w65_main.c: 914:        printf("W65C02 (Emulation Mode)\n\r");
 15329   015704  0E08               	movlw	low STR_142
 15330   015706  0105               	movlb	5	; () banked
 15331   015708  6FAD               	movwf	printf@fmt& (0+255),b
 15332   01570A  0EFA               	movlw	high STR_142
 15333   01570C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15334   01570E  ECDA  F0FF         	call	_printf	;wreg free
 15335                           
 15336                           ;../src/w65_main.c: 915:        break;
 15337   015712  EFB3  F0AB         	goto	l25505
 15338   015716                     l25499:
 15339                           
 15340                           ; BSR set to: 7
 15341                           ;../src/w65_main.c: 917:        printf("W65C816 Native mode\n\r");
 15342   015716  0E1A               	movlw	low STR_143
 15343   015718  0105               	movlb	5	; () banked
 15344   01571A  6FAD               	movwf	printf@fmt& (0+255),b
 15345   01571C  0EFC               	movlw	high STR_143
 15346   01571E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15347   015720  ECDA  F0FF         	call	_printf	;wreg free
 15348                           
 15349                           ;../src/w65_main.c: 918:        break;
 15350   015724  EFB3  F0AB         	goto	l25505
 15351   015728                     l25501:
 15352                           
 15353                           ; BSR set to: 7
 15354                           ;../src/w65_main.c: 920:        printf("Both W65C02 and W65C816\n\r");
 15355   015728  0E22               	movlw	low STR_156
 15356   01572A  0105               	movlb	5	; () banked
 15357   01572C  6FAD               	movwf	printf@fmt& (0+255),b
 15358   01572E  0EFA               	movlw	high STR_156
 15359   015730  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15360   015732  ECDA  F0FF         	call	_printf	;wreg free
 15361                           
 15362                           ;../src/w65_main.c: 921:      }
 15363   015736  EFB3  F0AB         	goto	l25505
 15364   01573A                     l25503:
 15365   01573A  0107               	movlb	7	; () banked
 15366   01573C  EE20 F018          	lfsr	2,24
 15367   015740  5107               	movf	see_file@header& (0+255),w,b
 15368   015742  26D9               	addwf	fsr2l,f,c
 15369   015744  5108               	movf	(see_file@header+1)& (0+255),w,b
 15370   015746  22DA               	addwfc	fsr2h,f,c
 15371   015748  50DF               	movf	indf2,w,c
 15372                           
 15373                           ; Switch size 1, requested type "simple"
 15374                           ; Number of cases is 3, Range of values is 0 to 2
 15375                           ; switch strategies available:
 15376                           ; Name         Instructions Cycles
 15377                           ; simple_byte           10     6 (average)
 15378                           ;	Chosen strategy is simple_byte
 15379   01574A  0A00               	xorlw	0	; case 0
 15380   01574C  B4D8               	btfsc	status,2,c
 15381   01574E  EF82  F0AB         	goto	l25497
 15382   015752  0A01               	xorlw	1	; case 1
 15383   015754  B4D8               	btfsc	status,2,c
 15384   015756  EF8B  F0AB         	goto	l25499
 15385   01575A  0A03               	xorlw	3	; case 2
 15386   01575C  B4D8               	btfsc	status,2,c
 15387   01575E  EF94  F0AB         	goto	l25501
 15388   015762  EFB3  F0AB         	goto	l25505
 15389   015766                     l25505:
 15390                           
 15391                           ;../src/w65_main.c: 922:      printf("CSTART : $%04X\r\n",header->cstart_addr);
 15392   015766  0EB5               	movlw	low STR_144
 15393   015768  0105               	movlb	5	; () banked
 15394   01576A  6FAD               	movwf	printf@fmt& (0+255),b
 15395   01576C  0EFD               	movlw	high STR_144
 15396   01576E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15397   015770  0107               	movlb	7	; () banked
 15398   015772  EE20 F001          	lfsr	2,1
 15399   015776  5107               	movf	see_file@header& (0+255),w,b
 15400   015778  26D9               	addwf	fsr2l,f,c
 15401   01577A  5108               	movf	(see_file@header+1)& (0+255),w,b
 15402   01577C  22DA               	addwfc	fsr2h,f,c
 15403   01577E  C4DE F5AF          	movff	postinc2,?_printf+2
 15404   015782  C4DD F5B0          	movff	postdec2,?_printf+3
 15405   015786  ECDA  F0FF         	call	_printf	;wreg free
 15406                           
 15407                           ;../src/w65_main.c: 923:      printf("WSTART : $%04X\r\n",header->wstart_addr);
 15408   01578A  0EC6               	movlw	low STR_145
 15409   01578C  0105               	movlb	5	; () banked
 15410   01578E  6FAD               	movwf	printf@fmt& (0+255),b
 15411   015790  0EFD               	movlw	high STR_145
 15412   015792  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15413   015794  0107               	movlb	7	; () banked
 15414   015796  EE20 F004          	lfsr	2,4
 15415   01579A  5107               	movf	see_file@header& (0+255),w,b
 15416   01579C  26D9               	addwf	fsr2l,f,c
 15417   01579E  5108               	movf	(see_file@header+1)& (0+255),w,b
 15418   0157A0  22DA               	addwfc	fsr2h,f,c
 15419   0157A2  C4DE F5AF          	movff	postinc2,?_printf+2
 15420   0157A6  C4DD F5B0          	movff	postdec2,?_printf+3
 15421   0157AA  ECDA  F0FF         	call	_printf	;wreg free
 15422   0157AE                     
 15423                           ;../src/w65_main.c: 924:      if (header->sw_816) printf("DPR : $%04X PBR : $%02X DBR : 
      +                          $%02X\r\n",header->direct_page, header->op1, header->op2);
 15424   0157AE  0107               	movlb	7	; () banked
 15425   0157B0  EE20 F018          	lfsr	2,24
 15426   0157B4  5107               	movf	see_file@header& (0+255),w,b
 15427   0157B6  26D9               	addwf	fsr2l,f,c
 15428   0157B8  5108               	movf	(see_file@header+1)& (0+255),w,b
 15429   0157BA  22DA               	addwfc	fsr2h,f,c
 15430   0157BC  50DF               	movf	indf2,w,c
 15431   0157BE  B4D8               	btfsc	status,2,c
 15432   0157C0  EFE4  F0AB         	goto	u35471
 15433   0157C4  EFE6  F0AB         	goto	u35470
 15434   0157C8                     u35471:
 15435   0157C8  EF27  F0AC         	goto	l1750
 15436   0157CC                     u35470:
 15437   0157CC                     
 15438                           ; BSR set to: 7
 15439   0157CC  0EB4               	movlw	low STR_159
 15440   0157CE  0105               	movlb	5	; () banked
 15441   0157D0  6FAD               	movwf	printf@fmt& (0+255),b
 15442   0157D2  0EF6               	movlw	high STR_159
 15443   0157D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15444   0157D6  0107               	movlb	7	; () banked
 15445   0157D8  EE20 F006          	lfsr	2,6
 15446   0157DC  5107               	movf	see_file@header& (0+255),w,b
 15447   0157DE  26D9               	addwf	fsr2l,f,c
 15448   0157E0  5108               	movf	(see_file@header+1)& (0+255),w,b
 15449   0157E2  22DA               	addwfc	fsr2h,f,c
 15450   0157E4  C4DE F5AF          	movff	postinc2,?_printf+2
 15451   0157E8  C4DD F5B0          	movff	postdec2,?_printf+3
 15452   0157EC  C707  F4D9         	movff	see_file@header,fsr2l
 15453   0157F0  C708  F4DA         	movff	see_file@header+1,fsr2h
 15454   0157F4  50DF               	movf	indf2,w,c
 15455   0157F6  6F00               	movwf	??_see_file& (0+255),b
 15456   0157F8  5100               	movf	??_see_file& (0+255),w,b
 15457   0157FA  0105               	movlb	5	; () banked
 15458   0157FC  6FB1               	movwf	(?_printf+4)& (0+255),b
 15459   0157FE  6BB2               	clrf	(?_printf+5)& (0+255),b
 15460   015800  0107               	movlb	7	; () banked
 15461   015802  EE20 F003          	lfsr	2,3
 15462   015806  5107               	movf	see_file@header& (0+255),w,b
 15463   015808  26D9               	addwf	fsr2l,f,c
 15464   01580A  5108               	movf	(see_file@header+1)& (0+255),w,b
 15465   01580C  22DA               	addwfc	fsr2h,f,c
 15466   01580E  50DF               	movf	indf2,w,c
 15467   015810  6F01               	movwf	(??_see_file+1)& (0+255),b
 15468   015812  5101               	movf	(??_see_file+1)& (0+255),w,b
 15469   015814  0105               	movlb	5	; () banked
 15470   015816  6FB3               	movwf	(?_printf+6)& (0+255),b
 15471   015818  6BB4               	clrf	(?_printf+7)& (0+255),b
 15472   01581A  ECDA  F0FF         	call	_printf	;wreg free
 15473   01581E  EF27  F0AC         	goto	l25513
 15474   015822                     l25511:
 15475   015822  0107               	movlb	7	; () banked
 15476   015824  EE20 F01F          	lfsr	2,31
 15477   015828  5107               	movf	see_file@header& (0+255),w,b
 15478   01582A  26D9               	addwf	fsr2l,f,c
 15479   01582C  5108               	movf	(see_file@header+1)& (0+255),w,b
 15480   01582E  22DA               	addwfc	fsr2h,f,c
 15481   015830  50DF               	movf	indf2,w,c
 15482                           
 15483                           ; Switch size 1, requested type "simple"
 15484                           ; Number of cases is 3, Range of values is 0 to 2
 15485                           ; switch strategies available:
 15486                           ; Name         Instructions Cycles
 15487                           ; simple_byte           10     6 (average)
 15488                           ;	Chosen strategy is simple_byte
 15489   015832  0A00               	xorlw	0	; case 0
 15490   015834  B4D8               	btfsc	status,2,c
 15491   015836  EF84  F0AA         	goto	l25465
 15492   01583A  0A01               	xorlw	1	; case 1
 15493   01583C  B4D8               	btfsc	status,2,c
 15494   01583E  EF72  F0AB         	goto	l25495
 15495   015842  0A03               	xorlw	3	; case 2
 15496   015844  B4D8               	btfsc	status,2,c
 15497   015846  EF84  F0AA         	goto	l25465
 15498   01584A  EF27  F0AC         	goto	l25513
 15499   01584E                     l1750:
 15500   01584E                     l25513:
 15501                           
 15502                           ;../src/w65_main.c: 928:  printf("\r\n");
 15503   01584E  0E79               	movlw	low (STR_89+20)
 15504   015850  0105               	movlb	5	; () banked
 15505   015852  6FAD               	movwf	printf@fmt& (0+255),b
 15506   015854  0EFB               	movlw	high (STR_89+20)
 15507   015856  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15508   015858  ECDA  F0FF         	call	_printf	;wreg free
 15509                           
 15510                           ;../src/w65_main.c: 929:  f_close(&rom_fl);
 15511   01585C  0ED6               	movlw	low _rom_fl
 15512   01585E  0106               	movlb	6	; () banked
 15513   015860  6F2F               	movwf	f_close@fp& (0+255),b
 15514   015862  0E0F               	movlw	high _rom_fl
 15515   015864  6F30               	movwf	(f_close@fp+1)& (0+255),b
 15516   015866  ECDB  F0FB         	call	_f_close	;wreg free
 15517   01586A  EF11  F0AA         	goto	l25449
 15518   01586E                     l1747:
 15519   01586E  0012               	return		;funcret
 15520   015870                     __end_of_see_file:
 15521                           	callstack 0
 15522                           
 15523 ;; *************** function _mem_dump *****************
 15524 ;; Defined at:
 15525 ;;		line 850 in file "../src/w65_main.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;		None
 15528 ;; Auto vars:     Size  Location     Type
 15529 ;;  addr            4  128[BANK5 ] unsigned long 
 15530 ;;  p               2  126[BANK5 ] PTR unsigned char 
 15531 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 15532 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      enum E23452
 15535 ;; Registers used:
 15536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15543 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15545 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15546 ;;Total ram usage:        6 bytes
 15547 ;; Hardware stack levels used: 1
 15548 ;; Hardware stack levels required when called: 10
 15549 ;; This function calls:
 15550 ;;		_get_hex
 15551 ;;		_read_sram
 15552 ;;		_util_addrdump
 15553 ;; This function is called by:
 15554 ;;		_main
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text5
 15559   01F370                     __ptext5:
 15560                           	callstack 0
 15561   01F370                     _mem_dump:
 15562                           	callstack 116
 15563   01F370                     
 15564                           ;../src/w65_main.c: 852:  uint32_t addr;;../src/w65_main.c: 853:  char *p;;../src/w65_ma
      +                          in.c: 855:  p = arg[0];
 15565   01F370  C79E  F5DE         	movff	_arg,mem_dump@p
 15566   01F374  C79F  F5DF         	movff	_arg+1,mem_dump@p+1
 15567   01F378                     
 15568                           ;../src/w65_main.c: 856:  addr = get_hex( p );
 15569   01F378  C5DE  F504         	movff	mem_dump@p,get_hex@buf
 15570   01F37C  C5DF  F505         	movff	mem_dump@p+1,get_hex@buf+1
 15571   01F380  EC63  F0E3         	call	_get_hex	;wreg free
 15572   01F384  C504  F5E0         	movff	?_get_hex,mem_dump@addr
 15573   01F388  C505  F5E1         	movff	?_get_hex+1,mem_dump@addr+1
 15574   01F38C  C506  F5E2         	movff	?_get_hex+2,mem_dump@addr+2
 15575   01F390  C507  F5E3         	movff	?_get_hex+3,mem_dump@addr+3
 15576   01F394                     
 15577                           ;../src/w65_main.c: 858:  read_sram(addr, (uint8_t *)&tmp_buf[0][0], 128);
 15578   01F394  C5E0  F504         	movff	mem_dump@addr,read_sram@addr
 15579   01F398  C5E1  F505         	movff	mem_dump@addr+1,read_sram@addr+1
 15580   01F39C  C5E2  F506         	movff	mem_dump@addr+2,read_sram@addr+2
 15581   01F3A0  C5E3  F507         	movff	mem_dump@addr+3,read_sram@addr+3
 15582   01F3A4  0EF8               	movlw	low _tmp_buf
 15583   01F3A6  6E08               	movwf	read_sram@buf^(0+1280),c
 15584   01F3A8  0E13               	movlw	high _tmp_buf
 15585   01F3AA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 15586   01F3AC  0E00               	movlw	0
 15587   01F3AE  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 15588   01F3B0  0E80               	movlw	128
 15589   01F3B2  6E0A               	movwf	read_sram@len^(0+1280),c
 15590   01F3B4  EC0C  F0F2         	call	_read_sram	;wreg free
 15591   01F3B8                     
 15592                           ;../src/w65_main.c: 859:  util_addrdump("Mem ", addr, (const void *)&tmp_buf[0][0], 128)
      +                          ;
 15593   01F3B8  0EAD               	movlw	low STR_133
 15594   01F3BA  0105               	movlb	5	; () banked
 15595   01F3BC  6FBD               	movwf	util_addrdump@header& (0+255),b
 15596   01F3BE  0EFF               	movlw	high STR_133
 15597   01F3C0  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 15598   01F3C2  C5E0  F5BF         	movff	mem_dump@addr,util_addrdump@addr_offs
 15599   01F3C6  C5E1  F5C0         	movff	mem_dump@addr+1,util_addrdump@addr_offs+1
 15600   01F3CA  C5E2  F5C1         	movff	mem_dump@addr+2,util_addrdump@addr_offs+2
 15601   01F3CE  C5E3  F5C2         	movff	mem_dump@addr+3,util_addrdump@addr_offs+3
 15602   01F3D2  0EF8               	movlw	low _tmp_buf
 15603   01F3D4  6FC3               	movwf	util_addrdump@addr& (0+255),b
 15604   01F3D6  0E13               	movlw	high _tmp_buf
 15605   01F3D8  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 15606   01F3DA  0E00               	movlw	0
 15607   01F3DC  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 15608   01F3DE  0E80               	movlw	128
 15609   01F3E0  6FC5               	movwf	util_addrdump@size& (0+255),b
 15610   01F3E2  EC4A  F0E1         	call	_util_addrdump	;wreg free
 15611   01F3E6                     
 15612                           ;../src/w65_main.c: 860:  return FR_OK;
 15613   01F3E6  0E00               	movlw	0
 15614   01F3E8  0012               	return		;funcret
 15615   01F3EA                     __end_of_mem_dump:
 15616                           	callstack 0
 15617                           
 15618 ;; *************** function _mon_prog *****************
 15619 ;; Defined at:
 15620 ;;		line 829 in file "../src/w65_main.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;		None
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;  p               2   22[BANK7 ] PTR unsigned char 
 15625 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 15626 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 15627 ;;  sw              1   25[BANK7 ] unsigned char 
 15628 ;;  rs              1   24[BANK7 ] enum E23452
 15629 ;; Return value:  Size  Location     Type
 15630 ;;                  1    wreg      enum E23452
 15631 ;; Registers used:
 15632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15633 ;; Tracked objects:
 15634 ;;		On entry : 0/0
 15635 ;;		On exit  : 0/0
 15636 ;;		Unchanged: 0/0
 15637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 15638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15639 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15641 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15642 ;;Total ram usage:        4 bytes
 15643 ;; Hardware stack levels used: 1
 15644 ;; Hardware stack levels required when called: 25
 15645 ;; This function calls:
 15646 ;;		_drive_cpu
 15647 ;;		_printf
 15648 ;;		_start_cpu
 15649 ;;		_strstr
 15650 ;;		_write_sram
 15651 ;; This function is called by:
 15652 ;;		_main
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text6
 15657   01D73C                     __ptext6:
 15658                           	callstack 0
 15659   01D73C                     _mon_prog:
 15660                           	callstack 101
 15661   01D73C                     
 15662                           ;../src/w65_main.c: 837:  write_sram(0, &cpu_flg, 1);
 15663   01D73C  0E00               	movlw	0
 15664   01D73E  6E04               	movwf	write_sram@addr^(0+1280),c
 15665   01D740  0E00               	movlw	0
 15666   01D742  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15667   01D744  0E00               	movlw	0
 15668   01D746  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15669   01D748  0E00               	movlw	0
 15670   01D74A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15671   01D74C  0EE5               	movlw	low _cpu_flg
 15672   01D74E  6E08               	movwf	write_sram@buf^(0+1280),c
 15673   01D750  0E07               	movlw	high _cpu_flg
 15674   01D752  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15675   01D754  0E00               	movlw	0
 15676   01D756  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15677   01D758  0E01               	movlw	1
 15678   01D75A  6E0A               	movwf	write_sram@len^(0+1280),c
 15679   01D75C  EC9F  F0E8         	call	_write_sram	;wreg free
 15680   01D760                     
 15681                           ;../src/w65_main.c: 838:  sw = 0;
 15682   01D760  0107               	movlb	7	; () banked
 15683   01D762  6B19               	clrf	mon_prog@sw& (0+255),b
 15684                           
 15685                           ;../src/w65_main.c: 839:  write_sram( fh.load_p+8, &sw, 1 );
 15686   01D764  0E08               	movlw	8
 15687   01D766  0108               	movlb	8	; () banked
 15688   01D768  25B2               	addwf	(_fh+16)& (0+255),w,b
 15689   01D76A  6E04               	movwf	write_sram@addr^(0+1280),c
 15690   01D76C  0E00               	movlw	0
 15691   01D76E  21B3               	addwfc	(_fh+17)& (0+255),w,b
 15692   01D770  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15693   01D772  0E00               	movlw	0
 15694   01D774  21B4               	addwfc	(_fh+18)& (0+255),w,b
 15695   01D776  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15696   01D778  0E00               	movlw	0
 15697   01D77A  21B5               	addwfc	(_fh+19)& (0+255),w,b
 15698   01D77C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15699   01D77E  0E19               	movlw	low mon_prog@sw
 15700   01D780  6E08               	movwf	write_sram@buf^(0+1280),c
 15701   01D782  0E07               	movlw	high mon_prog@sw
 15702   01D784  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15703   01D786  0E00               	movlw	0
 15704   01D788  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15705   01D78A  0E01               	movlw	1
 15706   01D78C  6E0A               	movwf	write_sram@len^(0+1280),c
 15707   01D78E  EC9F  F0E8         	call	_write_sram	;wreg free
 15708                           
 15709                           ;../src/w65_main.c: 841:  if ((p = strstr(arg[0], "W" ))) write_sram(0xFFFC, (uint8_t *)
      +                          &fh.wstart_addr, 2);
 15710   01D792  C79E  F50B         	movff	_arg,strstr@h
 15711   01D796  C79F  F50C         	movff	_arg+1,strstr@h+1
 15712   01D79A  0EC9               	movlw	low (STR_65+3)
 15713   01D79C  6E0D               	movwf	strstr@n^(0+1280),c
 15714   01D79E  0EFF               	movlw	high (STR_65+3)
 15715   01D7A0  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 15716   01D7A2  ECCF  F0EE         	call	_strstr	;wreg free
 15717   01D7A6  C50B  F716         	movff	?_strstr,mon_prog@p
 15718   01D7AA  C50C  F717         	movff	?_strstr+1,mon_prog@p+1
 15719   01D7AE  0107               	movlb	7	; () banked
 15720   01D7B0  5116               	movf	mon_prog@p& (0+255),w,b
 15721   01D7B2  1117               	iorwf	(mon_prog@p+1)& (0+255),w,b
 15722   01D7B4  B4D8               	btfsc	status,2,c
 15723   01D7B6  EFDF  F0EB         	goto	u35371
 15724   01D7BA  EFE1  F0EB         	goto	u35370
 15725   01D7BE                     u35371:
 15726   01D7BE  EFF5  F0EB         	goto	l25417
 15727   01D7C2                     u35370:
 15728   01D7C2                     
 15729                           ; BSR set to: 7
 15730   01D7C2  0EFC               	movlw	252
 15731   01D7C4  6E04               	movwf	write_sram@addr^(0+1280),c
 15732   01D7C6  0EFF               	movlw	255
 15733   01D7C8  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15734   01D7CA  0E00               	movlw	0
 15735   01D7CC  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15736   01D7CE  0E00               	movlw	0
 15737   01D7D0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15738   01D7D2  0EA6               	movlw	low (_fh+4)
 15739   01D7D4  6E08               	movwf	write_sram@buf^(0+1280),c
 15740   01D7D6  0E08               	movlw	high (_fh+4)
 15741   01D7D8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15742   01D7DA  0E00               	movlw	0
 15743   01D7DC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15744   01D7DE  0E02               	movlw	2
 15745   01D7E0  6E0A               	movwf	write_sram@len^(0+1280),c
 15746   01D7E2  EC9F  F0E8         	call	_write_sram	;wreg free
 15747   01D7E6  EF07  F0EC         	goto	l25419
 15748   01D7EA                     l25417:
 15749                           
 15750                           ; BSR set to: 7
 15751   01D7EA  0EFC               	movlw	252
 15752   01D7EC  6E04               	movwf	write_sram@addr^(0+1280),c
 15753   01D7EE  0EFF               	movlw	255
 15754   01D7F0  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 15755   01D7F2  0E00               	movlw	0
 15756   01D7F4  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 15757   01D7F6  0E00               	movlw	0
 15758   01D7F8  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 15759   01D7FA  0EA3               	movlw	low (_fh+1)
 15760   01D7FC  6E08               	movwf	write_sram@buf^(0+1280),c
 15761   01D7FE  0E08               	movlw	high (_fh+1)
 15762   01D800  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 15763   01D802  0E00               	movlw	0
 15764   01D804  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 15765   01D806  0E02               	movlw	2
 15766   01D808  6E0A               	movwf	write_sram@len^(0+1280),c
 15767   01D80A  EC9F  F0E8         	call	_write_sram	;wreg free
 15768   01D80E                     l25419:
 15769                           
 15770                           ;../src/w65_main.c: 844:  start_cpu();
 15771   01D80E  ECF8  F0FE         	call	_start_cpu	;wreg free
 15772   01D812                     
 15773                           ;../src/w65_main.c: 845:  rs = drive_cpu();
 15774   01D812  ECA0  F0FE         	call	_drive_cpu	;wreg free
 15775   01D816  0107               	movlb	7	; () banked
 15776   01D818  6F18               	movwf	mon_prog@rs& (0+255),b
 15777   01D81A                     
 15778                           ; BSR set to: 7
 15779                           ;../src/w65_main.c: 846:  printf("\r\n");
 15780   01D81A  0E79               	movlw	low (STR_89+20)
 15781   01D81C  0105               	movlb	5	; () banked
 15782   01D81E  6FAD               	movwf	printf@fmt& (0+255),b
 15783   01D820  0EFB               	movlw	high (STR_89+20)
 15784   01D822  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15785   01D824  ECDA  F0FF         	call	_printf	;wreg free
 15786   01D828                     
 15787                           ;../src/w65_main.c: 847:  return rs;
 15788   01D828  0107               	movlb	7	; () banked
 15789   01D82A  5118               	movf	mon_prog@rs& (0+255),w,b
 15790   01D82C                     
 15791                           ; BSR set to: 7
 15792   01D82C  0012               	return		;funcret
 15793   01D82E                     __end_of_mon_prog:
 15794                           	callstack 0
 15795                           
 15796 ;; *************** function _print_reg *****************
 15797 ;; Defined at:
 15798 ;;		line 738 in file "../src/w65_main.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  reg_816         2  100[BANK5 ] PTR struct .
 15803 ;;		 -> tmp_buf(512), 
 15804 ;;  reg_02          2   98[BANK5 ] PTR struct .
 15805 ;;		 -> tmp_buf(512), 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      enum E23452
 15808 ;; Registers used:
 15809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15816 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15817 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15818 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 15819 ;;Total ram usage:        9 bytes
 15820 ;; Hardware stack levels used: 1
 15821 ;; Hardware stack levels required when called: 9
 15822 ;; This function calls:
 15823 ;;		_printf
 15824 ;;		_read_sram
 15825 ;; This function is called by:
 15826 ;;		_main
 15827 ;; This function uses a non-reentrant model
 15828 ;;
 15829                           
 15830                           	psect	text7
 15831   01AFB8                     __ptext7:
 15832                           	callstack 0
 15833   01AFB8                     _print_reg:
 15834                           	callstack 117
 15835   01AFB8                     
 15836                           ;../src/w65_main.c: 739:  reg816 *reg_816;;../src/w65_main.c: 740:  reg02 *reg_02;;../sr
      +                          c/w65_main.c: 742:  read_sram((uint32_t)fh.reg_tblp, &tmp_buf[0][0], (unsigned int)fh.re
      +                          g_tsize);
 15837   01AFB8  C8BC  F504         	movff	_fh+26,read_sram@addr
 15838   01AFBC  C8BD  F505         	movff	_fh+27,read_sram@addr+1
 15839   01AFC0  6A06               	clrf	(read_sram@addr+2)^(0+1280),c
 15840   01AFC2  6A07               	clrf	(read_sram@addr+3)^(0+1280),c
 15841   01AFC4  0EF8               	movlw	low _tmp_buf
 15842   01AFC6  6E08               	movwf	read_sram@buf^(0+1280),c
 15843   01AFC8  0E13               	movlw	high _tmp_buf
 15844   01AFCA  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 15845   01AFCC  C8BE  F50A         	movff	_fh+28,read_sram@len
 15846   01AFD0  C8BF  F50B         	movff	_fh+29,read_sram@len+1
 15847   01AFD4  EC0C  F0F2         	call	_read_sram	;wreg free
 15848   01AFD8                     
 15849                           ;../src/w65_main.c: 744:  if (fh.sw_816) {
 15850   01AFD8  0108               	movlb	8	; () banked
 15851   01AFDA  51BA               	movf	(_fh+24)& (0+255),w,b
 15852   01AFDC  B4D8               	btfsc	status,2,c
 15853   01AFDE  EFF3  F0D7         	goto	u35331
 15854   01AFE2  EFF5  F0D7         	goto	u35330
 15855   01AFE6                     u35331:
 15856   01AFE6  EF64  F0D8         	goto	l25343
 15857   01AFEA                     u35330:
 15858   01AFEA                     
 15859                           ; BSR set to: 8
 15860                           ;../src/w65_main.c: 745:   reg_816 = (reg816 *)&tmp_buf[0][0];
 15861   01AFEA  0EF8               	movlw	low _tmp_buf
 15862   01AFEC  0105               	movlb	5	; () banked
 15863   01AFEE  6FC4               	movwf	print_reg@reg_816& (0+255),b
 15864   01AFF0  0E13               	movlw	high _tmp_buf
 15865   01AFF2  6FC5               	movwf	(print_reg@reg_816+1)& (0+255),b
 15866   01AFF4                     
 15867                           ; BSR set to: 5
 15868                           ;../src/w65_main.c: 746:   printf("A=$%04X X=$%04X Y=$%04X SP=$%04X PC=$%04X PSR=$%02X\r
      +                          \n",
 15869   01AFF4  0E8E               	movlw	low STR_112
 15870   01AFF6  6FAD               	movwf	printf@fmt& (0+255),b
 15871   01AFF8  0EF2               	movlw	high STR_112
 15872   01AFFA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15873   01AFFC  C5C4  F4D9         	movff	print_reg@reg_816,fsr2l
 15874   01B000  C5C5  F4DA         	movff	print_reg@reg_816+1,fsr2h
 15875   01B004  C4DE F5AF          	movff	postinc2,?_printf+2
 15876   01B008  C4DD F5B0          	movff	postdec2,?_printf+3
 15877   01B00C  EE20 F002          	lfsr	2,2
 15878   01B010  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15879   01B012  26D9               	addwf	fsr2l,f,c
 15880   01B014  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15881   01B016  22DA               	addwfc	fsr2h,f,c
 15882   01B018  C4DE F5B1          	movff	postinc2,?_printf+4
 15883   01B01C  C4DD F5B2          	movff	postdec2,?_printf+5
 15884   01B020  EE20 F004          	lfsr	2,4
 15885   01B024  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15886   01B026  26D9               	addwf	fsr2l,f,c
 15887   01B028  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15888   01B02A  22DA               	addwfc	fsr2h,f,c
 15889   01B02C  C4DE F5B3          	movff	postinc2,?_printf+6
 15890   01B030  C4DD F5B4          	movff	postdec2,?_printf+7
 15891   01B034  EE20 F006          	lfsr	2,6
 15892   01B038  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15893   01B03A  26D9               	addwf	fsr2l,f,c
 15894   01B03C  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15895   01B03E  22DA               	addwfc	fsr2h,f,c
 15896   01B040  C4DE F5B5          	movff	postinc2,?_printf+8
 15897   01B044  C4DD F5B6          	movff	postdec2,?_printf+9
 15898   01B048  EE20 F008          	lfsr	2,8
 15899   01B04C  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15900   01B04E  26D9               	addwf	fsr2l,f,c
 15901   01B050  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15902   01B052  22DA               	addwfc	fsr2h,f,c
 15903   01B054  C4DE F5B7          	movff	postinc2,?_printf+10
 15904   01B058  C4DD F5B8          	movff	postdec2,?_printf+11
 15905   01B05C  EE20 F00A          	lfsr	2,10
 15906   01B060  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15907   01B062  26D9               	addwf	fsr2l,f,c
 15908   01B064  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15909   01B066  22DA               	addwfc	fsr2h,f,c
 15910   01B068  50DF               	movf	indf2,w,c
 15911   01B06A  6FBD               	movwf	??_print_reg& (0+255),b
 15912   01B06C  51BD               	movf	??_print_reg& (0+255),w,b
 15913   01B06E  6FB9               	movwf	(?_printf+12)& (0+255),b
 15914   01B070  6BBA               	clrf	(?_printf+13)& (0+255),b
 15915   01B072  ECDA  F0FF         	call	_printf	;wreg free
 15916   01B076                     
 15917                           ;../src/w65_main.c: 748:   printf("PBR=$%02X DBR=$%02X DPR=$%04X\r\n",reg_816->REGPB, re
      +                          g_816->REGDB, reg_816->REGDP);
 15918   01B076  0E57               	movlw	low STR_113
 15919   01B078  0105               	movlb	5	; () banked
 15920   01B07A  6FAD               	movwf	printf@fmt& (0+255),b
 15921   01B07C  0EF8               	movlw	high STR_113
 15922   01B07E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15923   01B080  EE20 F00B          	lfsr	2,11
 15924   01B084  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15925   01B086  26D9               	addwf	fsr2l,f,c
 15926   01B088  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15927   01B08A  22DA               	addwfc	fsr2h,f,c
 15928   01B08C  50DF               	movf	indf2,w,c
 15929   01B08E  6FBD               	movwf	??_print_reg& (0+255),b
 15930   01B090  51BD               	movf	??_print_reg& (0+255),w,b
 15931   01B092  6FAF               	movwf	(?_printf+2)& (0+255),b
 15932   01B094  6BB0               	clrf	(?_printf+3)& (0+255),b
 15933   01B096  EE20 F00C          	lfsr	2,12
 15934   01B09A  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15935   01B09C  26D9               	addwf	fsr2l,f,c
 15936   01B09E  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15937   01B0A0  22DA               	addwfc	fsr2h,f,c
 15938   01B0A2  50DF               	movf	indf2,w,c
 15939   01B0A4  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 15940   01B0A6  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 15941   01B0A8  6FB1               	movwf	(?_printf+4)& (0+255),b
 15942   01B0AA  6BB2               	clrf	(?_printf+5)& (0+255),b
 15943   01B0AC  EE20 F00D          	lfsr	2,13
 15944   01B0B0  51C4               	movf	print_reg@reg_816& (0+255),w,b
 15945   01B0B2  26D9               	addwf	fsr2l,f,c
 15946   01B0B4  51C5               	movf	(print_reg@reg_816+1)& (0+255),w,b
 15947   01B0B6  22DA               	addwfc	fsr2h,f,c
 15948   01B0B8  C4DE F5B3          	movff	postinc2,?_printf+6
 15949   01B0BC  C4DD F5B4          	movff	postdec2,?_printf+7
 15950   01B0C0  ECDA  F0FF         	call	_printf	;wreg free
 15951                           
 15952                           ;../src/w65_main.c: 749:  }
 15953   01B0C4  EFAE  F0D8         	goto	l25347
 15954   01B0C8                     l25343:
 15955                           
 15956                           ; BSR set to: 8
 15957                           ;../src/w65_main.c: 751:   reg_02 = (reg02 *)&tmp_buf[0][0];
 15958   01B0C8  0EF8               	movlw	low _tmp_buf
 15959   01B0CA  0105               	movlb	5	; () banked
 15960   01B0CC  6FC2               	movwf	print_reg@reg_02& (0+255),b
 15961   01B0CE  0E13               	movlw	high _tmp_buf
 15962   01B0D0  6FC3               	movwf	(print_reg@reg_02+1)& (0+255),b
 15963   01B0D2                     
 15964                           ; BSR set to: 5
 15965                           ;../src/w65_main.c: 752:   printf("A=$%02X X=$%02X Y=$%02X SP=$01%02X PC=$%04X PSR=$%02X
      +                          \r\n",
 15966   01B0D2  0E1F               	movlw	low STR_114
 15967   01B0D4  6FAD               	movwf	printf@fmt& (0+255),b
 15968   01B0D6  0EF2               	movlw	high STR_114
 15969   01B0D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 15970   01B0DA  C5C2  F4D9         	movff	print_reg@reg_02,fsr2l
 15971   01B0DE  C5C3  F4DA         	movff	print_reg@reg_02+1,fsr2h
 15972   01B0E2  50DF               	movf	indf2,w,c
 15973   01B0E4  6FBD               	movwf	??_print_reg& (0+255),b
 15974   01B0E6  51BD               	movf	??_print_reg& (0+255),w,b
 15975   01B0E8  6FAF               	movwf	(?_printf+2)& (0+255),b
 15976   01B0EA  6BB0               	clrf	(?_printf+3)& (0+255),b
 15977   01B0EC  EE20 F001          	lfsr	2,1
 15978   01B0F0  51C2               	movf	print_reg@reg_02& (0+255),w,b
 15979   01B0F2  26D9               	addwf	fsr2l,f,c
 15980   01B0F4  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 15981   01B0F6  22DA               	addwfc	fsr2h,f,c
 15982   01B0F8  50DF               	movf	indf2,w,c
 15983   01B0FA  6FBE               	movwf	(??_print_reg+1)& (0+255),b
 15984   01B0FC  51BE               	movf	(??_print_reg+1)& (0+255),w,b
 15985   01B0FE  6FB1               	movwf	(?_printf+4)& (0+255),b
 15986   01B100  6BB2               	clrf	(?_printf+5)& (0+255),b
 15987   01B102  EE20 F002          	lfsr	2,2
 15988   01B106  51C2               	movf	print_reg@reg_02& (0+255),w,b
 15989   01B108  26D9               	addwf	fsr2l,f,c
 15990   01B10A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 15991   01B10C  22DA               	addwfc	fsr2h,f,c
 15992   01B10E  50DF               	movf	indf2,w,c
 15993   01B110  6FBF               	movwf	(??_print_reg+2)& (0+255),b
 15994   01B112  51BF               	movf	(??_print_reg+2)& (0+255),w,b
 15995   01B114  6FB3               	movwf	(?_printf+6)& (0+255),b
 15996   01B116  6BB4               	clrf	(?_printf+7)& (0+255),b
 15997   01B118  EE20 F003          	lfsr	2,3
 15998   01B11C  51C2               	movf	print_reg@reg_02& (0+255),w,b
 15999   01B11E  26D9               	addwf	fsr2l,f,c
 16000   01B120  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 16001   01B122  22DA               	addwfc	fsr2h,f,c
 16002   01B124  50DF               	movf	indf2,w,c
 16003   01B126  6FC0               	movwf	(??_print_reg+3)& (0+255),b
 16004   01B128  51C0               	movf	(??_print_reg+3)& (0+255),w,b
 16005   01B12A  6FB5               	movwf	(?_printf+8)& (0+255),b
 16006   01B12C  6BB6               	clrf	(?_printf+9)& (0+255),b
 16007   01B12E  EE20 F004          	lfsr	2,4
 16008   01B132  51C2               	movf	print_reg@reg_02& (0+255),w,b
 16009   01B134  26D9               	addwf	fsr2l,f,c
 16010   01B136  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 16011   01B138  22DA               	addwfc	fsr2h,f,c
 16012   01B13A  C4DE F5B7          	movff	postinc2,?_printf+10
 16013   01B13E  C4DD F5B8          	movff	postdec2,?_printf+11
 16014   01B142  EE20 F006          	lfsr	2,6
 16015   01B146  51C2               	movf	print_reg@reg_02& (0+255),w,b
 16016   01B148  26D9               	addwf	fsr2l,f,c
 16017   01B14A  51C3               	movf	(print_reg@reg_02+1)& (0+255),w,b
 16018   01B14C  22DA               	addwfc	fsr2h,f,c
 16019   01B14E  50DF               	movf	indf2,w,c
 16020   01B150  6FC1               	movwf	(??_print_reg+4)& (0+255),b
 16021   01B152  51C1               	movf	(??_print_reg+4)& (0+255),w,b
 16022   01B154  6FB9               	movwf	(?_printf+12)& (0+255),b
 16023   01B156  6BBA               	clrf	(?_printf+13)& (0+255),b
 16024   01B158  ECDA  F0FF         	call	_printf	;wreg free
 16025   01B15C                     l25347:
 16026                           
 16027                           ;../src/w65_main.c: 755:  return FR_OK;
 16028   01B15C  0E00               	movlw	0
 16029   01B15E  0012               	return		;funcret
 16030   01B160                     __end_of_print_reg:
 16031                           	callstack 0
 16032                           
 16033 ;; *************** function _return_cpu *****************
 16034 ;; Defined at:
 16035 ;;		line 727 in file "../src/w65_main.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;		None
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;  rs              1   22[BANK7 ] enum E23452
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  1    wreg      enum E23452
 16042 ;; Registers used:
 16043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16050 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16052 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16053 ;;Total ram usage:        1 bytes
 16054 ;; Hardware stack levels used: 1
 16055 ;; Hardware stack levels required when called: 25
 16056 ;; This function calls:
 16057 ;;		_continue_action
 16058 ;;		_drive_cpu
 16059 ;; This function is called by:
 16060 ;;		_main
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           	psect	text8
 16065   000236                     __ptext8:
 16066                           	callstack 0
 16067   000236                     _return_cpu:
 16068                           	callstack 101
 16069   000236                     
 16070                           ;../src/w65_main.c: 729:  FRESULT rs;;../src/w65_main.c: 731:  continue_action();
 16071   000236  EC96  F0FD         	call	_continue_action	;wreg free
 16072   00023A                     
 16073                           ;../src/w65_main.c: 732:  rs = drive_cpu();
 16074   00023A  ECA0  F0FE         	call	_drive_cpu	;wreg free
 16075   00023E  0107               	movlb	7	; () banked
 16076   000240  6F16               	movwf	return_cpu@rs& (0+255),b
 16077   000242                     
 16078                           ; BSR set to: 7
 16079                           ;../src/w65_main.c: 733:  return rs;
 16080   000242  5116               	movf	return_cpu@rs& (0+255),w,b
 16081   000244                     
 16082                           ; BSR set to: 7
 16083   000244  0012               	return		;funcret
 16084   000246                     __end_of_return_cpu:
 16085                           	callstack 0
 16086                           
 16087 ;; *************** function _restart_prog *****************
 16088 ;; Defined at:
 16089 ;;		line 811 in file "../src/w65_main.c"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;		None
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;  rs              1   22[BANK7 ] enum E23452
 16094 ;; Return value:  Size  Location     Type
 16095 ;;                  1    wreg      enum E23452
 16096 ;; Registers used:
 16097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16104 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16106 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16107 ;;Total ram usage:        1 bytes
 16108 ;; Hardware stack levels used: 1
 16109 ;; Hardware stack levels required when called: 25
 16110 ;; This function calls:
 16111 ;;		_drive_cpu
 16112 ;;		_start_cpu
 16113 ;;		_write_sram
 16114 ;; This function is called by:
 16115 ;;		_main
 16116 ;; This function uses a non-reentrant model
 16117 ;;
 16118                           
 16119                           	psect	text9
 16120   01E9AC                     __ptext9:
 16121                           	callstack 0
 16122   01E9AC                     _restart_prog:
 16123                           	callstack 101
 16124   01E9AC                     
 16125                           ;../src/w65_main.c: 812:  FRESULT rs;;../src/w65_main.c: 814:  rs = FR_NO_FILE;
 16126   01E9AC  0E04               	movlw	4
 16127   01E9AE  0107               	movlb	7	; () banked
 16128   01E9B0  6F16               	movwf	restart_prog@rs& (0+255),b
 16129   01E9B2                     
 16130                           ; BSR set to: 7
 16131                           ;../src/w65_main.c: 815:  if ( binv.sw ==1 ) {
 16132   01E9B2  0108               	movlb	8	; () banked
 16133   01E9B4  0578               	decf	_binv& (0+255),w,b
 16134   01E9B6  A4D8               	btfss	status,2,c
 16135   01E9B8  EFE0  F0F4         	goto	u35361
 16136   01E9BC  EFE2  F0F4         	goto	u35360
 16137   01E9C0                     u35361:
 16138   01E9C0  EF27  F0F5         	goto	l25405
 16139   01E9C4                     u35360:
 16140   01E9C4                     
 16141                           ; BSR set to: 8
 16142                           ;../src/w65_main.c: 817:   write_sram(0, &cpu_flg, 1);
 16143   01E9C4  0E00               	movlw	0
 16144   01E9C6  6E04               	movwf	write_sram@addr^(0+1280),c
 16145   01E9C8  0E00               	movlw	0
 16146   01E9CA  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 16147   01E9CC  0E00               	movlw	0
 16148   01E9CE  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 16149   01E9D0  0E00               	movlw	0
 16150   01E9D2  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 16151   01E9D4  0EE5               	movlw	low _cpu_flg
 16152   01E9D6  6E08               	movwf	write_sram@buf^(0+1280),c
 16153   01E9D8  0E07               	movlw	high _cpu_flg
 16154   01E9DA  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 16155   01E9DC  0E00               	movlw	0
 16156   01E9DE  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 16157   01E9E0  0E01               	movlw	1
 16158   01E9E2  6E0A               	movwf	write_sram@len^(0+1280),c
 16159   01E9E4  EC9F  F0E8         	call	_write_sram	;wreg free
 16160   01E9E8                     
 16161                           ;../src/w65_main.c: 819:   binv.addr = binv.caddr;
 16162   01E9E8  C87F  F879         	movff	_binv+7,_binv+1
 16163   01E9EC  C880  F87A         	movff	_binv+8,_binv+2
 16164                           
 16165                           ;../src/w65_main.c: 820:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 16166   01E9F0  0E08               	movlw	8
 16167   01E9F2  0108               	movlb	8	; () banked
 16168   01E9F4  25B2               	addwf	(_fh+16)& (0+255),w,b
 16169   01E9F6  6E04               	movwf	write_sram@addr^(0+1280),c
 16170   01E9F8  0E00               	movlw	0
 16171   01E9FA  21B3               	addwfc	(_fh+17)& (0+255),w,b
 16172   01E9FC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 16173   01E9FE  0E00               	movlw	0
 16174   01EA00  21B4               	addwfc	(_fh+18)& (0+255),w,b
 16175   01EA02  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 16176   01EA04  0E00               	movlw	0
 16177   01EA06  21B5               	addwfc	(_fh+19)& (0+255),w,b
 16178   01EA08  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 16179   01EA0A  0E78               	movlw	low _binv
 16180   01EA0C  6E08               	movwf	write_sram@buf^(0+1280),c
 16181   01EA0E  0E08               	movlw	high _binv
 16182   01EA10  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 16183   01EA12  0E00               	movlw	0
 16184   01EA14  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 16185   01EA16  0E07               	movlw	7
 16186   01EA18  6E0A               	movwf	write_sram@len^(0+1280),c
 16187   01EA1A  EC9F  F0E8         	call	_write_sram	;wreg free
 16188                           
 16189                           ;../src/w65_main.c: 822:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 16190   01EA1E  0EFC               	movlw	252
 16191   01EA20  6E04               	movwf	write_sram@addr^(0+1280),c
 16192   01EA22  0EFF               	movlw	255
 16193   01EA24  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 16194   01EA26  0E00               	movlw	0
 16195   01EA28  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 16196   01EA2A  0E00               	movlw	0
 16197   01EA2C  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 16198   01EA2E  0EA3               	movlw	low (_fh+1)
 16199   01EA30  6E08               	movwf	write_sram@buf^(0+1280),c
 16200   01EA32  0E08               	movlw	high (_fh+1)
 16201   01EA34  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 16202   01EA36  0E00               	movlw	0
 16203   01EA38  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 16204   01EA3A  0E02               	movlw	2
 16205   01EA3C  6E0A               	movwf	write_sram@len^(0+1280),c
 16206   01EA3E  EC9F  F0E8         	call	_write_sram	;wreg free
 16207   01EA42                     
 16208                           ;../src/w65_main.c: 823:   start_cpu();
 16209   01EA42  ECF8  F0FE         	call	_start_cpu	;wreg free
 16210   01EA46                     
 16211                           ;../src/w65_main.c: 824:   rs = drive_cpu();
 16212   01EA46  ECA0  F0FE         	call	_drive_cpu	;wreg free
 16213   01EA4A  0107               	movlb	7	; () banked
 16214   01EA4C  6F16               	movwf	restart_prog@rs& (0+255),b
 16215   01EA4E                     l25405:
 16216                           
 16217                           ;../src/w65_main.c: 826:  return rs;
 16218   01EA4E  0107               	movlb	7	; () banked
 16219   01EA50  5116               	movf	restart_prog@rs& (0+255),w,b
 16220   01EA52                     
 16221                           ; BSR set to: 7
 16222   01EA52  0012               	return		;funcret
 16223   01EA54                     __end_of_restart_prog:
 16224                           	callstack 0
 16225                           
 16226 ;; *************** function _load_file *****************
 16227 ;; Defined at:
 16228 ;;		line 776 in file "../src/w65_main.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  p               2   21[BANK7 ] PTR unsigned char 
 16233 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 16234 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 16235 ;; Return value:  Size  Location     Type
 16236 ;;                  1    wreg      enum E23452
 16237 ;; Registers used:
 16238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16239 ;; Tracked objects:
 16240 ;;		On entry : 0/0
 16241 ;;		On exit  : 0/0
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16245 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16247 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16248 ;;Total ram usage:        2 bytes
 16249 ;; Hardware stack levels used: 1
 16250 ;; Hardware stack levels required when called: 21
 16251 ;; This function calls:
 16252 ;;		_get_hex
 16253 ;;		_load_program
 16254 ;;		_strstr
 16255 ;; This function is called by:
 16256 ;;		_main
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           	psect	text10
 16261   01ED78                     __ptext10:
 16262                           	callstack 0
 16263   01ED78                     _load_file:
 16264                           	callstack 105
 16265   01ED78                     
 16266                           ;../src/w65_main.c: 777:  char *p;;../src/w65_main.c: 779:  load_flg = 1;
 16267   01ED78  0E01               	movlw	1
 16268   01ED7A  0107               	movlb	7	; () banked
 16269   01ED7C  6FC9               	movwf	_load_flg& (0+255),b
 16270   01ED7E                     
 16271                           ; BSR set to: 7
 16272                           ;../src/w65_main.c: 780:  if ((p = strstr(arg[0], "L=" ))) {
 16273   01ED7E  C79E  F50B         	movff	_arg,strstr@h
 16274   01ED82  C79F  F50C         	movff	_arg+1,strstr@h+1
 16275   01ED86  0EED               	movlw	low STR_128
 16276   01ED88  6E0D               	movwf	strstr@n^(0+1280),c
 16277   01ED8A  0EFF               	movlw	high STR_128
 16278   01ED8C  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 16279   01ED8E  ECCF  F0EE         	call	_strstr	;wreg free
 16280   01ED92  C50B  F715         	movff	?_strstr,load_file@p
 16281   01ED96  C50C  F716         	movff	?_strstr+1,load_file@p+1
 16282   01ED9A  0107               	movlb	7	; () banked
 16283   01ED9C  5115               	movf	load_file@p& (0+255),w,b
 16284   01ED9E  1116               	iorwf	(load_file@p+1)& (0+255),w,b
 16285   01EDA0  B4D8               	btfsc	status,2,c
 16286   01EDA2  EFD5  F0F6         	goto	u35341
 16287   01EDA6  EFD7  F0F6         	goto	u35340
 16288   01EDAA                     u35341:
 16289   01EDAA  EFEF  F0F6         	goto	l25365
 16290   01EDAE                     u35340:
 16291   01EDAE                     
 16292                           ; BSR set to: 7
 16293                           ;../src/w65_main.c: 781:   raw_addr = get_hex((char *)(p+2));
 16294   01EDAE  0E02               	movlw	2
 16295   01EDB0  2515               	addwf	load_file@p& (0+255),w,b
 16296   01EDB2  6E04               	movwf	get_hex@buf^(0+1280),c
 16297   01EDB4  0E00               	movlw	0
 16298   01EDB6  2116               	addwfc	(load_file@p+1)& (0+255),w,b
 16299   01EDB8  6E05               	movwf	(get_hex@buf+1)^(0+1280),c
 16300   01EDBA  EC63  F0E3         	call	_get_hex	;wreg free
 16301   01EDBE  C504  F7AD         	movff	?_get_hex,_raw_addr
 16302   01EDC2  C505  F7AE         	movff	?_get_hex+1,_raw_addr+1
 16303   01EDC6  C506  F7AF         	movff	?_get_hex+2,_raw_addr+2
 16304   01EDCA  C507  F7B0         	movff	?_get_hex+3,_raw_addr+3
 16305   01EDCE                     
 16306                           ;../src/w65_main.c: 782:   load_program((uint8_t *)arg[1]);
 16307   01EDCE  C7A0  F700         	movff	_arg+2,load_program@fname
 16308   01EDD2  C7A1  F701         	movff	_arg+3,load_program@fname+1
 16309   01EDD6  EC86  F0AE         	call	_load_program	;wreg free
 16310                           
 16311                           ;../src/w65_main.c: 783:  }
 16312   01EDDA  EFFD  F0F6         	goto	l25369
 16313   01EDDE                     l25365:
 16314                           
 16315                           ; BSR set to: 7
 16316                           ;../src/w65_main.c: 785:   raw_addr = 0;
 16317   01EDDE  0E00               	movlw	0
 16318   01EDE0  6FAD               	movwf	_raw_addr& (0+255),b
 16319   01EDE2  0E00               	movlw	0
 16320   01EDE4  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 16321   01EDE6  0E00               	movlw	0
 16322   01EDE8  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 16323   01EDEA  0E00               	movlw	0
 16324   01EDEC  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 16325   01EDEE                     
 16326                           ; BSR set to: 7
 16327                           ;../src/w65_main.c: 786:   load_program((uint8_t *)arg[0]);
 16328   01EDEE  C79E  F700         	movff	_arg,load_program@fname
 16329   01EDF2  C79F  F701         	movff	_arg+1,load_program@fname+1
 16330   01EDF6  EC86  F0AE         	call	_load_program	;wreg free
 16331   01EDFA                     l25369:
 16332                           
 16333                           ;../src/w65_main.c: 788:  load_flg = 0;
 16334   01EDFA  0107               	movlb	7	; () banked
 16335   01EDFC  6BC9               	clrf	_load_flg& (0+255),b
 16336   01EDFE                     
 16337                           ; BSR set to: 7
 16338                           ;../src/w65_main.c: 789:  raw_addr = 0;
 16339   01EDFE  0E00               	movlw	0
 16340   01EE00  6FAD               	movwf	_raw_addr& (0+255),b
 16341   01EE02  0E00               	movlw	0
 16342   01EE04  6FAE               	movwf	(_raw_addr+1)& (0+255),b
 16343   01EE06  0E00               	movlw	0
 16344   01EE08  6FAF               	movwf	(_raw_addr+2)& (0+255),b
 16345   01EE0A  0E00               	movlw	0
 16346   01EE0C  6FB0               	movwf	(_raw_addr+3)& (0+255),b
 16347   01EE0E                     
 16348                           ; BSR set to: 7
 16349                           ;../src/w65_main.c: 790:  return FR_OK;
 16350   01EE0E  0E00               	movlw	0
 16351   01EE10                     
 16352                           ; BSR set to: 7
 16353   01EE10  0012               	return		;funcret
 16354   01EE12                     __end_of_load_file:
 16355                           	callstack 0
 16356                           
 16357 ;; *************** function _change_directory *****************
 16358 ;; Defined at:
 16359 ;;		line 736 in file "../src/w65_main.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;		None
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;		None
 16364 ;; Return value:  Size  Location     Type
 16365 ;;                  1    wreg      enum E23452
 16366 ;; Registers used:
 16367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16368 ;; Tracked objects:
 16369 ;;		On entry : 0/0
 16370 ;;		On exit  : 0/0
 16371 ;;		Unchanged: 0/0
 16372 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16377 ;;Total ram usage:        0 bytes
 16378 ;; Hardware stack levels used: 1
 16379 ;; Hardware stack levels required when called: 20
 16380 ;; This function calls:
 16381 ;;		_f_chdir
 16382 ;; This function is called by:
 16383 ;;		_main
 16384 ;; This function uses a non-reentrant model
 16385 ;;
 16386                           
 16387                           	psect	text11
 16388   000246                     __ptext11:
 16389                           	callstack 0
 16390   000246                     _change_directory:
 16391                           	callstack 106
 16392   000246  C79E  F6AF         	movff	_arg,f_chdir@path
 16393   00024A  C79F  F6B0         	movff	_arg+1,f_chdir@path+1
 16394   00024E  EC17  F0EC         	call	_f_chdir	;wreg free
 16395   000252  0012               	return		;funcret
 16396   000254                     __end_of_change_directory:
 16397                           	callstack 0
 16398                           
 16399 ;; *************** function _scan_files1 *****************
 16400 ;; Defined at:
 16401 ;;		line 542 in file "../src/w65_main.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;		None
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  dir            40  105[BANK7 ] struct .
 16406 ;;  fno            22   83[BANK7 ] struct .
 16407 ;;  path            2   81[BANK7 ] PTR unsigned char 
 16408 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 16409 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 16410 ;;  p               2   78[BANK7 ] PTR unsigned char 
 16411 ;;		 -> tmp_buf(512), 
 16412 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 16413 ;;		 -> fno$fname(13), f_getcwd@fno(22), 
 16414 ;;  res             1   80[BANK7 ] enum E23452
 16415 ;;  fcnt            1   77[BANK7 ] unsigned char 
 16416 ;; Return value:  Size  Location     Type
 16417 ;;                  1    wreg      enum E23452
 16418 ;; Registers used:
 16419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16420 ;; Tracked objects:
 16421 ;;		On entry : 0/0
 16422 ;;		On exit  : 0/0
 16423 ;;		Unchanged: 0/0
 16424 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16426 ;;      Locals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16428 ;;      Totals:         0       0       0      70       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16429 ;;Total ram usage:       70 bytes
 16430 ;; Hardware stack levels used: 1
 16431 ;; Hardware stack levels required when called: 20
 16432 ;; This function calls:
 16433 ;;		_f_close
 16434 ;;		_f_closedir
 16435 ;;		_f_getcwd
 16436 ;;		_f_open
 16437 ;;		_f_opendir
 16438 ;;		_f_readdir
 16439 ;;		_printf
 16440 ;; This function is called by:
 16441 ;;		_main
 16442 ;; This function uses a non-reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text12
 16446   019606                     __ptext12:
 16447                           	callstack 0
 16448   019606                     _scan_files1:
 16449                           	callstack 106
 16450   019606                     
 16451                           ;../src/w65_main.c: 543:  FRESULT res;;../src/w65_main.c: 544:  FILINFO fno;;../src/w65_
      +                          main.c: 545:  DIR dir;;../src/w65_main.c: 546:  uint8_t fcnt;;../src/w65_main.c: 548:  c
      +                          har *fn, *p, *path;;../src/w65_main.c: 550:  path = arg[0];
 16452   019606  C79E  F751         	movff	_arg,scan_files1@path
 16453   01960A  C79F  F752         	movff	_arg+1,scan_files1@path+1
 16454   01960E                     
 16455                           ;../src/w65_main.c: 551:  fcnt = 0;
 16456   01960E  0107               	movlb	7	; () banked
 16457   019610  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 16458   019612                     
 16459                           ; BSR set to: 7
 16460                           ;../src/w65_main.c: 553:  res = f_opendir(&dir, path);
 16461   019612  0E69               	movlw	low scan_files1@dir
 16462   019614  0106               	movlb	6	; () banked
 16463   019616  6FAF               	movwf	f_opendir@dp& (0+255),b
 16464   019618  0E07               	movlw	high scan_files1@dir
 16465   01961A  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 16466   01961C  C751  F6B1         	movff	scan_files1@path,f_opendir@path
 16467   019620  C752  F6B2         	movff	scan_files1@path+1,f_opendir@path+1
 16468   019624  EC14  F0DF         	call	_f_opendir	;wreg free
 16469   019628  0107               	movlb	7	; () banked
 16470   01962A  6F50               	movwf	scan_files1@res& (0+255),b
 16471   01962C                     
 16472                           ; BSR set to: 7
 16473                           ;../src/w65_main.c: 554:  if (res == FR_OK) {
 16474   01962C  5150               	movf	scan_files1@res& (0+255),w,b
 16475   01962E  A4D8               	btfss	status,2,c
 16476   019630  EF1C  F0CB         	goto	u35031
 16477   019634  EF1E  F0CB         	goto	u35030
 16478   019638                     u35031:
 16479   019638  EFF9  F0CB         	goto	l25183
 16480   01963C                     u35030:
 16481   01963C                     
 16482                           ; BSR set to: 7
 16483                           ;../src/w65_main.c: 555:   p = (char *)&tmp_buf[0][0];
 16484   01963C  0EF8               	movlw	low _tmp_buf
 16485   01963E  6F4E               	movwf	scan_files1@p& (0+255),b
 16486   019640  0E13               	movlw	high _tmp_buf
 16487   019642  6F4F               	movwf	(scan_files1@p+1)& (0+255),b
 16488   019644                     
 16489                           ; BSR set to: 7
 16490                           ;../src/w65_main.c: 556:   f_getcwd( p, 256);
 16491   019644  C74E  F6AF         	movff	scan_files1@p,f_getcwd@buff
 16492   019648  C74F  F6B0         	movff	scan_files1@p+1,f_getcwd@buff+1
 16493   01964C  0E01               	movlw	1
 16494   01964E  0106               	movlb	6	; () banked
 16495   019650  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 16496   019652  0E00               	movlw	0
 16497   019654  6FB1               	movwf	f_getcwd@len& (0+255),b
 16498   019656  EC93  F0A7         	call	_f_getcwd	;wreg free
 16499   01965A                     
 16500                           ;../src/w65_main.c: 557:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 16501   01965A  C751  F4F6         	movff	scan_files1@path,tblptrl
 16502   01965E  C752  F4F7         	movff	scan_files1@path+1,tblptrh
 16503   019662  0E00               	movlw	low (__mediumconst shr (0+16))
 16504   019664  6EF8               	movwf	tblptru,c
 16505   019666  0E3F               	movlw	(high __ramtop+-1)
 16506   019668  64F7               	cpfsgt	tblptrh,c
 16507   01966A  D003               	bra	u35047
 16508   01966C  0008               	tblrd		*
 16509   01966E  50F5               	movf	tablat,w,c
 16510   019670  D005               	bra	u35040
 16511   019672                     u35047:
 16512   019672  C4F6 F4E9          	movff	tblptrl,fsr0l
 16513   019676  C4F7 F4EA          	movff	tblptrh,fsr0h
 16514   01967A  50EF               	movf	indf0,w,c
 16515   01967C                     u35040:
 16516   01967C  0900               	iorlw	0
 16517   01967E  A4D8               	btfss	status,2,c
 16518   019680  EF44  F0CB         	goto	u35051
 16519   019684  EF46  F0CB         	goto	u35050
 16520   019688                     u35051:
 16521   019688  EF53  F0CB         	goto	l25145
 16522   01968C                     u35050:
 16523   01968C  0E0C               	movlw	low STR_93
 16524   01968E  0105               	movlb	5	; () banked
 16525   019690  6FAD               	movwf	printf@fmt& (0+255),b
 16526   019692  0EFF               	movlw	high STR_93
 16527   019694  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16528   019696  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 16529   01969A  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 16530   01969E  ECDA  F0FF         	call	_printf	;wreg free
 16531   0196A2  EF7E  F0CB         	goto	l25151
 16532   0196A6                     l25145:
 16533   0196A6  0107               	movlb	7	; () banked
 16534   0196A8  EE20 F001          	lfsr	2,1
 16535   0196AC  514E               	movf	scan_files1@p& (0+255),w,b
 16536   0196AE  26D9               	addwf	fsr2l,f,c
 16537   0196B0  514F               	movf	(scan_files1@p+1)& (0+255),w,b
 16538   0196B2  22DA               	addwfc	fsr2h,f,c
 16539   0196B4  50DF               	movf	indf2,w,c
 16540   0196B6  A4D8               	btfss	status,2,c
 16541   0196B8  EF60  F0CB         	goto	u35061
 16542   0196BC  EF62  F0CB         	goto	u35060
 16543   0196C0                     u35061:
 16544   0196C0  EF6F  F0CB         	goto	l25149
 16545   0196C4                     u35060:
 16546   0196C4                     
 16547                           ; BSR set to: 7
 16548   0196C4  0EEE               	movlw	low STR_94
 16549   0196C6  0105               	movlb	5	; () banked
 16550   0196C8  6FAD               	movwf	printf@fmt& (0+255),b
 16551   0196CA  0EFE               	movlw	high STR_94
 16552   0196CC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16553   0196CE  C751  F5AF         	movff	scan_files1@path,?_printf+2
 16554   0196D2  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 16555   0196D6  ECDA  F0FF         	call	_printf	;wreg free
 16556   0196DA  EF7E  F0CB         	goto	l25151
 16557   0196DE                     l25149:
 16558                           
 16559                           ; BSR set to: 7
 16560   0196DE  0E94               	movlw	low STR_95
 16561   0196E0  0105               	movlb	5	; () banked
 16562   0196E2  6FAD               	movwf	printf@fmt& (0+255),b
 16563   0196E4  0EFE               	movlw	high STR_95
 16564   0196E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16565   0196E8  C74E  F5AF         	movff	scan_files1@p,?_printf+2
 16566   0196EC  C74F  F5B0         	movff	scan_files1@p+1,?_printf+3
 16567   0196F0  C751  F5B1         	movff	scan_files1@path,?_printf+4
 16568   0196F4  C752  F5B2         	movff	scan_files1@path+1,?_printf+5
 16569   0196F8  ECDA  F0FF         	call	_printf	;wreg free
 16570   0196FC                     l25151:
 16571                           
 16572                           ;../src/w65_main.c: 562:    res = f_readdir(&dir, &fno);
 16573   0196FC  0E69               	movlw	low scan_files1@dir
 16574   0196FE  0106               	movlb	6	; () banked
 16575   019700  6F89               	movwf	f_readdir@dp& (0+255),b
 16576   019702  0E07               	movlw	high scan_files1@dir
 16577   019704  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 16578   019706  0E53               	movlw	low scan_files1@fno
 16579   019708  6F8B               	movwf	f_readdir@fno& (0+255),b
 16580   01970A  0E07               	movlw	high scan_files1@fno
 16581   01970C  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 16582   01970E  EC7B  F0ED         	call	_f_readdir	;wreg free
 16583   019712  0107               	movlb	7	; () banked
 16584   019714  6F50               	movwf	scan_files1@res& (0+255),b
 16585   019716                     
 16586                           ; BSR set to: 7
 16587                           ;../src/w65_main.c: 563:    if (res != FR_OK || fno.fname[0] == 0) {
 16588   019716  5150               	movf	scan_files1@res& (0+255),w,b
 16589   019718  A4D8               	btfss	status,2,c
 16590   01971A  EF91  F0CB         	goto	u35071
 16591   01971E  EF93  F0CB         	goto	u35070
 16592   019722                     u35071:
 16593   019722  EF9B  F0CB         	goto	l25157
 16594   019726                     u35070:
 16595   019726                     
 16596                           ; BSR set to: 7
 16597   019726  515C               	movf	(scan_files1@fno+9)& (0+255),w,b
 16598   019728  A4D8               	btfss	status,2,c
 16599   01972A  EF99  F0CB         	goto	u35081
 16600   01972E  EF9B  F0CB         	goto	u35080
 16601   019732                     u35081:
 16602   019732  EFAC  F0CB         	goto	l25161
 16603   019736                     u35080:
 16604   019736                     l25157:
 16605                           
 16606                           ; BSR set to: 7
 16607                           ;../src/w65_main.c: 564:     if ( fcnt ) {
 16608   019736  514D               	movf	scan_files1@fcnt& (0+255),w,b
 16609   019738  B4D8               	btfsc	status,2,c
 16610   01973A  EFA1  F0CB         	goto	u35091
 16611   01973E  EFA3  F0CB         	goto	u35090
 16612   019742                     u35091:
 16613   019742  EFAC  F0CB         	goto	l25161
 16614   019746                     u35090:
 16615   019746                     
 16616                           ; BSR set to: 7
 16617                           ;../src/w65_main.c: 565:      printf("\r\n");
 16618   019746  0E79               	movlw	low (STR_89+20)
 16619   019748  0105               	movlb	5	; () banked
 16620   01974A  6FAD               	movwf	printf@fmt& (0+255),b
 16621   01974C  0EFB               	movlw	high (STR_89+20)
 16622   01974E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16623   019750  ECDA  F0FF         	call	_printf	;wreg free
 16624                           
 16625                           ;../src/w65_main.c: 566:      break;
 16626   019754  EFF0  F0CB         	goto	l25181
 16627   019758                     l25161:
 16628                           
 16629                           ; BSR set to: 7
 16630                           ;../src/w65_main.c: 569:    if (fno.fname[0] == '.') continue;
 16631   019758  0E2E               	movlw	46
 16632   01975A  195C               	xorwf	(scan_files1@fno+9)& (0+255),w,b
 16633   01975C  A4D8               	btfss	status,2,c
 16634   01975E  EFB3  F0CB         	goto	u35101
 16635   019762  EFB5  F0CB         	goto	u35100
 16636   019766                     u35101:
 16637   019766  EFB7  F0CB         	goto	l25165
 16638   01976A                     u35100:
 16639   01976A  EF7E  F0CB         	goto	l25151
 16640   01976E                     l25165:
 16641                           
 16642                           ; BSR set to: 7
 16643                           ;../src/w65_main.c: 570:    fn = fno.fname;
 16644   01976E  0E5C               	movlw	low (scan_files1@fno+9)
 16645   019770  6F4B               	movwf	scan_files1@fn& (0+255),b
 16646   019772  0E07               	movlw	high (scan_files1@fno+9)
 16647   019774  6F4C               	movwf	(scan_files1@fn+1)& (0+255),b
 16648   019776                     
 16649                           ; BSR set to: 7
 16650                           ;../src/w65_main.c: 571:    if (fno.fattrib & 0x10) {
 16651   019776  A95B               	btfss	(scan_files1@fno+8)& (0+255),4,b
 16652   019778  EFC0  F0CB         	goto	u35111
 16653   01977C  EFC2  F0CB         	goto	u35110
 16654   019780                     u35111:
 16655   019780  EFCF  F0CB         	goto	l25171
 16656   019784                     u35110:
 16657   019784                     
 16658                           ; BSR set to: 7
 16659                           ;../src/w65_main.c: 572:     printf("[%12s] ", fn);
 16660   019784  0E40               	movlw	low STR_103
 16661   019786  0105               	movlb	5	; () banked
 16662   019788  6FAD               	movwf	printf@fmt& (0+255),b
 16663   01978A  0EFF               	movlw	high STR_103
 16664   01978C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16665   01978E  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 16666   019792  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 16667   019796  ECDA  F0FF         	call	_printf	;wreg free
 16668                           
 16669                           ;../src/w65_main.c: 573:    }
 16670   01979A  EFDA  F0CB         	goto	l25173
 16671   01979E                     l25171:
 16672                           
 16673                           ; BSR set to: 7
 16674                           ;../src/w65_main.c: 575:     printf(" %12s  ", fn);
 16675   01979E  0E38               	movlw	low STR_104
 16676   0197A0  0105               	movlb	5	; () banked
 16677   0197A2  6FAD               	movwf	printf@fmt& (0+255),b
 16678   0197A4  0EFF               	movlw	high STR_104
 16679   0197A6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16680   0197A8  C74B  F5AF         	movff	scan_files1@fn,?_printf+2
 16681   0197AC  C74C  F5B0         	movff	scan_files1@fn+1,?_printf+3
 16682   0197B0  ECDA  F0FF         	call	_printf	;wreg free
 16683   0197B4                     l25173:
 16684                           
 16685                           ;../src/w65_main.c: 577:    fcnt += 1;
 16686   0197B4  0107               	movlb	7	; () banked
 16687   0197B6  2B4D               	incf	scan_files1@fcnt& (0+255),f,b
 16688   0197B8                     
 16689                           ; BSR set to: 7
 16690                           ;../src/w65_main.c: 578:    if (fcnt == 5 ) {
 16691   0197B8  0E05               	movlw	5
 16692   0197BA  194D               	xorwf	scan_files1@fcnt& (0+255),w,b
 16693   0197BC  A4D8               	btfss	status,2,c
 16694   0197BE  EFE3  F0CB         	goto	u35121
 16695   0197C2  EFE5  F0CB         	goto	u35120
 16696   0197C6                     u35121:
 16697   0197C6  EF7E  F0CB         	goto	l25151
 16698   0197CA                     u35120:
 16699   0197CA                     
 16700                           ; BSR set to: 7
 16701                           ;../src/w65_main.c: 579:     printf("\r\n");
 16702   0197CA  0E79               	movlw	low (STR_89+20)
 16703   0197CC  0105               	movlb	5	; () banked
 16704   0197CE  6FAD               	movwf	printf@fmt& (0+255),b
 16705   0197D0  0EFB               	movlw	high (STR_89+20)
 16706   0197D2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16707   0197D4  ECDA  F0FF         	call	_printf	;wreg free
 16708   0197D8                     
 16709                           ;../src/w65_main.c: 580:     fcnt = 0;
 16710   0197D8  0107               	movlb	7	; () banked
 16711   0197DA  6B4D               	clrf	scan_files1@fcnt& (0+255),b
 16712   0197DC  EF7E  F0CB         	goto	l25151
 16713   0197E0                     l25181:
 16714                           
 16715                           ;../src/w65_main.c: 583:   f_closedir(&dir);
 16716   0197E0  0E69               	movlw	low scan_files1@dir
 16717   0197E2  0105               	movlb	5	; () banked
 16718   0197E4  6FC9               	movwf	f_closedir@dp& (0+255),b
 16719   0197E6  0E07               	movlw	high scan_files1@dir
 16720   0197E8  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 16721   0197EA  ECDC  F0FE         	call	_f_closedir	;wreg free
 16722                           
 16723                           ;../src/w65_main.c: 584:  }
 16724   0197EE  EF37  F0CC         	goto	l25191
 16725   0197F2                     l25183:
 16726                           
 16727                           ; BSR set to: 7
 16728                           ;../src/w65_main.c: 586:   if (res == FR_NO_PATH) {
 16729   0197F2  0E05               	movlw	5
 16730   0197F4  1950               	xorwf	scan_files1@res& (0+255),w,b
 16731   0197F6  A4D8               	btfss	status,2,c
 16732   0197F8  EF00  F0CC         	goto	u35131
 16733   0197FC  EF02  F0CC         	goto	u35130
 16734   019800                     u35131:
 16735   019800  EF37  F0CC         	goto	l25191
 16736   019804                     u35130:
 16737   019804                     
 16738                           ; BSR set to: 7
 16739                           ;../src/w65_main.c: 587:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 16740   019804  0ED6               	movlw	low _rom_fl
 16741   019806  0106               	movlb	6	; () banked
 16742   019808  6FAF               	movwf	f_open@fp& (0+255),b
 16743   01980A  0E0F               	movlw	high _rom_fl
 16744   01980C  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 16745   01980E  C751  F6B1         	movff	scan_files1@path,f_open@path
 16746   019812  C752  F6B2         	movff	scan_files1@path+1,f_open@path+1
 16747   019816  0E01               	movlw	1
 16748   019818  6FB3               	movwf	f_open@mode& (0+255),b
 16749   01981A  ECDB  F092         	call	_f_open	;wreg free
 16750   01981E  0107               	movlb	7	; () banked
 16751   019820  6F50               	movwf	scan_files1@res& (0+255),b
 16752   019822                     
 16753                           ; BSR set to: 7
 16754                           ;../src/w65_main.c: 588:    if ( res == FR_OK ) {
 16755   019822  5150               	movf	scan_files1@res& (0+255),w,b
 16756   019824  A4D8               	btfss	status,2,c
 16757   019826  EF17  F0CC         	goto	u35141
 16758   01982A  EF19  F0CC         	goto	u35140
 16759   01982E                     u35141:
 16760   01982E  EF37  F0CC         	goto	l25191
 16761   019832                     u35140:
 16762   019832                     
 16763                           ; BSR set to: 7
 16764                           ;../src/w65_main.c: 589:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 16765   019832  0E9A               	movlw	low STR_97
 16766   019834  0105               	movlb	5	; () banked
 16767   019836  6FAD               	movwf	printf@fmt& (0+255),b
 16768   019838  0EFC               	movlw	high STR_97
 16769   01983A  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16770   01983C  C751  F5AF         	movff	scan_files1@path,?_printf+2
 16771   019840  C752  F5B0         	movff	scan_files1@path+1,?_printf+3
 16772   019844  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 16773   01984A  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 16774   019850  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 16775   019856  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 16776   01985C  ECDA  F0FF         	call	_printf	;wreg free
 16777                           
 16778                           ;../src/w65_main.c: 590:     f_close( &rom_fl );
 16779   019860  0ED6               	movlw	low _rom_fl
 16780   019862  0106               	movlb	6	; () banked
 16781   019864  6F2F               	movwf	f_close@fp& (0+255),b
 16782   019866  0E0F               	movlw	high _rom_fl
 16783   019868  6F30               	movwf	(f_close@fp+1)& (0+255),b
 16784   01986A  ECDB  F0FB         	call	_f_close	;wreg free
 16785   01986E                     l25191:
 16786                           
 16787                           ;../src/w65_main.c: 594:  return res;
 16788   01986E  0107               	movlb	7	; () banked
 16789   019870  5150               	movf	scan_files1@res& (0+255),w,b
 16790   019872                     
 16791                           ; BSR set to: 7
 16792   019872  0012               	return		;funcret
 16793   019874                     __end_of_scan_files1:
 16794                           	callstack 0
 16795                           
 16796 ;; *************** function _scan_files *****************
 16797 ;; Defined at:
 16798 ;;		line 500 in file "../src/w65_main.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;		None
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;  dir            40  104[BANK7 ] struct .
 16803 ;;  fno            22   82[BANK7 ] struct .
 16804 ;;  path            2   80[BANK7 ] PTR unsigned char 
 16805 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 16806 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 16807 ;;  p               2   77[BANK7 ] PTR unsigned char 
 16808 ;;		 -> tmp_buf(512), 
 16809 ;;  fn              2   75[BANK7 ] PTR unsigned char 
 16810 ;;		 -> fno$fname(13), f_getcwd@fno(22), 
 16811 ;;  res             1   79[BANK7 ] enum E23452
 16812 ;; Return value:  Size  Location     Type
 16813 ;;                  1    wreg      enum E23452
 16814 ;; Registers used:
 16815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16816 ;; Tracked objects:
 16817 ;;		On entry : 0/0
 16818 ;;		On exit  : 0/0
 16819 ;;		Unchanged: 0/0
 16820 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 16821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16822 ;;      Locals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16824 ;;      Totals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 16825 ;;Total ram usage:       69 bytes
 16826 ;; Hardware stack levels used: 1
 16827 ;; Hardware stack levels required when called: 20
 16828 ;; This function calls:
 16829 ;;		_f_close
 16830 ;;		_f_closedir
 16831 ;;		_f_getcwd
 16832 ;;		_f_open
 16833 ;;		_f_opendir
 16834 ;;		_f_readdir
 16835 ;;		_printf
 16836 ;; This function is called by:
 16837 ;;		_main
 16838 ;; This function uses a non-reentrant model
 16839 ;;
 16840                           
 16841                           	psect	text13
 16842   019874                     __ptext13:
 16843                           	callstack 0
 16844   019874                     _scan_files:
 16845                           	callstack 106
 16846   019874                     
 16847                           ;../src/w65_main.c: 501:  FRESULT res;;../src/w65_main.c: 502:  FILINFO fno;;../src/w65_
      +                          main.c: 503:  DIR dir;;../src/w65_main.c: 504:  char *fn, *p, *path;;../src/w65_main.c: 
      +                          506:  path = arg[0];
 16848   019874  C79E  F750         	movff	_arg,scan_files@path
 16849   019878  C79F  F751         	movff	_arg+1,scan_files@path+1
 16850   01987C                     
 16851                           ;../src/w65_main.c: 508:  res = f_opendir(&dir, path);
 16852   01987C  0E68               	movlw	low scan_files@dir
 16853   01987E  0106               	movlb	6	; () banked
 16854   019880  6FAF               	movwf	f_opendir@dp& (0+255),b
 16855   019882  0E07               	movlw	high scan_files@dir
 16856   019884  6FB0               	movwf	(f_opendir@dp+1)& (0+255),b
 16857   019886  C750  F6B1         	movff	scan_files@path,f_opendir@path
 16858   01988A  C751  F6B2         	movff	scan_files@path+1,f_opendir@path+1
 16859   01988E  EC14  F0DF         	call	_f_opendir	;wreg free
 16860   019892  0107               	movlb	7	; () banked
 16861   019894  6F4F               	movwf	scan_files@res& (0+255),b
 16862   019896                     
 16863                           ; BSR set to: 7
 16864                           ;../src/w65_main.c: 509:  if (res == FR_OK) {
 16865   019896  514F               	movf	scan_files@res& (0+255),w,b
 16866   019898  A4D8               	btfss	status,2,c
 16867   01989A  EF51  F0CC         	goto	u34861
 16868   01989E  EF53  F0CC         	goto	u34860
 16869   0198A2                     u34861:
 16870   0198A2  EF13  F0CD         	goto	l25075
 16871   0198A6                     u34860:
 16872   0198A6                     
 16873                           ; BSR set to: 7
 16874                           ;../src/w65_main.c: 510:   p = (char *)&tmp_buf[0][0];
 16875   0198A6  0EF8               	movlw	low _tmp_buf
 16876   0198A8  6F4D               	movwf	scan_files@p& (0+255),b
 16877   0198AA  0E13               	movlw	high _tmp_buf
 16878   0198AC  6F4E               	movwf	(scan_files@p+1)& (0+255),b
 16879   0198AE                     
 16880                           ; BSR set to: 7
 16881                           ;../src/w65_main.c: 511:   f_getcwd( p, 256);
 16882   0198AE  C74D  F6AF         	movff	scan_files@p,f_getcwd@buff
 16883   0198B2  C74E  F6B0         	movff	scan_files@p+1,f_getcwd@buff+1
 16884   0198B6  0E01               	movlw	1
 16885   0198B8  0106               	movlb	6	; () banked
 16886   0198BA  6FB2               	movwf	(f_getcwd@len+1)& (0+255),b
 16887   0198BC  0E00               	movlw	0
 16888   0198BE  6FB1               	movwf	f_getcwd@len& (0+255),b
 16889   0198C0  EC93  F0A7         	call	_f_getcwd	;wreg free
 16890   0198C4                     
 16891                           ;../src/w65_main.c: 512:   if ( *path == '\0' ) printf("< %s >\r\n", p );
 16892   0198C4  C750  F4F6         	movff	scan_files@path,tblptrl
 16893   0198C8  C751  F4F7         	movff	scan_files@path+1,tblptrh
 16894   0198CC  0E00               	movlw	low (__mediumconst shr (0+16))
 16895   0198CE  6EF8               	movwf	tblptru,c
 16896   0198D0  0E3F               	movlw	(high __ramtop+-1)
 16897   0198D2  64F7               	cpfsgt	tblptrh,c
 16898   0198D4  D003               	bra	u34877
 16899   0198D6  0008               	tblrd		*
 16900   0198D8  50F5               	movf	tablat,w,c
 16901   0198DA  D005               	bra	u34870
 16902   0198DC                     u34877:
 16903   0198DC  C4F6 F4E9          	movff	tblptrl,fsr0l
 16904   0198E0  C4F7 F4EA          	movff	tblptrh,fsr0h
 16905   0198E4  50EF               	movf	indf0,w,c
 16906   0198E6                     u34870:
 16907   0198E6  0900               	iorlw	0
 16908   0198E8  A4D8               	btfss	status,2,c
 16909   0198EA  EF79  F0CC         	goto	u34881
 16910   0198EE  EF7B  F0CC         	goto	u34880
 16911   0198F2                     u34881:
 16912   0198F2  EF88  F0CC         	goto	l25049
 16913   0198F6                     u34880:
 16914   0198F6  0E0C               	movlw	low STR_93
 16915   0198F8  0105               	movlb	5	; () banked
 16916   0198FA  6FAD               	movwf	printf@fmt& (0+255),b
 16917   0198FC  0EFF               	movlw	high STR_93
 16918   0198FE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16919   019900  C74D  F5AF         	movff	scan_files@p,?_printf+2
 16920   019904  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 16921   019908  ECDA  F0FF         	call	_printf	;wreg free
 16922   01990C  EFB3  F0CC         	goto	l25055
 16923   019910                     l25049:
 16924   019910  0107               	movlb	7	; () banked
 16925   019912  EE20 F001          	lfsr	2,1
 16926   019916  514D               	movf	scan_files@p& (0+255),w,b
 16927   019918  26D9               	addwf	fsr2l,f,c
 16928   01991A  514E               	movf	(scan_files@p+1)& (0+255),w,b
 16929   01991C  22DA               	addwfc	fsr2h,f,c
 16930   01991E  50DF               	movf	indf2,w,c
 16931   019920  A4D8               	btfss	status,2,c
 16932   019922  EF95  F0CC         	goto	u34891
 16933   019926  EF97  F0CC         	goto	u34890
 16934   01992A                     u34891:
 16935   01992A  EFA4  F0CC         	goto	l25053
 16936   01992E                     u34890:
 16937   01992E                     
 16938                           ; BSR set to: 7
 16939   01992E  0EEE               	movlw	low STR_94
 16940   019930  0105               	movlb	5	; () banked
 16941   019932  6FAD               	movwf	printf@fmt& (0+255),b
 16942   019934  0EFE               	movlw	high STR_94
 16943   019936  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16944   019938  C750  F5AF         	movff	scan_files@path,?_printf+2
 16945   01993C  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 16946   019940  ECDA  F0FF         	call	_printf	;wreg free
 16947   019944  EFB3  F0CC         	goto	l25055
 16948   019948                     l25053:
 16949                           
 16950                           ; BSR set to: 7
 16951   019948  0E94               	movlw	low STR_95
 16952   01994A  0105               	movlb	5	; () banked
 16953   01994C  6FAD               	movwf	printf@fmt& (0+255),b
 16954   01994E  0EFE               	movlw	high STR_95
 16955   019950  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 16956   019952  C74D  F5AF         	movff	scan_files@p,?_printf+2
 16957   019956  C74E  F5B0         	movff	scan_files@p+1,?_printf+3
 16958   01995A  C750  F5B1         	movff	scan_files@path,?_printf+4
 16959   01995E  C751  F5B2         	movff	scan_files@path+1,?_printf+5
 16960   019962  ECDA  F0FF         	call	_printf	;wreg free
 16961   019966                     l25055:
 16962                           
 16963                           ;../src/w65_main.c: 517:    res = f_readdir(&dir, &fno);
 16964   019966  0E68               	movlw	low scan_files@dir
 16965   019968  0106               	movlb	6	; () banked
 16966   01996A  6F89               	movwf	f_readdir@dp& (0+255),b
 16967   01996C  0E07               	movlw	high scan_files@dir
 16968   01996E  6F8A               	movwf	(f_readdir@dp+1)& (0+255),b
 16969   019970  0E52               	movlw	low scan_files@fno
 16970   019972  6F8B               	movwf	f_readdir@fno& (0+255),b
 16971   019974  0E07               	movlw	high scan_files@fno
 16972   019976  6F8C               	movwf	(f_readdir@fno+1)& (0+255),b
 16973   019978  EC7B  F0ED         	call	_f_readdir	;wreg free
 16974   01997C  0107               	movlb	7	; () banked
 16975   01997E  6F4F               	movwf	scan_files@res& (0+255),b
 16976   019980                     
 16977                           ; BSR set to: 7
 16978                           ;../src/w65_main.c: 518:    if (res != FR_OK || fno.fname[0] == 0) break;
 16979   019980  514F               	movf	scan_files@res& (0+255),w,b
 16980   019982  A4D8               	btfss	status,2,c
 16981   019984  EFC6  F0CC         	goto	u34901
 16982   019988  EFC8  F0CC         	goto	u34900
 16983   01998C                     u34901:
 16984   01998C  EF0A  F0CD         	goto	l25073
 16985   019990                     u34900:
 16986   019990                     
 16987                           ; BSR set to: 7
 16988   019990  515B               	movf	(scan_files@fno+9)& (0+255),w,b
 16989   019992  A4D8               	btfss	status,2,c
 16990   019994  EFCE  F0CC         	goto	u34911
 16991   019998  EFD0  F0CC         	goto	u34910
 16992   01999C                     u34911:
 16993   01999C  EFD2  F0CC         	goto	l25061
 16994   0199A0                     u34910:
 16995   0199A0  EF0A  F0CD         	goto	l25073
 16996   0199A4                     l25061:
 16997                           
 16998                           ; BSR set to: 7
 16999                           ;../src/w65_main.c: 519:    if (fno.fname[0] == '.') continue;
 17000   0199A4  0E2E               	movlw	46
 17001   0199A6  195B               	xorwf	(scan_files@fno+9)& (0+255),w,b
 17002   0199A8  A4D8               	btfss	status,2,c
 17003   0199AA  EFD9  F0CC         	goto	u34921
 17004   0199AE  EFDB  F0CC         	goto	u34920
 17005   0199B2                     u34921:
 17006   0199B2  EFDD  F0CC         	goto	l25065
 17007   0199B6                     u34920:
 17008   0199B6  EFB3  F0CC         	goto	l25055
 17009   0199BA                     l25065:
 17010                           
 17011                           ; BSR set to: 7
 17012                           ;../src/w65_main.c: 520:    fn = fno.fname;
 17013   0199BA  0E5B               	movlw	low (scan_files@fno+9)
 17014   0199BC  6F4B               	movwf	scan_files@fn& (0+255),b
 17015   0199BE  0E07               	movlw	high (scan_files@fno+9)
 17016   0199C0  6F4C               	movwf	(scan_files@fn+1)& (0+255),b
 17017   0199C2                     
 17018                           ; BSR set to: 7
 17019                           ;../src/w65_main.c: 521:    if (fno.fattrib & 0x10) {
 17020   0199C2  A95A               	btfss	(scan_files@fno+8)& (0+255),4,b
 17021   0199C4  EFE6  F0CC         	goto	u34931
 17022   0199C8  EFE8  F0CC         	goto	u34930
 17023   0199CC                     u34931:
 17024   0199CC  EFF5  F0CC         	goto	l25071
 17025   0199D0                     u34930:
 17026   0199D0                     
 17027                           ; BSR set to: 7
 17028                           ;../src/w65_main.c: 522:     printf("  %12s\t<DIR>\r\n", fno.fname);
 17029   0199D0  0E07               	movlw	low STR_96
 17030   0199D2  0105               	movlb	5	; () banked
 17031   0199D4  6FAD               	movwf	printf@fmt& (0+255),b
 17032   0199D6  0EFE               	movlw	high STR_96
 17033   0199D8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17034   0199DA  0E5B               	movlw	low (scan_files@fno+9)
 17035   0199DC  6FAF               	movwf	(?_printf+2)& (0+255),b
 17036   0199DE  0E07               	movlw	high (scan_files@fno+9)
 17037   0199E0  6FB0               	movwf	(?_printf+3)& (0+255),b
 17038   0199E2  ECDA  F0FF         	call	_printf	;wreg free
 17039                           
 17040                           ;../src/w65_main.c: 523:    }
 17041   0199E6  EFB3  F0CC         	goto	l25055
 17042   0199EA                     l25071:
 17043                           
 17044                           ; BSR set to: 7
 17045                           ;../src/w65_main.c: 525:     printf("  %12s\t%ld bytes.\r\n", fn, fno.fsize);
 17046   0199EA  0E9A               	movlw	low STR_97
 17047   0199EC  0105               	movlb	5	; () banked
 17048   0199EE  6FAD               	movwf	printf@fmt& (0+255),b
 17049   0199F0  0EFC               	movlw	high STR_97
 17050   0199F2  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17051   0199F4  C74B  F5AF         	movff	scan_files@fn,?_printf+2
 17052   0199F8  C74C  F5B0         	movff	scan_files@fn+1,?_printf+3
 17053   0199FC  C752  F5B1         	movff	scan_files@fno,?_printf+4
 17054   019A00  C753  F5B2         	movff	scan_files@fno+1,?_printf+5
 17055   019A04  C754  F5B3         	movff	scan_files@fno+2,?_printf+6
 17056   019A08  C755  F5B4         	movff	scan_files@fno+3,?_printf+7
 17057   019A0C  ECDA  F0FF         	call	_printf	;wreg free
 17058   019A10  EFB3  F0CC         	goto	l25055
 17059   019A14                     l25073:
 17060                           
 17061                           ; BSR set to: 7
 17062                           ;../src/w65_main.c: 528:   f_closedir(&dir);
 17063   019A14  0E68               	movlw	low scan_files@dir
 17064   019A16  0105               	movlb	5	; () banked
 17065   019A18  6FC9               	movwf	f_closedir@dp& (0+255),b
 17066   019A1A  0E07               	movlw	high scan_files@dir
 17067   019A1C  6FCA               	movwf	(f_closedir@dp+1)& (0+255),b
 17068   019A1E  ECDC  F0FE         	call	_f_closedir	;wreg free
 17069                           
 17070                           ;../src/w65_main.c: 529:  }
 17071   019A22  EF51  F0CD         	goto	l25083
 17072   019A26                     l25075:
 17073                           
 17074                           ; BSR set to: 7
 17075                           ;../src/w65_main.c: 531:   if (res == FR_NO_PATH) {
 17076   019A26  0E05               	movlw	5
 17077   019A28  194F               	xorwf	scan_files@res& (0+255),w,b
 17078   019A2A  A4D8               	btfss	status,2,c
 17079   019A2C  EF1A  F0CD         	goto	u34941
 17080   019A30  EF1C  F0CD         	goto	u34940
 17081   019A34                     u34941:
 17082   019A34  EF51  F0CD         	goto	l25083
 17083   019A38                     u34940:
 17084   019A38                     
 17085                           ; BSR set to: 7
 17086                           ;../src/w65_main.c: 532:    res = f_open(&rom_fl, (const TCHAR *)path, 0x01);
 17087   019A38  0ED6               	movlw	low _rom_fl
 17088   019A3A  0106               	movlb	6	; () banked
 17089   019A3C  6FAF               	movwf	f_open@fp& (0+255),b
 17090   019A3E  0E0F               	movlw	high _rom_fl
 17091   019A40  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 17092   019A42  C750  F6B1         	movff	scan_files@path,f_open@path
 17093   019A46  C751  F6B2         	movff	scan_files@path+1,f_open@path+1
 17094   019A4A  0E01               	movlw	1
 17095   019A4C  6FB3               	movwf	f_open@mode& (0+255),b
 17096   019A4E  ECDB  F092         	call	_f_open	;wreg free
 17097   019A52  0107               	movlb	7	; () banked
 17098   019A54  6F4F               	movwf	scan_files@res& (0+255),b
 17099   019A56                     
 17100                           ; BSR set to: 7
 17101                           ;../src/w65_main.c: 533:    if ( res == FR_OK ) {
 17102   019A56  514F               	movf	scan_files@res& (0+255),w,b
 17103   019A58  A4D8               	btfss	status,2,c
 17104   019A5A  EF31  F0CD         	goto	u34951
 17105   019A5E  EF33  F0CD         	goto	u34950
 17106   019A62                     u34951:
 17107   019A62  EF51  F0CD         	goto	l25083
 17108   019A66                     u34950:
 17109   019A66                     
 17110                           ; BSR set to: 7
 17111                           ;../src/w65_main.c: 534:     printf("  %12s\t%ld bytes.\r\n", path, ((&rom_fl)->obj.objs
      +                          ize));
 17112   019A66  0E9A               	movlw	low STR_97
 17113   019A68  0105               	movlb	5	; () banked
 17114   019A6A  6FAD               	movwf	printf@fmt& (0+255),b
 17115   019A6C  0EFC               	movlw	high STR_97
 17116   019A6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17117   019A70  C750  F5AF         	movff	scan_files@path,?_printf+2
 17118   019A74  C751  F5B0         	movff	scan_files@path+1,?_printf+3
 17119   019A78  0063  FF80  F5B1   	movff	_rom_fl+10,?_printf+4
 17120   019A7E  0063  FF84  F5B2   	movff	_rom_fl+11,?_printf+5
 17121   019A84  0063  FF88  F5B3   	movff	_rom_fl+12,?_printf+6
 17122   019A8A  0063  FF8C  F5B4   	movff	_rom_fl+13,?_printf+7
 17123   019A90  ECDA  F0FF         	call	_printf	;wreg free
 17124                           
 17125                           ;../src/w65_main.c: 535:     f_close( &rom_fl );
 17126   019A94  0ED6               	movlw	low _rom_fl
 17127   019A96  0106               	movlb	6	; () banked
 17128   019A98  6F2F               	movwf	f_close@fp& (0+255),b
 17129   019A9A  0E0F               	movlw	high _rom_fl
 17130   019A9C  6F30               	movwf	(f_close@fp+1)& (0+255),b
 17131   019A9E  ECDB  F0FB         	call	_f_close	;wreg free
 17132   019AA2                     l25083:
 17133                           
 17134                           ;../src/w65_main.c: 539:  return res;
 17135   019AA2  0107               	movlb	7	; () banked
 17136   019AA4  514F               	movf	scan_files@res& (0+255),w,b
 17137   019AA6                     
 17138                           ; BSR set to: 7
 17139   019AA6  0012               	return		;funcret
 17140   019AA8                     __end_of_scan_files:
 17141                           	callstack 0
 17142                           
 17143 ;; *************** function _wstart_prog *****************
 17144 ;; Defined at:
 17145 ;;		line 793 in file "../src/w65_main.c"
 17146 ;; Parameters:    Size  Location     Type
 17147 ;;		None
 17148 ;; Auto vars:     Size  Location     Type
 17149 ;;  rs              1   22[BANK7 ] enum E23452
 17150 ;; Return value:  Size  Location     Type
 17151 ;;                  1    wreg      enum E23452
 17152 ;; Registers used:
 17153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17154 ;; Tracked objects:
 17155 ;;		On entry : 0/0
 17156 ;;		On exit  : 0/0
 17157 ;;		Unchanged: 0/0
 17158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 17159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17160 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17162 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17163 ;;Total ram usage:        1 bytes
 17164 ;; Hardware stack levels used: 1
 17165 ;; Hardware stack levels required when called: 25
 17166 ;; This function calls:
 17167 ;;		_drive_cpu
 17168 ;;		_start_cpu
 17169 ;;		_write_sram
 17170 ;; This function is called by:
 17171 ;;		_main
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text14
 17176   01EA54                     __ptext14:
 17177                           	callstack 0
 17178   01EA54                     _wstart_prog:
 17179                           	callstack 101
 17180   01EA54                     
 17181                           ;../src/w65_main.c: 794:  FRESULT rs;;../src/w65_main.c: 796:  rs = FR_NO_FILE;
 17182   01EA54  0E04               	movlw	4
 17183   01EA56  0107               	movlb	7	; () banked
 17184   01EA58  6F16               	movwf	wstart_prog@rs& (0+255),b
 17185   01EA5A                     
 17186                           ; BSR set to: 7
 17187                           ;../src/w65_main.c: 797:  if ( binv.sw == 1) {
 17188   01EA5A  0108               	movlb	8	; () banked
 17189   01EA5C  0578               	decf	_binv& (0+255),w,b
 17190   01EA5E  A4D8               	btfss	status,2,c
 17191   01EA60  EF34  F0F5         	goto	u35351
 17192   01EA64  EF36  F0F5         	goto	u35350
 17193   01EA68                     u35351:
 17194   01EA68  EF7B  F0F5         	goto	l25389
 17195   01EA6C                     u35350:
 17196   01EA6C                     
 17197                           ; BSR set to: 8
 17198                           ;../src/w65_main.c: 799:   write_sram(0, &cpu_flg, 1);
 17199   01EA6C  0E00               	movlw	0
 17200   01EA6E  6E04               	movwf	write_sram@addr^(0+1280),c
 17201   01EA70  0E00               	movlw	0
 17202   01EA72  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 17203   01EA74  0E00               	movlw	0
 17204   01EA76  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 17205   01EA78  0E00               	movlw	0
 17206   01EA7A  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 17207   01EA7C  0EE5               	movlw	low _cpu_flg
 17208   01EA7E  6E08               	movwf	write_sram@buf^(0+1280),c
 17209   01EA80  0E07               	movlw	high _cpu_flg
 17210   01EA82  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 17211   01EA84  0E00               	movlw	0
 17212   01EA86  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 17213   01EA88  0E01               	movlw	1
 17214   01EA8A  6E0A               	movwf	write_sram@len^(0+1280),c
 17215   01EA8C  EC9F  F0E8         	call	_write_sram	;wreg free
 17216   01EA90                     
 17217                           ;../src/w65_main.c: 801:   binv.addr = binv.waddr;
 17218   01EA90  C881  F879         	movff	_binv+9,_binv+1
 17219   01EA94  C882  F87A         	movff	_binv+10,_binv+2
 17220                           
 17221                           ;../src/w65_main.c: 802:   write_sram( fh.load_p+8, (uint8_t *)&binv, 7 );
 17222   01EA98  0E08               	movlw	8
 17223   01EA9A  0108               	movlb	8	; () banked
 17224   01EA9C  25B2               	addwf	(_fh+16)& (0+255),w,b
 17225   01EA9E  6E04               	movwf	write_sram@addr^(0+1280),c
 17226   01EAA0  0E00               	movlw	0
 17227   01EAA2  21B3               	addwfc	(_fh+17)& (0+255),w,b
 17228   01EAA4  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 17229   01EAA6  0E00               	movlw	0
 17230   01EAA8  21B4               	addwfc	(_fh+18)& (0+255),w,b
 17231   01EAAA  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 17232   01EAAC  0E00               	movlw	0
 17233   01EAAE  21B5               	addwfc	(_fh+19)& (0+255),w,b
 17234   01EAB0  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 17235   01EAB2  0E78               	movlw	low _binv
 17236   01EAB4  6E08               	movwf	write_sram@buf^(0+1280),c
 17237   01EAB6  0E08               	movlw	high _binv
 17238   01EAB8  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 17239   01EABA  0E00               	movlw	0
 17240   01EABC  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 17241   01EABE  0E07               	movlw	7
 17242   01EAC0  6E0A               	movwf	write_sram@len^(0+1280),c
 17243   01EAC2  EC9F  F0E8         	call	_write_sram	;wreg free
 17244                           
 17245                           ;../src/w65_main.c: 804:   write_sram(0xFFFC, (uint8_t *)&fh.cstart_addr, 2);
 17246   01EAC6  0EFC               	movlw	252
 17247   01EAC8  6E04               	movwf	write_sram@addr^(0+1280),c
 17248   01EACA  0EFF               	movlw	255
 17249   01EACC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 17250   01EACE  0E00               	movlw	0
 17251   01EAD0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 17252   01EAD2  0E00               	movlw	0
 17253   01EAD4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 17254   01EAD6  0EA3               	movlw	low (_fh+1)
 17255   01EAD8  6E08               	movwf	write_sram@buf^(0+1280),c
 17256   01EADA  0E08               	movlw	high (_fh+1)
 17257   01EADC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 17258   01EADE  0E00               	movlw	0
 17259   01EAE0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 17260   01EAE2  0E02               	movlw	2
 17261   01EAE4  6E0A               	movwf	write_sram@len^(0+1280),c
 17262   01EAE6  EC9F  F0E8         	call	_write_sram	;wreg free
 17263   01EAEA                     
 17264                           ;../src/w65_main.c: 805:   start_cpu();
 17265   01EAEA  ECF8  F0FE         	call	_start_cpu	;wreg free
 17266   01EAEE                     
 17267                           ;../src/w65_main.c: 806:   rs = drive_cpu();
 17268   01EAEE  ECA0  F0FE         	call	_drive_cpu	;wreg free
 17269   01EAF2  0107               	movlb	7	; () banked
 17270   01EAF4  6F16               	movwf	wstart_prog@rs& (0+255),b
 17271   01EAF6                     l25389:
 17272                           
 17273                           ;../src/w65_main.c: 808:  return rs;
 17274   01EAF6  0107               	movlb	7	; () banked
 17275   01EAF8  5116               	movf	wstart_prog@rs& (0+255),w,b
 17276   01EAFA                     
 17277                           ; BSR set to: 7
 17278   01EAFA  0012               	return		;funcret
 17279   01EAFC                     __end_of_wstart_prog:
 17280                           	callstack 0
 17281                           
 17282 ;; *************** function _wait_for_programmer *****************
 17283 ;; Defined at:
 17284 ;;		line 119 in file "../src/boards/w65_cmn.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;		None
 17287 ;; Auto vars:     Size  Location     Type
 17288 ;;		None
 17289 ;; Return value:  Size  Location     Type
 17290 ;;                  1    wreg      void 
 17291 ;; Registers used:
 17292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17293 ;; Tracked objects:
 17294 ;;		On entry : 0/0
 17295 ;;		On exit  : 0/0
 17296 ;;		Unchanged: 0/0
 17297 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 17298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17302 ;;Total ram usage:        2 bytes
 17303 ;; Hardware stack levels used: 1
 17304 ;; Hardware stack levels required when called: 9
 17305 ;; This function calls:
 17306 ;;		_printf
 17307 ;; This function is called by:
 17308 ;;		_main
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           	psect	text15
 17313   01FAE6                     __ptext15:
 17314                           	callstack 0
 17315   01FAE6                     _wait_for_programmer:
 17316                           	callstack 117
 17317   01FAE6                     
 17318                           ;../src/boards/w65_cmn.c: 124:     printf("\n\r");
 17319   01FAE6  0E8B               	movlw	low (STR_193+52)
 17320   01FAE8  0105               	movlb	5	; () banked
 17321   01FAEA  6FAD               	movwf	printf@fmt& (0+255),b
 17322   01FAEC  0EF2               	movlw	high (STR_193+52)
 17323   01FAEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17324   01FAF0  ECDA  F0FF         	call	_printf	;wreg free
 17325                           
 17326                           ;../src/boards/w65_cmn.c: 125:     printf("wait for programmer ...\r\n");
 17327   01FAF4  0ED4               	movlw	low STR_168
 17328   01FAF6  0105               	movlb	5	; () banked
 17329   01FAF8  6FAD               	movwf	printf@fmt& (0+255),b
 17330   01FAFA  0EF9               	movlw	high STR_168
 17331   01FAFC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17332   01FAFE  ECDA  F0FF         	call	_printf	;wreg free
 17333   01FB02                     
 17334                           ;../src/boards/w65_cmn.c: 126:     _delay((unsigned long)((1000)*(64000000UL/4000.0)));
 17335   01FB02  0E52               	movlw	82
 17336   01FB04  0105               	movlb	5	; () banked
 17337   01FB06  6FBE               	movwf	(??_wait_for_programmer+1)& (0+255),b
 17338   01FB08  0E2B               	movlw	43
 17339   01FB0A  6FBD               	movwf	??_wait_for_programmer& (0+255),b
 17340   01FB0C  0E00               	movlw	0
 17341   01FB0E                     u36847:
 17342   01FB0E  2EE8               	decfsz	wreg,f,c
 17343   01FB10  D7FE               	bra	u36847
 17344   01FB12  2FBD               	decfsz	??_wait_for_programmer& (0+255),f,b
 17345   01FB14  D7FC               	bra	u36847
 17346   01FB16  2FBE               	decfsz	(??_wait_for_programmer+1)& (0+255),f,b
 17347   01FB18  D7FA               	bra	u36847
 17348   01FB1A  0000               	nop	
 17349   01FB1C                     
 17350                           ;../src/boards/w65_cmn.c: 128:     printf("\n\r");
 17351   01FB1C  0E8B               	movlw	low (STR_193+52)
 17352   01FB1E  0105               	movlb	5	; () banked
 17353   01FB20  6FAD               	movwf	printf@fmt& (0+255),b
 17354   01FB22  0EF2               	movlw	high (STR_193+52)
 17355   01FB24  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17356   01FB26  ECDA  F0FF         	call	_printf	;wreg free
 17357   01FB2A  0012               	return		;funcret
 17358   01FB2C                     __end_of_wait_for_programmer:
 17359                           	callstack 0
 17360                           
 17361 ;; *************** function _uart_init *****************
 17362 ;; Defined at:
 17363 ;;		line 289 in file "../src/boards/w65_cmn.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;		None
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  1    wreg      void 
 17370 ;; Registers used:
 17371 ;;		wreg, status,2
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 17377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17381 ;;Total ram usage:        0 bytes
 17382 ;; Hardware stack levels used: 1
 17383 ;; Hardware stack levels required when called: 1
 17384 ;; This function calls:
 17385 ;;		Nothing
 17386 ;; This function is called by:
 17387 ;;		_main
 17388 ;; This function uses a non-reentrant model
 17389 ;;
 17390                           
 17391                           	psect	text16
 17392   01FD04                     __ptext16:
 17393                           	callstack 0
 17394   01FD04                     _uart_init:
 17395                           	callstack 125
 17396   01FD04                     
 17397                           ;../src/boards/w65_cmn.c: 295:  U3BRG = 34;
 17398   01FD04  0E00               	movlw	0
 17399   01FD06  0102               	movlb	2	; () banked
 17400   01FD08  6FD5               	movwf	213,b	;volatile
 17401   01FD0A  0E22               	movlw	34
 17402   01FD0C  6FD4               	movwf	212,b	;volatile
 17403   01FD0E                     
 17404                           ; BSR set to: 2
 17405                           ;../src/boards/w65_cmn.c: 296:  U3RXEN = 1;
 17406   01FD0E  89D1               	bsf	209,4,b	;volatile
 17407   01FD10                     
 17408                           ; BSR set to: 2
 17409                           ;../src/boards/w65_cmn.c: 297:  U3TXEN = 1;
 17410   01FD10  8BD1               	bsf	209,5,b	;volatile
 17411   01FD12                     
 17412                           ; BSR set to: 2
 17413                           ;../src/boards/w65_cmn.c: 300:  TRISA7 = 1;
 17414   01FD12  8EC6               	bsf	1222,7,c	;volatile
 17415                           
 17416                           ;../src/boards/w65_cmn.c: 301:  U3RXPPS = 0x07;
 17417   01FD14  0E07               	movlw	7
 17418   01FD16  6F76               	movwf	118,b	;volatile
 17419   01FD18                     
 17420                           ; BSR set to: 2
 17421                           ;../src/boards/w65_cmn.c: 304:  LATA6 = 1;
 17422   01FD18  8CBE               	bsf	1214,6,c	;volatile
 17423   01FD1A                     
 17424                           ; BSR set to: 2
 17425                           ;../src/boards/w65_cmn.c: 305:  TRISA6 = 0;
 17426   01FD1A  9CC6               	bcf	1222,6,c	;volatile
 17427                           
 17428                           ;../src/boards/w65_cmn.c: 306:  RA6PPS = 0x26;
 17429   01FD1C  0E26               	movlw	38
 17430   01FD1E  6F07               	movwf	7,b	;volatile
 17431   01FD20                     
 17432                           ; BSR set to: 2
 17433                           ;../src/boards/w65_cmn.c: 308:  U3ON = 1;
 17434   01FD20  8FD2               	bsf	210,7,b	;volatile
 17435                           
 17436                           ;../src/boards/w65_cmn.c: 310:  rx_wp = 0;
 17437   01FD22  0E00               	movlw	0
 17438   01FD24  0107               	movlb	7	; () banked
 17439   01FD26  6FBA               	movwf	(_rx_wp+1)& (0+255),b
 17440   01FD28  0E00               	movlw	0
 17441   01FD2A  6FB9               	movwf	_rx_wp& (0+255),b
 17442                           
 17443                           ;../src/boards/w65_cmn.c: 311:  rx_rp = 0;
 17444   01FD2C  0E00               	movlw	0
 17445   01FD2E  6FB8               	movwf	(_rx_rp+1)& (0+255),b
 17446   01FD30  0E00               	movlw	0
 17447   01FD32  6FB7               	movwf	_rx_rp& (0+255),b
 17448                           
 17449                           ;../src/boards/w65_cmn.c: 312:  rx_cnt = 0;
 17450   01FD34  0E00               	movlw	0
 17451   01FD36  6FC2               	movwf	(_rx_cnt+1)& (0+255),b
 17452   01FD38  0E00               	movlw	0
 17453   01FD3A  6FC1               	movwf	_rx_cnt& (0+255),b
 17454   01FD3C                     
 17455                           ; BSR set to: 7
 17456                           ;../src/boards/w65_cmn.c: 313:  U3RXIE = 1;
 17457   01FD3C  80A7               	bsf	1191,0,c	;volatile
 17458   01FD3E                     
 17459                           ; BSR set to: 7
 17460   01FD3E  0012               	return		;funcret
 17461   01FD40                     __end_of_uart_init:
 17462                           	callstack 0
 17463                           
 17464 ;; *************** function _setup_sd *****************
 17465 ;; Defined at:
 17466 ;;		line 241 in file "../src/boards/w65_bd.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;		None
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;		None
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  1    wreg      void 
 17473 ;; Registers used:
 17474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17484 ;;Total ram usage:        2 bytes
 17485 ;; Hardware stack levels used: 1
 17486 ;; Hardware stack levels required when called: 11
 17487 ;; This function calls:
 17488 ;;		_SDCard_init
 17489 ;;		_printf
 17490 ;; This function is called by:
 17491 ;;		_main
 17492 ;; This function uses a non-reentrant model
 17493 ;;
 17494                           
 17495                           	psect	text17
 17496   01EF40                     __ptext17:
 17497                           	callstack 0
 17498   01EF40                     _setup_sd:
 17499                           	callstack 115
 17500   01EF40                     
 17501                           ;../src/boards/w65_bd.c: 245:     static int retry;;../src/boards/w65_bd.c: 247:  for (r
      +                          etry = 0; 1; retry++) {
 17502   01EF40  0E00               	movlw	0
 17503   01EF42  0107               	movlb	7	; () banked
 17504   01EF44  6FB6               	movwf	(setup_sd@retry+1)& (0+255),b
 17505   01EF46  0E00               	movlw	0
 17506   01EF48  6FB5               	movwf	setup_sd@retry& (0+255),b
 17507   01EF4A                     l24881:
 17508                           
 17509                           ; BSR set to: 7
 17510                           ;../src/boards/w65_bd.c: 248:         if (20 <= retry) {
 17511   01EF4A  BFB6               	btfsc	(setup_sd@retry+1)& (0+255),7,b
 17512   01EF4C  EFB1  F0F7         	goto	u34701
 17513   01EF50  51B6               	movf	(setup_sd@retry+1)& (0+255),w,b
 17514   01EF52  E109               	bnz	u34700
 17515   01EF54  0E14               	movlw	20
 17516   01EF56  5DB5               	subwf	setup_sd@retry& (0+255),w,b
 17517   01EF58  A0D8               	btfss	status,0,c
 17518   01EF5A  EFB1  F0F7         	goto	u34701
 17519   01EF5E  EFB3  F0F7         	goto	u34700
 17520   01EF62                     u34701:
 17521   01EF62  EFBC  F0F7         	goto	l24885
 17522   01EF66                     u34700:
 17523   01EF66                     
 17524                           ; BSR set to: 7
 17525                           ;../src/boards/w65_bd.c: 249:             printf("No SD Card?\n\r");
 17526   01EF66  0E34               	movlw	low STR_171
 17527   01EF68  0105               	movlb	5	; () banked
 17528   01EF6A  6FAD               	movwf	printf@fmt& (0+255),b
 17529   01EF6C  0EFE               	movlw	high STR_171
 17530   01EF6E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 17531   01EF70  ECDA  F0FF         	call	_printf	;wreg free
 17532   01EF74                     l2202:
 17533   01EF74  EFBA  F0F7         	goto	l2202
 17534   01EF78                     l24885:
 17535                           
 17536                           ; BSR set to: 7
 17537                           ;../src/boards/w65_bd.c: 253:         if (SDCard_init(SPI_CLOCK_100KHZ, SPI_CLOCK_4MHZ, 
      +                          100) == 0)
 17538   01EF78  0E00               	movlw	0
 17539   01EF7A  0105               	movlb	5	; () banked
 17540   01EF7C  6FC6               	movwf	(SDCard_init@initial_clock_speed+1)& (0+255),b
 17541   01EF7E  0E00               	movlw	0
 17542   01EF80  6FC5               	movwf	SDCard_init@initial_clock_speed& (0+255),b
 17543   01EF82  0E00               	movlw	0
 17544   01EF84  6FC8               	movwf	(SDCard_init@clock_speed+1)& (0+255),b
 17545   01EF86  0E02               	movlw	2
 17546   01EF88  6FC7               	movwf	SDCard_init@clock_speed& (0+255),b
 17547   01EF8A  0E00               	movlw	0
 17548   01EF8C  6FCA               	movwf	(SDCard_init@timeout+1)& (0+255),b
 17549   01EF8E  0E64               	movlw	100
 17550   01EF90  6FC9               	movwf	SDCard_init@timeout& (0+255),b
 17551   01EF92  ECC0  F0C9         	call	_SDCard_init	;wreg free
 17552   01EF96  0105               	movlb	5	; () banked
 17553   01EF98  51C5               	movf	?_SDCard_init& (0+255),w,b
 17554   01EF9A  11C6               	iorwf	(?_SDCard_init+1)& (0+255),w,b
 17555   01EF9C  A4D8               	btfss	status,2,c
 17556   01EF9E  EFD3  F0F7         	goto	u34711
 17557   01EFA2  EFD5  F0F7         	goto	u34710
 17558   01EFA6                     u34711:
 17559   01EFA6  EFD7  F0F7         	goto	l24889
 17560   01EFAA                     u34710:
 17561   01EFAA  EFE8  F0F7         	goto	l2207
 17562   01EFAE                     l24889:
 17563                           
 17564                           ; BSR set to: 5
 17565                           ;../src/boards/w65_bd.c: 256:         _delay((unsigned long)((200)*(64000000UL/4000.0)))
      +                          ;
 17566   01EFAE  0E11               	movlw	17
 17567   01EFB0  0105               	movlb	5	; () banked
 17568   01EFB2  6FD6               	movwf	(??_setup_sd+1)& (0+255),b
 17569   01EFB4  0E3C               	movlw	60
 17570   01EFB6  6FD5               	movwf	??_setup_sd& (0+255),b
 17571   01EFB8  0ECB               	movlw	203
 17572   01EFBA                     u36857:
 17573   01EFBA  2EE8               	decfsz	wreg,f,c
 17574   01EFBC  D7FE               	bra	u36857
 17575   01EFBE  2FD5               	decfsz	??_setup_sd& (0+255),f,b
 17576   01EFC0  D7FC               	bra	u36857
 17577   01EFC2  2FD6               	decfsz	(??_setup_sd+1)& (0+255),f,b
 17578   01EFC4  D7FA               	bra	u36857
 17579   01EFC6                     
 17580                           ;../src/boards/w65_bd.c: 257:     }
 17581   01EFC6  0107               	movlb	7	; () banked
 17582   01EFC8  4BB5               	infsnz	setup_sd@retry& (0+255),f,b
 17583   01EFCA  2BB6               	incf	(setup_sd@retry+1)& (0+255),f,b
 17584   01EFCC  EFA5  F0F7         	goto	l24881
 17585   01EFD0                     l2207:
 17586                           
 17587                           ; BSR set to: 5
 17588   01EFD0  0012               	return		;funcret
 17589   01EFD2                     __end_of_setup_sd:
 17590                           	callstack 0
 17591                           
 17592 ;; *************** function _SDCard_init *****************
 17593 ;; Defined at:
 17594 ;;		line 53 in file "../src/boards/../../drivers/SDCard.c"
 17595 ;; Parameters:    Size  Location     Type
 17596 ;;  initial_cloc    2  101[BANK5 ] int 
 17597 ;;  clock_speed     2  103[BANK5 ] int 
 17598 ;;  timeout         2  105[BANK5 ] unsigned short 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;  i               2  108[BANK5 ] int 
 17601 ;;  buf             5  112[BANK5 ] unsigned char [5]
 17602 ;;  spi             2  110[BANK5 ] PTR struct SPI
 17603 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 17604 ;; Return value:  Size  Location     Type
 17605 ;;                  2  101[BANK5 ] int 
 17606 ;; Registers used:
 17607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 17613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17614 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17616 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 17617 ;;Total ram usage:       16 bytes
 17618 ;; Hardware stack levels used: 1
 17619 ;; Hardware stack levels required when called: 10
 17620 ;; This function calls:
 17621 ;;		_SDCard_command
 17622 ;;		_SDCard_end_transaction
 17623 ;;		_SPI_SD_begin
 17624 ;;		_SPI_SD_begin_transaction
 17625 ;;		_SPI_SD_configure
 17626 ;;		_SPI_SD_dummy_clocks
 17627 ;;		_printf
 17628 ;; This function is called by:
 17629 ;;		_setup_sd
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           	psect	text18
 17634   019380                     __ptext18:
 17635                           	callstack 0
 17636   019380                     _SDCard_init:
 17637                           	callstack 115
 17638   019380                     
 17639                           ;../src/boards/../../drivers/SDCard.c: 53: int SDCard_init(int initial_clock_speed, int 
      +                          clock_speed, uint16_t timeout);../src/boards/../../drivers/SDCard.c: 54: {;../src/boards
      +                          /../../drivers/SDCard.c: 55:     ctx_.spi = SPI_SD_ctx;
 17640   019380  0ECF               	movlw	low _pic18f47q43_spi_ctx
 17641   019382  0107               	movlb	7	; () banked
 17642   019384  6FA8               	movwf	_ctx_& (0+255),b
 17643   019386  0E08               	movlw	high _pic18f47q43_spi_ctx
 17644   019388  6FA9               	movwf	(_ctx_+1)& (0+255),b
 17645   01938A                     
 17646                           ; BSR set to: 7
 17647                           ;../src/boards/../../drivers/SDCard.c: 56:     ctx_.timeout = timeout;
 17648   01938A  C5C9  F7AA         	movff	SDCard_init@timeout,_ctx_+2
 17649   01938E  C5CA  F7AB         	movff	SDCard_init@timeout+1,_ctx_+3
 17650   019392                     
 17651                           ; BSR set to: 7
 17652                           ;../src/boards/../../drivers/SDCard.c: 57:     ctx_.calc_read_crc = 0;
 17653   019392  91AC               	bcf	(_ctx_+4)& (0+255),0,b
 17654                           
 17655                           ;../src/boards/../../drivers/SDCard.c: 58:     struct SPI *spi = ctx_.spi;
 17656   019394  C7A8  F5CE         	movff	_ctx_,SDCard_init@spi
 17657   019398  C7A9  F5CF         	movff	_ctx_+1,SDCard_init@spi+1
 17658   01939C                     
 17659                           ; BSR set to: 7
 17660                           ;../src/boards/../../drivers/SDCard.c: 59:     SPI_SD_begin(spi);
 17661   01939C  C5CE  F504         	movff	SDCard_init@spi,SPI_SD_begin@ctx_
 17662   0193A0  C5CF  F505         	movff	SDCard_init@spi+1,SPI_SD_begin@ctx_+1
 17663   0193A4  EC9A  F0FF         	call	_SPI_SD_begin	;wreg free
 17664   0193A8                     
 17665                           ;../src/boards/../../drivers/SDCard.c: 64:     SPI_SD_configure(spi, initial_clock_speed
      +                          , 1, 0);
 17666   0193A8  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 17667   0193AC  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 17668   0193B0  C5C5  F5BF         	movff	SDCard_init@initial_clock_speed,SPI_SD_configure@clock_speed
 17669   0193B4  C5C6  F5C0         	movff	SDCard_init@initial_clock_speed+1,SPI_SD_configure@clock_speed+1
 17670   0193B8  0E01               	movlw	1
 17671   0193BA  0105               	movlb	5	; () banked
 17672   0193BC  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 17673   0193BE  0E00               	movlw	0
 17674   0193C0  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 17675   0193C2  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 17676   0193C6                     
 17677                           ;../src/boards/../../drivers/SDCard.c: 65:     SPI_SD_begin_transaction(spi);
 17678   0193C6  C5CE  F508         	movff	SDCard_init@spi,SPI_SD_begin_transaction@ctx_
 17679   0193CA  C5CF  F509         	movff	SDCard_init@spi+1,SPI_SD_begin_transaction@ctx_+1
 17680   0193CE  EC98  F000         	call	_SPI_SD_begin_transaction	;wreg free
 17681   0193D2                     
 17682                           ;../src/boards/../../drivers/SDCard.c: 66:     SPI_SD_dummy_clocks(spi, 10);
 17683   0193D2  C5CE  F50E         	movff	SDCard_init@spi,SPI_SD_dummy_clocks@ctx_
 17684   0193D6  C5CF  F50F         	movff	SDCard_init@spi+1,SPI_SD_dummy_clocks@ctx_+1
 17685   0193DA  0E00               	movlw	0
 17686   0193DC  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 17687   0193DE  0E0A               	movlw	10
 17688   0193E0  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 17689   0193E2  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 17690   0193E6                     
 17691                           ;../src/boards/../../drivers/SDCard.c: 67:     SDCard_end_transaction();
 17692   0193E6  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 17693   0193EA                     
 17694                           ;../src/boards/../../drivers/SDCard.c: 70:     SDCard_command(0, 0, buf, 1);
 17695   0193EA  0E00               	movlw	0
 17696   0193EC  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17697   0193EE  0E00               	movlw	0
 17698   0193F0  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17699   0193F2  0E00               	movlw	0
 17700   0193F4  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17701   0193F6  0E00               	movlw	0
 17702   0193F8  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17703   0193FA  0ED0               	movlw	low SDCard_init@buf
 17704   0193FC  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17705   0193FE  0E05               	movlw	high SDCard_init@buf
 17706   019400  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17707   019402  0E00               	movlw	0
 17708   019404  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17709   019406  0E01               	movlw	1
 17710   019408  6E31               	movwf	SDCard_command@length^(0+1280),c
 17711   01940A  0E00               	movlw	0
 17712   01940C  EC7A  F0F9         	call	_SDCard_command
 17713   019410                     
 17714                           ;../src/boards/../../drivers/SDCard.c: 72:     if (buf[0] != 0x01) {
 17715   019410  0105               	movlb	5	; () banked
 17716   019412  05D0               	decf	SDCard_init@buf& (0+255),w,b
 17717   019414  B4D8               	btfsc	status,2,c
 17718   019416  EF0F  F0CA         	goto	u34291
 17719   01941A  EF11  F0CA         	goto	u34290
 17720   01941E                     u34291:
 17721   01941E  EF17  F0CA         	goto	l24569
 17722   019422                     u34290:
 17723   019422                     l24565:
 17724                           
 17725                           ; BSR set to: 5
 17726                           ;../src/boards/../../drivers/SDCard.c: 74:         return 1;
 17727   019422  0E00               	movlw	0
 17728   019424  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 17729   019426  0E01               	movlw	1
 17730   019428  6FC5               	movwf	?_SDCard_init& (0+255),b
 17731   01942A  EF02  F0CB         	goto	l2404
 17732   01942E                     l24569:
 17733                           
 17734                           ; BSR set to: 5
 17735                           ;../src/boards/../../drivers/SDCard.c: 78:     SDCard_command(8, 0x000001aa, buf, 5);
 17736   01942E  0EAA               	movlw	170
 17737   019430  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17738   019432  0E01               	movlw	1
 17739   019434  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17740   019436  0E00               	movlw	0
 17741   019438  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17742   01943A  0E00               	movlw	0
 17743   01943C  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17744   01943E  0ED0               	movlw	low SDCard_init@buf
 17745   019440  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17746   019442  0E05               	movlw	high SDCard_init@buf
 17747   019444  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17748   019446  0E00               	movlw	0
 17749   019448  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17750   01944A  0E05               	movlw	5
 17751   01944C  6E31               	movwf	SDCard_command@length^(0+1280),c
 17752   01944E  0E08               	movlw	8
 17753   019450  EC7A  F0F9         	call	_SDCard_command
 17754   019454                     
 17755                           ;../src/boards/../../drivers/SDCard.c: 81:     if (buf[0] != 0x01 || (buf[3] & 0x01) != 
      +                          0x01 || buf[4] != 0xaa) {
 17756   019454  0105               	movlb	5	; () banked
 17757   019456  05D0               	decf	SDCard_init@buf& (0+255),w,b
 17758   019458  A4D8               	btfss	status,2,c
 17759   01945A  EF31  F0CA         	goto	u34301
 17760   01945E  EF33  F0CA         	goto	u34300
 17761   019462                     u34301:
 17762   019462  EF45  F0CA         	goto	l2412
 17763   019466                     u34300:
 17764   019466                     
 17765                           ; BSR set to: 5
 17766   019466  A1D3               	btfss	(SDCard_init@buf+3)& (0+255),0,b
 17767   019468  EF38  F0CA         	goto	u34311
 17768   01946C  EF3A  F0CA         	goto	u34310
 17769   019470                     u34311:
 17770   019470  EF45  F0CA         	goto	l2412
 17771   019474                     u34310:
 17772   019474                     
 17773                           ; BSR set to: 5
 17774   019474  0EAA               	movlw	170
 17775   019476  19D4               	xorwf	(SDCard_init@buf+4)& (0+255),w,b
 17776   019478  B4D8               	btfsc	status,2,c
 17777   01947A  EF41  F0CA         	goto	u34321
 17778   01947E  EF43  F0CA         	goto	u34320
 17779   019482                     u34321:
 17780   019482  EF4B  F0CA         	goto	l24585
 17781   019486                     u34320:
 17782   019486  EF45  F0CA         	goto	l24581
 17783   01948A                     l2412:
 17784   01948A                     l24581:
 17785                           
 17786                           ; BSR set to: 5
 17787                           ;../src/boards/../../drivers/SDCard.c: 83:         return 2;
 17788   01948A  0E00               	movlw	0
 17789   01948C  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 17790   01948E  0E02               	movlw	2
 17791   019490  6FC5               	movwf	?_SDCard_init& (0+255),b
 17792   019492  EF02  F0CB         	goto	l2404
 17793   019496                     l24585:
 17794                           
 17795                           ; BSR set to: 5
 17796                           ;../src/boards/../../drivers/SDCard.c: 87:     for (int i = 0; i < 3000; i++) {
 17797   019496  0E00               	movlw	0
 17798   019498  6FCD               	movwf	(SDCard_init@i+1)& (0+255),b
 17799   01949A  0E00               	movlw	0
 17800   01949C  6FCC               	movwf	SDCard_init@i& (0+255),b
 17801   01949E                     l24591:
 17802                           
 17803                           ; BSR set to: 5
 17804                           ;../src/boards/../../drivers/SDCard.c: 88:         SDCard_command(55, 0, buf, 1);
 17805   01949E  0E00               	movlw	0
 17806   0194A0  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17807   0194A2  0E00               	movlw	0
 17808   0194A4  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17809   0194A6  0E00               	movlw	0
 17810   0194A8  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17811   0194AA  0E00               	movlw	0
 17812   0194AC  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17813   0194AE  0ED0               	movlw	low SDCard_init@buf
 17814   0194B0  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17815   0194B2  0E05               	movlw	high SDCard_init@buf
 17816   0194B4  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17817   0194B6  0E00               	movlw	0
 17818   0194B8  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17819   0194BA  0E01               	movlw	1
 17820   0194BC  6E31               	movwf	SDCard_command@length^(0+1280),c
 17821   0194BE  0E37               	movlw	55
 17822   0194C0  EC7A  F0F9         	call	_SDCard_command
 17823                           
 17824                           ;../src/boards/../../drivers/SDCard.c: 89:         SDCard_command(41, 1UL << 30 , buf, 5
      +                          );
 17825   0194C4  0E00               	movlw	0
 17826   0194C6  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17827   0194C8  0E00               	movlw	0
 17828   0194CA  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17829   0194CC  0E00               	movlw	0
 17830   0194CE  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17831   0194D0  0E40               	movlw	64
 17832   0194D2  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17833   0194D4  0ED0               	movlw	low SDCard_init@buf
 17834   0194D6  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17835   0194D8  0E05               	movlw	high SDCard_init@buf
 17836   0194DA  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17837   0194DC  0E00               	movlw	0
 17838   0194DE  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17839   0194E0  0E05               	movlw	5
 17840   0194E2  6E31               	movwf	SDCard_command@length^(0+1280),c
 17841   0194E4  0E29               	movlw	41
 17842   0194E6  EC7A  F0F9         	call	_SDCard_command
 17843   0194EA                     
 17844                           ;../src/boards/../../drivers/SDCard.c: 90:         if (buf[0] == 0x00)
 17845   0194EA  0105               	movlb	5	; () banked
 17846   0194EC  51D0               	movf	SDCard_init@buf& (0+255),w,b
 17847   0194EE  A4D8               	btfss	status,2,c
 17848   0194F0  EF7C  F0CA         	goto	u34331
 17849   0194F4  EF7E  F0CA         	goto	u34330
 17850   0194F8                     u34331:
 17851   0194F8  EF80  F0CA         	goto	l24597
 17852   0194FC                     u34330:
 17853   0194FC  EF90  F0CA         	goto	l24603
 17854   019500                     l24597:
 17855                           
 17856                           ; BSR set to: 5
 17857                           ;../src/boards/../../drivers/SDCard.c: 92:     }
 17858   019500  4BCC               	infsnz	SDCard_init@i& (0+255),f,b
 17859   019502  2BCD               	incf	(SDCard_init@i+1)& (0+255),f,b
 17860   019504                     
 17861                           ; BSR set to: 5
 17862   019504  BFCD               	btfsc	(SDCard_init@i+1)& (0+255),7,b
 17863   019506  EF8E  F0CA         	goto	u34341
 17864   01950A  0EB8               	movlw	184
 17865   01950C  5DCC               	subwf	SDCard_init@i& (0+255),w,b
 17866   01950E  0E0B               	movlw	11
 17867   019510  59CD               	subwfb	(SDCard_init@i+1)& (0+255),w,b
 17868   019512  A0D8               	btfss	status,0,c
 17869   019514  EF8E  F0CA         	goto	u34341
 17870   019518  EF90  F0CA         	goto	u34340
 17871   01951C                     u34341:
 17872   01951C  EF4F  F0CA         	goto	l24591
 17873   019520                     u34340:
 17874   019520                     l24603:
 17875                           
 17876                           ; BSR set to: 5
 17877                           ;../src/boards/../../drivers/SDCard.c: 94:     if (buf[0] != 0x00) {
 17878   019520  51D0               	movf	SDCard_init@buf& (0+255),w,b
 17879   019522  B4D8               	btfsc	status,2,c
 17880   019524  EF96  F0CA         	goto	u34351
 17881   019528  EF98  F0CA         	goto	u34350
 17882   01952C                     u34351:
 17883   01952C  EF9A  F0CA         	goto	l24611
 17884   019530                     u34350:
 17885   019530  EF11  F0CA         	goto	l24565
 17886   019534                     l24611:
 17887                           
 17888                           ; BSR set to: 5
 17889                           ;../src/boards/../../drivers/SDCard.c: 100:     SDCard_command(58, 0, buf, 5);
 17890   019534  0E00               	movlw	0
 17891   019536  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17892   019538  0E00               	movlw	0
 17893   01953A  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17894   01953C  0E00               	movlw	0
 17895   01953E  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17896   019540  0E00               	movlw	0
 17897   019542  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17898   019544  0ED0               	movlw	low SDCard_init@buf
 17899   019546  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17900   019548  0E05               	movlw	high SDCard_init@buf
 17901   01954A  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17902   01954C  0E00               	movlw	0
 17903   01954E  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17904   019550  0E05               	movlw	5
 17905   019552  6E31               	movwf	SDCard_command@length^(0+1280),c
 17906   019554  0E3A               	movlw	58
 17907   019556  EC7A  F0F9         	call	_SDCard_command
 17908   01955A                     
 17909                           ;../src/boards/../../drivers/SDCard.c: 103:     if (buf[0] & 0xfe) {
 17910   01955A  C5D0  F5CB         	movff	SDCard_init@buf,??_SDCard_init
 17911   01955E  0EFE               	movlw	254
 17912   019560  0105               	movlb	5	; () banked
 17913   019562  17CB               	andwf	??_SDCard_init& (0+255),f,b
 17914   019564  B4D8               	btfsc	status,2,c
 17915   019566  EFB7  F0CA         	goto	u34361
 17916   01956A  EFB9  F0CA         	goto	u34360
 17917   01956E                     u34361:
 17918   01956E  EFBF  F0CA         	goto	l2427
 17919   019572                     u34360:
 17920   019572                     l24619:
 17921                           
 17922                           ; BSR set to: 5
 17923                           ;../src/boards/../../drivers/SDCard.c: 105:         return 3;
 17924   019572  0E00               	movlw	0
 17925   019574  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 17926   019576  0E03               	movlw	3
 17927   019578  6FC5               	movwf	?_SDCard_init& (0+255),b
 17928   01957A  EF02  F0CB         	goto	l2404
 17929   01957E                     l2427:
 17930                           
 17931                           ; BSR set to: 5
 17932                           ;../src/boards/../../drivers/SDCard.c: 107:     if (!(buf[1] & 0x40)) {
 17933   01957E  BDD1               	btfsc	(SDCard_init@buf+1)& (0+255),6,b
 17934   019580  EFC4  F0CA         	goto	u34371
 17935   019584  EFC6  F0CA         	goto	u34370
 17936   019588                     u34371:
 17937   019588  EFC8  F0CA         	goto	l2436
 17938   01958C                     u34370:
 17939   01958C  EF45  F0CA         	goto	l24581
 17940   019590                     l2436:
 17941   019590                     
 17942                           ; BSR set to: 5
 17943                           ;../src/boards/../../drivers/SDCard.c: 113:     if (!(buf[1] & 0x80)) {
 17944   019590  BFD1               	btfsc	(SDCard_init@buf+1)& (0+255),7,b
 17945   019592  EFCD  F0CA         	goto	u34381
 17946   019596  EFCF  F0CA         	goto	u34380
 17947   01959A                     u34381:
 17948   01959A  EFD1  F0CA         	goto	l2443
 17949   01959E                     u34380:
 17950   01959E  EFB9  F0CA         	goto	l24619
 17951   0195A2                     l2443:
 17952   0195A2                     
 17953                           ; BSR set to: 5
 17954                           ;../src/boards/../../drivers/SDCard.c: 120:     SDCard_command(59, 1, buf, 1);
 17955   0195A2  0E01               	movlw	1
 17956   0195A4  6E2B               	movwf	SDCard_command@argument^(0+1280),c
 17957   0195A6  0E00               	movlw	0
 17958   0195A8  6E2C               	movwf	(SDCard_command@argument+1)^(0+1280),c
 17959   0195AA  0E00               	movlw	0
 17960   0195AC  6E2D               	movwf	(SDCard_command@argument+2)^(0+1280),c
 17961   0195AE  0E00               	movlw	0
 17962   0195B0  6E2E               	movwf	(SDCard_command@argument+3)^(0+1280),c
 17963   0195B2  0ED0               	movlw	low SDCard_init@buf
 17964   0195B4  6E2F               	movwf	SDCard_command@response_buffer^(0+1280),c
 17965   0195B6  0E05               	movlw	high SDCard_init@buf
 17966   0195B8  6E30               	movwf	(SDCard_command@response_buffer+1)^(0+1280),c
 17967   0195BA  0E00               	movlw	0
 17968   0195BC  6E32               	movwf	(SDCard_command@length+1)^(0+1280),c
 17969   0195BE  0E01               	movlw	1
 17970   0195C0  6E31               	movwf	SDCard_command@length^(0+1280),c
 17971   0195C2  0E3B               	movlw	59
 17972   0195C4  EC7A  F0F9         	call	_SDCard_command
 17973   0195C8                     
 17974                           ;../src/boards/../../drivers/SDCard.c: 121:     if (buf[0] != 0x00) {
 17975   0195C8  0105               	movlb	5	; () banked
 17976   0195CA  51D0               	movf	SDCard_init@buf& (0+255),w,b
 17977   0195CC  B4D8               	btfsc	status,2,c
 17978   0195CE  EFEB  F0CA         	goto	u34391
 17979   0195D2  EFED  F0CA         	goto	u34390
 17980   0195D6                     u34391:
 17981   0195D6  EFEF  F0CA         	goto	l24651
 17982   0195DA                     u34390:
 17983   0195DA  EFB9  F0CA         	goto	l24619
 17984   0195DE                     l24651:
 17985                           
 17986                           ; BSR set to: 5
 17987                           ;../src/boards/../../drivers/SDCard.c: 126:     SPI_SD_configure(spi, clock_speed, 1, 0)
      +                          ;
 17988   0195DE  C5CE  F5BD         	movff	SDCard_init@spi,SPI_SD_configure@ctx_
 17989   0195E2  C5CF  F5BE         	movff	SDCard_init@spi+1,SPI_SD_configure@ctx_+1
 17990   0195E6  C5C7  F5BF         	movff	SDCard_init@clock_speed,SPI_SD_configure@clock_speed
 17991   0195EA  C5C8  F5C0         	movff	SDCard_init@clock_speed+1,SPI_SD_configure@clock_speed+1
 17992   0195EE  0E01               	movlw	1
 17993   0195F0  6FC1               	movwf	SPI_SD_configure@bit_order& (0+255),b
 17994   0195F2  0E00               	movlw	0
 17995   0195F4  6FC2               	movwf	SPI_SD_configure@data_mode& (0+255),b
 17996   0195F6  EC5B  F0E5         	call	_SPI_SD_configure	;wreg free
 17997   0195FA                     
 17998                           ;../src/boards/../../drivers/SDCard.c: 130:     return 0;
 17999   0195FA  0E00               	movlw	0
 18000   0195FC  0105               	movlb	5	; () banked
 18001   0195FE  6FC6               	movwf	(?_SDCard_init+1)& (0+255),b
 18002   019600  0E00               	movlw	0
 18003   019602  6FC5               	movwf	?_SDCard_init& (0+255),b
 18004   019604                     l2404:
 18005                           
 18006                           ; BSR set to: 5
 18007   019604  0012               	return		;funcret
 18008   019606                     __end_of_SDCard_init:
 18009                           	callstack 0
 18010                           
 18011 ;; *************** function _SPI_SD_configure *****************
 18012 ;; Defined at:
 18013 ;;		line 78 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  ctx_            2   93[BANK5 ] PTR struct SPI
 18016 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 18017 ;;  clock_speed     2   95[BANK5 ] int 
 18018 ;;  bit_order       1   97[BANK5 ] unsigned char 
 18019 ;;  data_mode       1   98[BANK5 ] unsigned char 
 18020 ;; Auto vars:     Size  Location     Type
 18021 ;;  ctx             2    0        PTR struct SPI_HW
 18022 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 18023 ;; Return value:  Size  Location     Type
 18024 ;;                  1    wreg      void 
 18025 ;; Registers used:
 18026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18027 ;; Tracked objects:
 18028 ;;		On entry : 0/0
 18029 ;;		On exit  : 0/0
 18030 ;;		Unchanged: 0/0
 18031 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18036 ;;Total ram usage:        8 bytes
 18037 ;; Hardware stack levels used: 1
 18038 ;; Hardware stack levels required when called: 9
 18039 ;; This function calls:
 18040 ;;		_printf
 18041 ;; This function is called by:
 18042 ;;		_SDCard_init
 18043 ;; This function uses a non-reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text19
 18047   01CAB6                     __ptext19:
 18048                           	callstack 0
 18049   01CAB6                     _SPI_SD_configure:
 18050                           	callstack 115
 18051   01CAB6                     
 18052                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 82:     SPI1CON0bits.MST = 1;
 18053   01CAB6  0100               	movlb	0	; () banked
 18054   01CAB8  8384               	bsf	132,1,b	;volatile
 18055   01CABA                     
 18056                           ; BSR set to: 0
 18057                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 83:     SPI1CON0bits.BMODE = 1;
 18058   01CABA  8184               	bsf	132,0,b	;volatile
 18059   01CABC                     
 18060                           ; BSR set to: 0
 18061                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 84:     SPI1TWIDTH = 0;
 18062   01CABC  6B88               	clrf	136,b	;volatile
 18063   01CABE                     
 18064                           ; BSR set to: 0
 18065                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 85:     SPI1INTE = 0;
 18066   01CABE  6B8B               	clrf	139,b	;volatile
 18067   01CAC0                     
 18068                           ; BSR set to: 0
 18069                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 86:     SPI1CON1bits.FST = 0;
 18070   01CAC0  9985               	bcf	133,4,b	;volatile
 18071   01CAC2                     
 18072                           ; BSR set to: 0
 18073                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 87:     SPI1CON2bits.TXR = 1;
 18074   01CAC2  8386               	bsf	134,1,b	;volatile
 18075   01CAC4                     
 18076                           ; BSR set to: 0
 18077                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 88:     SPI1CON2bits.RXR = 1;
 18078   01CAC4  8186               	bsf	134,0,b	;volatile
 18079                           
 18080                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 90:     if (bit_order == 1)
 18081   01CAC6  0105               	movlb	5	; () banked
 18082   01CAC8  05C1               	decf	SPI_SD_configure@bit_order& (0+255),w,b
 18083   01CACA  A4D8               	btfss	status,2,c
 18084   01CACC  EF6A  F0E5         	goto	u33141
 18085   01CAD0  EF6C  F0E5         	goto	u33140
 18086   01CAD4                     u33141:
 18087   01CAD4  EF70  F0E5         	goto	l2268
 18088   01CAD8                     u33140:
 18089   01CAD8                     
 18090                           ; BSR set to: 5
 18091                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 91:         SPI1CON0bits.LSBF = 0;
 18092   01CAD8  0100               	movlb	0	; () banked
 18093   01CADA  9584               	bcf	132,2,b	;volatile
 18094   01CADC  EF72  F0E5         	goto	l23835
 18095   01CAE0                     l2268:
 18096                           
 18097                           ; BSR set to: 5
 18098                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 93:         SPI1CON0bits.LSBF = 1;
 18099   01CAE0  0100               	movlb	0	; () banked
 18100   01CAE2  8584               	bsf	132,2,b	;volatile
 18101   01CAE4                     l23835:
 18102                           
 18103                           ; BSR set to: 0
 18104                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 95:     if (data_mode == 0) {
 18105   01CAE4  0105               	movlb	5	; () banked
 18106   01CAE6  51C2               	movf	SPI_SD_configure@data_mode& (0+255),w,b
 18107   01CAE8  A4D8               	btfss	status,2,c
 18108   01CAEA  EF79  F0E5         	goto	u33151
 18109   01CAEE  EF7B  F0E5         	goto	u33150
 18110   01CAF2                     u33151:
 18111   01CAF2  EF81  F0E5         	goto	l23839
 18112   01CAF6                     u33150:
 18113   01CAF6                     
 18114                           ; BSR set to: 5
 18115                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 96:         SPI1CON1bits.SMP = 0;
 18116   01CAF6  0100               	movlb	0	; () banked
 18117   01CAF8  9F85               	bcf	133,7,b	;volatile
 18118                           
 18119                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 97:         SPI1CON1bits.CKE = 1;
 18120   01CAFA  8D85               	bsf	133,6,b	;volatile
 18121                           
 18122                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 98:         SPI1CON1bits.CKP = 0;
 18123   01CAFC  9B85               	bcf	133,5,b	;volatile
 18124                           
 18125                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 99:     } else {
 18126   01CAFE  EF90  F0E5         	goto	l2271
 18127   01CB02                     l23839:
 18128                           
 18129                           ; BSR set to: 5
 18130                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 100:         printf("%s: ERROR: mode %d 
      +                          is not supported\n\r", __func__, data_mode);
 18131   01CB02  0E8E               	movlw	low STR_172
 18132   01CB04  6FAD               	movwf	printf@fmt& (0+255),b
 18133   01CB06  0EF6               	movlw	high STR_172
 18134   01CB08  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 18135   01CB0A  0EA4               	movlw	low STR_173
 18136   01CB0C  6FAF               	movwf	(?_printf+2)& (0+255),b
 18137   01CB0E  0EFD               	movlw	high STR_173
 18138   01CB10  6FB0               	movwf	(?_printf+3)& (0+255),b
 18139   01CB12  C5C2  F5B1         	movff	SPI_SD_configure@data_mode,?_printf+4
 18140   01CB16  6BB2               	clrf	(?_printf+5)& (0+255),b
 18141   01CB18  ECDA  F0FF         	call	_printf	;wreg free
 18142   01CB1C                     l2272:
 18143   01CB1C  EF8E  F0E5         	goto	l2272
 18144   01CB20                     l2271:
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 104:     SPI1CLK = 0;
 18148   01CB20  6B8C               	clrf	140,b	;volatile
 18149                           
 18150                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 105:     switch (clock_speed) {
 18151   01CB22  EFC8  F0E5         	goto	l23859
 18152   01CB26                     l23841:
 18153                           
 18154                           ; BSR set to: 5
 18155                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 107:         SPI1CLK = 2;
 18156   01CB26  0E02               	movlw	2
 18157   01CB28  0100               	movlb	0	; () banked
 18158   01CB2A  6F8C               	movwf	140,b	;volatile
 18159                           
 18160                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 108:         SPI1BAUD = 2;
 18161   01CB2C  0E02               	movlw	2
 18162   01CB2E  6F89               	movwf	137,b	;volatile
 18163                           
 18164                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 109:         break;
 18165   01CB30  EFF3  F0E5         	goto	l2285
 18166   01CB34                     l23843:
 18167                           
 18168                           ; BSR set to: 5
 18169                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 111:         SPI1BAUD = 15;
 18170   01CB34  0E0F               	movlw	15
 18171   01CB36  0100               	movlb	0	; () banked
 18172   01CB38  6F89               	movwf	137,b	;volatile
 18173                           
 18174                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 112:         break;
 18175   01CB3A  EFF3  F0E5         	goto	l2285
 18176   01CB3E                     l23845:
 18177                           
 18178                           ; BSR set to: 5
 18179                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 114:         SPI1BAUD = 7;
 18180   01CB3E  0E07               	movlw	7
 18181   01CB40  0100               	movlb	0	; () banked
 18182   01CB42  6F89               	movwf	137,b	;volatile
 18183                           
 18184                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 115:         break;
 18185   01CB44  EFF3  F0E5         	goto	l2285
 18186   01CB48                     l23847:
 18187                           
 18188                           ; BSR set to: 5
 18189                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 117:         SPI1BAUD = 5;
 18190   01CB48  0E05               	movlw	5
 18191   01CB4A  0100               	movlb	0	; () banked
 18192   01CB4C  6F89               	movwf	137,b	;volatile
 18193                           
 18194                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 118:         break;
 18195   01CB4E  EFF3  F0E5         	goto	l2285
 18196   01CB52                     l23849:
 18197                           
 18198                           ; BSR set to: 5
 18199                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 120:         SPI1BAUD = 4;
 18200   01CB52  0E04               	movlw	4
 18201   01CB54  0100               	movlb	0	; () banked
 18202   01CB56  6F89               	movwf	137,b	;volatile
 18203                           
 18204                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 121:         break;
 18205   01CB58  EFF3  F0E5         	goto	l2285
 18206   01CB5C                     l23851:
 18207                           
 18208                           ; BSR set to: 5
 18209                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 123:         SPI1BAUD = 3;
 18210   01CB5C  0E03               	movlw	3
 18211   01CB5E  0100               	movlb	0	; () banked
 18212   01CB60  6F89               	movwf	137,b	;volatile
 18213                           
 18214                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 124:         break;
 18215   01CB62  EFF3  F0E5         	goto	l2285
 18216   01CB66                     l23853:
 18217                           
 18218                           ; BSR set to: 5
 18219                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 126:         SPI1BAUD = 2;
 18220   01CB66  0E02               	movlw	2
 18221   01CB68  0100               	movlb	0	; () banked
 18222   01CB6A  6F89               	movwf	137,b	;volatile
 18223                           
 18224                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 127:         break;
 18225   01CB6C  EFF3  F0E5         	goto	l2285
 18226   01CB70                     l23855:
 18227                           
 18228                           ; BSR set to: 5
 18229                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 129:         printf("%s: ERROR: clock sp
      +                          eed %d is not supported\n\r", __func__, clock_speed);
 18230   01CB70  0E19               	movlw	low STR_174
 18231   01CB72  6FAD               	movwf	printf@fmt& (0+255),b
 18232   01CB74  0EF4               	movlw	high STR_174
 18233   01CB76  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 18234   01CB78  0EA4               	movlw	low STR_173
 18235   01CB7A  6FAF               	movwf	(?_printf+2)& (0+255),b
 18236   01CB7C  0EFD               	movlw	high STR_173
 18237   01CB7E  6FB0               	movwf	(?_printf+3)& (0+255),b
 18238   01CB80  C5BF  F5B1         	movff	SPI_SD_configure@clock_speed,?_printf+4
 18239   01CB84  C5C0  F5B2         	movff	SPI_SD_configure@clock_speed+1,?_printf+5
 18240   01CB88  ECDA  F0FF         	call	_printf	;wreg free
 18241                           
 18242                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 130:         break;
 18243   01CB8C  EFF3  F0E5         	goto	l2285
 18244   01CB90                     l23859:
 18245                           
 18246                           ; BSR set to: 0
 18247   01CB90  C5BF  F5C3         	movff	SPI_SD_configure@clock_speed,??_SPI_SD_configure
 18248   01CB94  C5C0  F5C4         	movff	SPI_SD_configure@clock_speed+1,??_SPI_SD_configure+1
 18249                           
 18250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18251                           ; Switch size 1, requested type "simple"
 18252                           ; Number of cases is 1, Range of values is 0 to 0
 18253                           ; switch strategies available:
 18254                           ; Name         Instructions Cycles
 18255                           ; simple_byte            4     3 (average)
 18256                           ;	Chosen strategy is simple_byte
 18257   01CB98  0105               	movlb	5	; () banked
 18258   01CB9A  51C4               	movf	(??_SPI_SD_configure+1)& (0+255),w,b
 18259   01CB9C  0A00               	xorlw	0	; case 0
 18260   01CB9E  B4D8               	btfsc	status,2,c
 18261   01CBA0  EFD4  F0E5         	goto	l26327
 18262   01CBA4  EFB8  F0E5         	goto	l23855
 18263   01CBA8                     l26327:
 18264                           
 18265                           ; BSR set to: 5
 18266                           ; Switch size 1, requested type "simple"
 18267                           ; Number of cases is 7, Range of values is 0 to 6
 18268                           ; switch strategies available:
 18269                           ; Name         Instructions Cycles
 18270                           ; simple_byte           22    12 (average)
 18271                           ;	Chosen strategy is simple_byte
 18272   01CBA8  51C3               	movf	??_SPI_SD_configure& (0+255),w,b
 18273   01CBAA  0A00               	xorlw	0	; case 0
 18274   01CBAC  B4D8               	btfsc	status,2,c
 18275   01CBAE  EF93  F0E5         	goto	l23841
 18276   01CBB2  0A01               	xorlw	1	; case 1
 18277   01CBB4  B4D8               	btfsc	status,2,c
 18278   01CBB6  EF9A  F0E5         	goto	l23843
 18279   01CBBA  0A03               	xorlw	3	; case 2
 18280   01CBBC  B4D8               	btfsc	status,2,c
 18281   01CBBE  EF9F  F0E5         	goto	l23845
 18282   01CBC2  0A01               	xorlw	1	; case 3
 18283   01CBC4  B4D8               	btfsc	status,2,c
 18284   01CBC6  EFA4  F0E5         	goto	l23847
 18285   01CBCA  0A07               	xorlw	7	; case 4
 18286   01CBCC  B4D8               	btfsc	status,2,c
 18287   01CBCE  EFA9  F0E5         	goto	l23849
 18288   01CBD2  0A01               	xorlw	1	; case 5
 18289   01CBD4  B4D8               	btfsc	status,2,c
 18290   01CBD6  EFAE  F0E5         	goto	l23851
 18291   01CBDA  0A03               	xorlw	3	; case 6
 18292   01CBDC  B4D8               	btfsc	status,2,c
 18293   01CBDE  EFB3  F0E5         	goto	l23853
 18294   01CBE2  EFB8  F0E5         	goto	l23855
 18295   01CBE6                     l2285:
 18296   01CBE6  0012               	return		;funcret
 18297   01CBE8                     __end_of_SPI_SD_configure:
 18298                           	callstack 0
 18299                           
 18300 ;; *************** function _SPI_SD_begin *****************
 18301 ;; Defined at:
 18302 ;;		line 65 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 18303 ;; Parameters:    Size  Location     Type
 18304 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 18305 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 18306 ;; Auto vars:     Size  Location     Type
 18307 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 18308 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 18309 ;; Return value:  Size  Location     Type
 18310 ;;                  1    wreg      void 
 18311 ;; Registers used:
 18312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18313 ;; Tracked objects:
 18314 ;;		On entry : 0/0
 18315 ;;		On exit  : 0/0
 18316 ;;		Unchanged: 0/0
 18317 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18322 ;;Total ram usage:        4 bytes
 18323 ;; Hardware stack levels used: 1
 18324 ;; Hardware stack levels required when called: 1
 18325 ;; This function calls:
 18326 ;;		Nothing
 18327 ;; This function is called by:
 18328 ;;		_SDCard_init
 18329 ;; This function uses a non-reentrant model
 18330 ;;
 18331                           
 18332                           	psect	text20
 18333   01FF34                     __ptext20:
 18334                           	callstack 0
 18335   01FF34                     _SPI_SD_begin:
 18336                           	callstack 123
 18337   01FF34                     
 18338                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 65: void SPI_SD_begin(struct SPI *ctx_);
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 66: {;../src/boards/../../drivers/pic18f5
      +                          7q43_spi.c: 67:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 18339   01FF34  C504  F506         	movff	SPI_SD_begin@ctx_,SPI_SD_begin@ctx
 18340   01FF38  C505  F507         	movff	SPI_SD_begin@ctx_+1,SPI_SD_begin@ctx+1
 18341   01FF3C                     
 18342                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 68:     ctx->bus_acquired = 0;
 18343   01FF3C  EE20 F002          	lfsr	2,2
 18344   01FF40  5006               	movf	SPI_SD_begin@ctx^(0+1280),w,c
 18345   01FF42  26D9               	addwf	fsr2l,f,c
 18346   01FF44  5007               	movf	(SPI_SD_begin@ctx+1)^(0+1280),w,c
 18347   01FF46  22DA               	addwfc	fsr2h,f,c
 18348   01FF48  6ADF               	clrf	indf2,c
 18349   01FF4A                     
 18350                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 70:     SPI1CON0 = 0;
 18351   01FF4A  0100               	movlb	0	; () banked
 18352   01FF4C  6B84               	clrf	132,b	;volatile
 18353   01FF4E                     
 18354                           ; BSR set to: 0
 18355                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 71:     SPI1CON1 = 0;
 18356   01FF4E  6B85               	clrf	133,b	;volatile
 18357   01FF50                     
 18358                           ; BSR set to: 0
 18359                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 72:     SPI1SCKPPS = ((1 << 3) | 1);
 18360   01FF50  0E09               	movlw	9
 18361   01FF52  0102               	movlb	2	; () banked
 18362   01FF54  6F6A               	movwf	106,b	;volatile
 18363   01FF56                     
 18364                           ; BSR set to: 2
 18365                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 73:     SPI1SDIPPS = ((1 << 3) | 2);
 18366   01FF56  0E0A               	movlw	10
 18367   01FF58  6F6B               	movwf	107,b	;volatile
 18368   01FF5A                     
 18369                           ; BSR set to: 2
 18370                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 74:     TRISE2 = 0;
 18371   01FF5A  94CA               	bcf	1226,2,c	;volatile
 18372   01FF5C                     
 18373                           ; BSR set to: 2
 18374                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 75:     SPI1CON0bits.EN = 1;
 18375   01FF5C  0100               	movlb	0	; () banked
 18376   01FF5E  8F84               	bsf	132,7,b	;volatile
 18377   01FF60                     
 18378                           ; BSR set to: 0
 18379   01FF60  0012               	return		;funcret
 18380   01FF62                     __end_of_SPI_SD_begin:
 18381                           	callstack 0
 18382                           
 18383 ;; *************** function _SDCard_command *****************
 18384 ;; Defined at:
 18385 ;;		line 316 in file "../src/boards/../../drivers/SDCard.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  command         1    wreg     unsigned char 
 18388 ;;  argument        4   42[COMRAM] unsigned long 
 18389 ;;  response_buf    2   46[COMRAM] PTR void 
 18390 ;;		 -> SDCard_init@buf(5), 
 18391 ;;  length          2   48[COMRAM] unsigned int 
 18392 ;; Auto vars:     Size  Location     Type
 18393 ;;  command         1   50[COMRAM] unsigned char 
 18394 ;;  responsep       2   55[COMRAM] PTR unsigned char 
 18395 ;;		 -> SDCard_init@buf(5), 
 18396 ;;  result          2   53[COMRAM] int 
 18397 ;;  spi             2   51[COMRAM] PTR struct SPI
 18398 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 18399 ;; Return value:  Size  Location     Type
 18400 ;;                  2   42[COMRAM] int 
 18401 ;; Registers used:
 18402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18403 ;; Tracked objects:
 18404 ;;		On entry : 0/0
 18405 ;;		On exit  : 0/0
 18406 ;;		Unchanged: 0/0
 18407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18409 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18411 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18412 ;;Total ram usage:       15 bytes
 18413 ;; Hardware stack levels used: 1
 18414 ;; Hardware stack levels required when called: 5
 18415 ;; This function calls:
 18416 ;;		_SDCard_end_transaction
 18417 ;;		_SPI_SD_receive
 18418 ;;		___SDCard_command_r1
 18419 ;; This function is called by:
 18420 ;;		_SDCard_init
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424                           	psect	text21
 18425   01F2F4                     __ptext21:
 18426                           	callstack 0
 18427   01F2F4                     _SDCard_command:
 18428                           	callstack 119
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;incstack = 0
 18432                           ;SDCard_command@command stored from wreg
 18433   01F2F4  6E33               	movwf	SDCard_command@command^(0+1280),c
 18434   01F2F6                     
 18435                           ;../src/boards/../../drivers/SDCard.c: 316: int SDCard_command(uint8_t command, uint32_t
      +                           argument, void *response_buffer, unsigned int length);../src/boards/../../drivers/SDCar
      +                          d.c: 317: {;../src/boards/../../drivers/SDCard.c: 318:     struct SPI *spi = ctx_.spi;
 18436   01F2F6  C7A8  F534         	movff	_ctx_,SDCard_command@spi
 18437   01F2FA  C7A9  F535         	movff	_ctx_+1,SDCard_command@spi+1
 18438                           
 18439                           ;../src/boards/../../drivers/SDCard.c: 319:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 320:     uint8_t *responsep = (uint8_t*)response_buffer;
 18440   01F2FE  C52F  F538         	movff	SDCard_command@response_buffer,SDCard_command@responsep
 18441   01F302  C530  F539         	movff	SDCard_command@response_buffer+1,SDCard_command@responsep+1
 18442   01F306                     
 18443                           ;../src/boards/../../drivers/SDCard.c: 322:     result = __SDCard_command_r1(command, ar
      +                          gument, responsep);
 18444   01F306  C52B  F51B         	movff	SDCard_command@argument,___SDCard_command_r1@argument
 18445   01F30A  C52C  F51C         	movff	SDCard_command@argument+1,___SDCard_command_r1@argument+1
 18446   01F30E  C52D  F51D         	movff	SDCard_command@argument+2,___SDCard_command_r1@argument+2
 18447   01F312  C52E  F51E         	movff	SDCard_command@argument+3,___SDCard_command_r1@argument+3
 18448   01F316  C538  F51F         	movff	SDCard_command@responsep,___SDCard_command_r1@r1
 18449   01F31A  C539  F520         	movff	SDCard_command@responsep+1,___SDCard_command_r1@r1+1
 18450   01F31E  5033               	movf	SDCard_command@command^(0+1280),w,c
 18451   01F320  EC23  F0F3         	call	___SDCard_command_r1
 18452   01F324  C51B  F536         	movff	?___SDCard_command_r1,SDCard_command@result
 18453   01F328  C51C  F537         	movff	?___SDCard_command_r1+1,SDCard_command@result+1
 18454   01F32C                     
 18455                           ;../src/boards/../../drivers/SDCard.c: 323:     if (result != 0) {
 18456   01F32C  5036               	movf	SDCard_command@result^(0+1280),w,c
 18457   01F32E  1037               	iorwf	(SDCard_command@result+1)^(0+1280),w,c
 18458   01F330  B4D8               	btfsc	status,2,c
 18459   01F332  EF9D  F0F9         	goto	u33161
 18460   01F336  EF9F  F0F9         	goto	u33160
 18461   01F33A                     u33161:
 18462   01F33A  EFA3  F0F9         	goto	l23877
 18463   01F33E                     u33160:
 18464   01F33E                     
 18465                           ;../src/boards/../../drivers/SDCard.c: 324:         SDCard_end_transaction();
 18466   01F33E  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 18467   01F342  EFB7  F0F9         	goto	l2527
 18468   01F346                     l23877:
 18469                           
 18470                           ;../src/boards/../../drivers/SDCard.c: 328:     SPI_SD_receive(spi, &responsep[1], lengt
      +                          h - 1);
 18471   01F346  C534  F504         	movff	SDCard_command@spi,SPI_SD_receive@ctx_
 18472   01F34A  C535  F505         	movff	SDCard_command@spi+1,SPI_SD_receive@ctx_+1
 18473   01F34E  0E01               	movlw	1
 18474   01F350  2438               	addwf	SDCard_command@responsep^(0+1280),w,c
 18475   01F352  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 18476   01F354  0E00               	movlw	0
 18477   01F356  2039               	addwfc	(SDCard_command@responsep+1)^(0+1280),w,c
 18478   01F358  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 18479   01F35A  0EFF               	movlw	255
 18480   01F35C  2431               	addwf	SDCard_command@length^(0+1280),w,c
 18481   01F35E  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 18482   01F360  0EFF               	movlw	255
 18483   01F362  2032               	addwfc	(SDCard_command@length+1)^(0+1280),w,c
 18484   01F364  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 18485   01F366  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 18486                           
 18487                           ;../src/boards/../../drivers/SDCard.c: 329:     SDCard_end_transaction();
 18488   01F36A  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 18489   01F36E                     l2527:
 18490   01F36E  0012               	return		;funcret
 18491   01F370                     __end_of_SDCard_command:
 18492                           	callstack 0
 18493                           
 18494 ;; *************** function _setup_monitor *****************
 18495 ;; Defined at:
 18496 ;;		line 268 in file "../src/w65_main.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;		None
 18499 ;; Auto vars:     Size  Location     Type
 18500 ;;  rs              2   24[BANK7 ] int 
 18501 ;;  dat             1    0        unsigned char 
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  2   22[BANK7 ] int 
 18504 ;; Registers used:
 18505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18511 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18512 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18514 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18515 ;;Total ram usage:        4 bytes
 18516 ;; Hardware stack levels used: 1
 18517 ;; Hardware stack levels required when called: 25
 18518 ;; This function calls:
 18519 ;;		_drive_cpu
 18520 ;;		_load_program
 18521 ;;		_printf
 18522 ;;		_setup_tomer0
 18523 ;;		_start_W65
 18524 ;;		_write_sram
 18525 ;; This function is called by:
 18526 ;;		_main
 18527 ;; This function uses a non-reentrant model
 18528 ;;
 18529                           
 18530                           	psect	text22
 18531   01E858                     __ptext22:
 18532                           	callstack 0
 18533   01E858                     _setup_monitor:
 18534                           	callstack 101
 18535   01E858                     
 18536                           ;../src/w65_main.c: 270:  int rs;;../src/w65_main.c: 271:  uint8_t dat;;../src/w65_main.
      +                          c: 273:  printf("Install Monitor Program..........\r\n");
 18537   01E858  0E22               	movlw	low STR_78
 18538   01E85A  0105               	movlb	5	; () banked
 18539   01E85C  6FAD               	movwf	printf@fmt& (0+255),b
 18540   01E85E  0EF7               	movlw	high STR_78
 18541   01E860  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 18542   01E862  ECDA  F0FF         	call	_printf	;wreg free
 18543   01E866                     
 18544                           ;../src/w65_main.c: 275:  if (cpu_flg) {
 18545   01E866  0107               	movlb	7	; () banked
 18546   01E868  51E5               	movf	_cpu_flg& (0+255),w,b
 18547   01E86A  B4D8               	btfsc	status,2,c
 18548   01E86C  EF3A  F0F4         	goto	u34841
 18549   01E870  EF3C  F0F4         	goto	u34840
 18550   01E874                     u34841:
 18551   01E874  EF44  F0F4         	goto	l25013
 18552   01E878                     u34840:
 18553   01E878                     
 18554                           ; BSR set to: 7
 18555                           ;../src/w65_main.c: 276:   arg[0] = mon16;
 18556   01E878  0EE3               	movlw	low STR_52
 18557   01E87A  6F9E               	movwf	_arg& (0+255),b
 18558   01E87C  0EFE               	movlw	high STR_52
 18559   01E87E  6F9F               	movwf	(_arg+1)& (0+255),b
 18560   01E880                     
 18561                           ; BSR set to: 7
 18562                           ;../src/w65_main.c: 277:   mon = 1;
 18563   01E880  0E01               	movlw	1
 18564   01E882  6FC8               	movwf	_mon& (0+255),b
 18565                           
 18566                           ;../src/w65_main.c: 278:  }
 18567   01E884  EF49  F0F4         	goto	l25017
 18568   01E888                     l25013:
 18569                           
 18570                           ; BSR set to: 7
 18571                           ;../src/w65_main.c: 280:   arg[0] = mon02;
 18572   01E888  0ED8               	movlw	low STR_51
 18573   01E88A  6F9E               	movwf	_arg& (0+255),b
 18574   01E88C  0EFE               	movlw	high STR_51
 18575   01E88E  6F9F               	movwf	(_arg+1)& (0+255),b
 18576   01E890                     
 18577                           ; BSR set to: 7
 18578                           ;../src/w65_main.c: 281:   mon = 0;
 18579   01E890  6BC8               	clrf	_mon& (0+255),b
 18580   01E892                     l25017:
 18581                           
 18582                           ; BSR set to: 7
 18583                           ;../src/w65_main.c: 283:  rs = load_program((uint8_t *)arg[0]);
 18584   01E892  C79E  F700         	movff	_arg,load_program@fname
 18585   01E896  C79F  F701         	movff	_arg+1,load_program@fname+1
 18586   01E89A  EC86  F0AE         	call	_load_program	;wreg free
 18587   01E89E  C700  F718         	movff	?_load_program,setup_monitor@rs
 18588   01E8A2  C701  F719         	movff	?_load_program+1,setup_monitor@rs+1
 18589   01E8A6                     
 18590                           ;../src/w65_main.c: 284:  if ( rs ) return rs;
 18591   01E8A6  0107               	movlb	7	; () banked
 18592   01E8A8  5118               	movf	setup_monitor@rs& (0+255),w,b
 18593   01E8AA  1119               	iorwf	(setup_monitor@rs+1)& (0+255),w,b
 18594   01E8AC  B4D8               	btfsc	status,2,c
 18595   01E8AE  EF5B  F0F4         	goto	u34851
 18596   01E8B2  EF5D  F0F4         	goto	u34850
 18597   01E8B6                     u34851:
 18598   01E8B6  EF63  F0F4         	goto	l25023
 18599   01E8BA                     u34850:
 18600   01E8BA                     
 18601                           ; BSR set to: 7
 18602   01E8BA  C718  F716         	movff	setup_monitor@rs,?_setup_monitor
 18603   01E8BE  C719  F717         	movff	setup_monitor@rs+1,?_setup_monitor+1
 18604   01E8C2  EF80  F0F4         	goto	l1548
 18605   01E8C6                     l25023:
 18606                           
 18607                           ; BSR set to: 7
 18608                           ;../src/w65_main.c: 287:  write_sram(0, &cpu_flg, 1);
 18609   01E8C6  0E00               	movlw	0
 18610   01E8C8  6E04               	movwf	write_sram@addr^(0+1280),c
 18611   01E8CA  0E00               	movlw	0
 18612   01E8CC  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 18613   01E8CE  0E00               	movlw	0
 18614   01E8D0  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 18615   01E8D2  0E00               	movlw	0
 18616   01E8D4  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 18617   01E8D6  0EE5               	movlw	low _cpu_flg
 18618   01E8D8  6E08               	movwf	write_sram@buf^(0+1280),c
 18619   01E8DA  0E07               	movlw	high _cpu_flg
 18620   01E8DC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 18621   01E8DE  0E00               	movlw	0
 18622   01E8E0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 18623   01E8E2  0E01               	movlw	1
 18624   01E8E4  6E0A               	movwf	write_sram@len^(0+1280),c
 18625   01E8E6  EC9F  F0E8         	call	_write_sram	;wreg free
 18626   01E8EA                     
 18627                           ;../src/w65_main.c: 292:  start_W65();
 18628   01E8EA  EC82  F0FF         	call	_start_W65	;wreg free
 18629   01E8EE                     
 18630                           ;../src/w65_main.c: 293:  setup_tomer0();
 18631   01E8EE  ECD6  F000         	call	_setup_tomer0	;wreg free
 18632   01E8F2                     
 18633                           ;../src/w65_main.c: 294:  drive_cpu();
 18634   01E8F2  ECA0  F0FE         	call	_drive_cpu	;wreg free
 18635   01E8F6                     
 18636                           ;../src/w65_main.c: 295:  return 0;
 18637   01E8F6  0E00               	movlw	0
 18638   01E8F8  0107               	movlb	7	; () banked
 18639   01E8FA  6F17               	movwf	(?_setup_monitor+1)& (0+255),b
 18640   01E8FC  0E00               	movlw	0
 18641   01E8FE  6F16               	movwf	?_setup_monitor& (0+255),b
 18642   01E900                     l1548:
 18643                           
 18644                           ; BSR set to: 7
 18645   01E900  0012               	return		;funcret
 18646   01E902                     __end_of_setup_monitor:
 18647                           	callstack 0
 18648                           
 18649 ;; *************** function _start_W65 *****************
 18650 ;; Defined at:
 18651 ;;		line 260 in file "../src/boards/w65_bd.c"
 18652 ;; Parameters:    Size  Location     Type
 18653 ;;		None
 18654 ;; Auto vars:     Size  Location     Type
 18655 ;;		None
 18656 ;; Return value:  Size  Location     Type
 18657 ;;                  1    wreg      void 
 18658 ;; Registers used:
 18659 ;;		wreg, status,2, cstack
 18660 ;; Tracked objects:
 18661 ;;		On entry : 0/0
 18662 ;;		On exit  : 0/0
 18663 ;;		Unchanged: 0/0
 18664 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18669 ;;Total ram usage:        0 bytes
 18670 ;; Hardware stack levels used: 1
 18671 ;; Hardware stack levels required when called: 2
 18672 ;; This function calls:
 18673 ;;		_bus_release_req
 18674 ;; This function is called by:
 18675 ;;		_setup_monitor
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text23
 18680   01FF04                     __ptext23:
 18681                           	callstack 0
 18682   01FF04                     _start_W65:
 18683                           	callstack 123
 18684   01FF04                     
 18685                           ;../src/boards/w65_bd.c: 262:  bus_release_req();
 18686   01FF04  EC36  F001         	call	_bus_release_req	;wreg free
 18687   01FF08                     
 18688                           ;../src/boards/w65_bd.c: 265:  IVTLOCK = 0x55;
 18689   01FF08  0E55               	movlw	85
 18690   01FF0A  0104               	movlb	4	; () banked
 18691   01FF0C  6F59               	movwf	89,b	;volatile
 18692   01FF0E                     
 18693                           ; BSR set to: 4
 18694                           ;../src/boards/w65_bd.c: 266:  IVTLOCK = 0xAA;
 18695   01FF0E  0EAA               	movlw	170
 18696   01FF10  6F59               	movwf	89,b	;volatile
 18697   01FF12                     
 18698                           ; BSR set to: 4
 18699                           ;../src/boards/w65_bd.c: 267:  IVTLOCKbits.IVTLOCKED = 0x00;
 18700   01FF12  9159               	bcf	89,0,b	;volatile
 18701   01FF14                     
 18702                           ; BSR set to: 4
 18703                           ;../src/boards/w65_bd.c: 270:  IVTBASE = 0x000008;
 18704   01FF14  0E08               	movlw	8
 18705   01FF16  6F5D               	movwf	93,b	;volatile
 18706   01FF18  0E00               	movlw	0
 18707   01FF1A  6F5E               	movwf	94,b	;volatile
 18708   01FF1C  0E00               	movlw	0
 18709   01FF1E  6F5F               	movwf	95,b	;volatile
 18710   01FF20                     
 18711                           ; BSR set to: 4
 18712                           ;../src/boards/w65_bd.c: 273:  IVTLOCK = 0x55;
 18713   01FF20  0E55               	movlw	85
 18714   01FF22  6F59               	movwf	89,b	;volatile
 18715   01FF24                     
 18716                           ; BSR set to: 4
 18717                           ;../src/boards/w65_bd.c: 274:  IVTLOCK = 0xAA;
 18718   01FF24  0EAA               	movlw	170
 18719   01FF26  6F59               	movwf	89,b	;volatile
 18720   01FF28                     
 18721                           ; BSR set to: 4
 18722                           ;../src/boards/w65_bd.c: 275:  IVTLOCKbits.IVTLOCKED = 0x01;
 18723   01FF28  8159               	bsf	89,0,b	;volatile
 18724   01FF2A                     
 18725                           ; BSR set to: 4
 18726                           ;../src/boards/w65_bd.c: 278:  CLCSELECT = 0;
 18727   01FF2A  0100               	movlb	0	; () banked
 18728   01FF2C  6BD5               	clrf	213,b	;volatile
 18729   01FF2E                     
 18730                           ; BSR set to: 0
 18731                           ;../src/boards/w65_bd.c: 279:  G2POL = 1;
 18732   01FF2E  83D7               	bsf	215,1,b	;volatile
 18733   01FF30                     
 18734                           ; BSR set to: 0
 18735                           ;../src/boards/w65_bd.c: 282:  LATE0 = 1;
 18736   01FF30  80C2               	bsf	1218,0,c	;volatile
 18737   01FF32                     
 18738                           ; BSR set to: 0
 18739   01FF32  0012               	return		;funcret
 18740   01FF34                     __end_of_start_W65:
 18741                           	callstack 0
 18742                           
 18743 ;; *************** function _setup_tomer0 *****************
 18744 ;; Defined at:
 18745 ;;		line 62 in file "../src/boards/w65_cmn.c"
 18746 ;; Parameters:    Size  Location     Type
 18747 ;;		None
 18748 ;; Auto vars:     Size  Location     Type
 18749 ;;		None
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  1    wreg      void 
 18752 ;; Registers used:
 18753 ;;		wreg, status,2
 18754 ;; Tracked objects:
 18755 ;;		On entry : 0/0
 18756 ;;		On exit  : 0/0
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18763 ;;Total ram usage:        0 bytes
 18764 ;; Hardware stack levels used: 1
 18765 ;; Hardware stack levels required when called: 1
 18766 ;; This function calls:
 18767 ;;		Nothing
 18768 ;; This function is called by:
 18769 ;;		_setup_monitor
 18770 ;; This function uses a non-reentrant model
 18771 ;;
 18772                           
 18773                           	psect	text24
 18774   0001AC                     __ptext24:
 18775                           	callstack 0
 18776   0001AC                     _setup_tomer0:
 18777                           	callstack 124
 18778   0001AC                     
 18779                           ;../src/boards/w65_cmn.c: 66:  T0CON0 = 0x84;
 18780   0001AC  0E84               	movlw	132
 18781   0001AE  0103               	movlb	3	; () banked
 18782   0001B0  6F1A               	movwf	26,b	;volatile
 18783                           
 18784                           ;../src/boards/w65_cmn.c: 70:  T0CON1 = 0xa1;
 18785   0001B2  0EA1               	movlw	161
 18786   0001B4  6F1B               	movwf	27,b	;volatile
 18787   0001B6                     
 18788                           ; BSR set to: 3
 18789                           ;../src/boards/w65_cmn.c: 71:  MFOEN = 1;
 18790   0001B6  0100               	movlb	0	; () banked
 18791   0001B8  8BB3               	bsf	179,5,b	;volatile
 18792   0001BA                     
 18793                           ; BSR set to: 0
 18794                           ;../src/boards/w65_cmn.c: 72:  TMR0H = 0xff;
 18795   0001BA  0103               	movlb	3	; () banked
 18796   0001BC  6919               	setf	25,b	;volatile
 18797   0001BE                     
 18798                           ; BSR set to: 3
 18799                           ;../src/boards/w65_cmn.c: 73:  TMR0L = 0x00;
 18800   0001BE  6B18               	clrf	24,b	;volatile
 18801   0001C0                     
 18802                           ; BSR set to: 3
 18803                           ;../src/boards/w65_cmn.c: 74:  TMR0IF =0;
 18804   0001C0  9EB1               	bcf	1201,7,c	;volatile
 18805   0001C2                     
 18806                           ; BSR set to: 3
 18807                           ;../src/boards/w65_cmn.c: 75:  TMR0IE = 1;
 18808   0001C2  8EA1               	bsf	1185,7,c	;volatile
 18809   0001C4                     
 18810                           ; BSR set to: 3
 18811   0001C4  0012               	return		;funcret
 18812   0001C6                     __end_of_setup_tomer0:
 18813                           	callstack 0
 18814                           
 18815 ;; *************** function _set_arg *****************
 18816 ;; Defined at:
 18817 ;;		line 597 in file "../src/w65_main.c"
 18818 ;; Parameters:    Size  Location     Type
 18819 ;;  buf             2    3[COMRAM] PTR unsigned char 
 18820 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 18821 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;  i               2    5[COMRAM] int 
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  1    wreg      void 
 18826 ;; Registers used:
 18827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 18833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 18837 ;;Total ram usage:        4 bytes
 18838 ;; Hardware stack levels used: 1
 18839 ;; Hardware stack levels required when called: 1
 18840 ;; This function calls:
 18841 ;;		Nothing
 18842 ;; This function is called by:
 18843 ;;		_main
 18844 ;; This function uses a non-reentrant model
 18845 ;;
 18846                           
 18847                           	psect	text25
 18848   01AE0A                     __ptext25:
 18849                           	callstack 0
 18850   01AE0A                     _set_arg:
 18851                           	callstack 125
 18852   01AE0A                     
 18853                           ;../src/w65_main.c: 599:  int i;;../src/w65_main.c: 601:  i=0;
 18854   01AE0A  0E00               	movlw	0
 18855   01AE0C  6E07               	movwf	(set_arg@i+1)^(0+1280),c
 18856   01AE0E  0E00               	movlw	0
 18857   01AE10  6E06               	movwf	set_arg@i^(0+1280),c
 18858                           
 18859                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 18860   01AE12  EFCD  F0D7         	goto	l17693
 18861   01AE16                     l17665:
 18862   01AE16  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 18863   01AE18  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 18864   01AE1A                     l17667:
 18865   01AE1A  C504  F4F6         	movff	set_arg@buf,tblptrl
 18866   01AE1E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 18867   01AE22  0E00               	movlw	low (__mediumconst shr (0+16))
 18868   01AE24  6EF8               	movwf	tblptru,c
 18869   01AE26  0E3F               	movlw	(high __ramtop+-1)
 18870   01AE28  64F7               	cpfsgt	tblptrh,c
 18871   01AE2A  D003               	bra	u22697
 18872   01AE2C  0008               	tblrd		*
 18873   01AE2E  50F5               	movf	tablat,w,c
 18874   01AE30  D005               	bra	u22690
 18875   01AE32                     u22697:
 18876   01AE32  C4F6 F4E9          	movff	tblptrl,fsr0l
 18877   01AE36  C4F7 F4EA          	movff	tblptrh,fsr0h
 18878   01AE3A  50EF               	movf	indf0,w,c
 18879   01AE3C                     u22690:
 18880   01AE3C  0A20               	xorlw	32
 18881   01AE3E  B4D8               	btfsc	status,2,c
 18882   01AE40  EF24  F0D7         	goto	u22701
 18883   01AE44  EF26  F0D7         	goto	u22700
 18884   01AE48                     u22701:
 18885   01AE48  EF0B  F0D7         	goto	l17665
 18886   01AE4C                     u22700:
 18887   01AE4C                     
 18888                           ;../src/w65_main.c: 604:   arg[i] = buf;
 18889   01AE4C  90D8               	bcf	status,0,c
 18890   01AE4E  3406               	rlcf	set_arg@i^(0+1280),w,c
 18891   01AE50  6ED9               	movwf	fsr2l,c
 18892   01AE52  3407               	rlcf	(set_arg@i+1)^(0+1280),w,c
 18893   01AE54  6EDA               	movwf	fsr2h,c
 18894   01AE56  0E9E               	movlw	low _arg
 18895   01AE58  26D9               	addwf	fsr2l,f,c
 18896   01AE5A  0E07               	movlw	high _arg
 18897   01AE5C  22DA               	addwfc	fsr2h,f,c
 18898   01AE5E  C504  F4DE         	movff	set_arg@buf,postinc2
 18899   01AE62  C505  F4DD         	movff	set_arg@buf+1,postdec2
 18900   01AE66                     
 18901                           ;../src/w65_main.c: 605:   if ( !*buf ) break;
 18902   01AE66  C504  F4F6         	movff	set_arg@buf,tblptrl
 18903   01AE6A  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 18904   01AE6E  0E00               	movlw	low (__mediumconst shr (0+16))
 18905   01AE70  6EF8               	movwf	tblptru,c
 18906   01AE72  0E3F               	movlw	(high __ramtop+-1)
 18907   01AE74  64F7               	cpfsgt	tblptrh,c
 18908   01AE76  D003               	bra	u22717
 18909   01AE78  0008               	tblrd		*
 18910   01AE7A  50F5               	movf	tablat,w,c
 18911   01AE7C  D005               	bra	u22710
 18912   01AE7E                     u22717:
 18913   01AE7E  C4F6 F4E9          	movff	tblptrl,fsr0l
 18914   01AE82  C4F7 F4EA          	movff	tblptrh,fsr0h
 18915   01AE86  50EF               	movf	indf0,w,c
 18916   01AE88                     u22710:
 18917   01AE88  0900               	iorlw	0
 18918   01AE8A  A4D8               	btfss	status,2,c
 18919   01AE8C  EF4A  F0D7         	goto	u22721
 18920   01AE90  EF4C  F0D7         	goto	u22720
 18921   01AE94                     u22721:
 18922   01AE94  EF50  F0D7         	goto	l17677
 18923   01AE98                     u22720:
 18924   01AE98  EFDB  F0D7         	goto	l1676
 18925   01AE9C                     l17675:
 18926   01AE9C  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 18927   01AE9E  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 18928   01AEA0                     l17677:
 18929   01AEA0  C504  F4F6         	movff	set_arg@buf,tblptrl
 18930   01AEA4  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 18931   01AEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 18932   01AEAA  6EF8               	movwf	tblptru,c
 18933   01AEAC  0E3F               	movlw	(high __ramtop+-1)
 18934   01AEAE  64F7               	cpfsgt	tblptrh,c
 18935   01AEB0  D003               	bra	u22737
 18936   01AEB2  0008               	tblrd		*
 18937   01AEB4  50F5               	movf	tablat,w,c
 18938   01AEB6  D005               	bra	u22730
 18939   01AEB8                     u22737:
 18940   01AEB8  C4F6 F4E9          	movff	tblptrl,fsr0l
 18941   01AEBC  C4F7 F4EA          	movff	tblptrh,fsr0h
 18942   01AEC0  50EF               	movf	indf0,w,c
 18943   01AEC2                     u22730:
 18944   01AEC2  0900               	iorlw	0
 18945   01AEC4  B4D8               	btfsc	status,2,c
 18946   01AEC6  EF67  F0D7         	goto	u22741
 18947   01AECA  EF69  F0D7         	goto	u22740
 18948   01AECE                     u22741:
 18949   01AECE  EF82  F0D7         	goto	l17681
 18950   01AED2                     u22740:
 18951   01AED2  C504  F4F6         	movff	set_arg@buf,tblptrl
 18952   01AED6  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 18953   01AEDA  0E00               	movlw	low (__mediumconst shr (0+16))
 18954   01AEDC  6EF8               	movwf	tblptru,c
 18955   01AEDE  0E3F               	movlw	(high __ramtop+-1)
 18956   01AEE0  64F7               	cpfsgt	tblptrh,c
 18957   01AEE2  D003               	bra	u22757
 18958   01AEE4  0008               	tblrd		*
 18959   01AEE6  50F5               	movf	tablat,w,c
 18960   01AEE8  D005               	bra	u22750
 18961   01AEEA                     u22757:
 18962   01AEEA  C4F6 F4E9          	movff	tblptrl,fsr0l
 18963   01AEEE  C4F7 F4EA          	movff	tblptrh,fsr0h
 18964   01AEF2  50EF               	movf	indf0,w,c
 18965   01AEF4                     u22750:
 18966   01AEF4  0A20               	xorlw	32
 18967   01AEF6  A4D8               	btfss	status,2,c
 18968   01AEF8  EF80  F0D7         	goto	u22761
 18969   01AEFC  EF82  F0D7         	goto	u22760
 18970   01AF00                     u22761:
 18971   01AF00  EF4E  F0D7         	goto	l17675
 18972   01AF04                     u22760:
 18973   01AF04                     l17681:
 18974                           
 18975                           ;../src/w65_main.c: 607:   if ( !*buf ) break;
 18976   01AF04  C504  F4F6         	movff	set_arg@buf,tblptrl
 18977   01AF08  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 18978   01AF0C  0E00               	movlw	low (__mediumconst shr (0+16))
 18979   01AF0E  6EF8               	movwf	tblptru,c
 18980   01AF10  0E3F               	movlw	(high __ramtop+-1)
 18981   01AF12  64F7               	cpfsgt	tblptrh,c
 18982   01AF14  D003               	bra	u22777
 18983   01AF16  0008               	tblrd		*
 18984   01AF18  50F5               	movf	tablat,w,c
 18985   01AF1A  D005               	bra	u22770
 18986   01AF1C                     u22777:
 18987   01AF1C  C4F6 F4E9          	movff	tblptrl,fsr0l
 18988   01AF20  C4F7 F4EA          	movff	tblptrh,fsr0h
 18989   01AF24  50EF               	movf	indf0,w,c
 18990   01AF26                     u22770:
 18991   01AF26  0900               	iorlw	0
 18992   01AF28  A4D8               	btfss	status,2,c
 18993   01AF2A  EF99  F0D7         	goto	u22781
 18994   01AF2E  EF9B  F0D7         	goto	u22780
 18995   01AF32                     u22781:
 18996   01AF32  EF9D  F0D7         	goto	l17685
 18997   01AF36                     u22780:
 18998   01AF36  EFDB  F0D7         	goto	l1676
 18999   01AF3A                     l17685:
 19000                           
 19001                           ;../src/w65_main.c: 608:   if ( *buf == ' ' ) *buf++ = 0;
 19002   01AF3A  C504  F4F6         	movff	set_arg@buf,tblptrl
 19003   01AF3E  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 19004   01AF42  0E00               	movlw	low (__mediumconst shr (0+16))
 19005   01AF44  6EF8               	movwf	tblptru,c
 19006   01AF46  0E3F               	movlw	(high __ramtop+-1)
 19007   01AF48  64F7               	cpfsgt	tblptrh,c
 19008   01AF4A  D003               	bra	u22797
 19009   01AF4C  0008               	tblrd		*
 19010   01AF4E  50F5               	movf	tablat,w,c
 19011   01AF50  D005               	bra	u22790
 19012   01AF52                     u22797:
 19013   01AF52  C4F6 F4E9          	movff	tblptrl,fsr0l
 19014   01AF56  C4F7 F4EA          	movff	tblptrh,fsr0h
 19015   01AF5A  50EF               	movf	indf0,w,c
 19016   01AF5C                     u22790:
 19017   01AF5C  0A20               	xorlw	32
 19018   01AF5E  A4D8               	btfss	status,2,c
 19019   01AF60  EFB4  F0D7         	goto	u22801
 19020   01AF64  EFB6  F0D7         	goto	u22800
 19021   01AF68                     u22801:
 19022   01AF68  EFCB  F0D7         	goto	l17691
 19023   01AF6C                     u22800:
 19024   01AF6C  C504  F4F6         	movff	set_arg@buf,tblptrl
 19025   01AF70  C505  F4F7         	movff	set_arg@buf+1,tblptrh
 19026   01AF74  0E00               	movlw	low (__mediumconst shr (0+16))
 19027   01AF76  6EF8               	movwf	tblptru,c
 19028   01AF78  0E3F               	movlw	(high __ramtop+-1)
 19029   01AF7A  64F7               	cpfsgt	tblptrh,c
 19030   01AF7C  D004               	bra	u22817
 19031   01AF7E  0E00               	movlw	0
 19032   01AF80  6EF5               	movwf	tablat,c
 19033   01AF82  000C               	tblwt		*
 19034   01AF84  D006               	bra	u22810
 19035   01AF86                     u22817:
 19036   01AF86  C4F6 F4E9          	movff	tblptrl,fsr0l
 19037   01AF8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 19038   01AF8E  0E00               	movlw	0
 19039   01AF90  6EEF               	movwf	indf0,c
 19040   01AF92                     u22810:
 19041   01AF92  4A04               	infsnz	set_arg@buf^(0+1280),f,c
 19042   01AF94  2A05               	incf	(set_arg@buf+1)^(0+1280),f,c
 19043   01AF96                     l17691:
 19044                           
 19045                           ;../src/w65_main.c: 609:   i++;
 19046   01AF96  4A06               	infsnz	set_arg@i^(0+1280),f,c
 19047   01AF98  2A07               	incf	(set_arg@i+1)^(0+1280),f,c
 19048   01AF9A                     l17693:
 19049                           
 19050                           ;../src/w65_main.c: 602:  while( i < 5 ) {
 19051   01AF9A  BE07               	btfsc	(set_arg@i+1)^(0+1280),7,c
 19052   01AF9C  EFD9  F0D7         	goto	u22821
 19053   01AFA0  5007               	movf	(set_arg@i+1)^(0+1280),w,c
 19054   01AFA2  E109               	bnz	u22820
 19055   01AFA4  0E05               	movlw	5
 19056   01AFA6  5C06               	subwf	set_arg@i^(0+1280),w,c
 19057   01AFA8  A0D8               	btfss	status,0,c
 19058   01AFAA  EFD9  F0D7         	goto	u22821
 19059   01AFAE  EFDB  F0D7         	goto	u22820
 19060   01AFB2                     u22821:
 19061   01AFB2  EF0D  F0D7         	goto	l17667
 19062   01AFB6                     u22820:
 19063   01AFB6                     l1676:
 19064   01AFB6  0012               	return		;funcret
 19065   01AFB8                     __end_of_set_arg:
 19066                           	callstack 0
 19067                           
 19068 ;; *************** function _f_readdir *****************
 19069 ;; Defined at:
 19070 ;;		line 4695 in file "../fatfs/ff.c"
 19071 ;; Parameters:    Size  Location     Type
 19072 ;;  dp              2  137[BANK6 ] PTR struct .
 19073 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 19074 ;;  fno             2  139[BANK6 ] PTR struct .
 19075 ;;		 -> scan_files1@fno(22), scan_files@fno(22), 
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;  fs              2  141[BANK6 ] PTR struct .
 19078 ;;		 -> fs(564), NULL(0), 
 19079 ;;  res             1  143[BANK6 ] enum E597
 19080 ;; Return value:  Size  Location     Type
 19081 ;;                  1    wreg      enum E597
 19082 ;; Registers used:
 19083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 19089 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19090 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19092 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19093 ;;Total ram usage:        7 bytes
 19094 ;; Hardware stack levels used: 1
 19095 ;; Hardware stack levels required when called: 18
 19096 ;; This function calls:
 19097 ;;		_dir_next
 19098 ;;		_dir_read
 19099 ;;		_dir_sdi
 19100 ;;		_get_fileinfo
 19101 ;;		_validate
 19102 ;; This function is called by:
 19103 ;;		_scan_files
 19104 ;;		_scan_files1
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           	psect	text26
 19109   01DAF6                     __ptext26:
 19110                           	callstack 0
 19111   01DAF6                     _f_readdir:
 19112                           	callstack 107
 19113   01DAF6                     
 19114                           ;../fatfs/ff.c: 4696:  DIR* dp,;../fatfs/ff.c: 4697:  FILINFO* fno;../fatfs/ff.c: 4699: 
      +                          {;../fatfs/ff.c: 4700:  FRESULT res;;../fatfs/ff.c: 4701:  FATFS *fs;;../fatfs/ff.c: 470
      +                          5:  res = validate(&dp->obj, &fs);
 19115   01DAF6  C689  F5BE         	movff	f_readdir@dp,validate@obj
 19116   01DAFA  C68A  F5BF         	movff	f_readdir@dp+1,validate@obj+1
 19117   01DAFE  0E8D               	movlw	low f_readdir@fs
 19118   01DB00  0105               	movlb	5	; () banked
 19119   01DB02  6FC0               	movwf	validate@rfs& (0+255),b
 19120   01DB04  0E06               	movlw	high f_readdir@fs
 19121   01DB06  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 19122   01DB08  ECA3  F0E9         	call	_validate	;wreg free
 19123   01DB0C  0106               	movlb	6	; () banked
 19124   01DB0E  6F8F               	movwf	f_readdir@res& (0+255),b
 19125   01DB10                     
 19126                           ; BSR set to: 6
 19127                           ;../fatfs/ff.c: 4706:  if (res == FR_OK) {
 19128   01DB10  518F               	movf	f_readdir@res& (0+255),w,b
 19129   01DB12  A4D8               	btfss	status,2,c
 19130   01DB14  EF8E  F0ED         	goto	u33591
 19131   01DB18  EF90  F0ED         	goto	u33590
 19132   01DB1C                     u33591:
 19133   01DB1C  EFEC  F0ED         	goto	l24107
 19134   01DB20                     u33590:
 19135   01DB20                     
 19136                           ; BSR set to: 6
 19137                           ;../fatfs/ff.c: 4707:   if (!fno) {
 19138   01DB20  518B               	movf	f_readdir@fno& (0+255),w,b
 19139   01DB22  118C               	iorwf	(f_readdir@fno+1)& (0+255),w,b
 19140   01DB24  A4D8               	btfss	status,2,c
 19141   01DB26  EF97  F0ED         	goto	u33601
 19142   01DB2A  EF99  F0ED         	goto	u33600
 19143   01DB2E                     u33601:
 19144   01DB2E  EFAB  F0ED         	goto	l24091
 19145   01DB32                     u33600:
 19146   01DB32                     
 19147                           ; BSR set to: 6
 19148                           ;../fatfs/ff.c: 4708:    res = dir_sdi(dp, 0);
 19149   01DB32  C689  F63E         	movff	f_readdir@dp,dir_sdi@dp
 19150   01DB36  C68A  F63F         	movff	f_readdir@dp+1,dir_sdi@dp+1
 19151   01DB3A  0E00               	movlw	0
 19152   01DB3C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 19153   01DB3E  0E00               	movlw	0
 19154   01DB40  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 19155   01DB42  0E00               	movlw	0
 19156   01DB44  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 19157   01DB46  0E00               	movlw	0
 19158   01DB48  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 19159   01DB4A  EC72  F0BC         	call	_dir_sdi	;wreg free
 19160   01DB4E  0106               	movlb	6	; () banked
 19161   01DB50  6F8F               	movwf	f_readdir@res& (0+255),b
 19162                           
 19163                           ;../fatfs/ff.c: 4709:   } else {
 19164   01DB52  EFEC  F0ED         	goto	l24107
 19165   01DB56                     l24091:
 19166                           
 19167                           ; BSR set to: 6
 19168                           ;../fatfs/ff.c: 4711:    res = dir_read(dp, 0);
 19169   01DB56  C689  F67C         	movff	f_readdir@dp,dir_read@dp
 19170   01DB5A  C68A  F67D         	movff	f_readdir@dp+1,dir_read@dp+1
 19171   01DB5E  0E00               	movlw	0
 19172   01DB60  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 19173   01DB62  0E00               	movlw	0
 19174   01DB64  6F7E               	movwf	dir_read@vol& (0+255),b
 19175   01DB66  ECB0  F0D8         	call	_dir_read	;wreg free
 19176   01DB6A  0106               	movlb	6	; () banked
 19177   01DB6C  6F8F               	movwf	f_readdir@res& (0+255),b
 19178   01DB6E                     
 19179                           ; BSR set to: 6
 19180                           ;../fatfs/ff.c: 4712:    if (res == FR_NO_FILE) res = FR_OK;
 19181   01DB6E  0E04               	movlw	4
 19182   01DB70  198F               	xorwf	f_readdir@res& (0+255),w,b
 19183   01DB72  A4D8               	btfss	status,2,c
 19184   01DB74  EFBE  F0ED         	goto	u33611
 19185   01DB78  EFC0  F0ED         	goto	u33610
 19186   01DB7C                     u33611:
 19187   01DB7C  EFC1  F0ED         	goto	l24097
 19188   01DB80                     u33610:
 19189   01DB80                     
 19190                           ; BSR set to: 6
 19191   01DB80  6B8F               	clrf	f_readdir@res& (0+255),b
 19192   01DB82                     l24097:
 19193                           
 19194                           ; BSR set to: 6
 19195                           ;../fatfs/ff.c: 4713:    if (res == FR_OK) {
 19196   01DB82  518F               	movf	f_readdir@res& (0+255),w,b
 19197   01DB84  A4D8               	btfss	status,2,c
 19198   01DB86  EFC7  F0ED         	goto	u33621
 19199   01DB8A  EFC9  F0ED         	goto	u33620
 19200   01DB8E                     u33621:
 19201   01DB8E  EFEC  F0ED         	goto	l24107
 19202   01DB92                     u33620:
 19203   01DB92                     
 19204                           ; BSR set to: 6
 19205                           ;../fatfs/ff.c: 4714:     get_fileinfo(dp, fno);
 19206   01DB92  C689  F511         	movff	f_readdir@dp,get_fileinfo@dp
 19207   01DB96  C68A  F512         	movff	f_readdir@dp+1,get_fileinfo@dp+1
 19208   01DB9A  C68B  F513         	movff	f_readdir@fno,get_fileinfo@fno
 19209   01DB9E  C68C  F514         	movff	f_readdir@fno+1,get_fileinfo@fno+1
 19210   01DBA2  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 19211   01DBA6                     
 19212                           ;../fatfs/ff.c: 4715:     res = dir_next(dp, 0);
 19213   01DBA6  C689  F662         	movff	f_readdir@dp,dir_next@dp
 19214   01DBAA  C68A  F663         	movff	f_readdir@dp+1,dir_next@dp+1
 19215   01DBAE  0E00               	movlw	0
 19216   01DBB0  0106               	movlb	6	; () banked
 19217   01DBB2  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 19218   01DBB4  0E00               	movlw	0
 19219   01DBB6  6F64               	movwf	dir_next@stretch& (0+255),b
 19220   01DBB8  ECCF  F0B0         	call	_dir_next	;wreg free
 19221   01DBBC  0106               	movlb	6	; () banked
 19222   01DBBE  6F8F               	movwf	f_readdir@res& (0+255),b
 19223   01DBC0                     
 19224                           ; BSR set to: 6
 19225                           ;../fatfs/ff.c: 4716:     if (res == FR_NO_FILE) res = FR_OK;
 19226   01DBC0  0E04               	movlw	4
 19227   01DBC2  198F               	xorwf	f_readdir@res& (0+255),w,b
 19228   01DBC4  A4D8               	btfss	status,2,c
 19229   01DBC6  EFE7  F0ED         	goto	u33631
 19230   01DBCA  EFE9  F0ED         	goto	u33630
 19231   01DBCE                     u33631:
 19232   01DBCE  EFEC  F0ED         	goto	l840
 19233   01DBD2                     u33630:
 19234   01DBD2                     
 19235                           ; BSR set to: 6
 19236   01DBD2  6B8F               	clrf	f_readdir@res& (0+255),b
 19237   01DBD4  EFEC  F0ED         	goto	l24107
 19238   01DBD8                     l840:
 19239   01DBD8                     l24107:
 19240                           
 19241                           ; BSR set to: 6
 19242                           ;../fatfs/ff.c: 4721:  return res;
 19243   01DBD8  518F               	movf	f_readdir@res& (0+255),w,b
 19244   01DBDA                     
 19245                           ; BSR set to: 6
 19246   01DBDA  0012               	return		;funcret
 19247   01DBDC                     __end_of_f_readdir:
 19248                           	callstack 0
 19249                           
 19250 ;; *************** function _f_opendir *****************
 19251 ;; Defined at:
 19252 ;;		line 4599 in file "../fatfs/ff.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;  dp              2  175[BANK6 ] PTR struct .
 19255 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 19256 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 19257 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 19258 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 19259 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;  fs              2  179[BANK6 ] PTR struct .
 19262 ;;		 -> fs(564), NULL(0), 
 19263 ;;  res             1  181[BANK6 ] enum E597
 19264 ;; Return value:  Size  Location     Type
 19265 ;;                  1    wreg      enum E597
 19266 ;; Registers used:
 19267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19268 ;; Tracked objects:
 19269 ;;		On entry : 0/0
 19270 ;;		On exit  : 0/0
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 19273 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19274 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19276 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19277 ;;Total ram usage:        7 bytes
 19278 ;; Hardware stack levels used: 1
 19279 ;; Hardware stack levels required when called: 19
 19280 ;; This function calls:
 19281 ;;		_dir_sdi
 19282 ;;		_follow_path
 19283 ;;		_ld_clust
 19284 ;;		_mount_volume
 19285 ;; This function is called by:
 19286 ;;		_scan_files
 19287 ;;		_scan_files1
 19288 ;; This function uses a non-reentrant model
 19289 ;;
 19290                           
 19291                           	psect	text27
 19292   01BE28                     __ptext27:
 19293                           	callstack 0
 19294   01BE28                     _f_opendir:
 19295                           	callstack 106
 19296   01BE28                     
 19297                           ;../fatfs/ff.c: 4600:  DIR* dp,;../fatfs/ff.c: 4601:  const TCHAR* path;../fatfs/ff.c: 4
      +                          603: {;../fatfs/ff.c: 4604:  FRESULT res;;../fatfs/ff.c: 4605:  FATFS *fs;;../fatfs/ff.c
      +                          : 4609:  if (!dp) return FR_INVALID_OBJECT;
 19298   01BE28  0106               	movlb	6	; () banked
 19299   01BE2A  51AF               	movf	f_opendir@dp& (0+255),w,b
 19300   01BE2C  11B0               	iorwf	(f_opendir@dp+1)& (0+255),w,b
 19301   01BE2E  A4D8               	btfss	status,2,c
 19302   01BE30  EF1C  F0DF         	goto	u33501
 19303   01BE34  EF1E  F0DF         	goto	u33500
 19304   01BE38                     u33501:
 19305   01BE38  EF21  F0DF         	goto	l24043
 19306   01BE3C                     u33500:
 19307   01BE3C                     
 19308                           ; BSR set to: 6
 19309   01BE3C  0E09               	movlw	9
 19310   01BE3E  EFD2  F0DF         	goto	l823
 19311   01BE42                     l24043:
 19312                           
 19313                           ; BSR set to: 6
 19314                           ;../fatfs/ff.c: 4612:  res = mount_volume(&path, &fs, 0);
 19315   01BE42  0EB1               	movlw	low f_opendir@path
 19316   01BE44  6F81               	movwf	mount_volume@path& (0+255),b
 19317   01BE46  0E06               	movlw	high f_opendir@path
 19318   01BE48  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 19319   01BE4A  0EB3               	movlw	low f_opendir@fs
 19320   01BE4C  6F83               	movwf	mount_volume@rfs& (0+255),b
 19321   01BE4E  0E06               	movlw	high f_opendir@fs
 19322   01BE50  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 19323   01BE52  0E00               	movlw	0
 19324   01BE54  6F85               	movwf	mount_volume@mode& (0+255),b
 19325   01BE56  EC00  F080         	call	_mount_volume	;wreg free
 19326   01BE5A  0106               	movlb	6	; () banked
 19327   01BE5C  6FB5               	movwf	f_opendir@res& (0+255),b
 19328   01BE5E                     
 19329                           ; BSR set to: 6
 19330                           ;../fatfs/ff.c: 4613:  if (res == FR_OK) {
 19331   01BE5E  51B5               	movf	f_opendir@res& (0+255),w,b
 19332   01BE60  A4D8               	btfss	status,2,c
 19333   01BE62  EF35  F0DF         	goto	u33511
 19334   01BE66  EF37  F0DF         	goto	u33510
 19335   01BE6A                     u33511:
 19336   01BE6A  EFC3  F0DF         	goto	l824
 19337   01BE6E                     u33510:
 19338   01BE6E                     
 19339                           ; BSR set to: 6
 19340                           ;../fatfs/ff.c: 4614:   dp->obj.fs = fs;
 19341   01BE6E  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 19342   01BE72  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 19343   01BE76  C6B3  F4DE         	movff	f_opendir@fs,postinc2
 19344   01BE7A  C6B4  F4DD         	movff	f_opendir@fs+1,postdec2
 19345   01BE7E                     
 19346                           ; BSR set to: 6
 19347                           ;../fatfs/ff.c: 4616:   res = follow_path(dp, path);
 19348   01BE7E  C6AF  F684         	movff	f_opendir@dp,follow_path@dp
 19349   01BE82  C6B0  F685         	movff	f_opendir@dp+1,follow_path@dp+1
 19350   01BE86  C6B1  F686         	movff	f_opendir@path,follow_path@path
 19351   01BE8A  C6B2  F687         	movff	f_opendir@path+1,follow_path@path+1
 19352   01BE8E  EC61  F0C4         	call	_follow_path	;wreg free
 19353   01BE92  0106               	movlb	6	; () banked
 19354   01BE94  6FB5               	movwf	f_opendir@res& (0+255),b
 19355   01BE96                     
 19356                           ; BSR set to: 6
 19357                           ;../fatfs/ff.c: 4617:   if (res == FR_OK) {
 19358   01BE96  51B5               	movf	f_opendir@res& (0+255),w,b
 19359   01BE98  A4D8               	btfss	status,2,c
 19360   01BE9A  EF51  F0DF         	goto	u33521
 19361   01BE9E  EF53  F0DF         	goto	u33520
 19362   01BEA2                     u33521:
 19363   01BEA2  EFB8  F0DF         	goto	l24065
 19364   01BEA6                     u33520:
 19365   01BEA6                     
 19366                           ; BSR set to: 6
 19367                           ;../fatfs/ff.c: 4618:    if (!(dp->fn[11] & 0x80)) {
 19368   01BEA6  EE20 F027          	lfsr	2,39
 19369   01BEAA  51AF               	movf	f_opendir@dp& (0+255),w,b
 19370   01BEAC  26D9               	addwf	fsr2l,f,c
 19371   01BEAE  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 19372   01BEB0  22DA               	addwfc	fsr2h,f,c
 19373   01BEB2  BEDF               	btfsc	indf2,7,c
 19374   01BEB4  EF5E  F0DF         	goto	u33531
 19375   01BEB8  EF60  F0DF         	goto	u33530
 19376   01BEBC                     u33531:
 19377   01BEBC  EF90  F0DF         	goto	l826
 19378   01BEC0                     u33530:
 19379   01BEC0                     
 19380                           ; BSR set to: 6
 19381                           ;../fatfs/ff.c: 4619:     if (dp->obj.attr & 0x10) {
 19382   01BEC0  EE20 F004          	lfsr	2,4
 19383   01BEC4  51AF               	movf	f_opendir@dp& (0+255),w,b
 19384   01BEC6  26D9               	addwf	fsr2l,f,c
 19385   01BEC8  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 19386   01BECA  22DA               	addwfc	fsr2h,f,c
 19387   01BECC  A8DF               	btfss	indf2,4,c
 19388   01BECE  EF6B  F0DF         	goto	u33541
 19389   01BED2  EF6D  F0DF         	goto	u33540
 19390   01BED6                     u33541:
 19391   01BED6  EF8E  F0DF         	goto	l24059
 19392   01BEDA                     u33540:
 19393   01BEDA                     
 19394                           ; BSR set to: 6
 19395                           ;../fatfs/ff.c: 4628:      {;../fatfs/ff.c: 4629:       dp->obj.sclust = ld_clust(fs, dp
      +                          ->dir);
 19396   01BEDA  C6B3  F50B         	movff	f_opendir@fs,ld_clust@fs
 19397   01BEDE  C6B4  F50C         	movff	f_opendir@fs+1,ld_clust@fs+1
 19398   01BEE2  EE20 F01A          	lfsr	2,26
 19399   01BEE6  51AF               	movf	f_opendir@dp& (0+255),w,b
 19400   01BEE8  26D9               	addwf	fsr2l,f,c
 19401   01BEEA  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 19402   01BEEC  22DA               	addwfc	fsr2h,f,c
 19403   01BEEE  C4DE F50D          	movff	postinc2,ld_clust@dir
 19404   01BEF2  C4DD F50E          	movff	postdec2,ld_clust@dir+1
 19405   01BEF6  EC3A  F0F9         	call	_ld_clust	;wreg free
 19406   01BEFA  0106               	movlb	6	; () banked
 19407   01BEFC  EE20 F006          	lfsr	2,6
 19408   01BF00  51AF               	movf	f_opendir@dp& (0+255),w,b
 19409   01BF02  26D9               	addwf	fsr2l,f,c
 19410   01BF04  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 19411   01BF06  22DA               	addwfc	fsr2h,f,c
 19412   01BF08  C50B  F4DE         	movff	?_ld_clust,postinc2
 19413   01BF0C  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 19414   01BF10  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 19415   01BF14  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 19416                           
 19417                           ;../fatfs/ff.c: 4630:      };../fatfs/ff.c: 4631:     } else {
 19418   01BF18  EF90  F0DF         	goto	l826
 19419   01BF1C                     l24059:
 19420                           
 19421                           ; BSR set to: 6
 19422                           ;../fatfs/ff.c: 4632:      res = FR_NO_PATH;
 19423   01BF1C  0E05               	movlw	5
 19424   01BF1E  6FB5               	movwf	f_opendir@res& (0+255),b
 19425   01BF20                     l826:
 19426                           
 19427                           ; BSR set to: 6
 19428                           ;../fatfs/ff.c: 4635:    if (res == FR_OK) {
 19429   01BF20  51B5               	movf	f_opendir@res& (0+255),w,b
 19430   01BF22  A4D8               	btfss	status,2,c
 19431   01BF24  EF96  F0DF         	goto	u33551
 19432   01BF28  EF98  F0DF         	goto	u33550
 19433   01BF2C                     u33551:
 19434   01BF2C  EFB8  F0DF         	goto	l24065
 19435   01BF30                     u33550:
 19436   01BF30                     
 19437                           ; BSR set to: 6
 19438                           ;../fatfs/ff.c: 4636:     dp->obj.id = fs->id;
 19439   01BF30  EE20 F006          	lfsr	2,6
 19440   01BF34  51B3               	movf	f_opendir@fs& (0+255),w,b
 19441   01BF36  26D9               	addwf	fsr2l,f,c
 19442   01BF38  51B4               	movf	(f_opendir@fs+1)& (0+255),w,b
 19443   01BF3A  22DA               	addwfc	fsr2h,f,c
 19444   01BF3C  EE10 F002          	lfsr	1,2
 19445   01BF40  51AF               	movf	f_opendir@dp& (0+255),w,b
 19446   01BF42  26E1               	addwf	fsr1l,f,c
 19447   01BF44  51B0               	movf	(f_opendir@dp+1)& (0+255),w,b
 19448   01BF46  22E2               	addwfc	fsr1h,f,c
 19449   01BF48  C4DE F4E6          	movff	postinc2,postinc1
 19450   01BF4C  C4DD F4E5          	movff	postdec2,postdec1
 19451   01BF50                     
 19452                           ; BSR set to: 6
 19453                           ;../fatfs/ff.c: 4637:     res = dir_sdi(dp, 0);
 19454   01BF50  C6AF  F63E         	movff	f_opendir@dp,dir_sdi@dp
 19455   01BF54  C6B0  F63F         	movff	f_opendir@dp+1,dir_sdi@dp+1
 19456   01BF58  0E00               	movlw	0
 19457   01BF5A  6F40               	movwf	dir_sdi@ofs& (0+255),b
 19458   01BF5C  0E00               	movlw	0
 19459   01BF5E  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 19460   01BF60  0E00               	movlw	0
 19461   01BF62  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 19462   01BF64  0E00               	movlw	0
 19463   01BF66  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 19464   01BF68  EC72  F0BC         	call	_dir_sdi	;wreg free
 19465   01BF6C  0106               	movlb	6	; () banked
 19466   01BF6E  6FB5               	movwf	f_opendir@res& (0+255),b
 19467   01BF70                     l24065:
 19468                           
 19469                           ; BSR set to: 6
 19470                           ;../fatfs/ff.c: 4651:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 19471   01BF70  0E04               	movlw	4
 19472   01BF72  19B5               	xorwf	f_opendir@res& (0+255),w,b
 19473   01BF74  A4D8               	btfss	status,2,c
 19474   01BF76  EFBF  F0DF         	goto	u33561
 19475   01BF7A  EFC1  F0DF         	goto	u33560
 19476   01BF7E                     u33561:
 19477   01BF7E  EFC3  F0DF         	goto	l824
 19478   01BF82                     u33560:
 19479   01BF82                     
 19480                           ; BSR set to: 6
 19481   01BF82  0E05               	movlw	5
 19482   01BF84  6FB5               	movwf	f_opendir@res& (0+255),b
 19483   01BF86                     l824:
 19484                           
 19485                           ; BSR set to: 6
 19486                           ;../fatfs/ff.c: 4653:  if (res != FR_OK) dp->obj.fs = 0;
 19487   01BF86  51B5               	movf	f_opendir@res& (0+255),w,b
 19488   01BF88  B4D8               	btfsc	status,2,c
 19489   01BF8A  EFC9  F0DF         	goto	u33571
 19490   01BF8E  EFCB  F0DF         	goto	u33570
 19491   01BF92                     u33571:
 19492   01BF92  EFD1  F0DF         	goto	l24071
 19493   01BF96                     u33570:
 19494   01BF96                     
 19495                           ; BSR set to: 6
 19496   01BF96  C6AF  F4D9         	movff	f_opendir@dp,fsr2l
 19497   01BF9A  C6B0  F4DA         	movff	f_opendir@dp+1,fsr2h
 19498   01BF9E  6ADE               	clrf	postinc2,c
 19499   01BFA0  6ADD               	clrf	postdec2,c
 19500   01BFA2                     l24071:
 19501                           
 19502                           ; BSR set to: 6
 19503                           ;../fatfs/ff.c: 4655:  return res;
 19504   01BFA2  51B5               	movf	f_opendir@res& (0+255),w,b
 19505   01BFA4                     l823:
 19506                           
 19507                           ; BSR set to: 6
 19508   01BFA4  0012               	return		;funcret
 19509   01BFA6                     __end_of_f_opendir:
 19510                           	callstack 0
 19511                           
 19512 ;; *************** function _f_getcwd *****************
 19513 ;; Defined at:
 19514 ;;		line 4333 in file "../fatfs/ff.c"
 19515 ;; Parameters:    Size  Location     Type
 19516 ;;  buff            2  175[BANK6 ] PTR unsigned char 
 19517 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 19518 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 19519 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 19520 ;;  len             2  177[BANK6 ] unsigned int 
 19521 ;; Auto vars:     Size  Location     Type
 19522 ;;  dj             40   35[BANK7 ] struct .
 19523 ;;  fno            22   12[BANK7 ] struct .
 19524 ;;  ccl             4    0[BANK7 ] unsigned long 
 19525 ;;  fs              2   10[BANK7 ] PTR struct .
 19526 ;;		 -> fs(564), NULL(0), 
 19527 ;;  i               2    8[BANK7 ] unsigned int 
 19528 ;;  n               2    6[BANK7 ] unsigned int 
 19529 ;;  tp              2    4[BANK7 ] PTR unsigned char 
 19530 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 19531 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 19532 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 19533 ;;  res             1   34[BANK7 ] enum E597
 19534 ;; Return value:  Size  Location     Type
 19535 ;;                  1    wreg      enum E597
 19536 ;; Registers used:
 19537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19538 ;; Tracked objects:
 19539 ;;		On entry : 0/0
 19540 ;;		On exit  : 0/0
 19541 ;;		Unchanged: 0/0
 19542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 19543 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19544 ;;      Locals:         0       0       0      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19545 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19546 ;;      Totals:         0       0       9      75       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 19547 ;;Total ram usage:       84 bytes
 19548 ;; Hardware stack levels used: 1
 19549 ;; Hardware stack levels required when called: 18
 19550 ;; This function calls:
 19551 ;;		_dir_next
 19552 ;;		_dir_read
 19553 ;;		_dir_sdi
 19554 ;;		_get_fileinfo
 19555 ;;		_ld_clust
 19556 ;;		_mount_volume
 19557 ;;		_move_window
 19558 ;; This function is called by:
 19559 ;;		_main
 19560 ;;		_scan_files
 19561 ;;		_scan_files1
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text28
 19566   014F26                     __ptext28:
 19567                           	callstack 0
 19568   014F26                     _f_getcwd:
 19569                           	callstack 107
 19570   014F26                     
 19571                           ;../fatfs/ff.c: 4334:  TCHAR* buff,;../fatfs/ff.c: 4335:  UINT len;../fatfs/ff.c: 4337: 
      +                          {;../fatfs/ff.c: 4338:  FRESULT res;;../fatfs/ff.c: 4339:  DIR dj;;../fatfs/ff.c: 4340: 
      +                           FATFS *fs;;../fatfs/ff.c: 4341:  UINT i, n;;../fatfs/ff.c: 4342:  DWORD ccl;;../fatfs/f
      +                          f.c: 4343:  TCHAR *tp = buff;
 19572   014F26  C6AF  F704         	movff	f_getcwd@buff,f_getcwd@tp
 19573   014F2A  C6B0  F705         	movff	f_getcwd@buff+1,f_getcwd@tp+1
 19574   014F2E                     
 19575                           ;../fatfs/ff.c: 4350:  FILINFO fno;;../fatfs/ff.c: 4355:  buff[0] = 0;
 19576   014F2E  C6AF  F4F6         	movff	f_getcwd@buff,tblptrl
 19577   014F32  C6B0  F4F7         	movff	f_getcwd@buff+1,tblptrh
 19578   014F36  0E00               	movlw	low (__mediumconst shr (0+16))
 19579   014F38  6EF8               	movwf	tblptru,c
 19580   014F3A  0E3F               	movlw	(high __ramtop+-1)
 19581   014F3C  64F7               	cpfsgt	tblptrh,c
 19582   014F3E  D004               	bra	u33267
 19583   014F40  0E00               	movlw	0
 19584   014F42  6EF5               	movwf	tablat,c
 19585   014F44  000C               	tblwt		*
 19586   014F46  D006               	bra	u33260
 19587   014F48                     u33267:
 19588   014F48  C4F6 F4E9          	movff	tblptrl,fsr0l
 19589   014F4C  C4F7 F4EA          	movff	tblptrh,fsr0h
 19590   014F50  0E00               	movlw	0
 19591   014F52  6EEF               	movwf	indf0,c
 19592   014F54                     u33260:
 19593   014F54                     
 19594                           ;../fatfs/ff.c: 4356:  res = mount_volume((const TCHAR**)&buff, &fs, 0);
 19595   014F54  0EAF               	movlw	low f_getcwd@buff
 19596   014F56  0106               	movlb	6	; () banked
 19597   014F58  6F81               	movwf	mount_volume@path& (0+255),b
 19598   014F5A  0E06               	movlw	high f_getcwd@buff
 19599   014F5C  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 19600   014F5E  0E0A               	movlw	low f_getcwd@fs
 19601   014F60  6F83               	movwf	mount_volume@rfs& (0+255),b
 19602   014F62  0E07               	movlw	high f_getcwd@fs
 19603   014F64  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 19604   014F66  0E00               	movlw	0
 19605   014F68  6F85               	movwf	mount_volume@mode& (0+255),b
 19606   014F6A  EC00  F080         	call	_mount_volume	;wreg free
 19607   014F6E  0107               	movlb	7	; () banked
 19608   014F70  6F22               	movwf	f_getcwd@res& (0+255),b
 19609   014F72                     
 19610                           ; BSR set to: 7
 19611                           ;../fatfs/ff.c: 4357:  if (res == FR_OK) {
 19612   014F72  5122               	movf	f_getcwd@res& (0+255),w,b
 19613   014F74  A4D8               	btfss	status,2,c
 19614   014F76  EFBF  F0A7         	goto	u33271
 19615   014F7A  EFC1  F0A7         	goto	u33270
 19616   014F7E                     u33271:
 19617   014F7E  EFD6  F0A9         	goto	l24033
 19618   014F82                     u33270:
 19619   014F82                     
 19620                           ; BSR set to: 7
 19621                           ;../fatfs/ff.c: 4358:   dj.obj.fs = fs;
 19622   014F82  C70A  F723         	movff	f_getcwd@fs,f_getcwd@dj
 19623   014F86  C70B  F724         	movff	f_getcwd@fs+1,f_getcwd@dj+1
 19624   014F8A                     
 19625                           ; BSR set to: 7
 19626                           ;../fatfs/ff.c: 4362:   i = len;
 19627   014F8A  C6B1  F708         	movff	f_getcwd@len,f_getcwd@i
 19628   014F8E  C6B2  F709         	movff	f_getcwd@len+1,f_getcwd@i+1
 19629   014F92                     
 19630                           ; BSR set to: 7
 19631                           ;../fatfs/ff.c: 4364:    dj.obj.sclust = fs->cdir;
 19632   014F92  EE20 F014          	lfsr	2,20
 19633   014F96  510A               	movf	f_getcwd@fs& (0+255),w,b
 19634   014F98  26D9               	addwf	fsr2l,f,c
 19635   014F9A  510B               	movf	(f_getcwd@fs+1)& (0+255),w,b
 19636   014F9C  22DA               	addwfc	fsr2h,f,c
 19637   014F9E  C4DE F729          	movff	postinc2,f_getcwd@dj+6
 19638   014FA2  C4DE F72A          	movff	postinc2,f_getcwd@dj+7
 19639   014FA6  C4DE F72B          	movff	postinc2,f_getcwd@dj+8
 19640   014FAA  C4DE F72C          	movff	postinc2,f_getcwd@dj+9
 19641                           
 19642                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 19643   014FAE  EF3F  F0A9         	goto	l24015
 19644   014FB2                     l23957:
 19645                           
 19646                           ; BSR set to: 7
 19647                           ;../fatfs/ff.c: 4366:     res = dir_sdi(&dj, 1 * 32);
 19648   014FB2  0E23               	movlw	low f_getcwd@dj
 19649   014FB4  0106               	movlb	6	; () banked
 19650   014FB6  6F3E               	movwf	dir_sdi@dp& (0+255),b
 19651   014FB8  0E07               	movlw	high f_getcwd@dj
 19652   014FBA  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 19653   014FBC  0E20               	movlw	32
 19654   014FBE  6F40               	movwf	dir_sdi@ofs& (0+255),b
 19655   014FC0  0E00               	movlw	0
 19656   014FC2  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 19657   014FC4  0E00               	movlw	0
 19658   014FC6  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 19659   014FC8  0E00               	movlw	0
 19660   014FCA  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 19661   014FCC  EC72  F0BC         	call	_dir_sdi	;wreg free
 19662   014FD0  0107               	movlb	7	; () banked
 19663   014FD2  6F22               	movwf	f_getcwd@res& (0+255),b
 19664   014FD4                     
 19665                           ; BSR set to: 7
 19666                           ;../fatfs/ff.c: 4367:     if (res != FR_OK) break;
 19667   014FD4  5122               	movf	f_getcwd@res& (0+255),w,b
 19668   014FD6  B4D8               	btfsc	status,2,c
 19669   014FD8  EFF0  F0A7         	goto	u33281
 19670   014FDC  EFF2  F0A7         	goto	u33280
 19671   014FE0                     u33281:
 19672   014FE0  EFF4  F0A7         	goto	l23963
 19673   014FE4                     u33280:
 19674   014FE4  EF53  F0A9         	goto	l24017
 19675   014FE8                     l23963:
 19676                           
 19677                           ; BSR set to: 7
 19678                           ;../fatfs/ff.c: 4368:     res = move_window(fs, dj.sect);
 19679   014FE8  C70A  F61A         	movff	f_getcwd@fs,move_window@fs
 19680   014FEC  C70B  F61B         	movff	f_getcwd@fs+1,move_window@fs+1
 19681   014FF0  C739  F61C         	movff	f_getcwd@dj+22,move_window@sect
 19682   014FF4  C73A  F61D         	movff	f_getcwd@dj+23,move_window@sect+1
 19683   014FF8  C73B  F61E         	movff	f_getcwd@dj+24,move_window@sect+2
 19684   014FFC  C73C  F61F         	movff	f_getcwd@dj+25,move_window@sect+3
 19685   015000  ECAB  F0EF         	call	_move_window	;wreg free
 19686   015004  0107               	movlb	7	; () banked
 19687   015006  6F22               	movwf	f_getcwd@res& (0+255),b
 19688   015008                     
 19689                           ; BSR set to: 7
 19690                           ;../fatfs/ff.c: 4369:     if (res != FR_OK) break;
 19691   015008  5122               	movf	f_getcwd@res& (0+255),w,b
 19692   01500A  B4D8               	btfsc	status,2,c
 19693   01500C  EF0A  F0A8         	goto	u33291
 19694   015010  EF0C  F0A8         	goto	u33290
 19695   015014                     u33291:
 19696   015014  EF0E  F0A8         	goto	l23969
 19697   015018                     u33290:
 19698   015018  EF53  F0A9         	goto	l24017
 19699   01501C                     l23969:
 19700                           
 19701                           ; BSR set to: 7
 19702                           ;../fatfs/ff.c: 4370:     dj.obj.sclust = ld_clust(fs, dj.dir);
 19703   01501C  C70A  F50B         	movff	f_getcwd@fs,ld_clust@fs
 19704   015020  C70B  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 19705   015024  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 19706   015028  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 19707   01502C  EC3A  F0F9         	call	_ld_clust	;wreg free
 19708   015030  C50B  F729         	movff	?_ld_clust,f_getcwd@dj+6
 19709   015034  C50C  F72A         	movff	?_ld_clust+1,f_getcwd@dj+7
 19710   015038  C50D  F72B         	movff	?_ld_clust+2,f_getcwd@dj+8
 19711   01503C  C50E  F72C         	movff	?_ld_clust+3,f_getcwd@dj+9
 19712   015040                     
 19713                           ;../fatfs/ff.c: 4371:     res = dir_sdi(&dj, 0);
 19714   015040  0E23               	movlw	low f_getcwd@dj
 19715   015042  0106               	movlb	6	; () banked
 19716   015044  6F3E               	movwf	dir_sdi@dp& (0+255),b
 19717   015046  0E07               	movlw	high f_getcwd@dj
 19718   015048  6F3F               	movwf	(dir_sdi@dp+1)& (0+255),b
 19719   01504A  0E00               	movlw	0
 19720   01504C  6F40               	movwf	dir_sdi@ofs& (0+255),b
 19721   01504E  0E00               	movlw	0
 19722   015050  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 19723   015052  0E00               	movlw	0
 19724   015054  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 19725   015056  0E00               	movlw	0
 19726   015058  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 19727   01505A  EC72  F0BC         	call	_dir_sdi	;wreg free
 19728   01505E  0107               	movlb	7	; () banked
 19729   015060  6F22               	movwf	f_getcwd@res& (0+255),b
 19730   015062                     
 19731                           ; BSR set to: 7
 19732                           ;../fatfs/ff.c: 4372:     if (res != FR_OK) break;
 19733   015062  5122               	movf	f_getcwd@res& (0+255),w,b
 19734   015064  B4D8               	btfsc	status,2,c
 19735   015066  EF37  F0A8         	goto	u33301
 19736   01506A  EF39  F0A8         	goto	u33300
 19737   01506E                     u33301:
 19738   01506E  EF3B  F0A8         	goto	l23977
 19739   015072                     u33300:
 19740   015072  EF53  F0A9         	goto	l24017
 19741   015076                     l23977:
 19742                           
 19743                           ; BSR set to: 7
 19744                           ;../fatfs/ff.c: 4374:      res = dir_read(&dj, 0);
 19745   015076  0E23               	movlw	low f_getcwd@dj
 19746   015078  0106               	movlb	6	; () banked
 19747   01507A  6F7C               	movwf	dir_read@dp& (0+255),b
 19748   01507C  0E07               	movlw	high f_getcwd@dj
 19749   01507E  6F7D               	movwf	(dir_read@dp+1)& (0+255),b
 19750   015080  0E00               	movlw	0
 19751   015082  6F7F               	movwf	(dir_read@vol+1)& (0+255),b
 19752   015084  0E00               	movlw	0
 19753   015086  6F7E               	movwf	dir_read@vol& (0+255),b
 19754   015088  ECB0  F0D8         	call	_dir_read	;wreg free
 19755   01508C  0107               	movlb	7	; () banked
 19756   01508E  6F22               	movwf	f_getcwd@res& (0+255),b
 19757   015090                     
 19758                           ; BSR set to: 7
 19759                           ;../fatfs/ff.c: 4375:      if (res != FR_OK) break;
 19760   015090  5122               	movf	f_getcwd@res& (0+255),w,b
 19761   015092  B4D8               	btfsc	status,2,c
 19762   015094  EF4E  F0A8         	goto	u33311
 19763   015098  EF50  F0A8         	goto	u33310
 19764   01509C                     u33311:
 19765   01509C  EF52  F0A8         	goto	l23983
 19766   0150A0                     u33310:
 19767   0150A0  EF86  F0A8         	goto	l23991
 19768   0150A4                     l23983:
 19769                           
 19770                           ; BSR set to: 7
 19771                           ;../fatfs/ff.c: 4376:      if (ccl == ld_clust(fs, dj.dir)) break;
 19772   0150A4  C70A  F50B         	movff	f_getcwd@fs,ld_clust@fs
 19773   0150A8  C70B  F50C         	movff	f_getcwd@fs+1,ld_clust@fs+1
 19774   0150AC  C73D  F50D         	movff	f_getcwd@dj+26,ld_clust@dir
 19775   0150B0  C73E  F50E         	movff	f_getcwd@dj+27,ld_clust@dir+1
 19776   0150B4  EC3A  F0F9         	call	_ld_clust	;wreg free
 19777   0150B8  0107               	movlb	7	; () banked
 19778   0150BA  5100               	movf	f_getcwd@ccl& (0+255),w,b
 19779   0150BC  180B               	xorwf	?_ld_clust^(0+1280),w,c
 19780   0150BE  E10D               	bnz	u33321
 19781   0150C0  5101               	movf	(f_getcwd@ccl+1)& (0+255),w,b
 19782   0150C2  180C               	xorwf	(?_ld_clust+1)^(0+1280),w,c
 19783   0150C4  E10A               	bnz	u33321
 19784   0150C6  5102               	movf	(f_getcwd@ccl+2)& (0+255),w,b
 19785   0150C8  180D               	xorwf	(?_ld_clust+2)^(0+1280),w,c
 19786   0150CA  E107               	bnz	u33321
 19787   0150CC  5103               	movf	(f_getcwd@ccl+3)& (0+255),w,b
 19788   0150CE  180E               	xorwf	(?_ld_clust+3)^(0+1280),w,c
 19789   0150D0  A4D8               	btfss	status,2,c
 19790   0150D2  EF6D  F0A8         	goto	u33321
 19791   0150D6  EF6F  F0A8         	goto	u33320
 19792   0150DA                     u33321:
 19793   0150DA  EF71  F0A8         	goto	l23987
 19794   0150DE                     u33320:
 19795   0150DE  EF86  F0A8         	goto	l23991
 19796   0150E2                     l23987:
 19797                           
 19798                           ; BSR set to: 7
 19799                           ;../fatfs/ff.c: 4377:      res = dir_next(&dj, 0);
 19800   0150E2  0E23               	movlw	low f_getcwd@dj
 19801   0150E4  0106               	movlb	6	; () banked
 19802   0150E6  6F62               	movwf	dir_next@dp& (0+255),b
 19803   0150E8  0E07               	movlw	high f_getcwd@dj
 19804   0150EA  6F63               	movwf	(dir_next@dp+1)& (0+255),b
 19805   0150EC  0E00               	movlw	0
 19806   0150EE  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 19807   0150F0  0E00               	movlw	0
 19808   0150F2  6F64               	movwf	dir_next@stretch& (0+255),b
 19809   0150F4  ECCF  F0B0         	call	_dir_next	;wreg free
 19810   0150F8  0107               	movlb	7	; () banked
 19811   0150FA  6F22               	movwf	f_getcwd@res& (0+255),b
 19812   0150FC                     
 19813                           ; BSR set to: 7
 19814                           ;../fatfs/ff.c: 4378:     } while (res == FR_OK);
 19815   0150FC  5122               	movf	f_getcwd@res& (0+255),w,b
 19816   0150FE  B4D8               	btfsc	status,2,c
 19817   015100  EF84  F0A8         	goto	u33331
 19818   015104  EF86  F0A8         	goto	u33330
 19819   015108                     u33331:
 19820   015108  EF3B  F0A8         	goto	l23977
 19821   01510C                     u33330:
 19822   01510C                     l23991:
 19823                           
 19824                           ; BSR set to: 7
 19825                           ;../fatfs/ff.c: 4379:     if (res == FR_NO_FILE) res = FR_INT_ERR;
 19826   01510C  0E04               	movlw	4
 19827   01510E  1922               	xorwf	f_getcwd@res& (0+255),w,b
 19828   015110  A4D8               	btfss	status,2,c
 19829   015112  EF8D  F0A8         	goto	u33341
 19830   015116  EF8F  F0A8         	goto	u33340
 19831   01511A                     u33341:
 19832   01511A  EF91  F0A8         	goto	l772
 19833   01511E                     u33340:
 19834   01511E                     
 19835                           ; BSR set to: 7
 19836   01511E  0E02               	movlw	2
 19837   015120  6F22               	movwf	f_getcwd@res& (0+255),b
 19838   015122                     l772:
 19839                           
 19840                           ; BSR set to: 7
 19841                           ;../fatfs/ff.c: 4380:     if (res != FR_OK) break;
 19842   015122  5122               	movf	f_getcwd@res& (0+255),w,b
 19843   015124  B4D8               	btfsc	status,2,c
 19844   015126  EF97  F0A8         	goto	u33351
 19845   01512A  EF99  F0A8         	goto	u33350
 19846   01512E                     u33351:
 19847   01512E  EF9B  F0A8         	goto	l23997
 19848   015132                     u33350:
 19849   015132  EF53  F0A9         	goto	l24017
 19850   015136                     l23997:
 19851                           
 19852                           ; BSR set to: 7
 19853                           ;../fatfs/ff.c: 4381:     get_fileinfo(&dj, &fno);
 19854   015136  0E23               	movlw	low f_getcwd@dj
 19855   015138  6E11               	movwf	get_fileinfo@dp^(0+1280),c
 19856   01513A  0E07               	movlw	high f_getcwd@dj
 19857   01513C  6E12               	movwf	(get_fileinfo@dp+1)^(0+1280),c
 19858   01513E  0E0C               	movlw	low f_getcwd@fno
 19859   015140  6E13               	movwf	get_fileinfo@fno^(0+1280),c
 19860   015142  0E07               	movlw	high f_getcwd@fno
 19861   015144  6E14               	movwf	(get_fileinfo@fno+1)^(0+1280),c
 19862   015146  EC8B  F0D1         	call	_get_fileinfo	;wreg free
 19863   01514A                     
 19864                           ;../fatfs/ff.c: 4382:     for (n = 0; fno.fname[n]; n++) ;
 19865   01514A  0E00               	movlw	0
 19866   01514C  0107               	movlb	7	; () banked
 19867   01514E  6F07               	movwf	(f_getcwd@n+1)& (0+255),b
 19868   015150  0E00               	movlw	0
 19869   015152  6F06               	movwf	f_getcwd@n& (0+255),b
 19870   015154  EFAF  F0A8         	goto	l24003
 19871   015158                     l24001:
 19872                           
 19873                           ; BSR set to: 6
 19874   015158  0107               	movlb	7	; () banked
 19875   01515A  4B06               	infsnz	f_getcwd@n& (0+255),f,b
 19876   01515C  2B07               	incf	(f_getcwd@n+1)& (0+255),f,b
 19877   01515E                     l24003:
 19878                           
 19879                           ; BSR set to: 7
 19880   01515E  0E09               	movlw	9
 19881   015160  2506               	addwf	f_getcwd@n& (0+255),w,b
 19882   015162  0106               	movlb	6	; () banked
 19883   015164  6FB3               	movwf	??_f_getcwd& (0+255),b
 19884   015166  0E00               	movlw	0
 19885   015168  0107               	movlb	7	; () banked
 19886   01516A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 19887   01516C  0106               	movlb	6	; () banked
 19888   01516E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 19889   015170  0E0C               	movlw	low f_getcwd@fno
 19890   015172  25B3               	addwf	??_f_getcwd& (0+255),w,b
 19891   015174  6ED9               	movwf	fsr2l,c
 19892   015176  0E07               	movlw	high f_getcwd@fno
 19893   015178  21B4               	addwfc	(??_f_getcwd+1)& (0+255),w,b
 19894   01517A  6EDA               	movwf	fsr2h,c
 19895   01517C  50DF               	movf	indf2,w,c
 19896   01517E  A4D8               	btfss	status,2,c
 19897   015180  EFC4  F0A8         	goto	u33361
 19898   015184  EFC6  F0A8         	goto	u33360
 19899   015188                     u33361:
 19900   015188  EFAC  F0A8         	goto	l24001
 19901   01518C                     u33360:
 19902   01518C                     
 19903                           ; BSR set to: 6
 19904                           ;../fatfs/ff.c: 4383:     if (i < n + 1) {
 19905   01518C  0E01               	movlw	1
 19906   01518E  0107               	movlb	7	; () banked
 19907   015190  2506               	addwf	f_getcwd@n& (0+255),w,b
 19908   015192  0106               	movlb	6	; () banked
 19909   015194  6FB3               	movwf	??_f_getcwd& (0+255),b
 19910   015196  0E00               	movlw	0
 19911   015198  0107               	movlb	7	; () banked
 19912   01519A  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 19913   01519C  0106               	movlb	6	; () banked
 19914   01519E  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 19915   0151A0  51B3               	movf	??_f_getcwd& (0+255),w,b
 19916   0151A2  0107               	movlb	7	; () banked
 19917   0151A4  5D08               	subwf	f_getcwd@i& (0+255),w,b
 19918   0151A6  0106               	movlb	6	; () banked
 19919   0151A8  51B4               	movf	(??_f_getcwd+1)& (0+255),w,b
 19920   0151AA  0107               	movlb	7	; () banked
 19921   0151AC  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 19922   0151AE  B0D8               	btfsc	status,0,c
 19923   0151B0  EFDC  F0A8         	goto	u33371
 19924   0151B4  EFDE  F0A8         	goto	u33370
 19925   0151B8                     u33371:
 19926   0151B8  EF16  F0A9         	goto	l24011
 19927   0151BC                     u33370:
 19928   0151BC                     
 19929                           ; BSR set to: 7
 19930                           ;../fatfs/ff.c: 4384:      res = FR_NOT_ENOUGH_CORE; break;
 19931   0151BC  0E11               	movlw	17
 19932   0151BE  6F22               	movwf	f_getcwd@res& (0+255),b
 19933   0151C0  EF53  F0A9         	goto	l24017
 19934   0151C4                     l24009:
 19935                           
 19936                           ; BSR set to: 7
 19937   0151C4  0708               	decf	f_getcwd@i& (0+255),f,b
 19938   0151C6  A0D8               	btfss	status,0,c
 19939   0151C8  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 19940   0151CA  5108               	movf	f_getcwd@i& (0+255),w,b
 19941   0151CC  0106               	movlb	6	; () banked
 19942   0151CE  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 19943   0151D0  6FB3               	movwf	??_f_getcwd& (0+255),b
 19944   0151D2  0107               	movlb	7	; () banked
 19945   0151D4  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 19946   0151D6  0106               	movlb	6	; () banked
 19947   0151D8  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 19948   0151DA  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 19949   0151DC  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 19950   0151E0  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 19951   0151E4  0E00               	movlw	low (__mediumconst shr (0+16))
 19952   0151E6  6EF8               	movwf	tblptru,c
 19953   0151E8  0E09               	movlw	9
 19954   0151EA  0107               	movlb	7	; () banked
 19955   0151EC  0706               	decf	f_getcwd@n& (0+255),f,b
 19956   0151EE  A0D8               	btfss	status,0,c
 19957   0151F0  0707               	decf	(f_getcwd@n+1)& (0+255),f,b
 19958   0151F2  2506               	addwf	f_getcwd@n& (0+255),w,b
 19959   0151F4  0106               	movlb	6	; () banked
 19960   0151F6  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 19961   0151F8  0E00               	movlw	0
 19962   0151FA  0107               	movlb	7	; () banked
 19963   0151FC  2107               	addwfc	(f_getcwd@n+1)& (0+255),w,b
 19964   0151FE  0106               	movlb	6	; () banked
 19965   015200  6FB6               	movwf	(??_f_getcwd+3)& (0+255),b
 19966   015202  0E0C               	movlw	low f_getcwd@fno
 19967   015204  25B5               	addwf	(??_f_getcwd+2)& (0+255),w,b
 19968   015206  6ED9               	movwf	fsr2l,c
 19969   015208  0E07               	movlw	high f_getcwd@fno
 19970   01520A  21B6               	addwfc	(??_f_getcwd+3)& (0+255),w,b
 19971   01520C  6EDA               	movwf	fsr2h,c
 19972   01520E  50DF               	movf	indf2,w,c
 19973   015210  6FB7               	movwf	(??_f_getcwd+4)& (0+255),b
 19974   015212  0E3F               	movlw	(high __ramtop+-1)
 19975   015214  64F7               	cpfsgt	tblptrh,c
 19976   015216  D004               	bra	u33387
 19977   015218  C6B7  F4F5         	movff	??_f_getcwd+4,tablat
 19978   01521C  000C               	tblwt		*
 19979   01521E  D006               	bra	u33380
 19980   015220                     u33387:
 19981   015220  C4F6 F4E9          	movff	tblptrl,fsr0l
 19982   015224  C4F7 F4EA          	movff	tblptrh,fsr0h
 19983   015228  C6B7  F4EF         	movff	??_f_getcwd+4,indf0
 19984   01522C                     u33380:
 19985   01522C                     l24011:
 19986   01522C  0107               	movlb	7	; () banked
 19987   01522E  5106               	movf	f_getcwd@n& (0+255),w,b
 19988   015230  1107               	iorwf	(f_getcwd@n+1)& (0+255),w,b
 19989   015232  A4D8               	btfss	status,2,c
 19990   015234  EF1E  F0A9         	goto	u33391
 19991   015238  EF20  F0A9         	goto	u33390
 19992   01523C                     u33391:
 19993   01523C  EFE2  F0A8         	goto	l24009
 19994   015240                     u33390:
 19995   015240                     
 19996                           ; BSR set to: 7
 19997                           ;../fatfs/ff.c: 4387:     buff[--i] = '/';
 19998   015240  0708               	decf	f_getcwd@i& (0+255),f,b
 19999   015242  A0D8               	btfss	status,0,c
 20000   015244  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 20001   015246  5108               	movf	f_getcwd@i& (0+255),w,b
 20002   015248  0106               	movlb	6	; () banked
 20003   01524A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 20004   01524C  6FB3               	movwf	??_f_getcwd& (0+255),b
 20005   01524E  0107               	movlb	7	; () banked
 20006   015250  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 20007   015252  0106               	movlb	6	; () banked
 20008   015254  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 20009   015256  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 20010   015258  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 20011   01525C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 20012   015260  0E00               	movlw	low (__mediumconst shr (0+16))
 20013   015262  6EF8               	movwf	tblptru,c
 20014   015264  0E3F               	movlw	(high __ramtop+-1)
 20015   015266  64F7               	cpfsgt	tblptrh,c
 20016   015268  D004               	bra	u33407
 20017   01526A  0E2F               	movlw	47
 20018   01526C  6EF5               	movwf	tablat,c
 20019   01526E  000C               	tblwt		*
 20020   015270  D006               	bra	u33400
 20021   015272                     u33407:
 20022   015272  C4F6 F4E9          	movff	tblptrl,fsr0l
 20023   015276  C4F7 F4EA          	movff	tblptrh,fsr0h
 20024   01527A  0E2F               	movlw	47
 20025   01527C  6EEF               	movwf	indf0,c
 20026   01527E                     u33400:
 20027   01527E                     l24015:
 20028                           
 20029                           ;../fatfs/ff.c: 4365:    while ((ccl = dj.obj.sclust) != 0) {
 20030   01527E  C729  F700         	movff	f_getcwd@dj+6,f_getcwd@ccl
 20031   015282  C72A  F701         	movff	f_getcwd@dj+7,f_getcwd@ccl+1
 20032   015286  C72B  F702         	movff	f_getcwd@dj+8,f_getcwd@ccl+2
 20033   01528A  C72C  F703         	movff	f_getcwd@dj+9,f_getcwd@ccl+3
 20034   01528E  0107               	movlb	7	; () banked
 20035   015290  5100               	movf	f_getcwd@ccl& (0+255),w,b
 20036   015292  1101               	iorwf	(f_getcwd@ccl+1)& (0+255),w,b
 20037   015294  1102               	iorwf	(f_getcwd@ccl+2)& (0+255),w,b
 20038   015296  1103               	iorwf	(f_getcwd@ccl+3)& (0+255),w,b
 20039   015298  A4D8               	btfss	status,2,c
 20040   01529A  EF51  F0A9         	goto	u33411
 20041   01529E  EF53  F0A9         	goto	u33410
 20042   0152A2                     u33411:
 20043   0152A2  EFD9  F0A7         	goto	l23957
 20044   0152A6                     u33410:
 20045   0152A6                     l24017:
 20046                           
 20047                           ; BSR set to: 7
 20048                           ;../fatfs/ff.c: 4390:   if (res == FR_OK) {
 20049   0152A6  5122               	movf	f_getcwd@res& (0+255),w,b
 20050   0152A8  A4D8               	btfss	status,2,c
 20051   0152AA  EF59  F0A9         	goto	u33421
 20052   0152AE  EF5B  F0A9         	goto	u33420
 20053   0152B2                     u33421:
 20054   0152B2  EFD6  F0A9         	goto	l24033
 20055   0152B6                     u33420:
 20056   0152B6                     
 20057                           ; BSR set to: 7
 20058                           ;../fatfs/ff.c: 4391:    if (i == len) buff[--i] = '/';
 20059   0152B6  0106               	movlb	6	; () banked
 20060   0152B8  51B1               	movf	f_getcwd@len& (0+255),w,b
 20061   0152BA  0107               	movlb	7	; () banked
 20062   0152BC  1908               	xorwf	f_getcwd@i& (0+255),w,b
 20063   0152BE  E109               	bnz	u33431
 20064   0152C0  0106               	movlb	6	; () banked
 20065   0152C2  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 20066   0152C4  0107               	movlb	7	; () banked
 20067   0152C6  1909               	xorwf	(f_getcwd@i+1)& (0+255),w,b
 20068   0152C8  A4D8               	btfss	status,2,c
 20069   0152CA  EF69  F0A9         	goto	u33431
 20070   0152CE  EF6B  F0A9         	goto	u33430
 20071   0152D2                     u33431:
 20072   0152D2  EF8A  F0A9         	goto	l24023
 20073   0152D6                     u33430:
 20074   0152D6                     
 20075                           ; BSR set to: 7
 20076   0152D6  0708               	decf	f_getcwd@i& (0+255),f,b
 20077   0152D8  A0D8               	btfss	status,0,c
 20078   0152DA  0709               	decf	(f_getcwd@i+1)& (0+255),f,b
 20079   0152DC  5108               	movf	f_getcwd@i& (0+255),w,b
 20080   0152DE  0106               	movlb	6	; () banked
 20081   0152E0  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 20082   0152E2  6FB3               	movwf	??_f_getcwd& (0+255),b
 20083   0152E4  0107               	movlb	7	; () banked
 20084   0152E6  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 20085   0152E8  0106               	movlb	6	; () banked
 20086   0152EA  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 20087   0152EC  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 20088   0152EE  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 20089   0152F2  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 20090   0152F6  0E00               	movlw	low (__mediumconst shr (0+16))
 20091   0152F8  6EF8               	movwf	tblptru,c
 20092   0152FA  0E3F               	movlw	(high __ramtop+-1)
 20093   0152FC  64F7               	cpfsgt	tblptrh,c
 20094   0152FE  D004               	bra	u33447
 20095   015300  0E2F               	movlw	47
 20096   015302  6EF5               	movwf	tablat,c
 20097   015304  000C               	tblwt		*
 20098   015306  D006               	bra	u33440
 20099   015308                     u33447:
 20100   015308  C4F6 F4E9          	movff	tblptrl,fsr0l
 20101   01530C  C4F7 F4EA          	movff	tblptrh,fsr0h
 20102   015310  0E2F               	movlw	47
 20103   015312  6EEF               	movwf	indf0,c
 20104   015314                     u33440:
 20105   015314                     l24023:
 20106                           
 20107                           ;../fatfs/ff.c: 4412:    if (res == FR_OK) {
 20108   015314  0107               	movlb	7	; () banked
 20109   015316  5122               	movf	f_getcwd@res& (0+255),w,b
 20110   015318  A4D8               	btfss	status,2,c
 20111   01531A  EF91  F0A9         	goto	u33451
 20112   01531E  EF93  F0A9         	goto	u33450
 20113   015322                     u33451:
 20114   015322  EFD6  F0A9         	goto	l24033
 20115   015326                     u33450:
 20116   015326                     l24025:
 20117                           
 20118                           ; BSR set to: 7
 20119                           ;../fatfs/ff.c: 4414:      *tp++ = buff[i++];
 20120   015326  5108               	movf	f_getcwd@i& (0+255),w,b
 20121   015328  0106               	movlb	6	; () banked
 20122   01532A  25AF               	addwf	f_getcwd@buff& (0+255),w,b
 20123   01532C  6FB3               	movwf	??_f_getcwd& (0+255),b
 20124   01532E  0107               	movlb	7	; () banked
 20125   015330  5109               	movf	(f_getcwd@i+1)& (0+255),w,b
 20126   015332  0106               	movlb	6	; () banked
 20127   015334  21B0               	addwfc	(f_getcwd@buff+1)& (0+255),w,b
 20128   015336  6FB4               	movwf	(??_f_getcwd+1)& (0+255),b
 20129   015338  C6B3  F4F6         	movff	??_f_getcwd,tblptrl
 20130   01533C  C6B4  F4F7         	movff	??_f_getcwd+1,tblptrh
 20131   015340  0E00               	movlw	low (__mediumconst shr (0+16))
 20132   015342  6EF8               	movwf	tblptru,c
 20133   015344  0E3F               	movlw	(high __ramtop+-1)
 20134   015346  64F7               	cpfsgt	tblptrh,c
 20135   015348  D003               	bra	u33467
 20136   01534A  0008               	tblrd		*
 20137   01534C  50F5               	movf	tablat,w,c
 20138   01534E  D005               	bra	u33460
 20139   015350                     u33467:
 20140   015350  C4F6 F4E9          	movff	tblptrl,fsr0l
 20141   015354  C4F7 F4EA          	movff	tblptrh,fsr0h
 20142   015358  50EF               	movf	indf0,w,c
 20143   01535A                     u33460:
 20144   01535A  0106               	movlb	6	; () banked
 20145   01535C  6FB5               	movwf	(??_f_getcwd+2)& (0+255),b
 20146   01535E  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 20147   015362  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 20148   015366  0E00               	movlw	low (__mediumconst shr (0+16))
 20149   015368  6EF8               	movwf	tblptru,c
 20150   01536A  0E3F               	movlw	(high __ramtop+-1)
 20151   01536C  64F7               	cpfsgt	tblptrh,c
 20152   01536E  D004               	bra	u33477
 20153   015370  C6B5  F4F5         	movff	??_f_getcwd+2,tablat
 20154   015374  000C               	tblwt		*
 20155   015376  D006               	bra	u33470
 20156   015378                     u33477:
 20157   015378  C4F6 F4E9          	movff	tblptrl,fsr0l
 20158   01537C  C4F7 F4EA          	movff	tblptrh,fsr0h
 20159   015380  C6B5  F4EF         	movff	??_f_getcwd+2,indf0
 20160   015384                     u33470:
 20161   015384  0107               	movlb	7	; () banked
 20162   015386  4B08               	infsnz	f_getcwd@i& (0+255),f,b
 20163   015388  2B09               	incf	(f_getcwd@i+1)& (0+255),f,b
 20164   01538A                     
 20165                           ; BSR set to: 7
 20166   01538A  4B04               	infsnz	f_getcwd@tp& (0+255),f,b
 20167   01538C  2B05               	incf	(f_getcwd@tp+1)& (0+255),f,b
 20168   01538E                     
 20169                           ; BSR set to: 7
 20170                           ;../fatfs/ff.c: 4415:     } while (i < len);
 20171   01538E  0106               	movlb	6	; () banked
 20172   015390  51B1               	movf	f_getcwd@len& (0+255),w,b
 20173   015392  0107               	movlb	7	; () banked
 20174   015394  5D08               	subwf	f_getcwd@i& (0+255),w,b
 20175   015396  0106               	movlb	6	; () banked
 20176   015398  51B2               	movf	(f_getcwd@len+1)& (0+255),w,b
 20177   01539A  0107               	movlb	7	; () banked
 20178   01539C  5909               	subwfb	(f_getcwd@i+1)& (0+255),w,b
 20179   01539E  A0D8               	btfss	status,0,c
 20180   0153A0  EFD4  F0A9         	goto	u33481
 20181   0153A4  EFD6  F0A9         	goto	u33480
 20182   0153A8                     u33481:
 20183   0153A8  EF93  F0A9         	goto	l24025
 20184   0153AC                     u33480:
 20185   0153AC                     l24033:
 20186                           
 20187                           ; BSR set to: 7
 20188                           ;../fatfs/ff.c: 4421:  *tp = 0;
 20189   0153AC  C704  F4F6         	movff	f_getcwd@tp,tblptrl
 20190   0153B0  C705  F4F7         	movff	f_getcwd@tp+1,tblptrh
 20191   0153B4  0E00               	movlw	low (__mediumconst shr (0+16))
 20192   0153B6  6EF8               	movwf	tblptru,c
 20193   0153B8  0E3F               	movlw	(high __ramtop+-1)
 20194   0153BA  64F7               	cpfsgt	tblptrh,c
 20195   0153BC  D004               	bra	u33497
 20196   0153BE  0E00               	movlw	0
 20197   0153C0  6EF5               	movwf	tablat,c
 20198   0153C2  000C               	tblwt		*
 20199   0153C4  D006               	bra	u33490
 20200   0153C6                     u33497:
 20201   0153C6  C4F6 F4E9          	movff	tblptrl,fsr0l
 20202   0153CA  C4F7 F4EA          	movff	tblptrh,fsr0h
 20203   0153CE  0E00               	movlw	0
 20204   0153D0  6EEF               	movwf	indf0,c
 20205   0153D2                     u33490:
 20206   0153D2  0012               	return		;funcret
 20207   0153D4                     __end_of_f_getcwd:
 20208                           	callstack 0
 20209                           
 20210 ;; *************** function _get_fileinfo *****************
 20211 ;; Defined at:
 20212 ;;		line 2618 in file "../fatfs/ff.c"
 20213 ;; Parameters:    Size  Location     Type
 20214 ;;  dp              2   16[COMRAM] PTR struct .
 20215 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_stat@dj(40), f_getcwd@dj(40), 
 20216 ;;  fno             2   18[COMRAM] PTR struct .
 20217 ;;		 -> scan_files1@fno(22), scan_files@fno(22), f_getcwd@fno(22), 
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  di              2   27[COMRAM] unsigned int 
 20220 ;;  si              2   24[COMRAM] unsigned int 
 20221 ;;  c               1   26[COMRAM] unsigned char 
 20222 ;; Return value:  Size  Location     Type
 20223 ;;                  1    wreg      void 
 20224 ;; Registers used:
 20225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20226 ;; Tracked objects:
 20227 ;;		On entry : 0/0
 20228 ;;		On exit  : 0/0
 20229 ;;		Unchanged: 0/0
 20230 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20232 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20234 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20235 ;;Total ram usage:       13 bytes
 20236 ;; Hardware stack levels used: 1
 20237 ;; Hardware stack levels required when called: 2
 20238 ;; This function calls:
 20239 ;;		_ld_dword
 20240 ;;		_ld_word
 20241 ;; This function is called by:
 20242 ;;		_f_getcwd
 20243 ;;		_f_readdir
 20244 ;;		_f_stat
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           
 20248                           	psect	text29
 20249   01A316                     __ptext29:
 20250                           	callstack 0
 20251   01A316                     _get_fileinfo:
 20252                           	callstack 122
 20253   01A316                     
 20254                           ;../fatfs/ff.c: 2619:  DIR* dp,;../fatfs/ff.c: 2620:  FILINFO* fno;../fatfs/ff.c: 2622: 
      +                          {;../fatfs/ff.c: 2623:  UINT si, di;;../fatfs/ff.c: 2630:  TCHAR c;;../fatfs/ff.c: 2634:
      +                            fno->fname[0] = 0;
 20255   01A316  EE20 F009          	lfsr	2,9
 20256   01A31A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 20257   01A31C  26D9               	addwf	fsr2l,f,c
 20258   01A31E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 20259   01A320  22DA               	addwfc	fsr2h,f,c
 20260   01A322  6ADF               	clrf	indf2,c
 20261                           
 20262                           ;../fatfs/ff.c: 2635:  if (dp->sect == 0) return;
 20263   01A324  EE20 F016          	lfsr	2,22
 20264   01A328  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20265   01A32A  26D9               	addwf	fsr2l,f,c
 20266   01A32C  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20267   01A32E  22DA               	addwfc	fsr2h,f,c
 20268   01A330  50DE               	movf	postinc2,w,c
 20269   01A332  10DE               	iorwf	postinc2,w,c
 20270   01A334  10DE               	iorwf	postinc2,w,c
 20271   01A336  10DE               	iorwf	postinc2,w,c
 20272   01A338  A4D8               	btfss	status,2,c
 20273   01A33A  EFA1  F0D1         	goto	u32951
 20274   01A33E  EFA3  F0D1         	goto	u32950
 20275   01A342                     u32951:
 20276   01A342  EFA5  F0D1         	goto	l23681
 20277   01A346                     u32950:
 20278   01A346  EF86  F0D2         	goto	l441
 20279   01A34A                     l23681:
 20280                           
 20281                           ;../fatfs/ff.c: 2734:  si = di = 0;
 20282   01A34A  0E00               	movlw	0
 20283   01A34C  6E1D               	movwf	(get_fileinfo@di+1)^(0+1280),c
 20284   01A34E  0E00               	movlw	0
 20285   01A350  6E1C               	movwf	get_fileinfo@di^(0+1280),c
 20286   01A352  C51C  F519         	movff	get_fileinfo@di,get_fileinfo@si
 20287   01A356  C51D  F51A         	movff	get_fileinfo@di+1,get_fileinfo@si+1
 20288                           
 20289                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 20290   01A35A  EF03  F0D2         	goto	l23703
 20291   01A35E                     l23683:
 20292                           
 20293                           ;../fatfs/ff.c: 2736:   c = (TCHAR)dp->dir[si++];
 20294   01A35E  EE20 F01A          	lfsr	2,26
 20295   01A362  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20296   01A364  26D9               	addwf	fsr2l,f,c
 20297   01A366  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20298   01A368  22DA               	addwfc	fsr2h,f,c
 20299   01A36A  C4DE F515          	movff	postinc2,??_get_fileinfo
 20300   01A36E  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 20301   01A372  5019               	movf	get_fileinfo@si^(0+1280),w,c
 20302   01A374  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20303   01A376  6ED9               	movwf	fsr2l,c
 20304   01A378  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 20305   01A37A  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20306   01A37C  6EDA               	movwf	fsr2h,c
 20307   01A37E  50DF               	movf	indf2,w,c
 20308   01A380  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 20309   01A382  4A19               	infsnz	get_fileinfo@si^(0+1280),f,c
 20310   01A384  2A1A               	incf	(get_fileinfo@si+1)^(0+1280),f,c
 20311   01A386                     
 20312                           ;../fatfs/ff.c: 2737:   if (c == ' ') continue;
 20313   01A386  0E20               	movlw	32
 20314   01A388  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 20315   01A38A  A4D8               	btfss	status,2,c
 20316   01A38C  EFCA  F0D1         	goto	u32961
 20317   01A390  EFCC  F0D1         	goto	u32960
 20318   01A394                     u32961:
 20319   01A394  EFCE  F0D1         	goto	l23691
 20320   01A398                     u32960:
 20321   01A398  EF03  F0D2         	goto	l23703
 20322   01A39C                     l23691:
 20323                           
 20324                           ;../fatfs/ff.c: 2738:   if (c == 0x05) c = 0xE5;
 20325   01A39C  0E05               	movlw	5
 20326   01A39E  181B               	xorwf	get_fileinfo@c^(0+1280),w,c
 20327   01A3A0  A4D8               	btfss	status,2,c
 20328   01A3A2  EFD5  F0D1         	goto	u32971
 20329   01A3A6  EFD7  F0D1         	goto	u32970
 20330   01A3AA                     u32971:
 20331   01A3AA  EFD9  F0D1         	goto	l23695
 20332   01A3AE                     u32970:
 20333   01A3AE  0EE5               	movlw	229
 20334   01A3B0  6E1B               	movwf	get_fileinfo@c^(0+1280),c
 20335   01A3B2                     l23695:
 20336                           
 20337                           ;../fatfs/ff.c: 2739:   if (si == 9) fno->fname[di++] = '.';
 20338   01A3B2  0E09               	movlw	9
 20339   01A3B4  1819               	xorwf	get_fileinfo@si^(0+1280),w,c
 20340   01A3B6  101A               	iorwf	(get_fileinfo@si+1)^(0+1280),w,c
 20341   01A3B8  A4D8               	btfss	status,2,c
 20342   01A3BA  EFE1  F0D1         	goto	u32981
 20343   01A3BE  EFE3  F0D1         	goto	u32980
 20344   01A3C2                     u32981:
 20345   01A3C2  EFF3  F0D1         	goto	l23701
 20346   01A3C6                     u32980:
 20347   01A3C6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 20348   01A3C8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 20349   01A3CA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 20350   01A3CC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 20351   01A3CE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 20352   01A3D0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 20353   01A3D2  0E09               	movlw	9
 20354   01A3D4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20355   01A3D6  6ED9               	movwf	fsr2l,c
 20356   01A3D8  0E00               	movlw	0
 20357   01A3DA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20358   01A3DC  6EDA               	movwf	fsr2h,c
 20359   01A3DE  0E2E               	movlw	46
 20360   01A3E0  6EDF               	movwf	indf2,c
 20361   01A3E2  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 20362   01A3E4  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 20363   01A3E6                     l23701:
 20364                           
 20365                           ;../fatfs/ff.c: 2740:   fno->fname[di++] = c;
 20366   01A3E6  501C               	movf	get_fileinfo@di^(0+1280),w,c
 20367   01A3E8  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 20368   01A3EA  6E15               	movwf	??_get_fileinfo^(0+1280),c
 20369   01A3EC  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 20370   01A3EE  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 20371   01A3F0  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 20372   01A3F2  0E09               	movlw	9
 20373   01A3F4  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20374   01A3F6  6ED9               	movwf	fsr2l,c
 20375   01A3F8  0E00               	movlw	0
 20376   01A3FA  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20377   01A3FC  6EDA               	movwf	fsr2h,c
 20378   01A3FE  C51B  F4DF         	movff	get_fileinfo@c,indf2
 20379   01A402  4A1C               	infsnz	get_fileinfo@di^(0+1280),f,c
 20380   01A404  2A1D               	incf	(get_fileinfo@di+1)^(0+1280),f,c
 20381   01A406                     l23703:
 20382                           
 20383                           ;../fatfs/ff.c: 2735:  while (si < 11) {
 20384   01A406  501A               	movf	(get_fileinfo@si+1)^(0+1280),w,c
 20385   01A408  E109               	bnz	u32990
 20386   01A40A  0E0B               	movlw	11
 20387   01A40C  5C19               	subwf	get_fileinfo@si^(0+1280),w,c
 20388   01A40E  A0D8               	btfss	status,0,c
 20389   01A410  EF0C  F0D2         	goto	u32991
 20390   01A414  EF0E  F0D2         	goto	u32990
 20391   01A418                     u32991:
 20392   01A418  EFAF  F0D1         	goto	l23683
 20393   01A41C                     u32990:
 20394   01A41C                     
 20395                           ;../fatfs/ff.c: 2742:  fno->fname[di] = 0;
 20396   01A41C  501C               	movf	get_fileinfo@di^(0+1280),w,c
 20397   01A41E  2413               	addwf	get_fileinfo@fno^(0+1280),w,c
 20398   01A420  6E15               	movwf	??_get_fileinfo^(0+1280),c
 20399   01A422  501D               	movf	(get_fileinfo@di+1)^(0+1280),w,c
 20400   01A424  2014               	addwfc	(get_fileinfo@fno+1)^(0+1280),w,c
 20401   01A426  6E16               	movwf	(??_get_fileinfo+1)^(0+1280),c
 20402   01A428  0E09               	movlw	9
 20403   01A42A  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20404   01A42C  6ED9               	movwf	fsr2l,c
 20405   01A42E  0E00               	movlw	0
 20406   01A430  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20407   01A432  6EDA               	movwf	fsr2h,c
 20408   01A434  6ADF               	clrf	indf2,c
 20409   01A436                     
 20410                           ;../fatfs/ff.c: 2745:  fno->fattrib = dp->dir[11] & 0x3F;
 20411   01A436  EE20 F008          	lfsr	2,8
 20412   01A43A  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 20413   01A43C  26D9               	addwf	fsr2l,f,c
 20414   01A43E  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 20415   01A440  22DA               	addwfc	fsr2h,f,c
 20416   01A442  EE10 F01A          	lfsr	1,26
 20417   01A446  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20418   01A448  26E1               	addwf	fsr1l,f,c
 20419   01A44A  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20420   01A44C  22E2               	addwfc	fsr1h,f,c
 20421   01A44E  EE00 F00B          	lfsr	0,11
 20422   01A452  50E6               	movf	postinc1,w,c
 20423   01A454  26E9               	addwf	fsr0l,f,c
 20424   01A456  50E5               	movf	postdec1,w,c
 20425   01A458  22EA               	addwfc	fsr0h,f,c
 20426   01A45A  50EF               	movf	indf0,w,c
 20427   01A45C  0B3F               	andlw	63
 20428   01A45E  6EDF               	movwf	indf2,c
 20429   01A460                     
 20430                           ;../fatfs/ff.c: 2746:  fno->fsize = ld_dword(dp->dir + 28);
 20431   01A460  EE20 F01A          	lfsr	2,26
 20432   01A464  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20433   01A466  26D9               	addwf	fsr2l,f,c
 20434   01A468  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20435   01A46A  22DA               	addwfc	fsr2h,f,c
 20436   01A46C  C4DE F515          	movff	postinc2,??_get_fileinfo
 20437   01A470  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 20438   01A474  0E1C               	movlw	28
 20439   01A476  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20440   01A478  6E04               	movwf	ld_dword@ptr^(0+1280),c
 20441   01A47A  0E00               	movlw	0
 20442   01A47C  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20443   01A47E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 20444   01A480  ECC7  F0F2         	call	_ld_dword	;wreg free
 20445   01A484  C513  F4D9         	movff	get_fileinfo@fno,fsr2l
 20446   01A488  C514  F4DA         	movff	get_fileinfo@fno+1,fsr2h
 20447   01A48C  C504  F4DE         	movff	?_ld_dword,postinc2
 20448   01A490  C505  F4DE         	movff	?_ld_dword+1,postinc2
 20449   01A494  C506  F4DE         	movff	?_ld_dword+2,postinc2
 20450   01A498  C507  F4DE         	movff	?_ld_dword+3,postinc2
 20451   01A49C                     
 20452                           ;../fatfs/ff.c: 2747:  fno->ftime = ld_word(dp->dir + 22 + 0);
 20453   01A49C  EE20 F01A          	lfsr	2,26
 20454   01A4A0  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20455   01A4A2  26D9               	addwf	fsr2l,f,c
 20456   01A4A4  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20457   01A4A6  22DA               	addwfc	fsr2h,f,c
 20458   01A4A8  C4DE F515          	movff	postinc2,??_get_fileinfo
 20459   01A4AC  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 20460   01A4B0  0E16               	movlw	22
 20461   01A4B2  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20462   01A4B4  6E04               	movwf	ld_word@ptr^(0+1280),c
 20463   01A4B6  0E00               	movlw	0
 20464   01A4B8  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20465   01A4BA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 20466   01A4BC  EC4C  F0FF         	call	_ld_word	;wreg free
 20467   01A4C0  EE20 F006          	lfsr	2,6
 20468   01A4C4  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 20469   01A4C6  26D9               	addwf	fsr2l,f,c
 20470   01A4C8  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 20471   01A4CA  22DA               	addwfc	fsr2h,f,c
 20472   01A4CC  C504  F4DE         	movff	?_ld_word,postinc2
 20473   01A4D0  C505  F4DD         	movff	?_ld_word+1,postdec2
 20474   01A4D4                     
 20475                           ;../fatfs/ff.c: 2748:  fno->fdate = ld_word(dp->dir + 22 + 2);
 20476   01A4D4  EE20 F01A          	lfsr	2,26
 20477   01A4D8  5011               	movf	get_fileinfo@dp^(0+1280),w,c
 20478   01A4DA  26D9               	addwf	fsr2l,f,c
 20479   01A4DC  5012               	movf	(get_fileinfo@dp+1)^(0+1280),w,c
 20480   01A4DE  22DA               	addwfc	fsr2h,f,c
 20481   01A4E0  C4DE F515          	movff	postinc2,??_get_fileinfo
 20482   01A4E4  C4DD F516          	movff	postdec2,??_get_fileinfo+1
 20483   01A4E8  0E18               	movlw	24
 20484   01A4EA  2415               	addwf	??_get_fileinfo^(0+1280),w,c
 20485   01A4EC  6E04               	movwf	ld_word@ptr^(0+1280),c
 20486   01A4EE  0E00               	movlw	0
 20487   01A4F0  2016               	addwfc	(??_get_fileinfo+1)^(0+1280),w,c
 20488   01A4F2  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 20489   01A4F4  EC4C  F0FF         	call	_ld_word	;wreg free
 20490   01A4F8  EE20 F004          	lfsr	2,4
 20491   01A4FC  5013               	movf	get_fileinfo@fno^(0+1280),w,c
 20492   01A4FE  26D9               	addwf	fsr2l,f,c
 20493   01A500  5014               	movf	(get_fileinfo@fno+1)^(0+1280),w,c
 20494   01A502  22DA               	addwfc	fsr2h,f,c
 20495   01A504  C504  F4DE         	movff	?_ld_word,postinc2
 20496   01A508  C505  F4DD         	movff	?_ld_word+1,postdec2
 20497   01A50C                     l441:
 20498   01A50C  0012               	return		;funcret
 20499   01A50E                     __end_of_get_fileinfo:
 20500                           	callstack 0
 20501                           
 20502 ;; *************** function _dir_read *****************
 20503 ;; Defined at:
 20504 ;;		line 2307 in file "../fatfs/ff.c"
 20505 ;; Parameters:    Size  Location     Type
 20506 ;;  dp              2  124[BANK6 ] PTR struct .
 20507 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_unlink@sdj(40), f_getcwd@dj(40), 
 20508 ;;  vol             2  126[BANK6 ] int 
 20509 ;; Auto vars:     Size  Location     Type
 20510 ;;  fs              2  132[BANK6 ] PTR struct .
 20511 ;;		 -> fs(564), NULL(0), 
 20512 ;;  res             1  136[BANK6 ] enum E597
 20513 ;;  b               1  135[BANK6 ] unsigned char 
 20514 ;;  attr            1  134[BANK6 ] unsigned char 
 20515 ;; Return value:  Size  Location     Type
 20516 ;;                  1    wreg      enum E597
 20517 ;; Registers used:
 20518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20519 ;; Tracked objects:
 20520 ;;		On entry : 0/0
 20521 ;;		On exit  : 0/0
 20522 ;;		Unchanged: 0/0
 20523 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20524 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20525 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20526 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20527 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20528 ;;Total ram usage:       13 bytes
 20529 ;; Hardware stack levels used: 1
 20530 ;; Hardware stack levels required when called: 17
 20531 ;; This function calls:
 20532 ;;		_dir_next
 20533 ;;		_move_window
 20534 ;; This function is called by:
 20535 ;;		_f_getcwd
 20536 ;;		_f_readdir
 20537 ;;		_f_unlink
 20538 ;; This function uses a non-reentrant model
 20539 ;;
 20540                           
 20541                           	psect	text30
 20542   01B160                     __ptext30:
 20543                           	callstack 0
 20544   01B160                     _dir_read:
 20545                           	callstack 107
 20546   01B160                     
 20547                           ;../fatfs/ff.c: 2308:  DIR* dp,;../fatfs/ff.c: 2309:  int vol;../fatfs/ff.c: 2311: {;../
      +                          fatfs/ff.c: 2312:  FRESULT res = FR_NO_FILE;
 20548   01B160  0E04               	movlw	4
 20549   01B162  0106               	movlb	6	; () banked
 20550   01B164  6F88               	movwf	dir_read@res& (0+255),b
 20551   01B166                     
 20552                           ; BSR set to: 6
 20553                           ;../fatfs/ff.c: 2313:  FATFS *fs = dp->obj.fs;
 20554   01B166  C67C  F4D9         	movff	dir_read@dp,fsr2l
 20555   01B16A  C67D  F4DA         	movff	dir_read@dp+1,fsr2h
 20556   01B16E  C4DE F684          	movff	postinc2,dir_read@fs
 20557   01B172  C4DD F685          	movff	postdec2,dir_read@fs+1
 20558                           
 20559                           ;../fatfs/ff.c: 2314:  BYTE attr, b;;../fatfs/ff.c: 2319:  while (dp->sect) {
 20560   01B176  EF5D  F0D9         	goto	l23667
 20561   01B17A                     l23637:
 20562                           
 20563                           ; BSR set to: 6
 20564                           ;../fatfs/ff.c: 2320:   res = move_window(fs, dp->sect);
 20565   01B17A  C684  F61A         	movff	dir_read@fs,move_window@fs
 20566   01B17E  C685  F61B         	movff	dir_read@fs+1,move_window@fs+1
 20567   01B182  EE20 F016          	lfsr	2,22
 20568   01B186  517C               	movf	dir_read@dp& (0+255),w,b
 20569   01B188  26D9               	addwf	fsr2l,f,c
 20570   01B18A  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20571   01B18C  22DA               	addwfc	fsr2h,f,c
 20572   01B18E  C4DE F61C          	movff	postinc2,move_window@sect
 20573   01B192  C4DE F61D          	movff	postinc2,move_window@sect+1
 20574   01B196  C4DE F61E          	movff	postinc2,move_window@sect+2
 20575   01B19A  C4DE F61F          	movff	postinc2,move_window@sect+3
 20576   01B19E  ECAB  F0EF         	call	_move_window	;wreg free
 20577   01B1A2  0106               	movlb	6	; () banked
 20578   01B1A4  6F88               	movwf	dir_read@res& (0+255),b
 20579   01B1A6                     
 20580                           ; BSR set to: 6
 20581                           ;../fatfs/ff.c: 2321:   if (res != FR_OK) break;
 20582   01B1A6  5188               	movf	dir_read@res& (0+255),w,b
 20583   01B1A8  B4D8               	btfsc	status,2,c
 20584   01B1AA  EFD9  F0D8         	goto	u32841
 20585   01B1AE  EFDB  F0D8         	goto	u32840
 20586   01B1B2                     u32841:
 20587   01B1B2  EFDD  F0D8         	goto	l23643
 20588   01B1B6                     u32840:
 20589   01B1B6  EF6E  F0D9         	goto	l23669
 20590   01B1BA                     l23643:
 20591                           
 20592                           ; BSR set to: 6
 20593                           ;../fatfs/ff.c: 2322:   b = dp->dir[0];
 20594   01B1BA  EE20 F01A          	lfsr	2,26
 20595   01B1BE  517C               	movf	dir_read@dp& (0+255),w,b
 20596   01B1C0  26D9               	addwf	fsr2l,f,c
 20597   01B1C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20598   01B1C4  22DA               	addwfc	fsr2h,f,c
 20599   01B1C6  C4DE F680          	movff	postinc2,??_dir_read
 20600   01B1CA  C4DD F681          	movff	postdec2,??_dir_read+1
 20601   01B1CE  C680  F4D9         	movff	??_dir_read,fsr2l
 20602   01B1D2  C681  F4DA         	movff	??_dir_read+1,fsr2h
 20603   01B1D6  50DF               	movf	indf2,w,c
 20604   01B1D8  6F87               	movwf	dir_read@b& (0+255),b
 20605   01B1DA                     
 20606                           ; BSR set to: 6
 20607                           ;../fatfs/ff.c: 2323:   if (b == 0) {
 20608   01B1DA  5187               	movf	dir_read@b& (0+255),w,b
 20609   01B1DC  A4D8               	btfss	status,2,c
 20610   01B1DE  EFF3  F0D8         	goto	u32851
 20611   01B1E2  EFF5  F0D8         	goto	u32850
 20612   01B1E6                     u32851:
 20613   01B1E6  EFF9  F0D8         	goto	l23649
 20614   01B1EA                     u32850:
 20615   01B1EA                     
 20616                           ; BSR set to: 6
 20617                           ;../fatfs/ff.c: 2324:    res = FR_NO_FILE; break;
 20618   01B1EA  0E04               	movlw	4
 20619   01B1EC  6F88               	movwf	dir_read@res& (0+255),b
 20620   01B1EE  EF6E  F0D9         	goto	l23669
 20621   01B1F2                     l23649:
 20622                           
 20623                           ; BSR set to: 6
 20624                           ;../fatfs/ff.c: 2342:   {;../fatfs/ff.c: 2343:    dp->obj.attr = attr = dp->dir[11] & 0x
      +                          3F;
 20625   01B1F2  EE20 F01A          	lfsr	2,26
 20626   01B1F6  517C               	movf	dir_read@dp& (0+255),w,b
 20627   01B1F8  26D9               	addwf	fsr2l,f,c
 20628   01B1FA  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20629   01B1FC  22DA               	addwfc	fsr2h,f,c
 20630   01B1FE  EE10 F00B          	lfsr	1,11
 20631   01B202  50DE               	movf	postinc2,w,c
 20632   01B204  26E1               	addwf	fsr1l,f,c
 20633   01B206  50DD               	movf	postdec2,w,c
 20634   01B208  22E2               	addwfc	fsr1h,f,c
 20635   01B20A  50E7               	movf	indf1,w,c
 20636   01B20C  0B3F               	andlw	63
 20637   01B20E  6F86               	movwf	dir_read@attr& (0+255),b
 20638   01B210  EE20 F004          	lfsr	2,4
 20639   01B214  517C               	movf	dir_read@dp& (0+255),w,b
 20640   01B216  26D9               	addwf	fsr2l,f,c
 20641   01B218  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20642   01B21A  22DA               	addwfc	fsr2h,f,c
 20643   01B21C  C686  F4DF         	movff	dir_read@attr,indf2
 20644   01B220                     
 20645                           ; BSR set to: 6
 20646                           ;../fatfs/ff.c: 2364:    if (b != 0xE5 && b != '.' && attr != 0x0F && (int)((attr & ~0x2
      +                          0) == 0x08) == vol) {
 20647   01B220  0EE5               	movlw	229
 20648   01B222  1987               	xorwf	dir_read@b& (0+255),w,b
 20649   01B224  B4D8               	btfsc	status,2,c
 20650   01B226  EF17  F0D9         	goto	u32861
 20651   01B22A  EF19  F0D9         	goto	u32860
 20652   01B22E                     u32861:
 20653   01B22E  EF47  F0D9         	goto	l23661
 20654   01B232                     u32860:
 20655   01B232                     
 20656                           ; BSR set to: 6
 20657   01B232  0E2E               	movlw	46
 20658   01B234  1987               	xorwf	dir_read@b& (0+255),w,b
 20659   01B236  B4D8               	btfsc	status,2,c
 20660   01B238  EF20  F0D9         	goto	u32871
 20661   01B23C  EF22  F0D9         	goto	u32870
 20662   01B240                     u32871:
 20663   01B240  EF47  F0D9         	goto	l23661
 20664   01B244                     u32870:
 20665   01B244                     
 20666                           ; BSR set to: 6
 20667   01B244  0E0F               	movlw	15
 20668   01B246  1986               	xorwf	dir_read@attr& (0+255),w,b
 20669   01B248  B4D8               	btfsc	status,2,c
 20670   01B24A  EF29  F0D9         	goto	u32881
 20671   01B24E  EF2B  F0D9         	goto	u32880
 20672   01B252                     u32881:
 20673   01B252  EF47  F0D9         	goto	l23661
 20674   01B256                     u32880:
 20675   01B256                     
 20676                           ; BSR set to: 6
 20677   01B256  5186               	movf	dir_read@attr& (0+255),w,b
 20678   01B258  0BDF               	andlw	223
 20679   01B25A  0A08               	xorlw	8
 20680   01B25C  B4D8               	btfsc	status,2,c
 20681   01B25E  EF33  F0D9         	goto	u32891
 20682   01B262  EF36  F0D9         	goto	u32890
 20683   01B266                     u32891:
 20684   01B266  0E01               	movlw	1
 20685   01B268  EF37  F0D9         	goto	u32900
 20686   01B26C                     u32890:
 20687   01B26C  0E00               	movlw	0
 20688   01B26E                     u32900:
 20689   01B26E  6F80               	movwf	??_dir_read& (0+255),b
 20690   01B270  6B81               	clrf	(??_dir_read+1)& (0+255),b
 20691   01B272  517E               	movf	dir_read@vol& (0+255),w,b
 20692   01B274  1980               	xorwf	??_dir_read& (0+255),w,b
 20693   01B276  E107               	bnz	u32911
 20694   01B278  517F               	movf	(dir_read@vol+1)& (0+255),w,b
 20695   01B27A  1981               	xorwf	(??_dir_read+1)& (0+255),w,b
 20696   01B27C  A4D8               	btfss	status,2,c
 20697   01B27E  EF43  F0D9         	goto	u32911
 20698   01B282  EF45  F0D9         	goto	u32910
 20699   01B286                     u32911:
 20700   01B286  EF47  F0D9         	goto	l23661
 20701   01B28A                     u32910:
 20702   01B28A  EF6E  F0D9         	goto	l23669
 20703   01B28E                     l23661:
 20704                           
 20705                           ; BSR set to: 6
 20706                           ;../fatfs/ff.c: 2368:   };../fatfs/ff.c: 2369:   res = dir_next(dp, 0);
 20707   01B28E  C67C  F662         	movff	dir_read@dp,dir_next@dp
 20708   01B292  C67D  F663         	movff	dir_read@dp+1,dir_next@dp+1
 20709   01B296  0E00               	movlw	0
 20710   01B298  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 20711   01B29A  0E00               	movlw	0
 20712   01B29C  6F64               	movwf	dir_next@stretch& (0+255),b
 20713   01B29E  ECCF  F0B0         	call	_dir_next	;wreg free
 20714   01B2A2  0106               	movlb	6	; () banked
 20715   01B2A4  6F88               	movwf	dir_read@res& (0+255),b
 20716   01B2A6                     
 20717                           ; BSR set to: 6
 20718                           ;../fatfs/ff.c: 2370:   if (res != FR_OK) break;
 20719   01B2A6  5188               	movf	dir_read@res& (0+255),w,b
 20720   01B2A8  B4D8               	btfsc	status,2,c
 20721   01B2AA  EF59  F0D9         	goto	u32921
 20722   01B2AE  EF5B  F0D9         	goto	u32920
 20723   01B2B2                     u32921:
 20724   01B2B2  EF5D  F0D9         	goto	l23667
 20725   01B2B6                     u32920:
 20726   01B2B6  EF6E  F0D9         	goto	l23669
 20727   01B2BA                     l23667:
 20728                           
 20729                           ; BSR set to: 6
 20730                           ;../fatfs/ff.c: 2319:  while (dp->sect) {
 20731   01B2BA  EE20 F016          	lfsr	2,22
 20732   01B2BE  517C               	movf	dir_read@dp& (0+255),w,b
 20733   01B2C0  26D9               	addwf	fsr2l,f,c
 20734   01B2C2  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20735   01B2C4  22DA               	addwfc	fsr2h,f,c
 20736   01B2C6  50DE               	movf	postinc2,w,c
 20737   01B2C8  10DE               	iorwf	postinc2,w,c
 20738   01B2CA  10DE               	iorwf	postinc2,w,c
 20739   01B2CC  10DE               	iorwf	postinc2,w,c
 20740   01B2CE  A4D8               	btfss	status,2,c
 20741   01B2D0  EF6C  F0D9         	goto	u32931
 20742   01B2D4  EF6E  F0D9         	goto	u32930
 20743   01B2D8                     u32931:
 20744   01B2D8  EFBD  F0D8         	goto	l23637
 20745   01B2DC                     u32930:
 20746   01B2DC                     l23669:
 20747                           
 20748                           ; BSR set to: 6
 20749                           ;../fatfs/ff.c: 2373:  if (res != FR_OK) dp->sect = 0;
 20750   01B2DC  5188               	movf	dir_read@res& (0+255),w,b
 20751   01B2DE  B4D8               	btfsc	status,2,c
 20752   01B2E0  EF74  F0D9         	goto	u32941
 20753   01B2E4  EF76  F0D9         	goto	u32940
 20754   01B2E8                     u32941:
 20755   01B2E8  EF80  F0D9         	goto	l23673
 20756   01B2EC                     u32940:
 20757   01B2EC                     
 20758                           ; BSR set to: 6
 20759   01B2EC  EE20 F016          	lfsr	2,22
 20760   01B2F0  517C               	movf	dir_read@dp& (0+255),w,b
 20761   01B2F2  26D9               	addwf	fsr2l,f,c
 20762   01B2F4  517D               	movf	(dir_read@dp+1)& (0+255),w,b
 20763   01B2F6  22DA               	addwfc	fsr2h,f,c
 20764   01B2F8  6ADE               	clrf	postinc2,c
 20765   01B2FA  6ADE               	clrf	postinc2,c
 20766   01B2FC  6ADE               	clrf	postinc2,c
 20767   01B2FE  6ADD               	clrf	postdec2,c
 20768   01B300                     l23673:
 20769                           
 20770                           ; BSR set to: 6
 20771                           ;../fatfs/ff.c: 2374:  return res;
 20772   01B300  5188               	movf	dir_read@res& (0+255),w,b
 20773   01B302                     
 20774                           ; BSR set to: 6
 20775   01B302  0012               	return		;funcret
 20776   01B304                     __end_of_dir_read:
 20777                           	callstack 0
 20778                           
 20779 ;; *************** function _f_closedir *****************
 20780 ;; Defined at:
 20781 ;;		line 4665 in file "../fatfs/ff.c"
 20782 ;; Parameters:    Size  Location     Type
 20783 ;;  dp              2  105[BANK5 ] PTR struct .
 20784 ;;		 -> scan_files1@dir(40), scan_files@dir(40), 
 20785 ;; Auto vars:     Size  Location     Type
 20786 ;;  fs              2  107[BANK5 ] PTR struct .
 20787 ;;		 -> fs(564), NULL(0), 
 20788 ;;  res             1  109[BANK5 ] enum E597
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  1    wreg      enum E597
 20791 ;; Registers used:
 20792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/0
 20795 ;;		On exit  : 0/0
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20799 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20802 ;;Total ram usage:        5 bytes
 20803 ;; Hardware stack levels used: 1
 20804 ;; Hardware stack levels required when called: 11
 20805 ;; This function calls:
 20806 ;;		_validate
 20807 ;; This function is called by:
 20808 ;;		_scan_files
 20809 ;;		_scan_files1
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text31
 20814   01FDB8                     __ptext31:
 20815                           	callstack 0
 20816   01FDB8                     _f_closedir:
 20817                           	callstack 114
 20818   01FDB8                     
 20819                           ;../fatfs/ff.c: 4666:  DIR *dp;../fatfs/ff.c: 4668: {;../fatfs/ff.c: 4669:  FRESULT res;
      +                          ;../fatfs/ff.c: 4670:  FATFS *fs;;../fatfs/ff.c: 4673:  res = validate(&dp->obj, &fs);
 20820   01FDB8  C5C9  F5BE         	movff	f_closedir@dp,validate@obj
 20821   01FDBC  C5CA  F5BF         	movff	f_closedir@dp+1,validate@obj+1
 20822   01FDC0  0ECB               	movlw	low f_closedir@fs
 20823   01FDC2  0105               	movlb	5	; () banked
 20824   01FDC4  6FC0               	movwf	validate@rfs& (0+255),b
 20825   01FDC6  0E05               	movlw	high f_closedir@fs
 20826   01FDC8  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 20827   01FDCA  ECA3  F0E9         	call	_validate	;wreg free
 20828   01FDCE  0105               	movlb	5	; () banked
 20829   01FDD0  6FCD               	movwf	f_closedir@res& (0+255),b
 20830   01FDD2                     
 20831                           ; BSR set to: 5
 20832                           ;../fatfs/ff.c: 4674:  if (res == FR_OK) {
 20833   01FDD2  51CD               	movf	f_closedir@res& (0+255),w,b
 20834   01FDD4  A4D8               	btfss	status,2,c
 20835   01FDD6  EFEF  F0FE         	goto	u33581
 20836   01FDDA  EFF1  F0FE         	goto	u33580
 20837   01FDDE                     u33581:
 20838   01FDDE  EFF7  F0FE         	goto	l835
 20839   01FDE2                     u33580:
 20840   01FDE2                     
 20841                           ; BSR set to: 5
 20842                           ;../fatfs/ff.c: 4679:   dp->obj.fs = 0;
 20843   01FDE2  C5C9  F4D9         	movff	f_closedir@dp,fsr2l
 20844   01FDE6  C5CA  F4DA         	movff	f_closedir@dp+1,fsr2h
 20845   01FDEA  6ADE               	clrf	postinc2,c
 20846   01FDEC  6ADD               	clrf	postdec2,c
 20847   01FDEE                     l835:
 20848                           
 20849                           ; BSR set to: 5
 20850   01FDEE  0012               	return		;funcret
 20851   01FDF0                     __end_of_f_closedir:
 20852                           	callstack 0
 20853                           
 20854 ;; *************** function _continue_action *****************
 20855 ;; Defined at:
 20856 ;;		line 378 in file "../src/boards/w65_bd.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;		None
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;		None
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      void 
 20863 ;; Registers used:
 20864 ;;		wreg, status,2, cstack
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20874 ;;Total ram usage:        0 bytes
 20875 ;; Hardware stack levels used: 1
 20876 ;; Hardware stack levels required when called: 2
 20877 ;; This function calls:
 20878 ;;		_bus_release_req
 20879 ;; This function is called by:
 20880 ;;		_return_cpu
 20881 ;; This function uses a non-reentrant model
 20882 ;;
 20883                           
 20884                           	psect	text32
 20885   01FB2C                     __ptext32:
 20886                           	callstack 0
 20887   01FB2C                     _continue_action:
 20888                           	callstack 123
 20889   01FB2C                     
 20890                           ;../src/boards/w65_bd.c: 380:  CLCSELECT = 0;
 20891   01FB2C  0100               	movlb	0	; () banked
 20892   01FB2E  6BD5               	clrf	213,b	;volatile
 20893   01FB30                     
 20894                           ; BSR set to: 0
 20895                           ;../src/boards/w65_bd.c: 381:  bus_release_req();
 20896   01FB30  EC36  F001         	call	_bus_release_req	;wreg free
 20897   01FB34                     
 20898                           ;../src/boards/w65_bd.c: 383:  G2POL = 1;
 20899   01FB34  0100               	movlb	0	; () banked
 20900   01FB36  83D7               	bsf	215,1,b	;volatile
 20901   01FB38                     
 20902                           ; BSR set to: 0
 20903                           ;../src/boards/w65_bd.c: 385:  CLCSELECT = 1;
 20904   01FB38  0E01               	movlw	1
 20905   01FB3A  6FD5               	movwf	213,b	;volatile
 20906   01FB3C                     
 20907                           ; BSR set to: 0
 20908                           ;../src/boards/w65_bd.c: 386:  G2POL = 1;
 20909   01FB3C  83D7               	bsf	215,1,b	;volatile
 20910   01FB3E                     l2246:
 20911                           
 20912                           ; BSR set to: 0
 20913   01FB3E  AFD4               	btfss	212,7,b	;volatile
 20914   01FB40  EFA4  F0FD         	goto	u34271
 20915   01FB44  EFA6  F0FD         	goto	u34270
 20916   01FB48                     u34271:
 20917   01FB48  EF9F  F0FD         	goto	l2246
 20918   01FB4C                     u34270:
 20919   01FB4C                     
 20920                           ; BSR set to: 0
 20921                           ;../src/boards/w65_bd.c: 388:  G2POL = 0;
 20922   01FB4C  93D7               	bcf	215,1,b	;volatile
 20923   01FB4E                     
 20924                           ; BSR set to: 0
 20925                           ;../src/boards/w65_bd.c: 389:  CLCSELECT = 7;
 20926   01FB4E  0E07               	movlw	7
 20927   01FB50  6FD5               	movwf	213,b	;volatile
 20928   01FB52                     
 20929                           ; BSR set to: 0
 20930                           ;../src/boards/w65_bd.c: 390:  G3POL = 1;
 20931   01FB52  85D7               	bsf	215,2,b	;volatile
 20932   01FB54                     
 20933                           ; BSR set to: 0
 20934                           ;../src/boards/w65_bd.c: 391:  G3POL = 0;
 20935   01FB54  95D7               	bcf	215,2,b	;volatile
 20936                           
 20937                           ;../src/boards/w65_bd.c: 393:  if( fh.irq_sw ) {
 20938   01FB56  0108               	movlb	8	; () banked
 20939   01FB58  51BB               	movf	(_fh+25)& (0+255),w,b
 20940   01FB5A  B4D8               	btfsc	status,2,c
 20941   01FB5C  EFB2  F0FD         	goto	u34281
 20942   01FB60  EFB4  F0FD         	goto	u34280
 20943   01FB64                     u34281:
 20944   01FB64  EFB8  F0FD         	goto	l2250
 20945   01FB68                     u34280:
 20946   01FB68                     
 20947                           ; BSR set to: 8
 20948                           ;../src/boards/w65_bd.c: 394:   GIE = 0;
 20949   01FB68  9ED6               	bcf	1238,7,c	;volatile
 20950                           
 20951                           ;../src/boards/w65_bd.c: 395:   irq_flg = 0;
 20952   01FB6A  0107               	movlb	7	; () banked
 20953   01FB6C  6BC7               	clrf	_irq_flg& (0+255),b
 20954                           
 20955                           ;../src/boards/w65_bd.c: 396:   GIE = 1;
 20956   01FB6E  8ED6               	bsf	1238,7,c	;volatile
 20957   01FB70                     l2250:
 20958   01FB70  0012               	return		;funcret
 20959   01FB72                     __end_of_continue_action:
 20960                           	callstack 0
 20961                           
 20962 ;; *************** function _reset_cpu *****************
 20963 ;; Defined at:
 20964 ;;		line 180 in file "../src/boards/w65_cmn.c"
 20965 ;; Parameters:    Size  Location     Type
 20966 ;;		None
 20967 ;; Auto vars:     Size  Location     Type
 20968 ;;  i               2    0        int 
 20969 ;; Return value:  Size  Location     Type
 20970 ;;                  1    wreg      void 
 20971 ;; Registers used:
 20972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20973 ;; Tracked objects:
 20974 ;;		On entry : 0/0
 20975 ;;		On exit  : 0/0
 20976 ;;		Unchanged: 0/0
 20977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 20978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 20982 ;;Total ram usage:        2 bytes
 20983 ;; Hardware stack levels used: 1
 20984 ;; Hardware stack levels required when called: 9
 20985 ;; This function calls:
 20986 ;;		_bus_hold_req
 20987 ;;		_bus_release_req
 20988 ;;		_memcmp
 20989 ;;		_printf
 20990 ;;		_read_sram
 20991 ;;		_write_sram
 20992 ;; This function is called by:
 20993 ;;		_main
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text33
 20998   01DE7C                     __ptext33:
 20999                           	callstack 0
 21000   01DE7C                     _reset_cpu:
 21001                           	callstack 117
 21002   01DE7C                     
 21003                           ;../src/boards/w65_cmn.c: 182:  int i;;../src/boards/w65_cmn.c: 185:  bus_hold_req();
 21004   01DE7C  EC30  F001         	call	_bus_hold_req	;wreg free
 21005   01DE80                     
 21006                           ;../src/boards/w65_cmn.c: 186:  cpu_flg = 0;
 21007   01DE80  0107               	movlb	7	; () banked
 21008   01DE82  6BE5               	clrf	_cpu_flg& (0+255),b
 21009   01DE84                     
 21010                           ; BSR set to: 7
 21011                           ;../src/boards/w65_cmn.c: 187:  write_sram(0xfff0, (uint8_t *)rom, 16);
 21012   01DE84  0EF0               	movlw	240
 21013   01DE86  6E04               	movwf	write_sram@addr^(0+1280),c
 21014   01DE88  0EFF               	movlw	255
 21015   01DE8A  6E05               	movwf	(write_sram@addr+1)^(0+1280),c
 21016   01DE8C  0E00               	movlw	0
 21017   01DE8E  6E06               	movwf	(write_sram@addr+2)^(0+1280),c
 21018   01DE90  0E00               	movlw	0
 21019   01DE92  6E07               	movwf	(write_sram@addr+3)^(0+1280),c
 21020   01DE94  0E0F               	movlw	low _rom
 21021   01DE96  6E08               	movwf	write_sram@buf^(0+1280),c
 21022   01DE98  0EF2               	movlw	high _rom
 21023   01DE9A  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 21024   01DE9C  0E00               	movlw	0
 21025   01DE9E  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 21026   01DEA0  0E10               	movlw	16
 21027   01DEA2  6E0A               	movwf	write_sram@len^(0+1280),c
 21028   01DEA4  EC9F  F0E8         	call	_write_sram	;wreg free
 21029   01DEA8                     
 21030                           ;../src/boards/w65_cmn.c: 188:  read_sram(0xfff0, tmp_buf[0], 16);
 21031   01DEA8  0EF0               	movlw	240
 21032   01DEAA  6E04               	movwf	read_sram@addr^(0+1280),c
 21033   01DEAC  0EFF               	movlw	255
 21034   01DEAE  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 21035   01DEB0  0E00               	movlw	0
 21036   01DEB2  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 21037   01DEB4  0E00               	movlw	0
 21038   01DEB6  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 21039   01DEB8  0EF8               	movlw	low _tmp_buf
 21040   01DEBA  6E08               	movwf	read_sram@buf^(0+1280),c
 21041   01DEBC  0E13               	movlw	high _tmp_buf
 21042   01DEBE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 21043   01DEC0  0E00               	movlw	0
 21044   01DEC2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 21045   01DEC4  0E10               	movlw	16
 21046   01DEC6  6E0A               	movwf	read_sram@len^(0+1280),c
 21047   01DEC8  EC0C  F0F2         	call	_read_sram	;wreg free
 21048   01DECC                     
 21049                           ;../src/boards/w65_cmn.c: 189:  if (memcmp(rom, tmp_buf[0], 16) != 0) {
 21050   01DECC  0E0F               	movlw	low _rom
 21051   01DECE  6E04               	movwf	memcmp@vl^(0+1280),c
 21052   01DED0  0EF2               	movlw	high _rom
 21053   01DED2  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 21054   01DED4  0EF8               	movlw	low _tmp_buf
 21055   01DED6  6E06               	movwf	memcmp@vr^(0+1280),c
 21056   01DED8  0E13               	movlw	high _tmp_buf
 21057   01DEDA  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 21058   01DEDC  0E00               	movlw	0
 21059   01DEDE  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 21060   01DEE0  0E10               	movlw	16
 21061   01DEE2  6E08               	movwf	memcmp@n^(0+1280),c
 21062   01DEE4  EC23  F0EA         	call	_memcmp	;wreg free
 21063   01DEE8  5004               	movf	?_memcmp^(0+1280),w,c
 21064   01DEEA  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 21065   01DEEC  B4D8               	btfsc	status,2,c
 21066   01DEEE  EF7B  F0EF         	goto	u34731
 21067   01DEF2  EF7D  F0EF         	goto	u34730
 21068   01DEF6                     u34731:
 21069   01DEF6  EF88  F0EF         	goto	l24919
 21070   01DEFA                     u34730:
 21071   01DEFA                     
 21072                           ;../src/boards/w65_cmn.c: 190:   bus_release_req();
 21073   01DEFA  EC36  F001         	call	_bus_release_req	;wreg free
 21074   01DEFE                     
 21075                           ;../src/boards/w65_cmn.c: 191:   printf("Memory Write Error\r\n");
 21076   01DEFE  0E46               	movlw	low STR_170
 21077   01DF00  0105               	movlb	5	; () banked
 21078   01DF02  6FAD               	movwf	printf@fmt& (0+255),b
 21079   01DF04  0EFC               	movlw	high STR_170
 21080   01DF06  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21081   01DF08  ECDA  F0FF         	call	_printf	;wreg free
 21082   01DF0C                     l2145:
 21083   01DF0C  EF86  F0EF         	goto	l2145
 21084   01DF10                     l24919:
 21085                           
 21086                           ;../src/boards/w65_cmn.c: 194:  bus_release_req();
 21087   01DF10  EC36  F001         	call	_bus_release_req	;wreg free
 21088   01DF14                     
 21089                           ;../src/boards/w65_cmn.c: 196:  LATA0 = 1;
 21090   01DF14  80BE               	bsf	1214,0,c	;volatile
 21091   01DF16                     
 21092                           ;../src/boards/w65_cmn.c: 197:  LATE0 = 1;
 21093   01DF16  80C2               	bsf	1218,0,c	;volatile
 21094   01DF18                     
 21095                           ;../src/boards/w65_cmn.c: 199:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 21096   01DF18  0E09               	movlw	9
 21097   01DF1A  0105               	movlb	5	; () banked
 21098   01DF1C  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 21099   01DF1E  0E1E               	movlw	30
 21100   01DF20  6FBD               	movwf	??_reset_cpu& (0+255),b
 21101   01DF22  0EE4               	movlw	228
 21102   01DF24                     u36867:
 21103   01DF24  2EE8               	decfsz	wreg,f,c
 21104   01DF26  D7FE               	bra	u36867
 21105   01DF28  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 21106   01DF2A  D7FC               	bra	u36867
 21107   01DF2C  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 21108   01DF2E  D7FA               	bra	u36867
 21109   01DF30  0000               	nop	
 21110   01DF32                     
 21111                           ;../src/boards/w65_cmn.c: 201:  LATA0 = 0;
 21112   01DF32  90BE               	bcf	1214,0,c	;volatile
 21113   01DF34                     
 21114                           ;../src/boards/w65_cmn.c: 202:  LATE0 = 0;
 21115   01DF34  90C2               	bcf	1218,0,c	;volatile
 21116   01DF36                     
 21117                           ;../src/boards/w65_cmn.c: 204:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 21118   01DF36  0E09               	movlw	9
 21119   01DF38  0105               	movlb	5	; () banked
 21120   01DF3A  6FBE               	movwf	(??_reset_cpu+1)& (0+255),b
 21121   01DF3C  0E1E               	movlw	30
 21122   01DF3E  6FBD               	movwf	??_reset_cpu& (0+255),b
 21123   01DF40  0EE4               	movlw	228
 21124   01DF42                     u36877:
 21125   01DF42  2EE8               	decfsz	wreg,f,c
 21126   01DF44  D7FE               	bra	u36877
 21127   01DF46  2FBD               	decfsz	??_reset_cpu& (0+255),f,b
 21128   01DF48  D7FC               	bra	u36877
 21129   01DF4A  2FBE               	decfsz	(??_reset_cpu+1)& (0+255),f,b
 21130   01DF4C  D7FA               	bra	u36877
 21131   01DF4E  0000               	nop	
 21132                           
 21133                           ;../src/boards/w65_cmn.c: 206:  bus_hold_req();
 21134   01DF50  EC30  F001         	call	_bus_hold_req	;wreg free
 21135   01DF54  0012               	return		;funcret
 21136   01DF56                     __end_of_reset_cpu:
 21137                           	callstack 0
 21138                           
 21139 ;; *************** function _reset_clk *****************
 21140 ;; Defined at:
 21141 ;;		line 329 in file "../src/boards/w65_cmn.c"
 21142 ;; Parameters:    Size  Location     Type
 21143 ;;		None
 21144 ;; Auto vars:     Size  Location     Type
 21145 ;;		None
 21146 ;; Return value:  Size  Location     Type
 21147 ;;                  1    wreg      void 
 21148 ;; Registers used:
 21149 ;;		None
 21150 ;; Tracked objects:
 21151 ;;		On entry : 0/0
 21152 ;;		On exit  : 0/0
 21153 ;;		Unchanged: 0/0
 21154 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21159 ;;Total ram usage:        0 bytes
 21160 ;; Hardware stack levels used: 1
 21161 ;; Hardware stack levels required when called: 1
 21162 ;; This function calls:
 21163 ;;		Nothing
 21164 ;; This function is called by:
 21165 ;;		_main
 21166 ;; This function uses a non-reentrant model
 21167 ;;
 21168                           
 21169                           	psect	text34
 21170   0001C6                     __ptext34:
 21171                           	callstack 0
 21172   0001C6                     _reset_clk:
 21173                           	callstack 125
 21174   0001C6                     
 21175                           ;../src/boards/w65_cmn.c: 331:  NCO1EN = 0;
 21176   0001C6  0104               	movlb	4	; () banked
 21177   0001C8  9F46               	bcf	70,7,b	;volatile
 21178                           
 21179                           ;../src/boards/w65_cmn.c: 332:  NCO1OUT = 0;
 21180   0001CA  9B46               	bcf	70,5,b	;volatile
 21181                           
 21182                           ;../src/boards/w65_cmn.c: 333:  NCO1INC = (__uint24)clk_fs;
 21183   0001CC  C7DB  F443         	movff	_clk_fs,1091	;volatile
 21184   0001D0  C7DC  F444         	movff	_clk_fs+1,1092	;volatile
 21185   0001D4  C7DD  F445         	movff	_clk_fs+2,1093	;volatile
 21186                           
 21187                           ;../src/boards/w65_cmn.c: 334:  NCO1OUT = 1;
 21188   0001D8  8B46               	bsf	70,5,b	;volatile
 21189                           
 21190                           ;../src/boards/w65_cmn.c: 335:  NCO1EN = 1;
 21191   0001DA  8F46               	bsf	70,7,b	;volatile
 21192   0001DC                     
 21193                           ; BSR set to: 4
 21194   0001DC  0012               	return		;funcret
 21195   0001DE                     __end_of_reset_clk:
 21196                           	callstack 0
 21197                           
 21198 ;; *************** function _port_init *****************
 21199 ;; Defined at:
 21200 ;;		line 209 in file "../src/boards/w65_cmn.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;		None
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;		None
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1    wreg      void 
 21207 ;; Registers used:
 21208 ;;		wreg, status,2
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/0
 21211 ;;		On exit  : 0/0
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21218 ;;Total ram usage:        0 bytes
 21219 ;; Hardware stack levels used: 1
 21220 ;; Hardware stack levels required when called: 1
 21221 ;; This function calls:
 21222 ;;		Nothing
 21223 ;; This function is called by:
 21224 ;;		_main
 21225 ;; This function uses a non-reentrant model
 21226 ;;
 21227                           
 21228                           	psect	text35
 21229   01F690                     __ptext35:
 21230                           	callstack 0
 21231   01F690                     _port_init:
 21232                           	callstack 125
 21233   01F690                     
 21234                           ;../src/boards/w65_cmn.c: 212:     OSCFRQ = 0x08;
 21235   01F690  0E08               	movlw	8
 21236   01F692  0100               	movlb	0	; () banked
 21237   01F694  6FB1               	movwf	177,b	;volatile
 21238   01F696                     
 21239                           ; BSR set to: 0
 21240                           ;../src/boards/w65_cmn.c: 215:     ANSELA = 0x00;
 21241   01F696  0104               	movlb	4	; () banked
 21242   01F698  6B00               	clrf	0,b	;volatile
 21243   01F69A                     
 21244                           ; BSR set to: 4
 21245                           ;../src/boards/w65_cmn.c: 216:     ANSELB = 0x00;
 21246   01F69A  6B08               	clrf	8,b	;volatile
 21247   01F69C                     
 21248                           ; BSR set to: 4
 21249                           ;../src/boards/w65_cmn.c: 217:     ANSELC = 0x00;
 21250   01F69C  6B10               	clrf	16,b	;volatile
 21251   01F69E                     
 21252                           ; BSR set to: 4
 21253                           ;../src/boards/w65_cmn.c: 218:     ANSELD = 0x00;
 21254   01F69E  6B18               	clrf	24,b	;volatile
 21255   01F6A0                     
 21256                           ; BSR set to: 4
 21257                           ;../src/boards/w65_cmn.c: 219:     ANSELE0 = 0;
 21258   01F6A0  9120               	bcf	32,0,b	;volatile
 21259   01F6A2                     
 21260                           ; BSR set to: 4
 21261                           ;../src/boards/w65_cmn.c: 220:     ANSELE1 = 0;
 21262   01F6A2  9320               	bcf	32,1,b	;volatile
 21263   01F6A4                     
 21264                           ; BSR set to: 4
 21265                           ;../src/boards/w65_cmn.c: 221:     ANSELE2 = 0;
 21266   01F6A4  9520               	bcf	32,2,b	;volatile
 21267   01F6A6                     
 21268                           ; BSR set to: 4
 21269                           ;../src/boards/w65_cmn.c: 224:  WPUE0 = 0;
 21270   01F6A6  9121               	bcf	33,0,b	;volatile
 21271   01F6A8                     
 21272                           ; BSR set to: 4
 21273                           ;../src/boards/w65_cmn.c: 225:  LATE0 = 0;
 21274   01F6A8  90C2               	bcf	1218,0,c	;volatile
 21275   01F6AA                     
 21276                           ; BSR set to: 4
 21277                           ;../src/boards/w65_cmn.c: 226:  TRISE0 = 0;
 21278   01F6AA  90CA               	bcf	1226,0,c	;volatile
 21279   01F6AC                     
 21280                           ; BSR set to: 4
 21281                           ;../src/boards/w65_cmn.c: 229:  WPUE1 = 0;
 21282   01F6AC  9321               	bcf	33,1,b	;volatile
 21283   01F6AE                     
 21284                           ; BSR set to: 4
 21285                           ;../src/boards/w65_cmn.c: 230:  LATE1 = 1;
 21286   01F6AE  82C2               	bsf	1218,1,c	;volatile
 21287   01F6B0                     
 21288                           ; BSR set to: 4
 21289                           ;../src/boards/w65_cmn.c: 231:  TRISE1 = 0;
 21290   01F6B0  92CA               	bcf	1226,1,c	;volatile
 21291   01F6B2                     
 21292                           ; BSR set to: 4
 21293                           ;../src/boards/w65_cmn.c: 234:  WPUA0 = 0;
 21294   01F6B2  9101               	bcf	1,0,b	;volatile
 21295   01F6B4                     
 21296                           ; BSR set to: 4
 21297                           ;../src/boards/w65_cmn.c: 235:  LATA0 = 0;
 21298   01F6B4  90BE               	bcf	1214,0,c	;volatile
 21299   01F6B6                     
 21300                           ; BSR set to: 4
 21301                           ;../src/boards/w65_cmn.c: 236:  TRISA0 = 0;
 21302   01F6B6  90C6               	bcf	1222,0,c	;volatile
 21303   01F6B8                     
 21304                           ; BSR set to: 4
 21305                           ;../src/boards/w65_cmn.c: 238:  WPUA3 = 0;
 21306   01F6B8  9701               	bcf	1,3,b	;volatile
 21307   01F6BA                     
 21308                           ; BSR set to: 4
 21309                           ;../src/boards/w65_cmn.c: 239:  LATA3 = 1;
 21310   01F6BA  86BE               	bsf	1214,3,c	;volatile
 21311   01F6BC                     
 21312                           ; BSR set to: 4
 21313                           ;../src/boards/w65_cmn.c: 240:  TRISA3 = 0;
 21314   01F6BC  96C6               	bcf	1222,3,c	;volatile
 21315   01F6BE                     
 21316                           ; BSR set to: 4
 21317                           ;../src/boards/w65_cmn.c: 243:  WPUA2 = 1;
 21318   01F6BE  8501               	bsf	1,2,b	;volatile
 21319   01F6C0                     
 21320                           ; BSR set to: 4
 21321                           ;../src/boards/w65_cmn.c: 244:  TRISA2 = 0;
 21322   01F6C0  94C6               	bcf	1222,2,c	;volatile
 21323   01F6C2                     
 21324                           ; BSR set to: 4
 21325                           ;../src/boards/w65_cmn.c: 245:  LATA2 = 1;
 21326   01F6C2  84BE               	bsf	1214,2,c	;volatile
 21327   01F6C4                     
 21328                           ; BSR set to: 4
 21329                           ;../src/boards/w65_cmn.c: 248:  WPUA5 = 0;
 21330   01F6C4  9B01               	bcf	1,5,b	;volatile
 21331   01F6C6                     
 21332                           ; BSR set to: 4
 21333                           ;../src/boards/w65_cmn.c: 249:  TRISA5 = 1;
 21334   01F6C6  8AC6               	bsf	1222,5,c	;volatile
 21335   01F6C8                     
 21336                           ; BSR set to: 4
 21337                           ;../src/boards/w65_cmn.c: 252:  WPUA1 = 0;
 21338   01F6C8  9301               	bcf	1,1,b	;volatile
 21339   01F6CA                     
 21340                           ; BSR set to: 4
 21341                           ;../src/boards/w65_cmn.c: 253:  LATA1 = 0;
 21342   01F6CA  92BE               	bcf	1214,1,c	;volatile
 21343   01F6CC                     
 21344                           ; BSR set to: 4
 21345                           ;../src/boards/w65_cmn.c: 254:  TRISA1 = 0;
 21346   01F6CC  92C6               	bcf	1222,1,c	;volatile
 21347   01F6CE                     
 21348                           ; BSR set to: 4
 21349                           ;../src/boards/w65_cmn.c: 257:  WPUA4 = 1;
 21350   01F6CE  8901               	bsf	1,4,b	;volatile
 21351   01F6D0                     
 21352                           ; BSR set to: 4
 21353                           ;../src/boards/w65_cmn.c: 258:  LATA4 = 1;
 21354   01F6D0  88BE               	bsf	1214,4,c	;volatile
 21355   01F6D2                     
 21356                           ; BSR set to: 4
 21357                           ;../src/boards/w65_cmn.c: 259:  TRISA4 = 0;
 21358   01F6D2  98C6               	bcf	1222,4,c	;volatile
 21359   01F6D4                     
 21360                           ; BSR set to: 4
 21361                           ;../src/boards/w65_cmn.c: 262:     WPUC = 0xff;
 21362   01F6D4  6911               	setf	17,b	;volatile
 21363   01F6D6                     
 21364                           ; BSR set to: 4
 21365                           ;../src/boards/w65_cmn.c: 263:     LATC = 0x00;
 21366   01F6D6  6AC0               	clrf	192,c	;volatile
 21367   01F6D8                     
 21368                           ; BSR set to: 4
 21369                           ;../src/boards/w65_cmn.c: 264:     TRISC = 0x00;
 21370   01F6D8  6AC8               	clrf	200,c	;volatile
 21371   01F6DA                     
 21372                           ; BSR set to: 4
 21373                           ;../src/boards/w65_cmn.c: 267:  WPUD = 0xff;
 21374   01F6DA  6919               	setf	25,b	;volatile
 21375   01F6DC                     
 21376                           ; BSR set to: 4
 21377                           ;../src/boards/w65_cmn.c: 268:  LATD = 0x00;
 21378   01F6DC  6AC1               	clrf	193,c	;volatile
 21379   01F6DE                     
 21380                           ; BSR set to: 4
 21381                           ;../src/boards/w65_cmn.c: 269:  TRISD = 0x00;
 21382   01F6DE  6AC9               	clrf	201,c	;volatile
 21383   01F6E0                     
 21384                           ; BSR set to: 4
 21385                           ;../src/boards/w65_cmn.c: 272:  WPUB = 0xff;
 21386   01F6E0  6909               	setf	9,b	;volatile
 21387   01F6E2                     
 21388                           ; BSR set to: 4
 21389                           ;../src/boards/w65_cmn.c: 273:  LATB = 0x00;
 21390   01F6E2  6ABF               	clrf	191,c	;volatile
 21391   01F6E4                     
 21392                           ; BSR set to: 4
 21393                           ;../src/boards/w65_cmn.c: 274:  TRISB = 0xff;
 21394   01F6E4  68C7               	setf	199,c	;volatile
 21395   01F6E6                     
 21396                           ; BSR set to: 4
 21397                           ;../src/boards/w65_cmn.c: 278:  SLRCONBbits.SLRB0 = 0;
 21398   01F6E6  910B               	bcf	11,0,b	;volatile
 21399   01F6E8                     
 21400                           ; BSR set to: 4
 21401                           ;../src/boards/w65_cmn.c: 279:  SLRCONBbits.SLRB1 = 0;
 21402   01F6E8  930B               	bcf	11,1,b	;volatile
 21403   01F6EA                     
 21404                           ; BSR set to: 4
 21405                           ;../src/boards/w65_cmn.c: 280:  SLRCONBbits.SLRB2 = 0;
 21406   01F6EA  950B               	bcf	11,2,b	;volatile
 21407   01F6EC                     
 21408                           ; BSR set to: 4
 21409                           ;../src/boards/w65_cmn.c: 283:  WPUE2 = 1;
 21410   01F6EC  8521               	bsf	33,2,b	;volatile
 21411   01F6EE                     
 21412                           ; BSR set to: 4
 21413                           ;../src/boards/w65_cmn.c: 284:  LATE2 = 1;
 21414   01F6EE  84C2               	bsf	1218,2,c	;volatile
 21415   01F6F0                     
 21416                           ; BSR set to: 4
 21417                           ;../src/boards/w65_cmn.c: 285:  TRISE2 = 0;
 21418   01F6F0  94CA               	bcf	1226,2,c	;volatile
 21419   01F6F2                     
 21420                           ; BSR set to: 4
 21421   01F6F2  0012               	return		;funcret
 21422   01F6F4                     __end_of_port_init:
 21423                           	callstack 0
 21424                           
 21425 ;; *************** function _mem_init *****************
 21426 ;; Defined at:
 21427 ;;		line 21 in file "../src/memtst.c"
 21428 ;; Parameters:    Size  Location     Type
 21429 ;;		None
 21430 ;; Auto vars:     Size  Location     Type
 21431 ;;  addr            4  136[BANK5 ] unsigned long 
 21432 ;;  i               2  134[BANK5 ] unsigned int 
 21433 ;; Return value:  Size  Location     Type
 21434 ;;                  4  126[BANK5 ] unsigned long 
 21435 ;; Registers used:
 21436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21437 ;; Tracked objects:
 21438 ;;		On entry : 0/0
 21439 ;;		On exit  : 0/0
 21440 ;;		Unchanged: 0/0
 21441 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21443 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21445 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21446 ;;Total ram usage:       14 bytes
 21447 ;; Hardware stack levels used: 1
 21448 ;; Hardware stack levels required when called: 10
 21449 ;; This function calls:
 21450 ;;		_memcmp
 21451 ;;		_printf
 21452 ;;		_read_sram
 21453 ;;		_util_addrdump
 21454 ;;		_write_sram
 21455 ;; This function is called by:
 21456 ;;		_main
 21457 ;; This function uses a non-reentrant model
 21458 ;;
 21459                           
 21460                           	psect	text36
 21461   0190F8                     __ptext36:
 21462                           	callstack 0
 21463   0190F8                     _mem_init:
 21464                           	callstack 116
 21465   0190F8                     
 21466                           ;../src/memtst.c: 23:     unsigned int i;;../src/memtst.c: 24:     uint32_t addr;;../src
      +                          /memtst.c: 27:     for (i = 0; i < 256; i += 2) {
 21467   0190F8  0E00               	movlw	0
 21468   0190FA  0105               	movlb	5	; () banked
 21469   0190FC  6FE7               	movwf	(mem_init@i+1)& (0+255),b
 21470   0190FE  0E00               	movlw	0
 21471   019100  6FE6               	movwf	mem_init@i& (0+255),b
 21472   019102                     l24827:
 21473                           
 21474                           ; BSR set to: 5
 21475                           ;../src/memtst.c: 28:         tmp_buf[0][i + 0] = 0xa5;
 21476   019102  0EF8               	movlw	low _tmp_buf
 21477   019104  25E6               	addwf	mem_init@i& (0+255),w,b
 21478   019106  6ED9               	movwf	fsr2l,c
 21479   019108  0E13               	movlw	high _tmp_buf
 21480   01910A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 21481   01910C  6EDA               	movwf	fsr2h,c
 21482   01910E  0EA5               	movlw	165
 21483   019110  6EDF               	movwf	indf2,c
 21484                           
 21485                           ;../src/memtst.c: 29:         tmp_buf[0][i + 1] = 0x5a;
 21486   019112  0EF9               	movlw	low (_tmp_buf+1)
 21487   019114  25E6               	addwf	mem_init@i& (0+255),w,b
 21488   019116  6ED9               	movwf	fsr2l,c
 21489   019118  0E13               	movlw	high (_tmp_buf+1)
 21490   01911A  21E7               	addwfc	(mem_init@i+1)& (0+255),w,b
 21491   01911C  6EDA               	movwf	fsr2h,c
 21492   01911E  0E5A               	movlw	90
 21493   019120  6EDF               	movwf	indf2,c
 21494   019122                     
 21495                           ; BSR set to: 5
 21496                           ;../src/memtst.c: 30:     }
 21497   019122  0E02               	movlw	2
 21498   019124  27E6               	addwf	mem_init@i& (0+255),f,b
 21499   019126  0E00               	movlw	0
 21500   019128  23E7               	addwfc	(mem_init@i+1)& (0+255),f,b
 21501   01912A                     
 21502                           ; BSR set to: 5
 21503   01912A  05E7               	decf	(mem_init@i+1)& (0+255),w,b
 21504   01912C  A0D8               	btfss	status,0,c
 21505   01912E  EF9B  F0C8         	goto	u34641
 21506   019132  EF9D  F0C8         	goto	u34640
 21507   019136                     u34641:
 21508   019136  EF81  F0C8         	goto	l24827
 21509   01913A                     u34640:
 21510   01913A                     
 21511                           ; BSR set to: 5
 21512                           ;../src/memtst.c: 31:     for (addr = 0; addr < 0x00080000; addr += 256 * 16) {
 21513   01913A  0E00               	movlw	0
 21514   01913C  6FE8               	movwf	mem_init@addr& (0+255),b
 21515   01913E  0E00               	movlw	0
 21516   019140  6FE9               	movwf	(mem_init@addr+1)& (0+255),b
 21517   019142  0E00               	movlw	0
 21518   019144  6FEA               	movwf	(mem_init@addr+2)& (0+255),b
 21519   019146  0E00               	movlw	0
 21520   019148  6FEB               	movwf	(mem_init@addr+3)& (0+255),b
 21521   01914A                     l24839:
 21522                           
 21523                           ; BSR set to: 5
 21524                           ;../src/memtst.c: 32:         printf("Memory $000000 - $%06lX\r", addr);
 21525   01914A  0ED4               	movlw	low STR_41
 21526   01914C  6FAD               	movwf	printf@fmt& (0+255),b
 21527   01914E  0EFA               	movlw	high STR_41
 21528   019150  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21529   019152  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 21530   019156  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 21531   01915A  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 21532   01915E  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 21533   019162  ECDA  F0FF         	call	_printf	;wreg free
 21534   019166                     
 21535                           ;../src/memtst.c: 33:         tmp_buf[0][0] = (addr >> 0) & 0xff;
 21536   019166  EE24  F3F8         	lfsr	2,_tmp_buf
 21537   01916A  C5E8  F4DF         	movff	mem_init@addr,indf2
 21538   01916E                     
 21539                           ;../src/memtst.c: 34:         tmp_buf[0][1] = (addr >> 8) & 0xff;
 21540   01916E  EE24  F3F9         	lfsr	2,_tmp_buf+1
 21541   019172  C5E9  F4DF         	movff	mem_init@addr+1,indf2
 21542   019176                     
 21543                           ;../src/memtst.c: 35:         tmp_buf[0][2] = (addr >> 16) & 0xff;
 21544   019176  EE24  F3FA         	lfsr	2,_tmp_buf+2
 21545   01917A  C5EA  F4DF         	movff	mem_init@addr+2,indf2
 21546   01917E                     
 21547                           ;../src/memtst.c: 37:      write_sram(addr, tmp_buf[0], 256);
 21548   01917E  C5E8  F504         	movff	mem_init@addr,write_sram@addr
 21549   019182  C5E9  F505         	movff	mem_init@addr+1,write_sram@addr+1
 21550   019186  C5EA  F506         	movff	mem_init@addr+2,write_sram@addr+2
 21551   01918A  C5EB  F507         	movff	mem_init@addr+3,write_sram@addr+3
 21552   01918E  0EF8               	movlw	low _tmp_buf
 21553   019190  6E08               	movwf	write_sram@buf^(0+1280),c
 21554   019192  0E13               	movlw	high _tmp_buf
 21555   019194  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 21556   019196  0E01               	movlw	1
 21557   019198  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 21558   01919A  0E00               	movlw	0
 21559   01919C  6E0A               	movwf	write_sram@len^(0+1280),c
 21560   01919E  EC9F  F0E8         	call	_write_sram	;wreg free
 21561   0191A2                     
 21562                           ;../src/memtst.c: 38:         read_sram(addr, tmp_buf[1], 256);
 21563   0191A2  C5E8  F504         	movff	mem_init@addr,read_sram@addr
 21564   0191A6  C5E9  F505         	movff	mem_init@addr+1,read_sram@addr+1
 21565   0191AA  C5EA  F506         	movff	mem_init@addr+2,read_sram@addr+2
 21566   0191AE  C5EB  F507         	movff	mem_init@addr+3,read_sram@addr+3
 21567   0191B2  0EF8               	movlw	low (_tmp_buf+256)
 21568   0191B4  6E08               	movwf	read_sram@buf^(0+1280),c
 21569   0191B6  0E14               	movlw	high (_tmp_buf+256)
 21570   0191B8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 21571   0191BA  0E01               	movlw	1
 21572   0191BC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 21573   0191BE  0E00               	movlw	0
 21574   0191C0  6E0A               	movwf	read_sram@len^(0+1280),c
 21575   0191C2  EC0C  F0F2         	call	_read_sram	;wreg free
 21576   0191C6                     
 21577                           ;../src/memtst.c: 40:      if (memcmp(tmp_buf[0], tmp_buf[1], 256) != 0) {
 21578   0191C6  0EF8               	movlw	low _tmp_buf
 21579   0191C8  6E04               	movwf	memcmp@vl^(0+1280),c
 21580   0191CA  0E13               	movlw	high _tmp_buf
 21581   0191CC  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 21582   0191CE  0EF8               	movlw	low (_tmp_buf+256)
 21583   0191D0  6E06               	movwf	memcmp@vr^(0+1280),c
 21584   0191D2  0E14               	movlw	high (_tmp_buf+256)
 21585   0191D4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 21586   0191D6  0E01               	movlw	1
 21587   0191D8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 21588   0191DA  0E00               	movlw	0
 21589   0191DC  6E08               	movwf	memcmp@n^(0+1280),c
 21590   0191DE  EC23  F0EA         	call	_memcmp	;wreg free
 21591   0191E2  5004               	movf	?_memcmp^(0+1280),w,c
 21592   0191E4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 21593   0191E6  B4D8               	btfsc	status,2,c
 21594   0191E8  EFF8  F0C8         	goto	u34651
 21595   0191EC  EFFA  F0C8         	goto	u34650
 21596   0191F0                     u34651:
 21597   0191F0  EF39  F0C9         	goto	l24855
 21598   0191F4                     u34650:
 21599   0191F4                     
 21600                           ;../src/memtst.c: 41:             printf("\nMemory error at $%06lX\n\r", addr);
 21601   0191F4  0E3C               	movlw	low STR_42
 21602   0191F6  0105               	movlb	5	; () banked
 21603   0191F8  6FAD               	movwf	printf@fmt& (0+255),b
 21604   0191FA  0EFA               	movlw	high STR_42
 21605   0191FC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21606   0191FE  C5E8  F5AF         	movff	mem_init@addr,?_printf+2
 21607   019202  C5E9  F5B0         	movff	mem_init@addr+1,?_printf+3
 21608   019206  C5EA  F5B1         	movff	mem_init@addr+2,?_printf+4
 21609   01920A  C5EB  F5B2         	movff	mem_init@addr+3,?_printf+5
 21610   01920E  ECDA  F0FF         	call	_printf	;wreg free
 21611                           
 21612                           ;../src/memtst.c: 42:             util_addrdump("WR: ", addr, tmp_buf[0], 256);
 21613   019212  0ED0               	movlw	low STR_43
 21614   019214  0105               	movlb	5	; () banked
 21615   019216  6FBD               	movwf	util_addrdump@header& (0+255),b
 21616   019218  0EFF               	movlw	high STR_43
 21617   01921A  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 21618   01921C  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 21619   019220  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 21620   019224  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 21621   019228  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 21622   01922C  0EF8               	movlw	low _tmp_buf
 21623   01922E  6FC3               	movwf	util_addrdump@addr& (0+255),b
 21624   019230  0E13               	movlw	high _tmp_buf
 21625   019232  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 21626   019234  0E01               	movlw	1
 21627   019236  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 21628   019238  0E00               	movlw	0
 21629   01923A  6FC5               	movwf	util_addrdump@size& (0+255),b
 21630   01923C  EC4A  F0E1         	call	_util_addrdump	;wreg free
 21631                           
 21632                           ;../src/memtst.c: 43:             util_addrdump("RD: ", addr, tmp_buf[1], 256);
 21633   019240  0ECB               	movlw	low STR_44
 21634   019242  0105               	movlb	5	; () banked
 21635   019244  6FBD               	movwf	util_addrdump@header& (0+255),b
 21636   019246  0EFF               	movlw	high STR_44
 21637   019248  6FBE               	movwf	(util_addrdump@header+1)& (0+255),b
 21638   01924A  C5E8  F5BF         	movff	mem_init@addr,util_addrdump@addr_offs
 21639   01924E  C5E9  F5C0         	movff	mem_init@addr+1,util_addrdump@addr_offs+1
 21640   019252  C5EA  F5C1         	movff	mem_init@addr+2,util_addrdump@addr_offs+2
 21641   019256  C5EB  F5C2         	movff	mem_init@addr+3,util_addrdump@addr_offs+3
 21642   01925A  0EF8               	movlw	low (_tmp_buf+256)
 21643   01925C  6FC3               	movwf	util_addrdump@addr& (0+255),b
 21644   01925E  0E14               	movlw	high (_tmp_buf+256)
 21645   019260  6FC4               	movwf	(util_addrdump@addr+1)& (0+255),b
 21646   019262  0E01               	movlw	1
 21647   019264  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 21648   019266  0E00               	movlw	0
 21649   019268  6FC5               	movwf	util_addrdump@size& (0+255),b
 21650   01926A  EC4A  F0E1         	call	_util_addrdump	;wreg free
 21651   01926E                     l1302:
 21652   01926E  EF37  F0C9         	goto	l1302
 21653   019272                     l24855:
 21654                           
 21655                           ;../src/memtst.c: 47:         if (addr == 0) continue;
 21656   019272  0105               	movlb	5	; () banked
 21657   019274  51E8               	movf	mem_init@addr& (0+255),w,b
 21658   019276  11E9               	iorwf	(mem_init@addr+1)& (0+255),w,b
 21659   019278  11EA               	iorwf	(mem_init@addr+2)& (0+255),w,b
 21660   01927A  11EB               	iorwf	(mem_init@addr+3)& (0+255),w,b
 21661   01927C  A4D8               	btfss	status,2,c
 21662   01927E  EF43  F0C9         	goto	u34661
 21663   019282  EF45  F0C9         	goto	u34660
 21664   019286                     u34661:
 21665   019286  EF47  F0C9         	goto	l24859
 21666   01928A                     u34660:
 21667   01928A  EF79  F0C9         	goto	l24865
 21668   01928E                     l24859:
 21669                           
 21670                           ; BSR set to: 5
 21671                           ;../src/memtst.c: 49:      read_sram(0, tmp_buf[1], 256);
 21672   01928E  0E00               	movlw	0
 21673   019290  6E04               	movwf	read_sram@addr^(0+1280),c
 21674   019292  0E00               	movlw	0
 21675   019294  6E05               	movwf	(read_sram@addr+1)^(0+1280),c
 21676   019296  0E00               	movlw	0
 21677   019298  6E06               	movwf	(read_sram@addr+2)^(0+1280),c
 21678   01929A  0E00               	movlw	0
 21679   01929C  6E07               	movwf	(read_sram@addr+3)^(0+1280),c
 21680   01929E  0EF8               	movlw	low (_tmp_buf+256)
 21681   0192A0  6E08               	movwf	read_sram@buf^(0+1280),c
 21682   0192A2  0E14               	movlw	high (_tmp_buf+256)
 21683   0192A4  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 21684   0192A6  0E01               	movlw	1
 21685   0192A8  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 21686   0192AA  0E00               	movlw	0
 21687   0192AC  6E0A               	movwf	read_sram@len^(0+1280),c
 21688   0192AE  EC0C  F0F2         	call	_read_sram	;wreg free
 21689   0192B2                     
 21690                           ;../src/memtst.c: 50:         if (memcmp(tmp_buf[0], tmp_buf[1], 256) == 0) {
 21691   0192B2  0EF8               	movlw	low _tmp_buf
 21692   0192B4  6E04               	movwf	memcmp@vl^(0+1280),c
 21693   0192B6  0E13               	movlw	high _tmp_buf
 21694   0192B8  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 21695   0192BA  0EF8               	movlw	low (_tmp_buf+256)
 21696   0192BC  6E06               	movwf	memcmp@vr^(0+1280),c
 21697   0192BE  0E14               	movlw	high (_tmp_buf+256)
 21698   0192C0  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 21699   0192C2  0E01               	movlw	1
 21700   0192C4  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 21701   0192C6  0E00               	movlw	0
 21702   0192C8  6E08               	movwf	memcmp@n^(0+1280),c
 21703   0192CA  EC23  F0EA         	call	_memcmp	;wreg free
 21704   0192CE  5004               	movf	?_memcmp^(0+1280),w,c
 21705   0192D0  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 21706   0192D2  A4D8               	btfss	status,2,c
 21707   0192D4  EF6E  F0C9         	goto	u34671
 21708   0192D8  EF70  F0C9         	goto	u34670
 21709   0192DC                     u34671:
 21710   0192DC  EF79  F0C9         	goto	l24865
 21711   0192E0                     u34670:
 21712   0192E0                     
 21713                           ;../src/memtst.c: 53:    printf("\nMemory wrap around.\n\r");
 21714   0192E0  0EAA               	movlw	low STR_45
 21715   0192E2  0105               	movlb	5	; () banked
 21716   0192E4  6FAD               	movwf	printf@fmt& (0+255),b
 21717   0192E6  0EFB               	movlw	high STR_45
 21718   0192E8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21719   0192EA  ECDA  F0FF         	call	_printf	;wreg free
 21720                           
 21721                           ;../src/memtst.c: 54:          break;
 21722   0192EE  EF8D  F0C9         	goto	l24867
 21723   0192F2                     l24865:
 21724   0192F2  0E00               	movlw	0
 21725   0192F4  0105               	movlb	5	; () banked
 21726   0192F6  27E8               	addwf	mem_init@addr& (0+255),f,b
 21727   0192F8  0E10               	movlw	16
 21728   0192FA  23E9               	addwfc	(mem_init@addr+1)& (0+255),f,b
 21729   0192FC  0E00               	movlw	0
 21730   0192FE  23EA               	addwfc	(mem_init@addr+2)& (0+255),f,b
 21731   019300  0E00               	movlw	0
 21732   019302  23EB               	addwfc	(mem_init@addr+3)& (0+255),f,b
 21733   019304  51EB               	movf	(mem_init@addr+3)& (0+255),w,b
 21734   019306  E109               	bnz	u34680
 21735   019308  0E08               	movlw	8
 21736   01930A  5DEA               	subwf	(mem_init@addr+2)& (0+255),w,b
 21737   01930C  A0D8               	btfss	status,0,c
 21738   01930E  EF8B  F0C9         	goto	u34681
 21739   019312  EF8D  F0C9         	goto	u34680
 21740   019316                     u34681:
 21741   019316  EFA5  F0C8         	goto	l24839
 21742   01931A                     u34680:
 21743   01931A                     l24867:
 21744                           
 21745                           ;../src/memtst.c: 57:  printf("Memory $000000 - $%06lX %d KB OK\r\n", addr-1, (int)(addr
      +                           / 1024));
 21746   01931A  0E8C               	movlw	low STR_46
 21747   01931C  0105               	movlb	5	; () banked
 21748   01931E  6FAD               	movwf	printf@fmt& (0+255),b
 21749   019320  0EF7               	movlw	high STR_46
 21750   019322  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 21751   019324  0EFF               	movlw	255
 21752   019326  25E8               	addwf	mem_init@addr& (0+255),w,b
 21753   019328  6FAF               	movwf	(?_printf+2)& (0+255),b
 21754   01932A  0EFF               	movlw	255
 21755   01932C  21E9               	addwfc	(mem_init@addr+1)& (0+255),w,b
 21756   01932E  6FB0               	movwf	(?_printf+3)& (0+255),b
 21757   019330  0EFF               	movlw	255
 21758   019332  21EA               	addwfc	(mem_init@addr+2)& (0+255),w,b
 21759   019334  6FB1               	movwf	(?_printf+4)& (0+255),b
 21760   019336  0EFF               	movlw	255
 21761   019338  21EB               	addwfc	(mem_init@addr+3)& (0+255),w,b
 21762   01933A  6FB2               	movwf	(?_printf+5)& (0+255),b
 21763   01933C  C5E8  F5E2         	movff	mem_init@addr,??_mem_init
 21764   019340  C5E9  F5E3         	movff	mem_init@addr+1,??_mem_init+1
 21765   019344  C5EA  F5E4         	movff	mem_init@addr+2,??_mem_init+2
 21766   019348  C5EB  F5E5         	movff	mem_init@addr+3,??_mem_init+3
 21767   01934C  0E0B               	movlw	11
 21768   01934E  EFAE  F0C9         	goto	u34690
 21769   019352                     u34695:
 21770   019352  90D8               	bcf	status,0,c
 21771   019354  33E5               	rrcf	(??_mem_init+3)& (0+255),f,b
 21772   019356  33E4               	rrcf	(??_mem_init+2)& (0+255),f,b
 21773   019358  33E3               	rrcf	(??_mem_init+1)& (0+255),f,b
 21774   01935A  33E2               	rrcf	??_mem_init& (0+255),f,b
 21775   01935C                     u34690:
 21776   01935C  2EE8               	decfsz	wreg,f,c
 21777   01935E  EFA9  F0C9         	goto	u34695
 21778   019362  C5E2  F5B3         	movff	??_mem_init,?_printf+6
 21779   019366  C5E3  F5B4         	movff	??_mem_init+1,?_printf+7
 21780   01936A  ECDA  F0FF         	call	_printf	;wreg free
 21781   01936E                     
 21782                           ;../src/memtst.c: 58:  return( addr );
 21783   01936E  C5E8  F5DE         	movff	mem_init@addr,?_mem_init
 21784   019372  C5E9  F5DF         	movff	mem_init@addr+1,?_mem_init+1
 21785   019376  C5EA  F5E0         	movff	mem_init@addr+2,?_mem_init+2
 21786   01937A  C5EB  F5E1         	movff	mem_init@addr+3,?_mem_init+3
 21787   01937E  0012               	return		;funcret
 21788   019380                     __end_of_mem_init:
 21789                           	callstack 0
 21790                           
 21791 ;; *************** function _get_hex *****************
 21792 ;; Defined at:
 21793 ;;		line 202 in file "../drivers/utils.c"
 21794 ;; Parameters:    Size  Location     Type
 21795 ;;  buf             2    3[COMRAM] PTR unsigned char 
 21796 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 21797 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 21798 ;; Auto vars:     Size  Location     Type
 21799 ;;  hexval          4   17[COMRAM] unsigned long 
 21800 ;;  d               4   13[COMRAM] unsigned long 
 21801 ;;  c               2   11[COMRAM] int 
 21802 ;;  ch              1   21[COMRAM] unsigned char 
 21803 ;; Return value:  Size  Location     Type
 21804 ;;                  4    3[COMRAM] unsigned long 
 21805 ;; Registers used:
 21806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21807 ;; Tracked objects:
 21808 ;;		On entry : 0/0
 21809 ;;		On exit  : 0/0
 21810 ;;		Unchanged: 0/0
 21811 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 21812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21813 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21815 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 21816 ;;Total ram usage:       19 bytes
 21817 ;; Hardware stack levels used: 1
 21818 ;; Hardware stack levels required when called: 1
 21819 ;; This function calls:
 21820 ;;		Nothing
 21821 ;; This function is called by:
 21822 ;;		_load_file
 21823 ;;		_mem_dump
 21824 ;; This function uses a non-reentrant model
 21825 ;;
 21826                           
 21827                           	psect	text37
 21828   01C6C6                     __ptext37:
 21829                           	callstack 0
 21830   01C6C6                     _get_hex:
 21831                           	callstack 124
 21832   01C6C6                     
 21833                           ;../drivers/utils.c: 204:  uint32_t hexval;;../drivers/utils.c: 205:  char ch;;../driver
      +                          s/utils.c: 206:  uint32_t d;;../drivers/utils.c: 207:  int c;;../drivers/utils.c: 209:  
      +                          hexval = 0;
 21834   01C6C6  0E00               	movlw	0
 21835   01C6C8  6E12               	movwf	get_hex@hexval^(0+1280),c
 21836   01C6CA  0E00               	movlw	0
 21837   01C6CC  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 21838   01C6CE  0E00               	movlw	0
 21839   01C6D0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 21840   01C6D2  0E00               	movlw	0
 21841   01C6D4  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 21842                           
 21843                           ;../drivers/utils.c: 210:  c = 0;
 21844   01C6D6  0E00               	movlw	0
 21845   01C6D8  6E0D               	movwf	(get_hex@c+1)^(0+1280),c
 21846   01C6DA  0E00               	movlw	0
 21847   01C6DC  6E0C               	movwf	get_hex@c^(0+1280),c
 21848                           
 21849                           ;../drivers/utils.c: 211:  while( *buf ) {
 21850   01C6DE  EFEA  F0E3         	goto	l16173
 21851   01C6E2                     l16153:
 21852                           
 21853                           ;../drivers/utils.c: 212:   ch = *buf++;
 21854   01C6E2  C504  F4F6         	movff	get_hex@buf,tblptrl
 21855   01C6E6  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 21856   01C6EA  0E00               	movlw	low (__mediumconst shr (0+16))
 21857   01C6EC  6EF8               	movwf	tblptru,c
 21858   01C6EE  0E3F               	movlw	(high __ramtop+-1)
 21859   01C6F0  64F7               	cpfsgt	tblptrh,c
 21860   01C6F2  D003               	bra	u20697
 21861   01C6F4  0008               	tblrd		*
 21862   01C6F6  50F5               	movf	tablat,w,c
 21863   01C6F8  D005               	bra	u20690
 21864   01C6FA                     u20697:
 21865   01C6FA  C4F6 F4E9          	movff	tblptrl,fsr0l
 21866   01C6FE  C4F7 F4EA          	movff	tblptrh,fsr0h
 21867   01C702  50EF               	movf	indf0,w,c
 21868   01C704                     u20690:
 21869   01C704  6E16               	movwf	get_hex@ch^(0+1280),c
 21870   01C706  4A04               	infsnz	get_hex@buf^(0+1280),f,c
 21871   01C708  2A05               	incf	(get_hex@buf+1)^(0+1280),f,c
 21872   01C70A                     
 21873                           ;../drivers/utils.c: 213:   if (ch >= 'A' && ch <= 'F') d = (uint32_t)(ch-'A'+10);
 21874   01C70A  0E40               	movlw	64
 21875   01C70C  6416               	cpfsgt	get_hex@ch^(0+1280),c
 21876   01C70E  EF8B  F0E3         	goto	u20701
 21877   01C712  EF8D  F0E3         	goto	u20700
 21878   01C716                     u20701:
 21879   01C716  EFA3  F0E3         	goto	l16163
 21880   01C71A                     u20700:
 21881   01C71A  0E47               	movlw	71
 21882   01C71C  6016               	cpfslt	get_hex@ch^(0+1280),c
 21883   01C71E  EF93  F0E3         	goto	u20711
 21884   01C722  EF95  F0E3         	goto	u20710
 21885   01C726                     u20711:
 21886   01C726  EFA3  F0E3         	goto	l16163
 21887   01C72A                     u20710:
 21888   01C72A  0EC9               	movlw	201
 21889   01C72C  2416               	addwf	get_hex@ch^(0+1280),w,c
 21890   01C72E  6E08               	movwf	??_get_hex^(0+1280),c
 21891   01C730  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 21892   01C732  0EFF               	movlw	255
 21893   01C734  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 21894   01C736  C508  F50E         	movff	??_get_hex,get_hex@d
 21895   01C73A  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 21896   01C73E  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 21897   01C740  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 21898   01C742  EFBF  F0E3         	goto	l16169
 21899   01C746                     l16163:
 21900   01C746  0E2F               	movlw	47
 21901   01C748  6416               	cpfsgt	get_hex@ch^(0+1280),c
 21902   01C74A  EFA9  F0E3         	goto	u20721
 21903   01C74E  EFAB  F0E3         	goto	u20720
 21904   01C752                     u20721:
 21905   01C752  EF03  F0E4         	goto	l139
 21906   01C756                     u20720:
 21907   01C756  0E3A               	movlw	58
 21908   01C758  6016               	cpfslt	get_hex@ch^(0+1280),c
 21909   01C75A  EFB1  F0E3         	goto	u20731
 21910   01C75E  EFB3  F0E3         	goto	u20730
 21911   01C762                     u20731:
 21912   01C762  EF03  F0E4         	goto	l139
 21913   01C766                     u20730:
 21914   01C766  0ED0               	movlw	208
 21915   01C768  2416               	addwf	get_hex@ch^(0+1280),w,c
 21916   01C76A  6E08               	movwf	??_get_hex^(0+1280),c
 21917   01C76C  6A09               	clrf	(??_get_hex+1)^(0+1280),c
 21918   01C76E  0EFF               	movlw	255
 21919   01C770  2209               	addwfc	(??_get_hex+1)^(0+1280),f,c
 21920   01C772  C508  F50E         	movff	??_get_hex,get_hex@d
 21921   01C776  C509  F50F         	movff	??_get_hex+1,get_hex@d+1
 21922   01C77A  6A10               	clrf	(get_hex@d+2)^(0+1280),c
 21923   01C77C  6A11               	clrf	(get_hex@d+3)^(0+1280),c
 21924   01C77E                     l16169:
 21925                           
 21926                           ;../drivers/utils.c: 216:   hexval = hexval*16 + d;
 21927   01C77E  C512  F508         	movff	get_hex@hexval,??_get_hex
 21928   01C782  C513  F509         	movff	get_hex@hexval+1,??_get_hex+1
 21929   01C786  C514  F50A         	movff	get_hex@hexval+2,??_get_hex+2
 21930   01C78A  C515  F50B         	movff	get_hex@hexval+3,??_get_hex+3
 21931   01C78E  0E04               	movlw	4
 21932   01C790                     u20745:
 21933   01C790  90D8               	bcf	status,0,c
 21934   01C792  3608               	rlcf	??_get_hex^(0+1280),f,c
 21935   01C794  3609               	rlcf	(??_get_hex+1)^(0+1280),f,c
 21936   01C796  360A               	rlcf	(??_get_hex+2)^(0+1280),f,c
 21937   01C798  360B               	rlcf	(??_get_hex+3)^(0+1280),f,c
 21938   01C79A  2EE8               	decfsz	wreg,f,c
 21939   01C79C  EFC8  F0E3         	goto	u20745
 21940   01C7A0  500E               	movf	get_hex@d^(0+1280),w,c
 21941   01C7A2  2408               	addwf	??_get_hex^(0+1280),w,c
 21942   01C7A4  6E12               	movwf	get_hex@hexval^(0+1280),c
 21943   01C7A6  500F               	movf	(get_hex@d+1)^(0+1280),w,c
 21944   01C7A8  2009               	addwfc	(??_get_hex+1)^(0+1280),w,c
 21945   01C7AA  6E13               	movwf	(get_hex@hexval+1)^(0+1280),c
 21946   01C7AC  5010               	movf	(get_hex@d+2)^(0+1280),w,c
 21947   01C7AE  200A               	addwfc	(??_get_hex+2)^(0+1280),w,c
 21948   01C7B0  6E14               	movwf	(get_hex@hexval+2)^(0+1280),c
 21949   01C7B2  5011               	movf	(get_hex@d+3)^(0+1280),w,c
 21950   01C7B4  200B               	addwfc	(??_get_hex+3)^(0+1280),w,c
 21951   01C7B6  6E15               	movwf	(get_hex@hexval+3)^(0+1280),c
 21952                           
 21953                           ;../drivers/utils.c: 217:   if (++c == 8) break;
 21954   01C7B8  4A0C               	infsnz	get_hex@c^(0+1280),f,c
 21955   01C7BA  2A0D               	incf	(get_hex@c+1)^(0+1280),f,c
 21956   01C7BC  0E08               	movlw	8
 21957   01C7BE  180C               	xorwf	get_hex@c^(0+1280),w,c
 21958   01C7C0  100D               	iorwf	(get_hex@c+1)^(0+1280),w,c
 21959   01C7C2  A4D8               	btfss	status,2,c
 21960   01C7C4  EFE6  F0E3         	goto	u20751
 21961   01C7C8  EFE8  F0E3         	goto	u20750
 21962   01C7CC                     u20751:
 21963   01C7CC  EFEA  F0E3         	goto	l16173
 21964   01C7D0                     u20750:
 21965   01C7D0  EF03  F0E4         	goto	l139
 21966   01C7D4                     l16173:
 21967                           
 21968                           ;../drivers/utils.c: 211:  while( *buf ) {
 21969   01C7D4  C504  F4F6         	movff	get_hex@buf,tblptrl
 21970   01C7D8  C505  F4F7         	movff	get_hex@buf+1,tblptrh
 21971   01C7DC  0E00               	movlw	low (__mediumconst shr (0+16))
 21972   01C7DE  6EF8               	movwf	tblptru,c
 21973   01C7E0  0E3F               	movlw	(high __ramtop+-1)
 21974   01C7E2  64F7               	cpfsgt	tblptrh,c
 21975   01C7E4  D003               	bra	u20767
 21976   01C7E6  0008               	tblrd		*
 21977   01C7E8  50F5               	movf	tablat,w,c
 21978   01C7EA  D005               	bra	u20760
 21979   01C7EC                     u20767:
 21980   01C7EC  C4F6 F4E9          	movff	tblptrl,fsr0l
 21981   01C7F0  C4F7 F4EA          	movff	tblptrh,fsr0h
 21982   01C7F4  50EF               	movf	indf0,w,c
 21983   01C7F6                     u20760:
 21984   01C7F6  0900               	iorlw	0
 21985   01C7F8  A4D8               	btfss	status,2,c
 21986   01C7FA  EF01  F0E4         	goto	u20771
 21987   01C7FE  EF03  F0E4         	goto	u20770
 21988   01C802                     u20771:
 21989   01C802  EF71  F0E3         	goto	l16153
 21990   01C806                     u20770:
 21991   01C806                     l139:
 21992                           
 21993                           ;../drivers/utils.c: 219:  return hexval;
 21994   01C806  C512  F504         	movff	get_hex@hexval,?_get_hex
 21995   01C80A  C513  F505         	movff	get_hex@hexval+1,?_get_hex+1
 21996   01C80E  C514  F506         	movff	get_hex@hexval+2,?_get_hex+2
 21997   01C812  C515  F507         	movff	get_hex@hexval+3,?_get_hex+3
 21998   01C816  0012               	return		;funcret
 21999   01C818                     __end_of_get_hex:
 22000                           	callstack 0
 22001                           
 22002 ;; *************** function _load_config *****************
 22003 ;; Defined at:
 22004 ;;		line 416 in file "../src/w65_main.c"
 22005 ;; Parameters:    Size  Location     Type
 22006 ;;		None
 22007 ;; Auto vars:     Size  Location     Type
 22008 ;;  i               2   19[BANK7 ] int 
 22009 ;;  str             2   17[BANK7 ] PTR unsigned char 
 22010 ;;		 -> tmp_buf(512), 
 22011 ;;  conf            2   15[BANK7 ] PTR const unsigned char 
 22012 ;;		 -> STR_50(11), STR_49(11), 
 22013 ;;  a               2   13[BANK7 ] PTR unsigned char 
 22014 ;;		 -> tmp_buf(512), 
 22015 ;;  buf             2   10[BANK7 ] PTR unsigned char 
 22016 ;;		 -> tmp_buf(512), 
 22017 ;;  adr             2    0        unsigned short 
 22018 ;;  size            2    0        unsigned short 
 22019 ;;  cnt             2    0        unsigned short 
 22020 ;;  fr              1   12[BANK7 ] enum E23452
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  2    0[BANK7 ] int 
 22023 ;; Registers used:
 22024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/0
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22030 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22031 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22032 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22033 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22034 ;;Total ram usage:       21 bytes
 22035 ;; Hardware stack levels used: 1
 22036 ;; Hardware stack levels required when called: 20
 22037 ;; This function calls:
 22038 ;;		___strtoxl
 22039 ;;		_del_space
 22040 ;;		_f_close
 22041 ;;		_f_gets
 22042 ;;		_f_open
 22043 ;;		_printf
 22044 ;;		_strlen
 22045 ;;		_strstr
 22046 ;; This function is called by:
 22047 ;;		_main
 22048 ;; This function uses a non-reentrant model
 22049 ;;
 22050                           
 22051                           	psect	text38
 22052   016DDA                     __ptext38:
 22053                           	callstack 0
 22054   016DDA                     _load_config:
 22055                           	callstack 106
 22056   016DDA                     
 22057                           ;../src/w65_main.c: 418:  FRESULT fr;;../src/w65_main.c: 419:  char *buf, *a;;../src/w65
      +                          _main.c: 420:  const TCHAR *conf;;../src/w65_main.c: 421:  uint16_t cnt, size;;../src/w6
      +                          5_main.c: 422:  uint16_t adr;;../src/w65_main.c: 423:  int i;;../src/w65_main.c: 424:  T
      +                          CHAR *str;;../src/w65_main.c: 426:  str = (TCHAR *)&tmp_buf[0][0];
 22058   016DDA  0EF8               	movlw	low _tmp_buf
 22059   016DDC  0107               	movlb	7	; () banked
 22060   016DDE  6F11               	movwf	load_config@str& (0+255),b
 22061   016DE0  0E13               	movlw	high _tmp_buf
 22062   016DE2  6F12               	movwf	(load_config@str+1)& (0+255),b
 22063   016DE4                     
 22064                           ; BSR set to: 7
 22065                           ;../src/w65_main.c: 427:  conf = ( cpu_flg ) ? conf16 : conf02;
 22066   016DE4  51E5               	movf	_cpu_flg& (0+255),w,b
 22067   016DE6  A4D8               	btfss	status,2,c
 22068   016DE8  EFF8  F0B6         	goto	u34741
 22069   016DEC  EFFA  F0B6         	goto	u34740
 22070   016DF0                     u34741:
 22071   016DF0  EF00  F0B7         	goto	l24939
 22072   016DF4                     u34740:
 22073   016DF4                     
 22074                           ; BSR set to: 7
 22075   016DF4  0EC2               	movlw	low STR_49
 22076   016DF6  6F0F               	movwf	load_config@conf& (0+255),b
 22077   016DF8  0EFE               	movlw	high STR_49
 22078   016DFA  6F10               	movwf	(load_config@conf+1)& (0+255),b
 22079   016DFC  EF04  F0B7         	goto	l24941
 22080   016E00                     l24939:
 22081                           
 22082                           ; BSR set to: 7
 22083   016E00  0ECD               	movlw	low STR_50
 22084   016E02  6F0F               	movwf	load_config@conf& (0+255),b
 22085   016E04  0EFE               	movlw	high STR_50
 22086   016E06  6F10               	movwf	(load_config@conf+1)& (0+255),b
 22087   016E08                     l24941:
 22088                           
 22089                           ; BSR set to: 7
 22090                           ;../src/w65_main.c: 429:  printf("\r\nLoad %s\r\n",(const char *)conf);
 22091   016E08  0EA0               	movlw	low STR_87
 22092   016E0A  0105               	movlb	5	; () banked
 22093   016E0C  6FAD               	movwf	printf@fmt& (0+255),b
 22094   016E0E  0EFE               	movlw	high STR_87
 22095   016E10  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22096   016E12  C70F  F5AF         	movff	load_config@conf,?_printf+2
 22097   016E16  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 22098   016E1A  ECDA  F0FF         	call	_printf	;wreg free
 22099   016E1E                     
 22100                           ;../src/w65_main.c: 431:  fr = f_open(&rom_fl, conf, 0x01);
 22101   016E1E  0ED6               	movlw	low _rom_fl
 22102   016E20  0106               	movlb	6	; () banked
 22103   016E22  6FAF               	movwf	f_open@fp& (0+255),b
 22104   016E24  0E0F               	movlw	high _rom_fl
 22105   016E26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 22106   016E28  C70F  F6B1         	movff	load_config@conf,f_open@path
 22107   016E2C  C710  F6B2         	movff	load_config@conf+1,f_open@path+1
 22108   016E30  0E01               	movlw	1
 22109   016E32  6FB3               	movwf	f_open@mode& (0+255),b
 22110   016E34  ECDB  F092         	call	_f_open	;wreg free
 22111   016E38  0107               	movlb	7	; () banked
 22112   016E3A  6F0C               	movwf	load_config@fr& (0+255),b
 22113   016E3C                     
 22114                           ; BSR set to: 7
 22115                           ;../src/w65_main.c: 432:  if ( fr != FR_OK ) {
 22116   016E3C  510C               	movf	load_config@fr& (0+255),w,b
 22117   016E3E  B4D8               	btfsc	status,2,c
 22118   016E40  EF24  F0B7         	goto	u34751
 22119   016E44  EF26  F0B7         	goto	u34750
 22120   016E48                     u34751:
 22121   016E48  EF85  F0B8         	goto	l24989
 22122   016E4C                     u34750:
 22123   016E4C                     
 22124                           ; BSR set to: 7
 22125                           ;../src/w65_main.c: 433:   printf("%s file is not found..\r\n", conf);
 22126   016E4C  0EBB               	movlw	low STR_88
 22127   016E4E  0105               	movlb	5	; () banked
 22128   016E50  6FAD               	movwf	printf@fmt& (0+255),b
 22129   016E52  0EFA               	movlw	high STR_88
 22130   016E54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22131   016E56  C70F  F5AF         	movff	load_config@conf,?_printf+2
 22132   016E5A  C710  F5B0         	movff	load_config@conf+1,?_printf+3
 22133   016E5E  ECDA  F0FF         	call	_printf	;wreg free
 22134   016E62                     l24949:
 22135                           
 22136                           ;../src/w65_main.c: 434:   return -1;
 22137   016E62  0107               	movlb	7	; () banked
 22138   016E64  6900               	setf	?_load_config& (0+255),b
 22139   016E66  6901               	setf	(?_load_config+1)& (0+255),b
 22140   016E68  EFCF  F0B8         	goto	l1591
 22141   016E6C                     l24953:
 22142                           
 22143                           ; BSR set to: 6
 22144                           ;../src/w65_main.c: 440:   del_space(str);
 22145   016E6C  C711  F504         	movff	load_config@str,del_space@bytes
 22146   016E70  C712  F505         	movff	load_config@str+1,del_space@bytes+1
 22147   016E74  ECE9  F0F7         	call	_del_space	;wreg free
 22148   016E78                     
 22149                           ;../src/w65_main.c: 442:   if (str[0] == ';' || str[0] == 0 ) continue;
 22150   016E78  C711  F4D9         	movff	load_config@str,fsr2l
 22151   016E7C  C712  F4DA         	movff	load_config@str+1,fsr2h
 22152   016E80  0E3B               	movlw	59
 22153   016E82  18DE               	xorwf	postinc2,w,c
 22154   016E84  B4D8               	btfsc	status,2,c
 22155   016E86  EF47  F0B7         	goto	u34761
 22156   016E8A  EF49  F0B7         	goto	u34760
 22157   016E8E                     u34761:
 22158   016E8E  EF85  F0B8         	goto	l24989
 22159   016E92                     u34760:
 22160   016E92  C711  F4D9         	movff	load_config@str,fsr2l
 22161   016E96  C712  F4DA         	movff	load_config@str+1,fsr2h
 22162   016E9A  50DF               	movf	indf2,w,c
 22163   016E9C  A4D8               	btfss	status,2,c
 22164   016E9E  EF53  F0B7         	goto	u34771
 22165   016EA2  EF55  F0B7         	goto	u34770
 22166   016EA6                     u34771:
 22167   016EA6  EF57  F0B7         	goto	l24959
 22168   016EAA                     u34770:
 22169   016EAA  EF85  F0B8         	goto	l24989
 22170   016EAE                     l24959:
 22171                           
 22172                           ;../src/w65_main.c: 445:   for( i=0; i<2; i++ ) {
 22173   016EAE  0E00               	movlw	0
 22174   016EB0  0107               	movlb	7	; () banked
 22175   016EB2  6F14               	movwf	(load_config@i+1)& (0+255),b
 22176   016EB4  0E00               	movlw	0
 22177   016EB6  6F13               	movwf	load_config@i& (0+255),b
 22178   016EB8                     l24965:
 22179                           
 22180                           ; BSR set to: 7
 22181                           ;../src/w65_main.c: 446:    if ( !strstr(str, t_conf[i].conf )) continue;
 22182   016EB8  C711  F50B         	movff	load_config@str,strstr@h
 22183   016EBC  C712  F50C         	movff	load_config@str+1,strstr@h+1
 22184   016EC0  0EE6               	movlw	low _t_conf
 22185   016EC2  6F02               	movwf	??_load_config& (0+255),b
 22186   016EC4  0E07               	movlw	high _t_conf
 22187   016EC6  6F03               	movwf	(??_load_config+1)& (0+255),b
 22188   016EC8  90D8               	bcf	status,0,c
 22189   016ECA  3513               	rlcf	load_config@i& (0+255),w,b
 22190   016ECC  6ED9               	movwf	fsr2l,c
 22191   016ECE  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22192   016ED0  6EDA               	movwf	fsr2h,c
 22193   016ED2  90D8               	bcf	status,0,c
 22194   016ED4  36D9               	rlcf	fsr2l,f,c
 22195   016ED6  36DA               	rlcf	fsr2h,f,c
 22196   016ED8  5102               	movf	??_load_config& (0+255),w,b
 22197   016EDA  26D9               	addwf	fsr2l,f,c
 22198   016EDC  5103               	movf	(??_load_config+1)& (0+255),w,b
 22199   016EDE  22DA               	addwfc	fsr2h,f,c
 22200   016EE0  C4DE F50D          	movff	postinc2,strstr@n
 22201   016EE4  C4DD F50E          	movff	postdec2,strstr@n+1
 22202   016EE8  ECCF  F0EE         	call	_strstr	;wreg free
 22203   016EEC  500B               	movf	?_strstr^(0+1280),w,c
 22204   016EEE  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 22205   016EF0  A4D8               	btfss	status,2,c
 22206   016EF2  EF7D  F0B7         	goto	u34781
 22207   016EF6  EF7F  F0B7         	goto	u34780
 22208   016EFA                     u34781:
 22209   016EFA  EF81  F0B7         	goto	l24969
 22210   016EFE                     u34780:
 22211   016EFE  EF74  F0B8         	goto	l24985
 22212   016F02                     l24969:
 22213                           
 22214                           ;../src/w65_main.c: 447:    if(str[strlen(t_conf[i].conf)] != '=') continue;
 22215   016F02  0EE6               	movlw	low _t_conf
 22216   016F04  0107               	movlb	7	; () banked
 22217   016F06  6F02               	movwf	??_load_config& (0+255),b
 22218   016F08  0E07               	movlw	high _t_conf
 22219   016F0A  6F03               	movwf	(??_load_config+1)& (0+255),b
 22220   016F0C  90D8               	bcf	status,0,c
 22221   016F0E  3513               	rlcf	load_config@i& (0+255),w,b
 22222   016F10  6ED9               	movwf	fsr2l,c
 22223   016F12  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22224   016F14  6EDA               	movwf	fsr2h,c
 22225   016F16  90D8               	bcf	status,0,c
 22226   016F18  36D9               	rlcf	fsr2l,f,c
 22227   016F1A  36DA               	rlcf	fsr2h,f,c
 22228   016F1C  5102               	movf	??_load_config& (0+255),w,b
 22229   016F1E  26D9               	addwf	fsr2l,f,c
 22230   016F20  5103               	movf	(??_load_config+1)& (0+255),w,b
 22231   016F22  22DA               	addwfc	fsr2h,f,c
 22232   016F24  C4DE F504          	movff	postinc2,strlen@s
 22233   016F28  C4DD F505          	movff	postdec2,strlen@s+1
 22234   016F2C  ECB0  F0FC         	call	_strlen	;wreg free
 22235   016F30  5004               	movf	?_strlen^(0+1280),w,c
 22236   016F32  0107               	movlb	7	; () banked
 22237   016F34  2511               	addwf	load_config@str& (0+255),w,b
 22238   016F36  6ED9               	movwf	fsr2l,c
 22239   016F38  5005               	movf	(?_strlen+1)^(0+1280),w,c
 22240   016F3A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 22241   016F3C  6EDA               	movwf	fsr2h,c
 22242   016F3E  0E3D               	movlw	61
 22243   016F40  18DE               	xorwf	postinc2,w,c
 22244   016F42  B4D8               	btfsc	status,2,c
 22245   016F44  EFA6  F0B7         	goto	u34791
 22246   016F48  EFA8  F0B7         	goto	u34790
 22247   016F4C                     u34791:
 22248   016F4C  EFAA  F0B7         	goto	l24973
 22249   016F50                     u34790:
 22250   016F50  EF74  F0B8         	goto	l24985
 22251   016F54                     l24973:
 22252                           
 22253                           ; BSR set to: 7
 22254                           ;../src/w65_main.c: 450:    buf = &str[strlen(t_conf[i].conf)+1];
 22255   016F54  0EE6               	movlw	low _t_conf
 22256   016F56  6F02               	movwf	??_load_config& (0+255),b
 22257   016F58  0E07               	movlw	high _t_conf
 22258   016F5A  6F03               	movwf	(??_load_config+1)& (0+255),b
 22259   016F5C  90D8               	bcf	status,0,c
 22260   016F5E  3513               	rlcf	load_config@i& (0+255),w,b
 22261   016F60  6ED9               	movwf	fsr2l,c
 22262   016F62  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22263   016F64  6EDA               	movwf	fsr2h,c
 22264   016F66  90D8               	bcf	status,0,c
 22265   016F68  36D9               	rlcf	fsr2l,f,c
 22266   016F6A  36DA               	rlcf	fsr2h,f,c
 22267   016F6C  5102               	movf	??_load_config& (0+255),w,b
 22268   016F6E  26D9               	addwf	fsr2l,f,c
 22269   016F70  5103               	movf	(??_load_config+1)& (0+255),w,b
 22270   016F72  22DA               	addwfc	fsr2h,f,c
 22271   016F74  C4DE F504          	movff	postinc2,strlen@s
 22272   016F78  C4DD F505          	movff	postdec2,strlen@s+1
 22273   016F7C  ECB0  F0FC         	call	_strlen	;wreg free
 22274   016F80  5004               	movf	?_strlen^(0+1280),w,c
 22275   016F82  0107               	movlb	7	; () banked
 22276   016F84  2511               	addwf	load_config@str& (0+255),w,b
 22277   016F86  6F04               	movwf	(??_load_config+2)& (0+255),b
 22278   016F88  5005               	movf	(?_strlen+1)^(0+1280),w,c
 22279   016F8A  2112               	addwfc	(load_config@str+1)& (0+255),w,b
 22280   016F8C  6F05               	movwf	(??_load_config+3)& (0+255),b
 22281   016F8E  0E01               	movlw	1
 22282   016F90  2504               	addwf	(??_load_config+2)& (0+255),w,b
 22283   016F92  6F0A               	movwf	load_config@buf& (0+255),b
 22284   016F94  0E00               	movlw	0
 22285   016F96  2105               	addwfc	(??_load_config+3)& (0+255),w,b
 22286   016F98  6F0B               	movwf	(load_config@buf+1)& (0+255),b
 22287   016F9A                     
 22288                           ; BSR set to: 7
 22289                           ;../src/w65_main.c: 451:    if (!(*(t_conf[i].val) = (uint32_t)(long)__strtoxl((const ch
      +                          ar *)buf,&a,0,1))) {
 22290   016F9A  C70A  F510         	movff	load_config@buf,___strtoxl@s
 22291   016F9E  C70B  F511         	movff	load_config@buf+1,___strtoxl@s+1
 22292   016FA2  0E0D               	movlw	low load_config@a
 22293   016FA4  6E12               	movwf	___strtoxl@endptr^(0+1280),c
 22294   016FA6  0E07               	movlw	high load_config@a
 22295   016FA8  6E13               	movwf	(___strtoxl@endptr+1)^(0+1280),c
 22296   016FAA  0E00               	movlw	0
 22297   016FAC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 22298   016FAE  0E00               	movlw	0
 22299   016FB0  6E14               	movwf	___strtoxl@base^(0+1280),c
 22300   016FB2  0E01               	movlw	1
 22301   016FB4  6E16               	movwf	___strtoxl@is_signed^(0+1280),c
 22302   016FB6  EC38  F0AC         	call	___strtoxl	;wreg free
 22303   016FBA  0EE6               	movlw	low _t_conf
 22304   016FBC  0107               	movlb	7	; () banked
 22305   016FBE  6F02               	movwf	??_load_config& (0+255),b
 22306   016FC0  0E07               	movlw	high _t_conf
 22307   016FC2  6F03               	movwf	(??_load_config+1)& (0+255),b
 22308   016FC4  0E02               	movlw	2
 22309   016FC6  2702               	addwf	??_load_config& (0+255),f,b
 22310   016FC8  0E00               	movlw	0
 22311   016FCA  2303               	addwfc	(??_load_config+1)& (0+255),f,b
 22312   016FCC  90D8               	bcf	status,0,c
 22313   016FCE  3513               	rlcf	load_config@i& (0+255),w,b
 22314   016FD0  6ED9               	movwf	fsr2l,c
 22315   016FD2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22316   016FD4  6EDA               	movwf	fsr2h,c
 22317   016FD6  90D8               	bcf	status,0,c
 22318   016FD8  36D9               	rlcf	fsr2l,f,c
 22319   016FDA  36DA               	rlcf	fsr2h,f,c
 22320   016FDC  5102               	movf	??_load_config& (0+255),w,b
 22321   016FDE  26D9               	addwf	fsr2l,f,c
 22322   016FE0  5103               	movf	(??_load_config+1)& (0+255),w,b
 22323   016FE2  22DA               	addwfc	fsr2h,f,c
 22324   016FE4  C4DE F704          	movff	postinc2,??_load_config+2
 22325   016FE8  C4DD F705          	movff	postdec2,??_load_config+3
 22326   016FEC  C704  F4D9         	movff	??_load_config+2,fsr2l
 22327   016FF0  C705  F4DA         	movff	??_load_config+3,fsr2h
 22328   016FF4  C510  F4DE         	movff	?___strtoxl,postinc2
 22329   016FF8  C511  F4DE         	movff	?___strtoxl+1,postinc2
 22330   016FFC  C512  F4DE         	movff	?___strtoxl+2,postinc2
 22331   017000  C513  F4DD         	movff	?___strtoxl+3,postdec2
 22332   017004  52DD               	movf	postdec2,f,c
 22333   017006  52DD               	movf	postdec2,f,c
 22334   017008  50DE               	movf	postinc2,w,c
 22335   01700A  10DE               	iorwf	postinc2,w,c
 22336   01700C  10DE               	iorwf	postinc2,w,c
 22337   01700E  10DE               	iorwf	postinc2,w,c
 22338   017010  A4D8               	btfss	status,2,c
 22339   017012  EF0D  F0B8         	goto	u34801
 22340   017016  EF0F  F0B8         	goto	u34800
 22341   01701A                     u34801:
 22342   01701A  EF34  F0B8         	goto	l24983
 22343   01701E                     u34800:
 22344   01701E                     
 22345                           ; BSR set to: 7
 22346                           ;../src/w65_main.c: 452:     printf("%s : invalid value!!\r\n",t_conf[i].conf);
 22347   01701E  0E65               	movlw	low STR_89
 22348   017020  0105               	movlb	5	; () banked
 22349   017022  6FAD               	movwf	printf@fmt& (0+255),b
 22350   017024  0EFB               	movlw	high STR_89
 22351   017026  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22352   017028  0EE6               	movlw	low _t_conf
 22353   01702A  0107               	movlb	7	; () banked
 22354   01702C  6F02               	movwf	??_load_config& (0+255),b
 22355   01702E  0E07               	movlw	high _t_conf
 22356   017030  6F03               	movwf	(??_load_config+1)& (0+255),b
 22357   017032  90D8               	bcf	status,0,c
 22358   017034  3513               	rlcf	load_config@i& (0+255),w,b
 22359   017036  6ED9               	movwf	fsr2l,c
 22360   017038  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22361   01703A  6EDA               	movwf	fsr2h,c
 22362   01703C  90D8               	bcf	status,0,c
 22363   01703E  36D9               	rlcf	fsr2l,f,c
 22364   017040  36DA               	rlcf	fsr2h,f,c
 22365   017042  5102               	movf	??_load_config& (0+255),w,b
 22366   017044  26D9               	addwf	fsr2l,f,c
 22367   017046  5103               	movf	(??_load_config+1)& (0+255),w,b
 22368   017048  22DA               	addwfc	fsr2h,f,c
 22369   01704A  C4DE F5AF          	movff	postinc2,?_printf+2
 22370   01704E  C4DD F5B0          	movff	postdec2,?_printf+3
 22371   017052  ECDA  F0FF         	call	_printf	;wreg free
 22372                           
 22373                           ;../src/w65_main.c: 453:     f_close( &rom_fl );
 22374   017056  0ED6               	movlw	low _rom_fl
 22375   017058  0106               	movlb	6	; () banked
 22376   01705A  6F2F               	movwf	f_close@fp& (0+255),b
 22377   01705C  0E0F               	movlw	high _rom_fl
 22378   01705E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 22379   017060  ECDB  F0FB         	call	_f_close	;wreg free
 22380   017064  EF31  F0B7         	goto	l24949
 22381   017068                     l24983:
 22382                           
 22383                           ; BSR set to: 7
 22384                           ;../src/w65_main.c: 456:    printf("%s : $%06lx\r\n", (const char *)t_conf[i].conf, *(t_
      +                          conf[i].val));
 22385   017068  0E42               	movlw	low STR_90
 22386   01706A  0105               	movlb	5	; () banked
 22387   01706C  6FAD               	movwf	printf@fmt& (0+255),b
 22388   01706E  0EFE               	movlw	high STR_90
 22389   017070  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22390   017072  0EE6               	movlw	low _t_conf
 22391   017074  0107               	movlb	7	; () banked
 22392   017076  6F02               	movwf	??_load_config& (0+255),b
 22393   017078  0E07               	movlw	high _t_conf
 22394   01707A  6F03               	movwf	(??_load_config+1)& (0+255),b
 22395   01707C  90D8               	bcf	status,0,c
 22396   01707E  3513               	rlcf	load_config@i& (0+255),w,b
 22397   017080  6ED9               	movwf	fsr2l,c
 22398   017082  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22399   017084  6EDA               	movwf	fsr2h,c
 22400   017086  90D8               	bcf	status,0,c
 22401   017088  36D9               	rlcf	fsr2l,f,c
 22402   01708A  36DA               	rlcf	fsr2h,f,c
 22403   01708C  5102               	movf	??_load_config& (0+255),w,b
 22404   01708E  26D9               	addwf	fsr2l,f,c
 22405   017090  5103               	movf	(??_load_config+1)& (0+255),w,b
 22406   017092  22DA               	addwfc	fsr2h,f,c
 22407   017094  C4DE F5AF          	movff	postinc2,?_printf+2
 22408   017098  C4DD F5B0          	movff	postdec2,?_printf+3
 22409   01709C  0EE6               	movlw	low _t_conf
 22410   01709E  6F04               	movwf	(??_load_config+2)& (0+255),b
 22411   0170A0  0E07               	movlw	high _t_conf
 22412   0170A2  6F05               	movwf	(??_load_config+3)& (0+255),b
 22413   0170A4  0E02               	movlw	2
 22414   0170A6  2704               	addwf	(??_load_config+2)& (0+255),f,b
 22415   0170A8  0E00               	movlw	0
 22416   0170AA  2305               	addwfc	(??_load_config+3)& (0+255),f,b
 22417   0170AC  90D8               	bcf	status,0,c
 22418   0170AE  3513               	rlcf	load_config@i& (0+255),w,b
 22419   0170B0  6ED9               	movwf	fsr2l,c
 22420   0170B2  3514               	rlcf	(load_config@i+1)& (0+255),w,b
 22421   0170B4  6EDA               	movwf	fsr2h,c
 22422   0170B6  90D8               	bcf	status,0,c
 22423   0170B8  36D9               	rlcf	fsr2l,f,c
 22424   0170BA  36DA               	rlcf	fsr2h,f,c
 22425   0170BC  5104               	movf	(??_load_config+2)& (0+255),w,b
 22426   0170BE  26D9               	addwf	fsr2l,f,c
 22427   0170C0  5105               	movf	(??_load_config+3)& (0+255),w,b
 22428   0170C2  22DA               	addwfc	fsr2h,f,c
 22429   0170C4  C4DE F706          	movff	postinc2,??_load_config+4
 22430   0170C8  C4DD F707          	movff	postdec2,??_load_config+5
 22431   0170CC  C706  F4D9         	movff	??_load_config+4,fsr2l
 22432   0170D0  C707  F4DA         	movff	??_load_config+5,fsr2h
 22433   0170D4  C4DE F5B1          	movff	postinc2,?_printf+4
 22434   0170D8  C4DE F5B2          	movff	postinc2,?_printf+5
 22435   0170DC  C4DE F5B3          	movff	postinc2,?_printf+6
 22436   0170E0  C4DE F5B4          	movff	postinc2,?_printf+7
 22437   0170E4  ECDA  F0FF         	call	_printf	;wreg free
 22438   0170E8                     l24985:
 22439   0170E8  0107               	movlb	7	; () banked
 22440   0170EA  4B13               	infsnz	load_config@i& (0+255),f,b
 22441   0170EC  2B14               	incf	(load_config@i+1)& (0+255),f,b
 22442   0170EE                     
 22443                           ; BSR set to: 7
 22444   0170EE  BF14               	btfsc	(load_config@i+1)& (0+255),7,b
 22445   0170F0  EF83  F0B8         	goto	u34811
 22446   0170F4  5114               	movf	(load_config@i+1)& (0+255),w,b
 22447   0170F6  E109               	bnz	u34810
 22448   0170F8  0E02               	movlw	2
 22449   0170FA  5D13               	subwf	load_config@i& (0+255),w,b
 22450   0170FC  A0D8               	btfss	status,0,c
 22451   0170FE  EF83  F0B8         	goto	u34811
 22452   017102  EF85  F0B8         	goto	u34810
 22453   017106                     u34811:
 22454   017106  EF5C  F0B7         	goto	l24965
 22455   01710A                     u34810:
 22456   01710A                     l24989:
 22457                           
 22458                           ;../src/w65_main.c: 437:  while ( f_gets(str, 80, &rom_fl) ) {
 22459   01710A  C711  F669         	movff	load_config@str,f_gets@buff
 22460   01710E  C712  F66A         	movff	load_config@str+1,f_gets@buff+1
 22461   017112  0E00               	movlw	0
 22462   017114  0106               	movlb	6	; () banked
 22463   017116  6F6C               	movwf	(f_gets@len+1)& (0+255),b
 22464   017118  0E50               	movlw	80
 22465   01711A  6F6B               	movwf	f_gets@len& (0+255),b
 22466   01711C  0ED6               	movlw	low _rom_fl
 22467   01711E  6F6D               	movwf	f_gets@fp& (0+255),b
 22468   017120  0E0F               	movlw	high _rom_fl
 22469   017122  6F6E               	movwf	(f_gets@fp+1)& (0+255),b
 22470   017124  EC90  F0EC         	call	_f_gets	;wreg free
 22471   017128  0106               	movlb	6	; () banked
 22472   01712A  5169               	movf	?_f_gets& (0+255),w,b
 22473   01712C  116A               	iorwf	(?_f_gets+1)& (0+255),w,b
 22474   01712E  A4D8               	btfss	status,2,c
 22475   017130  EF9C  F0B8         	goto	u34821
 22476   017134  EF9E  F0B8         	goto	u34820
 22477   017138                     u34821:
 22478   017138  EF36  F0B7         	goto	l24953
 22479   01713C                     u34820:
 22480   01713C                     
 22481                           ; BSR set to: 6
 22482                           ;../src/w65_main.c: 460:  if (!((int)((&rom_fl)->fptr == (&rom_fl)->obj.objsize))) {
 22483   01713C  EE23  F3E0         	lfsr	2,_rom_fl+10
 22484   017140  EE13  F3E6         	lfsr	1,_rom_fl+16
 22485   017144  50DE               	movf	postinc2,w,c
 22486   017146  18E6               	xorwf	postinc1,w,c
 22487   017148  E10F               	bnz	u34830
 22488   01714A  50DE               	movf	postinc2,w,c
 22489   01714C  18E6               	xorwf	postinc1,w,c
 22490   01714E  E10C               	bnz	u34830
 22491   017150  50DE               	movf	postinc2,w,c
 22492   017152  18E6               	xorwf	postinc1,w,c
 22493   017154  E109               	bnz	u34830
 22494   017156  50DE               	movf	postinc2,w,c
 22495   017158  18E6               	xorwf	postinc1,w,c
 22496   01715A  B4D8               	btfsc	status,2,c
 22497   01715C  EFB2  F0B8         	goto	u34831
 22498   017160  EFB4  F0B8         	goto	u34830
 22499   017164                     u34831:
 22500   017164  EFC4  F0B8         	goto	l24999
 22501   017168                     u34830:
 22502   017168                     
 22503                           ; BSR set to: 6
 22504                           ;../src/w65_main.c: 461:   printf("File read error!\r\n");
 22505   017168  0EE9               	movlw	low STR_91
 22506   01716A  0105               	movlb	5	; () banked
 22507   01716C  6FAD               	movwf	printf@fmt& (0+255),b
 22508   01716E  0EFC               	movlw	high STR_91
 22509   017170  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 22510   017172  ECDA  F0FF         	call	_printf	;wreg free
 22511                           
 22512                           ;../src/w65_main.c: 462:   f_close( &rom_fl );
 22513   017176  0ED6               	movlw	low _rom_fl
 22514   017178  0106               	movlb	6	; () banked
 22515   01717A  6F2F               	movwf	f_close@fp& (0+255),b
 22516   01717C  0E0F               	movlw	high _rom_fl
 22517   01717E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 22518   017180  ECDB  F0FB         	call	_f_close	;wreg free
 22519   017184  EF31  F0B7         	goto	l24949
 22520   017188                     l24999:
 22521                           
 22522                           ; BSR set to: 6
 22523                           ;../src/w65_main.c: 465:  f_close( &rom_fl );
 22524   017188  0ED6               	movlw	low _rom_fl
 22525   01718A  6F2F               	movwf	f_close@fp& (0+255),b
 22526   01718C  0E0F               	movlw	high _rom_fl
 22527   01718E  6F30               	movwf	(f_close@fp+1)& (0+255),b
 22528   017190  ECDB  F0FB         	call	_f_close	;wreg free
 22529   017194                     
 22530                           ;../src/w65_main.c: 466:  return 0;
 22531   017194  0E00               	movlw	0
 22532   017196  0107               	movlb	7	; () banked
 22533   017198  6F01               	movwf	(?_load_config+1)& (0+255),b
 22534   01719A  0E00               	movlw	0
 22535   01719C  6F00               	movwf	?_load_config& (0+255),b
 22536   01719E                     l1591:
 22537                           
 22538                           ; BSR set to: 7
 22539   01719E  0012               	return		;funcret
 22540   0171A0                     __end_of_load_config:
 22541                           	callstack 0
 22542                           
 22543 ;; *************** function _f_gets *****************
 22544 ;; Defined at:
 22545 ;;		line 6428 in file "../fatfs/ff.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;  buff            2  105[BANK6 ] PTR unsigned char 
 22548 ;;		 -> tmp_buf(512), 
 22549 ;;  len             2  107[BANK6 ] int 
 22550 ;;  fp              2  109[BANK6 ] PTR struct .
 22551 ;;		 -> rom_fl(546), 
 22552 ;; Auto vars:     Size  Location     Type
 22553 ;;  s               4  121[BANK6 ] unsigned char [4]
 22554 ;;  dc              4  115[BANK6 ] unsigned long 
 22555 ;;  rc              2  119[BANK6 ] unsigned int 
 22556 ;;  p               2  113[BANK6 ] PTR unsigned char 
 22557 ;;		 -> tmp_buf(512), 
 22558 ;;  nc              2  111[BANK6 ] int 
 22559 ;; Return value:  Size  Location     Type
 22560 ;;                  2  105[BANK6 ] PTR unsigned char 
 22561 ;; Registers used:
 22562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22563 ;; Tracked objects:
 22564 ;;		On entry : 0/0
 22565 ;;		On exit  : 0/0
 22566 ;;		Unchanged: 0/0
 22567 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22568 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22569 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22571 ;;      Totals:         0       1      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22572 ;;Total ram usage:       21 bytes
 22573 ;; Hardware stack levels used: 1
 22574 ;; Hardware stack levels required when called: 16
 22575 ;; This function calls:
 22576 ;;		_f_read
 22577 ;; This function is called by:
 22578 ;;		_load_config
 22579 ;; This function uses a non-reentrant model
 22580 ;;
 22581                           
 22582                           	psect	text39
 22583   01D920                     __ptext39:
 22584                           	callstack 0
 22585   01D920                     _f_gets:
 22586                           	callstack 109
 22587   01D920                     
 22588                           ;../fatfs/ff.c: 6429:  TCHAR* buff,;../fatfs/ff.c: 6430:  int len,;../fatfs/ff.c: 6431: 
      +                           FIL* fp;../fatfs/ff.c: 6433: {;../fatfs/ff.c: 6434:  int nc = 0;
 22589   01D920  0E00               	movlw	0
 22590   01D922  0106               	movlb	6	; () banked
 22591   01D924  6F70               	movwf	(f_gets@nc+1)& (0+255),b
 22592   01D926  0E00               	movlw	0
 22593   01D928  6F6F               	movwf	f_gets@nc& (0+255),b
 22594   01D92A                     
 22595                           ; BSR set to: 6
 22596                           ;../fatfs/ff.c: 6435:  TCHAR *p = buff;
 22597   01D92A  C669  F671         	movff	f_gets@buff,f_gets@p
 22598   01D92E  C66A  F672         	movff	f_gets@buff+1,f_gets@p+1
 22599   01D932                     
 22600                           ; BSR set to: 6
 22601                           ;../fatfs/ff.c: 6436:  BYTE s[4];;../fatfs/ff.c: 6437:  UINT rc;;../fatfs/ff.c: 6438:  D
      +                          WORD dc;;../fatfs/ff.c: 6536:  len -= 1;
 22602   01D932  076B               	decf	f_gets@len& (0+255),f,b
 22603   01D934  A0D8               	btfss	status,0,c
 22604   01D936  076C               	decf	(f_gets@len+1)& (0+255),f,b
 22605                           
 22606                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 22607   01D938  EFDA  F0EC         	goto	l24139
 22608   01D93C                     l24117:
 22609                           
 22610                           ; BSR set to: 5
 22611                           ;../fatfs/ff.c: 6538:   f_read(fp, s, 1, &rc);
 22612   01D93C  C66D  F63E         	movff	f_gets@fp,f_read@fp
 22613   01D940  C66E  F63F         	movff	f_gets@fp+1,f_read@fp+1
 22614   01D944  0E79               	movlw	low f_gets@s
 22615   01D946  0106               	movlb	6	; () banked
 22616   01D948  6F40               	movwf	f_read@buff& (0+255),b
 22617   01D94A  0E06               	movlw	high f_gets@s
 22618   01D94C  6F41               	movwf	(f_read@buff+1)& (0+255),b
 22619   01D94E  0E00               	movlw	0
 22620   01D950  6F43               	movwf	(f_read@btr+1)& (0+255),b
 22621   01D952  0E01               	movlw	1
 22622   01D954  6F42               	movwf	f_read@btr& (0+255),b
 22623   01D956  0E77               	movlw	low f_gets@rc
 22624   01D958  6F44               	movwf	f_read@br& (0+255),b
 22625   01D95A  0E06               	movlw	high f_gets@rc
 22626   01D95C  6F45               	movwf	(f_read@br+1)& (0+255),b
 22627   01D95E  EC9B  F096         	call	_f_read	;wreg free
 22628   01D962                     
 22629                           ;../fatfs/ff.c: 6539:   if (rc != 1) break;
 22630   01D962  0106               	movlb	6	; () banked
 22631   01D964  0577               	decf	f_gets@rc& (0+255),w,b
 22632   01D966  1178               	iorwf	(f_gets@rc+1)& (0+255),w,b
 22633   01D968  B4D8               	btfsc	status,2,c
 22634   01D96A  EFB9  F0EC         	goto	u33641
 22635   01D96E  EFBB  F0EC         	goto	u33640
 22636   01D972                     u33641:
 22637   01D972  EFBD  F0EC         	goto	l24123
 22638   01D976                     u33640:
 22639   01D976  EFEC  F0EC         	goto	l24141
 22640   01D97A                     l24123:
 22641                           
 22642                           ; BSR set to: 6
 22643                           ;../fatfs/ff.c: 6540:   dc = s[0];
 22644   01D97A  5179               	movf	f_gets@s& (0+255),w,b
 22645   01D97C  6F73               	movwf	f_gets@dc& (0+255),b
 22646   01D97E  6B74               	clrf	(f_gets@dc+1)& (0+255),b
 22647   01D980  6B75               	clrf	(f_gets@dc+2)& (0+255),b
 22648   01D982  6B76               	clrf	(f_gets@dc+3)& (0+255),b
 22649   01D984                     
 22650                           ; BSR set to: 6
 22651                           ;../fatfs/ff.c: 6542:   *p++ = (TCHAR)dc; nc++;
 22652   01D984  C671  F4D9         	movff	f_gets@p,fsr2l
 22653   01D988  C672  F4DA         	movff	f_gets@p+1,fsr2h
 22654   01D98C  C673  F4DF         	movff	f_gets@dc,indf2
 22655   01D990                     
 22656                           ; BSR set to: 6
 22657   01D990  4B71               	infsnz	f_gets@p& (0+255),f,b
 22658   01D992  2B72               	incf	(f_gets@p+1)& (0+255),f,b
 22659   01D994                     
 22660                           ; BSR set to: 6
 22661   01D994  4B6F               	infsnz	f_gets@nc& (0+255),f,b
 22662   01D996  2B70               	incf	(f_gets@nc+1)& (0+255),f,b
 22663   01D998                     
 22664                           ; BSR set to: 6
 22665                           ;../fatfs/ff.c: 6543:   if (dc == '\n') break;
 22666   01D998  0E0A               	movlw	10
 22667   01D99A  1973               	xorwf	f_gets@dc& (0+255),w,b
 22668   01D99C  1174               	iorwf	(f_gets@dc+1)& (0+255),w,b
 22669   01D99E  1175               	iorwf	(f_gets@dc+2)& (0+255),w,b
 22670   01D9A0  1176               	iorwf	(f_gets@dc+3)& (0+255),w,b
 22671   01D9A2  A4D8               	btfss	status,2,c
 22672   01D9A4  EFD6  F0EC         	goto	u33651
 22673   01D9A8  EFD8  F0EC         	goto	u33650
 22674   01D9AC                     u33651:
 22675   01D9AC  EFDA  F0EC         	goto	l24139
 22676   01D9B0                     u33650:
 22677   01D9B0  EFEC  F0EC         	goto	l24141
 22678   01D9B4                     l24139:
 22679                           
 22680                           ; BSR set to: 6
 22681                           ;../fatfs/ff.c: 6537:  while (nc < len) {
 22682   01D9B4  516B               	movf	f_gets@len& (0+255),w,b
 22683   01D9B6  5D6F               	subwf	f_gets@nc& (0+255),w,b
 22684   01D9B8  5170               	movf	(f_gets@nc+1)& (0+255),w,b
 22685   01D9BA  0A80               	xorlw	128
 22686   01D9BC  0105               	movlb	5	; () banked
 22687   01D9BE  6FFF               	movwf	??_f_gets& (0+255),b
 22688   01D9C0  0106               	movlb	6	; () banked
 22689   01D9C2  516C               	movf	(f_gets@len+1)& (0+255),w,b
 22690   01D9C4  0A80               	xorlw	128
 22691   01D9C6  0105               	movlb	5	; () banked
 22692   01D9C8  59FF               	subwfb	??_f_gets& (0+255),w,b
 22693   01D9CA  A0D8               	btfss	status,0,c
 22694   01D9CC  EFEA  F0EC         	goto	u33661
 22695   01D9D0  EFEC  F0EC         	goto	u33660
 22696   01D9D4                     u33661:
 22697   01D9D4  EF9E  F0EC         	goto	l24117
 22698   01D9D8                     u33660:
 22699   01D9D8                     l24141:
 22700                           
 22701                           ;../fatfs/ff.c: 6547:  *p = 0;
 22702   01D9D8  C671  F4D9         	movff	f_gets@p,fsr2l
 22703   01D9DC  C672  F4DA         	movff	f_gets@p+1,fsr2h
 22704   01D9E0  6ADF               	clrf	indf2,c
 22705   01D9E2                     
 22706                           ;../fatfs/ff.c: 6548:  return nc ? buff : 0;
 22707   01D9E2  0106               	movlb	6	; () banked
 22708   01D9E4  516F               	movf	f_gets@nc& (0+255),w,b
 22709   01D9E6  1170               	iorwf	(f_gets@nc+1)& (0+255),w,b
 22710   01D9E8  A4D8               	btfss	status,2,c
 22711   01D9EA  EFF9  F0EC         	goto	u33671
 22712   01D9EE  EFFB  F0EC         	goto	u33670
 22713   01D9F2                     u33671:
 22714   01D9F2  EF01  F0ED         	goto	l24147
 22715   01D9F6                     u33670:
 22716   01D9F6                     
 22717                           ; BSR set to: 6
 22718   01D9F6  0E00               	movlw	0
 22719   01D9F8  6F69               	movwf	?_f_gets& (0+255),b
 22720   01D9FA  0E00               	movlw	0
 22721   01D9FC  6F6A               	movwf	(?_f_gets+1)& (0+255),b
 22722   01D9FE  EF05  F0ED         	goto	l963
 22723   01DA02                     l24147:
 22724                           
 22725                           ; BSR set to: 6
 22726   01DA02  C669  F669         	movff	f_gets@buff,?_f_gets
 22727   01DA06  C66A  F66A         	movff	f_gets@buff+1,?_f_gets+1
 22728   01DA0A                     l963:
 22729                           
 22730                           ; BSR set to: 6
 22731   01DA0A  0012               	return		;funcret
 22732   01DA0C                     __end_of_f_gets:
 22733                           	callstack 0
 22734                           
 22735 ;; *************** function _del_space *****************
 22736 ;; Defined at:
 22737 ;;		line 401 in file "../src/w65_main.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  bytes           2    3[COMRAM] PTR unsigned char 
 22740 ;;		 -> tmp_buf(512), 
 22741 ;; Auto vars:     Size  Location     Type
 22742 ;;  c               1    8[COMRAM] unsigned char 
 22743 ;;  pos             1    7[COMRAM] unsigned char 
 22744 ;;  i               1    6[COMRAM] unsigned char 
 22745 ;; Return value:  Size  Location     Type
 22746 ;;                  1    wreg      unsigned char 
 22747 ;; Registers used:
 22748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22749 ;; Tracked objects:
 22750 ;;		On entry : 0/0
 22751 ;;		On exit  : 0/0
 22752 ;;		Unchanged: 0/0
 22753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22755 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22758 ;;Total ram usage:        6 bytes
 22759 ;; Hardware stack levels used: 1
 22760 ;; Hardware stack levels required when called: 1
 22761 ;; This function calls:
 22762 ;;		Nothing
 22763 ;; This function is called by:
 22764 ;;		_load_config
 22765 ;; This function uses a non-reentrant model
 22766 ;;
 22767                           
 22768                           	psect	text40
 22769   01EFD2                     __ptext40:
 22770                           	callstack 0
 22771   01EFD2                     _del_space:
 22772                           	callstack 124
 22773   01EFD2                     
 22774                           ;../src/w65_main.c: 402:  uint8_t pos = 0;
 22775   01EFD2  6A08               	clrf	del_space@pos^(0+1280),c
 22776                           
 22777                           ;../src/w65_main.c: 403:  uint8_t i = 0;
 22778   01EFD4  6A07               	clrf	del_space@i^(0+1280),c
 22779                           
 22780                           ;../src/w65_main.c: 404:  char c;;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 22781   01EFD6  EF13  F0F8         	goto	l16689
 22782   01EFDA                     l16679:
 22783                           
 22784                           ;../src/w65_main.c: 407:   if (c == '\r' || c == '\n' || c == ' ') {
 22785   01EFDA  0E0D               	movlw	13
 22786   01EFDC  1809               	xorwf	del_space@c^(0+1280),w,c
 22787   01EFDE  B4D8               	btfsc	status,2,c
 22788   01EFE0  EFF4  F0F7         	goto	u21551
 22789   01EFE4  EFF6  F0F7         	goto	u21550
 22790   01EFE8                     u21551:
 22791   01EFE8  EF13  F0F8         	goto	l16689
 22792   01EFEC                     u21550:
 22793   01EFEC  0E0A               	movlw	10
 22794   01EFEE  1809               	xorwf	del_space@c^(0+1280),w,c
 22795   01EFF0  B4D8               	btfsc	status,2,c
 22796   01EFF2  EFFD  F0F7         	goto	u21561
 22797   01EFF6  EFFF  F0F7         	goto	u21560
 22798   01EFFA                     u21561:
 22799   01EFFA  EF13  F0F8         	goto	l16689
 22800   01EFFE                     u21560:
 22801   01EFFE  0E20               	movlw	32
 22802   01F000  1809               	xorwf	del_space@c^(0+1280),w,c
 22803   01F002  A4D8               	btfss	status,2,c
 22804   01F004  EF06  F0F8         	goto	u21571
 22805   01F008  EF08  F0F8         	goto	u21570
 22806   01F00C                     u21571:
 22807   01F00C  EF0A  F0F8         	goto	l16685
 22808   01F010                     u21570:
 22809   01F010  EF13  F0F8         	goto	l16689
 22810   01F014                     l16685:
 22811                           
 22812                           ;../src/w65_main.c: 410:   bytes[pos++] = c;
 22813   01F014  5008               	movf	del_space@pos^(0+1280),w,c
 22814   01F016  2404               	addwf	del_space@bytes^(0+1280),w,c
 22815   01F018  6ED9               	movwf	fsr2l,c
 22816   01F01A  0E00               	movlw	0
 22817   01F01C  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 22818   01F01E  6EDA               	movwf	fsr2h,c
 22819   01F020  C509  F4DF         	movff	del_space@c,indf2
 22820   01F024  2A08               	incf	del_space@pos^(0+1280),f,c
 22821   01F026                     l16689:
 22822                           
 22823                           ;../src/w65_main.c: 406:  while( (c = bytes[i++]) ) {
 22824   01F026  2A07               	incf	del_space@i^(0+1280),f,c
 22825   01F028  0407               	decf	del_space@i^(0+1280),w,c
 22826   01F02A  6E06               	movwf	??_del_space^(0+1280),c
 22827   01F02C  5006               	movf	??_del_space^(0+1280),w,c
 22828   01F02E  2404               	addwf	del_space@bytes^(0+1280),w,c
 22829   01F030  6ED9               	movwf	fsr2l,c
 22830   01F032  0E00               	movlw	0
 22831   01F034  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 22832   01F036  6EDA               	movwf	fsr2h,c
 22833   01F038  50DF               	movf	indf2,w,c
 22834   01F03A  6E09               	movwf	del_space@c^(0+1280),c
 22835   01F03C  5009               	movf	del_space@c^(0+1280),w,c
 22836   01F03E  A4D8               	btfss	status,2,c
 22837   01F040  EF24  F0F8         	goto	u21581
 22838   01F044  EF26  F0F8         	goto	u21580
 22839   01F048                     u21581:
 22840   01F048  EFED  F0F7         	goto	l16679
 22841   01F04C                     u21580:
 22842   01F04C                     
 22843                           ;../src/w65_main.c: 412:  bytes[pos] = c;
 22844   01F04C  5008               	movf	del_space@pos^(0+1280),w,c
 22845   01F04E  2404               	addwf	del_space@bytes^(0+1280),w,c
 22846   01F050  6ED9               	movwf	fsr2l,c
 22847   01F052  0E00               	movlw	0
 22848   01F054  2005               	addwfc	(del_space@bytes+1)^(0+1280),w,c
 22849   01F056  6EDA               	movwf	fsr2h,c
 22850   01F058  C509  F4DF         	movff	del_space@c,indf2
 22851   01F05C  0012               	return		;funcret
 22852   01F05E                     __end_of_del_space:
 22853                           	callstack 0
 22854                           
 22855 ;; *************** function ___strtoxl *****************
 22856 ;; Defined at:
 22857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__strtoxl.c"
 22858 ;; Parameters:    Size  Location     Type
 22859 ;;  s               2   15[COMRAM] PTR const unsigned char 
 22860 ;;		 -> tmp_buf(512), 
 22861 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
 22862 ;;		 -> load_config@a(2), 
 22863 ;;  base            2   19[COMRAM] int 
 22864 ;;  is_signed       1   21[COMRAM] unsigned char 
 22865 ;; Auto vars:     Size  Location     Type
 22866 ;;  a               4   38[COMRAM] unsigned long 
 22867 ;;  limit           4   33[COMRAM] unsigned long 
 22868 ;;  prev_a          4   25[COMRAM] unsigned long 
 22869 ;;  cp              2   42[COMRAM] PTR const unsigned char 
 22870 ;;		 -> tmp_buf(512), 
 22871 ;;  c               1   44[COMRAM] unsigned char 
 22872 ;;  flags           1   37[COMRAM] enum E246
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  4   15[COMRAM] unsigned long 
 22875 ;; Registers used:
 22876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 22882 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22883 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22884 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22885 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 22886 ;;Total ram usage:       30 bytes
 22887 ;; Hardware stack levels used: 1
 22888 ;; Hardware stack levels required when called: 2
 22889 ;; This function calls:
 22890 ;;		___lmul
 22891 ;; This function is called by:
 22892 ;;		_load_config
 22893 ;; This function uses a non-reentrant model
 22894 ;;
 22895                           
 22896                           	psect	text41
 22897   015870                     __ptext41:
 22898                           	callstack 0
 22899   015870                     ___strtoxl:
 22900                           	callstack 123
 22901   015870  6A26               	clrf	___strtoxl@flags^(0+1280),c
 22902   015872  0E00               	movlw	0
 22903   015874  6E27               	movwf	___strtoxl@a^(0+1280),c
 22904   015876  0E00               	movlw	0
 22905   015878  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 22906   01587A  0E00               	movlw	0
 22907   01587C  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 22908   01587E  0E00               	movlw	0
 22909   015880  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 22910   015882  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 22911   015886  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 22912   01588A  BE15               	btfsc	(___strtoxl@base+1)^(0+1280),7,c
 22913   01588C  EF53  F0AC         	goto	u33940
 22914   015890  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 22915   015892  E107               	bnz	u33941
 22916   015894  0E25               	movlw	37
 22917   015896  5C14               	subwf	___strtoxl@base^(0+1280),w,c
 22918   015898  B0D8               	btfsc	status,0,c
 22919   01589A  EF51  F0AC         	goto	u33941
 22920   01589E  EF53  F0AC         	goto	u33940
 22921   0158A2                     u33941:
 22922   0158A2  EF5C  F0AC         	goto	l24381
 22923   0158A6                     u33940:
 22924   0158A6  0414               	decf	___strtoxl@base^(0+1280),w,c
 22925   0158A8  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 22926   0158AA  A4D8               	btfss	status,2,c
 22927   0158AC  EF5A  F0AC         	goto	u33951
 22928   0158B0  EF5C  F0AC         	goto	u33950
 22929   0158B4                     u33951:
 22930   0158B4  EF63  F0AC         	goto	l24383
 22931   0158B8                     u33950:
 22932   0158B8                     l24381:
 22933   0158B8  0E00               	movlw	0
 22934   0158BA  0107               	movlb	7	; () banked
 22935   0158BC  6FB4               	movwf	(_errno+1)& (0+255),b
 22936   0158BE  0E16               	movlw	22
 22937   0158C0  6FB3               	movwf	_errno& (0+255),b
 22938   0158C2  EF61  F0AE         	goto	l24487
 22939   0158C6                     l24383:
 22940   0158C6  502B               	movf	___strtoxl@cp^(0+1280),w,c
 22941   0158C8  102C               	iorwf	(___strtoxl@cp+1)^(0+1280),w,c
 22942   0158CA  B4D8               	btfsc	status,2,c
 22943   0158CC  EF6A  F0AC         	goto	u33961
 22944   0158D0  EF6C  F0AC         	goto	u33960
 22945   0158D4                     u33961:
 22946   0158D4  EF61  F0AE         	goto	l24487
 22947   0158D8                     u33960:
 22948   0158D8  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 22949   0158DC  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 22950   0158E0  50DF               	movf	indf2,w,c
 22951   0158E2  A4D8               	btfss	status,2,c
 22952   0158E4  EF76  F0AC         	goto	u33971
 22953   0158E8  EF78  F0AC         	goto	u33970
 22954   0158EC                     u33971:
 22955   0158EC  EF7A  F0AC         	goto	l24387
 22956   0158F0                     u33970:
 22957   0158F0  EF61  F0AE         	goto	l24487
 22958   0158F4                     l24387:
 22959   0158F4  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 22960   0158F8  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 22961   0158FC  50DF               	movf	indf2,w,c
 22962   0158FE  6E2D               	movwf	___strtoxl@c^(0+1280),c
 22963   015900  EF8A  F0AC         	goto	l24391
 22964   015904                     l24389:
 22965   015904  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 22966   015906  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 22967   015908  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 22968   01590C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 22969   015910  50DF               	movf	indf2,w,c
 22970   015912  6E2D               	movwf	___strtoxl@c^(0+1280),c
 22971   015914                     l24391:
 22972   015914  0E20               	movlw	32
 22973   015916  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 22974   015918  B4D8               	btfsc	status,2,c
 22975   01591A  EF91  F0AC         	goto	u33981
 22976   01591E  EF93  F0AC         	goto	u33980
 22977   015922                     u33981:
 22978   015922  EF82  F0AC         	goto	l24389
 22979   015926                     u33980:
 22980   015926  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 22981   01592A  0EF7               	movlw	247
 22982   01592C  2617               	addwf	??___strtoxl^(0+1280),f,c
 22983   01592E  0E04               	movlw	4
 22984   015930  6417               	cpfsgt	??___strtoxl^(0+1280),c
 22985   015932  EF9D  F0AC         	goto	u33991
 22986   015936  EF9F  F0AC         	goto	u33990
 22987   01593A                     u33991:
 22988   01593A  EF82  F0AC         	goto	l24389
 22989   01593E                     u33990:
 22990   01593E  0E2D               	movlw	45
 22991   015940  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 22992   015942  A4D8               	btfss	status,2,c
 22993   015944  EFA6  F0AC         	goto	u34001
 22994   015948  EFA8  F0AC         	goto	u34000
 22995   01594C                     u34001:
 22996   01594C  EFB4  F0AC         	goto	l24401
 22997   015950                     u34000:
 22998   015950  0E01               	movlw	1
 22999   015952  6E26               	movwf	___strtoxl@flags^(0+1280),c
 23000   015954                     l24399:
 23001   015954  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 23002   015956  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 23003   015958  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 23004   01595C  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 23005   015960  50DF               	movf	indf2,w,c
 23006   015962  6E2D               	movwf	___strtoxl@c^(0+1280),c
 23007   015964  EFBF  F0AC         	goto	l24405
 23008   015968                     l24401:
 23009   015968  0E2B               	movlw	43
 23010   01596A  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 23011   01596C  A4D8               	btfss	status,2,c
 23012   01596E  EFBB  F0AC         	goto	u34011
 23013   015972  EFBD  F0AC         	goto	u34010
 23014   015976                     u34011:
 23015   015976  EFBF  F0AC         	goto	l24405
 23016   01597A                     u34010:
 23017   01597A  EFAA  F0AC         	goto	l24399
 23018   01597E                     l24405:
 23019   01597E  0E30               	movlw	48
 23020   015980  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 23021   015982  A4D8               	btfss	status,2,c
 23022   015984  EFC6  F0AC         	goto	u34021
 23023   015988  EFC8  F0AC         	goto	u34020
 23024   01598C                     u34021:
 23025   01598C  EF61  F0AD         	goto	l24441
 23026   015990                     u34020:
 23027   015990  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 23028   015992  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 23029   015994  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 23030   015998  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 23031   01599C  50DF               	movf	indf2,w,c
 23032   01599E  6E2D               	movwf	___strtoxl@c^(0+1280),c
 23033   0159A0  5014               	movf	___strtoxl@base^(0+1280),w,c
 23034   0159A2  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 23035   0159A4  B4D8               	btfsc	status,2,c
 23036   0159A6  EFD7  F0AC         	goto	u34031
 23037   0159AA  EFD9  F0AC         	goto	u34030
 23038   0159AE                     u34031:
 23039   0159AE  EFE3  F0AC         	goto	l24413
 23040   0159B2                     u34030:
 23041   0159B2  0E10               	movlw	16
 23042   0159B4  1814               	xorwf	___strtoxl@base^(0+1280),w,c
 23043   0159B6  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 23044   0159B8  A4D8               	btfss	status,2,c
 23045   0159BA  EFE1  F0AC         	goto	u34041
 23046   0159BE  EFE3  F0AC         	goto	u34040
 23047   0159C2                     u34041:
 23048   0159C2  EF53  F0AD         	goto	l24435
 23049   0159C6                     u34040:
 23050   0159C6                     l24413:
 23051   0159C6  0E78               	movlw	120
 23052   0159C8  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 23053   0159CA  B4D8               	btfsc	status,2,c
 23054   0159CC  EFEA  F0AC         	goto	u34051
 23055   0159D0  EFEC  F0AC         	goto	u34050
 23056   0159D4                     u34051:
 23057   0159D4  EFF5  F0AC         	goto	l24417
 23058   0159D8                     u34050:
 23059   0159D8  0E58               	movlw	88
 23060   0159DA  182D               	xorwf	___strtoxl@c^(0+1280),w,c
 23061   0159DC  A4D8               	btfss	status,2,c
 23062   0159DE  EFF3  F0AC         	goto	u34061
 23063   0159E2  EFF5  F0AC         	goto	u34060
 23064   0159E6                     u34061:
 23065   0159E6  EF53  F0AD         	goto	l24435
 23066   0159EA                     u34060:
 23067   0159EA                     l24417:
 23068   0159EA  0E00               	movlw	0
 23069   0159EC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 23070   0159EE  0E10               	movlw	16
 23071   0159F0  6E14               	movwf	___strtoxl@base^(0+1280),c
 23072   0159F2  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 23073   0159F4  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 23074   0159F6  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 23075   0159FA  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 23076   0159FE  50DF               	movf	indf2,w,c
 23077   015A00  6E2D               	movwf	___strtoxl@c^(0+1280),c
 23078   015A02  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23079   015A06  0E20               	movlw	32
 23080   015A08  1217               	iorwf	??___strtoxl^(0+1280),f,c
 23081   015A0A  0E9F               	movlw	159
 23082   015A0C  2617               	addwf	??___strtoxl^(0+1280),f,c
 23083   015A0E  0E1A               	movlw	26
 23084   015A10  6017               	cpfslt	??___strtoxl^(0+1280),c
 23085   015A12  EF0D  F0AD         	goto	u34071
 23086   015A16  EF0F  F0AD         	goto	u34070
 23087   015A1A                     u34071:
 23088   015A1A  EF33  F0AD         	goto	l24429
 23089   015A1E                     u34070:
 23090   015A1E  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23091   015A22  0E9F               	movlw	159
 23092   015A24  2617               	addwf	??___strtoxl^(0+1280),f,c
 23093   015A26  0E19               	movlw	25
 23094   015A28  6417               	cpfsgt	??___strtoxl^(0+1280),c
 23095   015A2A  EF19  F0AD         	goto	u34081
 23096   015A2E  EF1B  F0AD         	goto	u34080
 23097   015A32                     u34081:
 23098   015A32  EF20  F0AD         	goto	l24427
 23099   015A36                     u34080:
 23100   015A36  C52D  F51E         	movff	___strtoxl@c,___strtoxl$4576
 23101   015A3A  6A1F               	clrf	(___strtoxl$4576+1)^(0+1280),c
 23102   015A3C  EF27  F0AD         	goto	l3259
 23103   015A40                     l24427:
 23104   015A40  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23105   015A44  0E5F               	movlw	95
 23106   015A46  1617               	andwf	??___strtoxl^(0+1280),f,c
 23107   015A48  5017               	movf	??___strtoxl^(0+1280),w,c
 23108   015A4A  6E1E               	movwf	___strtoxl$4576^(0+1280),c
 23109   015A4C  6A1F               	clrf	(___strtoxl$4576+1)^(0+1280),c
 23110   015A4E                     l3259:
 23111   015A4E  C51E  F517         	movff	___strtoxl$4576,??___strtoxl
 23112   015A52  0EC9               	movlw	201
 23113   015A54  2617               	addwf	??___strtoxl^(0+1280),f,c
 23114   015A56  0E10               	movlw	16
 23115   015A58  6017               	cpfslt	??___strtoxl^(0+1280),c
 23116   015A5A  EF31  F0AD         	goto	u34091
 23117   015A5E  EF33  F0AD         	goto	u34090
 23118   015A62                     u34091:
 23119   015A62  EF4D  F0AD         	goto	l24433
 23120   015A66                     u34090:
 23121   015A66                     l24429:
 23122   015A66  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23123   015A6A  0E20               	movlw	32
 23124   015A6C  1217               	iorwf	??___strtoxl^(0+1280),f,c
 23125   015A6E  0E9F               	movlw	159
 23126   015A70  2617               	addwf	??___strtoxl^(0+1280),f,c
 23127   015A72  0E19               	movlw	25
 23128   015A74  6417               	cpfsgt	??___strtoxl^(0+1280),c
 23129   015A76  EF3F  F0AD         	goto	u34101
 23130   015A7A  EF41  F0AD         	goto	u34100
 23131   015A7E                     u34101:
 23132   015A7E  EF61  F0AD         	goto	l24441
 23133   015A82                     u34100:
 23134   015A82  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23135   015A86  0ED0               	movlw	208
 23136   015A88  2617               	addwf	??___strtoxl^(0+1280),f,c
 23137   015A8A  0E09               	movlw	9
 23138   015A8C  6417               	cpfsgt	??___strtoxl^(0+1280),c
 23139   015A8E  EF4B  F0AD         	goto	u34111
 23140   015A92  EF4D  F0AD         	goto	u34110
 23141   015A96                     u34111:
 23142   015A96  EF61  F0AD         	goto	l24441
 23143   015A9A                     u34110:
 23144   015A9A                     l24433:
 23145   015A9A  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 23146   015A9C  062B               	decf	___strtoxl@cp^(0+1280),f,c
 23147   015A9E  A0D8               	btfss	status,0,c
 23148   015AA0  062C               	decf	(___strtoxl@cp+1)^(0+1280),f,c
 23149   015AA2  EF61  F0AE         	goto	l24487
 23150   015AA6                     l24435:
 23151   015AA6  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 23152   015AA8  5014               	movf	___strtoxl@base^(0+1280),w,c
 23153   015AAA  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 23154   015AAC  A4D8               	btfss	status,2,c
 23155   015AAE  EF5B  F0AD         	goto	u34121
 23156   015AB2  EF5D  F0AD         	goto	u34120
 23157   015AB6                     u34121:
 23158   015AB6  EF61  F0AD         	goto	l24441
 23159   015ABA                     u34120:
 23160   015ABA  0E00               	movlw	0
 23161   015ABC  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 23162   015ABE  0E08               	movlw	8
 23163   015AC0  6E14               	movwf	___strtoxl@base^(0+1280),c
 23164   015AC2                     l24441:
 23165   015AC2  5014               	movf	___strtoxl@base^(0+1280),w,c
 23166   015AC4  1015               	iorwf	(___strtoxl@base+1)^(0+1280),w,c
 23167   015AC6  A4D8               	btfss	status,2,c
 23168   015AC8  EF68  F0AD         	goto	u34131
 23169   015ACC  EF6A  F0AD         	goto	u34130
 23170   015AD0                     u34131:
 23171   015AD0  EF6E  F0AD         	goto	l3262
 23172   015AD4                     u34130:
 23173   015AD4  0E00               	movlw	0
 23174   015AD6  6E15               	movwf	(___strtoxl@base+1)^(0+1280),c
 23175   015AD8  0E0A               	movlw	10
 23176   015ADA  6E14               	movwf	___strtoxl@base^(0+1280),c
 23177   015ADC                     l3262:
 23178   015ADC  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 23179   015ADE  B4D8               	btfsc	status,2,c
 23180   015AE0  EF74  F0AD         	goto	u34141
 23181   015AE4  EF76  F0AD         	goto	u34140
 23182   015AE8                     u34141:
 23183   015AE8  EF91  F0AD         	goto	l3263
 23184   015AEC                     u34140:
 23185   015AEC  B026               	btfsc	___strtoxl@flags^(0+1280),0,c
 23186   015AEE  EF7B  F0AD         	goto	u34151
 23187   015AF2  EF7D  F0AD         	goto	u34150
 23188   015AF6                     u34151:
 23189   015AF6  EF87  F0AD         	goto	l24449
 23190   015AFA                     u34150:
 23191   015AFA  0EFF               	movlw	255
 23192   015AFC  6E22               	movwf	___strtoxl@limit^(0+1280),c
 23193   015AFE  0EFF               	movlw	255
 23194   015B00  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 23195   015B02  0EFF               	movlw	255
 23196   015B04  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 23197   015B06  0E7F               	movlw	127
 23198   015B08  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 23199   015B0A  EF95  F0AD         	goto	l3269
 23200   015B0E                     l24449:
 23201   015B0E  0E00               	movlw	0
 23202   015B10  6E22               	movwf	___strtoxl@limit^(0+1280),c
 23203   015B12  0E00               	movlw	0
 23204   015B14  6E23               	movwf	(___strtoxl@limit+1)^(0+1280),c
 23205   015B16  0E00               	movlw	0
 23206   015B18  6E24               	movwf	(___strtoxl@limit+2)^(0+1280),c
 23207   015B1A  0E80               	movlw	128
 23208   015B1C  6E25               	movwf	(___strtoxl@limit+3)^(0+1280),c
 23209   015B1E  EF95  F0AD         	goto	l3269
 23210   015B22                     l3263:
 23211   015B22  6822               	setf	___strtoxl@limit^(0+1280),c
 23212   015B24  6823               	setf	(___strtoxl@limit+1)^(0+1280),c
 23213   015B26  6824               	setf	(___strtoxl@limit+2)^(0+1280),c
 23214   015B28  6825               	setf	(___strtoxl@limit+3)^(0+1280),c
 23215   015B2A                     l3269:
 23216   015B2A  C527  F51A         	movff	___strtoxl@a,___strtoxl@prev_a
 23217   015B2E  C528  F51B         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
 23218   015B32  C529  F51C         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
 23219   015B36  C52A  F51D         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
 23220   015B3A  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23221   015B3E  0E20               	movlw	32
 23222   015B40  1217               	iorwf	??___strtoxl^(0+1280),f,c
 23223   015B42  0E9F               	movlw	159
 23224   015B44  2617               	addwf	??___strtoxl^(0+1280),f,c
 23225   015B46  0E1A               	movlw	26
 23226   015B48  6017               	cpfslt	??___strtoxl^(0+1280),c
 23227   015B4A  EFA9  F0AD         	goto	u34161
 23228   015B4E  EFAB  F0AD         	goto	u34160
 23229   015B52                     u34161:
 23230   015B52  EFC8  F0AD         	goto	l24459
 23231   015B56                     u34160:
 23232   015B56  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23233   015B5A  0E9F               	movlw	159
 23234   015B5C  2617               	addwf	??___strtoxl^(0+1280),f,c
 23235   015B5E  0E19               	movlw	25
 23236   015B60  6417               	cpfsgt	??___strtoxl^(0+1280),c
 23237   015B62  EFB5  F0AD         	goto	u34171
 23238   015B66  EFB7  F0AD         	goto	u34170
 23239   015B6A                     u34171:
 23240   015B6A  EFBC  F0AD         	goto	l24457
 23241   015B6E                     u34170:
 23242   015B6E  C52D  F520         	movff	___strtoxl@c,___strtoxl$4577
 23243   015B72  6A21               	clrf	(___strtoxl$4577+1)^(0+1280),c
 23244   015B74  EFC3  F0AD         	goto	l3274
 23245   015B78                     l24457:
 23246   015B78  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23247   015B7C  0E5F               	movlw	95
 23248   015B7E  1617               	andwf	??___strtoxl^(0+1280),f,c
 23249   015B80  5017               	movf	??___strtoxl^(0+1280),w,c
 23250   015B82  6E20               	movwf	___strtoxl$4577^(0+1280),c
 23251   015B84  6A21               	clrf	(___strtoxl$4577+1)^(0+1280),c
 23252   015B86                     l3274:
 23253   015B86  5020               	movf	___strtoxl$4577^(0+1280),w,c
 23254   015B88  0FC9               	addlw	201
 23255   015B8A  6E2D               	movwf	___strtoxl@c^(0+1280),c
 23256   015B8C  EFD6  F0AD         	goto	l24463
 23257   015B90                     l24459:
 23258   015B90  C52D  F517         	movff	___strtoxl@c,??___strtoxl
 23259   015B94  0ED0               	movlw	208
 23260   015B96  2617               	addwf	??___strtoxl^(0+1280),f,c
 23261   015B98  0E0A               	movlw	10
 23262   015B9A  6017               	cpfslt	??___strtoxl^(0+1280),c
 23263   015B9C  EFD2  F0AD         	goto	u34181
 23264   015BA0  EFD4  F0AD         	goto	u34180
 23265   015BA4                     u34181:
 23266   015BA4  EF4F  F0AE         	goto	l24483
 23267   015BA8                     u34180:
 23268   015BA8  0E30               	movlw	48
 23269   015BAA  5E2D               	subwf	___strtoxl@c^(0+1280),f,c
 23270   015BAC                     l24463:
 23271   015BAC  502D               	movf	___strtoxl@c^(0+1280),w,c
 23272   015BAE  6E17               	movwf	??___strtoxl^(0+1280),c
 23273   015BB0  6A18               	clrf	(??___strtoxl+1)^(0+1280),c
 23274   015BB2  5014               	movf	___strtoxl@base^(0+1280),w,c
 23275   015BB4  5C17               	subwf	??___strtoxl^(0+1280),w,c
 23276   015BB6  5018               	movf	(??___strtoxl+1)^(0+1280),w,c
 23277   015BB8  0A80               	xorlw	128
 23278   015BBA  6E19               	movwf	(??___strtoxl+2)^(0+1280),c
 23279   015BBC  5015               	movf	(___strtoxl@base+1)^(0+1280),w,c
 23280   015BBE  0A80               	xorlw	128
 23281   015BC0  5819               	subwfb	(??___strtoxl+2)^(0+1280),w,c
 23282   015BC2  A0D8               	btfss	status,0,c
 23283   015BC4  EFE6  F0AD         	goto	u34191
 23284   015BC8  EFE8  F0AD         	goto	u34190
 23285   015BCC                     u34191:
 23286   015BCC  EFEA  F0AD         	goto	l3279
 23287   015BD0                     u34190:
 23288   015BD0  EF4F  F0AE         	goto	l24483
 23289   015BD4                     l3279:
 23290   015BD4  B226               	btfsc	___strtoxl@flags^(0+1280),1,c
 23291   015BD6  EFEF  F0AD         	goto	u34201
 23292   015BDA  EFF1  F0AD         	goto	u34200
 23293   015BDE                     u34201:
 23294   015BDE  EF44  F0AE         	goto	l24479
 23295   015BE2                     u34200:
 23296   015BE2  C514  F504         	movff	___strtoxl@base,___lmul@multiplier
 23297   015BE6  C515  F505         	movff	___strtoxl@base+1,___lmul@multiplier+1
 23298   015BEA  0E00               	movlw	0
 23299   015BEC  BE05               	btfsc	(___lmul@multiplier+1)^(0+1280),7,c
 23300   015BEE  0EFF               	movlw	-1
 23301   015BF0  6E06               	movwf	(___lmul@multiplier+2)^(0+1280),c
 23302   015BF2  6E07               	movwf	(___lmul@multiplier+3)^(0+1280),c
 23303   015BF4  C527  F508         	movff	___strtoxl@a,___lmul@multiplicand
 23304   015BF8  C528  F509         	movff	___strtoxl@a+1,___lmul@multiplicand+1
 23305   015BFC  C529  F50A         	movff	___strtoxl@a+2,___lmul@multiplicand+2
 23306   015C00  C52A  F50B         	movff	___strtoxl@a+3,___lmul@multiplicand+3
 23307   015C04  EC13  F0FB         	call	___lmul	;wreg free
 23308   015C08  502D               	movf	___strtoxl@c^(0+1280),w,c
 23309   015C0A  2404               	addwf	?___lmul^(0+1280),w,c
 23310   015C0C  6E27               	movwf	___strtoxl@a^(0+1280),c
 23311   015C0E  0E00               	movlw	0
 23312   015C10  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 23313   015C12  6E28               	movwf	(___strtoxl@a+1)^(0+1280),c
 23314   015C14  0E00               	movlw	0
 23315   015C16  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 23316   015C18  6E29               	movwf	(___strtoxl@a+2)^(0+1280),c
 23317   015C1A  0E00               	movlw	0
 23318   015C1C  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 23319   015C1E  6E2A               	movwf	(___strtoxl@a+3)^(0+1280),c
 23320   015C20  501A               	movf	___strtoxl@prev_a^(0+1280),w,c
 23321   015C22  5C27               	subwf	___strtoxl@a^(0+1280),w,c
 23322   015C24  501B               	movf	(___strtoxl@prev_a+1)^(0+1280),w,c
 23323   015C26  5828               	subwfb	(___strtoxl@a+1)^(0+1280),w,c
 23324   015C28  501C               	movf	(___strtoxl@prev_a+2)^(0+1280),w,c
 23325   015C2A  5829               	subwfb	(___strtoxl@a+2)^(0+1280),w,c
 23326   015C2C  501D               	movf	(___strtoxl@prev_a+3)^(0+1280),w,c
 23327   015C2E  582A               	subwfb	(___strtoxl@a+3)^(0+1280),w,c
 23328   015C30  A0D8               	btfss	status,0,c
 23329   015C32  EF1D  F0AE         	goto	u34211
 23330   015C36  EF1F  F0AE         	goto	u34210
 23331   015C3A                     u34211:
 23332   015C3A  EF36  F0AE         	goto	l3283
 23333   015C3E                     u34210:
 23334   015C3E  5016               	movf	___strtoxl@is_signed^(0+1280),w,c
 23335   015C40  B4D8               	btfsc	status,2,c
 23336   015C42  EF25  F0AE         	goto	u34221
 23337   015C46  EF27  F0AE         	goto	u34220
 23338   015C4A                     u34221:
 23339   015C4A  EF44  F0AE         	goto	l24479
 23340   015C4E                     u34220:
 23341   015C4E  5027               	movf	___strtoxl@a^(0+1280),w,c
 23342   015C50  5C22               	subwf	___strtoxl@limit^(0+1280),w,c
 23343   015C52  5028               	movf	(___strtoxl@a+1)^(0+1280),w,c
 23344   015C54  5823               	subwfb	(___strtoxl@limit+1)^(0+1280),w,c
 23345   015C56  5029               	movf	(___strtoxl@a+2)^(0+1280),w,c
 23346   015C58  5824               	subwfb	(___strtoxl@limit+2)^(0+1280),w,c
 23347   015C5A  502A               	movf	(___strtoxl@a+3)^(0+1280),w,c
 23348   015C5C  5825               	subwfb	(___strtoxl@limit+3)^(0+1280),w,c
 23349   015C5E  B0D8               	btfsc	status,0,c
 23350   015C60  EF34  F0AE         	goto	u34231
 23351   015C64  EF36  F0AE         	goto	u34230
 23352   015C68                     u34231:
 23353   015C68  EF44  F0AE         	goto	l24479
 23354   015C6C                     u34230:
 23355   015C6C                     l3283:
 23356   015C6C  C522  F527         	movff	___strtoxl@limit,___strtoxl@a
 23357   015C70  C523  F528         	movff	___strtoxl@limit+1,___strtoxl@a+1
 23358   015C74  C524  F529         	movff	___strtoxl@limit+2,___strtoxl@a+2
 23359   015C78  C525  F52A         	movff	___strtoxl@limit+3,___strtoxl@a+3
 23360   015C7C  0E00               	movlw	0
 23361   015C7E  0107               	movlb	7	; () banked
 23362   015C80  6FB4               	movwf	(_errno+1)& (0+255),b
 23363   015C82  0E22               	movlw	34
 23364   015C84  6FB3               	movwf	_errno& (0+255),b
 23365   015C86                     
 23366                           ; BSR set to: 7
 23367   015C86  8226               	bsf	___strtoxl@flags^(0+1280),1,c
 23368   015C88                     l24479:
 23369   015C88  4A2B               	infsnz	___strtoxl@cp^(0+1280),f,c
 23370   015C8A  2A2C               	incf	(___strtoxl@cp+1)^(0+1280),f,c
 23371   015C8C  C52B  F4D9         	movff	___strtoxl@cp,fsr2l
 23372   015C90  C52C  F4DA         	movff	___strtoxl@cp+1,fsr2h
 23373   015C94  50DF               	movf	indf2,w,c
 23374   015C96  6E2D               	movwf	___strtoxl@c^(0+1280),c
 23375   015C98  8426               	bsf	___strtoxl@flags^(0+1280),2,c
 23376   015C9A  EF95  F0AD         	goto	l3269
 23377   015C9E                     l24483:
 23378   015C9E  5026               	movf	___strtoxl@flags^(0+1280),w,c
 23379   015CA0  0B03               	andlw	3
 23380   015CA2  06E8               	decf	wreg,f,c
 23381   015CA4  A4D8               	btfss	status,2,c
 23382   015CA6  EF57  F0AE         	goto	u34241
 23383   015CAA  EF59  F0AE         	goto	u34240
 23384   015CAE                     u34241:
 23385   015CAE  EF61  F0AE         	goto	l24487
 23386   015CB2                     u34240:
 23387   015CB2  1E2A               	comf	(___strtoxl@a+3)^(0+1280),f,c
 23388   015CB4  1E29               	comf	(___strtoxl@a+2)^(0+1280),f,c
 23389   015CB6  1E28               	comf	(___strtoxl@a+1)^(0+1280),f,c
 23390   015CB8  6C27               	negf	___strtoxl@a^(0+1280),c
 23391   015CBA  0E00               	movlw	0
 23392   015CBC  2228               	addwfc	(___strtoxl@a+1)^(0+1280),f,c
 23393   015CBE  2229               	addwfc	(___strtoxl@a+2)^(0+1280),f,c
 23394   015CC0  222A               	addwfc	(___strtoxl@a+3)^(0+1280),f,c
 23395   015CC2                     l24487:
 23396   015CC2  5012               	movf	___strtoxl@endptr^(0+1280),w,c
 23397   015CC4  1013               	iorwf	(___strtoxl@endptr+1)^(0+1280),w,c
 23398   015CC6  B4D8               	btfsc	status,2,c
 23399   015CC8  EF68  F0AE         	goto	u34251
 23400   015CCC  EF6A  F0AE         	goto	u34250
 23401   015CD0                     u34251:
 23402   015CD0  EF7D  F0AE         	goto	l24495
 23403   015CD4                     u34250:
 23404   015CD4  B426               	btfsc	___strtoxl@flags^(0+1280),2,c
 23405   015CD6  EF6F  F0AE         	goto	u34261
 23406   015CDA  EF71  F0AE         	goto	u34260
 23407   015CDE                     u34261:
 23408   015CDE  EF75  F0AE         	goto	l24493
 23409   015CE2                     u34260:
 23410   015CE2  C510  F52B         	movff	___strtoxl@s,___strtoxl@cp
 23411   015CE6  C511  F52C         	movff	___strtoxl@s+1,___strtoxl@cp+1
 23412   015CEA                     l24493:
 23413   015CEA  C512  F4D9         	movff	___strtoxl@endptr,fsr2l
 23414   015CEE  C513  F4DA         	movff	___strtoxl@endptr+1,fsr2h
 23415   015CF2  C52B  F4DE         	movff	___strtoxl@cp,postinc2
 23416   015CF6  C52C  F4DD         	movff	___strtoxl@cp+1,postdec2
 23417   015CFA                     l24495:
 23418   015CFA  C527  F510         	movff	___strtoxl@a,?___strtoxl
 23419   015CFE  C528  F511         	movff	___strtoxl@a+1,?___strtoxl+1
 23420   015D02  C529  F512         	movff	___strtoxl@a+2,?___strtoxl+2
 23421   015D06  C52A  F513         	movff	___strtoxl@a+3,?___strtoxl+3
 23422   015D0A  0012               	return		;funcret
 23423   015D0C                     __end_of___strtoxl:
 23424                           	callstack 0
 23425                           
 23426 ;; *************** function _get_line *****************
 23427 ;; Defined at:
 23428 ;;		line 469 in file "../src/w65_main.c"
 23429 ;; Parameters:    Size  Location     Type
 23430 ;;  s               2   93[BANK5 ] PTR unsigned char 
 23431 ;;		 -> line_buf(81), 
 23432 ;;  length          2   95[BANK5 ] int 
 23433 ;; Auto vars:     Size  Location     Type
 23434 ;;  c               2   97[BANK5 ] int 
 23435 ;;  n               1   99[BANK5 ] unsigned char 
 23436 ;; Return value:  Size  Location     Type
 23437 ;;                  2   93[BANK5 ] int 
 23438 ;; Registers used:
 23439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23440 ;; Tracked objects:
 23441 ;;		On entry : 0/0
 23442 ;;		On exit  : 0/0
 23443 ;;		Unchanged: 0/0
 23444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23448 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23449 ;;Total ram usage:        7 bytes
 23450 ;; Hardware stack levels used: 1
 23451 ;; Hardware stack levels required when called: 9
 23452 ;; This function calls:
 23453 ;;		_getch
 23454 ;;		_printf
 23455 ;;		_putch
 23456 ;; This function is called by:
 23457 ;;		_main
 23458 ;; This function uses a non-reentrant model
 23459 ;;
 23460                           
 23461                           	psect	text42
 23462   01CE22                     __ptext42:
 23463                           	callstack 0
 23464   01CE22                     _get_line:
 23465                           	callstack 117
 23466   01CE22                     
 23467                           ;../src/w65_main.c: 470:  char n;;../src/w65_main.c: 471:  int c;;../src/w65_main.c: 473
      +                          :  for (c=0;;) {
 23468   01CE22  0E00               	movlw	0
 23469   01CE24  0105               	movlb	5	; () banked
 23470   01CE26  6FC2               	movwf	(get_line@c+1)& (0+255),b
 23471   01CE28  0E00               	movlw	0
 23472   01CE2A  6FC1               	movwf	get_line@c& (0+255),b
 23473   01CE2C                     l25089:
 23474                           
 23475                           ; BSR set to: 5
 23476                           ;../src/w65_main.c: 474:   n = (char)getch();
 23477   01CE2C  EC4E  F0FD         	call	_getch	;wreg free
 23478   01CE30  5004               	movf	?_getch^(0+1280),w,c
 23479   01CE32  0105               	movlb	5	; () banked
 23480   01CE34  6FC3               	movwf	get_line@n& (0+255),b
 23481   01CE36                     
 23482                           ; BSR set to: 5
 23483                           ;../src/w65_main.c: 475:   if ( n == 0x08 ) {
 23484   01CE36  0E08               	movlw	8
 23485   01CE38  19C3               	xorwf	get_line@n& (0+255),w,b
 23486   01CE3A  A4D8               	btfss	status,2,c
 23487   01CE3C  EF22  F0E7         	goto	u34961
 23488   01CE40  EF24  F0E7         	goto	u34960
 23489   01CE44                     u34961:
 23490   01CE44  EF43  F0E7         	goto	l25101
 23491   01CE48                     u34960:
 23492   01CE48                     
 23493                           ; BSR set to: 5
 23494                           ;../src/w65_main.c: 476:    if ( c > 0) {
 23495   01CE48  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 23496   01CE4A  EF2F  F0E7         	goto	u34971
 23497   01CE4E  51C2               	movf	(get_line@c+1)& (0+255),w,b
 23498   01CE50  E108               	bnz	u34970
 23499   01CE52  05C1               	decf	get_line@c& (0+255),w,b
 23500   01CE54  A0D8               	btfss	status,0,c
 23501   01CE56  EF2F  F0E7         	goto	u34971
 23502   01CE5A  EF31  F0E7         	goto	u34970
 23503   01CE5E                     u34971:
 23504   01CE5E  EF16  F0E7         	goto	l25089
 23505   01CE62                     u34970:
 23506   01CE62                     
 23507                           ; BSR set to: 5
 23508                           ;../src/w65_main.c: 477:     putch(0x08);
 23509   01CE62  0E08               	movlw	8
 23510   01CE64  EC07  F001         	call	_putch
 23511                           
 23512                           ;../src/w65_main.c: 478:     putch(' ');
 23513   01CE68  0E20               	movlw	32
 23514   01CE6A  EC07  F001         	call	_putch
 23515                           
 23516                           ;../src/w65_main.c: 479:     putch(0x08);
 23517   01CE6E  0E08               	movlw	8
 23518   01CE70  EC07  F001         	call	_putch
 23519   01CE74                     
 23520                           ;../src/w65_main.c: 480:     c--;
 23521   01CE74  0105               	movlb	5	; () banked
 23522   01CE76  07C1               	decf	get_line@c& (0+255),f,b
 23523   01CE78  A0D8               	btfss	status,0,c
 23524   01CE7A  07C2               	decf	(get_line@c+1)& (0+255),f,b
 23525   01CE7C                     
 23526                           ; BSR set to: 5
 23527                           ;../src/w65_main.c: 481:     s--;
 23528   01CE7C  07BD               	decf	get_line@s& (0+255),f,b
 23529   01CE7E  A0D8               	btfss	status,0,c
 23530   01CE80  07BE               	decf	(get_line@s+1)& (0+255),f,b
 23531   01CE82  EF16  F0E7         	goto	l25089
 23532   01CE86                     l25101:
 23533                           
 23534                           ; BSR set to: 5
 23535                           ;../src/w65_main.c: 485:   if ( n == 0x0d || n == 0x0a ) {
 23536   01CE86  0E0D               	movlw	13
 23537   01CE88  19C3               	xorwf	get_line@n& (0+255),w,b
 23538   01CE8A  B4D8               	btfsc	status,2,c
 23539   01CE8C  EF4A  F0E7         	goto	u34981
 23540   01CE90  EF4C  F0E7         	goto	u34980
 23541   01CE94                     u34981:
 23542   01CE94  EF55  F0E7         	goto	l25105
 23543   01CE98                     u34980:
 23544   01CE98                     
 23545                           ; BSR set to: 5
 23546   01CE98  0E0A               	movlw	10
 23547   01CE9A  19C3               	xorwf	get_line@n& (0+255),w,b
 23548   01CE9C  A4D8               	btfss	status,2,c
 23549   01CE9E  EF53  F0E7         	goto	u34991
 23550   01CEA2  EF55  F0E7         	goto	u34990
 23551   01CEA6                     u34991:
 23552   01CEA6  EF66  F0E7         	goto	l25113
 23553   01CEAA                     u34990:
 23554   01CEAA                     l25105:
 23555                           
 23556                           ; BSR set to: 5
 23557                           ;../src/w65_main.c: 486:    *s = 0x00;
 23558   01CEAA  C5BD  F4D9         	movff	get_line@s,fsr2l
 23559   01CEAE  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 23560   01CEB2  6ADF               	clrf	indf2,c
 23561   01CEB4                     
 23562                           ; BSR set to: 5
 23563                           ;../src/w65_main.c: 487:    printf("\r\n");
 23564   01CEB4  0E79               	movlw	low (STR_89+20)
 23565   01CEB6  6FAD               	movwf	printf@fmt& (0+255),b
 23566   01CEB8  0EFB               	movlw	high (STR_89+20)
 23567   01CEBA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23568   01CEBC  ECDA  F0FF         	call	_printf	;wreg free
 23569   01CEC0                     
 23570                           ;../src/w65_main.c: 488:    return c;
 23571   01CEC0  C5C1  F5BD         	movff	get_line@c,?_get_line
 23572   01CEC4  C5C2  F5BE         	movff	get_line@c+1,?_get_line+1
 23573   01CEC8  EF96  F0E7         	goto	l1614
 23574   01CECC                     l25113:
 23575                           
 23576                           ; BSR set to: 5
 23577                           ;../src/w65_main.c: 490:   if ( c <= 81 -1 ) {
 23578   01CECC  BFC2               	btfsc	(get_line@c+1)& (0+255),7,b
 23579   01CECE  EF74  F0E7         	goto	u35000
 23580   01CED2  51C2               	movf	(get_line@c+1)& (0+255),w,b
 23581   01CED4  E107               	bnz	u35001
 23582   01CED6  0E51               	movlw	81
 23583   01CED8  5DC1               	subwf	get_line@c& (0+255),w,b
 23584   01CEDA  B0D8               	btfsc	status,0,c
 23585   01CEDC  EF72  F0E7         	goto	u35001
 23586   01CEE0  EF74  F0E7         	goto	u35000
 23587   01CEE4                     u35001:
 23588   01CEE4  EF16  F0E7         	goto	l25089
 23589   01CEE8                     u35000:
 23590   01CEE8                     
 23591                           ; BSR set to: 5
 23592                           ;../src/w65_main.c: 491:    putch(n);
 23593   01CEE8  51C3               	movf	get_line@n& (0+255),w,b
 23594   01CEEA  EC07  F001         	call	_putch
 23595   01CEEE                     
 23596                           ;../src/w65_main.c: 492:    if ( n >='a' && n <='z' ) n -= 0x20;
 23597   01CEEE  0E60               	movlw	96
 23598   01CEF0  0105               	movlb	5	; () banked
 23599   01CEF2  65C3               	cpfsgt	get_line@n& (0+255),b
 23600   01CEF4  EF7E  F0E7         	goto	u35011
 23601   01CEF8  EF80  F0E7         	goto	u35010
 23602   01CEFC                     u35011:
 23603   01CEFC  EF8A  F0E7         	goto	l25123
 23604   01CF00                     u35010:
 23605   01CF00                     
 23606                           ; BSR set to: 5
 23607   01CF00  0E7B               	movlw	123
 23608   01CF02  61C3               	cpfslt	get_line@n& (0+255),b
 23609   01CF04  EF86  F0E7         	goto	u35021
 23610   01CF08  EF88  F0E7         	goto	u35020
 23611   01CF0C                     u35021:
 23612   01CF0C  EF8A  F0E7         	goto	l25123
 23613   01CF10                     u35020:
 23614   01CF10                     
 23615                           ; BSR set to: 5
 23616   01CF10  0E20               	movlw	32
 23617   01CF12  5FC3               	subwf	get_line@n& (0+255),f,b
 23618   01CF14                     l25123:
 23619                           
 23620                           ; BSR set to: 5
 23621                           ;../src/w65_main.c: 493:    *s++ = n;
 23622   01CF14  C5BD  F4D9         	movff	get_line@s,fsr2l
 23623   01CF18  C5BE  F4DA         	movff	get_line@s+1,fsr2h
 23624   01CF1C  C5C3  F4DF         	movff	get_line@n,indf2
 23625   01CF20                     
 23626                           ; BSR set to: 5
 23627   01CF20  4BBD               	infsnz	get_line@s& (0+255),f,b
 23628   01CF22  2BBE               	incf	(get_line@s+1)& (0+255),f,b
 23629   01CF24                     
 23630                           ; BSR set to: 5
 23631                           ;../src/w65_main.c: 494:    c++;
 23632   01CF24  4BC1               	infsnz	get_line@c& (0+255),f,b
 23633   01CF26  2BC2               	incf	(get_line@c+1)& (0+255),f,b
 23634   01CF28  EF16  F0E7         	goto	l25089
 23635   01CF2C                     l1614:
 23636   01CF2C  0012               	return		;funcret
 23637   01CF2E                     __end_of_get_line:
 23638                           	callstack 0
 23639                           
 23640 ;; *************** function _getch *****************
 23641 ;; Defined at:
 23642 ;;		line 138 in file "../src/boards/w65_cmn.c"
 23643 ;; Parameters:    Size  Location     Type
 23644 ;;		None
 23645 ;; Auto vars:     Size  Location     Type
 23646 ;;  c               1    7[COMRAM] unsigned char 
 23647 ;; Return value:  Size  Location     Type
 23648 ;;                  2    3[COMRAM] int 
 23649 ;; Registers used:
 23650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23651 ;; Tracked objects:
 23652 ;;		On entry : 0/0
 23653 ;;		On exit  : 0/0
 23654 ;;		Unchanged: 0/0
 23655 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23660 ;;Total ram usage:        5 bytes
 23661 ;; Hardware stack levels used: 1
 23662 ;; Hardware stack levels required when called: 1
 23663 ;; This function calls:
 23664 ;;		Nothing
 23665 ;; This function is called by:
 23666 ;;		_get_line
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text43
 23671   01FA9C                     __ptext43:
 23672                           	callstack 0
 23673   01FA9C                     _getch:
 23674                           	callstack 124
 23675   01FA9C                     l16825:
 23676   01FA9C  0107               	movlb	7	; () banked
 23677   01FA9E  51C1               	movf	_rx_cnt& (0+255),w,b
 23678   01FAA0  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 23679   01FAA2  B4D8               	btfsc	status,2,c
 23680   01FAA4  EF56  F0FD         	goto	u21921
 23681   01FAA8  EF58  F0FD         	goto	u21920
 23682   01FAAC                     u21921:
 23683   01FAAC  EF4E  F0FD         	goto	l16825
 23684   01FAB0                     u21920:
 23685   01FAB0                     
 23686                           ; BSR set to: 7
 23687                           ;../src/boards/w65_cmn.c: 142:  U3RXIE = 0;
 23688   01FAB0  90A7               	bcf	1191,0,c	;volatile
 23689   01FAB2                     
 23690                           ; BSR set to: 7
 23691                           ;../src/boards/w65_cmn.c: 143:  c = rx_buf[rx_rp];
 23692   01FAB2  0E00               	movlw	low _rx_buf
 23693   01FAB4  25B7               	addwf	_rx_rp& (0+255),w,b
 23694   01FAB6  6ED9               	movwf	fsr2l,c
 23695   01FAB8  0E0B               	movlw	high _rx_buf
 23696   01FABA  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 23697   01FABC  6EDA               	movwf	fsr2h,c
 23698   01FABE  50DF               	movf	indf2,w,c
 23699   01FAC0  6E08               	movwf	getch@c^(0+1280),c
 23700   01FAC2                     
 23701                           ; BSR set to: 7
 23702                           ;../src/boards/w65_cmn.c: 144:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 23703   01FAC2  0E01               	movlw	1
 23704   01FAC4  25B7               	addwf	_rx_rp& (0+255),w,b
 23705   01FAC6  6E06               	movwf	??_getch^(0+1280),c
 23706   01FAC8  0E00               	movlw	0
 23707   01FACA  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 23708   01FACC  6E07               	movwf	(??_getch+1)^(0+1280),c
 23709   01FACE  0E7F               	movlw	127
 23710   01FAD0  1406               	andwf	??_getch^(0+1280),w,c
 23711   01FAD2  6FB7               	movwf	_rx_rp& (0+255),b
 23712   01FAD4  6BB8               	clrf	(_rx_rp+1)& (0+255),b
 23713   01FAD6                     
 23714                           ; BSR set to: 7
 23715                           ;../src/boards/w65_cmn.c: 145:  rx_cnt--;
 23716   01FAD6  07C1               	decf	_rx_cnt& (0+255),f,b
 23717   01FAD8  A0D8               	btfss	status,0,c
 23718   01FADA  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 23719   01FADC                     
 23720                           ; BSR set to: 7
 23721                           ;../src/boards/w65_cmn.c: 146:  U3RXIE = 1;
 23722   01FADC  80A7               	bsf	1191,0,c	;volatile
 23723   01FADE                     
 23724                           ; BSR set to: 7
 23725                           ;../src/boards/w65_cmn.c: 147:     return c;
 23726   01FADE  C508  F504         	movff	getch@c,?_getch
 23727   01FAE2  6A05               	clrf	(?_getch+1)^(0+1280),c
 23728   01FAE4                     
 23729                           ; BSR set to: 7
 23730   01FAE4  0012               	return		;funcret
 23731   01FAE6                     __end_of_getch:
 23732                           	callstack 0
 23733                           
 23734 ;; *************** function _disk_init *****************
 23735 ;; Defined at:
 23736 ;;		line 391 in file "../src/w65_main.c"
 23737 ;; Parameters:    Size  Location     Type
 23738 ;;		None
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;		None
 23741 ;; Return value:  Size  Location     Type
 23742 ;;                  2  187[BANK6 ] int 
 23743 ;; Registers used:
 23744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23745 ;; Tracked objects:
 23746 ;;		On entry : 0/0
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23750 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23753 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23754 ;;Total ram usage:        2 bytes
 23755 ;; Hardware stack levels used: 1
 23756 ;; Hardware stack levels required when called: 18
 23757 ;; This function calls:
 23758 ;;		_f_mount
 23759 ;;		_printf
 23760 ;; This function is called by:
 23761 ;;		_main
 23762 ;; This function uses a non-reentrant model
 23763 ;;
 23764                           
 23765                           	psect	text44
 23766   01F90E                     __ptext44:
 23767                           	callstack 0
 23768   01F90E                     _disk_init:
 23769                           	callstack 108
 23770   01F90E                     
 23771                           ;../src/w65_main.c: 393:     if (f_mount(&fs, "0://", 1) != FR_OK) {
 23772   01F90E  0E80               	movlw	low _fs
 23773   01F910  0106               	movlb	6	; () banked
 23774   01F912  6FAF               	movwf	f_mount@fs& (0+255),b
 23775   01F914  0E0B               	movlw	high _fs
 23776   01F916  6FB0               	movwf	(f_mount@fs+1)& (0+255),b
 23777   01F918  0EB2               	movlw	low STR_85
 23778   01F91A  6FB1               	movwf	f_mount@path& (0+255),b
 23779   01F91C  0EFF               	movlw	high STR_85
 23780   01F91E  6FB2               	movwf	(f_mount@path+1)& (0+255),b
 23781   01F920  0E01               	movlw	1
 23782   01F922  6FB3               	movwf	f_mount@opt& (0+255),b
 23783   01F924  EC21  F0EB         	call	_f_mount	;wreg free
 23784   01F928  0900               	iorlw	0
 23785   01F92A  B4D8               	btfsc	status,2,c
 23786   01F92C  EF9A  F0FC         	goto	u34721
 23787   01F930  EF9C  F0FC         	goto	u34720
 23788   01F934                     u34721:
 23789   01F934  EFAA  F0FC         	goto	l24901
 23790   01F938                     u34720:
 23791   01F938                     
 23792                           ;../src/w65_main.c: 394:         printf("Failed to mount SD Card.\n\r");
 23793   01F938  0EB9               	movlw	low STR_86
 23794   01F93A  0105               	movlb	5	; () banked
 23795   01F93C  6FAD               	movwf	printf@fmt& (0+255),b
 23796   01F93E  0EF9               	movlw	high STR_86
 23797   01F940  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 23798   01F942  ECDA  F0FF         	call	_printf	;wreg free
 23799   01F946                     
 23800                           ;../src/w65_main.c: 395:         return -2;
 23801   01F946  0EFF               	movlw	255
 23802   01F948  0106               	movlb	6	; () banked
 23803   01F94A  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 23804   01F94C  0EFE               	movlw	254
 23805   01F94E  6FBB               	movwf	?_disk_init& (0+255),b
 23806   01F950  EFAF  F0FC         	goto	l1574
 23807   01F954                     l24901:
 23808                           
 23809                           ;../src/w65_main.c: 398:     return 0;
 23810   01F954  0E00               	movlw	0
 23811   01F956  0106               	movlb	6	; () banked
 23812   01F958  6FBC               	movwf	(?_disk_init+1)& (0+255),b
 23813   01F95A  0E00               	movlw	0
 23814   01F95C  6FBB               	movwf	?_disk_init& (0+255),b
 23815   01F95E                     l1574:
 23816                           
 23817                           ; BSR set to: 6
 23818   01F95E  0012               	return		;funcret
 23819   01F960                     __end_of_disk_init:
 23820                           	callstack 0
 23821                           
 23822 ;; *************** function _f_mount *****************
 23823 ;; Defined at:
 23824 ;;		line 3659 in file "../fatfs/ff.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;  fs              2  175[BANK6 ] PTR struct .
 23827 ;;		 -> fs(564), NULL(0), 
 23828 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 23829 ;;		 -> fin_name(13), STR_85(5), line_buf(81), STR_52(11), 
 23830 ;;		 -> STR_51(11), STR_50(11), STR_49(11), tmp_buf(512), 
 23831 ;;		 -> STR_28(15), NULL(0), 
 23832 ;;  opt             1  179[BANK6 ] unsigned char 
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;  vol             2  185[BANK6 ] int 
 23835 ;;  cfs             2  183[BANK6 ] PTR struct .
 23836 ;;		 -> fs(564), NULL(0), 
 23837 ;;  rp              2  181[BANK6 ] PTR const unsigned char 
 23838 ;;		 -> fin_name(13), STR_85(5), line_buf(81), STR_52(11), 
 23839 ;;		 -> STR_51(11), STR_50(11), STR_49(11), tmp_buf(512), 
 23840 ;;		 -> STR_28(15), NULL(0), 
 23841 ;;  res             1  180[BANK6 ] enum E597
 23842 ;; Return value:  Size  Location     Type
 23843 ;;                  1    wreg      enum E597
 23844 ;; Registers used:
 23845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23846 ;; Tracked objects:
 23847 ;;		On entry : 0/0
 23848 ;;		On exit  : 0/0
 23849 ;;		Unchanged: 0/0
 23850 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 23851 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23852 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23854 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 23855 ;;Total ram usage:       12 bytes
 23856 ;; Hardware stack levels used: 1
 23857 ;; Hardware stack levels required when called: 17
 23858 ;; This function calls:
 23859 ;;		_get_ldnumber
 23860 ;;		_mount_volume
 23861 ;; This function is called by:
 23862 ;;		_disk_init
 23863 ;; This function uses a non-reentrant model
 23864 ;;
 23865                           
 23866                           	psect	text45
 23867   01D642                     __ptext45:
 23868                           	callstack 0
 23869   01D642                     _f_mount:
 23870                           	callstack 108
 23871   01D642                     
 23872                           ;../fatfs/ff.c: 3660:  FATFS* fs,;../fatfs/ff.c: 3661:  const TCHAR* path,;../fatfs/ff.c
      +                          : 3662:  BYTE opt;../fatfs/ff.c: 3664: {;../fatfs/ff.c: 3665:  FATFS *cfs;;../fatfs/ff.c
      +                          : 3666:  int vol;;../fatfs/ff.c: 3667:  FRESULT res;;../fatfs/ff.c: 3668:  const TCHAR *
      +                          rp = path;
 23873   01D642  C6B1  F6B5         	movff	f_mount@path,f_mount@rp
 23874   01D646  C6B2  F6B6         	movff	f_mount@path+1,f_mount@rp+1
 23875   01D64A                     
 23876                           ;../fatfs/ff.c: 3672:  vol = get_ldnumber(&rp);
 23877   01D64A  0EB5               	movlw	low f_mount@rp
 23878   01D64C  6E04               	movwf	get_ldnumber@path^(0+1280),c
 23879   01D64E  0E06               	movlw	high f_mount@rp
 23880   01D650  6E05               	movwf	(get_ldnumber@path+1)^(0+1280),c
 23881   01D652  EC82  F0D9         	call	_get_ldnumber	;wreg free
 23882   01D656  C504  F6B9         	movff	?_get_ldnumber,f_mount@vol
 23883   01D65A  C505  F6BA         	movff	?_get_ldnumber+1,f_mount@vol+1
 23884   01D65E                     
 23885                           ;../fatfs/ff.c: 3673:  if (vol < 0) return FR_INVALID_DRIVE;
 23886   01D65E  0106               	movlb	6	; () banked
 23887   01D660  BFBA               	btfsc	(f_mount@vol+1)& (0+255),7,b
 23888   01D662  EF37  F0EB         	goto	u33170
 23889   01D666  EF35  F0EB         	goto	u33171
 23890   01D66A                     u33171:
 23891   01D66A  EF3A  F0EB         	goto	l23891
 23892   01D66E                     u33170:
 23893   01D66E                     
 23894                           ; BSR set to: 6
 23895   01D66E  0E0B               	movlw	11
 23896   01D670  EF9D  F0EB         	goto	l621
 23897   01D674                     l23891:
 23898                           
 23899                           ; BSR set to: 6
 23900                           ;../fatfs/ff.c: 3674:  cfs = FatFs[vol];
 23901   01D674  90D8               	bcf	status,0,c
 23902   01D676  35B9               	rlcf	f_mount@vol& (0+255),w,b
 23903   01D678  6ED9               	movwf	fsr2l,c
 23904   01D67A  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 23905   01D67C  6EDA               	movwf	fsr2h,c
 23906   01D67E  0EC5               	movlw	low _FatFs
 23907   01D680  26D9               	addwf	fsr2l,f,c
 23908   01D682  0E07               	movlw	high _FatFs
 23909   01D684  22DA               	addwfc	fsr2h,f,c
 23910   01D686  C4DE F6B7          	movff	postinc2,f_mount@cfs
 23911   01D68A  C4DD F6B8          	movff	postdec2,f_mount@cfs+1
 23912   01D68E                     
 23913                           ; BSR set to: 6
 23914                           ;../fatfs/ff.c: 3676:  if (cfs) {
 23915   01D68E  51B7               	movf	f_mount@cfs& (0+255),w,b
 23916   01D690  11B8               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 23917   01D692  B4D8               	btfsc	status,2,c
 23918   01D694  EF4E  F0EB         	goto	u33181
 23919   01D698  EF50  F0EB         	goto	u33180
 23920   01D69C                     u33181:
 23921   01D69C  EF60  F0EB         	goto	l622
 23922   01D6A0                     u33180:
 23923   01D6A0                     
 23924                           ; BSR set to: 6
 23925                           ;../fatfs/ff.c: 3677:   FatFs[vol] = 0;
 23926   01D6A0  90D8               	bcf	status,0,c
 23927   01D6A2  35B9               	rlcf	f_mount@vol& (0+255),w,b
 23928   01D6A4  6ED9               	movwf	fsr2l,c
 23929   01D6A6  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 23930   01D6A8  6EDA               	movwf	fsr2h,c
 23931   01D6AA  0EC5               	movlw	low _FatFs
 23932   01D6AC  26D9               	addwf	fsr2l,f,c
 23933   01D6AE  0E07               	movlw	high _FatFs
 23934   01D6B0  22DA               	addwfc	fsr2h,f,c
 23935   01D6B2  6ADE               	clrf	postinc2,c
 23936   01D6B4  6ADD               	clrf	postdec2,c
 23937   01D6B6                     
 23938                           ; BSR set to: 6
 23939                           ;../fatfs/ff.c: 3684:   cfs->fs_type = 0;
 23940   01D6B6  C6B7  F4D9         	movff	f_mount@cfs,fsr2l
 23941   01D6BA  C6B8  F4DA         	movff	f_mount@cfs+1,fsr2h
 23942   01D6BE  6ADF               	clrf	indf2,c
 23943   01D6C0                     l622:
 23944                           
 23945                           ; BSR set to: 6
 23946                           ;../fatfs/ff.c: 3687:  if (fs) {
 23947   01D6C0  51AF               	movf	f_mount@fs& (0+255),w,b
 23948   01D6C2  11B0               	iorwf	(f_mount@fs+1)& (0+255),w,b
 23949   01D6C4  B4D8               	btfsc	status,2,c
 23950   01D6C6  EF67  F0EB         	goto	u33191
 23951   01D6CA  EF69  F0EB         	goto	u33190
 23952   01D6CE                     u33191:
 23953   01D6CE  EF83  F0EB         	goto	l23905
 23954   01D6D2                     u33190:
 23955   01D6D2                     
 23956                           ; BSR set to: 6
 23957                           ;../fatfs/ff.c: 3688:   fs->pdrv = (BYTE)(vol);
 23958   01D6D2  EE20 F001          	lfsr	2,1
 23959   01D6D6  51AF               	movf	f_mount@fs& (0+255),w,b
 23960   01D6D8  26D9               	addwf	fsr2l,f,c
 23961   01D6DA  51B0               	movf	(f_mount@fs+1)& (0+255),w,b
 23962   01D6DC  22DA               	addwfc	fsr2h,f,c
 23963   01D6DE  C6B9  F4DF         	movff	f_mount@vol,indf2
 23964   01D6E2                     
 23965                           ; BSR set to: 6
 23966                           ;../fatfs/ff.c: 3702:   fs->fs_type = 0;
 23967   01D6E2  C6AF  F4D9         	movff	f_mount@fs,fsr2l
 23968   01D6E6  C6B0  F4DA         	movff	f_mount@fs+1,fsr2h
 23969   01D6EA  6ADF               	clrf	indf2,c
 23970   01D6EC                     
 23971                           ; BSR set to: 6
 23972                           ;../fatfs/ff.c: 3703:   FatFs[vol] = fs;
 23973   01D6EC  90D8               	bcf	status,0,c
 23974   01D6EE  35B9               	rlcf	f_mount@vol& (0+255),w,b
 23975   01D6F0  6ED9               	movwf	fsr2l,c
 23976   01D6F2  35BA               	rlcf	(f_mount@vol+1)& (0+255),w,b
 23977   01D6F4  6EDA               	movwf	fsr2h,c
 23978   01D6F6  0EC5               	movlw	low _FatFs
 23979   01D6F8  26D9               	addwf	fsr2l,f,c
 23980   01D6FA  0E07               	movlw	high _FatFs
 23981   01D6FC  22DA               	addwfc	fsr2h,f,c
 23982   01D6FE  C6AF  F4DE         	movff	f_mount@fs,postinc2
 23983   01D702  C6B0  F4DD         	movff	f_mount@fs+1,postdec2
 23984   01D706                     l23905:
 23985                           
 23986                           ; BSR set to: 6
 23987                           ;../fatfs/ff.c: 3706:  if (opt == 0) return FR_OK;
 23988   01D706  51B3               	movf	f_mount@opt& (0+255),w,b
 23989   01D708  A4D8               	btfss	status,2,c
 23990   01D70A  EF89  F0EB         	goto	u33201
 23991   01D70E  EF8B  F0EB         	goto	u33200
 23992   01D712                     u33201:
 23993   01D712  EF8E  F0EB         	goto	l23911
 23994   01D716                     u33200:
 23995   01D716                     
 23996                           ; BSR set to: 6
 23997   01D716  0E00               	movlw	0
 23998   01D718  EF9D  F0EB         	goto	l621
 23999   01D71C                     l23911:
 24000                           
 24001                           ; BSR set to: 6
 24002                           ;../fatfs/ff.c: 3708:  res = mount_volume(&path, &fs, 0);
 24003   01D71C  0EB1               	movlw	low f_mount@path
 24004   01D71E  6F81               	movwf	mount_volume@path& (0+255),b
 24005   01D720  0E06               	movlw	high f_mount@path
 24006   01D722  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 24007   01D724  0EAF               	movlw	low f_mount@fs
 24008   01D726  6F83               	movwf	mount_volume@rfs& (0+255),b
 24009   01D728  0E06               	movlw	high f_mount@fs
 24010   01D72A  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 24011   01D72C  0E00               	movlw	0
 24012   01D72E  6F85               	movwf	mount_volume@mode& (0+255),b
 24013   01D730  EC00  F080         	call	_mount_volume	;wreg free
 24014   01D734  0106               	movlb	6	; () banked
 24015   01D736  6FB4               	movwf	f_mount@res& (0+255),b
 24016   01D738                     
 24017                           ; BSR set to: 6
 24018                           ;../fatfs/ff.c: 3709:  return res;
 24019   01D738  51B4               	movf	f_mount@res& (0+255),w,b
 24020   01D73A                     l621:
 24021                           
 24022                           ; BSR set to: 6
 24023   01D73A  0012               	return		;funcret
 24024   01D73C                     __end_of_f_mount:
 24025                           	callstack 0
 24026                           
 24027 ;; *************** function _clk_init *****************
 24028 ;; Defined at:
 24029 ;;		line 316 in file "../src/boards/w65_cmn.c"
 24030 ;; Parameters:    Size  Location     Type
 24031 ;;		None
 24032 ;; Auto vars:     Size  Location     Type
 24033 ;;		None
 24034 ;; Return value:  Size  Location     Type
 24035 ;;                  1    wreg      void 
 24036 ;; Registers used:
 24037 ;;		wreg, status,2
 24038 ;; Tracked objects:
 24039 ;;		On entry : 0/0
 24040 ;;		On exit  : 0/0
 24041 ;;		Unchanged: 0/0
 24042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24047 ;;Total ram usage:        0 bytes
 24048 ;; Hardware stack levels used: 1
 24049 ;; Hardware stack levels required when called: 1
 24050 ;; This function calls:
 24051 ;;		Nothing
 24052 ;; This function is called by:
 24053 ;;		_main
 24054 ;; This function uses a non-reentrant model
 24055 ;;
 24056                           
 24057                           	psect	text46
 24058   000174                     __ptext46:
 24059                           	callstack 0
 24060   000174                     _clk_init:
 24061                           	callstack 125
 24062   000174                     
 24063                           ;../src/boards/w65_cmn.c: 320:  NCO1INC = 65536;
 24064   000174  0E00               	movlw	0
 24065   000176  0104               	movlb	4	; () banked
 24066   000178  6F43               	movwf	67,b	;volatile
 24067   00017A  0E00               	movlw	0
 24068   00017C  6F44               	movwf	68,b	;volatile
 24069   00017E  0E01               	movlw	1
 24070   000180  6F45               	movwf	69,b	;volatile
 24071   000182                     
 24072                           ; BSR set to: 4
 24073                           ;../src/boards/w65_cmn.c: 321:  NCO1CLK = 0x00;
 24074   000182  6B47               	clrf	71,b	;volatile
 24075   000184                     
 24076                           ; BSR set to: 4
 24077                           ;../src/boards/w65_cmn.c: 322:  NCO1PFM = 0;
 24078   000184  9146               	bcf	70,0,b	;volatile
 24079   000186                     
 24080                           ; BSR set to: 4
 24081                           ;../src/boards/w65_cmn.c: 323:  NCO1OUT = 1;
 24082   000186  8B46               	bsf	70,5,b	;volatile
 24083   000188                     
 24084                           ; BSR set to: 4
 24085                           ;../src/boards/w65_cmn.c: 325:  NCO1EN = 1;
 24086   000188  8F46               	bsf	70,7,b	;volatile
 24087                           
 24088                           ;../src/boards/w65_cmn.c: 326:  RA3PPS = 0x3f;
 24089   00018A  0E3F               	movlw	63
 24090   00018C  0102               	movlb	2	; () banked
 24091   00018E  6F04               	movwf	4,b	;volatile
 24092   000190                     
 24093                           ; BSR set to: 2
 24094   000190  0012               	return		;funcret
 24095   000192                     __end_of_clk_init:
 24096                           	callstack 0
 24097                           
 24098 ;; *************** function _clc_init *****************
 24099 ;; Defined at:
 24100 ;;		line 63 in file "../src/boards/w65_bd.c"
 24101 ;; Parameters:    Size  Location     Type
 24102 ;;		None
 24103 ;; Auto vars:     Size  Location     Type
 24104 ;;		None
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  1    wreg      void 
 24107 ;; Registers used:
 24108 ;;		wreg, status,2
 24109 ;; Tracked objects:
 24110 ;;		On entry : 0/0
 24111 ;;		On exit  : 0/0
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24118 ;;Total ram usage:        0 bytes
 24119 ;; Hardware stack levels used: 1
 24120 ;; Hardware stack levels required when called: 1
 24121 ;; This function calls:
 24122 ;;		Nothing
 24123 ;; This function is called by:
 24124 ;;		_main
 24125 ;; This function uses a non-reentrant model
 24126 ;;
 24127                           
 24128                           	psect	text47
 24129   01C120                     __ptext47:
 24130                           	callstack 0
 24131   01C120                     _clc_init:
 24132                           	callstack 125
 24133   01C120                     
 24134                           ;../src/boards/w65_bd.c: 70:  CLCSELECT = 0;
 24135   01C120  0100               	movlb	0	; () banked
 24136   01C122  6BD5               	clrf	213,b	;volatile
 24137   01C124                     
 24138                           ; BSR set to: 0
 24139                           ;../src/boards/w65_bd.c: 72:  CLCnSEL0 = 0x2a;
 24140   01C124  0E2A               	movlw	42
 24141   01C126  6FD8               	movwf	216,b	;volatile
 24142                           
 24143                           ;../src/boards/w65_bd.c: 73:     CLCnSEL1 = 127;
 24144   01C128  0E7F               	movlw	127
 24145   01C12A  6FD9               	movwf	217,b	;volatile
 24146                           
 24147                           ;../src/boards/w65_bd.c: 74:  CLCnSEL2 = 127;
 24148   01C12C  0E7F               	movlw	127
 24149   01C12E  6FDA               	movwf	218,b	;volatile
 24150                           
 24151                           ;../src/boards/w65_bd.c: 75:  CLCnSEL3 = 127;
 24152   01C130  0E7F               	movlw	127
 24153   01C132  6FDB               	movwf	219,b	;volatile
 24154                           
 24155                           ;../src/boards/w65_bd.c: 77:     CLCnGLS0 = 0x02;
 24156   01C134  0E02               	movlw	2
 24157   01C136  6FDC               	movwf	220,b	;volatile
 24158   01C138                     
 24159                           ; BSR set to: 0
 24160                           ;../src/boards/w65_bd.c: 78:  CLCnGLS1 = 0x00;
 24161   01C138  6BDD               	clrf	221,b	;volatile
 24162   01C13A                     
 24163                           ; BSR set to: 0
 24164                           ;../src/boards/w65_bd.c: 79:     CLCnGLS2 = 0x00;
 24165   01C13A  6BDE               	clrf	222,b	;volatile
 24166   01C13C                     
 24167                           ; BSR set to: 0
 24168                           ;../src/boards/w65_bd.c: 80:     CLCnGLS3 = 0x00;
 24169   01C13C  6BDF               	clrf	223,b	;volatile
 24170   01C13E                     
 24171                           ; BSR set to: 0
 24172                           ;../src/boards/w65_bd.c: 82:     CLCnPOL = 0x00;
 24173   01C13E  6BD7               	clrf	215,b	;volatile
 24174                           
 24175                           ;../src/boards/w65_bd.c: 83:     CLCnCON = 0x84;
 24176   01C140  0E84               	movlw	132
 24177   01C142  6FD6               	movwf	214,b	;volatile
 24178   01C144                     
 24179                           ; BSR set to: 0
 24180                           ;../src/boards/w65_bd.c: 88:  G3POL = 1;
 24181   01C144  85D7               	bsf	215,2,b	;volatile
 24182   01C146                     
 24183                           ; BSR set to: 0
 24184                           ;../src/boards/w65_bd.c: 89:  G3POL = 0;
 24185   01C146  95D7               	bcf	215,2,b	;volatile
 24186                           
 24187                           ;../src/boards/w65_bd.c: 91:  RA0PPS = 0x01;
 24188   01C148  0E01               	movlw	1
 24189   01C14A  0102               	movlb	2	; () banked
 24190   01C14C  6F01               	movwf	1,b	;volatile
 24191                           
 24192                           ;../src/boards/w65_bd.c: 95:  CLCSELECT = 1;
 24193   01C14E  0E01               	movlw	1
 24194   01C150  0100               	movlb	0	; () banked
 24195   01C152  6FD5               	movwf	213,b	;volatile
 24196                           
 24197                           ;../src/boards/w65_bd.c: 97:  CLCnSEL0 = 0x2a;
 24198   01C154  0E2A               	movlw	42
 24199   01C156  6FD8               	movwf	216,b	;volatile
 24200                           
 24201                           ;../src/boards/w65_bd.c: 98:  CLCnSEL1 = 0x38;
 24202   01C158  0E38               	movlw	56
 24203   01C15A  6FD9               	movwf	217,b	;volatile
 24204                           
 24205                           ;../src/boards/w65_bd.c: 99:  CLCnSEL2 = 0x3a;
 24206   01C15C  0E3A               	movlw	58
 24207   01C15E  6FDA               	movwf	218,b	;volatile
 24208                           
 24209                           ;../src/boards/w65_bd.c: 100:  CLCnSEL3 = 127;
 24210   01C160  0E7F               	movlw	127
 24211   01C162  6FDB               	movwf	219,b	;volatile
 24212                           
 24213                           ;../src/boards/w65_bd.c: 102:     CLCnGLS0 = 0x02;
 24214   01C164  0E02               	movlw	2
 24215   01C166  6FDC               	movwf	220,b	;volatile
 24216                           
 24217                           ;../src/boards/w65_bd.c: 103:  CLCnGLS1 = 0x08;
 24218   01C168  0E08               	movlw	8
 24219   01C16A  6FDD               	movwf	221,b	;volatile
 24220                           
 24221                           ;../src/boards/w65_bd.c: 104:  CLCnGLS2 = 0x20;
 24222   01C16C  0E20               	movlw	32
 24223   01C16E  6FDE               	movwf	222,b	;volatile
 24224   01C170                     
 24225                           ; BSR set to: 0
 24226                           ;../src/boards/w65_bd.c: 105:     CLCnGLS3 = 0x00;
 24227   01C170  6BDF               	clrf	223,b	;volatile
 24228                           
 24229                           ;../src/boards/w65_bd.c: 107:     CLCnPOL = 0x80;
 24230   01C172  0E80               	movlw	128
 24231   01C174  6FD7               	movwf	215,b	;volatile
 24232                           
 24233                           ;../src/boards/w65_bd.c: 108:     CLCnCON = 0x84;
 24234   01C176  0E84               	movlw	132
 24235   01C178  6FD6               	movwf	214,b	;volatile
 24236                           
 24237                           ;../src/boards/w65_bd.c: 112:  CLCSELECT = 2;
 24238   01C17A  0E02               	movlw	2
 24239   01C17C  6FD5               	movwf	213,b	;volatile
 24240                           
 24241                           ;../src/boards/w65_bd.c: 114:  CLCnSEL0 = 0x2a;
 24242   01C17E  0E2A               	movlw	42
 24243   01C180  6FD8               	movwf	216,b	;volatile
 24244                           
 24245                           ;../src/boards/w65_bd.c: 115:     CLCnSEL1 = 0x34;
 24246   01C182  0E34               	movlw	52
 24247   01C184  6FD9               	movwf	217,b	;volatile
 24248                           
 24249                           ;../src/boards/w65_bd.c: 116:  CLCnSEL2 = 0x3a;
 24250   01C186  0E3A               	movlw	58
 24251   01C188  6FDA               	movwf	218,b	;volatile
 24252                           
 24253                           ;../src/boards/w65_bd.c: 117:  CLCnSEL3 = 127;
 24254   01C18A  0E7F               	movlw	127
 24255   01C18C  6FDB               	movwf	219,b	;volatile
 24256                           
 24257                           ;../src/boards/w65_bd.c: 119:     CLCnGLS0 = 0x02;
 24258   01C18E  0E02               	movlw	2
 24259   01C190  6FDC               	movwf	220,b	;volatile
 24260                           
 24261                           ;../src/boards/w65_bd.c: 120:  CLCnGLS1 = 0x04;
 24262   01C192  0E04               	movlw	4
 24263   01C194  6FDD               	movwf	221,b	;volatile
 24264                           
 24265                           ;../src/boards/w65_bd.c: 121:  CLCnGLS2 = 0x20;
 24266   01C196  0E20               	movlw	32
 24267   01C198  6FDE               	movwf	222,b	;volatile
 24268   01C19A                     
 24269                           ; BSR set to: 0
 24270                           ;../src/boards/w65_bd.c: 122:     CLCnGLS3 = 0x00;
 24271   01C19A  6BDF               	clrf	223,b	;volatile
 24272   01C19C                     
 24273                           ; BSR set to: 0
 24274                           ;../src/boards/w65_bd.c: 124:     CLCnPOL = 0x00;
 24275   01C19C  6BD7               	clrf	215,b	;volatile
 24276                           
 24277                           ;../src/boards/w65_bd.c: 125:     CLCnCON = 0x84;
 24278   01C19E  0E84               	movlw	132
 24279   01C1A0  6FD6               	movwf	214,b	;volatile
 24280   01C1A2                     
 24281                           ; BSR set to: 0
 24282                           ;../src/boards/w65_bd.c: 127:  G3POL = 1;
 24283   01C1A2  85D7               	bsf	215,2,b	;volatile
 24284   01C1A4                     
 24285                           ; BSR set to: 0
 24286                           ;../src/boards/w65_bd.c: 128:  G3POL = 0;
 24287   01C1A4  95D7               	bcf	215,2,b	;volatile
 24288                           
 24289                           ;../src/boards/w65_bd.c: 132:  CLCSELECT = 3;
 24290   01C1A6  0E03               	movlw	3
 24291   01C1A8  6FD5               	movwf	213,b	;volatile
 24292                           
 24293                           ;../src/boards/w65_bd.c: 134:  CLCnSEL0 = 0x2a;
 24294   01C1AA  0E2A               	movlw	42
 24295   01C1AC  6FD8               	movwf	216,b	;volatile
 24296                           
 24297                           ;../src/boards/w65_bd.c: 135:     CLCnSEL1 = 0x35;
 24298   01C1AE  0E35               	movlw	53
 24299   01C1B0  6FD9               	movwf	217,b	;volatile
 24300                           
 24301                           ;../src/boards/w65_bd.c: 136:  CLCnSEL2 = 0x3a;
 24302   01C1B2  0E3A               	movlw	58
 24303   01C1B4  6FDA               	movwf	218,b	;volatile
 24304                           
 24305                           ;../src/boards/w65_bd.c: 137:  CLCnSEL3 = 127;
 24306   01C1B6  0E7F               	movlw	127
 24307   01C1B8  6FDB               	movwf	219,b	;volatile
 24308                           
 24309                           ;../src/boards/w65_bd.c: 139:     CLCnGLS0 = 0x02;
 24310   01C1BA  0E02               	movlw	2
 24311   01C1BC  6FDC               	movwf	220,b	;volatile
 24312                           
 24313                           ;../src/boards/w65_bd.c: 140:  CLCnGLS1 = 0x08;
 24314   01C1BE  0E08               	movlw	8
 24315   01C1C0  6FDD               	movwf	221,b	;volatile
 24316                           
 24317                           ;../src/boards/w65_bd.c: 141:  CLCnGLS2 = 0x20;
 24318   01C1C2  0E20               	movlw	32
 24319   01C1C4  6FDE               	movwf	222,b	;volatile
 24320   01C1C6                     
 24321                           ; BSR set to: 0
 24322                           ;../src/boards/w65_bd.c: 142:     CLCnGLS3 = 0x00;
 24323   01C1C6  6BDF               	clrf	223,b	;volatile
 24324   01C1C8                     
 24325                           ; BSR set to: 0
 24326                           ;../src/boards/w65_bd.c: 144:     CLCnPOL = 0x00;
 24327   01C1C8  6BD7               	clrf	215,b	;volatile
 24328                           
 24329                           ;../src/boards/w65_bd.c: 145:     CLCnCON = 0x84;
 24330   01C1CA  0E84               	movlw	132
 24331   01C1CC  6FD6               	movwf	214,b	;volatile
 24332   01C1CE                     
 24333                           ; BSR set to: 0
 24334                           ;../src/boards/w65_bd.c: 147:  G3POL = 1;
 24335   01C1CE  85D7               	bsf	215,2,b	;volatile
 24336   01C1D0                     
 24337                           ; BSR set to: 0
 24338                           ;../src/boards/w65_bd.c: 148:  G3POL = 0;
 24339   01C1D0  95D7               	bcf	215,2,b	;volatile
 24340                           
 24341                           ;../src/boards/w65_bd.c: 152:  CLCSELECT = 4;
 24342   01C1D2  0E04               	movlw	4
 24343   01C1D4  6FD5               	movwf	213,b	;volatile
 24344                           
 24345                           ;../src/boards/w65_bd.c: 154:  CLCnSEL0 = 0x2a;
 24346   01C1D6  0E2A               	movlw	42
 24347   01C1D8  6FD8               	movwf	216,b	;volatile
 24348                           
 24349                           ;../src/boards/w65_bd.c: 155:     CLCnSEL1 = 0x36;
 24350   01C1DA  0E36               	movlw	54
 24351   01C1DC  6FD9               	movwf	217,b	;volatile
 24352                           
 24353                           ;../src/boards/w65_bd.c: 156:  CLCnSEL2 = 0x3a;
 24354   01C1DE  0E3A               	movlw	58
 24355   01C1E0  6FDA               	movwf	218,b	;volatile
 24356                           
 24357                           ;../src/boards/w65_bd.c: 157:  CLCnSEL3 = 127;
 24358   01C1E2  0E7F               	movlw	127
 24359   01C1E4  6FDB               	movwf	219,b	;volatile
 24360                           
 24361                           ;../src/boards/w65_bd.c: 159:     CLCnGLS0 = 0x02;
 24362   01C1E6  0E02               	movlw	2
 24363   01C1E8  6FDC               	movwf	220,b	;volatile
 24364                           
 24365                           ;../src/boards/w65_bd.c: 160:  CLCnGLS1 = 0x08;
 24366   01C1EA  0E08               	movlw	8
 24367   01C1EC  6FDD               	movwf	221,b	;volatile
 24368                           
 24369                           ;../src/boards/w65_bd.c: 161:  CLCnGLS2 = 0x20;
 24370   01C1EE  0E20               	movlw	32
 24371   01C1F0  6FDE               	movwf	222,b	;volatile
 24372   01C1F2                     
 24373                           ; BSR set to: 0
 24374                           ;../src/boards/w65_bd.c: 162:     CLCnGLS3 = 0x00;
 24375   01C1F2  6BDF               	clrf	223,b	;volatile
 24376   01C1F4                     
 24377                           ; BSR set to: 0
 24378                           ;../src/boards/w65_bd.c: 164:     CLCnPOL = 0x00;
 24379   01C1F4  6BD7               	clrf	215,b	;volatile
 24380                           
 24381                           ;../src/boards/w65_bd.c: 165:     CLCnCON = 0x84;
 24382   01C1F6  0E84               	movlw	132
 24383   01C1F8  6FD6               	movwf	214,b	;volatile
 24384   01C1FA                     
 24385                           ; BSR set to: 0
 24386                           ;../src/boards/w65_bd.c: 167:  G3POL = 1;
 24387   01C1FA  85D7               	bsf	215,2,b	;volatile
 24388   01C1FC                     
 24389                           ; BSR set to: 0
 24390                           ;../src/boards/w65_bd.c: 168:  G3POL = 0;
 24391   01C1FC  95D7               	bcf	215,2,b	;volatile
 24392                           
 24393                           ;../src/boards/w65_bd.c: 172:  CLCSELECT = 5;
 24394   01C1FE  0E05               	movlw	5
 24395   01C200  6FD5               	movwf	213,b	;volatile
 24396                           
 24397                           ;../src/boards/w65_bd.c: 174:  CLCnSEL0 = 0x2a;
 24398   01C202  0E2A               	movlw	42
 24399   01C204  6FD8               	movwf	216,b	;volatile
 24400                           
 24401                           ;../src/boards/w65_bd.c: 175:     CLCnSEL1 = 0x37;
 24402   01C206  0E37               	movlw	55
 24403   01C208  6FD9               	movwf	217,b	;volatile
 24404                           
 24405                           ;../src/boards/w65_bd.c: 176:  CLCnSEL2 = 0x3a;
 24406   01C20A  0E3A               	movlw	58
 24407   01C20C  6FDA               	movwf	218,b	;volatile
 24408                           
 24409                           ;../src/boards/w65_bd.c: 177:  CLCnSEL3 = 127;
 24410   01C20E  0E7F               	movlw	127
 24411   01C210  6FDB               	movwf	219,b	;volatile
 24412                           
 24413                           ;../src/boards/w65_bd.c: 179:     CLCnGLS0 = 0x02;
 24414   01C212  0E02               	movlw	2
 24415   01C214  6FDC               	movwf	220,b	;volatile
 24416                           
 24417                           ;../src/boards/w65_bd.c: 180:  CLCnGLS1 = 0x08;
 24418   01C216  0E08               	movlw	8
 24419   01C218  6FDD               	movwf	221,b	;volatile
 24420                           
 24421                           ;../src/boards/w65_bd.c: 181:  CLCnGLS2 = 0x20;
 24422   01C21A  0E20               	movlw	32
 24423   01C21C  6FDE               	movwf	222,b	;volatile
 24424   01C21E                     
 24425                           ; BSR set to: 0
 24426                           ;../src/boards/w65_bd.c: 182:     CLCnGLS3 = 0x00;
 24427   01C21E  6BDF               	clrf	223,b	;volatile
 24428   01C220                     
 24429                           ; BSR set to: 0
 24430                           ;../src/boards/w65_bd.c: 184:     CLCnPOL = 0x00;
 24431   01C220  6BD7               	clrf	215,b	;volatile
 24432                           
 24433                           ;../src/boards/w65_bd.c: 185:     CLCnCON = 0x84;
 24434   01C222  0E84               	movlw	132
 24435   01C224  6FD6               	movwf	214,b	;volatile
 24436   01C226                     
 24437                           ; BSR set to: 0
 24438                           ;../src/boards/w65_bd.c: 187:  G3POL = 1;
 24439   01C226  85D7               	bsf	215,2,b	;volatile
 24440   01C228                     
 24441                           ; BSR set to: 0
 24442                           ;../src/boards/w65_bd.c: 188:  G3POL = 0;
 24443   01C228  95D7               	bcf	215,2,b	;volatile
 24444                           
 24445                           ;../src/boards/w65_bd.c: 192:  CLCSELECT = 6;
 24446   01C22A  0E06               	movlw	6
 24447   01C22C  6FD5               	movwf	213,b	;volatile
 24448                           
 24449                           ;../src/boards/w65_bd.c: 194:  CLCnSEL0 = 0x2a;
 24450   01C22E  0E2A               	movlw	42
 24451   01C230  6FD8               	movwf	216,b	;volatile
 24452                           
 24453                           ;../src/boards/w65_bd.c: 195:  CLCnSEL1 = 0x38;
 24454   01C232  0E38               	movlw	56
 24455   01C234  6FD9               	movwf	217,b	;volatile
 24456                           
 24457                           ;../src/boards/w65_bd.c: 196:  CLCnSEL2 = 127;
 24458   01C236  0E7F               	movlw	127
 24459   01C238  6FDA               	movwf	218,b	;volatile
 24460                           
 24461                           ;../src/boards/w65_bd.c: 197:  CLCnSEL3 = 127;
 24462   01C23A  0E7F               	movlw	127
 24463   01C23C  6FDB               	movwf	219,b	;volatile
 24464                           
 24465                           ;../src/boards/w65_bd.c: 199:     CLCnGLS0 = 0x02;
 24466   01C23E  0E02               	movlw	2
 24467   01C240  6FDC               	movwf	220,b	;volatile
 24468                           
 24469                           ;../src/boards/w65_bd.c: 200:  CLCnGLS1 = 0x08;
 24470   01C242  0E08               	movlw	8
 24471   01C244  6FDD               	movwf	221,b	;volatile
 24472   01C246                     
 24473                           ; BSR set to: 0
 24474                           ;../src/boards/w65_bd.c: 201:     CLCnGLS2 = 0x00;
 24475   01C246  6BDE               	clrf	222,b	;volatile
 24476   01C248                     
 24477                           ; BSR set to: 0
 24478                           ;../src/boards/w65_bd.c: 202:     CLCnGLS3 = 0x00;
 24479   01C248  6BDF               	clrf	223,b	;volatile
 24480   01C24A                     
 24481                           ; BSR set to: 0
 24482                           ;../src/boards/w65_bd.c: 204:     CLCnPOL = 0x00;
 24483   01C24A  6BD7               	clrf	215,b	;volatile
 24484                           
 24485                           ;../src/boards/w65_bd.c: 205:     CLCnCON = 0x84;
 24486   01C24C  0E84               	movlw	132
 24487   01C24E  6FD6               	movwf	214,b	;volatile
 24488   01C250                     
 24489                           ; BSR set to: 0
 24490                           ;../src/boards/w65_bd.c: 207:  G3POL = 1;
 24491   01C250  85D7               	bsf	215,2,b	;volatile
 24492   01C252                     
 24493                           ; BSR set to: 0
 24494                           ;../src/boards/w65_bd.c: 208:  G3POL = 0;
 24495   01C252  95D7               	bcf	215,2,b	;volatile
 24496                           
 24497                           ;../src/boards/w65_bd.c: 212:  CLCSELECT = 7;
 24498   01C254  0E07               	movlw	7
 24499   01C256  6FD5               	movwf	213,b	;volatile
 24500                           
 24501                           ;../src/boards/w65_bd.c: 214:  CLCnSEL0 = 0x2a;
 24502   01C258  0E2A               	movlw	42
 24503   01C25A  6FD8               	movwf	216,b	;volatile
 24504                           
 24505                           ;../src/boards/w65_bd.c: 215:  CLCnSEL1 = 0x39;
 24506   01C25C  0E39               	movlw	57
 24507   01C25E  6FD9               	movwf	217,b	;volatile
 24508                           
 24509                           ;../src/boards/w65_bd.c: 216:  CLCnSEL2 = 0x3a;
 24510   01C260  0E3A               	movlw	58
 24511   01C262  6FDA               	movwf	218,b	;volatile
 24512                           
 24513                           ;../src/boards/w65_bd.c: 217:  CLCnSEL3 = 127;
 24514   01C264  0E7F               	movlw	127
 24515   01C266  6FDB               	movwf	219,b	;volatile
 24516                           
 24517                           ;../src/boards/w65_bd.c: 219:     CLCnGLS0 = 0x01;
 24518   01C268  0E01               	movlw	1
 24519   01C26A  6FDC               	movwf	220,b	;volatile
 24520                           
 24521                           ;../src/boards/w65_bd.c: 220:  CLCnGLS1 = 0x08;
 24522   01C26C  0E08               	movlw	8
 24523   01C26E  6FDD               	movwf	221,b	;volatile
 24524   01C270                     
 24525                           ; BSR set to: 0
 24526                           ;../src/boards/w65_bd.c: 221:     CLCnGLS2 = 0x00;
 24527   01C270  6BDE               	clrf	222,b	;volatile
 24528                           
 24529                           ;../src/boards/w65_bd.c: 222:     CLCnGLS3 = 0x20;
 24530   01C272  0E20               	movlw	32
 24531   01C274  6FDF               	movwf	223,b	;volatile
 24532   01C276                     
 24533                           ; BSR set to: 0
 24534                           ;../src/boards/w65_bd.c: 224:     CLCnPOL = 0x00;
 24535   01C276  6BD7               	clrf	215,b	;volatile
 24536                           
 24537                           ;../src/boards/w65_bd.c: 225:     CLCnCON = 0x85;
 24538   01C278  0E85               	movlw	133
 24539   01C27A  6FD6               	movwf	214,b	;volatile
 24540   01C27C                     
 24541                           ; BSR set to: 0
 24542                           ;../src/boards/w65_bd.c: 227:  G3POL = 1;
 24543   01C27C  85D7               	bsf	215,2,b	;volatile
 24544   01C27E                     
 24545                           ; BSR set to: 0
 24546                           ;../src/boards/w65_bd.c: 228:  G3POL = 0;
 24547   01C27E  95D7               	bcf	215,2,b	;volatile
 24548                           
 24549                           ;../src/boards/w65_bd.c: 231:  CLCSELECT = 1;
 24550   01C280  0E01               	movlw	1
 24551   01C282  6FD5               	movwf	213,b	;volatile
 24552   01C284                     
 24553                           ; BSR set to: 0
 24554                           ;../src/boards/w65_bd.c: 233:  G3POL = 1;
 24555   01C284  85D7               	bsf	215,2,b	;volatile
 24556   01C286                     
 24557                           ; BSR set to: 0
 24558                           ;../src/boards/w65_bd.c: 234:  G3POL = 0;
 24559   01C286  95D7               	bcf	215,2,b	;volatile
 24560                           
 24561                           ;../src/boards/w65_bd.c: 236:  RA2PPS = 0x02;
 24562   01C288  0E02               	movlw	2
 24563   01C28A  0102               	movlb	2	; () banked
 24564   01C28C  6F03               	movwf	3,b	;volatile
 24565   01C28E                     
 24566                           ; BSR set to: 2
 24567                           ;../src/boards/w65_bd.c: 238:  irq_flg = 0;
 24568   01C28E  0107               	movlb	7	; () banked
 24569   01C290  6BC7               	clrf	_irq_flg& (0+255),b
 24570   01C292                     
 24571                           ; BSR set to: 7
 24572   01C292  0012               	return		;funcret
 24573   01C294                     __end_of_clc_init:
 24574                           	callstack 0
 24575                           
 24576 ;; *************** function _f_chdir *****************
 24577 ;; Defined at:
 24578 ;;		line 4271 in file "../fatfs/ff.c"
 24579 ;; Parameters:    Size  Location     Type
 24580 ;;  path            2  175[BANK6 ] PTR const unsigned char 
 24581 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 24582 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 24583 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 24584 ;; Auto vars:     Size  Location     Type
 24585 ;;  dj             40  180[BANK6 ] struct .
 24586 ;;  fs              2  178[BANK6 ] PTR struct .
 24587 ;;		 -> fs(564), NULL(0), 
 24588 ;;  res             1  177[BANK6 ] enum E597
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  1    wreg      enum E597
 24591 ;; Registers used:
 24592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/0
 24595 ;;		On exit  : 0/0
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24598 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24599 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24601 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24602 ;;Total ram usage:       45 bytes
 24603 ;; Hardware stack levels used: 1
 24604 ;; Hardware stack levels required when called: 19
 24605 ;; This function calls:
 24606 ;;		_follow_path
 24607 ;;		_ld_clust
 24608 ;;		_mount_volume
 24609 ;; This function is called by:
 24610 ;;		_change_directory
 24611 ;; This function uses a non-reentrant model
 24612 ;;
 24613                           
 24614                           	psect	text48
 24615   01D82E                     __ptext48:
 24616                           	callstack 0
 24617   01D82E                     _f_chdir:
 24618                           	callstack 106
 24619   01D82E                     
 24620                           ;../fatfs/ff.c: 4272:  const TCHAR* path;../fatfs/ff.c: 4274: {;../fatfs/ff.c: 4278:  FR
      +                          ESULT res;;../fatfs/ff.c: 4279:  DIR dj;;../fatfs/ff.c: 4280:  FATFS *fs;;../fatfs/ff.c:
      +                           4285:  res = mount_volume(&path, &fs, 0);
 24621   01D82E  0EAF               	movlw	low f_chdir@path
 24622   01D830  0106               	movlb	6	; () banked
 24623   01D832  6F81               	movwf	mount_volume@path& (0+255),b
 24624   01D834  0E06               	movlw	high f_chdir@path
 24625   01D836  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 24626   01D838  0EB2               	movlw	low f_chdir@fs
 24627   01D83A  6F83               	movwf	mount_volume@rfs& (0+255),b
 24628   01D83C  0E06               	movlw	high f_chdir@fs
 24629   01D83E  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 24630   01D840  0E00               	movlw	0
 24631   01D842  6F85               	movwf	mount_volume@mode& (0+255),b
 24632   01D844  EC00  F080         	call	_mount_volume	;wreg free
 24633   01D848  0106               	movlb	6	; () banked
 24634   01D84A  6FB1               	movwf	f_chdir@res& (0+255),b
 24635   01D84C                     
 24636                           ; BSR set to: 6
 24637                           ;../fatfs/ff.c: 4286:  if (res == FR_OK) {
 24638   01D84C  51B1               	movf	f_chdir@res& (0+255),w,b
 24639   01D84E  A4D8               	btfss	status,2,c
 24640   01D850  EF2C  F0EC         	goto	u33211
 24641   01D854  EF2E  F0EC         	goto	u33210
 24642   01D858                     u33211:
 24643   01D858  EF8E  F0EC         	goto	l748
 24644   01D85C                     u33210:
 24645   01D85C                     
 24646                           ; BSR set to: 6
 24647                           ;../fatfs/ff.c: 4287:   dj.obj.fs = fs;
 24648   01D85C  C6B2  F6B4         	movff	f_chdir@fs,f_chdir@dj
 24649   01D860  C6B3  F6B5         	movff	f_chdir@fs+1,f_chdir@dj+1
 24650   01D864                     
 24651                           ; BSR set to: 6
 24652                           ;../fatfs/ff.c: 4289:   res = follow_path(&dj, path);
 24653   01D864  0EB4               	movlw	low f_chdir@dj
 24654   01D866  6F84               	movwf	follow_path@dp& (0+255),b
 24655   01D868  0E06               	movlw	high f_chdir@dj
 24656   01D86A  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 24657   01D86C  C6AF  F686         	movff	f_chdir@path,follow_path@path
 24658   01D870  C6B0  F687         	movff	f_chdir@path+1,follow_path@path+1
 24659   01D874  EC61  F0C4         	call	_follow_path	;wreg free
 24660   01D878  0106               	movlb	6	; () banked
 24661   01D87A  6FB1               	movwf	f_chdir@res& (0+255),b
 24662   01D87C                     
 24663                           ; BSR set to: 6
 24664                           ;../fatfs/ff.c: 4290:   if (res == FR_OK) {
 24665   01D87C  51B1               	movf	f_chdir@res& (0+255),w,b
 24666   01D87E  A4D8               	btfss	status,2,c
 24667   01D880  EF44  F0EC         	goto	u33221
 24668   01D884  EF46  F0EC         	goto	u33220
 24669   01D888                     u33221:
 24670   01D888  EF83  F0EC         	goto	l23935
 24671   01D88C                     u33220:
 24672   01D88C                     
 24673                           ; BSR set to: 6
 24674                           ;../fatfs/ff.c: 4291:    if (dj.fn[11] & 0x80) {
 24675   01D88C  AFDB               	btfss	(f_chdir@dj+39)& (0+255),7,b
 24676   01D88E  EF4B  F0EC         	goto	u33231
 24677   01D892  EF4D  F0EC         	goto	u33230
 24678   01D896                     u33231:
 24679   01D896  EF5F  F0EC         	goto	l750
 24680   01D89A                     u33230:
 24681   01D89A                     
 24682                           ; BSR set to: 6
 24683                           ;../fatfs/ff.c: 4292:     fs->cdir = dj.obj.sclust;
 24684   01D89A  EE21  F2BA         	lfsr	2,f_chdir@dj+6
 24685   01D89E  EE10 F014          	lfsr	1,20
 24686   01D8A2  51B2               	movf	f_chdir@fs& (0+255),w,b
 24687   01D8A4  26E1               	addwf	fsr1l,f,c
 24688   01D8A6  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 24689   01D8A8  22E2               	addwfc	fsr1h,f,c
 24690   01D8AA  C4DE F4E6          	movff	postinc2,postinc1
 24691   01D8AE  C4DE F4E6          	movff	postinc2,postinc1
 24692   01D8B2  C4DE F4E6          	movff	postinc2,postinc1
 24693   01D8B6  C4DE F4E6          	movff	postinc2,postinc1
 24694                           
 24695                           ;../fatfs/ff.c: 4300:    } else {
 24696   01D8BA  EF83  F0EC         	goto	l23935
 24697   01D8BE                     l750:
 24698                           
 24699                           ; BSR set to: 6
 24700                           ;../fatfs/ff.c: 4301:     if (dj.obj.attr & 0x10) {
 24701   01D8BE  A9B8               	btfss	(f_chdir@dj+4)& (0+255),4,b
 24702   01D8C0  EF64  F0EC         	goto	u33241
 24703   01D8C4  EF66  F0EC         	goto	u33240
 24704   01D8C8                     u33241:
 24705   01D8C8  EF81  F0EC         	goto	l23933
 24706   01D8CC                     u33240:
 24707   01D8CC                     
 24708                           ; BSR set to: 6
 24709                           ;../fatfs/ff.c: 4310:      {;../fatfs/ff.c: 4311:       fs->cdir = ld_clust(fs, dj.dir);
 24710   01D8CC  C6B2  F50B         	movff	f_chdir@fs,ld_clust@fs
 24711   01D8D0  C6B3  F50C         	movff	f_chdir@fs+1,ld_clust@fs+1
 24712   01D8D4  C6CE  F50D         	movff	f_chdir@dj+26,ld_clust@dir
 24713   01D8D8  C6CF  F50E         	movff	f_chdir@dj+27,ld_clust@dir+1
 24714   01D8DC  EC3A  F0F9         	call	_ld_clust	;wreg free
 24715   01D8E0  0106               	movlb	6	; () banked
 24716   01D8E2  EE20 F014          	lfsr	2,20
 24717   01D8E6  51B2               	movf	f_chdir@fs& (0+255),w,b
 24718   01D8E8  26D9               	addwf	fsr2l,f,c
 24719   01D8EA  51B3               	movf	(f_chdir@fs+1)& (0+255),w,b
 24720   01D8EC  22DA               	addwfc	fsr2h,f,c
 24721   01D8EE  C50B  F4DE         	movff	?_ld_clust,postinc2
 24722   01D8F2  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 24723   01D8F6  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 24724   01D8FA  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 24725                           
 24726                           ;../fatfs/ff.c: 4312:      };../fatfs/ff.c: 4313:     } else {
 24727   01D8FE  EF83  F0EC         	goto	l23935
 24728   01D902                     l23933:
 24729                           
 24730                           ; BSR set to: 6
 24731                           ;../fatfs/ff.c: 4314:      res = FR_NO_PATH;
 24732   01D902  0E05               	movlw	5
 24733   01D904  6FB1               	movwf	f_chdir@res& (0+255),b
 24734   01D906                     l23935:
 24735                           
 24736                           ; BSR set to: 6
 24737                           ;../fatfs/ff.c: 4319:   if (res == FR_NO_FILE) res = FR_NO_PATH;
 24738   01D906  0E04               	movlw	4
 24739   01D908  19B1               	xorwf	f_chdir@res& (0+255),w,b
 24740   01D90A  A4D8               	btfss	status,2,c
 24741   01D90C  EF8A  F0EC         	goto	u33251
 24742   01D910  EF8C  F0EC         	goto	u33250
 24743   01D914                     u33251:
 24744   01D914  EF8E  F0EC         	goto	l748
 24745   01D918                     u33250:
 24746   01D918                     
 24747                           ; BSR set to: 6
 24748   01D918  0E05               	movlw	5
 24749   01D91A  6FB1               	movwf	f_chdir@res& (0+255),b
 24750   01D91C                     l748:
 24751                           
 24752                           ; BSR set to: 6
 24753                           ;../fatfs/ff.c: 4328:  return res;
 24754   01D91C  51B1               	movf	f_chdir@res& (0+255),w,b
 24755   01D91E                     
 24756                           ; BSR set to: 6
 24757   01D91E  0012               	return		;funcret
 24758   01D920                     __end_of_f_chdir:
 24759                           	callstack 0
 24760                           
 24761 ;; *************** function _start_cpu *****************
 24762 ;; Defined at:
 24763 ;;		line 420 in file "../src/boards/w65_cmn.c"
 24764 ;; Parameters:    Size  Location     Type
 24765 ;;		None
 24766 ;; Auto vars:     Size  Location     Type
 24767 ;;		None
 24768 ;; Return value:  Size  Location     Type
 24769 ;;                  1    wreg      void 
 24770 ;; Registers used:
 24771 ;;		wreg, status,2, cstack
 24772 ;; Tracked objects:
 24773 ;;		On entry : 0/0
 24774 ;;		On exit  : 0/0
 24775 ;;		Unchanged: 0/0
 24776 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24781 ;;Total ram usage:        2 bytes
 24782 ;; Hardware stack levels used: 1
 24783 ;; Hardware stack levels required when called: 2
 24784 ;; This function calls:
 24785 ;;		_bus_release_req
 24786 ;; This function is called by:
 24787 ;;		_boot_file
 24788 ;;		_wstart_prog
 24789 ;;		_restart_prog
 24790 ;;		_mon_prog
 24791 ;; This function uses a non-reentrant model
 24792 ;;
 24793                           
 24794                           	psect	text49
 24795   01FDF0                     __ptext49:
 24796                           	callstack 0
 24797   01FDF0                     _start_cpu:
 24798                           	callstack 123
 24799   01FDF0                     
 24800                           ;../src/boards/w65_cmn.c: 422:  bus_release_req();
 24801   01FDF0  EC36  F001         	call	_bus_release_req	;wreg free
 24802   01FDF4                     
 24803                           ;../src/boards/w65_cmn.c: 424:  CLCSELECT = 0;
 24804   01FDF4  0100               	movlb	0	; () banked
 24805   01FDF6  6BD5               	clrf	213,b	;volatile
 24806   01FDF8                     
 24807                           ; BSR set to: 0
 24808                           ;../src/boards/w65_cmn.c: 425:  G2POL = 0;
 24809   01FDF8  93D7               	bcf	215,1,b	;volatile
 24810   01FDFA                     
 24811                           ; BSR set to: 0
 24812                           ;../src/boards/w65_cmn.c: 426:  LATE0 = 0;
 24813   01FDFA  90C2               	bcf	1218,0,c	;volatile
 24814   01FDFC                     
 24815                           ; BSR set to: 0
 24816                           ;../src/boards/w65_cmn.c: 428:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 24817   01FDFC  0E09               	movlw	9
 24818   01FDFE  6E05               	movwf	(??_start_cpu+1)^(0+1280),c
 24819   01FE00  0E1E               	movlw	30
 24820   01FE02  6E04               	movwf	??_start_cpu^(0+1280),c
 24821   01FE04  0EE4               	movlw	228
 24822   01FE06                     u36887:
 24823   01FE06  2EE8               	decfsz	wreg,f,c
 24824   01FE08  D7FE               	bra	u36887
 24825   01FE0A  2E04               	decfsz	??_start_cpu^(0+1280),f,c
 24826   01FE0C  D7FC               	bra	u36887
 24827   01FE0E  2E05               	decfsz	(??_start_cpu+1)^(0+1280),f,c
 24828   01FE10  D7FA               	bra	u36887
 24829   01FE12  D000               	nop2	
 24830   01FE14                     
 24831                           ;../src/boards/w65_cmn.c: 430:  G2POL = 1;
 24832   01FE14  0100               	movlb	0	; () banked
 24833   01FE16  83D7               	bsf	215,1,b	;volatile
 24834   01FE18                     
 24835                           ; BSR set to: 0
 24836                           ;../src/boards/w65_cmn.c: 432:  CLCSELECT = 7;
 24837   01FE18  0E07               	movlw	7
 24838   01FE1A  6FD5               	movwf	213,b	;volatile
 24839   01FE1C                     
 24840                           ; BSR set to: 0
 24841                           ;../src/boards/w65_cmn.c: 433:  G3POL = 1;
 24842   01FE1C  85D7               	bsf	215,2,b	;volatile
 24843   01FE1E                     
 24844                           ; BSR set to: 0
 24845                           ;../src/boards/w65_cmn.c: 434:  G3POL = 0;
 24846   01FE1E  95D7               	bcf	215,2,b	;volatile
 24847   01FE20                     
 24848                           ; BSR set to: 0
 24849                           ;../src/boards/w65_cmn.c: 436:  LATE0 = 1;
 24850   01FE20  80C2               	bsf	1218,0,c	;volatile
 24851   01FE22                     
 24852                           ; BSR set to: 0
 24853                           ;../src/boards/w65_cmn.c: 438:  irq_flg = 0;
 24854   01FE22  0107               	movlb	7	; () banked
 24855   01FE24  6BC7               	clrf	_irq_flg& (0+255),b
 24856   01FE26                     
 24857                           ; BSR set to: 7
 24858   01FE26  0012               	return		;funcret
 24859   01FE28                     __end_of_start_cpu:
 24860                           	callstack 0
 24861                           
 24862 ;; *************** function _prt_reload *****************
 24863 ;; Defined at:
 24864 ;;		line 635 in file "../src/w65_main.c"
 24865 ;; Parameters:    Size  Location     Type
 24866 ;;		None
 24867 ;; Auto vars:     Size  Location     Type
 24868 ;;		None
 24869 ;; Return value:  Size  Location     Type
 24870 ;;                  1    wreg      void 
 24871 ;; Registers used:
 24872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24873 ;; Tracked objects:
 24874 ;;		On entry : 0/0
 24875 ;;		On exit  : 0/0
 24876 ;;		Unchanged: 0/0
 24877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24882 ;;Total ram usage:        0 bytes
 24883 ;; Hardware stack levels used: 1
 24884 ;; Hardware stack levels required when called: 9
 24885 ;; This function calls:
 24886 ;;		_printf
 24887 ;; This function is called by:
 24888 ;;		_boot_file
 24889 ;; This function uses a non-reentrant model
 24890 ;;
 24891                           
 24892                           	psect	text50
 24893   0001DE                     __ptext50:
 24894                           	callstack 0
 24895   0001DE                     _prt_reload:
 24896                           	callstack 116
 24897   0001DE                     
 24898                           ;../src/w65_main.c: 636:  printf("Reload monitor %s\r\n", arg[0]);
 24899   0001DE  0EAE               	movlw	low STR_107
 24900   0001E0  0105               	movlb	5	; () banked
 24901   0001E2  6FAD               	movwf	printf@fmt& (0+255),b
 24902   0001E4  0EFC               	movlw	high STR_107
 24903   0001E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 24904   0001E8  C79E  F5AF         	movff	_arg,?_printf+2
 24905   0001EC  C79F  F5B0         	movff	_arg+1,?_printf+3
 24906   0001F0  ECDA  F0FF         	call	_printf	;wreg free
 24907   0001F4  0012               	return		;funcret
 24908   0001F6                     __end_of_prt_reload:
 24909                           	callstack 0
 24910                           
 24911 ;; *************** function _load_program *****************
 24912 ;; Defined at:
 24913 ;;		line 301 in file "../src/w65_main.c"
 24914 ;; Parameters:    Size  Location     Type
 24915 ;;  fname           2    0[BANK7 ] PTR unsigned char 
 24916 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 24917 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;  adr             4   10[BANK7 ] unsigned long 
 24920 ;;  adr0            4    2[BANK7 ] unsigned long 
 24921 ;;  header          2   19[BANK7 ] PTR struct .
 24922 ;;		 -> tmp_buf(512), 
 24923 ;;  br              2   16[BANK7 ] unsigned int 
 24924 ;;  cnt             2   14[BANK7 ] unsigned short 
 24925 ;;  btr             2    8[BANK7 ] unsigned int 
 24926 ;;  rdbuf           2    6[BANK7 ] PTR void 
 24927 ;;		 -> tmp_buf(512), 
 24928 ;;  fr              1   18[BANK7 ] enum E23452
 24929 ;; Return value:  Size  Location     Type
 24930 ;;                  2    0[BANK7 ] int 
 24931 ;; Registers used:
 24932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24933 ;; Tracked objects:
 24934 ;;		On entry : 0/0
 24935 ;;		On exit  : 0/0
 24936 ;;		Unchanged: 0/0
 24937 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 24938 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24939 ;;      Locals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24941 ;;      Totals:         0       1       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 24942 ;;Total ram usage:       22 bytes
 24943 ;; Hardware stack levels used: 1
 24944 ;; Hardware stack levels required when called: 20
 24945 ;; This function calls:
 24946 ;;		_f_close
 24947 ;;		_f_open
 24948 ;;		_f_read
 24949 ;;		_printf
 24950 ;;		_sprintf
 24951 ;;		_strstr
 24952 ;;		_write_sram
 24953 ;; This function is called by:
 24954 ;;		_setup_monitor
 24955 ;;		_boot_file
 24956 ;;		_load_file
 24957 ;; This function uses a non-reentrant model
 24958 ;;
 24959                           
 24960                           	psect	text51
 24961   015D0C                     __ptext51:
 24962                           	callstack 0
 24963   015D0C                     _load_program:
 24964                           	callstack 105
 24965   015D0C                     
 24966                           ;../src/w65_main.c: 303:  FRESULT fr;;../src/w65_main.c: 304:  void *rdbuf;;../src/w65_m
      +                          ain.c: 305:  UINT btr, br;;../src/w65_main.c: 306:  uint16_t cnt;;../src/w65_main.c: 307
      +                          :  uint32_t adr, adr0;;../src/w65_main.c: 308:  file_header *header;;../src/w65_main.c: 
      +                          310:  rdbuf = (void *)&tmp_buf[0][0];
 24967   015D0C  0EF8               	movlw	low _tmp_buf
 24968   015D0E  0107               	movlb	7	; () banked
 24969   015D10  6F06               	movwf	load_program@rdbuf& (0+255),b
 24970   015D12  0E13               	movlw	high _tmp_buf
 24971   015D14  6F07               	movwf	(load_program@rdbuf+1)& (0+255),b
 24972                           
 24973                           ;../src/w65_main.c: 311:  header = (file_header *)&tmp_buf[0][0];
 24974   015D16  0EF8               	movlw	low _tmp_buf
 24975   015D18  6F13               	movwf	load_program@header& (0+255),b
 24976   015D1A  0E13               	movlw	high _tmp_buf
 24977   015D1C  6F14               	movwf	(load_program@header+1)& (0+255),b
 24978   015D1E                     
 24979                           ; BSR set to: 7
 24980                           ;../src/w65_main.c: 313:  fr = f_open(&rom_fl, (TCHAR *)fname, 0x01);
 24981   015D1E  0ED6               	movlw	low _rom_fl
 24982   015D20  0106               	movlb	6	; () banked
 24983   015D22  6FAF               	movwf	f_open@fp& (0+255),b
 24984   015D24  0E0F               	movlw	high _rom_fl
 24985   015D26  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 24986   015D28  C700  F6B1         	movff	load_program@fname,f_open@path
 24987   015D2C  C701  F6B2         	movff	load_program@fname+1,f_open@path+1
 24988   015D30  0E01               	movlw	1
 24989   015D32  6FB3               	movwf	f_open@mode& (0+255),b
 24990   015D34  ECDB  F092         	call	_f_open	;wreg free
 24991   015D38  0107               	movlb	7	; () banked
 24992   015D3A  6F12               	movwf	load_program@fr& (0+255),b
 24993   015D3C                     
 24994                           ; BSR set to: 7
 24995                           ;../src/w65_main.c: 314:  if ( fr != FR_OK ) {
 24996   015D3C  5112               	movf	load_program@fr& (0+255),w,b
 24997   015D3E  B4D8               	btfsc	status,2,c
 24998   015D40  EFA4  F0AE         	goto	u33791
 24999   015D44  EFA6  F0AE         	goto	u33790
 25000   015D48                     u33791:
 25001   015D48  EFB3  F0AE         	goto	l24245
 25002   015D4C                     u33790:
 25003   015D4C                     
 25004                           ; BSR set to: 7
 25005                           ;../src/w65_main.c: 315:   printf("File Open Error.\r\n");
 25006   015D4C  0E5D               	movlw	low (STR_134+2)
 25007   015D4E  0105               	movlb	5	; () banked
 25008   015D50  6FAD               	movwf	printf@fmt& (0+255),b
 25009   015D52  0EFC               	movlw	high (STR_134+2)
 25010   015D54  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25011   015D56  ECDA  F0FF         	call	_printf	;wreg free
 25012   015D5A                     l24241:
 25013                           
 25014                           ;../src/w65_main.c: 316:   return((int)fr);
 25015   015D5A  C712  F700         	movff	load_program@fr,?_load_program
 25016   015D5E  0107               	movlb	7	; () banked
 25017   015D60  6B01               	clrf	(?_load_program+1)& (0+255),b
 25018   015D62  EFCE  F0B0         	goto	l1552
 25019   015D66                     l24245:
 25020                           
 25021                           ; BSR set to: 7
 25022                           ;../src/w65_main.c: 318:  adr = 0;
 25023   015D66  0E00               	movlw	0
 25024   015D68  6F0A               	movwf	load_program@adr& (0+255),b
 25025   015D6A  0E00               	movlw	0
 25026   015D6C  6F0B               	movwf	(load_program@adr+1)& (0+255),b
 25027   015D6E  0E00               	movlw	0
 25028   015D70  6F0C               	movwf	(load_program@adr+2)& (0+255),b
 25029   015D72  0E00               	movlw	0
 25030   015D74  6F0D               	movwf	(load_program@adr+3)& (0+255),b
 25031   015D76                     
 25032                           ; BSR set to: 7
 25033                           ;../src/w65_main.c: 319:  cnt = file_size = (uint16_t)((&rom_fl)->obj.objsize);
 25034   015D76  0063  FF80  F7BB   	movff	_rom_fl+10,_file_size
 25035   015D7C  0063  FF84  F7BC   	movff	_rom_fl+11,_file_size+1
 25036   015D82  C7BB  F70E         	movff	_file_size,load_program@cnt
 25037   015D86  C7BC  F70F         	movff	_file_size+1,load_program@cnt+1
 25038                           
 25039                           ;../src/w65_main.c: 320:  btr = 256 * 2;
 25040   015D8A  0E02               	movlw	2
 25041   015D8C  6F09               	movwf	(load_program@btr+1)& (0+255),b
 25042   015D8E  0E00               	movlw	0
 25043   015D90  6F08               	movwf	load_program@btr& (0+255),b
 25044                           
 25045                           ;../src/w65_main.c: 321:  while( cnt ) {
 25046   015D92  EF8B  F0B0         	goto	l24315
 25047   015D96                     l24249:
 25048                           
 25049                           ; BSR set to: 7
 25050                           ;../src/w65_main.c: 322:   fr = f_read(&rom_fl, rdbuf, btr, &br);
 25051   015D96  0ED6               	movlw	low _rom_fl
 25052   015D98  0106               	movlb	6	; () banked
 25053   015D9A  6F3E               	movwf	f_read@fp& (0+255),b
 25054   015D9C  0E0F               	movlw	high _rom_fl
 25055   015D9E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 25056   015DA0  C706  F640         	movff	load_program@rdbuf,f_read@buff
 25057   015DA4  C707  F641         	movff	load_program@rdbuf+1,f_read@buff+1
 25058   015DA8  C708  F642         	movff	load_program@btr,f_read@btr
 25059   015DAC  C709  F643         	movff	load_program@btr+1,f_read@btr+1
 25060   015DB0  0E10               	movlw	low load_program@br
 25061   015DB2  6F44               	movwf	f_read@br& (0+255),b
 25062   015DB4  0E07               	movlw	high load_program@br
 25063   015DB6  6F45               	movwf	(f_read@br+1)& (0+255),b
 25064   015DB8  EC9B  F096         	call	_f_read	;wreg free
 25065   015DBC  0107               	movlb	7	; () banked
 25066   015DBE  6F12               	movwf	load_program@fr& (0+255),b
 25067   015DC0                     
 25068                           ; BSR set to: 7
 25069                           ;../src/w65_main.c: 323:   if (fr == FR_OK) {
 25070   015DC0  5112               	movf	load_program@fr& (0+255),w,b
 25071   015DC2  A4D8               	btfss	status,2,c
 25072   015DC4  EFE6  F0AE         	goto	u33801
 25073   015DC8  EFE8  F0AE         	goto	u33800
 25074   015DCC                     u33801:
 25075   015DCC  EF94  F0B0         	goto	l24317
 25076   015DD0                     u33800:
 25077   015DD0                     
 25078                           ; BSR set to: 7
 25079                           ;../src/w65_main.c: 324:    if ( !adr ) {
 25080   015DD0  510A               	movf	load_program@adr& (0+255),w,b
 25081   015DD2  110B               	iorwf	(load_program@adr+1)& (0+255),w,b
 25082   015DD4  110C               	iorwf	(load_program@adr+2)& (0+255),w,b
 25083   015DD6  110D               	iorwf	(load_program@adr+3)& (0+255),w,b
 25084   015DD8  A4D8               	btfss	status,2,c
 25085   015DDA  EFF1  F0AE         	goto	u33811
 25086   015DDE  EFF3  F0AE         	goto	u33810
 25087   015DE2                     u33811:
 25088   015DE2  EF5D  F0B0         	goto	l24305
 25089   015DE6                     u33810:
 25090   015DE6                     
 25091                           ; BSR set to: 7
 25092                           ;../src/w65_main.c: 325:     if ( raw_addr ) {
 25093   015DE6  51AD               	movf	_raw_addr& (0+255),w,b
 25094   015DE8  11AE               	iorwf	(_raw_addr+1)& (0+255),w,b
 25095   015DEA  11AF               	iorwf	(_raw_addr+2)& (0+255),w,b
 25096   015DEC  11B0               	iorwf	(_raw_addr+3)& (0+255),w,b
 25097   015DEE  B4D8               	btfsc	status,2,c
 25098   015DF0  EFFC  F0AE         	goto	u33821
 25099   015DF4  EFFE  F0AE         	goto	u33820
 25100   015DF8                     u33821:
 25101   015DF8  EF10  F0AF         	goto	l24259
 25102   015DFC                     u33820:
 25103   015DFC                     
 25104                           ; BSR set to: 7
 25105                           ;../src/w65_main.c: 326:      adr = adr0 = raw_addr;
 25106   015DFC  C7AD  F702         	movff	_raw_addr,load_program@adr0
 25107   015E00  C7AE  F703         	movff	_raw_addr+1,load_program@adr0+1
 25108   015E04  C7AF  F704         	movff	_raw_addr+2,load_program@adr0+2
 25109   015E08  C7B0  F705         	movff	_raw_addr+3,load_program@adr0+3
 25110   015E0C  C702  F70A         	movff	load_program@adr0,load_program@adr
 25111   015E10  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 25112   015E14  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 25113   015E18  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 25114                           
 25115                           ;../src/w65_main.c: 327:     }
 25116   015E1C  EF5D  F0B0         	goto	l24305
 25117   015E20                     l24259:
 25118                           
 25119                           ; BSR set to: 7
 25120                           ;../src/w65_main.c: 329:      if (!strstr((const char *)header->mezID, mezID)) {
 25121   015E20  0E08               	movlw	8
 25122   015E22  2513               	addwf	load_program@header& (0+255),w,b
 25123   015E24  6E0B               	movwf	strstr@h^(0+1280),c
 25124   015E26  0E00               	movlw	0
 25125   015E28  2114               	addwfc	(load_program@header+1)& (0+255),w,b
 25126   015E2A  6E0C               	movwf	(strstr@h+1)^(0+1280),c
 25127   015E2C  0E48               	movlw	low STR_47
 25128   015E2E  6E0D               	movwf	strstr@n^(0+1280),c
 25129   015E30  0EFF               	movlw	high STR_47
 25130   015E32  6E0E               	movwf	(strstr@n+1)^(0+1280),c
 25131   015E34  ECCF  F0EE         	call	_strstr	;wreg free
 25132   015E38  500B               	movf	?_strstr^(0+1280),w,c
 25133   015E3A  100C               	iorwf	(?_strstr+1)^(0+1280),w,c
 25134   015E3C  A4D8               	btfss	status,2,c
 25135   015E3E  EF23  F0AF         	goto	u33831
 25136   015E42  EF25  F0AF         	goto	u33830
 25137   015E46                     u33831:
 25138   015E46  EF31  F0AF         	goto	l24265
 25139   015E4A                     u33830:
 25140   015E4A                     
 25141                           ;../src/w65_main.c: 330:       printf("Invalid MEZW65C file.\r\n");
 25142   015E4A  0E06               	movlw	low STR_80
 25143   015E4C  0105               	movlb	5	; () banked
 25144   015E4E  6FAD               	movwf	printf@fmt& (0+255),b
 25145   015E50  0EFB               	movlw	high STR_80
 25146   015E52  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25147   015E54  ECDA  F0FF         	call	_printf	;wreg free
 25148   015E58                     l24263:
 25149                           
 25150                           ;../src/w65_main.c: 331:       fr = FR_INVALID_OBJECT;
 25151   015E58  0E09               	movlw	9
 25152   015E5A  0107               	movlb	7	; () banked
 25153   015E5C  6F12               	movwf	load_program@fr& (0+255),b
 25154                           
 25155                           ;../src/w65_main.c: 332:       break;
 25156   015E5E  EF94  F0B0         	goto	l24317
 25157   015E62                     l24265:
 25158                           
 25159                           ;../src/w65_main.c: 334:      if (header->sw_816==1 && !cpu_flg) {
 25160   015E62  0107               	movlb	7	; () banked
 25161   015E64  EE20 F018          	lfsr	2,24
 25162   015E68  5113               	movf	load_program@header& (0+255),w,b
 25163   015E6A  26D9               	addwf	fsr2l,f,c
 25164   015E6C  5114               	movf	(load_program@header+1)& (0+255),w,b
 25165   015E6E  22DA               	addwfc	fsr2h,f,c
 25166   015E70  04DE               	decf	postinc2,w,c
 25167   015E72  A4D8               	btfss	status,2,c
 25168   015E74  EF3E  F0AF         	goto	u33841
 25169   015E78  EF40  F0AF         	goto	u33840
 25170   015E7C                     u33841:
 25171   015E7C  EF51  F0AF         	goto	l24273
 25172   015E80                     u33840:
 25173   015E80                     
 25174                           ; BSR set to: 7
 25175   015E80  51E5               	movf	_cpu_flg& (0+255),w,b
 25176   015E82  A4D8               	btfss	status,2,c
 25177   015E84  EF46  F0AF         	goto	u33851
 25178   015E88  EF48  F0AF         	goto	u33850
 25179   015E8C                     u33851:
 25180   015E8C  EF51  F0AF         	goto	l24273
 25181   015E90                     u33850:
 25182   015E90                     
 25183                           ; BSR set to: 7
 25184                           ;../src/w65_main.c: 335:       printf("Work on only W65C816..\r\n");
 25185   015E90  0EA2               	movlw	low STR_81
 25186   015E92  0105               	movlb	5	; () banked
 25187   015E94  6FAD               	movwf	printf@fmt& (0+255),b
 25188   015E96  0EFA               	movlw	high STR_81
 25189   015E98  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25190   015E9A  ECDA  F0FF         	call	_printf	;wreg free
 25191   015E9E  EF2C  F0AF         	goto	l24263
 25192   015EA2                     l24273:
 25193                           
 25194                           ; BSR set to: 7
 25195                           ;../src/w65_main.c: 339:      adr = adr0 = header->load_p;
 25196   015EA2  EE20 F010          	lfsr	2,16
 25197   015EA6  5113               	movf	load_program@header& (0+255),w,b
 25198   015EA8  26D9               	addwf	fsr2l,f,c
 25199   015EAA  5114               	movf	(load_program@header+1)& (0+255),w,b
 25200   015EAC  22DA               	addwfc	fsr2h,f,c
 25201   015EAE  C4DE F702          	movff	postinc2,load_program@adr0
 25202   015EB2  C4DE F703          	movff	postinc2,load_program@adr0+1
 25203   015EB6  C4DE F704          	movff	postinc2,load_program@adr0+2
 25204   015EBA  C4DE F705          	movff	postinc2,load_program@adr0+3
 25205   015EBE  C702  F70A         	movff	load_program@adr0,load_program@adr
 25206   015EC2  C703  F70B         	movff	load_program@adr0+1,load_program@adr+1
 25207   015EC6  C704  F70C         	movff	load_program@adr0+2,load_program@adr+2
 25208   015ECA  C705  F70D         	movff	load_program@adr0+3,load_program@adr+3
 25209   015ECE                     
 25210                           ; BSR set to: 7
 25211                           ;../src/w65_main.c: 340:      if (!load_flg) {
 25212   015ECE  51C9               	movf	_load_flg& (0+255),w,b
 25213   015ED0  A4D8               	btfss	status,2,c
 25214   015ED2  EF6D  F0AF         	goto	u33861
 25215   015ED6  EF6F  F0AF         	goto	u33860
 25216   015EDA                     u33861:
 25217   015EDA  EF5D  F0B0         	goto	l24305
 25218   015EDE                     u33860:
 25219   015EDE                     
 25220                           ; BSR set to: 7
 25221                           ;../src/w65_main.c: 341:       if ( header->bios_sw == 1 ) {
 25222   015EDE  EE20 F01F          	lfsr	2,31
 25223   015EE2  5113               	movf	load_program@header& (0+255),w,b
 25224   015EE4  26D9               	addwf	fsr2l,f,c
 25225   015EE6  5114               	movf	(load_program@header+1)& (0+255),w,b
 25226   015EE8  22DA               	addwfc	fsr2h,f,c
 25227   015EEA  04DE               	decf	postinc2,w,c
 25228   015EEC  A4D8               	btfss	status,2,c
 25229   015EEE  EF7B  F0AF         	goto	u33871
 25230   015EF2  EF7D  F0AF         	goto	u33870
 25231   015EF6                     u33871:
 25232   015EF6  EFCB  F0AF         	goto	l24295
 25233   015EFA                     u33870:
 25234   015EFA                     
 25235                           ; BSR set to: 7
 25236                           ;../src/w65_main.c: 342:        binv.sw = 1;
 25237   015EFA  0E01               	movlw	1
 25238   015EFC  0108               	movlb	8	; () banked
 25239   015EFE  6F78               	movwf	_binv& (0+255),b
 25240   015F00                     
 25241                           ; BSR set to: 8
 25242                           ;../src/w65_main.c: 343:        binv.caddr = header->cstart_addr;
 25243   015F00  0107               	movlb	7	; () banked
 25244   015F02  EE20 F001          	lfsr	2,1
 25245   015F06  5113               	movf	load_program@header& (0+255),w,b
 25246   015F08  26D9               	addwf	fsr2l,f,c
 25247   015F0A  5114               	movf	(load_program@header+1)& (0+255),w,b
 25248   015F0C  22DA               	addwfc	fsr2h,f,c
 25249   015F0E  C4DE F87F          	movff	postinc2,_binv+7
 25250   015F12  C4DD F880          	movff	postdec2,_binv+8
 25251   015F16                     
 25252                           ; BSR set to: 7
 25253                           ;../src/w65_main.c: 344:        binv.waddr = header->wstart_addr;
 25254   015F16  EE20 F004          	lfsr	2,4
 25255   015F1A  5113               	movf	load_program@header& (0+255),w,b
 25256   015F1C  26D9               	addwf	fsr2l,f,c
 25257   015F1E  5114               	movf	(load_program@header+1)& (0+255),w,b
 25258   015F20  22DA               	addwfc	fsr2h,f,c
 25259   015F22  C4DE F881          	movff	postinc2,_binv+9
 25260   015F26  C4DD F882          	movff	postdec2,_binv+10
 25261   015F2A                     
 25262                           ; BSR set to: 7
 25263                           ;../src/w65_main.c: 345:        binv.dp = header->direct_page;
 25264   015F2A  EE20 F006          	lfsr	2,6
 25265   015F2E  5113               	movf	load_program@header& (0+255),w,b
 25266   015F30  26D9               	addwf	fsr2l,f,c
 25267   015F32  5114               	movf	(load_program@header+1)& (0+255),w,b
 25268   015F34  22DA               	addwfc	fsr2h,f,c
 25269   015F36  C4DE F87D          	movff	postinc2,_binv+5
 25270   015F3A  C4DD F87E          	movff	postdec2,_binv+6
 25271   015F3E                     
 25272                           ; BSR set to: 7
 25273                           ;../src/w65_main.c: 346:        binv.pbnk = header->op1;
 25274   015F3E  C713  F4D9         	movff	load_program@header,fsr2l
 25275   015F42  C714  F4DA         	movff	load_program@header+1,fsr2h
 25276   015F46  50DF               	movf	indf2,w,c
 25277   015F48  0108               	movlb	8	; () banked
 25278   015F4A  6F7B               	movwf	(_binv+3)& (0+255),b
 25279   015F4C                     
 25280                           ; BSR set to: 8
 25281                           ;../src/w65_main.c: 347:        binv.dbnk = header->op2;
 25282   015F4C  0107               	movlb	7	; () banked
 25283   015F4E  EE20 F003          	lfsr	2,3
 25284   015F52  5113               	movf	load_program@header& (0+255),w,b
 25285   015F54  26D9               	addwf	fsr2l,f,c
 25286   015F56  5114               	movf	(load_program@header+1)& (0+255),w,b
 25287   015F58  22DA               	addwfc	fsr2h,f,c
 25288   015F5A  50DF               	movf	indf2,w,c
 25289   015F5C  0108               	movlb	8	; () banked
 25290   015F5E  6F7C               	movwf	(_binv+4)& (0+255),b
 25291   015F60                     
 25292                           ; BSR set to: 8
 25293                           ;../src/w65_main.c: 348:        binv.sw_816 = header->sw_816;
 25294   015F60  0107               	movlb	7	; () banked
 25295   015F62  EE20 F018          	lfsr	2,24
 25296   015F66  5113               	movf	load_program@header& (0+255),w,b
 25297   015F68  26D9               	addwf	fsr2l,f,c
 25298   015F6A  5114               	movf	(load_program@header+1)& (0+255),w,b
 25299   015F6C  22DA               	addwfc	fsr2h,f,c
 25300   015F6E  50DF               	movf	indf2,w,c
 25301   015F70  0108               	movlb	8	; () banked
 25302   015F72  6F83               	movwf	(_binv+11)& (0+255),b
 25303   015F74                     
 25304                           ; BSR set to: 8
 25305                           ;../src/w65_main.c: 349:        sprintf((char *)binv.fname, "%s", fname);
 25306   015F74  0E84               	movlw	low (_binv+12)
 25307   015F76  0105               	movlb	5	; () banked
 25308   015F78  6FAD               	movwf	sprintf@s& (0+255),b
 25309   015F7A  0E08               	movlw	high (_binv+12)
 25310   015F7C  6FAE               	movwf	(sprintf@s+1)& (0+255),b
 25311   015F7E  0EF6               	movlw	low STR_82
 25312   015F80  6FAF               	movwf	sprintf@fmt& (0+255),b
 25313   015F82  0EFF               	movlw	high STR_82
 25314   015F84  6FB0               	movwf	(sprintf@fmt+1)& (0+255),b
 25315   015F86  C700  F5B1         	movff	load_program@fname,?_sprintf+4
 25316   015F8A  C701  F5B2         	movff	load_program@fname+1,?_sprintf+5
 25317   015F8E  ECD8  F0FC         	call	_sprintf	;wreg free
 25318                           
 25319                           ;../src/w65_main.c: 350:       }
 25320   015F92  EF5D  F0B0         	goto	l24305
 25321   015F96                     l24295:
 25322                           
 25323                           ; BSR set to: 7
 25324                           ;../src/w65_main.c: 353:        fh.bios_sw = header->bios_sw;
 25325   015F96  EE20 F01F          	lfsr	2,31
 25326   015F9A  5113               	movf	load_program@header& (0+255),w,b
 25327   015F9C  26D9               	addwf	fsr2l,f,c
 25328   015F9E  5114               	movf	(load_program@header+1)& (0+255),w,b
 25329   015FA0  22DA               	addwfc	fsr2h,f,c
 25330   015FA2  50DF               	movf	indf2,w,c
 25331   015FA4  0108               	movlb	8	; () banked
 25332   015FA6  6FC1               	movwf	(_fh+31)& (0+255),b
 25333                           
 25334                           ;../src/w65_main.c: 354:        fh.load_p = header->load_p;
 25335   015FA8  0107               	movlb	7	; () banked
 25336   015FAA  EE20 F010          	lfsr	2,16
 25337   015FAE  5113               	movf	load_program@header& (0+255),w,b
 25338   015FB0  26D9               	addwf	fsr2l,f,c
 25339   015FB2  5114               	movf	(load_program@header+1)& (0+255),w,b
 25340   015FB4  22DA               	addwfc	fsr2h,f,c
 25341   015FB6  C4DE F8B2          	movff	postinc2,_fh+16
 25342   015FBA  C4DE F8B3          	movff	postinc2,_fh+17
 25343   015FBE  C4DE F8B4          	movff	postinc2,_fh+18
 25344   015FC2  C4DE F8B5          	movff	postinc2,_fh+19
 25345                           
 25346                           ;../src/w65_main.c: 355:        fh.sw_816 = header->sw_816;
 25347   015FC6  EE20 F018          	lfsr	2,24
 25348   015FCA  5113               	movf	load_program@header& (0+255),w,b
 25349   015FCC  26D9               	addwf	fsr2l,f,c
 25350   015FCE  5114               	movf	(load_program@header+1)& (0+255),w,b
 25351   015FD0  22DA               	addwfc	fsr2h,f,c
 25352   015FD2  50DF               	movf	indf2,w,c
 25353   015FD4  0108               	movlb	8	; () banked
 25354   015FD6  6FBA               	movwf	(_fh+24)& (0+255),b
 25355                           
 25356                           ;../src/w65_main.c: 356:        fh.cstart_addr = header->cstart_addr;
 25357   015FD8  0107               	movlb	7	; () banked
 25358   015FDA  EE20 F001          	lfsr	2,1
 25359   015FDE  5113               	movf	load_program@header& (0+255),w,b
 25360   015FE0  26D9               	addwf	fsr2l,f,c
 25361   015FE2  5114               	movf	(load_program@header+1)& (0+255),w,b
 25362   015FE4  22DA               	addwfc	fsr2h,f,c
 25363   015FE6  C4DE F8A3          	movff	postinc2,_fh+1
 25364   015FEA  C4DD F8A4          	movff	postdec2,_fh+2
 25365                           
 25366                           ;../src/w65_main.c: 357:        fh.wstart_addr = header->wstart_addr;
 25367   015FEE  EE20 F004          	lfsr	2,4
 25368   015FF2  5113               	movf	load_program@header& (0+255),w,b
 25369   015FF4  26D9               	addwf	fsr2l,f,c
 25370   015FF6  5114               	movf	(load_program@header+1)& (0+255),w,b
 25371   015FF8  22DA               	addwfc	fsr2h,f,c
 25372   015FFA  C4DE F8A6          	movff	postinc2,_fh+4
 25373   015FFE  C4DD F8A7          	movff	postdec2,_fh+5
 25374                           
 25375                           ;../src/w65_main.c: 358:        fh.picif_p = header->picif_p;
 25376   016002  EE20 F014          	lfsr	2,20
 25377   016006  5113               	movf	load_program@header& (0+255),w,b
 25378   016008  26D9               	addwf	fsr2l,f,c
 25379   01600A  5114               	movf	(load_program@header+1)& (0+255),w,b
 25380   01600C  22DA               	addwfc	fsr2h,f,c
 25381   01600E  C4DE F8B6          	movff	postinc2,_fh+20
 25382   016012  C4DE F8B7          	movff	postinc2,_fh+21
 25383   016016  C4DE F8B8          	movff	postinc2,_fh+22
 25384   01601A  C4DE F8B9          	movff	postinc2,_fh+23
 25385                           
 25386                           ;../src/w65_main.c: 359:        fh.irq_sw = header->irq_sw;
 25387   01601E  EE20 F019          	lfsr	2,25
 25388   016022  5113               	movf	load_program@header& (0+255),w,b
 25389   016024  26D9               	addwf	fsr2l,f,c
 25390   016026  5114               	movf	(load_program@header+1)& (0+255),w,b
 25391   016028  22DA               	addwfc	fsr2h,f,c
 25392   01602A  50DF               	movf	indf2,w,c
 25393   01602C  0108               	movlb	8	; () banked
 25394   01602E  6FBB               	movwf	(_fh+25)& (0+255),b
 25395                           
 25396                           ;../src/w65_main.c: 360:        fh.reg_tblp = header->reg_tblp;
 25397   016030  0107               	movlb	7	; () banked
 25398   016032  EE20 F01A          	lfsr	2,26
 25399   016036  5113               	movf	load_program@header& (0+255),w,b
 25400   016038  26D9               	addwf	fsr2l,f,c
 25401   01603A  5114               	movf	(load_program@header+1)& (0+255),w,b
 25402   01603C  22DA               	addwfc	fsr2h,f,c
 25403   01603E  C4DE F8BC          	movff	postinc2,_fh+26
 25404   016042  C4DD F8BD          	movff	postdec2,_fh+27
 25405                           
 25406                           ;../src/w65_main.c: 361:        fh.reg_tsize = header->reg_tsize;
 25407   016046  EE20 F01C          	lfsr	2,28
 25408   01604A  5113               	movf	load_program@header& (0+255),w,b
 25409   01604C  26D9               	addwf	fsr2l,f,c
 25410   01604E  5114               	movf	(load_program@header+1)& (0+255),w,b
 25411   016050  22DA               	addwfc	fsr2h,f,c
 25412   016052  C4DE F8BE          	movff	postinc2,_fh+28
 25413   016056  C4DD F8BF          	movff	postdec2,_fh+29
 25414                           
 25415                           ;../src/w65_main.c: 362:        fh.nmi_sw = header->nmi_sw;
 25416   01605A  EE20 F01E          	lfsr	2,30
 25417   01605E  5113               	movf	load_program@header& (0+255),w,b
 25418   016060  26D9               	addwf	fsr2l,f,c
 25419   016062  5114               	movf	(load_program@header+1)& (0+255),w,b
 25420   016064  22DA               	addwfc	fsr2h,f,c
 25421   016066  50DF               	movf	indf2,w,c
 25422   016068  0108               	movlb	8	; () banked
 25423   01606A  6FC0               	movwf	(_fh+30)& (0+255),b
 25424   01606C                     
 25425                           ; BSR set to: 8
 25426                           ;../src/w65_main.c: 364:        bioreq_ubuffadr = fh.picif_p;
 25427   01606C  C8B6  F7DF         	movff	_fh+20,_bioreq_ubuffadr
 25428   016070  C8B7  F7E0         	movff	_fh+21,_bioreq_ubuffadr+1
 25429   016074  C8B8  F7E1         	movff	_fh+22,_bioreq_ubuffadr+2
 25430   016078  C8B9  F7E2         	movff	_fh+23,_bioreq_ubuffadr+3
 25431   01607C                     
 25432                           ; BSR set to: 8
 25433                           ;../src/w65_main.c: 365:        bioreq_cbuffadr = bioreq_ubuffadr + 2;
 25434   01607C  0E02               	movlw	2
 25435   01607E  0107               	movlb	7	; () banked
 25436   016080  25DF               	addwf	_bioreq_ubuffadr& (0+255),w,b
 25437   016082  0108               	movlb	8	; () banked
 25438   016084  6F24               	movwf	_bioreq_cbuffadr& (0+255),b
 25439   016086  0E00               	movlw	0
 25440   016088  0107               	movlb	7	; () banked
 25441   01608A  21E0               	addwfc	(_bioreq_ubuffadr+1)& (0+255),w,b
 25442   01608C  0108               	movlb	8	; () banked
 25443   01608E  6F25               	movwf	(_bioreq_cbuffadr+1)& (0+255),b
 25444   016090  0E00               	movlw	0
 25445   016092  0107               	movlb	7	; () banked
 25446   016094  21E1               	addwfc	(_bioreq_ubuffadr+2)& (0+255),w,b
 25447   016096  0108               	movlb	8	; () banked
 25448   016098  6F26               	movwf	(_bioreq_cbuffadr+2)& (0+255),b
 25449   01609A  0E00               	movlw	0
 25450   01609C  0107               	movlb	7	; () banked
 25451   01609E  21E2               	addwfc	(_bioreq_ubuffadr+3)& (0+255),w,b
 25452   0160A0  0108               	movlb	8	; () banked
 25453   0160A2  6F27               	movwf	(_bioreq_cbuffadr+3)& (0+255),b
 25454   0160A4                     
 25455                           ; BSR set to: 8
 25456                           ;../src/w65_main.c: 366:        if ( !fh.bios_sw ) binv.sw = 0;
 25457   0160A4  51C1               	movf	(_fh+31)& (0+255),w,b
 25458   0160A6  A4D8               	btfss	status,2,c
 25459   0160A8  EF58  F0B0         	goto	u33881
 25460   0160AC  EF5A  F0B0         	goto	u33880
 25461   0160B0                     u33881:
 25462   0160B0  EF5D  F0B0         	goto	l1558
 25463   0160B4                     u33880:
 25464   0160B4                     
 25465                           ; BSR set to: 8
 25466   0160B4  6B78               	clrf	_binv& (0+255),b
 25467   0160B6  EF5D  F0B0         	goto	l24305
 25468   0160BA                     l1558:
 25469   0160BA                     l24305:
 25470                           
 25471                           ;../src/w65_main.c: 371:    write_sram(adr, (uint8_t *)rdbuf, (unsigned int)br);
 25472   0160BA  C70A  F504         	movff	load_program@adr,write_sram@addr
 25473   0160BE  C70B  F505         	movff	load_program@adr+1,write_sram@addr+1
 25474   0160C2  C70C  F506         	movff	load_program@adr+2,write_sram@addr+2
 25475   0160C6  C70D  F507         	movff	load_program@adr+3,write_sram@addr+3
 25476   0160CA  C706  F508         	movff	load_program@rdbuf,write_sram@buf
 25477   0160CE  C707  F509         	movff	load_program@rdbuf+1,write_sram@buf+1
 25478   0160D2  C710  F50A         	movff	load_program@br,write_sram@len
 25479   0160D6  C711  F50B         	movff	load_program@br+1,write_sram@len+1
 25480   0160DA  EC9F  F0E8         	call	_write_sram	;wreg free
 25481   0160DE                     
 25482                           ;../src/w65_main.c: 372:    adr += (uint32_t)br;
 25483   0160DE  0107               	movlb	7	; () banked
 25484   0160E0  5110               	movf	load_program@br& (0+255),w,b
 25485   0160E2  270A               	addwf	load_program@adr& (0+255),f,b
 25486   0160E4  5111               	movf	(load_program@br+1)& (0+255),w,b
 25487   0160E6  230B               	addwfc	(load_program@adr+1)& (0+255),f,b
 25488   0160E8  0E00               	movlw	0
 25489   0160EA  230C               	addwfc	(load_program@adr+2)& (0+255),f,b
 25490   0160EC  0E00               	movlw	0
 25491   0160EE  230D               	addwfc	(load_program@adr+3)& (0+255),f,b
 25492   0160F0                     
 25493                           ; BSR set to: 7
 25494                           ;../src/w65_main.c: 373:    cnt -= (uint16_t)br;
 25495   0160F0  5110               	movf	load_program@br& (0+255),w,b
 25496   0160F2  5F0E               	subwf	load_program@cnt& (0+255),f,b
 25497   0160F4  5111               	movf	(load_program@br+1)& (0+255),w,b
 25498   0160F6  5B0F               	subwfb	(load_program@cnt+1)& (0+255),f,b
 25499   0160F8                     
 25500                           ; BSR set to: 7
 25501                           ;../src/w65_main.c: 374:    if (btr > (UINT)cnt) btr = (UINT)cnt;
 25502   0160F8  5108               	movf	load_program@btr& (0+255),w,b
 25503   0160FA  5D0E               	subwf	load_program@cnt& (0+255),w,b
 25504   0160FC  5109               	movf	(load_program@btr+1)& (0+255),w,b
 25505   0160FE  590F               	subwfb	(load_program@cnt+1)& (0+255),w,b
 25506   016100  B0D8               	btfsc	status,0,c
 25507   016102  EF85  F0B0         	goto	u33891
 25508   016106  EF87  F0B0         	goto	u33890
 25509   01610A                     u33891:
 25510   01610A  EF8B  F0B0         	goto	l24315
 25511   01610E                     u33890:
 25512   01610E                     
 25513                           ; BSR set to: 7
 25514   01610E  C70E  F708         	movff	load_program@cnt,load_program@btr
 25515   016112  C70F  F709         	movff	load_program@cnt+1,load_program@btr+1
 25516   016116                     l24315:
 25517                           
 25518                           ; BSR set to: 7
 25519                           ;../src/w65_main.c: 321:  while( cnt ) {
 25520   016116  510E               	movf	load_program@cnt& (0+255),w,b
 25521   016118  110F               	iorwf	(load_program@cnt+1)& (0+255),w,b
 25522   01611A  A4D8               	btfss	status,2,c
 25523   01611C  EF92  F0B0         	goto	u33901
 25524   016120  EF94  F0B0         	goto	u33900
 25525   016124                     u33901:
 25526   016124  EFCB  F0AE         	goto	l24249
 25527   016128                     u33900:
 25528   016128                     l24317:
 25529                           
 25530                           ; BSR set to: 7
 25531                           ;../src/w65_main.c: 378:  if (fr == FR_OK) {
 25532   016128  5112               	movf	load_program@fr& (0+255),w,b
 25533   01612A  A4D8               	btfss	status,2,c
 25534   01612C  EF9A  F0B0         	goto	u33911
 25535   016130  EF9C  F0B0         	goto	u33910
 25536   016134                     u33911:
 25537   016134  EFB5  F0B0         	goto	l24321
 25538   016138                     u33910:
 25539   016138                     
 25540                           ; BSR set to: 7
 25541                           ;../src/w65_main.c: 379:   printf("Load %s : Adr = $%06lX, Size = $%04X\r\n", fname, adr
      +                          0, file_size);
 25542   016138  0E1A               	movlw	low STR_83
 25543   01613A  0105               	movlb	5	; () banked
 25544   01613C  6FAD               	movwf	printf@fmt& (0+255),b
 25545   01613E  0EF6               	movlw	high STR_83
 25546   016140  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25547   016142  C700  F5AF         	movff	load_program@fname,?_printf+2
 25548   016146  C701  F5B0         	movff	load_program@fname+1,?_printf+3
 25549   01614A  C702  F5B1         	movff	load_program@adr0,?_printf+4
 25550   01614E  C703  F5B2         	movff	load_program@adr0+1,?_printf+5
 25551   016152  C704  F5B3         	movff	load_program@adr0+2,?_printf+6
 25552   016156  C705  F5B4         	movff	load_program@adr0+3,?_printf+7
 25553   01615A  C7BB  F5B5         	movff	_file_size,?_printf+8
 25554   01615E  C7BC  F5B6         	movff	_file_size+1,?_printf+9
 25555   016162  ECDA  F0FF         	call	_printf	;wreg free
 25556                           
 25557                           ;../src/w65_main.c: 380:  }
 25558   016166  EFC5  F0B0         	goto	l1569
 25559   01616A                     l24321:
 25560                           
 25561                           ; BSR set to: 7
 25562                           ;../src/w65_main.c: 382:   if (fr != FR_INVALID_OBJECT) printf("File Load Error.\r\n");
 25563   01616A  0E09               	movlw	9
 25564   01616C  1912               	xorwf	load_program@fr& (0+255),w,b
 25565   01616E  B4D8               	btfsc	status,2,c
 25566   016170  EFBC  F0B0         	goto	u33921
 25567   016174  EFBE  F0B0         	goto	u33920
 25568   016178                     u33921:
 25569   016178  EFC5  F0B0         	goto	l1569
 25570   01617C                     u33920:
 25571   01617C                     
 25572                           ; BSR set to: 7
 25573   01617C  0EFC               	movlw	low STR_84
 25574   01617E  0105               	movlb	5	; () banked
 25575   016180  6FAD               	movwf	printf@fmt& (0+255),b
 25576   016182  0EFC               	movlw	high STR_84
 25577   016184  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 25578   016186  ECDA  F0FF         	call	_printf	;wreg free
 25579   01618A                     l1569:
 25580                           
 25581                           ;../src/w65_main.c: 384:  f_close(&rom_fl);
 25582   01618A  0ED6               	movlw	low _rom_fl
 25583   01618C  0106               	movlb	6	; () banked
 25584   01618E  6F2F               	movwf	f_close@fp& (0+255),b
 25585   016190  0E0F               	movlw	high _rom_fl
 25586   016192  6F30               	movwf	(f_close@fp+1)& (0+255),b
 25587   016194  ECDB  F0FB         	call	_f_close	;wreg free
 25588   016198  EFAD  F0AE         	goto	l24241
 25589   01619C                     l1552:
 25590                           
 25591                           ; BSR set to: 7
 25592   01619C  0012               	return		;funcret
 25593   01619E                     __end_of_load_program:
 25594                           	callstack 0
 25595                           
 25596 ;; *************** function _strstr *****************
 25597 ;; Defined at:
 25598 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strstr.c"
 25599 ;; Parameters:    Size  Location     Type
 25600 ;;  h               2   10[COMRAM] PTR const unsigned char 
 25601 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 25602 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 25603 ;;  n               2   12[COMRAM] PTR const unsigned char 
 25604 ;;		 -> STR_131(2), STR_129(3), STR_69(1), STR_68(2), 
 25605 ;;		 -> STR_67(5), STR_66(6), STR_65(5), STR_64(6), 
 25606 ;;		 -> STR_63(8), STR_62(4), STR_61(5), STR_60(7), 
 25607 ;;		 -> STR_59(7), STR_58(5), STR_57(3), STR_56(4), 
 25608 ;;		 -> STR_55(3), STR_54(8), STR_53(8), STR_52(11), 
 25609 ;;		 -> STR_51(11), STR_47(8), 
 25610 ;; Auto vars:     Size  Location     Type
 25611 ;;  nl              2   14[COMRAM] unsigned int 
 25612 ;; Return value:  Size  Location     Type
 25613 ;;                  2   10[COMRAM] PTR unsigned char 
 25614 ;; Registers used:
 25615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25616 ;; Tracked objects:
 25617 ;;		On entry : 0/0
 25618 ;;		On exit  : 0/0
 25619 ;;		Unchanged: 0/0
 25620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 25621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25624 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25625 ;;Total ram usage:        6 bytes
 25626 ;; Hardware stack levels used: 1
 25627 ;; Hardware stack levels required when called: 2
 25628 ;; This function calls:
 25629 ;;		_strchr
 25630 ;;		_strlen
 25631 ;;		_strncmp
 25632 ;; This function is called by:
 25633 ;;		_main
 25634 ;;		_load_program
 25635 ;;		_load_config
 25636 ;;		_boot_file
 25637 ;;		_load_file
 25638 ;;		_mon_prog
 25639 ;;		_see_file
 25640 ;; This function uses a non-reentrant model
 25641 ;;
 25642                           
 25643                           	psect	text52
 25644   01DD9E                     __ptext52:
 25645                           	callstack 0
 25646   01DD9E                     _strstr:
 25647                           	callstack 124
 25648   01DD9E  500D               	movf	strstr@n^(0+1280),w,c
 25649   01DDA0  100E               	iorwf	(strstr@n+1)^(0+1280),w,c
 25650   01DDA2  B4D8               	btfsc	status,2,c
 25651   01DDA4  EFD6  F0EE         	goto	u33001
 25652   01DDA8  EFD8  F0EE         	goto	u33000
 25653   01DDAC                     u33001:
 25654   01DDAC  EF39  F0EF         	goto	l23731
 25655   01DDB0                     u33000:
 25656   01DDB0  C50D  F504         	movff	strstr@n,strlen@s
 25657   01DDB4  C50E  F505         	movff	strstr@n+1,strlen@s+1
 25658   01DDB8  ECB0  F0FC         	call	_strlen	;wreg free
 25659   01DDBC  C504  F50F         	movff	?_strlen,strstr@nl
 25660   01DDC0  C505  F510         	movff	?_strlen+1,strstr@nl+1
 25661   01DDC4  EF17  F0EF         	goto	l23727
 25662   01DDC8                     l23719:
 25663   01DDC8  C50B  F504         	movff	strstr@h,strncmp@l
 25664   01DDCC  C50C  F505         	movff	strstr@h+1,strncmp@l+1
 25665   01DDD0  C50D  F506         	movff	strstr@n,strncmp@r
 25666   01DDD4  C50E  F507         	movff	strstr@n+1,strncmp@r+1
 25667   01DDD8  C50F  F508         	movff	strstr@nl,strncmp@n
 25668   01DDDC  C510  F509         	movff	strstr@nl+1,strncmp@n+1
 25669   01DDE0  EC83  F0E6         	call	_strncmp	;wreg free
 25670   01DDE4  5004               	movf	?_strncmp^(0+1280),w,c
 25671   01DDE6  1005               	iorwf	(?_strncmp+1)^(0+1280),w,c
 25672   01DDE8  A4D8               	btfss	status,2,c
 25673   01DDEA  EFF9  F0EE         	goto	u33011
 25674   01DDEE  EFFB  F0EE         	goto	u33010
 25675   01DDF2                     u33011:
 25676   01DDF2  EF01  F0EF         	goto	l23725
 25677   01DDF6                     u33010:
 25678   01DDF6  C50B  F50B         	movff	strstr@h,?_strstr
 25679   01DDFA  C50C  F50C         	movff	strstr@h+1,?_strstr+1
 25680   01DDFE  EF3D  F0EF         	goto	l3633
 25681   01DE02                     l23725:
 25682   01DE02  0E01               	movlw	1
 25683   01DE04  240B               	addwf	strstr@h^(0+1280),w,c
 25684   01DE06  6E04               	movwf	strchr@s^(0+1280),c
 25685   01DE08  0E00               	movlw	0
 25686   01DE0A  200C               	addwfc	(strstr@h+1)^(0+1280),w,c
 25687   01DE0C  6E05               	movwf	(strchr@s+1)^(0+1280),c
 25688   01DE0E  C50D  F4F6         	movff	strstr@n,tblptrl
 25689   01DE12  C50E  F4F7         	movff	strstr@n+1,tblptrh
 25690   01DE16                     	if	0	;tblptru may be non-zero
 25691   01DE16                     	endif
 25692   01DE16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25693   01DE16  0E00               	movlw	low (__mediumconst shr (0+16))
 25694   01DE18  6EF8               	movwf	tblptru,c
 25695   01DE1A                     	endif
 25696   01DE1A  0008               	tblrd		*
 25697   01DE1C  50F5               	movf	tablat,w,c
 25698   01DE1E  6E06               	movwf	strchr@c^(0+1280),c
 25699   01DE20  6A07               	clrf	(strchr@c+1)^(0+1280),c
 25700   01DE22  EC75  F0F8         	call	_strchr	;wreg free
 25701   01DE26  C504  F50B         	movff	?_strchr,strstr@h
 25702   01DE2A  C505  F50C         	movff	?_strchr+1,strstr@h+1
 25703   01DE2E                     l23727:
 25704   01DE2E  500B               	movf	strstr@h^(0+1280),w,c
 25705   01DE30  100C               	iorwf	(strstr@h+1)^(0+1280),w,c
 25706   01DE32  B4D8               	btfsc	status,2,c
 25707   01DE34  EF1E  F0EF         	goto	u33021
 25708   01DE38  EF20  F0EF         	goto	u33020
 25709   01DE3C                     u33021:
 25710   01DE3C  EF39  F0EF         	goto	l23731
 25711   01DE40                     u33020:
 25712   01DE40  C50B  F4F6         	movff	strstr@h,tblptrl
 25713   01DE44  C50C  F4F7         	movff	strstr@h+1,tblptrh
 25714   01DE48  0E00               	movlw	low (__mediumconst shr (0+16))
 25715   01DE4A  6EF8               	movwf	tblptru,c
 25716   01DE4C  0E3F               	movlw	(high __ramtop+-1)
 25717   01DE4E  64F7               	cpfsgt	tblptrh,c
 25718   01DE50  D003               	bra	u33037
 25719   01DE52  0008               	tblrd		*
 25720   01DE54  50F5               	movf	tablat,w,c
 25721   01DE56  D005               	bra	u33030
 25722   01DE58                     u33037:
 25723   01DE58  C4F6 F4E9          	movff	tblptrl,fsr0l
 25724   01DE5C  C4F7 F4EA          	movff	tblptrh,fsr0h
 25725   01DE60  50EF               	movf	indf0,w,c
 25726   01DE62                     u33030:
 25727   01DE62  0900               	iorlw	0
 25728   01DE64  A4D8               	btfss	status,2,c
 25729   01DE66  EF37  F0EF         	goto	u33041
 25730   01DE6A  EF39  F0EF         	goto	u33040
 25731   01DE6E                     u33041:
 25732   01DE6E  EFE4  F0EE         	goto	l23719
 25733   01DE72                     u33040:
 25734   01DE72                     l23731:
 25735   01DE72  0E00               	movlw	0
 25736   01DE74  6E0B               	movwf	?_strstr^(0+1280),c
 25737   01DE76  0E00               	movlw	0
 25738   01DE78  6E0C               	movwf	(?_strstr+1)^(0+1280),c
 25739   01DE7A                     l3633:
 25740   01DE7A  0012               	return		;funcret
 25741   01DE7C                     __end_of_strstr:
 25742                           	callstack 0
 25743                           
 25744 ;; *************** function _strncmp *****************
 25745 ;; Defined at:
 25746 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;  l               2    3[COMRAM] PTR const unsigned char 
 25749 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 25750 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 25751 ;;  r               2    5[COMRAM] PTR const unsigned char 
 25752 ;;		 -> STR_131(2), STR_129(3), STR_69(1), STR_68(2), 
 25753 ;;		 -> STR_67(5), STR_66(6), STR_65(5), STR_64(6), 
 25754 ;;		 -> STR_63(8), STR_62(4), STR_61(5), STR_60(7), 
 25755 ;;		 -> STR_59(7), STR_58(5), STR_57(3), STR_56(4), 
 25756 ;;		 -> STR_55(3), STR_54(8), STR_53(8), STR_52(11), 
 25757 ;;		 -> STR_51(11), STR_47(8), 
 25758 ;;  n               2    7[COMRAM] unsigned int 
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;		None
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  2    3[COMRAM] int 
 25763 ;; Registers used:
 25764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 0/0
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 25770 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25773 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25774 ;;Total ram usage:        7 bytes
 25775 ;; Hardware stack levels used: 1
 25776 ;; Hardware stack levels required when called: 1
 25777 ;; This function calls:
 25778 ;;		Nothing
 25779 ;; This function is called by:
 25780 ;;		_strstr
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text53
 25785   01CD06                     __ptext53:
 25786                           	callstack 0
 25787   01CD06                     _strncmp:
 25788                           	callstack 124
 25789   01CD06  0608               	decf	strncmp@n^(0+1280),f,c
 25790   01CD08  A0D8               	btfss	status,0,c
 25791   01CD0A  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 25792   01CD0C  2808               	incf	strncmp@n^(0+1280),w,c
 25793   01CD0E  E106               	bnz	u20291
 25794   01CD10  2809               	incf	(strncmp@n+1)^(0+1280),w,c
 25795   01CD12  A4D8               	btfss	status,2,c
 25796   01CD14  EF8E  F0E6         	goto	u20291
 25797   01CD18  EF90  F0E6         	goto	u20290
 25798   01CD1C                     u20291:
 25799   01CD1C  EF9D  F0E6         	goto	l15875
 25800   01CD20                     u20290:
 25801   01CD20  0E00               	movlw	0
 25802   01CD22  6E05               	movwf	(?_strncmp+1)^(0+1280),c
 25803   01CD24  0E00               	movlw	0
 25804   01CD26  6E04               	movwf	?_strncmp^(0+1280),c
 25805   01CD28  EF10  F0E7         	goto	l3640
 25806   01CD2C                     l15873:
 25807   01CD2C  4A04               	infsnz	strncmp@l^(0+1280),f,c
 25808   01CD2E  2A05               	incf	(strncmp@l+1)^(0+1280),f,c
 25809   01CD30  4A06               	infsnz	strncmp@r^(0+1280),f,c
 25810   01CD32  2A07               	incf	(strncmp@r+1)^(0+1280),f,c
 25811   01CD34  0608               	decf	strncmp@n^(0+1280),f,c
 25812   01CD36  A0D8               	btfss	status,0,c
 25813   01CD38  0609               	decf	(strncmp@n+1)^(0+1280),f,c
 25814   01CD3A                     l15875:
 25815   01CD3A  C504  F4F6         	movff	strncmp@l,tblptrl
 25816   01CD3E  C505  F4F7         	movff	strncmp@l+1,tblptrh
 25817   01CD42  0E00               	movlw	low (__mediumconst shr (0+16))
 25818   01CD44  6EF8               	movwf	tblptru,c
 25819   01CD46  0E3F               	movlw	(high __ramtop+-1)
 25820   01CD48  64F7               	cpfsgt	tblptrh,c
 25821   01CD4A  D003               	bra	u20307
 25822   01CD4C  0008               	tblrd		*
 25823   01CD4E  50F5               	movf	tablat,w,c
 25824   01CD50  D005               	bra	u20300
 25825   01CD52                     u20307:
 25826   01CD52  C4F6 F4E9          	movff	tblptrl,fsr0l
 25827   01CD56  C4F7 F4EA          	movff	tblptrh,fsr0h
 25828   01CD5A  50EF               	movf	indf0,w,c
 25829   01CD5C                     u20300:
 25830   01CD5C  0900               	iorlw	0
 25831   01CD5E  B4D8               	btfsc	status,2,c
 25832   01CD60  EFB4  F0E6         	goto	u20311
 25833   01CD64  EFB6  F0E6         	goto	u20310
 25834   01CD68                     u20311:
 25835   01CD68  EFF1  F0E6         	goto	l15883
 25836   01CD6C                     u20310:
 25837   01CD6C  C506  F4F6         	movff	strncmp@r,tblptrl
 25838   01CD70  C507  F4F7         	movff	strncmp@r+1,tblptrh
 25839   01CD74                     	if	0	;tblptru may be non-zero
 25840   01CD74                     	endif
 25841   01CD74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25842   01CD74  0E00               	movlw	low (__mediumconst shr (0+16))
 25843   01CD76  6EF8               	movwf	tblptru,c
 25844   01CD78                     	endif
 25845   01CD78  0008               	tblrd		*
 25846   01CD7A  50F5               	movf	tablat,w,c
 25847   01CD7C  0900               	iorlw	0
 25848   01CD7E  B4D8               	btfsc	status,2,c
 25849   01CD80  EFC4  F0E6         	goto	u20321
 25850   01CD84  EFC6  F0E6         	goto	u20320
 25851   01CD88                     u20321:
 25852   01CD88  EFF1  F0E6         	goto	l15883
 25853   01CD8C                     u20320:
 25854   01CD8C  5008               	movf	strncmp@n^(0+1280),w,c
 25855   01CD8E  1009               	iorwf	(strncmp@n+1)^(0+1280),w,c
 25856   01CD90  B4D8               	btfsc	status,2,c
 25857   01CD92  EFCD  F0E6         	goto	u20331
 25858   01CD96  EFCF  F0E6         	goto	u20330
 25859   01CD9A                     u20331:
 25860   01CD9A  EFF1  F0E6         	goto	l15883
 25861   01CD9E                     u20330:
 25862   01CD9E  C506  F4F6         	movff	strncmp@r,tblptrl
 25863   01CDA2  C507  F4F7         	movff	strncmp@r+1,tblptrh
 25864   01CDA6                     	if	0	;tblptru may be non-zero
 25865   01CDA6                     	endif
 25866   01CDA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25867   01CDA6  0E00               	movlw	low (__mediumconst shr (0+16))
 25868   01CDA8  6EF8               	movwf	tblptru,c
 25869   01CDAA                     	endif
 25870   01CDAA  0008               	tblrd		*
 25871   01CDAC  C4F5 F50A          	movff	tablat,??_strncmp
 25872   01CDB0  C504  F4F6         	movff	strncmp@l,tblptrl
 25873   01CDB4  C505  F4F7         	movff	strncmp@l+1,tblptrh
 25874   01CDB8  0E00               	movlw	low (__mediumconst shr (0+16))
 25875   01CDBA  6EF8               	movwf	tblptru,c
 25876   01CDBC  0E3F               	movlw	(high __ramtop+-1)
 25877   01CDBE  64F7               	cpfsgt	tblptrh,c
 25878   01CDC0  D003               	bra	u20347
 25879   01CDC2  0008               	tblrd		*
 25880   01CDC4  50F5               	movf	tablat,w,c
 25881   01CDC6  D005               	bra	u20345
 25882   01CDC8                     u20347:
 25883   01CDC8  C4F6 F4E9          	movff	tblptrl,fsr0l
 25884   01CDCC  C4F7 F4EA          	movff	tblptrh,fsr0h
 25885   01CDD0  50EF               	movf	indf0,w,c
 25886   01CDD2                     u20345:
 25887   01CDD2  180A               	xorwf	??_strncmp^(0+1280),w,c
 25888   01CDD4  B4D8               	btfsc	status,2,c
 25889   01CDD6  EFEF  F0E6         	goto	u20341
 25890   01CDDA  EFF1  F0E6         	goto	u20340
 25891   01CDDE                     u20341:
 25892   01CDDE  EF96  F0E6         	goto	l15873
 25893   01CDE2                     u20340:
 25894   01CDE2                     l15883:
 25895   01CDE2  C504  F4F6         	movff	strncmp@l,tblptrl
 25896   01CDE6  C505  F4F7         	movff	strncmp@l+1,tblptrh
 25897   01CDEA  0E00               	movlw	low (__mediumconst shr (0+16))
 25898   01CDEC  6EF8               	movwf	tblptru,c
 25899   01CDEE  0E3F               	movlw	(high __ramtop+-1)
 25900   01CDF0  64F7               	cpfsgt	tblptrh,c
 25901   01CDF2  D003               	bra	u20357
 25902   01CDF4  0008               	tblrd		*
 25903   01CDF6  50F5               	movf	tablat,w,c
 25904   01CDF8  D005               	bra	u20350
 25905   01CDFA                     u20357:
 25906   01CDFA  C4F6 F4E9          	movff	tblptrl,fsr0l
 25907   01CDFE  C4F7 F4EA          	movff	tblptrh,fsr0h
 25908   01CE02  50EF               	movf	indf0,w,c
 25909   01CE04                     u20350:
 25910   01CE04  6E0A               	movwf	??_strncmp^(0+1280),c
 25911   01CE06  C506  F4F6         	movff	strncmp@r,tblptrl
 25912   01CE0A  C507  F4F7         	movff	strncmp@r+1,tblptrh
 25913   01CE0E                     	if	0	;tblptru may be non-zero
 25914   01CE0E                     	endif
 25915   01CE0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25916   01CE0E  0E00               	movlw	low (__mediumconst shr (0+16))
 25917   01CE10  6EF8               	movwf	tblptru,c
 25918   01CE12                     	endif
 25919   01CE12  0008               	tblrd		*
 25920   01CE14  50F5               	movf	tablat,w,c
 25921   01CE16  5C0A               	subwf	??_strncmp^(0+1280),w,c
 25922   01CE18  6E04               	movwf	?_strncmp^(0+1280),c
 25923   01CE1A  6A05               	clrf	(?_strncmp+1)^(0+1280),c
 25924   01CE1C  A0D8               	btfss	status,0,c
 25925   01CE1E  0605               	decf	(?_strncmp+1)^(0+1280),f,c
 25926   01CE20                     l3640:
 25927   01CE20  0012               	return		;funcret
 25928   01CE22                     __end_of_strncmp:
 25929                           	callstack 0
 25930                           
 25931 ;; *************** function _strlen *****************
 25932 ;; Defined at:
 25933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
 25934 ;; Parameters:    Size  Location     Type
 25935 ;;  s               2    3[COMRAM] PTR const unsigned char 
 25936 ;;		 -> STR_131(2), STR_129(3), STR_69(1), STR_68(2), 
 25937 ;;		 -> STR_67(5), STR_66(6), STR_65(5), STR_64(6), 
 25938 ;;		 -> STR_63(8), STR_62(4), STR_61(5), STR_60(7), 
 25939 ;;		 -> STR_59(7), STR_58(5), STR_57(3), STR_56(4), 
 25940 ;;		 -> STR_55(3), STR_54(8), STR_53(8), STR_52(11), 
 25941 ;;		 -> STR_51(11), STR_47(8), f_printf@str(32), 
 25942 ;; Auto vars:     Size  Location     Type
 25943 ;;  a               2    5[COMRAM] PTR const unsigned char 
 25944 ;;		 -> STR_131(2), STR_129(3), STR_69(1), STR_68(2), 
 25945 ;;		 -> STR_67(5), STR_66(6), STR_65(5), STR_64(6), 
 25946 ;;		 -> STR_63(8), STR_62(4), STR_61(5), STR_60(7), 
 25947 ;;		 -> STR_59(7), STR_58(5), STR_57(3), STR_56(4), 
 25948 ;;		 -> STR_55(3), STR_54(8), STR_53(8), STR_52(11), 
 25949 ;;		 -> STR_51(11), STR_47(8), f_printf@str(32), 
 25950 ;; Return value:  Size  Location     Type
 25951 ;;                  2    3[COMRAM] unsigned int 
 25952 ;; Registers used:
 25953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25954 ;; Tracked objects:
 25955 ;;		On entry : 0/0
 25956 ;;		On exit  : 0/0
 25957 ;;		Unchanged: 0/0
 25958 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 25959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25963 ;;Total ram usage:        4 bytes
 25964 ;; Hardware stack levels used: 1
 25965 ;; Hardware stack levels required when called: 1
 25966 ;; This function calls:
 25967 ;;		Nothing
 25968 ;; This function is called by:
 25969 ;;		_main
 25970 ;;		_load_config
 25971 ;;		_strstr
 25972 ;;		_f_printf
 25973 ;; This function uses a non-reentrant model
 25974 ;;
 25975                           
 25976                           	psect	text54
 25977   01F960                     __ptext54:
 25978                           	callstack 0
 25979   01F960                     _strlen:
 25980                           	callstack 124
 25981   01F960  C504  F506         	movff	strlen@s,strlen@a
 25982   01F964  C505  F507         	movff	strlen@s+1,strlen@a+1
 25983   01F968  EFB8  F0FC         	goto	l15785
 25984   01F96C                     l15783:
 25985   01F96C  4A04               	infsnz	strlen@s^(0+1280),f,c
 25986   01F96E  2A05               	incf	(strlen@s+1)^(0+1280),f,c
 25987   01F970                     l15785:
 25988   01F970  C504  F4F6         	movff	strlen@s,tblptrl
 25989   01F974  C505  F4F7         	movff	strlen@s+1,tblptrh
 25990   01F978  0E00               	movlw	low (__mediumconst shr (0+16))
 25991   01F97A  6EF8               	movwf	tblptru,c
 25992   01F97C  0E3F               	movlw	(high __ramtop+-1)
 25993   01F97E  64F7               	cpfsgt	tblptrh,c
 25994   01F980  D003               	bra	u20157
 25995   01F982  0008               	tblrd		*
 25996   01F984  50F5               	movf	tablat,w,c
 25997   01F986  D005               	bra	u20150
 25998   01F988                     u20157:
 25999   01F988  C4F6 F4E9          	movff	tblptrl,fsr0l
 26000   01F98C  C4F7 F4EA          	movff	tblptrh,fsr0h
 26001   01F990  50EF               	movf	indf0,w,c
 26002   01F992                     u20150:
 26003   01F992  0900               	iorlw	0
 26004   01F994  A4D8               	btfss	status,2,c
 26005   01F996  EFCF  F0FC         	goto	u20161
 26006   01F99A  EFD1  F0FC         	goto	u20160
 26007   01F99E                     u20161:
 26008   01F99E  EFB6  F0FC         	goto	l15783
 26009   01F9A2                     u20160:
 26010   01F9A2  5006               	movf	strlen@a^(0+1280),w,c
 26011   01F9A4  5C04               	subwf	strlen@s^(0+1280),w,c
 26012   01F9A6  6E04               	movwf	?_strlen^(0+1280),c
 26013   01F9A8  5007               	movf	(strlen@a+1)^(0+1280),w,c
 26014   01F9AA  5805               	subwfb	(strlen@s+1)^(0+1280),w,c
 26015   01F9AC  6E05               	movwf	(?_strlen+1)^(0+1280),c
 26016   01F9AE  0012               	return		;funcret
 26017   01F9B0                     __end_of_strlen:
 26018                           	callstack 0
 26019                           
 26020 ;; *************** function _sprintf *****************
 26021 ;; Defined at:
 26022 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
 26023 ;; Parameters:    Size  Location     Type
 26024 ;;  s               2   77[BANK5 ] PTR unsigned char 
 26025 ;;		 -> fin_name(13), binv(42), 
 26026 ;;  fmt             2   79[BANK5 ] PTR const unsigned char 
 26027 ;;		 -> STR_108(3), STR_82(3), 
 26028 ;; Auto vars:     Size  Location     Type
 26029 ;;  f              11   85[BANK5 ] struct _IO_FILE
 26030 ;;  ap              2   83[BANK5 ] PTR void [1]
 26031 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26032 ;;  ret             2    0        int 
 26033 ;; Return value:  Size  Location     Type
 26034 ;;                  2   77[BANK5 ] int 
 26035 ;; Registers used:
 26036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26037 ;; Tracked objects:
 26038 ;;		On entry : 0/0
 26039 ;;		On exit  : 0/0
 26040 ;;		Unchanged: 0/0
 26041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26042 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26043 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26045 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26046 ;;Total ram usage:       19 bytes
 26047 ;; Hardware stack levels used: 1
 26048 ;; Hardware stack levels required when called: 8
 26049 ;; This function calls:
 26050 ;;		_vfprintf
 26051 ;; This function is called by:
 26052 ;;		_load_program
 26053 ;;		_boot_file
 26054 ;; This function uses a non-reentrant model
 26055 ;;
 26056                           
 26057                           	psect	text55
 26058   01F9B0                     __ptext55:
 26059                           	callstack 0
 26060   01F9B0                     _sprintf:
 26061                           	callstack 116
 26062   01F9B0  0EB1               	movlw	low (?_sprintf+4)
 26063   01F9B2  0105               	movlb	5	; () banked
 26064   01F9B4  6FB3               	movwf	sprintf@ap& (0+255),b
 26065   01F9B6  0E05               	movlw	high (?_sprintf+4)
 26066   01F9B8  6FB4               	movwf	(sprintf@ap+1)& (0+255),b
 26067   01F9BA  C5AD  F5B5         	movff	sprintf@s,sprintf@f
 26068   01F9BE  C5AE  F5B6         	movff	sprintf@s+1,sprintf@f+1
 26069   01F9C2                     
 26070                           ; BSR set to: 5
 26071   01F9C2  0E00               	movlw	0
 26072   01F9C4  6FB8               	movwf	(sprintf@f+3)& (0+255),b
 26073   01F9C6  0E00               	movlw	0
 26074   01F9C8  6FB7               	movwf	(sprintf@f+2)& (0+255),b
 26075   01F9CA                     
 26076                           ; BSR set to: 5
 26077   01F9CA  0E00               	movlw	0
 26078   01F9CC  6FBF               	movwf	(sprintf@f+10)& (0+255),b
 26079   01F9CE  0E00               	movlw	0
 26080   01F9D0  6FBE               	movwf	(sprintf@f+9)& (0+255),b
 26081   01F9D2                     
 26082                           ; BSR set to: 5
 26083   01F9D2  0EB5               	movlw	low sprintf@f
 26084   01F9D4  6FA5               	movwf	vfprintf@fp& (0+255),b
 26085   01F9D6  0E05               	movlw	high sprintf@f
 26086   01F9D8  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 26087   01F9DA  C5AF  F5A7         	movff	sprintf@fmt,vfprintf@fmt
 26088   01F9DE  C5B0  F5A8         	movff	sprintf@fmt+1,vfprintf@fmt+1
 26089   01F9E2  0EB3               	movlw	low sprintf@ap
 26090   01F9E4  6FA9               	movwf	vfprintf@ap& (0+255),b
 26091   01F9E6  0E05               	movlw	high sprintf@ap
 26092   01F9E8  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 26093   01F9EA  EC07  F0FC         	call	_vfprintf	;wreg free
 26094   01F9EE  0105               	movlb	5	; () banked
 26095   01F9F0  51B7               	movf	(sprintf@f+2)& (0+255),w,b
 26096   01F9F2  25AD               	addwf	sprintf@s& (0+255),w,b
 26097   01F9F4  6ED9               	movwf	fsr2l,c
 26098   01F9F6  51B8               	movf	(sprintf@f+3)& (0+255),w,b
 26099   01F9F8  21AE               	addwfc	(sprintf@s+1)& (0+255),w,b
 26100   01F9FA  6EDA               	movwf	fsr2h,c
 26101   01F9FC  6ADF               	clrf	indf2,c
 26102   01F9FE                     
 26103                           ; BSR set to: 5
 26104   01F9FE  0012               	return		;funcret
 26105   01FA00                     __end_of_sprintf:
 26106                           	callstack 0
 26107                           
 26108 ;; *************** function _drive_cpu *****************
 26109 ;; Defined at:
 26110 ;;		line 613 in file "../src/w65_main.c"
 26111 ;; Parameters:    Size  Location     Type
 26112 ;;		None
 26113 ;; Auto vars:     Size  Location     Type
 26114 ;;  rs              1  255[BANK6 ] enum E23452
 26115 ;; Return value:  Size  Location     Type
 26116 ;;                  1    wreg      enum E23452
 26117 ;; Registers used:
 26118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26119 ;; Tracked objects:
 26120 ;;		On entry : 0/0
 26121 ;;		On exit  : 0/0
 26122 ;;		Unchanged: 0/0
 26123 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26125 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26127 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26128 ;;Total ram usage:        1 bytes
 26129 ;; Hardware stack levels used: 1
 26130 ;; Hardware stack levels required when called: 24
 26131 ;; This function calls:
 26132 ;;		_board_event_loop
 26133 ;;		_board_event_loop1
 26134 ;;		_timer_off
 26135 ;;		_timer_on
 26136 ;; This function is called by:
 26137 ;;		_setup_monitor
 26138 ;;		_boot_file
 26139 ;;		_return_cpu
 26140 ;;		_wstart_prog
 26141 ;;		_restart_prog
 26142 ;;		_mon_prog
 26143 ;; This function uses a non-reentrant model
 26144 ;;
 26145                           
 26146                           	psect	text56
 26147   01FD40                     __ptext56:
 26148                           	callstack 0
 26149   01FD40                     _drive_cpu:
 26150                           	callstack 101
 26151   01FD40                     
 26152                           ;../src/w65_main.c: 615:  FRESULT rs;;../src/w65_main.c: 617:  nmi_sig = 0;
 26153   01FD40  0107               	movlb	7	; () banked
 26154   01FD42  6BCA               	clrf	_nmi_sig& (0+255),b
 26155   01FD44                     
 26156                           ; BSR set to: 7
 26157                           ;../src/w65_main.c: 618:  if( !fh.irq_sw ) {
 26158   01FD44  0108               	movlb	8	; () banked
 26159   01FD46  51BB               	movf	(_fh+25)& (0+255),w,b
 26160   01FD48  A4D8               	btfss	status,2,c
 26161   01FD4A  EFA9  F0FE         	goto	u33931
 26162   01FD4E  EFAB  F0FE         	goto	u33930
 26163   01FD52                     u33931:
 26164   01FD52  EFB1  F0FE         	goto	l24359
 26165   01FD56                     u33930:
 26166   01FD56                     
 26167                           ; BSR set to: 8
 26168                           ;../src/w65_main.c: 619:   timer_off();
 26169   01FD56  EC46  F001         	call	_timer_off	;wreg free
 26170   01FD5A                     
 26171                           ;../src/w65_main.c: 620:   board_event_loop1();
 26172   01FD5A  ECF5  F0F9         	call	_board_event_loop1	;wreg free
 26173                           
 26174                           ;../src/w65_main.c: 621:  }
 26175   01FD5E  EFB5  F0FE         	goto	l24363
 26176   01FD62                     l24359:
 26177                           
 26178                           ; BSR set to: 8
 26179                           ;../src/w65_main.c: 623:   timer_on();
 26180   01FD62  EC44  F001         	call	_timer_on	;wreg free
 26181   01FD66                     
 26182                           ;../src/w65_main.c: 624:   board_event_loop();
 26183   01FD66  ECD0  F0F5         	call	_board_event_loop	;wreg free
 26184   01FD6A                     l24363:
 26185                           
 26186                           ;../src/w65_main.c: 628:  rs = (FRESULT)(wup_flg - 1);
 26187   01FD6A  0107               	movlb	7	; () banked
 26188   01FD6C  05CB               	decf	_wup_flg& (0+255),w,b
 26189   01FD6E  0106               	movlb	6	; () banked
 26190   01FD70  6FFF               	movwf	drive_cpu@rs& (0+255),b
 26191   01FD72                     
 26192                           ; BSR set to: 6
 26193                           ;../src/w65_main.c: 629:  wup_flg = 0;
 26194   01FD72  0107               	movlb	7	; () banked
 26195   01FD74  6BCB               	clrf	_wup_flg& (0+255),b
 26196   01FD76                     
 26197                           ; BSR set to: 7
 26198                           ;../src/w65_main.c: 631:  return rs;
 26199   01FD76  0106               	movlb	6	; () banked
 26200   01FD78  51FF               	movf	drive_cpu@rs& (0+255),w,b
 26201   01FD7A                     
 26202                           ; BSR set to: 6
 26203   01FD7A  0012               	return		;funcret
 26204   01FD7C                     __end_of_drive_cpu:
 26205                           	callstack 0
 26206                           
 26207 ;; *************** function _timer_on *****************
 26208 ;; Defined at:
 26209 ;;		line 445 in file "../src/boards/w65_cmn.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;		None
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;		None
 26214 ;; Return value:  Size  Location     Type
 26215 ;;                  1    wreg      void 
 26216 ;; Registers used:
 26217 ;;		None
 26218 ;; Tracked objects:
 26219 ;;		On entry : 0/0
 26220 ;;		On exit  : 0/0
 26221 ;;		Unchanged: 0/0
 26222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26227 ;;Total ram usage:        0 bytes
 26228 ;; Hardware stack levels used: 1
 26229 ;; Hardware stack levels required when called: 1
 26230 ;; This function calls:
 26231 ;;		Nothing
 26232 ;; This function is called by:
 26233 ;;		_drive_cpu
 26234 ;; This function uses a non-reentrant model
 26235 ;;
 26236                           
 26237                           	psect	text57
 26238   000288                     __ptext57:
 26239                           	callstack 0
 26240   000288                     _timer_on:
 26241                           	callstack 123
 26242   000288                     
 26243                           ;../src/boards/w65_cmn.c: 446:  TMR0IE = 1;
 26244   000288  8EA1               	bsf	1185,7,c	;volatile
 26245   00028A  0012               	return		;funcret
 26246   00028C                     __end_of_timer_on:
 26247                           	callstack 0
 26248                           
 26249 ;; *************** function _timer_off *****************
 26250 ;; Defined at:
 26251 ;;		line 441 in file "../src/boards/w65_cmn.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;		None
 26256 ;; Return value:  Size  Location     Type
 26257 ;;                  1    wreg      void 
 26258 ;; Registers used:
 26259 ;;		None
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26269 ;;Total ram usage:        0 bytes
 26270 ;; Hardware stack levels used: 1
 26271 ;; Hardware stack levels required when called: 1
 26272 ;; This function calls:
 26273 ;;		Nothing
 26274 ;; This function is called by:
 26275 ;;		_drive_cpu
 26276 ;; This function uses a non-reentrant model
 26277 ;;
 26278                           
 26279                           	psect	text58
 26280   00028C                     __ptext58:
 26281                           	callstack 0
 26282   00028C                     _timer_off:
 26283                           	callstack 123
 26284   00028C                     
 26285                           ;../src/boards/w65_cmn.c: 442:  TMR0IE = 0;
 26286   00028C  9EA1               	bcf	1185,7,c	;volatile
 26287   00028E  0012               	return		;funcret
 26288   000290                     __end_of_timer_off:
 26289                           	callstack 0
 26290                           
 26291 ;; *************** function _board_event_loop1 *****************
 26292 ;; Defined at:
 26293 ;;		line 348 in file "../src/boards/w65_bd.c"
 26294 ;; Parameters:    Size  Location     Type
 26295 ;;		None
 26296 ;; Auto vars:     Size  Location     Type
 26297 ;;		None
 26298 ;; Return value:  Size  Location     Type
 26299 ;;                  1    wreg      void 
 26300 ;; Registers used:
 26301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26302 ;; Tracked objects:
 26303 ;;		On entry : 0/0
 26304 ;;		On exit  : 0/0
 26305 ;;		Unchanged: 0/0
 26306 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26311 ;;Total ram usage:        0 bytes
 26312 ;; Hardware stack levels used: 1
 26313 ;; Hardware stack levels required when called: 23
 26314 ;; This function calls:
 26315 ;;		_bus_hold_req
 26316 ;;		_bus_master_operation
 26317 ;;		_bus_release_req
 26318 ;; This function is called by:
 26319 ;;		_drive_cpu
 26320 ;; This function uses a non-reentrant model
 26321 ;;
 26322                           
 26323                           	psect	text59
 26324   01F3EA                     __ptext59:
 26325                           	callstack 0
 26326   01F3EA                     _board_event_loop1:
 26327                           	callstack 101
 26328   01F3EA                     l2233:
 26329   01F3EA                     l2234:
 26330   01F3EA  BACE               	btfsc	1230,5,c	;volatile
 26331   01F3EC  EFFA  F0F9         	goto	u33051
 26332   01F3F0  EFFC  F0F9         	goto	u33050
 26333   01F3F4                     u33051:
 26334   01F3F4  EFF5  F0F9         	goto	l2234
 26335   01F3F8                     u33050:
 26336   01F3F8                     
 26337                           ;../src/boards/w65_bd.c: 353:   CLCSELECT = 0;
 26338   01F3F8  0100               	movlb	0	; () banked
 26339   01F3FA  6BD5               	clrf	213,b	;volatile
 26340                           
 26341                           ;../src/boards/w65_bd.c: 354:   G2POL = 0;
 26342   01F3FC  93D7               	bcf	215,1,b	;volatile
 26343   01F3FE                     
 26344                           ; BSR set to: 0
 26345                           ;../src/boards/w65_bd.c: 355:   bus_hold_req();
 26346   01F3FE  EC30  F001         	call	_bus_hold_req	;wreg free
 26347   01F402                     
 26348                           ;../src/boards/w65_bd.c: 356:   bus_master_operation();
 26349   01F402  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 26350   01F406                     
 26351                           ;../src/boards/w65_bd.c: 357:   if(wup_flg) return;
 26352   01F406  0107               	movlb	7	; () banked
 26353   01F408  51CB               	movf	_wup_flg& (0+255),w,b
 26354   01F40A  B4D8               	btfsc	status,2,c
 26355   01F40C  EF0A  F0FA         	goto	u33061
 26356   01F410  EF0C  F0FA         	goto	u33060
 26357   01F414                     u33061:
 26358   01F414  EF0E  F0FA         	goto	l23757
 26359   01F418                     u33060:
 26360   01F418  EF2F  F0FA         	goto	l2238
 26361   01F41C                     l23757:
 26362                           
 26363                           ; BSR set to: 7
 26364                           ;../src/boards/w65_bd.c: 358:   bus_release_req();
 26365   01F41C  EC36  F001         	call	_bus_release_req	;wreg free
 26366   01F420                     
 26367                           ;../src/boards/w65_bd.c: 360:   G2POL = 1;
 26368   01F420  0100               	movlb	0	; () banked
 26369   01F422  83D7               	bsf	215,1,b	;volatile
 26370   01F424                     
 26371                           ; BSR set to: 0
 26372                           ;../src/boards/w65_bd.c: 362:   CLCSELECT = 1;
 26373   01F424  0E01               	movlw	1
 26374   01F426  6FD5               	movwf	213,b	;volatile
 26375   01F428                     
 26376                           ; BSR set to: 0
 26377                           ;../src/boards/w65_bd.c: 363:   G2POL = 1;
 26378   01F428  83D7               	bsf	215,1,b	;volatile
 26379   01F42A                     l2239:
 26380                           
 26381                           ; BSR set to: 0
 26382   01F42A  AFD4               	btfss	212,7,b	;volatile
 26383   01F42C  EF1A  F0FA         	goto	u33071
 26384   01F430  EF1C  F0FA         	goto	u33070
 26385   01F434                     u33071:
 26386   01F434  EF15  F0FA         	goto	l2239
 26387   01F438                     u33070:
 26388   01F438                     
 26389                           ; BSR set to: 0
 26390                           ;../src/boards/w65_bd.c: 365:   G2POL = 0;
 26391   01F438  93D7               	bcf	215,1,b	;volatile
 26392   01F43A                     
 26393                           ; BSR set to: 0
 26394                           ;../src/boards/w65_bd.c: 366:   CLCSELECT = 7;
 26395   01F43A  0E07               	movlw	7
 26396   01F43C  6FD5               	movwf	213,b	;volatile
 26397   01F43E                     
 26398                           ; BSR set to: 0
 26399                           ;../src/boards/w65_bd.c: 367:   G3POL = 1;
 26400   01F43E  85D7               	bsf	215,2,b	;volatile
 26401   01F440                     
 26402                           ; BSR set to: 0
 26403                           ;../src/boards/w65_bd.c: 368:   G3POL = 0;
 26404   01F440  95D7               	bcf	215,2,b	;volatile
 26405                           
 26406                           ;../src/boards/w65_bd.c: 370:   if (nmi_sig) {
 26407   01F442  0107               	movlb	7	; () banked
 26408   01F444  51CA               	movf	_nmi_sig& (0+255),w,b
 26409   01F446  B4D8               	btfsc	status,2,c
 26410   01F448  EF28  F0FA         	goto	u33081
 26411   01F44C  EF2A  F0FA         	goto	u33080
 26412   01F450                     u33081:
 26413   01F450  EFF5  F0F9         	goto	l2233
 26414   01F454                     u33080:
 26415   01F454                     
 26416                           ; BSR set to: 7
 26417                           ;../src/boards/w65_bd.c: 371:    LATE1 = 0;
 26418   01F454  92C2               	bcf	1218,1,c	;volatile
 26419                           
 26420                           ;../src/boards/w65_bd.c: 372:    LATE1 = 1;
 26421   01F456  82C2               	bsf	1218,1,c	;volatile
 26422                           
 26423                           ;../src/boards/w65_bd.c: 373:    nmi_sig = 0;
 26424   01F458  6BCA               	clrf	_nmi_sig& (0+255),b
 26425   01F45A  EFF5  F0F9         	goto	l2233
 26426   01F45E                     l2238:
 26427                           
 26428                           ; BSR set to: 7
 26429   01F45E  0012               	return		;funcret
 26430   01F460                     __end_of_board_event_loop1:
 26431                           	callstack 0
 26432                           
 26433 ;; *************** function _board_event_loop *****************
 26434 ;; Defined at:
 26435 ;;		line 307 in file "../src/boards/w65_bd.c"
 26436 ;; Parameters:    Size  Location     Type
 26437 ;;		None
 26438 ;; Auto vars:     Size  Location     Type
 26439 ;;		None
 26440 ;; Return value:  Size  Location     Type
 26441 ;;                  1    wreg      void 
 26442 ;; Registers used:
 26443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26444 ;; Tracked objects:
 26445 ;;		On entry : 0/0
 26446 ;;		On exit  : 0/0
 26447 ;;		Unchanged: 0/0
 26448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26453 ;;Total ram usage:        0 bytes
 26454 ;; Hardware stack levels used: 1
 26455 ;; Hardware stack levels required when called: 23
 26456 ;; This function calls:
 26457 ;;		_bus_hold_req
 26458 ;;		_bus_master_operation
 26459 ;;		_bus_release_req
 26460 ;;		_make_irq
 26461 ;; This function is called by:
 26462 ;;		_drive_cpu
 26463 ;; This function uses a non-reentrant model
 26464 ;;
 26465                           
 26466                           	psect	text60
 26467   01EBA0                     __ptext60:
 26468                           	callstack 0
 26469   01EBA0                     _board_event_loop:
 26470                           	callstack 101
 26471   01EBA0                     l2219:
 26472                           
 26473                           ;../src/boards/w65_bd.c: 310:   while (RA5) {
 26474   01EBA0  EFE1  F0F5         	goto	l23785
 26475   01EBA4                     l23775:
 26476                           
 26477                           ;../src/boards/w65_bd.c: 311:    if ( irq_flg >= 1 ) {
 26478   01EBA4  0107               	movlb	7	; () banked
 26479   01EBA6  51C7               	movf	_irq_flg& (0+255),w,b
 26480   01EBA8  B4D8               	btfsc	status,2,c
 26481   01EBAA  EFD9  F0F5         	goto	u33091
 26482   01EBAE  EFDB  F0F5         	goto	u33090
 26483   01EBB2                     u33091:
 26484   01EBB2  EFE1  F0F5         	goto	l23785
 26485   01EBB6                     u33090:
 26486   01EBB6                     
 26487                           ; BSR set to: 7
 26488                           ;../src/boards/w65_bd.c: 312:     make_irq();
 26489   01EBB6  ECEE  F0FF         	call	_make_irq	;wreg free
 26490   01EBBA                     
 26491                           ;../src/boards/w65_bd.c: 313:     GIE = 0;
 26492   01EBBA  9ED6               	bcf	1238,7,c	;volatile
 26493   01EBBC                     
 26494                           ;../src/boards/w65_bd.c: 314:     irq_flg = 0;
 26495   01EBBC  0107               	movlb	7	; () banked
 26496   01EBBE  6BC7               	clrf	_irq_flg& (0+255),b
 26497   01EBC0                     
 26498                           ; BSR set to: 7
 26499                           ;../src/boards/w65_bd.c: 315:     GIE = 1;
 26500   01EBC0  8ED6               	bsf	1238,7,c	;volatile
 26501   01EBC2                     l23785:
 26502                           
 26503                           ;../src/boards/w65_bd.c: 310:   while (RA5) {
 26504   01EBC2  BACE               	btfsc	1230,5,c	;volatile
 26505   01EBC4  EFE6  F0F5         	goto	u33101
 26506   01EBC8  EFE8  F0F5         	goto	u33100
 26507   01EBCC                     u33101:
 26508   01EBCC  EFD2  F0F5         	goto	l23775
 26509   01EBD0                     u33100:
 26510   01EBD0                     
 26511                           ;../src/boards/w65_bd.c: 319:   CLCSELECT = 0;
 26512   01EBD0  0100               	movlb	0	; () banked
 26513   01EBD2  6BD5               	clrf	213,b	;volatile
 26514                           
 26515                           ;../src/boards/w65_bd.c: 320:   G2POL = 0;
 26516   01EBD4  93D7               	bcf	215,1,b	;volatile
 26517   01EBD6                     
 26518                           ; BSR set to: 0
 26519                           ;../src/boards/w65_bd.c: 321:   bus_hold_req();
 26520   01EBD6  EC30  F001         	call	_bus_hold_req	;wreg free
 26521   01EBDA                     
 26522                           ;../src/boards/w65_bd.c: 322:   bus_master_operation();
 26523   01EBDA  ECD1  F0C5         	call	_bus_master_operation	;wreg free
 26524   01EBDE                     
 26525                           ;../src/boards/w65_bd.c: 323:   if(wup_flg) return;
 26526   01EBDE  0107               	movlb	7	; () banked
 26527   01EBE0  51CB               	movf	_wup_flg& (0+255),w,b
 26528   01EBE2  B4D8               	btfsc	status,2,c
 26529   01EBE4  EFF6  F0F5         	goto	u33111
 26530   01EBE8  EFF8  F0F5         	goto	u33110
 26531   01EBEC                     u33111:
 26532   01EBEC  EFFA  F0F5         	goto	l23795
 26533   01EBF0                     u33110:
 26534   01EBF0  EF1E  F0F6         	goto	l2225
 26535   01EBF4                     l23795:
 26536                           
 26537                           ; BSR set to: 7
 26538                           ;../src/boards/w65_bd.c: 324:   bus_release_req();
 26539   01EBF4  EC36  F001         	call	_bus_release_req	;wreg free
 26540   01EBF8                     
 26541                           ;../src/boards/w65_bd.c: 326:   G2POL = 1;
 26542   01EBF8  0100               	movlb	0	; () banked
 26543   01EBFA  83D7               	bsf	215,1,b	;volatile
 26544   01EBFC                     
 26545                           ; BSR set to: 0
 26546                           ;../src/boards/w65_bd.c: 328:   CLCSELECT = 1;
 26547   01EBFC  0E01               	movlw	1
 26548   01EBFE  6FD5               	movwf	213,b	;volatile
 26549   01EC00                     
 26550                           ; BSR set to: 0
 26551                           ;../src/boards/w65_bd.c: 329:   G2POL = 1;
 26552   01EC00  83D7               	bsf	215,1,b	;volatile
 26553   01EC02                     l2226:
 26554                           
 26555                           ; BSR set to: 0
 26556   01EC02  AFD4               	btfss	212,7,b	;volatile
 26557   01EC04  EF06  F0F6         	goto	u33121
 26558   01EC08  EF08  F0F6         	goto	u33120
 26559   01EC0C                     u33121:
 26560   01EC0C  EF01  F0F6         	goto	l2226
 26561   01EC10                     u33120:
 26562   01EC10                     
 26563                           ; BSR set to: 0
 26564                           ;../src/boards/w65_bd.c: 331:   G2POL = 0;
 26565   01EC10  93D7               	bcf	215,1,b	;volatile
 26566   01EC12                     
 26567                           ; BSR set to: 0
 26568                           ;../src/boards/w65_bd.c: 332:   CLCSELECT = 7;
 26569   01EC12  0E07               	movlw	7
 26570   01EC14  6FD5               	movwf	213,b	;volatile
 26571   01EC16                     
 26572                           ; BSR set to: 0
 26573                           ;../src/boards/w65_bd.c: 333:   G3POL = 1;
 26574   01EC16  85D7               	bsf	215,2,b	;volatile
 26575   01EC18                     
 26576                           ; BSR set to: 0
 26577                           ;../src/boards/w65_bd.c: 334:   G3POL = 0;
 26578   01EC18  95D7               	bcf	215,2,b	;volatile
 26579   01EC1A                     
 26580                           ; BSR set to: 0
 26581                           ;../src/boards/w65_bd.c: 336:   GIE = 0;
 26582   01EC1A  9ED6               	bcf	1238,7,c	;volatile
 26583   01EC1C                     
 26584                           ; BSR set to: 0
 26585                           ;../src/boards/w65_bd.c: 337:   irq_flg = 0;
 26586   01EC1C  0107               	movlb	7	; () banked
 26587   01EC1E  6BC7               	clrf	_irq_flg& (0+255),b
 26588   01EC20                     
 26589                           ; BSR set to: 7
 26590                           ;../src/boards/w65_bd.c: 338:   GIE = 1;
 26591   01EC20  8ED6               	bsf	1238,7,c	;volatile
 26592                           
 26593                           ;../src/boards/w65_bd.c: 340:   if (nmi_sig) {
 26594   01EC22  51CA               	movf	_nmi_sig& (0+255),w,b
 26595   01EC24  B4D8               	btfsc	status,2,c
 26596   01EC26  EF17  F0F6         	goto	u33131
 26597   01EC2A  EF19  F0F6         	goto	u33130
 26598   01EC2E                     u33131:
 26599   01EC2E  EFD0  F0F5         	goto	l2219
 26600   01EC32                     u33130:
 26601   01EC32                     
 26602                           ; BSR set to: 7
 26603                           ;../src/boards/w65_bd.c: 341:    LATE1 = 0;
 26604   01EC32  92C2               	bcf	1218,1,c	;volatile
 26605                           
 26606                           ;../src/boards/w65_bd.c: 342:    LATE1 = 1;
 26607   01EC34  82C2               	bsf	1218,1,c	;volatile
 26608                           
 26609                           ;../src/boards/w65_bd.c: 343:    nmi_sig = 0;
 26610   01EC36  6BCA               	clrf	_nmi_sig& (0+255),b
 26611   01EC38  EFD0  F0F5         	goto	l2219
 26612   01EC3C                     l2225:
 26613                           
 26614                           ; BSR set to: 7
 26615   01EC3C  0012               	return		;funcret
 26616   01EC3E                     __end_of_board_event_loop:
 26617                           	callstack 0
 26618                           
 26619 ;; *************** function _make_irq *****************
 26620 ;; Defined at:
 26621 ;;		line 40 in file "../src/boards/w65_cmn.c"
 26622 ;; Parameters:    Size  Location     Type
 26623 ;;		None
 26624 ;; Auto vars:     Size  Location     Type
 26625 ;;		None
 26626 ;; Return value:  Size  Location     Type
 26627 ;;                  1    wreg      void 
 26628 ;; Registers used:
 26629 ;;		wreg, status,2
 26630 ;; Tracked objects:
 26631 ;;		On entry : 0/0
 26632 ;;		On exit  : 0/0
 26633 ;;		Unchanged: 0/0
 26634 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26639 ;;Total ram usage:        0 bytes
 26640 ;; Hardware stack levels used: 1
 26641 ;; Hardware stack levels required when called: 1
 26642 ;; This function calls:
 26643 ;;		Nothing
 26644 ;; This function is called by:
 26645 ;;		_board_event_loop
 26646 ;; This function uses a non-reentrant model
 26647 ;;
 26648                           
 26649                           	psect	text61
 26650   01FFDC                     __ptext61:
 26651                           	callstack 0
 26652   01FFDC                     _make_irq:
 26653                           	callstack 122
 26654   01FFDC                     
 26655                           ;../src/boards/w65_cmn.c: 42:  CLCSELECT = 1;
 26656   01FFDC  0E01               	movlw	1
 26657   01FFDE  0100               	movlb	0	; () banked
 26658   01FFE0  6FD5               	movwf	213,b	;volatile
 26659   01FFE2                     
 26660                           ; BSR set to: 0
 26661                           ;../src/boards/w65_cmn.c: 43:  G2POL = 1;
 26662   01FFE2  83D7               	bsf	215,1,b	;volatile
 26663   01FFE4                     l2085:
 26664                           
 26665                           ; BSR set to: 0
 26666   01FFE4  AFD4               	btfss	212,7,b	;volatile
 26667   01FFE6  EFF7  F0FF         	goto	u32831
 26668   01FFEA  EFF9  F0FF         	goto	u32830
 26669   01FFEE                     u32831:
 26670   01FFEE  EFF2  F0FF         	goto	l2085
 26671   01FFF2                     u32830:
 26672   01FFF2                     
 26673                           ; BSR set to: 0
 26674                           ;../src/boards/w65_cmn.c: 45:  G2POL = 0;
 26675   01FFF2  93D7               	bcf	215,1,b	;volatile
 26676   01FFF4                     
 26677                           ; BSR set to: 0
 26678                           ;../src/boards/w65_cmn.c: 46:  CLCSELECT = 7;
 26679   01FFF4  0E07               	movlw	7
 26680   01FFF6  6FD5               	movwf	213,b	;volatile
 26681   01FFF8                     
 26682                           ; BSR set to: 0
 26683                           ;../src/boards/w65_cmn.c: 47:  G3POL = 1;
 26684   01FFF8  85D7               	bsf	215,2,b	;volatile
 26685   01FFFA                     
 26686                           ; BSR set to: 0
 26687                           ;../src/boards/w65_cmn.c: 48:  G3POL = 0;
 26688   01FFFA  95D7               	bcf	215,2,b	;volatile
 26689   01FFFC                     
 26690                           ; BSR set to: 0
 26691   01FFFC  0012               	return		;funcret
 26692   01FFFE                     __end_of_make_irq:
 26693                           	callstack 0
 26694                           
 26695 ;; *************** function _bus_release_req *****************
 26696 ;; Defined at:
 26697 ;;		line 295 in file "../src/boards/w65_bd.c"
 26698 ;; Parameters:    Size  Location     Type
 26699 ;;		None
 26700 ;; Auto vars:     Size  Location     Type
 26701 ;;		None
 26702 ;; Return value:  Size  Location     Type
 26703 ;;                  1    wreg      void 
 26704 ;; Registers used:
 26705 ;;		None
 26706 ;; Tracked objects:
 26707 ;;		On entry : 0/0
 26708 ;;		On exit  : 0/0
 26709 ;;		Unchanged: 0/0
 26710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26715 ;;Total ram usage:        0 bytes
 26716 ;; Hardware stack levels used: 1
 26717 ;; Hardware stack levels required when called: 1
 26718 ;; This function calls:
 26719 ;;		Nothing
 26720 ;; This function is called by:
 26721 ;;		_reset_cpu
 26722 ;;		_start_cpu
 26723 ;;		_start_W65
 26724 ;;		_board_event_loop
 26725 ;;		_board_event_loop1
 26726 ;;		_continue_action
 26727 ;; This function uses a non-reentrant model
 26728 ;;
 26729                           
 26730                           	psect	text62
 26731   00026C                     __ptext62:
 26732                           	callstack 0
 26733   00026C                     _bus_release_req:
 26734                           	callstack 123
 26735   00026C                     
 26736                           ;../src/boards/w65_bd.c: 297:  TRISC = 0xff;
 26737   00026C  68C8               	setf	200,c	;volatile
 26738                           
 26739                           ;../src/boards/w65_bd.c: 298:  TRISD = 0xff;
 26740   00026E  68C9               	setf	201,c	;volatile
 26741                           
 26742                           ;../src/boards/w65_bd.c: 300:  TRISA1 = 1;
 26743   000270  82C6               	bsf	1222,1,c	;volatile
 26744                           
 26745                           ;../src/boards/w65_bd.c: 301:  TRISA4 = 1;
 26746   000272  88C6               	bsf	1222,4,c	;volatile
 26747   000274  0012               	return		;funcret
 26748   000276                     __end_of_bus_release_req:
 26749                           	callstack 0
 26750                           
 26751 ;; *************** function _bus_master_operation *****************
 26752 ;; Defined at:
 26753 ;;		line 201 in file "../src/io_dos.c"
 26754 ;; Parameters:    Size  Location     Type
 26755 ;;		None
 26756 ;; Auto vars:     Size  Location     Type
 26757 ;;  cnt             2   20[BANK7 ] unsigned short 
 26758 ;;  buf             2   18[BANK7 ] PTR unsigned char 
 26759 ;;		 -> tmp_buf(512), 
 26760 ;; Return value:  Size  Location     Type
 26761 ;;                  1    wreg      void 
 26762 ;; Registers used:
 26763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 26764 ;; Tracked objects:
 26765 ;;		On entry : 0/0
 26766 ;;		On exit  : 0/0
 26767 ;;		Unchanged: 0/0
 26768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26770 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26772 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26773 ;;Total ram usage:        6 bytes
 26774 ;; Hardware stack levels used: 1
 26775 ;; Hardware stack levels required when called: 22
 26776 ;; This function calls:
 26777 ;;		_dsk_err
 26778 ;;		_get_str
 26779 ;;		_in_file
 26780 ;;		_putch
 26781 ;;		_read_sector
 26782 ;;		_read_sram
 26783 ;;		_setup_drive
 26784 ;;		_str_inf
 26785 ;;		_u_getch
 26786 ;;		_unimon_console
 26787 ;;		_write_sector
 26788 ;;		_write_sram
 26789 ;; This function is called by:
 26790 ;;		_board_event_loop
 26791 ;;		_board_event_loop1
 26792 ;; This function uses a non-reentrant model
 26793 ;;
 26794                           
 26795                           	psect	text63
 26796   018BA2                     __ptext63:
 26797                           	callstack 0
 26798   018BA2                     _bus_master_operation:
 26799                           	callstack 101
 26800   018BA2                     
 26801                           ;../src/io_dos.c: 202:  uint8_t *buf;;../src/io_dos.c: 203:  uint16_t cnt;;../src/io_dos
      +                          .c: 206:  read_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, (unsigned int)sizeof(crq_hdr))
      +                          ;
 26802   018BA2  C7DF  F504         	movff	_bioreq_ubuffadr,read_sram@addr
 26803   018BA6  C7E0  F505         	movff	_bioreq_ubuffadr+1,read_sram@addr+1
 26804   018BAA  C7E1  F506         	movff	_bioreq_ubuffadr+2,read_sram@addr+2
 26805   018BAE  C7E2  F507         	movff	_bioreq_ubuffadr+3,read_sram@addr+3
 26806   018BB2  0ECE               	movlw	low _req_tbl
 26807   018BB4  6E08               	movwf	read_sram@buf^(0+1280),c
 26808   018BB6  0E07               	movlw	high _req_tbl
 26809   018BB8  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 26810   018BBA  0E00               	movlw	0
 26811   018BBC  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 26812   018BBE  0E0D               	movlw	13
 26813   018BC0  6E0A               	movwf	read_sram@len^(0+1280),c
 26814   018BC2  EC0C  F0F2         	call	_read_sram	;wreg free
 26815   018BC6                     
 26816                           ;../src/io_dos.c: 208:  if (req_tbl.UREQ_COM) {
 26817   018BC6  0107               	movlb	7	; () banked
 26818   018BC8  51CE               	movf	_req_tbl& (0+255),w,b
 26819   018BCA  B4D8               	btfsc	status,2,c
 26820   018BCC  EFEA  F0C5         	goto	u32721
 26821   018BD0  EFEC  F0C5         	goto	u32720
 26822   018BD4                     u32721:
 26823   018BD4  EF02  F0C6         	goto	l23565
 26824   018BD8                     u32720:
 26825   018BD8                     
 26826                           ; BSR set to: 7
 26827                           ;../src/io_dos.c: 209:   unimon_console();
 26828   018BD8  EC2D  F0D6         	call	_unimon_console	;wreg free
 26829   018BDC                     
 26830                           ;../src/io_dos.c: 212:   write_sram(bioreq_ubuffadr, (uint8_t *)&req_tbl, 2);
 26831   018BDC  C7DF  F504         	movff	_bioreq_ubuffadr,write_sram@addr
 26832   018BE0  C7E0  F505         	movff	_bioreq_ubuffadr+1,write_sram@addr+1
 26833   018BE4  C7E1  F506         	movff	_bioreq_ubuffadr+2,write_sram@addr+2
 26834   018BE8  C7E2  F507         	movff	_bioreq_ubuffadr+3,write_sram@addr+3
 26835   018BEC  0ECE               	movlw	low _req_tbl
 26836   018BEE  6E08               	movwf	write_sram@buf^(0+1280),c
 26837   018BF0  0E07               	movlw	high _req_tbl
 26838   018BF2  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 26839   018BF4  0E00               	movlw	0
 26840   018BF6  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 26841   018BF8  0E02               	movlw	2
 26842   018BFA  6E0A               	movwf	write_sram@len^(0+1280),c
 26843   018BFC  EC9F  F0E8         	call	_write_sram	;wreg free
 26844                           
 26845                           ;../src/io_dos.c: 213:  }
 26846   018C00  EF2A  F0C7         	goto	l1282
 26847   018C04                     l23565:
 26848                           
 26849                           ; BSR set to: 7
 26850                           ;../src/io_dos.c: 215:   buf = &tmp_buf[0][0];
 26851   018C04  0EF8               	movlw	low _tmp_buf
 26852   018C06  6F12               	movwf	bus_master_operation@buf& (0+255),b
 26853   018C08  0E13               	movlw	high _tmp_buf
 26854   018C0A  6F13               	movwf	(bus_master_operation@buf+1)& (0+255),b
 26855                           
 26856                           ;../src/io_dos.c: 216:   switch (req_tbl.CREQ_COM) {
 26857   018C0C  EFF3  F0C6         	goto	l23615
 26858   018C10                     l23567:
 26859                           
 26860                           ; BSR set to: 7
 26861                           ;../src/io_dos.c: 219:     req_tbl.CBI_CHR = (uint8_t)(*get_char[cin_no])();
 26862   018C10  51CC               	movf	_cin_no& (0+255),w,b
 26863   018C12  0D03               	mullw	3
 26864   018C14  0ED9               	movlw	low _get_char
 26865   018C16  24F3               	addwf	243,w,c
 26866   018C18  6ED9               	movwf	fsr2l,c
 26867   018C1A  0E08               	movlw	high _get_char
 26868   018C1C  20F4               	addwfc	prodh,w,c
 26869   018C1E  6EDA               	movwf	fsr2h,c
 26870   018C20  D802               	call	u32738
 26871   018C22  EF1D  F0C6         	goto	u32739
 26872   018C26                     u32738:
 26873   018C26  0005               	push	
 26874   018C28  6EFA               	movwf	pclath,c
 26875   018C2A  50DE               	movf	postinc2,w,c
 26876   018C2C  6EFD               	movwf	tosl,c
 26877   018C2E  50DE               	movf	postinc2,w,c
 26878   018C30  6EFE               	movwf	tosh,c
 26879   018C32  50DE               	movf	postinc2,w,c
 26880   018C34  6EFF               	movwf	tosu,c
 26881   018C36  50FA               	movf	pclath,w,c
 26882   018C38  0012               	return		;indir
 26883   018C3A                     u32739:
 26884   018C3A  0107               	movlb	7	; () banked
 26885   018C3C  5100               	movf	?_in_file& (0+255),w,b
 26886   018C3E  6FD1               	movwf	(_req_tbl+3)& (0+255),b
 26887                           
 26888                           ;../src/io_dos.c: 220:     break;
 26889   018C40  EF16  F0C7         	goto	l1260
 26890   018C44                     l23569:
 26891                           
 26892                           ; BSR set to: 7
 26893                           ;../src/io_dos.c: 223:     putch((char)req_tbl.CBI_CHR);
 26894   018C44  51D1               	movf	(_req_tbl+3)& (0+255),w,b
 26895   018C46  EC07  F001         	call	_putch
 26896                           
 26897                           ;../src/io_dos.c: 224:     break;
 26898   018C4A  EF16  F0C7         	goto	l1260
 26899   018C4E                     l23571:
 26900                           
 26901                           ; BSR set to: 7
 26902                           ;../src/io_dos.c: 227:     if ( !cin_no ) req_tbl.CBI_CHR = (rx_cnt !=0) ? 255 : 0;
 26903   018C4E  51CC               	movf	_cin_no& (0+255),w,b
 26904   018C50  A4D8               	btfss	status,2,c
 26905   018C52  EF2D  F0C6         	goto	u32741
 26906   018C56  EF2F  F0C6         	goto	u32740
 26907   018C5A                     u32741:
 26908   018C5A  EF45  F0C6         	goto	l1263
 26909   018C5E                     u32740:
 26910   018C5E                     
 26911                           ; BSR set to: 7
 26912   018C5E  51C1               	movf	_rx_cnt& (0+255),w,b
 26913   018C60  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 26914   018C62  A4D8               	btfss	status,2,c
 26915   018C64  EF36  F0C6         	goto	u32751
 26916   018C68  EF38  F0C6         	goto	u32750
 26917   018C6C                     u32751:
 26918   018C6C  EF3E  F0C6         	goto	l23577
 26919   018C70                     u32750:
 26920   018C70                     
 26921                           ; BSR set to: 7
 26922   018C70  0E00               	movlw	0
 26923   018C72  6F11               	movwf	(_bus_master_operation$2630+1)& (0+255),b
 26924   018C74  0E00               	movlw	0
 26925   018C76  6F10               	movwf	_bus_master_operation$2630& (0+255),b
 26926   018C78  EF41  F0C6         	goto	l23579
 26927   018C7C                     l23577:
 26928                           
 26929                           ; BSR set to: 7
 26930   018C7C  0E00               	movlw	0
 26931   018C7E  6F11               	movwf	(_bus_master_operation$2630+1)& (0+255),b
 26932   018C80  6910               	setf	_bus_master_operation$2630& (0+255),b
 26933   018C82                     l23579:
 26934                           
 26935                           ; BSR set to: 7
 26936   018C82  C710  F7D1         	movff	_bus_master_operation$2630,_req_tbl+3
 26937   018C86  EF16  F0C7         	goto	l1260
 26938   018C8A                     l1263:
 26939                           
 26940                           ; BSR set to: 7
 26941   018C8A  69D1               	setf	(_req_tbl+3)& (0+255),b
 26942   018C8C  EF16  F0C7         	goto	l1260
 26943   018C90                     l1269:
 26944                           
 26945                           ; BSR set to: 7
 26946                           ;../src/io_dos.c: 231:     cnt = (uint16_t)req_tbl.CBI_CHR;
 26947   018C90  C7D1  F714         	movff	_req_tbl+3,bus_master_operation@cnt
 26948   018C94  6B15               	clrf	(bus_master_operation@cnt+1)& (0+255),b
 26949   018C96                     
 26950                           ; BSR set to: 7
 26951                           ;../src/io_dos.c: 233:     read_sram(req_tbl.data_adr, buf, cnt);
 26952   018C96  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 26953   018C9A  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 26954   018C9E  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 26955   018CA2  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 26956   018CA6  C712  F508         	movff	bus_master_operation@buf,read_sram@buf
 26957   018CAA  C713  F509         	movff	bus_master_operation@buf+1,read_sram@buf+1
 26958   018CAE  C714  F50A         	movff	bus_master_operation@cnt,read_sram@len
 26959   018CB2  C715  F50B         	movff	bus_master_operation@cnt+1,read_sram@len+1
 26960   018CB6  EC0C  F0F2         	call	_read_sram	;wreg free
 26961                           
 26962                           ;../src/io_dos.c: 234:     while( cnt ) {
 26963   018CBA  EF6C  F0C6         	goto	l23589
 26964   018CBE                     l23583:
 26965                           
 26966                           ; BSR set to: 7
 26967                           ;../src/io_dos.c: 235:      putch( *buf++);
 26968   018CBE  C712  F4D9         	movff	bus_master_operation@buf,fsr2l
 26969   018CC2  C713  F4DA         	movff	bus_master_operation@buf+1,fsr2h
 26970   018CC6  50DF               	movf	indf2,w,c
 26971   018CC8  EC07  F001         	call	_putch
 26972   018CCC  0107               	movlb	7	; () banked
 26973   018CCE  4B12               	infsnz	bus_master_operation@buf& (0+255),f,b
 26974   018CD0  2B13               	incf	(bus_master_operation@buf+1)& (0+255),f,b
 26975   018CD2                     
 26976                           ; BSR set to: 7
 26977                           ;../src/io_dos.c: 236:      cnt--;
 26978   018CD2  0714               	decf	bus_master_operation@cnt& (0+255),f,b
 26979   018CD4  A0D8               	btfss	status,0,c
 26980   018CD6  0715               	decf	(bus_master_operation@cnt+1)& (0+255),f,b
 26981   018CD8                     l23589:
 26982                           
 26983                           ;../src/io_dos.c: 234:     while( cnt ) {
 26984   018CD8  0107               	movlb	7	; () banked
 26985   018CDA  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 26986   018CDC  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 26987   018CDE  A4D8               	btfss	status,2,c
 26988   018CE0  EF74  F0C6         	goto	u32761
 26989   018CE4  EF76  F0C6         	goto	u32760
 26990   018CE8                     u32761:
 26991   018CE8  EF5F  F0C6         	goto	l23583
 26992   018CEC                     u32760:
 26993   018CEC  EF16  F0C7         	goto	l1260
 26994   018CF0                     l23591:
 26995                           
 26996                           ; BSR set to: 7
 26997                           ;../src/io_dos.c: 240:     if ( setup_drive() ) {
 26998   018CF0  EC30  F0FA         	call	_setup_drive	;wreg free
 26999   018CF4  5004               	movf	?_setup_drive^(0+1280),w,c
 27000   018CF6  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 27001   018CF8  B4D8               	btfsc	status,2,c
 27002   018CFA  EF81  F0C6         	goto	u32771
 27003   018CFE  EF83  F0C6         	goto	u32770
 27004   018D02                     u32771:
 27005   018D02  EF87  F0C6         	goto	l23595
 27006   018D06                     u32770:
 27007   018D06                     l23593:
 27008                           
 27009                           ;../src/io_dos.c: 241:      dsk_err();
 27010   018D06  EC3B  F001         	call	_dsk_err	;wreg free
 27011                           
 27012                           ;../src/io_dos.c: 242:      break;
 27013   018D0A  EF16  F0C7         	goto	l1260
 27014   018D0E                     l23595:
 27015                           
 27016                           ;../src/io_dos.c: 244:     if ( read_sector() ) {
 27017   018D0E  ECB4  F0E2         	call	_read_sector	;wreg free
 27018   018D12  0106               	movlb	6	; () banked
 27019   018D14  519A               	movf	?_read_sector& (0+255),w,b
 27020   018D16  119B               	iorwf	(?_read_sector+1)& (0+255),w,b
 27021   018D18  B4D8               	btfsc	status,2,c
 27022   018D1A  EF91  F0C6         	goto	u32781
 27023   018D1E  EF93  F0C6         	goto	u32780
 27024   018D22                     u32781:
 27025   018D22  EF16  F0C7         	goto	l1260
 27026   018D26                     u32780:
 27027   018D26  EF83  F0C6         	goto	l23593
 27028   018D2A                     l23599:
 27029                           
 27030                           ; BSR set to: 7
 27031                           ;../src/io_dos.c: 250:     if ( setup_drive() ) {
 27032   018D2A  EC30  F0FA         	call	_setup_drive	;wreg free
 27033   018D2E  5004               	movf	?_setup_drive^(0+1280),w,c
 27034   018D30  1005               	iorwf	(?_setup_drive+1)^(0+1280),w,c
 27035   018D32  B4D8               	btfsc	status,2,c
 27036   018D34  EF9E  F0C6         	goto	u32791
 27037   018D38  EFA0  F0C6         	goto	u32790
 27038   018D3C                     u32791:
 27039   018D3C  EFA2  F0C6         	goto	l23603
 27040   018D40                     u32790:
 27041   018D40  EF83  F0C6         	goto	l23593
 27042   018D44                     l23603:
 27043                           
 27044                           ;../src/io_dos.c: 254:     if ( write_sector() ) {
 27045   018D44  ECC6  F0DC         	call	_write_sector	;wreg free
 27046   018D48  0106               	movlb	6	; () banked
 27047   018D4A  519A               	movf	?_write_sector& (0+255),w,b
 27048   018D4C  119B               	iorwf	(?_write_sector+1)& (0+255),w,b
 27049   018D4E  B4D8               	btfsc	status,2,c
 27050   018D50  EFAC  F0C6         	goto	u32801
 27051   018D54  EFAE  F0C6         	goto	u32800
 27052   018D58                     u32801:
 27053   018D58  EF16  F0C7         	goto	l1260
 27054   018D5C                     u32800:
 27055   018D5C  EF83  F0C6         	goto	l23593
 27056   018D60                     l23607:
 27057                           
 27058                           ; BSR set to: 7
 27059                           ;../src/io_dos.c: 260:     cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.CB
      +                          I_CHR);
 27060   018D60  C712  F700         	movff	bus_master_operation@buf,str_inf@buf
 27061   018D64  C713  F701         	movff	bus_master_operation@buf+1,str_inf@buf+1
 27062   018D68  C7D1  F702         	movff	_req_tbl+3,str_inf@cnt
 27063   018D6C  51CC               	movf	_cin_no& (0+255),w,b
 27064   018D6E  0D03               	mullw	3
 27065   018D70  0ED3               	movlw	low _strin_func
 27066   018D72  24F3               	addwf	243,w,c
 27067   018D74  6ED9               	movwf	fsr2l,c
 27068   018D76  0E08               	movlw	high _strin_func
 27069   018D78  20F4               	addwfc	prodh,w,c
 27070   018D7A  6EDA               	movwf	fsr2h,c
 27071   018D7C  D802               	call	u32818
 27072   018D7E  EFCB  F0C6         	goto	u32819
 27073   018D82                     u32818:
 27074   018D82  0005               	push	
 27075   018D84  6EFA               	movwf	pclath,c
 27076   018D86  50DE               	movf	postinc2,w,c
 27077   018D88  6EFD               	movwf	tosl,c
 27078   018D8A  50DE               	movf	postinc2,w,c
 27079   018D8C  6EFE               	movwf	tosh,c
 27080   018D8E  50DE               	movf	postinc2,w,c
 27081   018D90  6EFF               	movwf	tosu,c
 27082   018D92  50FA               	movf	pclath,w,c
 27083   018D94  0012               	return		;indir
 27084   018D96                     u32819:
 27085   018D96  C700  F714         	movff	?_str_inf,bus_master_operation@cnt
 27086   018D9A  C701  F715         	movff	?_str_inf+1,bus_master_operation@cnt+1
 27087   018D9E                     
 27088                           ;../src/io_dos.c: 261:     req_tbl.CBI_CHR = (uint8_t)cnt;
 27089   018D9E  C714  F7D1         	movff	bus_master_operation@cnt,_req_tbl+3
 27090   018DA2                     
 27091                           ;../src/io_dos.c: 262:     if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt)
      +                          ;
 27092   018DA2  0107               	movlb	7	; () banked
 27093   018DA4  5114               	movf	bus_master_operation@cnt& (0+255),w,b
 27094   018DA6  1115               	iorwf	(bus_master_operation@cnt+1)& (0+255),w,b
 27095   018DA8  B4D8               	btfsc	status,2,c
 27096   018DAA  EFD9  F0C6         	goto	u32821
 27097   018DAE  EFDB  F0C6         	goto	u32820
 27098   018DB2                     u32821:
 27099   018DB2  EF16  F0C7         	goto	l1260
 27100   018DB6                     u32820:
 27101   018DB6                     
 27102                           ; BSR set to: 7
 27103   018DB6  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 27104   018DBA  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 27105   018DBE  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 27106   018DC2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 27107   018DC6  C712  F508         	movff	bus_master_operation@buf,write_sram@buf
 27108   018DCA  C713  F509         	movff	bus_master_operation@buf+1,write_sram@buf+1
 27109   018DCE  C714  F50A         	movff	bus_master_operation@cnt,write_sram@len
 27110   018DD2  C715  F50B         	movff	bus_master_operation@cnt+1,write_sram@len+1
 27111   018DD6  EC9F  F0E8         	call	_write_sram	;wreg free
 27112   018DDA  EF16  F0C7         	goto	l1260
 27113   018DDE                     l1281:
 27114                           
 27115                           ; BSR set to: 7
 27116                           ;../src/io_dos.c: 265:     wup_flg = req_tbl.CBI_CHR;
 27117   018DDE  C7D1  F7CB         	movff	_req_tbl+3,_wup_flg
 27118                           
 27119                           ;../src/io_dos.c: 266:   }
 27120   018DE2  EF16  F0C7         	goto	l1260
 27121   018DE6                     l23615:
 27122                           
 27123                           ; BSR set to: 7
 27124   018DE6  51D0               	movf	(_req_tbl+2)& (0+255),w,b
 27125                           
 27126                           ; Switch size 1, requested type "simple"
 27127                           ; Number of cases is 8, Range of values is 1 to 255
 27128                           ; switch strategies available:
 27129                           ; Name         Instructions Cycles
 27130                           ; simple_byte           25    13 (average)
 27131                           ;	Chosen strategy is simple_byte
 27132   018DE8  0A01               	xorlw	1	; case 1
 27133   018DEA  B4D8               	btfsc	status,2,c
 27134   018DEC  EF08  F0C6         	goto	l23567
 27135   018DF0  0A03               	xorlw	3	; case 2
 27136   018DF2  B4D8               	btfsc	status,2,c
 27137   018DF4  EF22  F0C6         	goto	l23569
 27138   018DF8  0A01               	xorlw	1	; case 3
 27139   018DFA  B4D8               	btfsc	status,2,c
 27140   018DFC  EF27  F0C6         	goto	l23571
 27141   018E00  0A07               	xorlw	7	; case 4
 27142   018E02  B4D8               	btfsc	status,2,c
 27143   018E04  EF48  F0C6         	goto	l1269
 27144   018E08  0A01               	xorlw	1	; case 5
 27145   018E0A  B4D8               	btfsc	status,2,c
 27146   018E0C  EF78  F0C6         	goto	l23591
 27147   018E10  0A03               	xorlw	3	; case 6
 27148   018E12  B4D8               	btfsc	status,2,c
 27149   018E14  EF95  F0C6         	goto	l23599
 27150   018E18  0A01               	xorlw	1	; case 7
 27151   018E1A  B4D8               	btfsc	status,2,c
 27152   018E1C  EFB0  F0C6         	goto	l23607
 27153   018E20  0AF8               	xorlw	248	; case 255
 27154   018E22  B4D8               	btfsc	status,2,c
 27155   018E24  EFEF  F0C6         	goto	l1281
 27156   018E28  EF16  F0C7         	goto	l1260
 27157   018E2C                     l1260:
 27158                           
 27159                           ;../src/io_dos.c: 267:   req_tbl.CREQ_COM = 0;
 27160   018E2C  0107               	movlb	7	; () banked
 27161   018E2E  6BD0               	clrf	(_req_tbl+2)& (0+255),b
 27162   018E30                     
 27163                           ; BSR set to: 7
 27164                           ;../src/io_dos.c: 269:   write_sram(bioreq_cbuffadr, (uint8_t *)&req_tbl.CREQ_COM, 2);
 27165   018E30  C824  F504         	movff	_bioreq_cbuffadr,write_sram@addr
 27166   018E34  C825  F505         	movff	_bioreq_cbuffadr+1,write_sram@addr+1
 27167   018E38  C826  F506         	movff	_bioreq_cbuffadr+2,write_sram@addr+2
 27168   018E3C  C827  F507         	movff	_bioreq_cbuffadr+3,write_sram@addr+3
 27169   018E40  0ED0               	movlw	low (_req_tbl+2)
 27170   018E42  6E08               	movwf	write_sram@buf^(0+1280),c
 27171   018E44  0E07               	movlw	high (_req_tbl+2)
 27172   018E46  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 27173   018E48  0E00               	movlw	0
 27174   018E4A  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 27175   018E4C  0E02               	movlw	2
 27176   018E4E  6E0A               	movwf	write_sram@len^(0+1280),c
 27177   018E50  EC9F  F0E8         	call	_write_sram	;wreg free
 27178   018E54                     l1282:
 27179   018E54  0012               	return		;funcret
 27180   018E56                     __end_of_bus_master_operation:
 27181                           	callstack 0
 27182                           
 27183 ;; *************** function _write_sector *****************
 27184 ;; Defined at:
 27185 ;;		line 76 in file "../src/io_dos.c"
 27186 ;; Parameters:    Size  Location     Type
 27187 ;;		None
 27188 ;; Auto vars:     Size  Location     Type
 27189 ;;  n               2  162[BANK6 ] unsigned int 
 27190 ;;  filep           2  159[BANK6 ] PTR struct .
 27191 ;;  fres            1  161[BANK6 ] enum E22894
 27192 ;; Return value:  Size  Location     Type
 27193 ;;                  2  154[BANK6 ] int 
 27194 ;; Registers used:
 27195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27196 ;; Tracked objects:
 27197 ;;		On entry : 0/0
 27198 ;;		On exit  : 0/0
 27199 ;;		Unchanged: 0/0
 27200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27201 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27202 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27203 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27204 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27205 ;;Total ram usage:       10 bytes
 27206 ;; Hardware stack levels used: 1
 27207 ;; Hardware stack levels required when called: 18
 27208 ;; This function calls:
 27209 ;;		_f_sync
 27210 ;;		_f_write
 27211 ;;		_printf
 27212 ;;		_read_sram
 27213 ;;		_seek_disk
 27214 ;;		_util_hexdump_sum
 27215 ;; This function is called by:
 27216 ;;		_bus_master_operation
 27217 ;; This function uses a non-reentrant model
 27218 ;;
 27219                           
 27220                           	psect	text64
 27221   01B98C                     __ptext64:
 27222                           	callstack 0
 27223   01B98C                     _write_sector:
 27224                           	callstack 104
 27225   01B98C                     
 27226                           ;../src/io_dos.c: 77:  unsigned int n;;../src/io_dos.c: 78:  FRESULT fres;;../src/io_dos
      +                          .c: 79:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 27227   01B98C  0107               	movlb	7	; () banked
 27228   01B98E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 27229   01B990  0D04               	mullw	4
 27230   01B992  0E4D               	movlw	low (_cpm_drives+2)
 27231   01B994  24F3               	addwf	243,w,c
 27232   01B996  6ED9               	movwf	fsr2l,c
 27233   01B998  0E09               	movlw	high (_cpm_drives+2)
 27234   01B99A  20F4               	addwfc	prodh,w,c
 27235   01B99C  6EDA               	movwf	fsr2h,c
 27236   01B99E  C4DE F69F          	movff	postinc2,write_sector@filep
 27237   01B9A2  C4DD F6A0          	movff	postdec2,write_sector@filep+1
 27238   01B9A6                     
 27239                           ; BSR set to: 7
 27240                           ;../src/io_dos.c: 81:  if (seek_disk()) return(-1);
 27241   01B9A6  ECF4  F0E5         	call	_seek_disk	;wreg free
 27242   01B9AA  0106               	movlb	6	; () banked
 27243   01B9AC  518B               	movf	?_seek_disk& (0+255),w,b
 27244   01B9AE  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 27245   01B9B0  B4D8               	btfsc	status,2,c
 27246   01B9B2  EFDD  F0DC         	goto	u32481
 27247   01B9B6  EFDF  F0DC         	goto	u32480
 27248   01B9BA                     u32481:
 27249   01B9BA  EFE4  F0DC         	goto	l23433
 27250   01B9BE                     u32480:
 27251   01B9BE                     l23431:
 27252   01B9BE  0106               	movlb	6	; () banked
 27253   01B9C0  699A               	setf	?_write_sector& (0+255),b
 27254   01B9C2  699B               	setf	(?_write_sector+1)& (0+255),b
 27255   01B9C4  EF8E  F0DD         	goto	l1207
 27256   01B9C8                     l23433:
 27257                           
 27258                           ; BSR set to: 6
 27259                           ;../src/io_dos.c: 84:  read_sram(req_tbl.data_adr, disk_buf, 128);
 27260   01B9C8  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 27261   01B9CC  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 27262   01B9D0  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 27263   01B9D4  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 27264   01B9D8  0E00               	movlw	low _disk_buf
 27265   01B9DA  6E08               	movwf	read_sram@buf^(0+1280),c
 27266   01B9DC  0E0A               	movlw	high _disk_buf
 27267   01B9DE  6E09               	movwf	(read_sram@buf+1)^(0+1280),c
 27268   01B9E0  0E00               	movlw	0
 27269   01B9E2  6E0B               	movwf	(read_sram@len+1)^(0+1280),c
 27270   01B9E4  0E80               	movlw	128
 27271   01B9E6  6E0A               	movwf	read_sram@len^(0+1280),c
 27272   01B9E8  EC0C  F0F2         	call	_read_sram	;wreg free
 27273   01B9EC                     
 27274                           ;../src/io_dos.c: 86:  if ((debug.disk_write) && (debug.disk_verbose) && !(debug.disk_ma
      +                          sk & (1 << req_tbl.disk_drive))) {
 27275   01B9EC  0108               	movlb	8	; () banked
 27276   01B9EE  5118               	movf	(_debug+2)& (0+255),w,b
 27277   01B9F0  B4D8               	btfsc	status,2,c
 27278   01B9F2  EFFD  F0DC         	goto	u32491
 27279   01B9F6  EFFF  F0DC         	goto	u32490
 27280   01B9FA                     u32491:
 27281   01B9FA  EF37  F0DD         	goto	l23443
 27282   01B9FE                     u32490:
 27283   01B9FE                     
 27284                           ; BSR set to: 8
 27285   01B9FE  5119               	movf	(_debug+3)& (0+255),w,b
 27286   01BA00  B4D8               	btfsc	status,2,c
 27287   01BA02  EF05  F0DD         	goto	u32501
 27288   01BA06  EF07  F0DD         	goto	u32500
 27289   01BA0A                     u32501:
 27290   01BA0A  EF37  F0DD         	goto	l23443
 27291   01BA0E                     u32500:
 27292   01BA0E                     
 27293                           ; BSR set to: 8
 27294   01BA0E  C7D2  F69C         	movff	_req_tbl+4,??_write_sector
 27295   01BA12  0E01               	movlw	1
 27296   01BA14  0106               	movlb	6	; () banked
 27297   01BA16  6F9D               	movwf	(??_write_sector+1)& (0+255),b
 27298   01BA18  0E00               	movlw	0
 27299   01BA1A  6F9E               	movwf	(??_write_sector+2)& (0+255),b
 27300   01BA1C  2B9C               	incf	??_write_sector& (0+255),f,b
 27301   01BA1E  EF14  F0DD         	goto	u32514
 27302   01BA22                     u32515:
 27303   01BA22  90D8               	bcf	status,0,c
 27304   01BA24  379D               	rlcf	(??_write_sector+1)& (0+255),f,b
 27305   01BA26  379E               	rlcf	(??_write_sector+2)& (0+255),f,b
 27306   01BA28                     u32514:
 27307   01BA28  2F9C               	decfsz	??_write_sector& (0+255),f,b
 27308   01BA2A  EF11  F0DD         	goto	u32515
 27309   01BA2E  0108               	movlb	8	; () banked
 27310   01BA30  511A               	movf	(_debug+4)& (0+255),w,b
 27311   01BA32  0106               	movlb	6	; () banked
 27312   01BA34  179D               	andwf	(??_write_sector+1)& (0+255),f,b
 27313   01BA36  0108               	movlb	8	; () banked
 27314   01BA38  511B               	movf	(_debug+5)& (0+255),w,b
 27315   01BA3A  0106               	movlb	6	; () banked
 27316   01BA3C  179E               	andwf	(??_write_sector+2)& (0+255),f,b
 27317   01BA3E  519D               	movf	(??_write_sector+1)& (0+255),w,b
 27318   01BA40  119E               	iorwf	(??_write_sector+2)& (0+255),w,b
 27319   01BA42  A4D8               	btfss	status,2,c
 27320   01BA44  EF26  F0DD         	goto	u32521
 27321   01BA48  EF28  F0DD         	goto	u32520
 27322   01BA4C                     u32521:
 27323   01BA4C  EF37  F0DD         	goto	l23443
 27324   01BA50                     u32520:
 27325   01BA50                     
 27326                           ; BSR set to: 6
 27327                           ;../src/io_dos.c: 87:   util_hexdump_sum("buf: ", disk_buf, 128);
 27328   01BA50  0E91               	movlw	low STR_36
 27329   01BA52  0105               	movlb	5	; () banked
 27330   01BA54  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 27331   01BA56  0EFF               	movlw	high STR_36
 27332   01BA58  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 27333   01BA5A  0E00               	movlw	low _disk_buf
 27334   01BA5C  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 27335   01BA5E  0E0A               	movlw	high _disk_buf
 27336   01BA60  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 27337   01BA62  0E00               	movlw	0
 27338   01BA64  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 27339   01BA66  0E80               	movlw	128
 27340   01BA68  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 27341   01BA6A  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 27342   01BA6E                     l23443:
 27343                           
 27344                           ;../src/io_dos.c: 91:  if ((fres = f_write(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 27345   01BA6E  C69F  F662         	movff	write_sector@filep,f_write@fp
 27346   01BA72  C6A0  F663         	movff	write_sector@filep+1,f_write@fp+1
 27347   01BA76  0E00               	movlw	low _disk_buf
 27348   01BA78  0106               	movlb	6	; () banked
 27349   01BA7A  6F64               	movwf	f_write@buff& (0+255),b
 27350   01BA7C  0E0A               	movlw	high _disk_buf
 27351   01BA7E  6F65               	movwf	(f_write@buff+1)& (0+255),b
 27352   01BA80  0E00               	movlw	0
 27353   01BA82  6F67               	movwf	(f_write@btw+1)& (0+255),b
 27354   01BA84  0E80               	movlw	128
 27355   01BA86  6F66               	movwf	f_write@btw& (0+255),b
 27356   01BA88  0EA2               	movlw	low write_sector@n
 27357   01BA8A  6F68               	movwf	f_write@bw& (0+255),b
 27358   01BA8C  0E06               	movlw	high write_sector@n
 27359   01BA8E  6F69               	movwf	(f_write@bw+1)& (0+255),b
 27360   01BA90  EC9C  F08A         	call	_f_write	;wreg free
 27361   01BA94  0106               	movlb	6	; () banked
 27362   01BA96  6FA1               	movwf	write_sector@fres& (0+255),b
 27363   01BA98  51A1               	movf	write_sector@fres& (0+255),w,b
 27364   01BA9A  A4D8               	btfss	status,2,c
 27365   01BA9C  EF52  F0DD         	goto	u32531
 27366   01BAA0  EF54  F0DD         	goto	u32530
 27367   01BAA4                     u32531:
 27368   01BAA4  EF5E  F0DD         	goto	l23447
 27369   01BAA8                     u32530:
 27370   01BAA8                     
 27371                           ; BSR set to: 6
 27372   01BAA8  0E80               	movlw	128
 27373   01BAAA  19A2               	xorwf	write_sector@n& (0+255),w,b
 27374   01BAAC  11A3               	iorwf	(write_sector@n+1)& (0+255),w,b
 27375   01BAAE  B4D8               	btfsc	status,2,c
 27376   01BAB0  EF5C  F0DD         	goto	u32541
 27377   01BAB4  EF5E  F0DD         	goto	u32540
 27378   01BAB8                     u32541:
 27379   01BAB8  EF6E  F0DD         	goto	l23455
 27380   01BABC                     u32540:
 27381   01BABC                     l23447:
 27382                           
 27383                           ; BSR set to: 6
 27384                           ;../src/io_dos.c: 92:   printf("f_write(): ERROR res=%d, n=%d\n\r", fres, n);
 27385   01BABC  0E77               	movlw	low STR_37
 27386   01BABE  0105               	movlb	5	; () banked
 27387   01BAC0  6FAD               	movwf	printf@fmt& (0+255),b
 27388   01BAC2  0EF8               	movlw	high STR_37
 27389   01BAC4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27390   01BAC6  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 27391   01BACA  6BB0               	clrf	(?_printf+3)& (0+255),b
 27392   01BACC  C6A2  F5B1         	movff	write_sector@n,?_printf+4
 27393   01BAD0  C6A3  F5B2         	movff	write_sector@n+1,?_printf+5
 27394   01BAD4  ECDA  F0FF         	call	_printf	;wreg free
 27395   01BAD8  EFDF  F0DC         	goto	l23431
 27396   01BADC                     l23455:
 27397                           
 27398                           ; BSR set to: 6
 27399   01BADC  C69F  F624         	movff	write_sector@filep,f_sync@fp
 27400   01BAE0  C6A0  F625         	movff	write_sector@filep+1,f_sync@fp+1
 27401   01BAE4  EC6D  F0CE         	call	_f_sync	;wreg free
 27402   01BAE8  0106               	movlb	6	; () banked
 27403   01BAEA  6FA1               	movwf	write_sector@fres& (0+255),b
 27404   01BAEC  51A1               	movf	write_sector@fres& (0+255),w,b
 27405   01BAEE  B4D8               	btfsc	status,2,c
 27406   01BAF0  EF7C  F0DD         	goto	u32551
 27407   01BAF4  EF7E  F0DD         	goto	u32550
 27408   01BAF8                     u32551:
 27409   01BAF8  EF8A  F0DD         	goto	l23463
 27410   01BAFC                     u32550:
 27411   01BAFC                     
 27412                           ; BSR set to: 6
 27413                           ;../src/io_dos.c: 96:   printf("f_sync(): ERROR %d\n\r", fres);
 27414   01BAFC  0E70               	movlw	low STR_38
 27415   01BAFE  0105               	movlb	5	; () banked
 27416   01BB00  6FAD               	movwf	printf@fmt& (0+255),b
 27417   01BB02  0EFC               	movlw	high STR_38
 27418   01BB04  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 27419   01BB06  C6A1  F5AF         	movff	write_sector@fres,?_printf+2
 27420   01BB0A  6BB0               	clrf	(?_printf+3)& (0+255),b
 27421   01BB0C  ECDA  F0FF         	call	_printf	;wreg free
 27422   01BB10  EFDF  F0DC         	goto	l23431
 27423   01BB14                     l23463:
 27424                           
 27425                           ; BSR set to: 6
 27426                           ;../src/io_dos.c: 99:  return(0);
 27427   01BB14  0E00               	movlw	0
 27428   01BB16  6F9B               	movwf	(?_write_sector+1)& (0+255),b
 27429   01BB18  0E00               	movlw	0
 27430   01BB1A  6F9A               	movwf	?_write_sector& (0+255),b
 27431   01BB1C                     l1207:
 27432                           
 27433                           ; BSR set to: 6
 27434   01BB1C  0012               	return		;funcret
 27435   01BB1E                     __end_of_write_sector:
 27436                           	callstack 0
 27437                           
 27438 ;; *************** function _f_write *****************
 27439 ;; Defined at:
 27440 ;;		line 4016 in file "../fatfs/ff.c"
 27441 ;; Parameters:    Size  Location     Type
 27442 ;;  fp              2   98[BANK6 ] PTR struct .
 27443 ;;		 -> pb$fp(2), 
 27444 ;;  buff            2  100[BANK6 ] PTR const void 
 27445 ;;		 -> pb$buf(64), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 27446 ;;		 -> f_putc@pb(70), 
 27447 ;;  btw             2  102[BANK6 ] unsigned int 
 27448 ;;  bw              2  104[BANK6 ] PTR unsigned int 
 27449 ;;		 -> write_sector@n(2), putc_flush@nw(2), putc_bfd@n(2), 
 27450 ;; Auto vars:     Size  Location     Type
 27451 ;;  sect            4  135[BANK6 ] unsigned long 
 27452 ;;  clst            4  129[BANK6 ] unsigned long 
 27453 ;;  fs              2  139[BANK6 ] PTR struct .
 27454 ;;		 -> fs(564), NULL(0), 
 27455 ;;  wcnt            2  133[BANK6 ] unsigned int 
 27456 ;;  cc              2  127[BANK6 ] unsigned int 
 27457 ;;  csect           2  125[BANK6 ] unsigned int 
 27458 ;;  wbuff           2  123[BANK6 ] PTR const unsigned char 
 27459 ;;		 -> pb$buf(64), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 27460 ;;		 -> f_putc@pb(70), 
 27461 ;;  res             1  122[BANK6 ] enum E597
 27462 ;; Return value:  Size  Location     Type
 27463 ;;                  1    wreg      enum E597
 27464 ;; Registers used:
 27465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27466 ;; Tracked objects:
 27467 ;;		On entry : 0/0
 27468 ;;		On exit  : 0/0
 27469 ;;		Unchanged: 0/0
 27470 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27471 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27472 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27473 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27474 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27475 ;;Total ram usage:       43 bytes
 27476 ;; Hardware stack levels used: 1
 27477 ;; Hardware stack levels required when called: 16
 27478 ;; This function calls:
 27479 ;;		_clst2sect
 27480 ;;		_create_chain
 27481 ;;		_disk_read
 27482 ;;		_disk_write
 27483 ;;		_memcpy
 27484 ;;		_validate
 27485 ;; This function is called by:
 27486 ;;		_write_sector
 27487 ;;		_putc_bfd
 27488 ;;		_putc_flush
 27489 ;; This function uses a non-reentrant model
 27490 ;;
 27491                           
 27492                           	psect	text65
 27493   011538                     __ptext65:
 27494                           	callstack 0
 27495   011538                     _f_write:
 27496                           	callstack 105
 27497   011538                     
 27498                           ;../fatfs/ff.c: 4017:  FIL* fp,;../fatfs/ff.c: 4018:  const void* buff,;../fatfs/ff.c: 4
      +                          019:  UINT btw,;../fatfs/ff.c: 4020:  UINT* bw;../fatfs/ff.c: 4022: {;../fatfs/ff.c: 402
      +                          3:  FRESULT res;;../fatfs/ff.c: 4024:  FATFS *fs;;../fatfs/ff.c: 4025:  DWORD clst;;../f
      +                          atfs/ff.c: 4026:  LBA_t sect;;../fatfs/ff.c: 4027:  UINT wcnt, cc, csect;;../fatfs/ff.c:
      +                           4028:  const BYTE *wbuff = (const BYTE*)buff;
 27499   011538  C664  F67B         	movff	f_write@buff,f_write@wbuff
 27500   01153C  C665  F67C         	movff	f_write@buff+1,f_write@wbuff+1
 27501   011540                     
 27502                           ;../fatfs/ff.c: 4031:  *bw = 0;
 27503   011540  C668  F4D9         	movff	f_write@bw,fsr2l
 27504   011544  C669  F4DA         	movff	f_write@bw+1,fsr2h
 27505   011548  6ADE               	clrf	postinc2,c
 27506   01154A  6ADD               	clrf	postdec2,c
 27507   01154C                     
 27508                           ;../fatfs/ff.c: 4032:  res = validate(&fp->obj, &fs);
 27509   01154C  C662  F5BE         	movff	f_write@fp,validate@obj
 27510   011550  C663  F5BF         	movff	f_write@fp+1,validate@obj+1
 27511   011554  0E8B               	movlw	low f_write@fs
 27512   011556  0105               	movlb	5	; () banked
 27513   011558  6FC0               	movwf	validate@rfs& (0+255),b
 27514   01155A  0E06               	movlw	high f_write@fs
 27515   01155C  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 27516   01155E  ECA3  F0E9         	call	_validate	;wreg free
 27517   011562  0106               	movlb	6	; () banked
 27518   011564  6F7A               	movwf	f_write@res& (0+255),b
 27519   011566                     
 27520                           ; BSR set to: 6
 27521                           ;../fatfs/ff.c: 4033:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 27522   011566  517A               	movf	f_write@res& (0+255),w,b
 27523   011568  A4D8               	btfss	status,2,c
 27524   01156A  EFB9  F08A         	goto	u31891
 27525   01156E  EFBB  F08A         	goto	u31890
 27526   011572                     u31891:
 27527   011572  EFCB  F08A         	goto	l23051
 27528   011576                     u31890:
 27529   011576                     
 27530                           ; BSR set to: 6
 27531   011576  EE20 F00F          	lfsr	2,15
 27532   01157A  5162               	movf	f_write@fp& (0+255),w,b
 27533   01157C  26D9               	addwf	fsr2l,f,c
 27534   01157E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27535   011580  22DA               	addwfc	fsr2h,f,c
 27536   011582  50DF               	movf	indf2,w,c
 27537   011584  6F7A               	movwf	f_write@res& (0+255),b
 27538   011586  517A               	movf	f_write@res& (0+255),w,b
 27539   011588  B4D8               	btfsc	status,2,c
 27540   01158A  EFC9  F08A         	goto	u31901
 27541   01158E  EFCB  F08A         	goto	u31900
 27542   011592                     u31901:
 27543   011592  EFCE  F08A         	goto	l23055
 27544   011596                     u31900:
 27545   011596                     l23051:
 27546                           
 27547                           ; BSR set to: 6
 27548   011596  517A               	movf	f_write@res& (0+255),w,b
 27549   011598  EFD9  F08E         	goto	l699
 27550   01159C                     l23055:
 27551                           
 27552                           ; BSR set to: 6
 27553                           ;../fatfs/ff.c: 4034:  if (!(fp->flag & 0x02)) return FR_DENIED;
 27554   01159C  EE20 F00E          	lfsr	2,14
 27555   0115A0  5162               	movf	f_write@fp& (0+255),w,b
 27556   0115A2  26D9               	addwf	fsr2l,f,c
 27557   0115A4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27558   0115A6  22DA               	addwfc	fsr2h,f,c
 27559   0115A8  B2DF               	btfsc	indf2,1,c
 27560   0115AA  EFD9  F08A         	goto	u31911
 27561   0115AE  EFDB  F08A         	goto	u31910
 27562   0115B2                     u31911:
 27563   0115B2  EFDE  F08A         	goto	l23063
 27564   0115B6                     u31910:
 27565   0115B6                     
 27566                           ; BSR set to: 6
 27567   0115B6  0E07               	movlw	7
 27568   0115B8  EFD9  F08E         	goto	l699
 27569   0115BC                     l23063:
 27570                           
 27571                           ; BSR set to: 6
 27572   0115BC  EE20 F010          	lfsr	2,16
 27573   0115C0  5162               	movf	f_write@fp& (0+255),w,b
 27574   0115C2  26D9               	addwf	fsr2l,f,c
 27575   0115C4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27576   0115C6  22DA               	addwfc	fsr2h,f,c
 27577   0115C8  EE10 F010          	lfsr	1,16
 27578   0115CC  5162               	movf	f_write@fp& (0+255),w,b
 27579   0115CE  26E1               	addwf	fsr1l,f,c
 27580   0115D0  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27581   0115D2  22E2               	addwfc	fsr1h,f,c
 27582   0115D4  C4E6 F66E          	movff	postinc1,??_f_write+4
 27583   0115D8  C4E6 F66F          	movff	postinc1,??_f_write+5
 27584   0115DC  C4E6 F670          	movff	postinc1,??_f_write+6
 27585   0115E0  C4E6 F671          	movff	postinc1,??_f_write+7
 27586   0115E4  5166               	movf	f_write@btw& (0+255),w,b
 27587   0115E6  256E               	addwf	(??_f_write+4)& (0+255),w,b
 27588   0115E8  6F72               	movwf	(??_f_write+8)& (0+255),b
 27589   0115EA  5167               	movf	(f_write@btw+1)& (0+255),w,b
 27590   0115EC  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 27591   0115EE  6F73               	movwf	(??_f_write+9)& (0+255),b
 27592   0115F0  0E00               	movlw	0
 27593   0115F2  2170               	addwfc	(??_f_write+6)& (0+255),w,b
 27594   0115F4  6F74               	movwf	(??_f_write+10)& (0+255),b
 27595   0115F6  0E00               	movlw	0
 27596   0115F8  2171               	addwfc	(??_f_write+7)& (0+255),w,b
 27597   0115FA  6F75               	movwf	(??_f_write+11)& (0+255),b
 27598   0115FC  50DE               	movf	postinc2,w,c
 27599   0115FE  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 27600   011600  50DE               	movf	postinc2,w,c
 27601   011602  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 27602   011604  50DE               	movf	postinc2,w,c
 27603   011606  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 27604   011608  50DE               	movf	postinc2,w,c
 27605   01160A  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 27606   01160C  B0D8               	btfsc	status,0,c
 27607   01160E  EF0B  F08B         	goto	u31921
 27608   011612  EF0D  F08B         	goto	u31920
 27609   011616                     u31921:
 27610   011616  EF1B  F08B         	goto	l23067
 27611   01161A                     u31920:
 27612   01161A                     
 27613                           ; BSR set to: 6
 27614                           ;../fatfs/ff.c: 4038:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
 27615   01161A  EE20 F010          	lfsr	2,16
 27616   01161E  5162               	movf	f_write@fp& (0+255),w,b
 27617   011620  26D9               	addwf	fsr2l,f,c
 27618   011622  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27619   011624  22DA               	addwfc	fsr2h,f,c
 27620   011626  C4DE F66A          	movff	postinc2,??_f_write
 27621   01162A  C4DD F66B          	movff	postdec2,??_f_write+1
 27622   01162E  1D6A               	comf	??_f_write& (0+255),w,b
 27623   011630  6F66               	movwf	f_write@btw& (0+255),b
 27624   011632  1D6B               	comf	(??_f_write+1)& (0+255),w,b
 27625   011634  6F67               	movwf	(f_write@btw+1)& (0+255),b
 27626   011636                     l23067:
 27627                           
 27628                           ; BSR set to: 6
 27629                           ;../fatfs/ff.c: 4041:  for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fpt
      +                          r += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) 
      +                          {
 27630   011636  5166               	movf	f_write@btw& (0+255),w,b
 27631   011638  1167               	iorwf	(f_write@btw+1)& (0+255),w,b
 27632   01163A  A4D8               	btfss	status,2,c
 27633   01163C  EF22  F08B         	goto	u31931
 27634   011640  EF24  F08B         	goto	u31930
 27635   011644                     u31931:
 27636   011644  EF26  F08B         	goto	l23071
 27637   011648                     u31930:
 27638   011648  EFD0  F08E         	goto	l23195
 27639   01164C                     l23071:
 27640                           
 27641                           ; BSR set to: 6
 27642                           ;../fatfs/ff.c: 4042:   if (fp->fptr % ((UINT)512) == 0) {
 27643   01164C  EE20 F010          	lfsr	2,16
 27644   011650  5162               	movf	f_write@fp& (0+255),w,b
 27645   011652  26D9               	addwf	fsr2l,f,c
 27646   011654  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27647   011656  22DA               	addwfc	fsr2h,f,c
 27648   011658  0EFF               	movlw	255
 27649   01165A  14DE               	andwf	postinc2,w,c
 27650   01165C  6F6A               	movwf	??_f_write& (0+255),b
 27651   01165E  0E01               	movlw	1
 27652   011660  14DE               	andwf	postinc2,w,c
 27653   011662  6F6B               	movwf	(??_f_write+1)& (0+255),b
 27654   011664  0E00               	movlw	0
 27655   011666  14DE               	andwf	postinc2,w,c
 27656   011668  6F6C               	movwf	(??_f_write+2)& (0+255),b
 27657   01166A  0E00               	movlw	0
 27658   01166C  14DE               	andwf	postinc2,w,c
 27659   01166E  6F6D               	movwf	(??_f_write+3)& (0+255),b
 27660   011670  516A               	movf	??_f_write& (0+255),w,b
 27661   011672  116B               	iorwf	(??_f_write+1)& (0+255),w,b
 27662   011674  116C               	iorwf	(??_f_write+2)& (0+255),w,b
 27663   011676  116D               	iorwf	(??_f_write+3)& (0+255),w,b
 27664   011678  A4D8               	btfss	status,2,c
 27665   01167A  EF41  F08B         	goto	u31941
 27666   01167E  EF43  F08B         	goto	u31940
 27667   011682                     u31941:
 27668   011682  EF14  F08E         	goto	l706
 27669   011686                     u31940:
 27670   011686                     
 27671                           ; BSR set to: 6
 27672                           ;../fatfs/ff.c: 4043:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
 27673   011686  EE20 F010          	lfsr	2,16
 27674   01168A  5162               	movf	f_write@fp& (0+255),w,b
 27675   01168C  26D9               	addwf	fsr2l,f,c
 27676   01168E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27677   011690  22DA               	addwfc	fsr2h,f,c
 27678   011692  C4DE F66A          	movff	postinc2,??_f_write
 27679   011696  C4DE F66B          	movff	postinc2,??_f_write+1
 27680   01169A  C4DE F66C          	movff	postinc2,??_f_write+2
 27681   01169E  C4DE F66D          	movff	postinc2,??_f_write+3
 27682   0116A2  0E0A               	movlw	10
 27683   0116A4  EF59  F08B         	goto	u31950
 27684   0116A8                     u31955:
 27685   0116A8  90D8               	bcf	status,0,c
 27686   0116AA  336D               	rrcf	(??_f_write+3)& (0+255),f,b
 27687   0116AC  336C               	rrcf	(??_f_write+2)& (0+255),f,b
 27688   0116AE  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 27689   0116B0  336A               	rrcf	??_f_write& (0+255),f,b
 27690   0116B2                     u31950:
 27691   0116B2  2EE8               	decfsz	wreg,f,c
 27692   0116B4  EF54  F08B         	goto	u31955
 27693   0116B8  EE20 F00A          	lfsr	2,10
 27694   0116BC  518B               	movf	f_write@fs& (0+255),w,b
 27695   0116BE  26D9               	addwf	fsr2l,f,c
 27696   0116C0  518C               	movf	(f_write@fs+1)& (0+255),w,b
 27697   0116C2  22DA               	addwfc	fsr2h,f,c
 27698   0116C4  C4DE F66E          	movff	postinc2,??_f_write+4
 27699   0116C8  C4DD F66F          	movff	postdec2,??_f_write+5
 27700   0116CC  0EFF               	movlw	255
 27701   0116CE  256E               	addwf	(??_f_write+4)& (0+255),w,b
 27702   0116D0  6F70               	movwf	(??_f_write+6)& (0+255),b
 27703   0116D2  0EFF               	movlw	255
 27704   0116D4  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 27705   0116D6  6F71               	movwf	(??_f_write+7)& (0+255),b
 27706   0116D8  516A               	movf	??_f_write& (0+255),w,b
 27707   0116DA  1570               	andwf	(??_f_write+6)& (0+255),w,b
 27708   0116DC  6F7D               	movwf	f_write@csect& (0+255),b
 27709   0116DE  516B               	movf	(??_f_write+1)& (0+255),w,b
 27710   0116E0  1571               	andwf	(??_f_write+7)& (0+255),w,b
 27711   0116E2  6F7E               	movwf	(f_write@csect+1)& (0+255),b
 27712   0116E4                     
 27713                           ; BSR set to: 6
 27714                           ;../fatfs/ff.c: 4044:    if (csect == 0) {
 27715   0116E4  517D               	movf	f_write@csect& (0+255),w,b
 27716   0116E6  117E               	iorwf	(f_write@csect+1)& (0+255),w,b
 27717   0116E8  A4D8               	btfss	status,2,c
 27718   0116EA  EF79  F08B         	goto	u31961
 27719   0116EE  EF7B  F08B         	goto	u31960
 27720   0116F2                     u31961:
 27721   0116F2  EF43  F08C         	goto	l707
 27722   0116F6                     u31960:
 27723   0116F6                     
 27724                           ; BSR set to: 6
 27725                           ;../fatfs/ff.c: 4045:     if (fp->fptr == 0) {
 27726   0116F6  EE20 F010          	lfsr	2,16
 27727   0116FA  5162               	movf	f_write@fp& (0+255),w,b
 27728   0116FC  26D9               	addwf	fsr2l,f,c
 27729   0116FE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27730   011700  22DA               	addwfc	fsr2h,f,c
 27731   011702  50DE               	movf	postinc2,w,c
 27732   011704  10DE               	iorwf	postinc2,w,c
 27733   011706  10DE               	iorwf	postinc2,w,c
 27734   011708  10DE               	iorwf	postinc2,w,c
 27735   01170A  A4D8               	btfss	status,2,c
 27736   01170C  EF8A  F08B         	goto	u31971
 27737   011710  EF8C  F08B         	goto	u31970
 27738   011714                     u31971:
 27739   011714  EFBD  F08B         	goto	l23085
 27740   011718                     u31970:
 27741   011718                     
 27742                           ; BSR set to: 6
 27743                           ;../fatfs/ff.c: 4046:      clst = fp->obj.sclust;
 27744   011718  EE20 F006          	lfsr	2,6
 27745   01171C  5162               	movf	f_write@fp& (0+255),w,b
 27746   01171E  26D9               	addwf	fsr2l,f,c
 27747   011720  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27748   011722  22DA               	addwfc	fsr2h,f,c
 27749   011724  C4DE F681          	movff	postinc2,f_write@clst
 27750   011728  C4DE F682          	movff	postinc2,f_write@clst+1
 27751   01172C  C4DE F683          	movff	postinc2,f_write@clst+2
 27752   011730  C4DE F684          	movff	postinc2,f_write@clst+3
 27753   011734                     
 27754                           ; BSR set to: 6
 27755                           ;../fatfs/ff.c: 4047:      if (clst == 0) {
 27756   011734  5181               	movf	f_write@clst& (0+255),w,b
 27757   011736  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 27758   011738  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 27759   01173A  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 27760   01173C  A4D8               	btfss	status,2,c
 27761   01173E  EFA3  F08B         	goto	u31981
 27762   011742  EFA5  F08B         	goto	u31980
 27763   011746                     u31981:
 27764   011746  EFD9  F08B         	goto	l23087
 27765   01174A                     u31980:
 27766   01174A                     
 27767                           ; BSR set to: 6
 27768                           ;../fatfs/ff.c: 4048:       clst = create_chain(&fp->obj, 0);
 27769   01174A  C662  F645         	movff	f_write@fp,create_chain@obj
 27770   01174E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 27771   011752  0E00               	movlw	0
 27772   011754  6F47               	movwf	create_chain@clst& (0+255),b
 27773   011756  0E00               	movlw	0
 27774   011758  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 27775   01175A  0E00               	movlw	0
 27776   01175C  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 27777   01175E  0E00               	movlw	0
 27778   011760  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 27779   011762  EC7C  F09D         	call	_create_chain	;wreg free
 27780   011766  C645  F681         	movff	?_create_chain,f_write@clst
 27781   01176A  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 27782   01176E  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 27783   011772  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 27784   011776  EFD9  F08B         	goto	l23087
 27785   01177A                     l23085:
 27786                           
 27787                           ; BSR set to: 6
 27788                           ;../fatfs/ff.c: 4056:      {;../fatfs/ff.c: 4057:       clst = create_chain(&fp->obj, fp
      +                          ->clust);
 27789   01177A  C662  F645         	movff	f_write@fp,create_chain@obj
 27790   01177E  C663  F646         	movff	f_write@fp+1,create_chain@obj+1
 27791   011782  EE20 F014          	lfsr	2,20
 27792   011786  5162               	movf	f_write@fp& (0+255),w,b
 27793   011788  26D9               	addwf	fsr2l,f,c
 27794   01178A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27795   01178C  22DA               	addwfc	fsr2h,f,c
 27796   01178E  C4DE F647          	movff	postinc2,create_chain@clst
 27797   011792  C4DE F648          	movff	postinc2,create_chain@clst+1
 27798   011796  C4DE F649          	movff	postinc2,create_chain@clst+2
 27799   01179A  C4DE F64A          	movff	postinc2,create_chain@clst+3
 27800   01179E  EC7C  F09D         	call	_create_chain	;wreg free
 27801   0117A2  C645  F681         	movff	?_create_chain,f_write@clst
 27802   0117A6  C646  F682         	movff	?_create_chain+1,f_write@clst+1
 27803   0117AA  C647  F683         	movff	?_create_chain+2,f_write@clst+2
 27804   0117AE  C648  F684         	movff	?_create_chain+3,f_write@clst+3
 27805   0117B2                     l23087:
 27806                           
 27807                           ;../fatfs/ff.c: 4060:     if (clst == 0) break;
 27808   0117B2  0106               	movlb	6	; () banked
 27809   0117B4  5181               	movf	f_write@clst& (0+255),w,b
 27810   0117B6  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 27811   0117B8  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 27812   0117BA  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 27813   0117BC  A4D8               	btfss	status,2,c
 27814   0117BE  EFE3  F08B         	goto	u31991
 27815   0117C2  EFE5  F08B         	goto	u31990
 27816   0117C6                     u31991:
 27817   0117C6  EFE7  F08B         	goto	l23091
 27818   0117CA                     u31990:
 27819   0117CA  EFD0  F08E         	goto	l23195
 27820   0117CE                     l23091:
 27821                           
 27822                           ; BSR set to: 6
 27823                           ;../fatfs/ff.c: 4061:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_E
      +                          RR; };
 27824   0117CE  0581               	decf	f_write@clst& (0+255),w,b
 27825   0117D0  1182               	iorwf	(f_write@clst+1)& (0+255),w,b
 27826   0117D2  1183               	iorwf	(f_write@clst+2)& (0+255),w,b
 27827   0117D4  1184               	iorwf	(f_write@clst+3)& (0+255),w,b
 27828   0117D6  A4D8               	btfss	status,2,c
 27829   0117D8  EFF0  F08B         	goto	u32001
 27830   0117DC  EFF2  F08B         	goto	u32000
 27831   0117E0                     u32001:
 27832   0117E0  EFFD  F08B         	goto	l23099
 27833   0117E4                     u32000:
 27834   0117E4                     
 27835                           ; BSR set to: 6
 27836   0117E4  EE20 F00F          	lfsr	2,15
 27837   0117E8  5162               	movf	f_write@fp& (0+255),w,b
 27838   0117EA  26D9               	addwf	fsr2l,f,c
 27839   0117EC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27840   0117EE  22DA               	addwfc	fsr2h,f,c
 27841   0117F0  0E02               	movlw	2
 27842   0117F2  6EDF               	movwf	indf2,c
 27843   0117F4                     l23095:
 27844                           
 27845                           ; BSR set to: 6
 27846   0117F4  0E02               	movlw	2
 27847   0117F6  EFD9  F08E         	goto	l699
 27848   0117FA                     l23099:
 27849                           
 27850                           ; BSR set to: 6
 27851                           ;../fatfs/ff.c: 4062:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 27852   0117FA  2981               	incf	f_write@clst& (0+255),w,b
 27853   0117FC  E10A               	bnz	u32011
 27854   0117FE  2982               	incf	(f_write@clst+1)& (0+255),w,b
 27855   011800  E108               	bnz	u32011
 27856   011802  2983               	incf	(f_write@clst+2)& (0+255),w,b
 27857   011804  E106               	bnz	u32011
 27858   011806  2984               	incf	(f_write@clst+3)& (0+255),w,b
 27859   011808  A4D8               	btfss	status,2,c
 27860   01180A  EF09  F08C         	goto	u32011
 27861   01180E  EF0B  F08C         	goto	u32010
 27862   011812                     u32011:
 27863   011812  EF16  F08C         	goto	l23107
 27864   011816                     u32010:
 27865   011816                     
 27866                           ; BSR set to: 6
 27867   011816  EE20 F00F          	lfsr	2,15
 27868   01181A  5162               	movf	f_write@fp& (0+255),w,b
 27869   01181C  26D9               	addwf	fsr2l,f,c
 27870   01181E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27871   011820  22DA               	addwfc	fsr2h,f,c
 27872   011822  0E01               	movlw	1
 27873   011824  6EDF               	movwf	indf2,c
 27874   011826                     l23103:
 27875                           
 27876                           ; BSR set to: 6
 27877   011826  0E01               	movlw	1
 27878   011828  EFD9  F08E         	goto	l699
 27879   01182C                     l23107:
 27880                           
 27881                           ; BSR set to: 6
 27882                           ;../fatfs/ff.c: 4063:     fp->clust = clst;
 27883   01182C  EE20 F014          	lfsr	2,20
 27884   011830  5162               	movf	f_write@fp& (0+255),w,b
 27885   011832  26D9               	addwf	fsr2l,f,c
 27886   011834  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27887   011836  22DA               	addwfc	fsr2h,f,c
 27888   011838  C681  F4DE         	movff	f_write@clst,postinc2
 27889   01183C  C682  F4DE         	movff	f_write@clst+1,postinc2
 27890   011840  C683  F4DE         	movff	f_write@clst+2,postinc2
 27891   011844  C684  F4DE         	movff	f_write@clst+3,postinc2
 27892                           
 27893                           ;../fatfs/ff.c: 4064:     if (fp->obj.sclust == 0) fp->obj.sclust = clst;
 27894   011848  EE20 F006          	lfsr	2,6
 27895   01184C  5162               	movf	f_write@fp& (0+255),w,b
 27896   01184E  26D9               	addwf	fsr2l,f,c
 27897   011850  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27898   011852  22DA               	addwfc	fsr2h,f,c
 27899   011854  50DE               	movf	postinc2,w,c
 27900   011856  10DE               	iorwf	postinc2,w,c
 27901   011858  10DE               	iorwf	postinc2,w,c
 27902   01185A  10DE               	iorwf	postinc2,w,c
 27903   01185C  A4D8               	btfss	status,2,c
 27904   01185E  EF33  F08C         	goto	u32021
 27905   011862  EF35  F08C         	goto	u32020
 27906   011866                     u32021:
 27907   011866  EF43  F08C         	goto	l707
 27908   01186A                     u32020:
 27909   01186A                     
 27910                           ; BSR set to: 6
 27911   01186A  EE20 F006          	lfsr	2,6
 27912   01186E  5162               	movf	f_write@fp& (0+255),w,b
 27913   011870  26D9               	addwf	fsr2l,f,c
 27914   011872  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27915   011874  22DA               	addwfc	fsr2h,f,c
 27916   011876  C681  F4DE         	movff	f_write@clst,postinc2
 27917   01187A  C682  F4DE         	movff	f_write@clst+1,postinc2
 27918   01187E  C683  F4DE         	movff	f_write@clst+2,postinc2
 27919   011882  C684  F4DE         	movff	f_write@clst+3,postinc2
 27920   011886                     l707:
 27921                           
 27922                           ; BSR set to: 6
 27923                           ;../fatfs/ff.c: 4069:    if (fp->flag & 0x80) {
 27924   011886  EE20 F00E          	lfsr	2,14
 27925   01188A  5162               	movf	f_write@fp& (0+255),w,b
 27926   01188C  26D9               	addwf	fsr2l,f,c
 27927   01188E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27928   011890  22DA               	addwfc	fsr2h,f,c
 27929   011892  AEDF               	btfss	indf2,7,c
 27930   011894  EF4E  F08C         	goto	u32031
 27931   011898  EF50  F08C         	goto	u32030
 27932   01189C                     u32031:
 27933   01189C  EF8D  F08C         	goto	l23121
 27934   0118A0                     u32030:
 27935   0118A0                     
 27936                           ; BSR set to: 6
 27937                           ;../fatfs/ff.c: 4070:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 27938   0118A0  0E22               	movlw	34
 27939   0118A2  2562               	addwf	f_write@fp& (0+255),w,b
 27940   0118A4  6F00               	movwf	disk_write@buff& (0+255),b
 27941   0118A6  0E00               	movlw	0
 27942   0118A8  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 27943   0118AA  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 27944   0118AC  EE20 F018          	lfsr	2,24
 27945   0118B0  5162               	movf	f_write@fp& (0+255),w,b
 27946   0118B2  26D9               	addwf	fsr2l,f,c
 27947   0118B4  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27948   0118B6  22DA               	addwfc	fsr2h,f,c
 27949   0118B8  C4DE F602          	movff	postinc2,disk_write@sector
 27950   0118BC  C4DE F603          	movff	postinc2,disk_write@sector+1
 27951   0118C0  C4DE F604          	movff	postinc2,disk_write@sector+2
 27952   0118C4  C4DE F605          	movff	postinc2,disk_write@sector+3
 27953   0118C8  0E00               	movlw	0
 27954   0118CA  6F07               	movwf	(disk_write@count+1)& (0+255),b
 27955   0118CC  0E01               	movlw	1
 27956   0118CE  6F06               	movwf	disk_write@count& (0+255),b
 27957   0118D0  EE20 F001          	lfsr	2,1
 27958   0118D4  518B               	movf	f_write@fs& (0+255),w,b
 27959   0118D6  26D9               	addwf	fsr2l,f,c
 27960   0118D8  518C               	movf	(f_write@fs+1)& (0+255),w,b
 27961   0118DA  22DA               	addwfc	fsr2h,f,c
 27962   0118DC  50DF               	movf	indf2,w,c
 27963   0118DE  EC7E  F0F3         	call	_disk_write
 27964   0118E2  0900               	iorlw	0
 27965   0118E4  B4D8               	btfsc	status,2,c
 27966   0118E6  EF77  F08C         	goto	u32041
 27967   0118EA  EF79  F08C         	goto	u32040
 27968   0118EE                     u32041:
 27969   0118EE  EF84  F08C         	goto	l23119
 27970   0118F2                     u32040:
 27971   0118F2  0106               	movlb	6	; () banked
 27972   0118F4  EE20 F00F          	lfsr	2,15
 27973   0118F8  5162               	movf	f_write@fp& (0+255),w,b
 27974   0118FA  26D9               	addwf	fsr2l,f,c
 27975   0118FC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27976   0118FE  22DA               	addwfc	fsr2h,f,c
 27977   011900  0E01               	movlw	1
 27978   011902  6EDF               	movwf	indf2,c
 27979   011904  EF13  F08C         	goto	l23103
 27980   011908                     l23119:
 27981                           
 27982                           ;../fatfs/ff.c: 4071:     fp->flag &= (BYTE)~0x80;
 27983   011908  0106               	movlb	6	; () banked
 27984   01190A  EE20 F00E          	lfsr	2,14
 27985   01190E  5162               	movf	f_write@fp& (0+255),w,b
 27986   011910  26D9               	addwf	fsr2l,f,c
 27987   011912  5163               	movf	(f_write@fp+1)& (0+255),w,b
 27988   011914  22DA               	addwfc	fsr2h,f,c
 27989   011916  0E7F               	movlw	127
 27990   011918  16DF               	andwf	indf2,f,c
 27991   01191A                     l23121:
 27992                           
 27993                           ; BSR set to: 6
 27994                           ;../fatfs/ff.c: 4074:    sect = clst2sect(fs, fp->clust);
 27995   01191A  C68B  F510         	movff	f_write@fs,clst2sect@fs
 27996   01191E  C68C  F511         	movff	f_write@fs+1,clst2sect@fs+1
 27997   011922  EE20 F014          	lfsr	2,20
 27998   011926  5162               	movf	f_write@fp& (0+255),w,b
 27999   011928  26D9               	addwf	fsr2l,f,c
 28000   01192A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28001   01192C  22DA               	addwfc	fsr2h,f,c
 28002   01192E  C4DE F512          	movff	postinc2,clst2sect@clst
 28003   011932  C4DE F513          	movff	postinc2,clst2sect@clst+1
 28004   011936  C4DE F514          	movff	postinc2,clst2sect@clst+2
 28005   01193A  C4DE F515          	movff	postinc2,clst2sect@clst+3
 28006   01193E  EC7A  F0F0         	call	_clst2sect	;wreg free
 28007   011942  C510  F687         	movff	?_clst2sect,f_write@sect
 28008   011946  C511  F688         	movff	?_clst2sect+1,f_write@sect+1
 28009   01194A  C512  F689         	movff	?_clst2sect+2,f_write@sect+2
 28010   01194E  C513  F68A         	movff	?_clst2sect+3,f_write@sect+3
 28011   011952                     
 28012                           ;../fatfs/ff.c: 4075:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 28013   011952  0106               	movlb	6	; () banked
 28014   011954  5187               	movf	f_write@sect& (0+255),w,b
 28015   011956  1188               	iorwf	(f_write@sect+1)& (0+255),w,b
 28016   011958  1189               	iorwf	(f_write@sect+2)& (0+255),w,b
 28017   01195A  118A               	iorwf	(f_write@sect+3)& (0+255),w,b
 28018   01195C  A4D8               	btfss	status,2,c
 28019   01195E  EFB3  F08C         	goto	u32051
 28020   011962  EFB5  F08C         	goto	u32050
 28021   011966                     u32051:
 28022   011966  EFBF  F08C         	goto	l23131
 28023   01196A                     u32050:
 28024   01196A                     
 28025                           ; BSR set to: 6
 28026   01196A  EE20 F00F          	lfsr	2,15
 28027   01196E  5162               	movf	f_write@fp& (0+255),w,b
 28028   011970  26D9               	addwf	fsr2l,f,c
 28029   011972  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28030   011974  22DA               	addwfc	fsr2h,f,c
 28031   011976  0E02               	movlw	2
 28032   011978  6EDF               	movwf	indf2,c
 28033   01197A  EFFA  F08B         	goto	l23095
 28034   01197E                     l23131:
 28035                           
 28036                           ; BSR set to: 6
 28037                           ;../fatfs/ff.c: 4076:    sect += csect;
 28038   01197E  517D               	movf	f_write@csect& (0+255),w,b
 28039   011980  2787               	addwf	f_write@sect& (0+255),f,b
 28040   011982  517E               	movf	(f_write@csect+1)& (0+255),w,b
 28041   011984  2388               	addwfc	(f_write@sect+1)& (0+255),f,b
 28042   011986  0E00               	movlw	0
 28043   011988  2389               	addwfc	(f_write@sect+2)& (0+255),f,b
 28044   01198A  0E00               	movlw	0
 28045   01198C  238A               	addwfc	(f_write@sect+3)& (0+255),f,b
 28046   01198E                     
 28047                           ; BSR set to: 6
 28048                           ;../fatfs/ff.c: 4077:    cc = btw / ((UINT)512);
 28049   01198E  C666  F66A         	movff	f_write@btw,??_f_write
 28050   011992  C667  F66B         	movff	f_write@btw+1,??_f_write+1
 28051   011996  0E09               	movlw	9
 28052   011998  6F6C               	movwf	(??_f_write+2)& (0+255),b
 28053   01199A                     u32065:
 28054   01199A  90D8               	bcf	status,0,c
 28055   01199C  336B               	rrcf	(??_f_write+1)& (0+255),f,b
 28056   01199E  336A               	rrcf	??_f_write& (0+255),f,b
 28057   0119A0  2F6C               	decfsz	(??_f_write+2)& (0+255),f,b
 28058   0119A2  EFCD  F08C         	goto	u32065
 28059   0119A6  C66A  F67F         	movff	??_f_write,f_write@cc
 28060   0119AA  C66B  F680         	movff	??_f_write+1,f_write@cc+1
 28061   0119AE                     
 28062                           ; BSR set to: 6
 28063                           ;../fatfs/ff.c: 4078:    if (cc > 0) {
 28064   0119AE  517F               	movf	f_write@cc& (0+255),w,b
 28065   0119B0  1180               	iorwf	(f_write@cc+1)& (0+255),w,b
 28066   0119B2  B4D8               	btfsc	status,2,c
 28067   0119B4  EFDE  F08C         	goto	u32071
 28068   0119B8  EFE0  F08C         	goto	u32070
 28069   0119BC                     u32071:
 28070   0119BC  EFA4  F08D         	goto	l23157
 28071   0119C0                     u32070:
 28072   0119C0                     
 28073                           ; BSR set to: 6
 28074                           ;../fatfs/ff.c: 4079:     if (csect + cc > fs->csize) {
 28075   0119C0  517F               	movf	f_write@cc& (0+255),w,b
 28076   0119C2  257D               	addwf	f_write@csect& (0+255),w,b
 28077   0119C4  6F6A               	movwf	??_f_write& (0+255),b
 28078   0119C6  5180               	movf	(f_write@cc+1)& (0+255),w,b
 28079   0119C8  217E               	addwfc	(f_write@csect+1)& (0+255),w,b
 28080   0119CA  6F6B               	movwf	(??_f_write+1)& (0+255),b
 28081   0119CC  EE20 F00A          	lfsr	2,10
 28082   0119D0  518B               	movf	f_write@fs& (0+255),w,b
 28083   0119D2  26D9               	addwf	fsr2l,f,c
 28084   0119D4  518C               	movf	(f_write@fs+1)& (0+255),w,b
 28085   0119D6  22DA               	addwfc	fsr2h,f,c
 28086   0119D8  516A               	movf	??_f_write& (0+255),w,b
 28087   0119DA  5CDE               	subwf	postinc2,w,c
 28088   0119DC  516B               	movf	(??_f_write+1)& (0+255),w,b
 28089   0119DE  58DE               	subwfb	postinc2,w,c
 28090   0119E0  B0D8               	btfsc	status,0,c
 28091   0119E2  EFF5  F08C         	goto	u32081
 28092   0119E6  EFF7  F08C         	goto	u32080
 28093   0119EA                     u32081:
 28094   0119EA  EF07  F08D         	goto	l23141
 28095   0119EE                     u32080:
 28096   0119EE                     
 28097                           ; BSR set to: 6
 28098                           ;../fatfs/ff.c: 4080:      cc = fs->csize - csect;
 28099   0119EE  EE20 F00A          	lfsr	2,10
 28100   0119F2  518B               	movf	f_write@fs& (0+255),w,b
 28101   0119F4  26D9               	addwf	fsr2l,f,c
 28102   0119F6  518C               	movf	(f_write@fs+1)& (0+255),w,b
 28103   0119F8  22DA               	addwfc	fsr2h,f,c
 28104   0119FA  C4DE F66A          	movff	postinc2,??_f_write
 28105   0119FE  C4DD F66B          	movff	postdec2,??_f_write+1
 28106   011A02  517D               	movf	f_write@csect& (0+255),w,b
 28107   011A04  5D6A               	subwf	??_f_write& (0+255),w,b
 28108   011A06  6F7F               	movwf	f_write@cc& (0+255),b
 28109   011A08  517E               	movf	(f_write@csect+1)& (0+255),w,b
 28110   011A0A  596B               	subwfb	(??_f_write+1)& (0+255),w,b
 28111   011A0C  6F80               	movwf	(f_write@cc+1)& (0+255),b
 28112   011A0E                     l23141:
 28113                           
 28114                           ; BSR set to: 6
 28115                           ;../fatfs/ff.c: 4082:     if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 28116   011A0E  C67B  F600         	movff	f_write@wbuff,disk_write@buff
 28117   011A12  C67C  F601         	movff	f_write@wbuff+1,disk_write@buff+1
 28118   011A16  C687  F602         	movff	f_write@sect,disk_write@sector
 28119   011A1A  C688  F603         	movff	f_write@sect+1,disk_write@sector+1
 28120   011A1E  C689  F604         	movff	f_write@sect+2,disk_write@sector+2
 28121   011A22  C68A  F605         	movff	f_write@sect+3,disk_write@sector+3
 28122   011A26  C67F  F606         	movff	f_write@cc,disk_write@count
 28123   011A2A  C680  F607         	movff	f_write@cc+1,disk_write@count+1
 28124   011A2E  EE20 F001          	lfsr	2,1
 28125   011A32  518B               	movf	f_write@fs& (0+255),w,b
 28126   011A34  26D9               	addwf	fsr2l,f,c
 28127   011A36  518C               	movf	(f_write@fs+1)& (0+255),w,b
 28128   011A38  22DA               	addwfc	fsr2h,f,c
 28129   011A3A  50DF               	movf	indf2,w,c
 28130   011A3C  EC7E  F0F3         	call	_disk_write
 28131   011A40  0900               	iorlw	0
 28132   011A42  B4D8               	btfsc	status,2,c
 28133   011A44  EF26  F08D         	goto	u32091
 28134   011A48  EF28  F08D         	goto	u32090
 28135   011A4C                     u32091:
 28136   011A4C  EF33  F08D         	goto	l23149
 28137   011A50                     u32090:
 28138   011A50  0106               	movlb	6	; () banked
 28139   011A52  EE20 F00F          	lfsr	2,15
 28140   011A56  5162               	movf	f_write@fp& (0+255),w,b
 28141   011A58  26D9               	addwf	fsr2l,f,c
 28142   011A5A  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28143   011A5C  22DA               	addwfc	fsr2h,f,c
 28144   011A5E  0E01               	movlw	1
 28145   011A60  6EDF               	movwf	indf2,c
 28146   011A62  EF13  F08C         	goto	l23103
 28147   011A66                     l23149:
 28148                           
 28149                           ;../fatfs/ff.c: 4090:     if (fp->sect - sect < cc) {
 28150   011A66  0106               	movlb	6	; () banked
 28151   011A68  517F               	movf	f_write@cc& (0+255),w,b
 28152   011A6A  6F6A               	movwf	??_f_write& (0+255),b
 28153   011A6C  5180               	movf	(f_write@cc+1)& (0+255),w,b
 28154   011A6E  6F6B               	movwf	(??_f_write+1)& (0+255),b
 28155   011A70  6B6C               	clrf	(??_f_write+2)& (0+255),b
 28156   011A72  6B6D               	clrf	(??_f_write+3)& (0+255),b
 28157   011A74  EE20 F018          	lfsr	2,24
 28158   011A78  5162               	movf	f_write@fp& (0+255),w,b
 28159   011A7A  26D9               	addwf	fsr2l,f,c
 28160   011A7C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28161   011A7E  22DA               	addwfc	fsr2h,f,c
 28162   011A80  C4DE F66E          	movff	postinc2,??_f_write+4
 28163   011A84  C4DE F66F          	movff	postinc2,??_f_write+5
 28164   011A88  C4DE F670          	movff	postinc2,??_f_write+6
 28165   011A8C  C4DE F671          	movff	postinc2,??_f_write+7
 28166   011A90  5187               	movf	f_write@sect& (0+255),w,b
 28167   011A92  5D6E               	subwf	(??_f_write+4)& (0+255),w,b
 28168   011A94  6F72               	movwf	(??_f_write+8)& (0+255),b
 28169   011A96  5188               	movf	(f_write@sect+1)& (0+255),w,b
 28170   011A98  596F               	subwfb	(??_f_write+5)& (0+255),w,b
 28171   011A9A  6F73               	movwf	(??_f_write+9)& (0+255),b
 28172   011A9C  5189               	movf	(f_write@sect+2)& (0+255),w,b
 28173   011A9E  5970               	subwfb	(??_f_write+6)& (0+255),w,b
 28174   011AA0  6F74               	movwf	(??_f_write+10)& (0+255),b
 28175   011AA2  518A               	movf	(f_write@sect+3)& (0+255),w,b
 28176   011AA4  5971               	subwfb	(??_f_write+7)& (0+255),w,b
 28177   011AA6  6F75               	movwf	(??_f_write+11)& (0+255),b
 28178   011AA8  516A               	movf	??_f_write& (0+255),w,b
 28179   011AAA  5D72               	subwf	(??_f_write+8)& (0+255),w,b
 28180   011AAC  516B               	movf	(??_f_write+1)& (0+255),w,b
 28181   011AAE  5973               	subwfb	(??_f_write+9)& (0+255),w,b
 28182   011AB0  516C               	movf	(??_f_write+2)& (0+255),w,b
 28183   011AB2  5974               	subwfb	(??_f_write+10)& (0+255),w,b
 28184   011AB4  516D               	movf	(??_f_write+3)& (0+255),w,b
 28185   011AB6  5975               	subwfb	(??_f_write+11)& (0+255),w,b
 28186   011AB8  B0D8               	btfsc	status,0,c
 28187   011ABA  EF61  F08D         	goto	u32101
 28188   011ABE  EF63  F08D         	goto	u32100
 28189   011AC2                     u32101:
 28190   011AC2  EF93  F08D         	goto	l23155
 28191   011AC6                     u32100:
 28192   011AC6                     
 28193                           ; BSR set to: 6
 28194                           ;../fatfs/ff.c: 4091:      memcpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((
      +                          UINT)512));
 28195   011AC6  0E22               	movlw	34
 28196   011AC8  2562               	addwf	f_write@fp& (0+255),w,b
 28197   011ACA  6E04               	movwf	memcpy@d1^(0+1280),c
 28198   011ACC  0E00               	movlw	0
 28199   011ACE  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 28200   011AD0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 28201   011AD2  EE20 F018          	lfsr	2,24
 28202   011AD6  5162               	movf	f_write@fp& (0+255),w,b
 28203   011AD8  26D9               	addwf	fsr2l,f,c
 28204   011ADA  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28205   011ADC  22DA               	addwfc	fsr2h,f,c
 28206   011ADE  C4DE F66A          	movff	postinc2,??_f_write
 28207   011AE2  C4DD F66B          	movff	postdec2,??_f_write+1
 28208   011AE6  5187               	movf	f_write@sect& (0+255),w,b
 28209   011AE8  5F6A               	subwf	??_f_write& (0+255),f,b
 28210   011AEA  5188               	movf	(f_write@sect+1)& (0+255),w,b
 28211   011AEC  5B6B               	subwfb	(??_f_write+1)& (0+255),f,b
 28212   011AEE  0E09               	movlw	9
 28213   011AF0                     u32115:
 28214   011AF0  90D8               	bcf	status,0,c
 28215   011AF2  376A               	rlcf	??_f_write& (0+255),f,b
 28216   011AF4  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 28217   011AF6  2EE8               	decfsz	wreg,f,c
 28218   011AF8  EF78  F08D         	goto	u32115
 28219   011AFC  516A               	movf	??_f_write& (0+255),w,b
 28220   011AFE  257B               	addwf	f_write@wbuff& (0+255),w,b
 28221   011B00  6E06               	movwf	memcpy@s1^(0+1280),c
 28222   011B02  516B               	movf	(??_f_write+1)& (0+255),w,b
 28223   011B04  217C               	addwfc	(f_write@wbuff+1)& (0+255),w,b
 28224   011B06  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 28225   011B08  0E02               	movlw	2
 28226   011B0A  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 28227   011B0C  0E00               	movlw	0
 28228   011B0E  6E08               	movwf	memcpy@n^(0+1280),c
 28229   011B10  EC00  F0FD         	call	_memcpy	;wreg free
 28230   011B14                     
 28231                           ;../fatfs/ff.c: 4092:      fp->flag &= (BYTE)~0x80;
 28232   011B14  0106               	movlb	6	; () banked
 28233   011B16  EE20 F00E          	lfsr	2,14
 28234   011B1A  5162               	movf	f_write@fp& (0+255),w,b
 28235   011B1C  26D9               	addwf	fsr2l,f,c
 28236   011B1E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28237   011B20  22DA               	addwfc	fsr2h,f,c
 28238   011B22  0E7F               	movlw	127
 28239   011B24  16DF               	andwf	indf2,f,c
 28240   011B26                     l23155:
 28241                           
 28242                           ; BSR set to: 6
 28243                           ;../fatfs/ff.c: 4096:     wcnt = ((UINT)512) * cc;
 28244   011B26  C67F  F66A         	movff	f_write@cc,??_f_write
 28245   011B2A  C680  F66B         	movff	f_write@cc+1,??_f_write+1
 28246   011B2E  0E09               	movlw	9
 28247   011B30                     u32125:
 28248   011B30  90D8               	bcf	status,0,c
 28249   011B32  376A               	rlcf	??_f_write& (0+255),f,b
 28250   011B34  376B               	rlcf	(??_f_write+1)& (0+255),f,b
 28251   011B36  2EE8               	decfsz	wreg,f,c
 28252   011B38  EF98  F08D         	goto	u32125
 28253   011B3C  C66A  F685         	movff	??_f_write,f_write@wcnt
 28254   011B40  C66B  F686         	movff	??_f_write+1,f_write@wcnt+1
 28255                           
 28256                           ;../fatfs/ff.c: 4097:     continue;
 28257   011B44  EF6A  F08E         	goto	l23179
 28258   011B48                     l23157:
 28259                           
 28260                           ; BSR set to: 6
 28261                           ;../fatfs/ff.c: 4105:    if (fp->sect != sect &&
 28262   011B48  EE20 F018          	lfsr	2,24
 28263   011B4C  5162               	movf	f_write@fp& (0+255),w,b
 28264   011B4E  26D9               	addwf	fsr2l,f,c
 28265   011B50  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28266   011B52  22DA               	addwfc	fsr2h,f,c
 28267   011B54  5187               	movf	f_write@sect& (0+255),w,b
 28268   011B56  18DE               	xorwf	postinc2,w,c
 28269   011B58  E10F               	bnz	u32130
 28270   011B5A  5188               	movf	(f_write@sect+1)& (0+255),w,b
 28271   011B5C  18DE               	xorwf	postinc2,w,c
 28272   011B5E  E10C               	bnz	u32130
 28273   011B60  5189               	movf	(f_write@sect+2)& (0+255),w,b
 28274   011B62  18DE               	xorwf	postinc2,w,c
 28275   011B64  E109               	bnz	u32130
 28276   011B66  518A               	movf	(f_write@sect+3)& (0+255),w,b
 28277   011B68  18DE               	xorwf	postinc2,w,c
 28278   011B6A  B4D8               	btfsc	status,2,c
 28279   011B6C  EFBA  F08D         	goto	u32131
 28280   011B70  EFBC  F08D         	goto	u32130
 28281   011B74                     u32131:
 28282   011B74  EF05  F08E         	goto	l23169
 28283   011B78                     u32130:
 28284   011B78                     
 28285                           ; BSR set to: 6
 28286   011B78  EE20 F00A          	lfsr	2,10
 28287   011B7C  5162               	movf	f_write@fp& (0+255),w,b
 28288   011B7E  26D9               	addwf	fsr2l,f,c
 28289   011B80  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28290   011B82  22DA               	addwfc	fsr2h,f,c
 28291   011B84  EE10 F010          	lfsr	1,16
 28292   011B88  5162               	movf	f_write@fp& (0+255),w,b
 28293   011B8A  26E1               	addwf	fsr1l,f,c
 28294   011B8C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28295   011B8E  22E2               	addwfc	fsr1h,f,c
 28296   011B90  50DE               	movf	postinc2,w,c
 28297   011B92  5CE6               	subwf	postinc1,w,c
 28298   011B94  50DE               	movf	postinc2,w,c
 28299   011B96  58E6               	subwfb	postinc1,w,c
 28300   011B98  50DE               	movf	postinc2,w,c
 28301   011B9A  58E6               	subwfb	postinc1,w,c
 28302   011B9C  50DE               	movf	postinc2,w,c
 28303   011B9E  58E6               	subwfb	postinc1,w,c
 28304   011BA0  B0D8               	btfsc	status,0,c
 28305   011BA2  EFD5  F08D         	goto	u32141
 28306   011BA6  EFD7  F08D         	goto	u32140
 28307   011BAA                     u32141:
 28308   011BAA  EF05  F08E         	goto	l23169
 28309   011BAE                     u32140:
 28310   011BAE                     
 28311                           ; BSR set to: 6
 28312   011BAE  0E22               	movlw	34
 28313   011BB0  2562               	addwf	f_write@fp& (0+255),w,b
 28314   011BB2  6F00               	movwf	disk_read@buff& (0+255),b
 28315   011BB4  0E00               	movlw	0
 28316   011BB6  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 28317   011BB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 28318   011BBA  C687  F602         	movff	f_write@sect,disk_read@sector
 28319   011BBE  C688  F603         	movff	f_write@sect+1,disk_read@sector+1
 28320   011BC2  C689  F604         	movff	f_write@sect+2,disk_read@sector+2
 28321   011BC6  C68A  F605         	movff	f_write@sect+3,disk_read@sector+3
 28322   011BCA  0E00               	movlw	0
 28323   011BCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 28324   011BCE  0E01               	movlw	1
 28325   011BD0  6F06               	movwf	disk_read@count& (0+255),b
 28326   011BD2  EE20 F001          	lfsr	2,1
 28327   011BD6  518B               	movf	f_write@fs& (0+255),w,b
 28328   011BD8  26D9               	addwf	fsr2l,f,c
 28329   011BDA  518C               	movf	(f_write@fs+1)& (0+255),w,b
 28330   011BDC  22DA               	addwfc	fsr2h,f,c
 28331   011BDE  50DF               	movf	indf2,w,c
 28332   011BE0  ECD5  F0F3         	call	_disk_read
 28333   011BE4  0900               	iorlw	0
 28334   011BE6  B4D8               	btfsc	status,2,c
 28335   011BE8  EFF8  F08D         	goto	u32151
 28336   011BEC  EFFA  F08D         	goto	u32150
 28337   011BF0                     u32151:
 28338   011BF0  EF05  F08E         	goto	l23169
 28339   011BF4                     u32150:
 28340   011BF4                     
 28341                           ;../fatfs/ff.c: 4107:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {;../fatfs/ff
      +                          .c: 4108:      { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 28342   011BF4  0106               	movlb	6	; () banked
 28343   011BF6  EE20 F00F          	lfsr	2,15
 28344   011BFA  5162               	movf	f_write@fp& (0+255),w,b
 28345   011BFC  26D9               	addwf	fsr2l,f,c
 28346   011BFE  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28347   011C00  22DA               	addwfc	fsr2h,f,c
 28348   011C02  0E01               	movlw	1
 28349   011C04  6EDF               	movwf	indf2,c
 28350   011C06  EF13  F08C         	goto	l23103
 28351   011C0A                     l23169:
 28352                           
 28353                           ;../fatfs/ff.c: 4111:    fp->sect = sect;
 28354   011C0A  0106               	movlb	6	; () banked
 28355   011C0C  EE20 F018          	lfsr	2,24
 28356   011C10  5162               	movf	f_write@fp& (0+255),w,b
 28357   011C12  26D9               	addwf	fsr2l,f,c
 28358   011C14  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28359   011C16  22DA               	addwfc	fsr2h,f,c
 28360   011C18  C687  F4DE         	movff	f_write@sect,postinc2
 28361   011C1C  C688  F4DE         	movff	f_write@sect+1,postinc2
 28362   011C20  C689  F4DE         	movff	f_write@sect+2,postinc2
 28363   011C24  C68A  F4DE         	movff	f_write@sect+3,postinc2
 28364   011C28                     l706:
 28365                           
 28366                           ; BSR set to: 6
 28367                           ;../fatfs/ff.c: 4113:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 28368   011C28  EE20 F010          	lfsr	2,16
 28369   011C2C  5162               	movf	f_write@fp& (0+255),w,b
 28370   011C2E  26D9               	addwf	fsr2l,f,c
 28371   011C30  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28372   011C32  22DA               	addwfc	fsr2h,f,c
 28373   011C34  C4DE F66A          	movff	postinc2,??_f_write
 28374   011C38  C4DD F66B          	movff	postdec2,??_f_write+1
 28375   011C3C  0EFF               	movlw	255
 28376   011C3E  156A               	andwf	??_f_write& (0+255),w,b
 28377   011C40  6F6C               	movwf	(??_f_write+2)& (0+255),b
 28378   011C42  0E01               	movlw	1
 28379   011C44  156B               	andwf	(??_f_write+1)& (0+255),w,b
 28380   011C46  6F6D               	movwf	(??_f_write+3)& (0+255),b
 28381   011C48  516C               	movf	(??_f_write+2)& (0+255),w,b
 28382   011C4A  0800               	sublw	0
 28383   011C4C  6F85               	movwf	f_write@wcnt& (0+255),b
 28384   011C4E  516D               	movf	(??_f_write+3)& (0+255),w,b
 28385   011C50  A0D8               	btfss	status,0,c
 28386   011C52  2AE8               	incf	wreg,f,c
 28387   011C54  0802               	sublw	2
 28388   011C56  6F86               	movwf	(f_write@wcnt+1)& (0+255),b
 28389   011C58                     
 28390                           ; BSR set to: 6
 28391                           ;../fatfs/ff.c: 4114:   if (wcnt > btw) wcnt = btw;
 28392   011C58  5185               	movf	f_write@wcnt& (0+255),w,b
 28393   011C5A  5D66               	subwf	f_write@btw& (0+255),w,b
 28394   011C5C  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 28395   011C5E  5967               	subwfb	(f_write@btw+1)& (0+255),w,b
 28396   011C60  B0D8               	btfsc	status,0,c
 28397   011C62  EF35  F08E         	goto	u32161
 28398   011C66  EF37  F08E         	goto	u32160
 28399   011C6A                     u32161:
 28400   011C6A  EF3B  F08E         	goto	l23175
 28401   011C6E                     u32160:
 28402   011C6E                     
 28403                           ; BSR set to: 6
 28404   011C6E  C666  F685         	movff	f_write@btw,f_write@wcnt
 28405   011C72  C667  F686         	movff	f_write@btw+1,f_write@wcnt+1
 28406   011C76                     l23175:
 28407                           
 28408                           ; BSR set to: 6
 28409                           ;../fatfs/ff.c: 4120:   memcpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
 28410   011C76  EE20 F010          	lfsr	2,16
 28411   011C7A  5162               	movf	f_write@fp& (0+255),w,b
 28412   011C7C  26D9               	addwf	fsr2l,f,c
 28413   011C7E  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28414   011C80  22DA               	addwfc	fsr2h,f,c
 28415   011C82  C4DE F66A          	movff	postinc2,??_f_write
 28416   011C86  C4DD F66B          	movff	postdec2,??_f_write+1
 28417   011C8A  0EFF               	movlw	255
 28418   011C8C  156A               	andwf	??_f_write& (0+255),w,b
 28419   011C8E  6F6C               	movwf	(??_f_write+2)& (0+255),b
 28420   011C90  0E01               	movlw	1
 28421   011C92  156B               	andwf	(??_f_write+1)& (0+255),w,b
 28422   011C94  6F6D               	movwf	(??_f_write+3)& (0+255),b
 28423   011C96  516C               	movf	(??_f_write+2)& (0+255),w,b
 28424   011C98  2562               	addwf	f_write@fp& (0+255),w,b
 28425   011C9A  6F6E               	movwf	(??_f_write+4)& (0+255),b
 28426   011C9C  516D               	movf	(??_f_write+3)& (0+255),w,b
 28427   011C9E  2163               	addwfc	(f_write@fp+1)& (0+255),w,b
 28428   011CA0  6F6F               	movwf	(??_f_write+5)& (0+255),b
 28429   011CA2  0E22               	movlw	34
 28430   011CA4  256E               	addwf	(??_f_write+4)& (0+255),w,b
 28431   011CA6  6E04               	movwf	memcpy@d1^(0+1280),c
 28432   011CA8  0E00               	movlw	0
 28433   011CAA  216F               	addwfc	(??_f_write+5)& (0+255),w,b
 28434   011CAC  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 28435   011CAE  C67B  F506         	movff	f_write@wbuff,memcpy@s1
 28436   011CB2  C67C  F507         	movff	f_write@wbuff+1,memcpy@s1+1
 28437   011CB6  C685  F508         	movff	f_write@wcnt,memcpy@n
 28438   011CBA  C686  F509         	movff	f_write@wcnt+1,memcpy@n+1
 28439   011CBE  EC00  F0FD         	call	_memcpy	;wreg free
 28440   011CC2                     
 28441                           ;../fatfs/ff.c: 4121:   fp->flag |= 0x80;
 28442   011CC2  0106               	movlb	6	; () banked
 28443   011CC4  EE20 F00E          	lfsr	2,14
 28444   011CC8  5162               	movf	f_write@fp& (0+255),w,b
 28445   011CCA  26D9               	addwf	fsr2l,f,c
 28446   011CCC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28447   011CCE  22DA               	addwfc	fsr2h,f,c
 28448   011CD0  0E00               	movlw	0
 28449   011CD2  8EDB               	bsf	plusw2,7,c
 28450   011CD4                     l23179:
 28451                           
 28452                           ; BSR set to: 6
 28453   011CD4  5185               	movf	f_write@wcnt& (0+255),w,b
 28454   011CD6  5F66               	subwf	f_write@btw& (0+255),f,b
 28455   011CD8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 28456   011CDA  5B67               	subwfb	(f_write@btw+1)& (0+255),f,b
 28457   011CDC                     
 28458                           ; BSR set to: 6
 28459   011CDC  C668  F4D9         	movff	f_write@bw,fsr2l
 28460   011CE0  C669  F4DA         	movff	f_write@bw+1,fsr2h
 28461   011CE4  5185               	movf	f_write@wcnt& (0+255),w,b
 28462   011CE6  26DE               	addwf	postinc2,f,c
 28463   011CE8  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 28464   011CEA  22DD               	addwfc	postdec2,f,c
 28465   011CEC                     
 28466                           ; BSR set to: 6
 28467   011CEC  5185               	movf	f_write@wcnt& (0+255),w,b
 28468   011CEE  277B               	addwf	f_write@wbuff& (0+255),f,b
 28469   011CF0  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 28470   011CF2  237C               	addwfc	(f_write@wbuff+1)& (0+255),f,b
 28471   011CF4                     
 28472                           ; BSR set to: 6
 28473   011CF4  EE20 F010          	lfsr	2,16
 28474   011CF8  5162               	movf	f_write@fp& (0+255),w,b
 28475   011CFA  26D9               	addwf	fsr2l,f,c
 28476   011CFC  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28477   011CFE  22DA               	addwfc	fsr2h,f,c
 28478   011D00  5185               	movf	f_write@wcnt& (0+255),w,b
 28479   011D02  26DE               	addwf	postinc2,f,c
 28480   011D04  5186               	movf	(f_write@wcnt+1)& (0+255),w,b
 28481   011D06  22DE               	addwfc	postinc2,f,c
 28482   011D08  0E00               	movlw	0
 28483   011D0A  22DE               	addwfc	postinc2,f,c
 28484   011D0C  22DE               	addwfc	postinc2,f,c
 28485   011D0E                     
 28486                           ; BSR set to: 6
 28487   011D0E  EE20 F010          	lfsr	2,16
 28488   011D12  5162               	movf	f_write@fp& (0+255),w,b
 28489   011D14  26D9               	addwf	fsr2l,f,c
 28490   011D16  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28491   011D18  22DA               	addwfc	fsr2h,f,c
 28492   011D1A  EE10 F00A          	lfsr	1,10
 28493   011D1E  5162               	movf	f_write@fp& (0+255),w,b
 28494   011D20  26E1               	addwf	fsr1l,f,c
 28495   011D22  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28496   011D24  22E2               	addwfc	fsr1h,f,c
 28497   011D26  50DE               	movf	postinc2,w,c
 28498   011D28  5CE6               	subwf	postinc1,w,c
 28499   011D2A  50DE               	movf	postinc2,w,c
 28500   011D2C  58E6               	subwfb	postinc1,w,c
 28501   011D2E  50DE               	movf	postinc2,w,c
 28502   011D30  58E6               	subwfb	postinc1,w,c
 28503   011D32  50DE               	movf	postinc2,w,c
 28504   011D34  58E6               	subwfb	postinc1,w,c
 28505   011D36  A0D8               	btfss	status,0,c
 28506   011D38  EFA0  F08E         	goto	u32171
 28507   011D3C  EFA2  F08E         	goto	u32170
 28508   011D40                     u32171:
 28509   011D40  EFB2  F08E         	goto	l23191
 28510   011D44                     u32170:
 28511   011D44                     
 28512                           ; BSR set to: 6
 28513   011D44  EE20 F00A          	lfsr	2,10
 28514   011D48  5162               	movf	f_write@fp& (0+255),w,b
 28515   011D4A  26D9               	addwf	fsr2l,f,c
 28516   011D4C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28517   011D4E  22DA               	addwfc	fsr2h,f,c
 28518   011D50  C4DE F676          	movff	postinc2,_f_write$1491
 28519   011D54  C4DE F677          	movff	postinc2,_f_write$1491+1
 28520   011D58  C4DE F678          	movff	postinc2,_f_write$1491+2
 28521   011D5C  C4DE F679          	movff	postinc2,_f_write$1491+3
 28522   011D60  EFC0  F08E         	goto	l728
 28523   011D64                     l23191:
 28524                           
 28525                           ; BSR set to: 6
 28526   011D64  EE20 F010          	lfsr	2,16
 28527   011D68  5162               	movf	f_write@fp& (0+255),w,b
 28528   011D6A  26D9               	addwf	fsr2l,f,c
 28529   011D6C  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28530   011D6E  22DA               	addwfc	fsr2h,f,c
 28531   011D70  C4DE F676          	movff	postinc2,_f_write$1491
 28532   011D74  C4DE F677          	movff	postinc2,_f_write$1491+1
 28533   011D78  C4DE F678          	movff	postinc2,_f_write$1491+2
 28534   011D7C  C4DE F679          	movff	postinc2,_f_write$1491+3
 28535   011D80                     l728:
 28536                           
 28537                           ; BSR set to: 6
 28538   011D80  EE20 F00A          	lfsr	2,10
 28539   011D84  5162               	movf	f_write@fp& (0+255),w,b
 28540   011D86  26D9               	addwf	fsr2l,f,c
 28541   011D88  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28542   011D8A  22DA               	addwfc	fsr2h,f,c
 28543   011D8C  C676  F4DE         	movff	_f_write$1491,postinc2
 28544   011D90  C677  F4DE         	movff	_f_write$1491+1,postinc2
 28545   011D94  C678  F4DE         	movff	_f_write$1491+2,postinc2
 28546   011D98  C679  F4DE         	movff	_f_write$1491+3,postinc2
 28547   011D9C  EF1B  F08B         	goto	l23067
 28548   011DA0                     l23195:
 28549                           
 28550                           ; BSR set to: 6
 28551                           ;../fatfs/ff.c: 4125:  fp->flag |= 0x40;
 28552   011DA0  EE20 F00E          	lfsr	2,14
 28553   011DA4  5162               	movf	f_write@fp& (0+255),w,b
 28554   011DA6  26D9               	addwf	fsr2l,f,c
 28555   011DA8  5163               	movf	(f_write@fp+1)& (0+255),w,b
 28556   011DAA  22DA               	addwfc	fsr2h,f,c
 28557   011DAC  0E00               	movlw	0
 28558   011DAE  8CDB               	bsf	plusw2,6,c
 28559   011DB0                     
 28560                           ; BSR set to: 6
 28561                           ;../fatfs/ff.c: 4127:  return FR_OK;
 28562   011DB0  0E00               	movlw	0
 28563   011DB2                     l699:
 28564                           
 28565                           ; BSR set to: 6
 28566   011DB2  0012               	return		;funcret
 28567   011DB4                     __end_of_f_write:
 28568                           	callstack 0
 28569                           
 28570 ;; *************** function _unimon_console *****************
 28571 ;; Defined at:
 28572 ;;		line 142 in file "../src/io_dos.c"
 28573 ;; Parameters:    Size  Location     Type
 28574 ;;		None
 28575 ;; Auto vars:     Size  Location     Type
 28576 ;;  cnt             2   14[BANK7 ] unsigned short 
 28577 ;;  buf             2   12[BANK7 ] PTR unsigned char 
 28578 ;;		 -> tmp_buf(512), 
 28579 ;; Return value:  Size  Location     Type
 28580 ;;                  1    wreg      void 
 28581 ;; Registers used:
 28582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 28583 ;; Tracked objects:
 28584 ;;		On entry : 0/0
 28585 ;;		On exit  : 0/0
 28586 ;;		Unchanged: 0/0
 28587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28589 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28591 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28592 ;;Total ram usage:        6 bytes
 28593 ;; Hardware stack levels used: 1
 28594 ;; Hardware stack levels required when called: 21
 28595 ;; This function calls:
 28596 ;;		_get_str
 28597 ;;		_in_file
 28598 ;;		_putch
 28599 ;;		_read_sram
 28600 ;;		_str_inf
 28601 ;;		_u_getch
 28602 ;;		_write_sram
 28603 ;; This function is called by:
 28604 ;;		_bus_master_operation
 28605 ;; This function uses a non-reentrant model
 28606 ;;
 28607                           
 28608                           	psect	text66
 28609   01AC5A                     __ptext66:
 28610                           	callstack 0
 28611   01AC5A                     _unimon_console:
 28612                           	callstack 101
 28613   01AC5A                     
 28614                           ;../src/io_dos.c: 144:  uint8_t *buf;;../src/io_dos.c: 145:  uint16_t cnt;;../src/io_dos
      +                          .c: 147:  buf = &tmp_buf[0][0];
 28615   01AC5A  0EF8               	movlw	low _tmp_buf
 28616   01AC5C  0107               	movlb	7	; () banked
 28617   01AC5E  6F0C               	movwf	unimon_console@buf& (0+255),b
 28618   01AC60  0E13               	movlw	high _tmp_buf
 28619   01AC62  6F0D               	movwf	(unimon_console@buf+1)& (0+255),b
 28620                           
 28621                           ;../src/io_dos.c: 148:  switch (req_tbl.UREQ_COM) {
 28622   01AC64  EFE7  F0D6         	goto	l23555
 28623   01AC68                     l23521:
 28624                           
 28625                           ; BSR set to: 7
 28626                           ;../src/io_dos.c: 151:    req_tbl.UNI_CHR = (uint8_t)(*get_char[cin_no])();
 28627   01AC68  51CC               	movf	_cin_no& (0+255),w,b
 28628   01AC6A  0D03               	mullw	3
 28629   01AC6C  0ED9               	movlw	low _get_char
 28630   01AC6E  24F3               	addwf	243,w,c
 28631   01AC70  6ED9               	movwf	fsr2l,c
 28632   01AC72  0E08               	movlw	high _get_char
 28633   01AC74  20F4               	addwfc	prodh,w,c
 28634   01AC76  6EDA               	movwf	fsr2h,c
 28635   01AC78  D802               	call	u32668
 28636   01AC7A  EF49  F0D6         	goto	u32669
 28637   01AC7E                     u32668:
 28638   01AC7E  0005               	push	
 28639   01AC80  6EFA               	movwf	pclath,c
 28640   01AC82  50DE               	movf	postinc2,w,c
 28641   01AC84  6EFD               	movwf	tosl,c
 28642   01AC86  50DE               	movf	postinc2,w,c
 28643   01AC88  6EFE               	movwf	tosh,c
 28644   01AC8A  50DE               	movf	postinc2,w,c
 28645   01AC8C  6EFF               	movwf	tosu,c
 28646   01AC8E  50FA               	movf	pclath,w,c
 28647   01AC90  0012               	return		;indir
 28648   01AC92                     u32669:
 28649   01AC92  0107               	movlb	7	; () banked
 28650   01AC94  5100               	movf	?_in_file& (0+255),w,b
 28651   01AC96  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 28652                           
 28653                           ;../src/io_dos.c: 152:    break;
 28654   01AC98  EF02  F0D7         	goto	l1237
 28655   01AC9C                     l23523:
 28656                           
 28657                           ; BSR set to: 7
 28658                           ;../src/io_dos.c: 155:    putch((char)req_tbl.UNI_CHR);
 28659   01AC9C  51CF               	movf	(_req_tbl+1)& (0+255),w,b
 28660   01AC9E  EC07  F001         	call	_putch
 28661                           
 28662                           ;../src/io_dos.c: 156:    break;
 28663   01ACA2  EF02  F0D7         	goto	l1237
 28664   01ACA6                     l23525:
 28665                           
 28666                           ; BSR set to: 7
 28667                           ;../src/io_dos.c: 159:    if ( !cin_no ) req_tbl.UNI_CHR = (rx_cnt !=0) ? 255 : 0;
 28668   01ACA6  51CC               	movf	_cin_no& (0+255),w,b
 28669   01ACA8  A4D8               	btfss	status,2,c
 28670   01ACAA  EF59  F0D6         	goto	u32671
 28671   01ACAE  EF5B  F0D6         	goto	u32670
 28672   01ACB2                     u32671:
 28673   01ACB2  EF71  F0D6         	goto	l1240
 28674   01ACB6                     u32670:
 28675   01ACB6                     
 28676                           ; BSR set to: 7
 28677   01ACB6  51C1               	movf	_rx_cnt& (0+255),w,b
 28678   01ACB8  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 28679   01ACBA  A4D8               	btfss	status,2,c
 28680   01ACBC  EF62  F0D6         	goto	u32681
 28681   01ACC0  EF64  F0D6         	goto	u32680
 28682   01ACC4                     u32681:
 28683   01ACC4  EF6A  F0D6         	goto	l23531
 28684   01ACC8                     u32680:
 28685   01ACC8                     
 28686                           ; BSR set to: 7
 28687   01ACC8  0E00               	movlw	0
 28688   01ACCA  6F0B               	movwf	(_unimon_console$2625+1)& (0+255),b
 28689   01ACCC  0E00               	movlw	0
 28690   01ACCE  6F0A               	movwf	_unimon_console$2625& (0+255),b
 28691   01ACD0  EF6D  F0D6         	goto	l23533
 28692   01ACD4                     l23531:
 28693                           
 28694                           ; BSR set to: 7
 28695   01ACD4  0E00               	movlw	0
 28696   01ACD6  6F0B               	movwf	(_unimon_console$2625+1)& (0+255),b
 28697   01ACD8  690A               	setf	_unimon_console$2625& (0+255),b
 28698   01ACDA                     l23533:
 28699                           
 28700                           ; BSR set to: 7
 28701   01ACDA  C70A  F7CF         	movff	_unimon_console$2625,_req_tbl+1
 28702   01ACDE  EF02  F0D7         	goto	l1237
 28703   01ACE2                     l1240:
 28704                           
 28705                           ; BSR set to: 7
 28706   01ACE2  69CF               	setf	(_req_tbl+1)& (0+255),b
 28707   01ACE4  EF02  F0D7         	goto	l1237
 28708   01ACE8                     l1246:
 28709                           
 28710                           ; BSR set to: 7
 28711                           ;../src/io_dos.c: 163:    cnt = (uint16_t)req_tbl.UNI_CHR;
 28712   01ACE8  C7CF  F70E         	movff	_req_tbl+1,unimon_console@cnt
 28713   01ACEC  6B0F               	clrf	(unimon_console@cnt+1)& (0+255),b
 28714   01ACEE                     
 28715                           ; BSR set to: 7
 28716                           ;../src/io_dos.c: 165:    read_sram(req_tbl.data_adr, buf, cnt);
 28717   01ACEE  C7D7  F504         	movff	_req_tbl+9,read_sram@addr
 28718   01ACF2  C7D8  F505         	movff	_req_tbl+10,read_sram@addr+1
 28719   01ACF6  C7D9  F506         	movff	_req_tbl+11,read_sram@addr+2
 28720   01ACFA  C7DA  F507         	movff	_req_tbl+12,read_sram@addr+3
 28721   01ACFE  C70C  F508         	movff	unimon_console@buf,read_sram@buf
 28722   01AD02  C70D  F509         	movff	unimon_console@buf+1,read_sram@buf+1
 28723   01AD06  C70E  F50A         	movff	unimon_console@cnt,read_sram@len
 28724   01AD0A  C70F  F50B         	movff	unimon_console@cnt+1,read_sram@len+1
 28725   01AD0E  EC0C  F0F2         	call	_read_sram	;wreg free
 28726                           
 28727                           ;../src/io_dos.c: 166:    while( cnt ) {
 28728   01AD12  EF98  F0D6         	goto	l23543
 28729   01AD16                     l23537:
 28730                           
 28731                           ; BSR set to: 7
 28732                           ;../src/io_dos.c: 167:     putch( *buf++);
 28733   01AD16  C70C  F4D9         	movff	unimon_console@buf,fsr2l
 28734   01AD1A  C70D  F4DA         	movff	unimon_console@buf+1,fsr2h
 28735   01AD1E  50DF               	movf	indf2,w,c
 28736   01AD20  EC07  F001         	call	_putch
 28737   01AD24  0107               	movlb	7	; () banked
 28738   01AD26  4B0C               	infsnz	unimon_console@buf& (0+255),f,b
 28739   01AD28  2B0D               	incf	(unimon_console@buf+1)& (0+255),f,b
 28740   01AD2A                     
 28741                           ; BSR set to: 7
 28742                           ;../src/io_dos.c: 168:     cnt--;
 28743   01AD2A  070E               	decf	unimon_console@cnt& (0+255),f,b
 28744   01AD2C  A0D8               	btfss	status,0,c
 28745   01AD2E  070F               	decf	(unimon_console@cnt+1)& (0+255),f,b
 28746   01AD30                     l23543:
 28747                           
 28748                           ;../src/io_dos.c: 166:    while( cnt ) {
 28749   01AD30  0107               	movlb	7	; () banked
 28750   01AD32  510E               	movf	unimon_console@cnt& (0+255),w,b
 28751   01AD34  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 28752   01AD36  A4D8               	btfss	status,2,c
 28753   01AD38  EFA0  F0D6         	goto	u32691
 28754   01AD3C  EFA2  F0D6         	goto	u32690
 28755   01AD40                     u32691:
 28756   01AD40  EF8B  F0D6         	goto	l23537
 28757   01AD44                     u32690:
 28758   01AD44  EF02  F0D7         	goto	l1237
 28759   01AD48                     l23545:
 28760                           
 28761                           ; BSR set to: 7
 28762                           ;../src/io_dos.c: 172:    cnt = (uint16_t)(*strin_func[cin_no])((char *)buf, req_tbl.UNI
      +                          _CHR);
 28763   01AD48  C70C  F700         	movff	unimon_console@buf,str_inf@buf
 28764   01AD4C  C70D  F701         	movff	unimon_console@buf+1,str_inf@buf+1
 28765   01AD50  C7CF  F702         	movff	_req_tbl+1,str_inf@cnt
 28766   01AD54  51CC               	movf	_cin_no& (0+255),w,b
 28767   01AD56  0D03               	mullw	3
 28768   01AD58  0ED3               	movlw	low _strin_func
 28769   01AD5A  24F3               	addwf	243,w,c
 28770   01AD5C  6ED9               	movwf	fsr2l,c
 28771   01AD5E  0E08               	movlw	high _strin_func
 28772   01AD60  20F4               	addwfc	prodh,w,c
 28773   01AD62  6EDA               	movwf	fsr2h,c
 28774   01AD64  D802               	call	u32708
 28775   01AD66  EFBF  F0D6         	goto	u32709
 28776   01AD6A                     u32708:
 28777   01AD6A  0005               	push	
 28778   01AD6C  6EFA               	movwf	pclath,c
 28779   01AD6E  50DE               	movf	postinc2,w,c
 28780   01AD70  6EFD               	movwf	tosl,c
 28781   01AD72  50DE               	movf	postinc2,w,c
 28782   01AD74  6EFE               	movwf	tosh,c
 28783   01AD76  50DE               	movf	postinc2,w,c
 28784   01AD78  6EFF               	movwf	tosu,c
 28785   01AD7A  50FA               	movf	pclath,w,c
 28786   01AD7C  0012               	return		;indir
 28787   01AD7E                     u32709:
 28788   01AD7E  C700  F70E         	movff	?_str_inf,unimon_console@cnt
 28789   01AD82  C701  F70F         	movff	?_str_inf+1,unimon_console@cnt+1
 28790   01AD86                     
 28791                           ;../src/io_dos.c: 173:    req_tbl.UNI_CHR = (uint8_t)cnt;
 28792   01AD86  C70E  F7CF         	movff	unimon_console@cnt,_req_tbl+1
 28793   01AD8A                     
 28794                           ;../src/io_dos.c: 174:    if (cnt) write_sram(req_tbl.data_adr, buf, (unsigned int)cnt);
 28795   01AD8A  0107               	movlb	7	; () banked
 28796   01AD8C  510E               	movf	unimon_console@cnt& (0+255),w,b
 28797   01AD8E  110F               	iorwf	(unimon_console@cnt+1)& (0+255),w,b
 28798   01AD90  B4D8               	btfsc	status,2,c
 28799   01AD92  EFCD  F0D6         	goto	u32711
 28800   01AD96  EFCF  F0D6         	goto	u32710
 28801   01AD9A                     u32711:
 28802   01AD9A  EF02  F0D7         	goto	l1237
 28803   01AD9E                     u32710:
 28804   01AD9E                     
 28805                           ; BSR set to: 7
 28806   01AD9E  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 28807   01ADA2  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 28808   01ADA6  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 28809   01ADAA  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 28810   01ADAE  C70C  F508         	movff	unimon_console@buf,write_sram@buf
 28811   01ADB2  C70D  F509         	movff	unimon_console@buf+1,write_sram@buf+1
 28812   01ADB6  C70E  F50A         	movff	unimon_console@cnt,write_sram@len
 28813   01ADBA  C70F  F50B         	movff	unimon_console@cnt+1,write_sram@len+1
 28814   01ADBE  EC9F  F0E8         	call	_write_sram	;wreg free
 28815   01ADC2  EF02  F0D7         	goto	l1237
 28816   01ADC6                     l1252:
 28817                           
 28818                           ; BSR set to: 7
 28819                           ;../src/io_dos.c: 177:    wup_flg = req_tbl.UNI_CHR;
 28820   01ADC6  C7CF  F7CB         	movff	_req_tbl+1,_wup_flg
 28821                           
 28822                           ;../src/io_dos.c: 178:    break;
 28823   01ADCA  EF02  F0D7         	goto	l1237
 28824   01ADCE                     l23555:
 28825                           
 28826                           ; BSR set to: 7
 28827   01ADCE  51CE               	movf	_req_tbl& (0+255),w,b
 28828                           
 28829                           ; Switch size 1, requested type "simple"
 28830                           ; Number of cases is 6, Range of values is 1 to 255
 28831                           ; switch strategies available:
 28832                           ; Name         Instructions Cycles
 28833                           ; simple_byte           19    10 (average)
 28834                           ;	Chosen strategy is simple_byte
 28835   01ADD0  0A01               	xorlw	1	; case 1
 28836   01ADD2  B4D8               	btfsc	status,2,c
 28837   01ADD4  EF34  F0D6         	goto	l23521
 28838   01ADD8  0A03               	xorlw	3	; case 2
 28839   01ADDA  B4D8               	btfsc	status,2,c
 28840   01ADDC  EF4E  F0D6         	goto	l23523
 28841   01ADE0  0A01               	xorlw	1	; case 3
 28842   01ADE2  B4D8               	btfsc	status,2,c
 28843   01ADE4  EF53  F0D6         	goto	l23525
 28844   01ADE8  0A07               	xorlw	7	; case 4
 28845   01ADEA  B4D8               	btfsc	status,2,c
 28846   01ADEC  EF74  F0D6         	goto	l1246
 28847   01ADF0  0A03               	xorlw	3	; case 7
 28848   01ADF2  B4D8               	btfsc	status,2,c
 28849   01ADF4  EFA4  F0D6         	goto	l23545
 28850   01ADF8  0AF8               	xorlw	248	; case 255
 28851   01ADFA  B4D8               	btfsc	status,2,c
 28852   01ADFC  EFE3  F0D6         	goto	l1252
 28853   01AE00  EF02  F0D7         	goto	l1237
 28854   01AE04                     l1237:
 28855                           
 28856                           ;../src/io_dos.c: 180:  req_tbl.UREQ_COM = 0;
 28857   01AE04  0107               	movlb	7	; () banked
 28858   01AE06  6BCE               	clrf	_req_tbl& (0+255),b
 28859   01AE08                     
 28860                           ; BSR set to: 7
 28861   01AE08  0012               	return		;funcret
 28862   01AE0A                     __end_of_unimon_console:
 28863                           	callstack 0
 28864                           
 28865 ;; *************** function _in_file *****************
 28866 ;; Defined at:
 28867 ;;		line 943 in file "../src/w65_main.c"
 28868 ;; Parameters:    Size  Location     Type
 28869 ;;		None
 28870 ;; Auto vars:     Size  Location     Type
 28871 ;;  chr             1  159[BANK5 ] unsigned char 
 28872 ;; Return value:  Size  Location     Type
 28873 ;;                  2    0[BANK7 ] int 
 28874 ;; Registers used:
 28875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28876 ;; Tracked objects:
 28877 ;;		On entry : 0/0
 28878 ;;		On exit  : 0/0
 28879 ;;		Unchanged: 0/0
 28880 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28881 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28884 ;;      Totals:         0       1       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28885 ;;Total ram usage:        3 bytes
 28886 ;; Hardware stack levels used: 1
 28887 ;; Hardware stack levels required when called: 20
 28888 ;; This function calls:
 28889 ;;		_f_close
 28890 ;;		_f_open
 28891 ;;		_f_read
 28892 ;;		_printf
 28893 ;; This function is called by:
 28894 ;;		_unimon_console
 28895 ;;		_bus_master_operation
 28896 ;; This function uses a non-reentrant model
 28897 ;;
 28898                           
 28899                           	psect	text67
 28900   01BFA6                     __ptext67:
 28901                           	callstack 0
 28902   01BFA6                     _in_file:
 28903                           	callstack 101
 28904   01BFA6                     
 28905                           ;../src/w65_main.c: 945:  uint8_t chr;;../src/w65_main.c: 947:  if ( fin_cnt == 0xffff )
      +                           {
 28906   01BFA6  0107               	movlb	7	; () banked
 28907   01BFA8  29E3               	incf	_fin_cnt& (0+255),w,b
 28908   01BFAA  E106               	bnz	u32291
 28909   01BFAC  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 28910   01BFAE  A4D8               	btfss	status,2,c
 28911   01BFB0  EFDC  F0DF         	goto	u32291
 28912   01BFB4  EFDE  F0DF         	goto	u32290
 28913   01BFB8                     u32291:
 28914   01BFB8  EF15  F0E0         	goto	l23285
 28915   01BFBC                     u32290:
 28916   01BFBC                     
 28917                           ; BSR set to: 7
 28918                           ;../src/w65_main.c: 949:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 28919   01BFBC  0EB4               	movlw	low _in_fl
 28920   01BFBE  0106               	movlb	6	; () banked
 28921   01BFC0  6FAF               	movwf	f_open@fp& (0+255),b
 28922   01BFC2  0E0D               	movlw	high _in_fl
 28923   01BFC4  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 28924   01BFC6  0EC2               	movlw	low _fin_name
 28925   01BFC8  6FB1               	movwf	f_open@path& (0+255),b
 28926   01BFCA  0E08               	movlw	high _fin_name
 28927   01BFCC  6FB2               	movwf	(f_open@path+1)& (0+255),b
 28928   01BFCE  0E01               	movlw	1
 28929   01BFD0  6FB3               	movwf	f_open@mode& (0+255),b
 28930   01BFD2  ECDB  F092         	call	_f_open	;wreg free
 28931   01BFD6  0900               	iorlw	0
 28932   01BFD8  B4D8               	btfsc	status,2,c
 28933   01BFDA  EFF1  F0DF         	goto	u32301
 28934   01BFDE  EFF3  F0DF         	goto	u32300
 28935   01BFE2                     u32301:
 28936   01BFE2  EF06  F0E0         	goto	l23281
 28937   01BFE6                     u32300:
 28938   01BFE6                     
 28939                           ;../src/w65_main.c: 950:    printf("File Open Error. %s\r\n", &fin_name[0]);
 28940   01BFE6  0E04               	movlw	low STR_163
 28941   01BFE8  0105               	movlb	5	; () banked
 28942   01BFEA  6FAD               	movwf	printf@fmt& (0+255),b
 28943   01BFEC  0EFC               	movlw	high STR_163
 28944   01BFEE  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 28945   01BFF0  0EC2               	movlw	low _fin_name
 28946   01BFF2  6FAF               	movwf	(?_printf+2)& (0+255),b
 28947   01BFF4  0E08               	movlw	high _fin_name
 28948   01BFF6  6FB0               	movwf	(?_printf+3)& (0+255),b
 28949   01BFF8  ECDA  F0FF         	call	_printf	;wreg free
 28950   01BFFC                     l23275:
 28951                           
 28952                           ;../src/w65_main.c: 951:    cin_no = 0;
 28953   01BFFC  0107               	movlb	7	; () banked
 28954   01BFFE  6BCC               	clrf	_cin_no& (0+255),b
 28955   01C000                     
 28956                           ; BSR set to: 7
 28957                           ;../src/w65_main.c: 952:    return 0;
 28958   01C000  0E00               	movlw	0
 28959   01C002  6F01               	movwf	(?_in_file+1)& (0+255),b
 28960   01C004  0E00               	movlw	0
 28961   01C006  6F00               	movwf	?_in_file& (0+255),b
 28962   01C008  EF8F  F0E0         	goto	l1781
 28963   01C00C                     l23281:
 28964                           
 28965                           ;../src/w65_main.c: 954:   fin_cnt=0;
 28966   01C00C  0E00               	movlw	0
 28967   01C00E  0107               	movlb	7	; () banked
 28968   01C010  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 28969   01C012  0E00               	movlw	0
 28970   01C014  6FE3               	movwf	_fin_cnt& (0+255),b
 28971                           
 28972                           ;../src/w65_main.c: 955:   frd_ptr = 0;
 28973   01C016  0E00               	movlw	0
 28974   01C018  6FC0               	movwf	(_frd_ptr+1)& (0+255),b
 28975   01C01A  0E00               	movlw	0
 28976   01C01C  6FBF               	movwf	_frd_ptr& (0+255),b
 28977   01C01E                     
 28978                           ; BSR set to: 7
 28979                           ;../src/w65_main.c: 956:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 28980   01C01E  0063  F6F8  F7BD   	movff	_in_fl+10,_fin_size
 28981   01C024  0063  F6FC  F7BE   	movff	_in_fl+11,_fin_size+1
 28982   01C02A                     l23285:
 28983                           
 28984                           ;../src/w65_main.c: 961:  if ( !fin_cnt ) {
 28985   01C02A  0107               	movlb	7	; () banked
 28986   01C02C  51E3               	movf	_fin_cnt& (0+255),w,b
 28987   01C02E  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 28988   01C030  A4D8               	btfss	status,2,c
 28989   01C032  EF1D  F0E0         	goto	u32311
 28990   01C036  EF1F  F0E0         	goto	u32310
 28991   01C03A                     u32311:
 28992   01C03A  EF4E  F0E0         	goto	l23299
 28993   01C03E                     u32310:
 28994   01C03E                     
 28995                           ; BSR set to: 7
 28996                           ;../src/w65_main.c: 962:   frd_ptr = 0;
 28997   01C03E  0E00               	movlw	0
 28998   01C040  6FC0               	movwf	(_frd_ptr+1)& (0+255),b
 28999   01C042  0E00               	movlw	0
 29000   01C044  6FBF               	movwf	_frd_ptr& (0+255),b
 29001   01C046                     
 29002                           ; BSR set to: 7
 29003                           ;../src/w65_main.c: 963:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt 
      +                          ) ) {
 29004   01C046  0EB4               	movlw	low _in_fl
 29005   01C048  0106               	movlb	6	; () banked
 29006   01C04A  6F3E               	movwf	f_read@fp& (0+255),b
 29007   01C04C  0E0D               	movlw	high _in_fl
 29008   01C04E  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 29009   01C050  0EF8               	movlw	low _cin_file
 29010   01C052  6F40               	movwf	f_read@buff& (0+255),b
 29011   01C054  0E11               	movlw	high _cin_file
 29012   01C056  6F41               	movwf	(f_read@buff+1)& (0+255),b
 29013   01C058  0E02               	movlw	2
 29014   01C05A  6F43               	movwf	(f_read@btr+1)& (0+255),b
 29015   01C05C  0E00               	movlw	0
 29016   01C05E  6F42               	movwf	f_read@btr& (0+255),b
 29017   01C060  0EE3               	movlw	low _fin_cnt
 29018   01C062  6F44               	movwf	f_read@br& (0+255),b
 29019   01C064  0E07               	movlw	high _fin_cnt
 29020   01C066  6F45               	movwf	(f_read@br+1)& (0+255),b
 29021   01C068  EC9B  F096         	call	_f_read	;wreg free
 29022   01C06C  0900               	iorlw	0
 29023   01C06E  B4D8               	btfsc	status,2,c
 29024   01C070  EF3C  F0E0         	goto	u32321
 29025   01C074  EF3E  F0E0         	goto	u32320
 29026   01C078                     u32321:
 29027   01C078  EF4E  F0E0         	goto	l23299
 29028   01C07C                     u32320:
 29029   01C07C                     
 29030                           ;../src/w65_main.c: 964:    printf("File read error.\r\n");
 29031   01C07C  0E0F               	movlw	low STR_164
 29032   01C07E  0105               	movlb	5	; () banked
 29033   01C080  6FAD               	movwf	printf@fmt& (0+255),b
 29034   01C082  0EFD               	movlw	high STR_164
 29035   01C084  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 29036   01C086  ECDA  F0FF         	call	_printf	;wreg free
 29037                           
 29038                           ;../src/w65_main.c: 965:    f_close( &in_fl );
 29039   01C08A  0EB4               	movlw	low _in_fl
 29040   01C08C  0106               	movlb	6	; () banked
 29041   01C08E  6F2F               	movwf	f_close@fp& (0+255),b
 29042   01C090  0E0D               	movlw	high _in_fl
 29043   01C092  6F30               	movwf	(f_close@fp+1)& (0+255),b
 29044   01C094  ECDB  F0FB         	call	_f_close	;wreg free
 29045   01C098  EFFE  F0DF         	goto	l23275
 29046   01C09C                     l23299:
 29047                           
 29048                           ;../src/w65_main.c: 971:  chr = cin_file[frd_ptr++];
 29049   01C09C  0EF8               	movlw	low _cin_file
 29050   01C09E  0107               	movlb	7	; () banked
 29051   01C0A0  25BF               	addwf	_frd_ptr& (0+255),w,b
 29052   01C0A2  6ED9               	movwf	fsr2l,c
 29053   01C0A4  0E11               	movlw	high _cin_file
 29054   01C0A6  21C0               	addwfc	(_frd_ptr+1)& (0+255),w,b
 29055   01C0A8  6EDA               	movwf	fsr2h,c
 29056   01C0AA  50DF               	movf	indf2,w,c
 29057   01C0AC  0105               	movlb	5	; () banked
 29058   01C0AE  6FFF               	movwf	in_file@chr& (0+255),b
 29059   01C0B0                     
 29060                           ; BSR set to: 5
 29061   01C0B0  0107               	movlb	7	; () banked
 29062   01C0B2  4BBF               	infsnz	_frd_ptr& (0+255),f,b
 29063   01C0B4  2BC0               	incf	(_frd_ptr+1)& (0+255),f,b
 29064   01C0B6                     
 29065                           ; BSR set to: 7
 29066                           ;../src/w65_main.c: 972:  fin_cnt--;
 29067   01C0B6  07E3               	decf	_fin_cnt& (0+255),f,b
 29068   01C0B8  A0D8               	btfss	status,0,c
 29069   01C0BA  07E4               	decf	(_fin_cnt+1)& (0+255),f,b
 29070   01C0BC                     
 29071                           ; BSR set to: 7
 29072                           ;../src/w65_main.c: 973:  fin_size--;
 29073   01C0BC  07BD               	decf	_fin_size& (0+255),f,b
 29074   01C0BE  A0D8               	btfss	status,0,c
 29075   01C0C0  07BE               	decf	(_fin_size+1)& (0+255),f,b
 29076   01C0C2                     
 29077                           ; BSR set to: 7
 29078                           ;../src/w65_main.c: 975:  if ( !fin_size ) {
 29079   01C0C2  51BD               	movf	_fin_size& (0+255),w,b
 29080   01C0C4  11BE               	iorwf	(_fin_size+1)& (0+255),w,b
 29081   01C0C6  A4D8               	btfss	status,2,c
 29082   01C0C8  EF68  F0E0         	goto	u32331
 29083   01C0CC  EF6A  F0E0         	goto	u32330
 29084   01C0D0                     u32331:
 29085   01C0D0  EF84  F0E0         	goto	l23321
 29086   01C0D4                     u32330:
 29087   01C0D4                     
 29088                           ; BSR set to: 7
 29089                           ;../src/w65_main.c: 976:   f_close( &in_fl );
 29090   01C0D4  0EB4               	movlw	low _in_fl
 29091   01C0D6  0106               	movlb	6	; () banked
 29092   01C0D8  6F2F               	movwf	f_close@fp& (0+255),b
 29093   01C0DA  0E0D               	movlw	high _in_fl
 29094   01C0DC  6F30               	movwf	(f_close@fp+1)& (0+255),b
 29095   01C0DE  ECDB  F0FB         	call	_f_close	;wreg free
 29096   01C0E2                     
 29097                           ;../src/w65_main.c: 977:   cin_no = 0;
 29098   01C0E2  0107               	movlb	7	; () banked
 29099   01C0E4  6BCC               	clrf	_cin_no& (0+255),b
 29100   01C0E6                     
 29101                           ; BSR set to: 7
 29102                           ;../src/w65_main.c: 978:   if ( chr < 0x0d ) chr = 0x0d;
 29103   01C0E6  0E0D               	movlw	13
 29104   01C0E8  0105               	movlb	5	; () banked
 29105   01C0EA  61FF               	cpfslt	in_file@chr& (0+255),b
 29106   01C0EC  EF7A  F0E0         	goto	u32341
 29107   01C0F0  EF7C  F0E0         	goto	u32340
 29108   01C0F4                     u32341:
 29109   01C0F4  EF7E  F0E0         	goto	l23317
 29110   01C0F8                     u32340:
 29111   01C0F8                     
 29112                           ; BSR set to: 5
 29113   01C0F8  0E0D               	movlw	13
 29114   01C0FA  6FFF               	movwf	in_file@chr& (0+255),b
 29115   01C0FC                     l23317:
 29116                           
 29117                           ; BSR set to: 5
 29118                           ;../src/w65_main.c: 979:   return chr;
 29119   01C0FC  C5FF  F700         	movff	in_file@chr,?_in_file
 29120   01C100  0107               	movlb	7	; () banked
 29121   01C102  6B01               	clrf	(?_in_file+1)& (0+255),b
 29122   01C104  EF8F  F0E0         	goto	l1781
 29123   01C108                     l23321:
 29124                           
 29125                           ; BSR set to: 7
 29126                           ;../src/w65_main.c: 982:  if ( chr < 0x0d ) goto next_char;
 29127   01C108  0E0D               	movlw	13
 29128   01C10A  0105               	movlb	5	; () banked
 29129   01C10C  61FF               	cpfslt	in_file@chr& (0+255),b
 29130   01C10E  EF8B  F0E0         	goto	u32351
 29131   01C112  EF8D  F0E0         	goto	u32350
 29132   01C116                     u32351:
 29133   01C116  EF7E  F0E0         	goto	l23317
 29134   01C11A                     u32350:
 29135   01C11A  EF15  F0E0         	goto	l23285
 29136   01C11E                     l1781:
 29137                           
 29138                           ; BSR set to: 7
 29139   01C11E  0012               	return		;funcret
 29140   01C120                     __end_of_in_file:
 29141                           	callstack 0
 29142                           
 29143 ;; *************** function _u_getch *****************
 29144 ;; Defined at:
 29145 ;;		line 151 in file "../src/boards/w65_cmn.c"
 29146 ;; Parameters:    Size  Location     Type
 29147 ;;		None
 29148 ;; Auto vars:     Size  Location     Type
 29149 ;;  c               1  159[BANK5 ] unsigned char 
 29150 ;; Return value:  Size  Location     Type
 29151 ;;                  2    0[BANK7 ] int 
 29152 ;; Registers used:
 29153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29154 ;; Tracked objects:
 29155 ;;		On entry : 0/0
 29156 ;;		On exit  : 0/0
 29157 ;;		Unchanged: 0/0
 29158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29159 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29161 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29162 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29163 ;;Total ram usage:        5 bytes
 29164 ;; Hardware stack levels used: 1
 29165 ;; Hardware stack levels required when called: 1
 29166 ;; This function calls:
 29167 ;;		Nothing
 29168 ;; This function is called by:
 29169 ;;		_unimon_console
 29170 ;;		_bus_master_operation
 29171 ;; This function uses a non-reentrant model
 29172 ;;
 29173                           
 29174                           	psect	text68
 29175   01F54C                     __ptext68:
 29176                           	callstack 0
 29177   01F54C                     _u_getch:
 29178                           	callstack 120
 29179   01F54C                     
 29180                           ;../src/boards/w65_cmn.c: 152:  char c;;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 29181   01F54C  EFB6  F0FA         	goto	l23397
 29182   01F550                     l23391:
 29183                           
 29184                           ; BSR set to: 7
 29185                           ;../src/boards/w65_cmn.c: 155:   if (nmi_sig) return(0);
 29186   01F550  51CA               	movf	_nmi_sig& (0+255),w,b
 29187   01F552  B4D8               	btfsc	status,2,c
 29188   01F554  EFAE  F0FA         	goto	u32441
 29189   01F558  EFB0  F0FA         	goto	u32440
 29190   01F55C                     u32441:
 29191   01F55C  EFB6  F0FA         	goto	l23397
 29192   01F560                     u32440:
 29193   01F560                     
 29194                           ; BSR set to: 7
 29195   01F560  0E00               	movlw	0
 29196   01F562  6F01               	movwf	(?_u_getch+1)& (0+255),b
 29197   01F564  0E00               	movlw	0
 29198   01F566  6F00               	movwf	?_u_getch& (0+255),b
 29199   01F568  EFDC  F0FA         	goto	l2130
 29200   01F56C                     l23397:
 29201                           
 29202                           ;../src/boards/w65_cmn.c: 154:  while(!rx_cnt) {
 29203   01F56C  0107               	movlb	7	; () banked
 29204   01F56E  51C1               	movf	_rx_cnt& (0+255),w,b
 29205   01F570  11C2               	iorwf	(_rx_cnt+1)& (0+255),w,b
 29206   01F572  B4D8               	btfsc	status,2,c
 29207   01F574  EFBE  F0FA         	goto	u32451
 29208   01F578  EFC0  F0FA         	goto	u32450
 29209   01F57C                     u32451:
 29210   01F57C  EFA8  F0FA         	goto	l23391
 29211   01F580                     u32450:
 29212   01F580                     
 29213                           ; BSR set to: 7
 29214                           ;../src/boards/w65_cmn.c: 157:  U3RXIE = 0;
 29215   01F580  90A7               	bcf	1191,0,c	;volatile
 29216   01F582                     
 29217                           ; BSR set to: 7
 29218                           ;../src/boards/w65_cmn.c: 158:  c = rx_buf[rx_rp];
 29219   01F582  0E00               	movlw	low _rx_buf
 29220   01F584  25B7               	addwf	_rx_rp& (0+255),w,b
 29221   01F586  6ED9               	movwf	fsr2l,c
 29222   01F588  0E0B               	movlw	high _rx_buf
 29223   01F58A  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 29224   01F58C  6EDA               	movwf	fsr2h,c
 29225   01F58E  50DF               	movf	indf2,w,c
 29226   01F590  0105               	movlb	5	; () banked
 29227   01F592  6FFF               	movwf	u_getch@c& (0+255),b
 29228   01F594                     
 29229                           ; BSR set to: 5
 29230                           ;../src/boards/w65_cmn.c: 159:  rx_rp = (rx_rp + 1) & ( 128 - 1);
 29231   01F594  0E01               	movlw	1
 29232   01F596  0107               	movlb	7	; () banked
 29233   01F598  25B7               	addwf	_rx_rp& (0+255),w,b
 29234   01F59A  6F02               	movwf	??_u_getch& (0+255),b
 29235   01F59C  0E00               	movlw	0
 29236   01F59E  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 29237   01F5A0  6F03               	movwf	(??_u_getch+1)& (0+255),b
 29238   01F5A2  0E7F               	movlw	127
 29239   01F5A4  1502               	andwf	??_u_getch& (0+255),w,b
 29240   01F5A6  6FB7               	movwf	_rx_rp& (0+255),b
 29241   01F5A8  6BB8               	clrf	(_rx_rp+1)& (0+255),b
 29242   01F5AA                     
 29243                           ; BSR set to: 7
 29244                           ;../src/boards/w65_cmn.c: 160:  rx_cnt--;
 29245   01F5AA  07C1               	decf	_rx_cnt& (0+255),f,b
 29246   01F5AC  A0D8               	btfss	status,0,c
 29247   01F5AE  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 29248   01F5B0                     
 29249                           ; BSR set to: 7
 29250                           ;../src/boards/w65_cmn.c: 161:  U3RXIE = 1;
 29251   01F5B0  80A7               	bsf	1191,0,c	;volatile
 29252   01F5B2                     
 29253                           ; BSR set to: 7
 29254                           ;../src/boards/w65_cmn.c: 162:     return c;
 29255   01F5B2  C5FF  F700         	movff	u_getch@c,?_u_getch
 29256   01F5B6  6B01               	clrf	(?_u_getch+1)& (0+255),b
 29257   01F5B8                     l2130:
 29258                           
 29259                           ; BSR set to: 7
 29260   01F5B8  0012               	return		;funcret
 29261   01F5BA                     __end_of_u_getch:
 29262                           	callstack 0
 29263                           
 29264 ;; *************** function _get_str *****************
 29265 ;; Defined at:
 29266 ;;		line 165 in file "../src/boards/w65_cmn.c"
 29267 ;; Parameters:    Size  Location     Type
 29268 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 29269 ;;		 -> tmp_buf(512), 
 29270 ;;  cnt             1    2[BANK7 ] unsigned char 
 29271 ;; Auto vars:     Size  Location     Type
 29272 ;;  i               2    7[BANK7 ] unsigned int 
 29273 ;;  c               2    5[BANK7 ] unsigned int 
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  2    0[BANK7 ] unsigned int 
 29276 ;; Registers used:
 29277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29283 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29284 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29285 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29286 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29287 ;;Total ram usage:        9 bytes
 29288 ;; Hardware stack levels used: 1
 29289 ;; Hardware stack levels required when called: 1
 29290 ;; This function calls:
 29291 ;;		Nothing
 29292 ;; This function is called by:
 29293 ;;		_unimon_console
 29294 ;;		_bus_master_operation
 29295 ;; This function uses a non-reentrant model
 29296 ;;
 29297                           
 29298                           	psect	text69
 29299   01EE12                     __ptext69:
 29300                           	callstack 0
 29301   01EE12                     _get_str:
 29302                           	callstack 120
 29303   01EE12                     
 29304                           ;../src/boards/w65_cmn.c: 166:  unsigned int c, i;;../src/boards/w65_cmn.c: 168:  U3RXIE
      +                           = 0;
 29305   01EE12  90A7               	bcf	1191,0,c	;volatile
 29306   01EE14                     
 29307                           ;../src/boards/w65_cmn.c: 169:  i = ( (unsigned int)cnt > rx_cnt ) ? rx_cnt : (unsigned 
      +                          int)cnt;
 29308   01EE14  0107               	movlb	7	; () banked
 29309   01EE16  5102               	movf	get_str@cnt& (0+255),w,b
 29310   01EE18  6F03               	movwf	??_get_str& (0+255),b
 29311   01EE1A  6B04               	clrf	(??_get_str+1)& (0+255),b
 29312   01EE1C  5103               	movf	??_get_str& (0+255),w,b
 29313   01EE1E  5DC1               	subwf	_rx_cnt& (0+255),w,b
 29314   01EE20  5104               	movf	(??_get_str+1)& (0+255),w,b
 29315   01EE22  59C2               	subwfb	(_rx_cnt+1)& (0+255),w,b
 29316   01EE24  A0D8               	btfss	status,0,c
 29317   01EE26  EF17  F0F7         	goto	u32461
 29318   01EE2A  EF19  F0F7         	goto	u32460
 29319   01EE2E                     u32461:
 29320   01EE2E  EF1E  F0F7         	goto	l2135
 29321   01EE32                     u32460:
 29322   01EE32                     
 29323                           ; BSR set to: 7
 29324   01EE32  C702  F707         	movff	get_str@cnt,get_str@i
 29325   01EE36  6B08               	clrf	(get_str@i+1)& (0+255),b
 29326   01EE38  EF22  F0F7         	goto	l2137
 29327   01EE3C                     l2135:
 29328                           
 29329                           ; BSR set to: 7
 29330   01EE3C  C7C1  F707         	movff	_rx_cnt,get_str@i
 29331   01EE40  C7C2  F708         	movff	_rx_cnt+1,get_str@i+1
 29332   01EE44                     l2137:
 29333                           
 29334                           ; BSR set to: 7
 29335                           ;../src/boards/w65_cmn.c: 170:  c = i;
 29336   01EE44  C707  F705         	movff	get_str@i,get_str@c
 29337   01EE48  C708  F706         	movff	get_str@i+1,get_str@c+1
 29338                           
 29339                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 29340   01EE4C  EF43  F0F7         	goto	l23425
 29341   01EE50                     l23417:
 29342                           
 29343                           ; BSR set to: 7
 29344                           ;../src/boards/w65_cmn.c: 172:   *buf++ = rx_buf[rx_rp];
 29345   01EE50  0E00               	movlw	low _rx_buf
 29346   01EE52  25B7               	addwf	_rx_rp& (0+255),w,b
 29347   01EE54  6ED9               	movwf	fsr2l,c
 29348   01EE56  0E0B               	movlw	high _rx_buf
 29349   01EE58  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 29350   01EE5A  6EDA               	movwf	fsr2h,c
 29351   01EE5C  C700  F4E1         	movff	get_str@buf,fsr1l
 29352   01EE60  C701  F4E2         	movff	get_str@buf+1,fsr1h
 29353   01EE64  C4DF F4E7          	movff	indf2,indf1
 29354   01EE68                     
 29355                           ; BSR set to: 7
 29356   01EE68  4B00               	infsnz	get_str@buf& (0+255),f,b
 29357   01EE6A  2B01               	incf	(get_str@buf+1)& (0+255),f,b
 29358   01EE6C                     
 29359                           ; BSR set to: 7
 29360                           ;../src/boards/w65_cmn.c: 173:   rx_rp = (rx_rp + 1) & ( 128 - 1);
 29361   01EE6C  0E01               	movlw	1
 29362   01EE6E  25B7               	addwf	_rx_rp& (0+255),w,b
 29363   01EE70  6F03               	movwf	??_get_str& (0+255),b
 29364   01EE72  0E00               	movlw	0
 29365   01EE74  21B8               	addwfc	(_rx_rp+1)& (0+255),w,b
 29366   01EE76  6F04               	movwf	(??_get_str+1)& (0+255),b
 29367   01EE78  0E7F               	movlw	127
 29368   01EE7A  1503               	andwf	??_get_str& (0+255),w,b
 29369   01EE7C  6FB7               	movwf	_rx_rp& (0+255),b
 29370   01EE7E  6BB8               	clrf	(_rx_rp+1)& (0+255),b
 29371   01EE80                     
 29372                           ; BSR set to: 7
 29373                           ;../src/boards/w65_cmn.c: 174:   rx_cnt--;
 29374   01EE80  07C1               	decf	_rx_cnt& (0+255),f,b
 29375   01EE82  A0D8               	btfss	status,0,c
 29376   01EE84  07C2               	decf	(_rx_cnt+1)& (0+255),f,b
 29377   01EE86                     l23425:
 29378                           
 29379                           ; BSR set to: 7
 29380                           ;../src/boards/w65_cmn.c: 171:  while(i--) {
 29381   01EE86  0707               	decf	get_str@i& (0+255),f,b
 29382   01EE88  A0D8               	btfss	status,0,c
 29383   01EE8A  0708               	decf	(get_str@i+1)& (0+255),f,b
 29384   01EE8C  2907               	incf	get_str@i& (0+255),w,b
 29385   01EE8E  E106               	bnz	u32471
 29386   01EE90  2908               	incf	(get_str@i+1)& (0+255),w,b
 29387   01EE92  A4D8               	btfss	status,2,c
 29388   01EE94  EF4E  F0F7         	goto	u32471
 29389   01EE98  EF50  F0F7         	goto	u32470
 29390   01EE9C                     u32471:
 29391   01EE9C  EF28  F0F7         	goto	l23417
 29392   01EEA0                     u32470:
 29393   01EEA0                     
 29394                           ; BSR set to: 7
 29395                           ;../src/boards/w65_cmn.c: 176:  U3RXIE = 1;
 29396   01EEA0  80A7               	bsf	1191,0,c	;volatile
 29397                           
 29398                           ;../src/boards/w65_cmn.c: 177:  return c;
 29399   01EEA2  C705  F700         	movff	get_str@c,?_get_str
 29400   01EEA6  C706  F701         	movff	get_str@c+1,?_get_str+1
 29401   01EEAA                     
 29402                           ; BSR set to: 7
 29403   01EEAA  0012               	return		;funcret
 29404   01EEAC                     __end_of_get_str:
 29405                           	callstack 0
 29406                           
 29407 ;; *************** function _str_inf *****************
 29408 ;; Defined at:
 29409 ;;		line 986 in file "../src/w65_main.c"
 29410 ;; Parameters:    Size  Location     Type
 29411 ;;  buf             2    0[BANK7 ] PTR unsigned char 
 29412 ;;		 -> tmp_buf(512), 
 29413 ;;  cnt             1    2[BANK7 ] unsigned char 
 29414 ;; Auto vars:     Size  Location     Type
 29415 ;;  i               2    8[BANK7 ] unsigned int 
 29416 ;;  c               2    5[BANK7 ] unsigned int 
 29417 ;;  a               1    7[BANK7 ] unsigned char 
 29418 ;; Return value:  Size  Location     Type
 29419 ;;                  2    0[BANK7 ] unsigned int 
 29420 ;; Registers used:
 29421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29422 ;; Tracked objects:
 29423 ;;		On entry : 0/0
 29424 ;;		On exit  : 0/0
 29425 ;;		Unchanged: 0/0
 29426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29427 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29428 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29429 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29430 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29431 ;;Total ram usage:       10 bytes
 29432 ;; Hardware stack levels used: 1
 29433 ;; Hardware stack levels required when called: 20
 29434 ;; This function calls:
 29435 ;;		_f_close
 29436 ;;		_f_open
 29437 ;;		_f_read
 29438 ;;		_printf
 29439 ;; This function is called by:
 29440 ;;		_unimon_console
 29441 ;;		_bus_master_operation
 29442 ;; This function uses a non-reentrant model
 29443 ;;
 29444                           
 29445                           	psect	text70
 29446   01A8E0                     __ptext70:
 29447                           	callstack 0
 29448   01A8E0                     _str_inf:
 29449                           	callstack 101
 29450   01A8E0                     
 29451                           ;../src/w65_main.c: 987:  unsigned int c, i;;../src/w65_main.c: 988:  char a;;../src/w65
      +                          _main.c: 990:  if ( fin_cnt == 0xffff ) {
 29452   01A8E0  0107               	movlb	7	; () banked
 29453   01A8E2  29E3               	incf	_fin_cnt& (0+255),w,b
 29454   01A8E4  E106               	bnz	u32361
 29455   01A8E6  29E4               	incf	(_fin_cnt+1)& (0+255),w,b
 29456   01A8E8  A4D8               	btfss	status,2,c
 29457   01A8EA  EF79  F0D4         	goto	u32361
 29458   01A8EE  EF7B  F0D4         	goto	u32360
 29459   01A8F2                     u32361:
 29460   01A8F2  EFB2  F0D4         	goto	l23341
 29461   01A8F6                     u32360:
 29462   01A8F6                     
 29463                           ; BSR set to: 7
 29464                           ;../src/w65_main.c: 992:   if ( f_open(&in_fl, &fin_name[0], 0x01) ) {
 29465   01A8F6  0EB4               	movlw	low _in_fl
 29466   01A8F8  0106               	movlb	6	; () banked
 29467   01A8FA  6FAF               	movwf	f_open@fp& (0+255),b
 29468   01A8FC  0E0D               	movlw	high _in_fl
 29469   01A8FE  6FB0               	movwf	(f_open@fp+1)& (0+255),b
 29470   01A900  0EC2               	movlw	low _fin_name
 29471   01A902  6FB1               	movwf	f_open@path& (0+255),b
 29472   01A904  0E08               	movlw	high _fin_name
 29473   01A906  6FB2               	movwf	(f_open@path+1)& (0+255),b
 29474   01A908  0E01               	movlw	1
 29475   01A90A  6FB3               	movwf	f_open@mode& (0+255),b
 29476   01A90C  ECDB  F092         	call	_f_open	;wreg free
 29477   01A910  0900               	iorlw	0
 29478   01A912  B4D8               	btfsc	status,2,c
 29479   01A914  EF8E  F0D4         	goto	u32371
 29480   01A918  EF90  F0D4         	goto	u32370
 29481   01A91C                     u32371:
 29482   01A91C  EFA3  F0D4         	goto	l23337
 29483   01A920                     u32370:
 29484   01A920                     
 29485                           ;../src/w65_main.c: 993:    printf("File Open Error. %s\r\n", &fin_name[0]);
 29486   01A920  0E04               	movlw	low STR_163
 29487   01A922  0105               	movlb	5	; () banked
 29488   01A924  6FAD               	movwf	printf@fmt& (0+255),b
 29489   01A926  0EFC               	movlw	high STR_163
 29490   01A928  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 29491   01A92A  0EC2               	movlw	low _fin_name
 29492   01A92C  6FAF               	movwf	(?_printf+2)& (0+255),b
 29493   01A92E  0E08               	movlw	high _fin_name
 29494   01A930  6FB0               	movwf	(?_printf+3)& (0+255),b
 29495   01A932  ECDA  F0FF         	call	_printf	;wreg free
 29496   01A936                     l23331:
 29497                           
 29498                           ;../src/w65_main.c: 994:    cin_no = 0;
 29499   01A936  0107               	movlb	7	; () banked
 29500   01A938  6BCC               	clrf	_cin_no& (0+255),b
 29501   01A93A                     
 29502                           ; BSR set to: 7
 29503                           ;../src/w65_main.c: 995:    return 0;
 29504   01A93A  0E00               	movlw	0
 29505   01A93C  6F01               	movwf	(?_str_inf+1)& (0+255),b
 29506   01A93E  0E00               	movlw	0
 29507   01A940  6F00               	movwf	?_str_inf& (0+255),b
 29508   01A942  EF52  F0D5         	goto	l1792
 29509   01A946                     l23337:
 29510                           
 29511                           ;../src/w65_main.c: 997:   fin_cnt=0;
 29512   01A946  0E00               	movlw	0
 29513   01A948  0107               	movlb	7	; () banked
 29514   01A94A  6FE4               	movwf	(_fin_cnt+1)& (0+255),b
 29515   01A94C  0E00               	movlw	0
 29516   01A94E  6FE3               	movwf	_fin_cnt& (0+255),b
 29517                           
 29518                           ;../src/w65_main.c: 998:   frd_ptr = 0;
 29519   01A950  0E00               	movlw	0
 29520   01A952  6FC0               	movwf	(_frd_ptr+1)& (0+255),b
 29521   01A954  0E00               	movlw	0
 29522   01A956  6FBF               	movwf	_frd_ptr& (0+255),b
 29523   01A958                     
 29524                           ; BSR set to: 7
 29525                           ;../src/w65_main.c: 999:   fin_size = (uint16_t)((&in_fl)->obj.objsize);
 29526   01A958  0063  F6F8  F7BD   	movff	_in_fl+10,_fin_size
 29527   01A95E  0063  F6FC  F7BE   	movff	_in_fl+11,_fin_size+1
 29528   01A964                     l23341:
 29529                           
 29530                           ; BSR set to: 7
 29531                           ;../src/w65_main.c: 1002:  if ( !fin_cnt ) {
 29532   01A964  51E3               	movf	_fin_cnt& (0+255),w,b
 29533   01A966  11E4               	iorwf	(_fin_cnt+1)& (0+255),w,b
 29534   01A968  A4D8               	btfss	status,2,c
 29535   01A96A  EFB9  F0D4         	goto	u32381
 29536   01A96E  EFBB  F0D4         	goto	u32380
 29537   01A972                     u32381:
 29538   01A972  EFEA  F0D4         	goto	l23355
 29539   01A976                     u32380:
 29540   01A976                     
 29541                           ; BSR set to: 7
 29542                           ;../src/w65_main.c: 1003:   frd_ptr = 0;
 29543   01A976  0E00               	movlw	0
 29544   01A978  6FC0               	movwf	(_frd_ptr+1)& (0+255),b
 29545   01A97A  0E00               	movlw	0
 29546   01A97C  6FBF               	movwf	_frd_ptr& (0+255),b
 29547   01A97E                     
 29548                           ; BSR set to: 7
 29549                           ;../src/w65_main.c: 1004:   if ( f_read( &in_fl, &cin_file[0], 256 * 2, (UINT *)&fin_cnt
      +                           ) ) {
 29550   01A97E  0EB4               	movlw	low _in_fl
 29551   01A980  0106               	movlb	6	; () banked
 29552   01A982  6F3E               	movwf	f_read@fp& (0+255),b
 29553   01A984  0E0D               	movlw	high _in_fl
 29554   01A986  6F3F               	movwf	(f_read@fp+1)& (0+255),b
 29555   01A988  0EF8               	movlw	low _cin_file
 29556   01A98A  6F40               	movwf	f_read@buff& (0+255),b
 29557   01A98C  0E11               	movlw	high _cin_file
 29558   01A98E  6F41               	movwf	(f_read@buff+1)& (0+255),b
 29559   01A990  0E02               	movlw	2
 29560   01A992  6F43               	movwf	(f_read@btr+1)& (0+255),b
 29561   01A994  0E00               	movlw	0
 29562   01A996  6F42               	movwf	f_read@btr& (0+255),b
 29563   01A998  0EE3               	movlw	low _fin_cnt
 29564   01A99A  6F44               	movwf	f_read@br& (0+255),b
 29565   01A99C  0E07               	movlw	high _fin_cnt
 29566   01A99E  6F45               	movwf	(f_read@br+1)& (0+255),b
 29567   01A9A0  EC9B  F096         	call	_f_read	;wreg free
 29568   01A9A4  0900               	iorlw	0
 29569   01A9A6  B4D8               	btfsc	status,2,c
 29570   01A9A8  EFD8  F0D4         	goto	u32391
 29571   01A9AC  EFDA  F0D4         	goto	u32390
 29572   01A9B0                     u32391:
 29573   01A9B0  EFEA  F0D4         	goto	l23355
 29574   01A9B4                     u32390:
 29575   01A9B4                     
 29576                           ;../src/w65_main.c: 1005:    printf("File read error.\r\n");
 29577   01A9B4  0E0F               	movlw	low STR_164
 29578   01A9B6  0105               	movlb	5	; () banked
 29579   01A9B8  6FAD               	movwf	printf@fmt& (0+255),b
 29580   01A9BA  0EFD               	movlw	high STR_164
 29581   01A9BC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 29582   01A9BE  ECDA  F0FF         	call	_printf	;wreg free
 29583                           
 29584                           ;../src/w65_main.c: 1006:    f_close( &in_fl );
 29585   01A9C2  0EB4               	movlw	low _in_fl
 29586   01A9C4  0106               	movlb	6	; () banked
 29587   01A9C6  6F2F               	movwf	f_close@fp& (0+255),b
 29588   01A9C8  0E0D               	movlw	high _in_fl
 29589   01A9CA  6F30               	movwf	(f_close@fp+1)& (0+255),b
 29590   01A9CC  ECDB  F0FB         	call	_f_close	;wreg free
 29591   01A9D0  EF9B  F0D4         	goto	l23331
 29592   01A9D4                     l23355:
 29593                           
 29594                           ;../src/w65_main.c: 1012:  i = ( (unsigned int)cnt > fin_cnt ) ? fin_cnt : (unsigned int
      +                          )cnt;
 29595   01A9D4  0107               	movlb	7	; () banked
 29596   01A9D6  5102               	movf	str_inf@cnt& (0+255),w,b
 29597   01A9D8  6F03               	movwf	??_str_inf& (0+255),b
 29598   01A9DA  6B04               	clrf	(??_str_inf+1)& (0+255),b
 29599   01A9DC  5103               	movf	??_str_inf& (0+255),w,b
 29600   01A9DE  5DE3               	subwf	_fin_cnt& (0+255),w,b
 29601   01A9E0  5104               	movf	(??_str_inf+1)& (0+255),w,b
 29602   01A9E2  59E4               	subwfb	(_fin_cnt+1)& (0+255),w,b
 29603   01A9E4  A0D8               	btfss	status,0,c
 29604   01A9E6  EFF7  F0D4         	goto	u32401
 29605   01A9EA  EFF9  F0D4         	goto	u32400
 29606   01A9EE                     u32401:
 29607   01A9EE  EFFE  F0D4         	goto	l1796
 29608   01A9F2                     u32400:
 29609   01A9F2                     
 29610                           ; BSR set to: 7
 29611   01A9F2  C702  F708         	movff	str_inf@cnt,str_inf@i
 29612   01A9F6  6B09               	clrf	(str_inf@i+1)& (0+255),b
 29613   01A9F8  EF02  F0D5         	goto	l23359
 29614   01A9FC                     l1796:
 29615                           
 29616                           ; BSR set to: 7
 29617   01A9FC  C7E3  F708         	movff	_fin_cnt,str_inf@i
 29618   01AA00  C7E4  F709         	movff	_fin_cnt+1,str_inf@i+1
 29619   01AA04                     l23359:
 29620                           
 29621                           ; BSR set to: 7
 29622                           ;../src/w65_main.c: 1014:  fin_cnt -= i;
 29623   01AA04  5108               	movf	str_inf@i& (0+255),w,b
 29624   01AA06  5FE3               	subwf	_fin_cnt& (0+255),f,b
 29625   01AA08  5109               	movf	(str_inf@i+1)& (0+255),w,b
 29626   01AA0A  5BE4               	subwfb	(_fin_cnt+1)& (0+255),f,b
 29627                           
 29628                           ;../src/w65_main.c: 1015:  fin_size -= i;
 29629   01AA0C  5108               	movf	str_inf@i& (0+255),w,b
 29630   01AA0E  5FBD               	subwf	_fin_size& (0+255),f,b
 29631   01AA10  5109               	movf	(str_inf@i+1)& (0+255),w,b
 29632   01AA12  5BBE               	subwfb	(_fin_size+1)& (0+255),f,b
 29633   01AA14                     
 29634                           ; BSR set to: 7
 29635                           ;../src/w65_main.c: 1016:  c = i;
 29636   01AA14  C708  F705         	movff	str_inf@i,str_inf@c
 29637   01AA18  C709  F706         	movff	str_inf@i+1,str_inf@c+1
 29638                           
 29639                           ;../src/w65_main.c: 1017:  while(i--) {
 29640   01AA1C  EF2F  F0D5         	goto	l23377
 29641   01AA20                     l23363:
 29642                           
 29643                           ; BSR set to: 7
 29644                           ;../src/w65_main.c: 1018:   a = cin_file[frd_ptr++];
 29645   01AA20  0EF8               	movlw	low _cin_file
 29646   01AA22  25BF               	addwf	_frd_ptr& (0+255),w,b
 29647   01AA24  6ED9               	movwf	fsr2l,c
 29648   01AA26  0E11               	movlw	high _cin_file
 29649   01AA28  21C0               	addwfc	(_frd_ptr+1)& (0+255),w,b
 29650   01AA2A  6EDA               	movwf	fsr2h,c
 29651   01AA2C  50DF               	movf	indf2,w,c
 29652   01AA2E  6F07               	movwf	str_inf@a& (0+255),b
 29653   01AA30                     
 29654                           ; BSR set to: 7
 29655   01AA30  4BBF               	infsnz	_frd_ptr& (0+255),f,b
 29656   01AA32  2BC0               	incf	(_frd_ptr+1)& (0+255),f,b
 29657   01AA34                     
 29658                           ; BSR set to: 7
 29659                           ;../src/w65_main.c: 1019:   if ( a < 0x0d ) {
 29660   01AA34  0E0D               	movlw	13
 29661   01AA36  6107               	cpfslt	str_inf@a& (0+255),b
 29662   01AA38  EF20  F0D5         	goto	u32411
 29663   01AA3C  EF22  F0D5         	goto	u32410
 29664   01AA40                     u32411:
 29665   01AA40  EF27  F0D5         	goto	l23373
 29666   01AA44                     u32410:
 29667   01AA44                     
 29668                           ; BSR set to: 7
 29669                           ;../src/w65_main.c: 1020:    c--;
 29670   01AA44  0705               	decf	str_inf@c& (0+255),f,b
 29671   01AA46  A0D8               	btfss	status,0,c
 29672   01AA48  0706               	decf	(str_inf@c+1)& (0+255),f,b
 29673                           
 29674                           ;../src/w65_main.c: 1021:    continue;
 29675   01AA4A  EF2F  F0D5         	goto	l23377
 29676   01AA4E                     l23373:
 29677                           
 29678                           ; BSR set to: 7
 29679   01AA4E  C700  F4D9         	movff	str_inf@buf,fsr2l
 29680   01AA52  C701  F4DA         	movff	str_inf@buf+1,fsr2h
 29681   01AA56  C707  F4DF         	movff	str_inf@a,indf2
 29682   01AA5A                     
 29683                           ; BSR set to: 7
 29684   01AA5A  4B00               	infsnz	str_inf@buf& (0+255),f,b
 29685   01AA5C  2B01               	incf	(str_inf@buf+1)& (0+255),f,b
 29686   01AA5E                     l23377:
 29687                           
 29688                           ; BSR set to: 7
 29689                           ;../src/w65_main.c: 1017:  while(i--) {
 29690   01AA5E  0708               	decf	str_inf@i& (0+255),f,b
 29691   01AA60  A0D8               	btfss	status,0,c
 29692   01AA62  0709               	decf	(str_inf@i+1)& (0+255),f,b
 29693   01AA64  2908               	incf	str_inf@i& (0+255),w,b
 29694   01AA66  E106               	bnz	u32421
 29695   01AA68  2909               	incf	(str_inf@i+1)& (0+255),w,b
 29696   01AA6A  A4D8               	btfss	status,2,c
 29697   01AA6C  EF3A  F0D5         	goto	u32421
 29698   01AA70  EF3C  F0D5         	goto	u32420
 29699   01AA74                     u32421:
 29700   01AA74  EF10  F0D5         	goto	l23363
 29701   01AA78                     u32420:
 29702   01AA78                     
 29703                           ; BSR set to: 7
 29704                           ;../src/w65_main.c: 1026:  if ( !fin_size ) {
 29705   01AA78  51BD               	movf	_fin_size& (0+255),w,b
 29706   01AA7A  11BE               	iorwf	(_fin_size+1)& (0+255),w,b
 29707   01AA7C  A4D8               	btfss	status,2,c
 29708   01AA7E  EF43  F0D5         	goto	u32431
 29709   01AA82  EF45  F0D5         	goto	u32430
 29710   01AA86                     u32431:
 29711   01AA86  EF4E  F0D5         	goto	l23385
 29712   01AA8A                     u32430:
 29713   01AA8A                     
 29714                           ; BSR set to: 7
 29715                           ;../src/w65_main.c: 1027:   f_close( &in_fl );
 29716   01AA8A  0EB4               	movlw	low _in_fl
 29717   01AA8C  0106               	movlb	6	; () banked
 29718   01AA8E  6F2F               	movwf	f_close@fp& (0+255),b
 29719   01AA90  0E0D               	movlw	high _in_fl
 29720   01AA92  6F30               	movwf	(f_close@fp+1)& (0+255),b
 29721   01AA94  ECDB  F0FB         	call	_f_close	;wreg free
 29722   01AA98                     
 29723                           ;../src/w65_main.c: 1028:   cin_no = 0;
 29724   01AA98  0107               	movlb	7	; () banked
 29725   01AA9A  6BCC               	clrf	_cin_no& (0+255),b
 29726   01AA9C                     l23385:
 29727                           
 29728                           ; BSR set to: 7
 29729                           ;../src/w65_main.c: 1031:  return c;
 29730   01AA9C  C705  F700         	movff	str_inf@c,?_str_inf
 29731   01AAA0  C706  F701         	movff	str_inf@c+1,?_str_inf+1
 29732   01AAA4                     l1792:
 29733                           
 29734                           ; BSR set to: 7
 29735   01AAA4  0012               	return		;funcret
 29736   01AAA6                     __end_of_str_inf:
 29737                           	callstack 0
 29738                           
 29739 ;; *************** function _read_sram *****************
 29740 ;; Defined at:
 29741 ;;		line 382 in file "../src/boards/w65_cmn.c"
 29742 ;; Parameters:    Size  Location     Type
 29743 ;;  addr            4    3[COMRAM] unsigned long 
 29744 ;;  buf             2    7[COMRAM] PTR unsigned char 
 29745 ;;		 -> tmp_buf(512), disk_buf(128), req_tbl(13), 
 29746 ;;  len             2    9[COMRAM] unsigned int 
 29747 ;; Auto vars:     Size  Location     Type
 29748 ;;  ab              4   13[COMRAM] struct address_bus_u
 29749 ;;  i               2   11[COMRAM] unsigned int 
 29750 ;; Return value:  Size  Location     Type
 29751 ;;                  1    wreg      void 
 29752 ;; Registers used:
 29753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29754 ;; Tracked objects:
 29755 ;;		On entry : 0/0
 29756 ;;		On exit  : 0/0
 29757 ;;		Unchanged: 0/0
 29758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29759 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29760 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29762 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29763 ;;Total ram usage:       14 bytes
 29764 ;; Hardware stack levels used: 1
 29765 ;; Hardware stack levels required when called: 1
 29766 ;; This function calls:
 29767 ;;		Nothing
 29768 ;; This function is called by:
 29769 ;;		_write_sector
 29770 ;;		_unimon_console
 29771 ;;		_bus_master_operation
 29772 ;;		_mem_init
 29773 ;;		_print_reg
 29774 ;;		_mem_dump
 29775 ;;		_reset_cpu
 29776 ;; This function uses a non-reentrant model
 29777 ;;
 29778                           
 29779                           	psect	text71
 29780   01E418                     __ptext71:
 29781                           	callstack 0
 29782   01E418                     _read_sram:
 29783                           	callstack 120
 29784   01E418                     
 29785                           ;../src/boards/w65_cmn.c: 382: void read_sram(uint32_t addr, uint8_t *buf, unsigned int 
      +                          len);../src/boards/w65_cmn.c: 383: {;../src/boards/w65_cmn.c: 384:     union address_bus
      +                          _u ab;;../src/boards/w65_cmn.c: 385:     unsigned int i;;../src/boards/w65_cmn.c: 387:  
      +                          ab.w = addr;
 29786   01E418  C504  F50E         	movff	read_sram@addr,read_sram@ab
 29787   01E41C  C505  F50F         	movff	read_sram@addr+1,read_sram@ab+1
 29788   01E420  C506  F510         	movff	read_sram@addr+2,read_sram@ab+2
 29789   01E424  C507  F511         	movff	read_sram@addr+3,read_sram@ab+3
 29790   01E428                     
 29791                           ;../src/boards/w65_cmn.c: 388:  i = 0;
 29792   01E428  0E00               	movlw	0
 29793   01E42A  6E0D               	movwf	(read_sram@i+1)^(0+1280),c
 29794   01E42C  0E00               	movlw	0
 29795   01E42E  6E0C               	movwf	read_sram@i^(0+1280),c
 29796                           
 29797                           ;../src/boards/w65_cmn.c: 390:  if (cpu_flg) {
 29798   01E430  0107               	movlb	7	; () banked
 29799   01E432  51E5               	movf	_cpu_flg& (0+255),w,b
 29800   01E434  B4D8               	btfsc	status,2,c
 29801   01E436  EF1F  F0F2         	goto	u32211
 29802   01E43A  EF21  F0F2         	goto	u32210
 29803   01E43E                     u32211:
 29804   01E43E  EF5E  F0F2         	goto	l23239
 29805   01E442                     u32210:
 29806   01E442  EF3D  F0F2         	goto	l23231
 29807   01E446                     l2176:
 29808                           
 29809                           ;../src/boards/w65_cmn.c: 393:    TRISB = 0x00;
 29810   01E446  6AC7               	clrf	199,c	;volatile
 29811                           
 29812                           ;../src/boards/w65_cmn.c: 394:    LATC = ab.ll;
 29813   01E448  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 29814                           
 29815                           ;../src/boards/w65_cmn.c: 395:    LATD = ab.lh;
 29816   01E44C  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 29817                           
 29818                           ;../src/boards/w65_cmn.c: 397:       LATB = ab.hl;
 29819   01E450  C510  F4BF         	movff	read_sram@ab+2,1215	;volatile
 29820                           
 29821                           ;../src/boards/w65_cmn.c: 398:    LATA1 = 1;
 29822   01E454  82BE               	bsf	1214,1,c	;volatile
 29823                           
 29824                           ;../src/boards/w65_cmn.c: 399:    LATA1 = 0;
 29825   01E456  92BE               	bcf	1214,1,c	;volatile
 29826                           
 29827                           ;../src/boards/w65_cmn.c: 401:    TRISB = 0xFF;
 29828   01E458  68C7               	setf	199,c	;volatile
 29829   01E45A                     
 29830                           ;../src/boards/w65_cmn.c: 402:    ab.w++;
 29831   01E45A  0E01               	movlw	1
 29832   01E45C  260E               	addwf	read_sram@ab^(0+1280),f,c
 29833   01E45E  0E00               	movlw	0
 29834   01E460  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 29835   01E462  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 29836   01E464  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 29837   01E466                     
 29838                           ;../src/boards/w65_cmn.c: 403:    ((uint8_t*)buf)[i] = PORTB;
 29839   01E466  500C               	movf	read_sram@i^(0+1280),w,c
 29840   01E468  2408               	addwf	read_sram@buf^(0+1280),w,c
 29841   01E46A  6ED9               	movwf	fsr2l,c
 29842   01E46C  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 29843   01E46E  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 29844   01E470  6EDA               	movwf	fsr2h,c
 29845   01E472  C4CF F4DF          	movff	1231,indf2	;volatile
 29846   01E476                     
 29847                           ;../src/boards/w65_cmn.c: 404:    i++;
 29848   01E476  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 29849   01E478  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 29850   01E47A                     l23231:
 29851                           
 29852                           ;../src/boards/w65_cmn.c: 392:   while( i < len ) {
 29853   01E47A  500A               	movf	read_sram@len^(0+1280),w,c
 29854   01E47C  5C0C               	subwf	read_sram@i^(0+1280),w,c
 29855   01E47E  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 29856   01E480  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 29857   01E482  A0D8               	btfss	status,0,c
 29858   01E484  EF46  F0F2         	goto	u32221
 29859   01E488  EF48  F0F2         	goto	u32220
 29860   01E48C                     u32221:
 29861   01E48C  EF23  F0F2         	goto	l2176
 29862   01E490                     u32220:
 29863   01E490  EF69  F0F2         	goto	l2182
 29864   01E494                     l2180:
 29865                           
 29866                           ;../src/boards/w65_cmn.c: 410:    LATC = ab.ll;
 29867   01E494  C50E  F4C0         	movff	read_sram@ab,1216	;volatile
 29868                           
 29869                           ;../src/boards/w65_cmn.c: 411:    LATD = ab.lh;
 29870   01E498  C50F  F4C1         	movff	read_sram@ab+1,1217	;volatile
 29871   01E49C                     
 29872                           ;../src/boards/w65_cmn.c: 413:    ab.w++;
 29873   01E49C  0E01               	movlw	1
 29874   01E49E  260E               	addwf	read_sram@ab^(0+1280),f,c
 29875   01E4A0  0E00               	movlw	0
 29876   01E4A2  220F               	addwfc	(read_sram@ab+1)^(0+1280),f,c
 29877   01E4A4  2210               	addwfc	(read_sram@ab+2)^(0+1280),f,c
 29878   01E4A6  2211               	addwfc	(read_sram@ab+3)^(0+1280),f,c
 29879   01E4A8                     
 29880                           ;../src/boards/w65_cmn.c: 414:    ((uint8_t*)buf)[i] = PORTB;
 29881   01E4A8  500C               	movf	read_sram@i^(0+1280),w,c
 29882   01E4AA  2408               	addwf	read_sram@buf^(0+1280),w,c
 29883   01E4AC  6ED9               	movwf	fsr2l,c
 29884   01E4AE  500D               	movf	(read_sram@i+1)^(0+1280),w,c
 29885   01E4B0  2009               	addwfc	(read_sram@buf+1)^(0+1280),w,c
 29886   01E4B2  6EDA               	movwf	fsr2h,c
 29887   01E4B4  C4CF F4DF          	movff	1231,indf2	;volatile
 29888   01E4B8                     
 29889                           ;../src/boards/w65_cmn.c: 415:    i++;
 29890   01E4B8  4A0C               	infsnz	read_sram@i^(0+1280),f,c
 29891   01E4BA  2A0D               	incf	(read_sram@i+1)^(0+1280),f,c
 29892   01E4BC                     l23239:
 29893                           
 29894                           ;../src/boards/w65_cmn.c: 409:   while( i < len ) {
 29895   01E4BC  500A               	movf	read_sram@len^(0+1280),w,c
 29896   01E4BE  5C0C               	subwf	read_sram@i^(0+1280),w,c
 29897   01E4C0  500B               	movf	(read_sram@len+1)^(0+1280),w,c
 29898   01E4C2  580D               	subwfb	(read_sram@i+1)^(0+1280),w,c
 29899   01E4C4  A0D8               	btfss	status,0,c
 29900   01E4C6  EF67  F0F2         	goto	u32231
 29901   01E4CA  EF69  F0F2         	goto	u32230
 29902   01E4CE                     u32231:
 29903   01E4CE  EF4A  F0F2         	goto	l2180
 29904   01E4D2                     u32230:
 29905   01E4D2                     l2182:
 29906   01E4D2  0012               	return		;funcret
 29907   01E4D4                     __end_of_read_sram:
 29908                           	callstack 0
 29909                           
 29910 ;; *************** function _f_open *****************
 29911 ;; Defined at:
 29912 ;;		line 3719 in file "../fatfs/ff.c"
 29913 ;; Parameters:    Size  Location     Type
 29914 ;;  fp              2  175[BANK6 ] PTR struct .
 29915 ;;		 -> in_fl(546), rom_fl(546), 
 29916 ;;  path            2  177[BANK6 ] PTR const unsigned char 
 29917 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 29918 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 29919 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 29920 ;;  mode            1  179[BANK6 ] unsigned char 
 29921 ;; Auto vars:     Size  Location     Type
 29922 ;;  dj             40  215[BANK6 ] struct .
 29923 ;;  clst            4  208[BANK6 ] unsigned long 
 29924 ;;  ofs             4  204[BANK6 ] unsigned long 
 29925 ;;  sc              4  200[BANK6 ] unsigned long 
 29926 ;;  cl              4  196[BANK6 ] unsigned long 
 29927 ;;  tm              4  192[BANK6 ] unsigned long 
 29928 ;;  bcs             4  188[BANK6 ] unsigned long 
 29929 ;;  fs              2  212[BANK6 ] PTR struct .
 29930 ;;		 -> fs(564), NULL(0), 
 29931 ;;  res             1  214[BANK6 ] enum E597
 29932 ;; Return value:  Size  Location     Type
 29933 ;;                  1    wreg      enum E597
 29934 ;; Registers used:
 29935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29936 ;; Tracked objects:
 29937 ;;		On entry : 0/0
 29938 ;;		On exit  : 0/0
 29939 ;;		Unchanged: 0/0
 29940 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29941 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29942 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29943 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29944 ;;      Totals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29945 ;;Total ram usage:       80 bytes
 29946 ;; Hardware stack levels used: 1
 29947 ;; Hardware stack levels required when called: 19
 29948 ;; This function calls:
 29949 ;;		_clst2sect
 29950 ;;		_dir_register
 29951 ;;		_disk_read
 29952 ;;		_follow_path
 29953 ;;		_get_fat
 29954 ;;		_get_fattime
 29955 ;;		_ld_clust
 29956 ;;		_ld_dword
 29957 ;;		_memset
 29958 ;;		_mount_volume
 29959 ;;		_move_window
 29960 ;;		_remove_chain
 29961 ;;		_st_clust
 29962 ;;		_st_dword
 29963 ;; This function is called by:
 29964 ;;		_load_program
 29965 ;;		_load_config
 29966 ;;		_scan_files
 29967 ;;		_scan_files1
 29968 ;;		_see_file
 29969 ;;		_in_file
 29970 ;;		_str_inf
 29971 ;; This function uses a non-reentrant model
 29972 ;;
 29973                           
 29974                           	psect	text72
 29975   0125B6                     __ptext72:
 29976                           	callstack 0
 29977   0125B6                     _f_open:
 29978                           	callstack 101
 29979   0125B6                     
 29980                           ;../fatfs/ff.c: 3720:  FIL* fp,;../fatfs/ff.c: 3721:  const TCHAR* path,;../fatfs/ff.c: 
      +                          3722:  BYTE mode;../fatfs/ff.c: 3724: {;../fatfs/ff.c: 3725:  FRESULT res;;../fatfs/ff.c
      +                          : 3726:  DIR dj;;../fatfs/ff.c: 3727:  FATFS *fs;;../fatfs/ff.c: 3729:  DWORD cl, bcs, c
      +                          lst, tm;;../fatfs/ff.c: 3730:  LBA_t sc;;../fatfs/ff.c: 3731:  FSIZE_t ofs;;../fatfs/ff.
      +                          c: 3736:  if (!fp) return FR_INVALID_OBJECT;
 29981   0125B6  0106               	movlb	6	; () banked
 29982   0125B8  51AF               	movf	f_open@fp& (0+255),w,b
 29983   0125BA  11B0               	iorwf	(f_open@fp+1)& (0+255),w,b
 29984   0125BC  A4D8               	btfss	status,2,c
 29985   0125BE  EFE3  F092         	goto	u31011
 29986   0125C2  EFE5  F092         	goto	u31010
 29987   0125C6                     u31011:
 29988   0125C6  EFE8  F092         	goto	l22565
 29989   0125CA                     u31010:
 29990   0125CA                     
 29991                           ; BSR set to: 6
 29992   0125CA  0E09               	movlw	9
 29993   0125CC  EF9A  F096         	goto	l628
 29994   0125D0                     l22565:
 29995   0125D0                     
 29996                           ; BSR set to: 6
 29997   0125D0  0E3F               	movlw	63
 29998   0125D2  17B3               	andwf	f_open@mode& (0+255),f,b
 29999   0125D4                     
 30000                           ; BSR set to: 6
 30001                           ;../fatfs/ff.c: 3740:  res = mount_volume(&path, &fs, mode);
 30002   0125D4  0EB1               	movlw	low f_open@path
 30003   0125D6  6F81               	movwf	mount_volume@path& (0+255),b
 30004   0125D8  0E06               	movlw	high f_open@path
 30005   0125DA  6F82               	movwf	(mount_volume@path+1)& (0+255),b
 30006   0125DC  0ED4               	movlw	low f_open@fs
 30007   0125DE  6F83               	movwf	mount_volume@rfs& (0+255),b
 30008   0125E0  0E06               	movlw	high f_open@fs
 30009   0125E2  6F84               	movwf	(mount_volume@rfs+1)& (0+255),b
 30010   0125E4  C6B3  F685         	movff	f_open@mode,mount_volume@mode
 30011   0125E8  EC00  F080         	call	_mount_volume	;wreg free
 30012   0125EC  0106               	movlb	6	; () banked
 30013   0125EE  6FD6               	movwf	f_open@res& (0+255),b
 30014   0125F0                     
 30015                           ; BSR set to: 6
 30016                           ;../fatfs/ff.c: 3741:  if (res == FR_OK) {
 30017   0125F0  51D6               	movf	f_open@res& (0+255),w,b
 30018   0125F2  A4D8               	btfss	status,2,c
 30019   0125F4  EFFE  F092         	goto	u31021
 30020   0125F8  EF00  F093         	goto	u31020
 30021   0125FC                     u31021:
 30022   0125FC  EF8A  F096         	goto	l633
 30023   012600                     u31020:
 30024   012600                     
 30025                           ; BSR set to: 6
 30026                           ;../fatfs/ff.c: 3742:   dj.obj.fs = fs;
 30027   012600  C6D4  F6D7         	movff	f_open@fs,f_open@dj
 30028   012604  C6D5  F6D8         	movff	f_open@fs+1,f_open@dj+1
 30029   012608                     
 30030                           ; BSR set to: 6
 30031                           ;../fatfs/ff.c: 3744:   res = follow_path(&dj, path);
 30032   012608  0ED7               	movlw	low f_open@dj
 30033   01260A  6F84               	movwf	follow_path@dp& (0+255),b
 30034   01260C  0E06               	movlw	high f_open@dj
 30035   01260E  6F85               	movwf	(follow_path@dp+1)& (0+255),b
 30036   012610  C6B1  F686         	movff	f_open@path,follow_path@path
 30037   012614  C6B2  F687         	movff	f_open@path+1,follow_path@path+1
 30038   012618  EC61  F0C4         	call	_follow_path	;wreg free
 30039   01261C  0106               	movlb	6	; () banked
 30040   01261E  6FD6               	movwf	f_open@res& (0+255),b
 30041   012620                     
 30042                           ; BSR set to: 6
 30043                           ;../fatfs/ff.c: 3746:   if (res == FR_OK) {
 30044   012620  51D6               	movf	f_open@res& (0+255),w,b
 30045   012622  A4D8               	btfss	status,2,c
 30046   012624  EF16  F093         	goto	u31031
 30047   012628  EF18  F093         	goto	u31030
 30048   01262C                     u31031:
 30049   01262C  EF21  F093         	goto	l22585
 30050   012630                     u31030:
 30051   012630                     
 30052                           ; BSR set to: 6
 30053                           ;../fatfs/ff.c: 3747:    if (dj.fn[11] & 0x80) {
 30054   012630  AFFE               	btfss	(f_open@dj+39)& (0+255),7,b
 30055   012632  EF1D  F093         	goto	u31041
 30056   012636  EF1F  F093         	goto	u31040
 30057   01263A                     u31041:
 30058   01263A  EF21  F093         	goto	l22585
 30059   01263E                     u31040:
 30060   01263E                     
 30061                           ; BSR set to: 6
 30062                           ;../fatfs/ff.c: 3748:     res = FR_INVALID_NAME;
 30063   01263E  0E06               	movlw	6
 30064   012640  6FD6               	movwf	f_open@res& (0+255),b
 30065   012642                     l22585:
 30066                           
 30067                           ; BSR set to: 6
 30068                           ;../fatfs/ff.c: 3757:   if (mode & (0x08 | 0x10 | 0x04)) {
 30069   012642  C6B3  F6B4         	movff	f_open@mode,??_f_open
 30070   012646  0E1C               	movlw	28
 30071   012648  17B4               	andwf	??_f_open& (0+255),f,b
 30072   01264A  B4D8               	btfsc	status,2,c
 30073   01264C  EF2A  F093         	goto	u31051
 30074   012650  EF2C  F093         	goto	u31050
 30075   012654                     u31051:
 30076   012654  EF47  F094         	goto	l22631
 30077   012658                     u31050:
 30078   012658                     
 30079                           ; BSR set to: 6
 30080                           ;../fatfs/ff.c: 3758:    if (res != FR_OK) {
 30081   012658  51D6               	movf	f_open@res& (0+255),w,b
 30082   01265A  B4D8               	btfsc	status,2,c
 30083   01265C  EF32  F093         	goto	u31061
 30084   012660  EF34  F093         	goto	u31060
 30085   012664                     u31061:
 30086   012664  EF48  F093         	goto	l22595
 30087   012668                     u31060:
 30088   012668                     
 30089                           ; BSR set to: 6
 30090                           ;../fatfs/ff.c: 3759:     if (res == FR_NO_FILE) {
 30091   012668  0E04               	movlw	4
 30092   01266A  19D6               	xorwf	f_open@res& (0+255),w,b
 30093   01266C  A4D8               	btfss	status,2,c
 30094   01266E  EF3B  F093         	goto	u31071
 30095   012672  EF3D  F093         	goto	u31070
 30096   012676                     u31071:
 30097   012676  EF45  F093         	goto	l22593
 30098   01267A                     u31070:
 30099   01267A                     
 30100                           ; BSR set to: 6
 30101                           ;../fatfs/ff.c: 3763:      res = dir_register(&dj);
 30102   01267A  0ED7               	movlw	low f_open@dj
 30103   01267C  6F88               	movwf	dir_register@dp& (0+255),b
 30104   01267E  0E06               	movlw	high f_open@dj
 30105   012680  6F89               	movwf	(dir_register@dp+1)& (0+255),b
 30106   012682  ECEE  F0ED         	call	_dir_register	;wreg free
 30107   012686  0106               	movlb	6	; () banked
 30108   012688  6FD6               	movwf	f_open@res& (0+255),b
 30109   01268A                     l22593:
 30110                           
 30111                           ; BSR set to: 6
 30112                           ;../fatfs/ff.c: 3766:     mode |= 0x08;
 30113   01268A  87B3               	bsf	f_open@mode& (0+255),3,b
 30114                           
 30115                           ;../fatfs/ff.c: 3767:    }
 30116   01268C  EF60  F093         	goto	l639
 30117   012690                     l22595:
 30118                           
 30119                           ; BSR set to: 6
 30120                           ;../fatfs/ff.c: 3769:     if (dj.obj.attr & (0x01 | 0x10)) {
 30121   012690  C6DB  F6B4         	movff	f_open@dj+4,??_f_open
 30122   012694  0E11               	movlw	17
 30123   012696  17B4               	andwf	??_f_open& (0+255),f,b
 30124   012698  B4D8               	btfsc	status,2,c
 30125   01269A  EF51  F093         	goto	u31081
 30126   01269E  EF53  F093         	goto	u31080
 30127   0126A2                     u31081:
 30128   0126A2  EF57  F093         	goto	l640
 30129   0126A6                     u31080:
 30130   0126A6                     
 30131                           ; BSR set to: 6
 30132                           ;../fatfs/ff.c: 3770:      res = FR_DENIED;
 30133   0126A6  0E07               	movlw	7
 30134   0126A8  6FD6               	movwf	f_open@res& (0+255),b
 30135                           
 30136                           ;../fatfs/ff.c: 3771:     } else {
 30137   0126AA  EF60  F093         	goto	l639
 30138   0126AE                     l640:
 30139                           
 30140                           ; BSR set to: 6
 30141                           ;../fatfs/ff.c: 3772:      if (mode & 0x04) res = FR_EXIST;
 30142   0126AE  A5B3               	btfss	f_open@mode& (0+255),2,b
 30143   0126B0  EF5C  F093         	goto	u31091
 30144   0126B4  EF5E  F093         	goto	u31090
 30145   0126B8                     u31091:
 30146   0126B8  EF60  F093         	goto	l639
 30147   0126BC                     u31090:
 30148   0126BC                     
 30149                           ; BSR set to: 6
 30150   0126BC  0E08               	movlw	8
 30151   0126BE  6FD6               	movwf	f_open@res& (0+255),b
 30152   0126C0                     l639:
 30153                           
 30154                           ; BSR set to: 6
 30155                           ;../fatfs/ff.c: 3775:    if (res == FR_OK && (mode & 0x08)) {
 30156   0126C0  51D6               	movf	f_open@res& (0+255),w,b
 30157   0126C2  A4D8               	btfss	status,2,c
 30158   0126C4  EF66  F093         	goto	u31101
 30159   0126C8  EF68  F093         	goto	u31100
 30160   0126CC                     u31101:
 30161   0126CC  EF6A  F094         	goto	l646
 30162   0126D0                     u31100:
 30163   0126D0                     
 30164                           ; BSR set to: 6
 30165   0126D0  A7B3               	btfss	f_open@mode& (0+255),3,b
 30166   0126D2  EF6D  F093         	goto	u31111
 30167   0126D6  EF6F  F093         	goto	u31110
 30168   0126DA                     u31111:
 30169   0126DA  EF6A  F094         	goto	l646
 30170   0126DE                     u31110:
 30171   0126DE                     
 30172                           ; BSR set to: 6
 30173                           ;../fatfs/ff.c: 3794:     {;../fatfs/ff.c: 3796:      tm = get_fattime();
 30174   0126DE  EC12  F001         	call	_get_fattime	;wreg free
 30175   0126E2  C504  F6C0         	movff	?_get_fattime,f_open@tm
 30176   0126E6  C505  F6C1         	movff	?_get_fattime+1,f_open@tm+1
 30177   0126EA  C506  F6C2         	movff	?_get_fattime+2,f_open@tm+2
 30178   0126EE  C507  F6C3         	movff	?_get_fattime+3,f_open@tm+3
 30179   0126F2                     
 30180                           ;../fatfs/ff.c: 3797:      st_dword(dj.dir + 14, tm);
 30181   0126F2  0E0E               	movlw	14
 30182   0126F4  0106               	movlb	6	; () banked
 30183   0126F6  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 30184   0126F8  6E04               	movwf	st_dword@ptr^(0+1280),c
 30185   0126FA  0E00               	movlw	0
 30186   0126FC  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 30187   0126FE  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 30188   012700  C6C0  F506         	movff	f_open@tm,st_dword@val
 30189   012704  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 30190   012708  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 30191   01270C  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 30192   012710  ECDD  F0FA         	call	_st_dword	;wreg free
 30193   012714                     
 30194                           ;../fatfs/ff.c: 3798:      st_dword(dj.dir + 22, tm);
 30195   012714  0E16               	movlw	22
 30196   012716  0106               	movlb	6	; () banked
 30197   012718  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 30198   01271A  6E04               	movwf	st_dword@ptr^(0+1280),c
 30199   01271C  0E00               	movlw	0
 30200   01271E  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 30201   012720  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 30202   012722  C6C0  F506         	movff	f_open@tm,st_dword@val
 30203   012726  C6C1  F507         	movff	f_open@tm+1,st_dword@val+1
 30204   01272A  C6C2  F508         	movff	f_open@tm+2,st_dword@val+2
 30205   01272E  C6C3  F509         	movff	f_open@tm+3,st_dword@val+3
 30206   012732  ECDD  F0FA         	call	_st_dword	;wreg free
 30207   012736                     
 30208                           ;../fatfs/ff.c: 3799:      cl = ld_clust(fs, dj.dir);
 30209   012736  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 30210   01273A  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 30211   01273E  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 30212   012742  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 30213   012746  EC3A  F0F9         	call	_ld_clust	;wreg free
 30214   01274A  C50B  F6C4         	movff	?_ld_clust,f_open@cl
 30215   01274E  C50C  F6C5         	movff	?_ld_clust+1,f_open@cl+1
 30216   012752  C50D  F6C6         	movff	?_ld_clust+2,f_open@cl+2
 30217   012756  C50E  F6C7         	movff	?_ld_clust+3,f_open@cl+3
 30218   01275A                     
 30219                           ;../fatfs/ff.c: 3800:      dj.dir[11] = 0x20;
 30220   01275A  0106               	movlb	6	; () banked
 30221   01275C  EE20 F00B          	lfsr	2,11
 30222   012760  51F1               	movf	(f_open@dj+26)& (0+255),w,b
 30223   012762  26D9               	addwf	fsr2l,f,c
 30224   012764  51F2               	movf	(f_open@dj+27)& (0+255),w,b
 30225   012766  22DA               	addwfc	fsr2h,f,c
 30226   012768  0E20               	movlw	32
 30227   01276A  6EDF               	movwf	indf2,c
 30228   01276C                     
 30229                           ; BSR set to: 6
 30230                           ;../fatfs/ff.c: 3801:      st_clust(fs, dj.dir, 0);
 30231   01276C  C6D4  F508         	movff	f_open@fs,st_clust@fs
 30232   012770  C6D5  F509         	movff	f_open@fs+1,st_clust@fs+1
 30233   012774  C6F1  F50A         	movff	f_open@dj+26,st_clust@dir
 30234   012778  C6F2  F50B         	movff	f_open@dj+27,st_clust@dir+1
 30235   01277C  0E00               	movlw	0
 30236   01277E  6E0C               	movwf	st_clust@cl^(0+1280),c
 30237   012780  0E00               	movlw	0
 30238   012782  6E0D               	movwf	(st_clust@cl+1)^(0+1280),c
 30239   012784  0E00               	movlw	0
 30240   012786  6E0E               	movwf	(st_clust@cl+2)^(0+1280),c
 30241   012788  0E00               	movlw	0
 30242   01278A  6E0F               	movwf	(st_clust@cl+3)^(0+1280),c
 30243   01278C  EC28  F0FD         	call	_st_clust	;wreg free
 30244   012790                     
 30245                           ;../fatfs/ff.c: 3802:      st_dword(dj.dir + 28, 0);
 30246   012790  0E1C               	movlw	28
 30247   012792  0106               	movlb	6	; () banked
 30248   012794  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 30249   012796  6E04               	movwf	st_dword@ptr^(0+1280),c
 30250   012798  0E00               	movlw	0
 30251   01279A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 30252   01279C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 30253   01279E  0E00               	movlw	0
 30254   0127A0  6E06               	movwf	st_dword@val^(0+1280),c
 30255   0127A2  0E00               	movlw	0
 30256   0127A4  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 30257   0127A6  0E00               	movlw	0
 30258   0127A8  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 30259   0127AA  0E00               	movlw	0
 30260   0127AC  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 30261   0127AE  ECDD  F0FA         	call	_st_dword	;wreg free
 30262   0127B2                     
 30263                           ;../fatfs/ff.c: 3803:      fs->wflag = 1;
 30264   0127B2  0106               	movlb	6	; () banked
 30265   0127B4  EE20 F004          	lfsr	2,4
 30266   0127B8  51D4               	movf	f_open@fs& (0+255),w,b
 30267   0127BA  26D9               	addwf	fsr2l,f,c
 30268   0127BC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30269   0127BE  22DA               	addwfc	fsr2h,f,c
 30270   0127C0  0E01               	movlw	1
 30271   0127C2  6EDF               	movwf	indf2,c
 30272   0127C4                     
 30273                           ; BSR set to: 6
 30274                           ;../fatfs/ff.c: 3804:      if (cl != 0) {
 30275   0127C4  51C4               	movf	f_open@cl& (0+255),w,b
 30276   0127C6  11C5               	iorwf	(f_open@cl+1)& (0+255),w,b
 30277   0127C8  11C6               	iorwf	(f_open@cl+2)& (0+255),w,b
 30278   0127CA  11C7               	iorwf	(f_open@cl+3)& (0+255),w,b
 30279   0127CC  B4D8               	btfsc	status,2,c
 30280   0127CE  EFEB  F093         	goto	u31121
 30281   0127D2  EFED  F093         	goto	u31120
 30282   0127D6                     u31121:
 30283   0127D6  EF6A  F094         	goto	l646
 30284   0127DA                     u31120:
 30285   0127DA                     
 30286                           ; BSR set to: 6
 30287                           ;../fatfs/ff.c: 3805:       sc = fs->winsect;
 30288   0127DA  EE20 F030          	lfsr	2,48
 30289   0127DE  51D4               	movf	f_open@fs& (0+255),w,b
 30290   0127E0  26D9               	addwf	fsr2l,f,c
 30291   0127E2  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30292   0127E4  22DA               	addwfc	fsr2h,f,c
 30293   0127E6  C4DE F6C8          	movff	postinc2,f_open@sc
 30294   0127EA  C4DE F6C9          	movff	postinc2,f_open@sc+1
 30295   0127EE  C4DE F6CA          	movff	postinc2,f_open@sc+2
 30296   0127F2  C4DE F6CB          	movff	postinc2,f_open@sc+3
 30297   0127F6                     
 30298                           ; BSR set to: 6
 30299                           ;../fatfs/ff.c: 3806:       res = remove_chain(&dj.obj, cl, 0);
 30300   0127F6  0ED7               	movlw	low f_open@dj
 30301   0127F8  6F45               	movwf	remove_chain@obj& (0+255),b
 30302   0127FA  0E06               	movlw	high f_open@dj
 30303   0127FC  6F46               	movwf	(remove_chain@obj+1)& (0+255),b
 30304   0127FE  C6C4  F647         	movff	f_open@cl,remove_chain@clst
 30305   012802  C6C5  F648         	movff	f_open@cl+1,remove_chain@clst+1
 30306   012806  C6C6  F649         	movff	f_open@cl+2,remove_chain@clst+2
 30307   01280A  C6C7  F64A         	movff	f_open@cl+3,remove_chain@clst+3
 30308   01280E  0E00               	movlw	0
 30309   012810  6F4B               	movwf	remove_chain@pclst& (0+255),b
 30310   012812  0E00               	movlw	0
 30311   012814  6F4C               	movwf	(remove_chain@pclst+1)& (0+255),b
 30312   012816  0E00               	movlw	0
 30313   012818  6F4D               	movwf	(remove_chain@pclst+2)& (0+255),b
 30314   01281A  0E00               	movlw	0
 30315   01281C  6F4E               	movwf	(remove_chain@pclst+3)& (0+255),b
 30316   01281E  EC54  F0CD         	call	_remove_chain	;wreg free
 30317   012822  0106               	movlb	6	; () banked
 30318   012824  6FD6               	movwf	f_open@res& (0+255),b
 30319   012826                     
 30320                           ; BSR set to: 6
 30321                           ;../fatfs/ff.c: 3807:       if (res == FR_OK) {
 30322   012826  51D6               	movf	f_open@res& (0+255),w,b
 30323   012828  A4D8               	btfss	status,2,c
 30324   01282A  EF19  F094         	goto	u31131
 30325   01282E  EF1B  F094         	goto	u31130
 30326   012832                     u31131:
 30327   012832  EF6A  F094         	goto	l646
 30328   012836                     u31130:
 30329   012836                     
 30330                           ; BSR set to: 6
 30331                           ;../fatfs/ff.c: 3808:        res = move_window(fs, sc);
 30332   012836  C6D4  F61A         	movff	f_open@fs,move_window@fs
 30333   01283A  C6D5  F61B         	movff	f_open@fs+1,move_window@fs+1
 30334   01283E  C6C8  F61C         	movff	f_open@sc,move_window@sect
 30335   012842  C6C9  F61D         	movff	f_open@sc+1,move_window@sect+1
 30336   012846  C6CA  F61E         	movff	f_open@sc+2,move_window@sect+2
 30337   01284A  C6CB  F61F         	movff	f_open@sc+3,move_window@sect+3
 30338   01284E  ECAB  F0EF         	call	_move_window	;wreg free
 30339   012852  0106               	movlb	6	; () banked
 30340   012854  6FD6               	movwf	f_open@res& (0+255),b
 30341   012856                     
 30342                           ; BSR set to: 6
 30343                           ;../fatfs/ff.c: 3809:        fs->last_clst = cl - 1;
 30344   012856  0EFF               	movlw	255
 30345   012858  25C4               	addwf	f_open@cl& (0+255),w,b
 30346   01285A  6FB4               	movwf	??_f_open& (0+255),b
 30347   01285C  0EFF               	movlw	255
 30348   01285E  21C5               	addwfc	(f_open@cl+1)& (0+255),w,b
 30349   012860  6FB5               	movwf	(??_f_open+1)& (0+255),b
 30350   012862  0EFF               	movlw	255
 30351   012864  21C6               	addwfc	(f_open@cl+2)& (0+255),w,b
 30352   012866  6FB6               	movwf	(??_f_open+2)& (0+255),b
 30353   012868  0EFF               	movlw	255
 30354   01286A  21C7               	addwfc	(f_open@cl+3)& (0+255),w,b
 30355   01286C  6FB7               	movwf	(??_f_open+3)& (0+255),b
 30356   01286E  EE20 F00C          	lfsr	2,12
 30357   012872  51D4               	movf	f_open@fs& (0+255),w,b
 30358   012874  26D9               	addwf	fsr2l,f,c
 30359   012876  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30360   012878  22DA               	addwfc	fsr2h,f,c
 30361   01287A  C6B4  F4DE         	movff	??_f_open,postinc2
 30362   01287E  C6B5  F4DE         	movff	??_f_open+1,postinc2
 30363   012882  C6B6  F4DE         	movff	??_f_open+2,postinc2
 30364   012886  C6B7  F4DE         	movff	??_f_open+3,postinc2
 30365   01288A  EF6A  F094         	goto	l646
 30366   01288E                     l22631:
 30367                           
 30368                           ; BSR set to: 6
 30369                           ;../fatfs/ff.c: 3816:    if (res == FR_OK) {
 30370   01288E  51D6               	movf	f_open@res& (0+255),w,b
 30371   012890  A4D8               	btfss	status,2,c
 30372   012892  EF4D  F094         	goto	u31141
 30373   012896  EF4F  F094         	goto	u31140
 30374   01289A                     u31141:
 30375   01289A  EF6A  F094         	goto	l646
 30376   01289E                     u31140:
 30377   01289E                     
 30378                           ; BSR set to: 6
 30379                           ;../fatfs/ff.c: 3817:     if (dj.obj.attr & 0x10) {
 30380   01289E  A9DB               	btfss	(f_open@dj+4)& (0+255),4,b
 30381   0128A0  EF54  F094         	goto	u31151
 30382   0128A4  EF56  F094         	goto	u31150
 30383   0128A8                     u31151:
 30384   0128A8  EF5A  F094         	goto	l648
 30385   0128AC                     u31150:
 30386   0128AC                     
 30387                           ; BSR set to: 6
 30388                           ;../fatfs/ff.c: 3818:      res = FR_NO_FILE;
 30389   0128AC  0E04               	movlw	4
 30390   0128AE  6FD6               	movwf	f_open@res& (0+255),b
 30391                           
 30392                           ;../fatfs/ff.c: 3819:     } else {
 30393   0128B0  EF6A  F094         	goto	l646
 30394   0128B4                     l648:
 30395                           
 30396                           ; BSR set to: 6
 30397                           ;../fatfs/ff.c: 3820:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
 30398   0128B4  A3B3               	btfss	f_open@mode& (0+255),1,b
 30399   0128B6  EF5F  F094         	goto	u31161
 30400   0128BA  EF61  F094         	goto	u31160
 30401   0128BE                     u31161:
 30402   0128BE  EF6A  F094         	goto	l646
 30403   0128C2                     u31160:
 30404   0128C2                     
 30405                           ; BSR set to: 6
 30406   0128C2  A1DB               	btfss	(f_open@dj+4)& (0+255),0,b
 30407   0128C4  EF66  F094         	goto	u31171
 30408   0128C8  EF68  F094         	goto	u31170
 30409   0128CC                     u31171:
 30410   0128CC  EF6A  F094         	goto	l646
 30411   0128D0                     u31170:
 30412   0128D0                     
 30413                           ; BSR set to: 6
 30414                           ;../fatfs/ff.c: 3821:       res = FR_DENIED;
 30415   0128D0  0E07               	movlw	7
 30416   0128D2  6FD6               	movwf	f_open@res& (0+255),b
 30417   0128D4                     l646:
 30418                           
 30419                           ; BSR set to: 6
 30420                           ;../fatfs/ff.c: 3826:   if (res == FR_OK) {
 30421   0128D4  51D6               	movf	f_open@res& (0+255),w,b
 30422   0128D6  A4D8               	btfss	status,2,c
 30423   0128D8  EF70  F094         	goto	u31181
 30424   0128DC  EF72  F094         	goto	u31180
 30425   0128E0                     u31181:
 30426   0128E0  EF98  F094         	goto	l22649
 30427   0128E4                     u31180:
 30428   0128E4                     
 30429                           ; BSR set to: 6
 30430                           ;../fatfs/ff.c: 3827:    if (mode & 0x08) mode |= 0x40;
 30431   0128E4  A7B3               	btfss	f_open@mode& (0+255),3,b
 30432   0128E6  EF77  F094         	goto	u31191
 30433   0128EA  EF79  F094         	goto	u31190
 30434   0128EE                     u31191:
 30435   0128EE  EF7A  F094         	goto	l22645
 30436   0128F2                     u31190:
 30437   0128F2                     
 30438                           ; BSR set to: 6
 30439   0128F2  8DB3               	bsf	f_open@mode& (0+255),6,b
 30440   0128F4                     l22645:
 30441                           
 30442                           ; BSR set to: 6
 30443                           ;../fatfs/ff.c: 3828:    fp->dir_sect = fs->winsect;
 30444   0128F4  EE20 F030          	lfsr	2,48
 30445   0128F8  51D4               	movf	f_open@fs& (0+255),w,b
 30446   0128FA  26D9               	addwf	fsr2l,f,c
 30447   0128FC  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30448   0128FE  22DA               	addwfc	fsr2h,f,c
 30449   012900  EE10 F01C          	lfsr	1,28
 30450   012904  51AF               	movf	f_open@fp& (0+255),w,b
 30451   012906  26E1               	addwf	fsr1l,f,c
 30452   012908  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30453   01290A  22E2               	addwfc	fsr1h,f,c
 30454   01290C  C4DE F4E6          	movff	postinc2,postinc1
 30455   012910  C4DE F4E6          	movff	postinc2,postinc1
 30456   012914  C4DE F4E6          	movff	postinc2,postinc1
 30457   012918  C4DE F4E6          	movff	postinc2,postinc1
 30458   01291C                     
 30459                           ; BSR set to: 6
 30460                           ;../fatfs/ff.c: 3829:    fp->dir_ptr = dj.dir;
 30461   01291C  EE20 F020          	lfsr	2,32
 30462   012920  51AF               	movf	f_open@fp& (0+255),w,b
 30463   012922  26D9               	addwf	fsr2l,f,c
 30464   012924  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30465   012926  22DA               	addwfc	fsr2h,f,c
 30466   012928  C6F1  F4DE         	movff	f_open@dj+26,postinc2
 30467   01292C  C6F2  F4DD         	movff	f_open@dj+27,postdec2
 30468   012930                     l22649:
 30469                           
 30470                           ; BSR set to: 6
 30471                           ;../fatfs/ff.c: 3847:   if (res == FR_OK) {
 30472   012930  51D6               	movf	f_open@res& (0+255),w,b
 30473   012932  A4D8               	btfss	status,2,c
 30474   012934  EF9E  F094         	goto	u31201
 30475   012938  EFA0  F094         	goto	u31200
 30476   01293C                     u31201:
 30477   01293C  EF8A  F096         	goto	l633
 30478   012940                     u31200:
 30479   012940                     
 30480                           ; BSR set to: 6
 30481                           ;../fatfs/ff.c: 3856:    {;../fatfs/ff.c: 3857:     fp->obj.sclust = ld_clust(fs, dj.dir
      +                          );
 30482   012940  C6D4  F50B         	movff	f_open@fs,ld_clust@fs
 30483   012944  C6D5  F50C         	movff	f_open@fs+1,ld_clust@fs+1
 30484   012948  C6F1  F50D         	movff	f_open@dj+26,ld_clust@dir
 30485   01294C  C6F2  F50E         	movff	f_open@dj+27,ld_clust@dir+1
 30486   012950  EC3A  F0F9         	call	_ld_clust	;wreg free
 30487   012954  0106               	movlb	6	; () banked
 30488   012956  EE20 F006          	lfsr	2,6
 30489   01295A  51AF               	movf	f_open@fp& (0+255),w,b
 30490   01295C  26D9               	addwf	fsr2l,f,c
 30491   01295E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30492   012960  22DA               	addwfc	fsr2h,f,c
 30493   012962  C50B  F4DE         	movff	?_ld_clust,postinc2
 30494   012966  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 30495   01296A  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 30496   01296E  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 30497                           
 30498                           ;../fatfs/ff.c: 3858:     fp->obj.objsize = ld_dword(dj.dir + 28);
 30499   012972  0E1C               	movlw	28
 30500   012974  25F1               	addwf	(f_open@dj+26)& (0+255),w,b
 30501   012976  6E04               	movwf	ld_dword@ptr^(0+1280),c
 30502   012978  0E00               	movlw	0
 30503   01297A  21F2               	addwfc	(f_open@dj+27)& (0+255),w,b
 30504   01297C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 30505   01297E  ECC7  F0F2         	call	_ld_dword	;wreg free
 30506   012982  0106               	movlb	6	; () banked
 30507   012984  EE20 F00A          	lfsr	2,10
 30508   012988  51AF               	movf	f_open@fp& (0+255),w,b
 30509   01298A  26D9               	addwf	fsr2l,f,c
 30510   01298C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30511   01298E  22DA               	addwfc	fsr2h,f,c
 30512   012990  C504  F4DE         	movff	?_ld_dword,postinc2
 30513   012994  C505  F4DE         	movff	?_ld_dword+1,postinc2
 30514   012998  C506  F4DE         	movff	?_ld_dword+2,postinc2
 30515   01299C  C507  F4DE         	movff	?_ld_dword+3,postinc2
 30516   0129A0                     
 30517                           ; BSR set to: 6
 30518                           ;../fatfs/ff.c: 3859:    };../fatfs/ff.c: 3863:    fp->obj.fs = fs;
 30519   0129A0  C6AF  F4D9         	movff	f_open@fp,fsr2l
 30520   0129A4  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 30521   0129A8  C6D4  F4DE         	movff	f_open@fs,postinc2
 30522   0129AC  C6D5  F4DD         	movff	f_open@fs+1,postdec2
 30523   0129B0                     
 30524                           ; BSR set to: 6
 30525                           ;../fatfs/ff.c: 3864:    fp->obj.id = fs->id;
 30526   0129B0  EE20 F006          	lfsr	2,6
 30527   0129B4  51D4               	movf	f_open@fs& (0+255),w,b
 30528   0129B6  26D9               	addwf	fsr2l,f,c
 30529   0129B8  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30530   0129BA  22DA               	addwfc	fsr2h,f,c
 30531   0129BC  EE10 F002          	lfsr	1,2
 30532   0129C0  51AF               	movf	f_open@fp& (0+255),w,b
 30533   0129C2  26E1               	addwf	fsr1l,f,c
 30534   0129C4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30535   0129C6  22E2               	addwfc	fsr1h,f,c
 30536   0129C8  C4DE F4E6          	movff	postinc2,postinc1
 30537   0129CC  C4DD F4E5          	movff	postdec2,postdec1
 30538   0129D0                     
 30539                           ; BSR set to: 6
 30540                           ;../fatfs/ff.c: 3865:    fp->flag = mode;
 30541   0129D0  EE20 F00E          	lfsr	2,14
 30542   0129D4  51AF               	movf	f_open@fp& (0+255),w,b
 30543   0129D6  26D9               	addwf	fsr2l,f,c
 30544   0129D8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30545   0129DA  22DA               	addwfc	fsr2h,f,c
 30546   0129DC  C6B3  F4DF         	movff	f_open@mode,indf2
 30547   0129E0                     
 30548                           ; BSR set to: 6
 30549                           ;../fatfs/ff.c: 3866:    fp->err = 0;
 30550   0129E0  EE20 F00F          	lfsr	2,15
 30551   0129E4  51AF               	movf	f_open@fp& (0+255),w,b
 30552   0129E6  26D9               	addwf	fsr2l,f,c
 30553   0129E8  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30554   0129EA  22DA               	addwfc	fsr2h,f,c
 30555   0129EC  6ADF               	clrf	indf2,c
 30556   0129EE                     
 30557                           ; BSR set to: 6
 30558                           ;../fatfs/ff.c: 3867:    fp->sect = 0;
 30559   0129EE  EE20 F018          	lfsr	2,24
 30560   0129F2  51AF               	movf	f_open@fp& (0+255),w,b
 30561   0129F4  26D9               	addwf	fsr2l,f,c
 30562   0129F6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30563   0129F8  22DA               	addwfc	fsr2h,f,c
 30564   0129FA  6ADE               	clrf	postinc2,c
 30565   0129FC  6ADE               	clrf	postinc2,c
 30566   0129FE  6ADE               	clrf	postinc2,c
 30567   012A00  6ADD               	clrf	postdec2,c
 30568   012A02                     
 30569                           ; BSR set to: 6
 30570                           ;../fatfs/ff.c: 3868:    fp->fptr = 0;
 30571   012A02  EE20 F010          	lfsr	2,16
 30572   012A06  51AF               	movf	f_open@fp& (0+255),w,b
 30573   012A08  26D9               	addwf	fsr2l,f,c
 30574   012A0A  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30575   012A0C  22DA               	addwfc	fsr2h,f,c
 30576   012A0E  6ADE               	clrf	postinc2,c
 30577   012A10  6ADE               	clrf	postinc2,c
 30578   012A12  6ADE               	clrf	postinc2,c
 30579   012A14  6ADD               	clrf	postdec2,c
 30580   012A16                     
 30581                           ; BSR set to: 6
 30582                           ;../fatfs/ff.c: 3871:    memset(fp->buf, 0, sizeof fp->buf);
 30583   012A16  0E22               	movlw	34
 30584   012A18  25AF               	addwf	f_open@fp& (0+255),w,b
 30585   012A1A  6E04               	movwf	memset@dest^(0+1280),c
 30586   012A1C  0E00               	movlw	0
 30587   012A1E  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 30588   012A20  6E05               	movwf	(memset@dest+1)^(0+1280),c
 30589   012A22  0E00               	movlw	0
 30590   012A24  6E07               	movwf	(memset@c+1)^(0+1280),c
 30591   012A26  0E00               	movlw	0
 30592   012A28  6E06               	movwf	memset@c^(0+1280),c
 30593   012A2A  0E02               	movlw	2
 30594   012A2C  6E09               	movwf	(memset@n+1)^(0+1280),c
 30595   012A2E  0E00               	movlw	0
 30596   012A30  6E08               	movwf	memset@n^(0+1280),c
 30597   012A32  EC14  F0FF         	call	_memset	;wreg free
 30598   012A36                     
 30599                           ;../fatfs/ff.c: 3873:    if ((mode & 0x20) && fp->obj.objsize > 0) {
 30600   012A36  0106               	movlb	6	; () banked
 30601   012A38  ABB3               	btfss	f_open@mode& (0+255),5,b
 30602   012A3A  EF21  F095         	goto	u31211
 30603   012A3E  EF23  F095         	goto	u31210
 30604   012A42                     u31211:
 30605   012A42  EF8A  F096         	goto	l633
 30606   012A46                     u31210:
 30607   012A46                     
 30608                           ; BSR set to: 6
 30609   012A46  EE20 F00A          	lfsr	2,10
 30610   012A4A  51AF               	movf	f_open@fp& (0+255),w,b
 30611   012A4C  26D9               	addwf	fsr2l,f,c
 30612   012A4E  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30613   012A50  22DA               	addwfc	fsr2h,f,c
 30614   012A52  50DE               	movf	postinc2,w,c
 30615   012A54  10DE               	iorwf	postinc2,w,c
 30616   012A56  10DE               	iorwf	postinc2,w,c
 30617   012A58  10DE               	iorwf	postinc2,w,c
 30618   012A5A  B4D8               	btfsc	status,2,c
 30619   012A5C  EF32  F095         	goto	u31221
 30620   012A60  EF34  F095         	goto	u31220
 30621   012A64                     u31221:
 30622   012A64  EF8A  F096         	goto	l633
 30623   012A68                     u31220:
 30624   012A68                     
 30625                           ; BSR set to: 6
 30626                           ;../fatfs/ff.c: 3874:     fp->fptr = fp->obj.objsize;
 30627   012A68  EE20 F00A          	lfsr	2,10
 30628   012A6C  51AF               	movf	f_open@fp& (0+255),w,b
 30629   012A6E  26D9               	addwf	fsr2l,f,c
 30630   012A70  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30631   012A72  22DA               	addwfc	fsr2h,f,c
 30632   012A74  EE10 F010          	lfsr	1,16
 30633   012A78  51AF               	movf	f_open@fp& (0+255),w,b
 30634   012A7A  26E1               	addwf	fsr1l,f,c
 30635   012A7C  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30636   012A7E  22E2               	addwfc	fsr1h,f,c
 30637   012A80  C4DE F4E6          	movff	postinc2,postinc1
 30638   012A84  C4DE F4E6          	movff	postinc2,postinc1
 30639   012A88  C4DE F4E6          	movff	postinc2,postinc1
 30640   012A8C  C4DE F4E6          	movff	postinc2,postinc1
 30641   012A90                     
 30642                           ; BSR set to: 6
 30643                           ;../fatfs/ff.c: 3875:     bcs = (DWORD)fs->csize * ((UINT)512);
 30644   012A90  EE20 F00A          	lfsr	2,10
 30645   012A94  51D4               	movf	f_open@fs& (0+255),w,b
 30646   012A96  26D9               	addwf	fsr2l,f,c
 30647   012A98  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30648   012A9A  22DA               	addwfc	fsr2h,f,c
 30649   012A9C  C4DE F6B4          	movff	postinc2,??_f_open
 30650   012AA0  C4DD F6B5          	movff	postdec2,??_f_open+1
 30651   012AA4  51B4               	movf	??_f_open& (0+255),w,b
 30652   012AA6  6FB6               	movwf	(??_f_open+2)& (0+255),b
 30653   012AA8  51B5               	movf	(??_f_open+1)& (0+255),w,b
 30654   012AAA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 30655   012AAC  6BB8               	clrf	(??_f_open+4)& (0+255),b
 30656   012AAE  6BB9               	clrf	(??_f_open+5)& (0+255),b
 30657   012AB0  0E09               	movlw	9
 30658   012AB2                     u31235:
 30659   012AB2  90D8               	bcf	status,0,c
 30660   012AB4  37B6               	rlcf	(??_f_open+2)& (0+255),f,b
 30661   012AB6  37B7               	rlcf	(??_f_open+3)& (0+255),f,b
 30662   012AB8  37B8               	rlcf	(??_f_open+4)& (0+255),f,b
 30663   012ABA  37B9               	rlcf	(??_f_open+5)& (0+255),f,b
 30664   012ABC  2EE8               	decfsz	wreg,f,c
 30665   012ABE  EF59  F095         	goto	u31235
 30666   012AC2  C6B6  F6BC         	movff	??_f_open+2,f_open@bcs
 30667   012AC6  C6B7  F6BD         	movff	??_f_open+3,f_open@bcs+1
 30668   012ACA  C6B8  F6BE         	movff	??_f_open+4,f_open@bcs+2
 30669   012ACE  C6B9  F6BF         	movff	??_f_open+5,f_open@bcs+3
 30670   012AD2                     
 30671                           ; BSR set to: 6
 30672                           ;../fatfs/ff.c: 3876:     clst = fp->obj.sclust;
 30673   012AD2  EE20 F006          	lfsr	2,6
 30674   012AD6  51AF               	movf	f_open@fp& (0+255),w,b
 30675   012AD8  26D9               	addwf	fsr2l,f,c
 30676   012ADA  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30677   012ADC  22DA               	addwfc	fsr2h,f,c
 30678   012ADE  C4DE F6D0          	movff	postinc2,f_open@clst
 30679   012AE2  C4DE F6D1          	movff	postinc2,f_open@clst+1
 30680   012AE6  C4DE F6D2          	movff	postinc2,f_open@clst+2
 30681   012AEA  C4DE F6D3          	movff	postinc2,f_open@clst+3
 30682   012AEE                     
 30683                           ; BSR set to: 6
 30684                           ;../fatfs/ff.c: 3877:     for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= 
      +                          bcs) {
 30685   012AEE  EE20 F00A          	lfsr	2,10
 30686   012AF2  51AF               	movf	f_open@fp& (0+255),w,b
 30687   012AF4  26D9               	addwf	fsr2l,f,c
 30688   012AF6  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30689   012AF8  22DA               	addwfc	fsr2h,f,c
 30690   012AFA  C4DE F6CC          	movff	postinc2,f_open@ofs
 30691   012AFE  C4DE F6CD          	movff	postinc2,f_open@ofs+1
 30692   012B02  C4DE F6CE          	movff	postinc2,f_open@ofs+2
 30693   012B06  C4DE F6CF          	movff	postinc2,f_open@ofs+3
 30694   012B0A  EFC5  F095         	goto	l22691
 30695   012B0E                     l22679:
 30696                           
 30697                           ; BSR set to: 6
 30698                           ;../fatfs/ff.c: 3878:      clst = get_fat(&fp->obj, clst);
 30699   012B0E  C6AF  F624         	movff	f_open@fp,get_fat@obj
 30700   012B12  C6B0  F625         	movff	f_open@fp+1,get_fat@obj+1
 30701   012B16  C6D0  F626         	movff	f_open@clst,get_fat@clst
 30702   012B1A  C6D1  F627         	movff	f_open@clst+1,get_fat@clst+1
 30703   012B1E  C6D2  F628         	movff	f_open@clst+2,get_fat@clst+2
 30704   012B22  C6D3  F629         	movff	f_open@clst+3,get_fat@clst+3
 30705   012B26  ECF7  F0B4         	call	_get_fat	;wreg free
 30706   012B2A  C624  F6D0         	movff	?_get_fat,f_open@clst
 30707   012B2E  C625  F6D1         	movff	?_get_fat+1,f_open@clst+1
 30708   012B32  C626  F6D2         	movff	?_get_fat+2,f_open@clst+2
 30709   012B36  C627  F6D3         	movff	?_get_fat+3,f_open@clst+3
 30710   012B3A                     
 30711                           ;../fatfs/ff.c: 3879:      if (clst <= 1) res = FR_INT_ERR;
 30712   012B3A  0106               	movlb	6	; () banked
 30713   012B3C  51D3               	movf	(f_open@clst+3)& (0+255),w,b
 30714   012B3E  11D2               	iorwf	(f_open@clst+2)& (0+255),w,b
 30715   012B40  11D1               	iorwf	(f_open@clst+1)& (0+255),w,b
 30716   012B42  E107               	bnz	u31241
 30717   012B44  0E02               	movlw	2
 30718   012B46  5DD0               	subwf	f_open@clst& (0+255),w,b
 30719   012B48  B0D8               	btfsc	status,0,c
 30720   012B4A  EFA9  F095         	goto	u31241
 30721   012B4E  EFAB  F095         	goto	u31240
 30722   012B52                     u31241:
 30723   012B52  EFAD  F095         	goto	l22685
 30724   012B56                     u31240:
 30725   012B56                     
 30726                           ; BSR set to: 6
 30727   012B56  0E02               	movlw	2
 30728   012B58  6FD6               	movwf	f_open@res& (0+255),b
 30729   012B5A                     l22685:
 30730                           
 30731                           ; BSR set to: 6
 30732                           ;../fatfs/ff.c: 3880:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
 30733   012B5A  29D0               	incf	f_open@clst& (0+255),w,b
 30734   012B5C  E10A               	bnz	u31251
 30735   012B5E  29D1               	incf	(f_open@clst+1)& (0+255),w,b
 30736   012B60  E108               	bnz	u31251
 30737   012B62  29D2               	incf	(f_open@clst+2)& (0+255),w,b
 30738   012B64  E106               	bnz	u31251
 30739   012B66  29D3               	incf	(f_open@clst+3)& (0+255),w,b
 30740   012B68  A4D8               	btfss	status,2,c
 30741   012B6A  EFB9  F095         	goto	u31251
 30742   012B6E  EFBB  F095         	goto	u31250
 30743   012B72                     u31251:
 30744   012B72  EFBD  F095         	goto	l22689
 30745   012B76                     u31250:
 30746   012B76                     
 30747                           ; BSR set to: 6
 30748   012B76  0E01               	movlw	1
 30749   012B78  6FD6               	movwf	f_open@res& (0+255),b
 30750   012B7A                     l22689:
 30751                           
 30752                           ; BSR set to: 6
 30753                           ;../fatfs/ff.c: 3881:     }
 30754   012B7A  51BC               	movf	f_open@bcs& (0+255),w,b
 30755   012B7C  5FCC               	subwf	f_open@ofs& (0+255),f,b
 30756   012B7E  51BD               	movf	(f_open@bcs+1)& (0+255),w,b
 30757   012B80  5BCD               	subwfb	(f_open@ofs+1)& (0+255),f,b
 30758   012B82  51BE               	movf	(f_open@bcs+2)& (0+255),w,b
 30759   012B84  5BCE               	subwfb	(f_open@ofs+2)& (0+255),f,b
 30760   012B86  51BF               	movf	(f_open@bcs+3)& (0+255),w,b
 30761   012B88  5BCF               	subwfb	(f_open@ofs+3)& (0+255),f,b
 30762   012B8A                     l22691:
 30763                           
 30764                           ; BSR set to: 6
 30765   012B8A  51D6               	movf	f_open@res& (0+255),w,b
 30766   012B8C  A4D8               	btfss	status,2,c
 30767   012B8E  EFCB  F095         	goto	u31261
 30768   012B92  EFCD  F095         	goto	u31260
 30769   012B96                     u31261:
 30770   012B96  EFDC  F095         	goto	l22695
 30771   012B9A                     u31260:
 30772   012B9A                     
 30773                           ; BSR set to: 6
 30774   012B9A  51CC               	movf	f_open@ofs& (0+255),w,b
 30775   012B9C  5DBC               	subwf	f_open@bcs& (0+255),w,b
 30776   012B9E  51CD               	movf	(f_open@ofs+1)& (0+255),w,b
 30777   012BA0  59BD               	subwfb	(f_open@bcs+1)& (0+255),w,b
 30778   012BA2  51CE               	movf	(f_open@ofs+2)& (0+255),w,b
 30779   012BA4  59BE               	subwfb	(f_open@bcs+2)& (0+255),w,b
 30780   012BA6  51CF               	movf	(f_open@ofs+3)& (0+255),w,b
 30781   012BA8  59BF               	subwfb	(f_open@bcs+3)& (0+255),w,b
 30782   012BAA  A0D8               	btfss	status,0,c
 30783   012BAC  EFDA  F095         	goto	u31271
 30784   012BB0  EFDC  F095         	goto	u31270
 30785   012BB4                     u31271:
 30786   012BB4  EF87  F095         	goto	l22679
 30787   012BB8                     u31270:
 30788   012BB8                     l22695:
 30789                           
 30790                           ; BSR set to: 6
 30791                           ;../fatfs/ff.c: 3882:     fp->clust = clst;
 30792   012BB8  EE20 F014          	lfsr	2,20
 30793   012BBC  51AF               	movf	f_open@fp& (0+255),w,b
 30794   012BBE  26D9               	addwf	fsr2l,f,c
 30795   012BC0  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30796   012BC2  22DA               	addwfc	fsr2h,f,c
 30797   012BC4  C6D0  F4DE         	movff	f_open@clst,postinc2
 30798   012BC8  C6D1  F4DE         	movff	f_open@clst+1,postinc2
 30799   012BCC  C6D2  F4DE         	movff	f_open@clst+2,postinc2
 30800   012BD0  C6D3  F4DE         	movff	f_open@clst+3,postinc2
 30801   012BD4                     
 30802                           ; BSR set to: 6
 30803                           ;../fatfs/ff.c: 3883:     if (res == FR_OK && ofs % ((UINT)512)) {
 30804   012BD4  51D6               	movf	f_open@res& (0+255),w,b
 30805   012BD6  A4D8               	btfss	status,2,c
 30806   012BD8  EFF0  F095         	goto	u31281
 30807   012BDC  EFF2  F095         	goto	u31280
 30808   012BE0                     u31281:
 30809   012BE0  EF8A  F096         	goto	l633
 30810   012BE4                     u31280:
 30811   012BE4                     
 30812                           ; BSR set to: 6
 30813   012BE4  0EFF               	movlw	255
 30814   012BE6  15CC               	andwf	f_open@ofs& (0+255),w,b
 30815   012BE8  6FB4               	movwf	??_f_open& (0+255),b
 30816   012BEA  0E01               	movlw	1
 30817   012BEC  15CD               	andwf	(f_open@ofs+1)& (0+255),w,b
 30818   012BEE  6FB5               	movwf	(??_f_open+1)& (0+255),b
 30819   012BF0  0E00               	movlw	0
 30820   012BF2  15CE               	andwf	(f_open@ofs+2)& (0+255),w,b
 30821   012BF4  6FB6               	movwf	(??_f_open+2)& (0+255),b
 30822   012BF6  0E00               	movlw	0
 30823   012BF8  15CF               	andwf	(f_open@ofs+3)& (0+255),w,b
 30824   012BFA  6FB7               	movwf	(??_f_open+3)& (0+255),b
 30825   012BFC  51B4               	movf	??_f_open& (0+255),w,b
 30826   012BFE  11B5               	iorwf	(??_f_open+1)& (0+255),w,b
 30827   012C00  11B6               	iorwf	(??_f_open+2)& (0+255),w,b
 30828   012C02  11B7               	iorwf	(??_f_open+3)& (0+255),w,b
 30829   012C04  B4D8               	btfsc	status,2,c
 30830   012C06  EF07  F096         	goto	u31291
 30831   012C0A  EF09  F096         	goto	u31290
 30832   012C0E                     u31291:
 30833   012C0E  EF8A  F096         	goto	l633
 30834   012C12                     u31290:
 30835   012C12                     
 30836                           ; BSR set to: 6
 30837                           ;../fatfs/ff.c: 3884:      sc = clst2sect(fs, clst);
 30838   012C12  C6D4  F510         	movff	f_open@fs,clst2sect@fs
 30839   012C16  C6D5  F511         	movff	f_open@fs+1,clst2sect@fs+1
 30840   012C1A  C6D0  F512         	movff	f_open@clst,clst2sect@clst
 30841   012C1E  C6D1  F513         	movff	f_open@clst+1,clst2sect@clst+1
 30842   012C22  C6D2  F514         	movff	f_open@clst+2,clst2sect@clst+2
 30843   012C26  C6D3  F515         	movff	f_open@clst+3,clst2sect@clst+3
 30844   012C2A  EC7A  F0F0         	call	_clst2sect	;wreg free
 30845   012C2E  C510  F6C8         	movff	?_clst2sect,f_open@sc
 30846   012C32  C511  F6C9         	movff	?_clst2sect+1,f_open@sc+1
 30847   012C36  C512  F6CA         	movff	?_clst2sect+2,f_open@sc+2
 30848   012C3A  C513  F6CB         	movff	?_clst2sect+3,f_open@sc+3
 30849   012C3E                     
 30850                           ;../fatfs/ff.c: 3885:      if (sc == 0) {
 30851   012C3E  0106               	movlb	6	; () banked
 30852   012C40  51C8               	movf	f_open@sc& (0+255),w,b
 30853   012C42  11C9               	iorwf	(f_open@sc+1)& (0+255),w,b
 30854   012C44  11CA               	iorwf	(f_open@sc+2)& (0+255),w,b
 30855   012C46  11CB               	iorwf	(f_open@sc+3)& (0+255),w,b
 30856   012C48  A4D8               	btfss	status,2,c
 30857   012C4A  EF29  F096         	goto	u31301
 30858   012C4E  EF2B  F096         	goto	u31300
 30859   012C52                     u31301:
 30860   012C52  EF2F  F096         	goto	l22707
 30861   012C56                     u31300:
 30862   012C56                     
 30863                           ; BSR set to: 6
 30864                           ;../fatfs/ff.c: 3886:       res = FR_INT_ERR;
 30865   012C56  0E02               	movlw	2
 30866   012C58  6FD6               	movwf	f_open@res& (0+255),b
 30867                           
 30868                           ;../fatfs/ff.c: 3887:      } else {
 30869   012C5A  EF8A  F096         	goto	l633
 30870   012C5E                     l22707:
 30871                           
 30872                           ; BSR set to: 6
 30873                           ;../fatfs/ff.c: 3888:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
 30874   012C5E  C6CC  F6B4         	movff	f_open@ofs,??_f_open
 30875   012C62  C6CD  F6B5         	movff	f_open@ofs+1,??_f_open+1
 30876   012C66  C6CE  F6B6         	movff	f_open@ofs+2,??_f_open+2
 30877   012C6A  C6CF  F6B7         	movff	f_open@ofs+3,??_f_open+3
 30878   012C6E  0E0A               	movlw	10
 30879   012C70  EF3F  F096         	goto	u31310
 30880   012C74                     u31315:
 30881   012C74  90D8               	bcf	status,0,c
 30882   012C76  33B7               	rrcf	(??_f_open+3)& (0+255),f,b
 30883   012C78  33B6               	rrcf	(??_f_open+2)& (0+255),f,b
 30884   012C7A  33B5               	rrcf	(??_f_open+1)& (0+255),f,b
 30885   012C7C  33B4               	rrcf	??_f_open& (0+255),f,b
 30886   012C7E                     u31310:
 30887   012C7E  2EE8               	decfsz	wreg,f,c
 30888   012C80  EF3A  F096         	goto	u31315
 30889   012C84  51C8               	movf	f_open@sc& (0+255),w,b
 30890   012C86  25B4               	addwf	??_f_open& (0+255),w,b
 30891   012C88  6FB8               	movwf	(??_f_open+4)& (0+255),b
 30892   012C8A  51C9               	movf	(f_open@sc+1)& (0+255),w,b
 30893   012C8C  21B5               	addwfc	(??_f_open+1)& (0+255),w,b
 30894   012C8E  6FB9               	movwf	(??_f_open+5)& (0+255),b
 30895   012C90  51CA               	movf	(f_open@sc+2)& (0+255),w,b
 30896   012C92  21B6               	addwfc	(??_f_open+2)& (0+255),w,b
 30897   012C94  6FBA               	movwf	(??_f_open+6)& (0+255),b
 30898   012C96  51CB               	movf	(f_open@sc+3)& (0+255),w,b
 30899   012C98  21B7               	addwfc	(??_f_open+3)& (0+255),w,b
 30900   012C9A  6FBB               	movwf	(??_f_open+7)& (0+255),b
 30901   012C9C  EE20 F018          	lfsr	2,24
 30902   012CA0  51AF               	movf	f_open@fp& (0+255),w,b
 30903   012CA2  26D9               	addwf	fsr2l,f,c
 30904   012CA4  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30905   012CA6  22DA               	addwfc	fsr2h,f,c
 30906   012CA8  C6B8  F4DE         	movff	??_f_open+4,postinc2
 30907   012CAC  C6B9  F4DE         	movff	??_f_open+5,postinc2
 30908   012CB0  C6BA  F4DE         	movff	??_f_open+6,postinc2
 30909   012CB4  C6BB  F4DE         	movff	??_f_open+7,postinc2
 30910   012CB8                     
 30911                           ; BSR set to: 6
 30912                           ;../fatfs/ff.c: 3890:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res
      +                           = FR_DISK_ERR;
 30913   012CB8  0E22               	movlw	34
 30914   012CBA  25AF               	addwf	f_open@fp& (0+255),w,b
 30915   012CBC  6F00               	movwf	disk_read@buff& (0+255),b
 30916   012CBE  0E00               	movlw	0
 30917   012CC0  21B0               	addwfc	(f_open@fp+1)& (0+255),w,b
 30918   012CC2  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 30919   012CC4  EE20 F018          	lfsr	2,24
 30920   012CC8  51AF               	movf	f_open@fp& (0+255),w,b
 30921   012CCA  26D9               	addwf	fsr2l,f,c
 30922   012CCC  51B0               	movf	(f_open@fp+1)& (0+255),w,b
 30923   012CCE  22DA               	addwfc	fsr2h,f,c
 30924   012CD0  C4DE F602          	movff	postinc2,disk_read@sector
 30925   012CD4  C4DE F603          	movff	postinc2,disk_read@sector+1
 30926   012CD8  C4DE F604          	movff	postinc2,disk_read@sector+2
 30927   012CDC  C4DE F605          	movff	postinc2,disk_read@sector+3
 30928   012CE0  0E00               	movlw	0
 30929   012CE2  6F07               	movwf	(disk_read@count+1)& (0+255),b
 30930   012CE4  0E01               	movlw	1
 30931   012CE6  6F06               	movwf	disk_read@count& (0+255),b
 30932   012CE8  EE20 F001          	lfsr	2,1
 30933   012CEC  51D4               	movf	f_open@fs& (0+255),w,b
 30934   012CEE  26D9               	addwf	fsr2l,f,c
 30935   012CF0  51D5               	movf	(f_open@fs+1)& (0+255),w,b
 30936   012CF2  22DA               	addwfc	fsr2h,f,c
 30937   012CF4  50DF               	movf	indf2,w,c
 30938   012CF6  ECD5  F0F3         	call	_disk_read
 30939   012CFA  0900               	iorlw	0
 30940   012CFC  B4D8               	btfsc	status,2,c
 30941   012CFE  EF83  F096         	goto	u31321
 30942   012D02  EF85  F096         	goto	u31320
 30943   012D06                     u31321:
 30944   012D06  EF8A  F096         	goto	l654
 30945   012D0A                     u31320:
 30946   012D0A  0E01               	movlw	1
 30947   012D0C  0106               	movlb	6	; () banked
 30948   012D0E  6FD6               	movwf	f_open@res& (0+255),b
 30949   012D10  EF8A  F096         	goto	l633
 30950   012D14                     l654:
 30951   012D14                     l633:
 30952                           
 30953                           ;../fatfs/ff.c: 3904:  if (res != FR_OK) fp->obj.fs = 0;
 30954   012D14  0106               	movlb	6	; () banked
 30955   012D16  51D6               	movf	f_open@res& (0+255),w,b
 30956   012D18  B4D8               	btfsc	status,2,c
 30957   012D1A  EF91  F096         	goto	u31331
 30958   012D1E  EF93  F096         	goto	u31330
 30959   012D22                     u31331:
 30960   012D22  EF99  F096         	goto	l22715
 30961   012D26                     u31330:
 30962   012D26                     
 30963                           ; BSR set to: 6
 30964   012D26  C6AF  F4D9         	movff	f_open@fp,fsr2l
 30965   012D2A  C6B0  F4DA         	movff	f_open@fp+1,fsr2h
 30966   012D2E  6ADE               	clrf	postinc2,c
 30967   012D30  6ADD               	clrf	postdec2,c
 30968   012D32                     l22715:
 30969                           
 30970                           ; BSR set to: 6
 30971                           ;../fatfs/ff.c: 3906:  return res;
 30972   012D32  51D6               	movf	f_open@res& (0+255),w,b
 30973   012D34                     l628:
 30974                           
 30975                           ; BSR set to: 6
 30976   012D34  0012               	return		;funcret
 30977   012D36                     __end_of_f_open:
 30978                           	callstack 0
 30979                           
 30980 ;; *************** function _remove_chain *****************
 30981 ;; Defined at:
 30982 ;;		line 1430 in file "../fatfs/ff.c"
 30983 ;; Parameters:    Size  Location     Type
 30984 ;;  obj             2   69[BANK6 ] PTR struct .
 30985 ;;		 -> f_mkdir@sobj(14), f_unlink@dj(40), f_open@dj(40), 
 30986 ;;  clst            4   71[BANK6 ] unsigned long 
 30987 ;;  pclst           4   75[BANK6 ] unsigned long 
 30988 ;; Auto vars:     Size  Location     Type
 30989 ;;  nxt             4   87[BANK6 ] unsigned long 
 30990 ;;  fs              2   92[BANK6 ] PTR struct .
 30991 ;;		 -> fs(564), NULL(0), 
 30992 ;;  res             1   91[BANK6 ] enum E597
 30993 ;; Return value:  Size  Location     Type
 30994 ;;                  1    wreg      enum E597
 30995 ;; Registers used:
 30996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30997 ;; Tracked objects:
 30998 ;;		On entry : 0/0
 30999 ;;		On exit  : 0/0
 31000 ;;		Unchanged: 0/0
 31001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31002 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31003 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31004 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31005 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31006 ;;Total ram usage:       25 bytes
 31007 ;; Hardware stack levels used: 1
 31008 ;; Hardware stack levels required when called: 15
 31009 ;; This function calls:
 31010 ;;		_get_fat
 31011 ;;		_put_fat
 31012 ;; This function is called by:
 31013 ;;		_f_open
 31014 ;;		_f_truncate
 31015 ;;		_f_unlink
 31016 ;;		_f_mkdir
 31017 ;; This function uses a non-reentrant model
 31018 ;;
 31019                           
 31020                           	psect	text73
 31021   019AA8                     __ptext73:
 31022                           	callstack 0
 31023   019AA8                     _remove_chain:
 31024                           	callstack 104
 31025   019AA8                     
 31026                           ;../fatfs/ff.c: 1437:  DWORD nxt;;../fatfs/ff.c: 1438:  FATFS *fs = obj->fs;
 31027   019AA8  C645  F4D9         	movff	remove_chain@obj,fsr2l
 31028   019AAC  C646  F4DA         	movff	remove_chain@obj+1,fsr2h
 31029   019AB0  C4DE F65C          	movff	postinc2,remove_chain@fs
 31030   019AB4  C4DD F65D          	movff	postdec2,remove_chain@fs+1
 31031   019AB8                     
 31032                           ;../fatfs/ff.c: 1446:  if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 31033   019AB8  0106               	movlb	6	; () banked
 31034   019ABA  514A               	movf	(remove_chain@clst+3)& (0+255),w,b
 31035   019ABC  1149               	iorwf	(remove_chain@clst+2)& (0+255),w,b
 31036   019ABE  1148               	iorwf	(remove_chain@clst+1)& (0+255),w,b
 31037   019AC0  E109               	bnz	u30250
 31038   019AC2  0E02               	movlw	2
 31039   019AC4  5D47               	subwf	remove_chain@clst& (0+255),w,b
 31040   019AC6  A0D8               	btfss	status,0,c
 31041   019AC8  EF68  F0CD         	goto	u30251
 31042   019ACC  EF6A  F0CD         	goto	u30250
 31043   019AD0                     u30251:
 31044   019AD0  EF7F  F0CD         	goto	l22141
 31045   019AD4                     u30250:
 31046   019AD4                     
 31047                           ; BSR set to: 6
 31048   019AD4  EE20 F018          	lfsr	2,24
 31049   019AD8  515C               	movf	remove_chain@fs& (0+255),w,b
 31050   019ADA  26D9               	addwf	fsr2l,f,c
 31051   019ADC  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31052   019ADE  22DA               	addwfc	fsr2h,f,c
 31053   019AE0  50DE               	movf	postinc2,w,c
 31054   019AE2  5D47               	subwf	remove_chain@clst& (0+255),w,b
 31055   019AE4  50DE               	movf	postinc2,w,c
 31056   019AE6  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 31057   019AE8  50DE               	movf	postinc2,w,c
 31058   019AEA  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 31059   019AEC  50DE               	movf	postinc2,w,c
 31060   019AEE  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 31061   019AF0  A0D8               	btfss	status,0,c
 31062   019AF2  EF7D  F0CD         	goto	u30261
 31063   019AF6  EF7F  F0CD         	goto	u30260
 31064   019AFA                     u30261:
 31065   019AFA  EF82  F0CD         	goto	l22145
 31066   019AFE                     u30260:
 31067   019AFE                     l22141:
 31068                           
 31069                           ; BSR set to: 6
 31070   019AFE  0E02               	movlw	2
 31071   019B00  EF6C  F0CE         	goto	l277
 31072   019B04                     l22145:
 31073                           
 31074                           ; BSR set to: 6
 31075                           ;../fatfs/ff.c: 1449:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
 31076   019B04  514B               	movf	remove_chain@pclst& (0+255),w,b
 31077   019B06  114C               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
 31078   019B08  114D               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
 31079   019B0A  114E               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
 31080   019B0C  B4D8               	btfsc	status,2,c
 31081   019B0E  EF8B  F0CD         	goto	u30271
 31082   019B12  EF8D  F0CD         	goto	u30270
 31083   019B16                     u30271:
 31084   019B16  EFB0  F0CD         	goto	l22161
 31085   019B1A                     u30270:
 31086   019B1A                     
 31087                           ; BSR set to: 6
 31088                           ;../fatfs/ff.c: 1450:   res = put_fat(fs, pclst, 0xFFFFFFFF);
 31089   019B1A  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 31090   019B1E  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 31091   019B22  C64B  F626         	movff	remove_chain@pclst,put_fat@clst
 31092   019B26  C64C  F627         	movff	remove_chain@pclst+1,put_fat@clst+1
 31093   019B2A  C64D  F628         	movff	remove_chain@pclst+2,put_fat@clst+2
 31094   019B2E  C64E  F629         	movff	remove_chain@pclst+3,put_fat@clst+3
 31095   019B32  0EFF               	movlw	255
 31096   019B34  6F2A               	movwf	put_fat@val& (0+255),b
 31097   019B36  0EFF               	movlw	255
 31098   019B38  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 31099   019B3A  0EFF               	movlw	255
 31100   019B3C  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 31101   019B3E  0EFF               	movlw	255
 31102   019B40  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 31103   019B42  EC54  F0A0         	call	_put_fat	;wreg free
 31104   019B46  0106               	movlb	6	; () banked
 31105   019B48  6F5B               	movwf	remove_chain@res& (0+255),b
 31106   019B4A                     
 31107                           ; BSR set to: 6
 31108                           ;../fatfs/ff.c: 1451:   if (res != FR_OK) return res;
 31109   019B4A  515B               	movf	remove_chain@res& (0+255),w,b
 31110   019B4C  B4D8               	btfsc	status,2,c
 31111   019B4E  EFAB  F0CD         	goto	u30281
 31112   019B52  EFAD  F0CD         	goto	u30280
 31113   019B56                     u30281:
 31114   019B56  EFB0  F0CD         	goto	l22161
 31115   019B5A                     u30280:
 31116   019B5A                     l22157:
 31117                           
 31118                           ; BSR set to: 6
 31119   019B5A  515B               	movf	remove_chain@res& (0+255),w,b
 31120   019B5C  EF6C  F0CE         	goto	l277
 31121   019B60                     l22161:
 31122                           
 31123                           ; BSR set to: 6
 31124                           ;../fatfs/ff.c: 1456:   nxt = get_fat(obj, clst);
 31125   019B60  C645  F624         	movff	remove_chain@obj,get_fat@obj
 31126   019B64  C646  F625         	movff	remove_chain@obj+1,get_fat@obj+1
 31127   019B68  C647  F626         	movff	remove_chain@clst,get_fat@clst
 31128   019B6C  C648  F627         	movff	remove_chain@clst+1,get_fat@clst+1
 31129   019B70  C649  F628         	movff	remove_chain@clst+2,get_fat@clst+2
 31130   019B74  C64A  F629         	movff	remove_chain@clst+3,get_fat@clst+3
 31131   019B78  ECF7  F0B4         	call	_get_fat	;wreg free
 31132   019B7C  C624  F657         	movff	?_get_fat,remove_chain@nxt
 31133   019B80  C625  F658         	movff	?_get_fat+1,remove_chain@nxt+1
 31134   019B84  C626  F659         	movff	?_get_fat+2,remove_chain@nxt+2
 31135   019B88  C627  F65A         	movff	?_get_fat+3,remove_chain@nxt+3
 31136   019B8C                     
 31137                           ;../fatfs/ff.c: 1457:   if (nxt == 0) break;
 31138   019B8C  0106               	movlb	6	; () banked
 31139   019B8E  5157               	movf	remove_chain@nxt& (0+255),w,b
 31140   019B90  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 31141   019B92  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 31142   019B94  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 31143   019B96  A4D8               	btfss	status,2,c
 31144   019B98  EFD0  F0CD         	goto	u30291
 31145   019B9C  EFD2  F0CD         	goto	u30290
 31146   019BA0                     u30291:
 31147   019BA0  EFD4  F0CD         	goto	l22167
 31148   019BA4                     u30290:
 31149   019BA4  EF6B  F0CE         	goto	l22195
 31150   019BA8                     l22167:
 31151                           
 31152                           ; BSR set to: 6
 31153                           ;../fatfs/ff.c: 1458:   if (nxt == 1) return FR_INT_ERR;
 31154   019BA8  0557               	decf	remove_chain@nxt& (0+255),w,b
 31155   019BAA  1158               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 31156   019BAC  1159               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
 31157   019BAE  115A               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
 31158   019BB0  A4D8               	btfss	status,2,c
 31159   019BB2  EFDD  F0CD         	goto	u30301
 31160   019BB6  EFDF  F0CD         	goto	u30300
 31161   019BBA                     u30301:
 31162   019BBA  EFE1  F0CD         	goto	l22173
 31163   019BBE                     u30300:
 31164   019BBE  EF7F  F0CD         	goto	l22141
 31165   019BC2                     l22173:
 31166                           
 31167                           ; BSR set to: 6
 31168                           ;../fatfs/ff.c: 1459:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
 31169   019BC2  2957               	incf	remove_chain@nxt& (0+255),w,b
 31170   019BC4  E10A               	bnz	u30311
 31171   019BC6  2958               	incf	(remove_chain@nxt+1)& (0+255),w,b
 31172   019BC8  E108               	bnz	u30311
 31173   019BCA  2959               	incf	(remove_chain@nxt+2)& (0+255),w,b
 31174   019BCC  E106               	bnz	u30311
 31175   019BCE  295A               	incf	(remove_chain@nxt+3)& (0+255),w,b
 31176   019BD0  A4D8               	btfss	status,2,c
 31177   019BD2  EFED  F0CD         	goto	u30311
 31178   019BD6  EFEF  F0CD         	goto	u30310
 31179   019BDA                     u30311:
 31180   019BDA  EFF2  F0CD         	goto	l22181
 31181   019BDE                     u30310:
 31182   019BDE                     
 31183                           ; BSR set to: 6
 31184   019BDE  0E01               	movlw	1
 31185   019BE0  EF6C  F0CE         	goto	l277
 31186   019BE4                     l22181:
 31187                           
 31188                           ; BSR set to: 6
 31189                           ;../fatfs/ff.c: 1461:    res = put_fat(fs, clst, 0);
 31190   019BE4  C65C  F624         	movff	remove_chain@fs,put_fat@fs
 31191   019BE8  C65D  F625         	movff	remove_chain@fs+1,put_fat@fs+1
 31192   019BEC  C647  F626         	movff	remove_chain@clst,put_fat@clst
 31193   019BF0  C648  F627         	movff	remove_chain@clst+1,put_fat@clst+1
 31194   019BF4  C649  F628         	movff	remove_chain@clst+2,put_fat@clst+2
 31195   019BF8  C64A  F629         	movff	remove_chain@clst+3,put_fat@clst+3
 31196   019BFC  0E00               	movlw	0
 31197   019BFE  6F2A               	movwf	put_fat@val& (0+255),b
 31198   019C00  0E00               	movlw	0
 31199   019C02  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 31200   019C04  0E00               	movlw	0
 31201   019C06  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 31202   019C08  0E00               	movlw	0
 31203   019C0A  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 31204   019C0C  EC54  F0A0         	call	_put_fat	;wreg free
 31205   019C10  0106               	movlb	6	; () banked
 31206   019C12  6F5B               	movwf	remove_chain@res& (0+255),b
 31207   019C14                     
 31208                           ; BSR set to: 6
 31209                           ;../fatfs/ff.c: 1462:    if (res != FR_OK) return res;
 31210   019C14  515B               	movf	remove_chain@res& (0+255),w,b
 31211   019C16  B4D8               	btfsc	status,2,c
 31212   019C18  EF10  F0CE         	goto	u30321
 31213   019C1C  EF12  F0CE         	goto	u30320
 31214   019C20                     u30321:
 31215   019C20  EF14  F0CE         	goto	l22189
 31216   019C24                     u30320:
 31217   019C24  EFAD  F0CD         	goto	l22157
 31218   019C28                     l22189:
 31219                           
 31220                           ; BSR set to: 6
 31221                           ;../fatfs/ff.c: 1464:   if (fs->free_clst < fs->n_fatent - 2) {
 31222   019C28  EE20 F018          	lfsr	2,24
 31223   019C2C  515C               	movf	remove_chain@fs& (0+255),w,b
 31224   019C2E  26D9               	addwf	fsr2l,f,c
 31225   019C30  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31226   019C32  22DA               	addwfc	fsr2h,f,c
 31227   019C34  0EFE               	movlw	254
 31228   019C36  24DE               	addwf	postinc2,w,c
 31229   019C38  6F4F               	movwf	??_remove_chain& (0+255),b
 31230   019C3A  0EFF               	movlw	255
 31231   019C3C  20DE               	addwfc	postinc2,w,c
 31232   019C3E  6F50               	movwf	(??_remove_chain+1)& (0+255),b
 31233   019C40  0EFF               	movlw	255
 31234   019C42  20DE               	addwfc	postinc2,w,c
 31235   019C44  6F51               	movwf	(??_remove_chain+2)& (0+255),b
 31236   019C46  0EFF               	movlw	255
 31237   019C48  20DE               	addwfc	postinc2,w,c
 31238   019C4A  6F52               	movwf	(??_remove_chain+3)& (0+255),b
 31239   019C4C  EE20 F010          	lfsr	2,16
 31240   019C50  515C               	movf	remove_chain@fs& (0+255),w,b
 31241   019C52  26D9               	addwf	fsr2l,f,c
 31242   019C54  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31243   019C56  22DA               	addwfc	fsr2h,f,c
 31244   019C58  514F               	movf	??_remove_chain& (0+255),w,b
 31245   019C5A  5CDE               	subwf	postinc2,w,c
 31246   019C5C  5150               	movf	(??_remove_chain+1)& (0+255),w,b
 31247   019C5E  58DE               	subwfb	postinc2,w,c
 31248   019C60  5151               	movf	(??_remove_chain+2)& (0+255),w,b
 31249   019C62  58DE               	subwfb	postinc2,w,c
 31250   019C64  5152               	movf	(??_remove_chain+3)& (0+255),w,b
 31251   019C66  58DE               	subwfb	postinc2,w,c
 31252   019C68  B0D8               	btfsc	status,0,c
 31253   019C6A  EF39  F0CE         	goto	u30331
 31254   019C6E  EF3B  F0CE         	goto	u30330
 31255   019C72                     u30331:
 31256   019C72  EF4E  F0CE         	goto	l22193
 31257   019C76                     u30330:
 31258   019C76                     
 31259                           ; BSR set to: 6
 31260                           ;../fatfs/ff.c: 1465:    fs->free_clst++;
 31261   019C76  EE20 F010          	lfsr	2,16
 31262   019C7A  515C               	movf	remove_chain@fs& (0+255),w,b
 31263   019C7C  26D9               	addwf	fsr2l,f,c
 31264   019C7E  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31265   019C80  22DA               	addwfc	fsr2h,f,c
 31266   019C82  2ADE               	incf	postinc2,f,c
 31267   019C84  0E00               	movlw	0
 31268   019C86  22DE               	addwfc	postinc2,f,c
 31269   019C88  22DE               	addwfc	postinc2,f,c
 31270   019C8A  22DE               	addwfc	postinc2,f,c
 31271                           
 31272                           ;../fatfs/ff.c: 1466:    fs->fsi_flag |= 1;
 31273   019C8C  EE20 F005          	lfsr	2,5
 31274   019C90  515C               	movf	remove_chain@fs& (0+255),w,b
 31275   019C92  26D9               	addwf	fsr2l,f,c
 31276   019C94  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31277   019C96  22DA               	addwfc	fsr2h,f,c
 31278   019C98  0E00               	movlw	0
 31279   019C9A  80DB               	bsf	plusw2,0,c
 31280   019C9C                     l22193:
 31281                           
 31282                           ; BSR set to: 6
 31283                           ;../fatfs/ff.c: 1486:   clst = nxt;
 31284   019C9C  C657  F647         	movff	remove_chain@nxt,remove_chain@clst
 31285   019CA0  C658  F648         	movff	remove_chain@nxt+1,remove_chain@clst+1
 31286   019CA4  C659  F649         	movff	remove_chain@nxt+2,remove_chain@clst+2
 31287   019CA8  C65A  F64A         	movff	remove_chain@nxt+3,remove_chain@clst+3
 31288                           
 31289                           ;../fatfs/ff.c: 1487:  } while (clst < fs->n_fatent);
 31290   019CAC  EE20 F018          	lfsr	2,24
 31291   019CB0  515C               	movf	remove_chain@fs& (0+255),w,b
 31292   019CB2  26D9               	addwf	fsr2l,f,c
 31293   019CB4  515D               	movf	(remove_chain@fs+1)& (0+255),w,b
 31294   019CB6  22DA               	addwfc	fsr2h,f,c
 31295   019CB8  50DE               	movf	postinc2,w,c
 31296   019CBA  5D47               	subwf	remove_chain@clst& (0+255),w,b
 31297   019CBC  50DE               	movf	postinc2,w,c
 31298   019CBE  5948               	subwfb	(remove_chain@clst+1)& (0+255),w,b
 31299   019CC0  50DE               	movf	postinc2,w,c
 31300   019CC2  5949               	subwfb	(remove_chain@clst+2)& (0+255),w,b
 31301   019CC4  50DE               	movf	postinc2,w,c
 31302   019CC6  594A               	subwfb	(remove_chain@clst+3)& (0+255),w,b
 31303   019CC8  A0D8               	btfss	status,0,c
 31304   019CCA  EF69  F0CE         	goto	u30341
 31305   019CCE  EF6B  F0CE         	goto	u30340
 31306   019CD2                     u30341:
 31307   019CD2  EFB0  F0CD         	goto	l22161
 31308   019CD6                     u30340:
 31309   019CD6                     l22195:
 31310                           
 31311                           ; BSR set to: 6
 31312                           ;../fatfs/ff.c: 1515:  return FR_OK;
 31313   019CD6  0E00               	movlw	0
 31314   019CD8                     l277:
 31315                           
 31316                           ; BSR set to: 6
 31317   019CD8  0012               	return		;funcret
 31318   019CDA                     __end_of_remove_chain:
 31319                           	callstack 0
 31320                           
 31321 ;; *************** function _mount_volume *****************
 31322 ;; Defined at:
 31323 ;;		line 3386 in file "../fatfs/ff.c"
 31324 ;; Parameters:    Size  Location     Type
 31325 ;;  path            2  129[BANK6 ] PTR PTR const unsigned c
 31326 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 31327 ;;		 -> f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), f_chdir@path(2), 
 31328 ;;		 -> f_open@path(2), f_mount@path(2), 
 31329 ;;  rfs             2  131[BANK6 ] PTR PTR struct .
 31330 ;;		 -> dj$obj(15), f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), 
 31331 ;;		 -> f_getfree@fs(2), f_opendir@fs(2), f_getcwd@fs(2), f_chdir@fs(2), 
 31332 ;;		 -> f_open@dj(40), f_open@fs(2), dj$obj$fs(2), f_mount@fs(2), 
 31333 ;;  mode            1  133[BANK6 ] unsigned char 
 31334 ;; Auto vars:     Size  Location     Type
 31335 ;;  fasize          4  167[BANK6 ] unsigned long 
 31336 ;;  nclst           4  163[BANK6 ] unsigned long 
 31337 ;;  bsect           4  158[BANK6 ] unsigned long 
 31338 ;;  tsect           4  154[BANK6 ] unsigned long 
 31339 ;;  sysect          4  148[BANK6 ] unsigned long 
 31340 ;;  szbfat          4  142[BANK6 ] unsigned long 
 31341 ;;  fs              2  173[BANK6 ] PTR struct .
 31342 ;;		 -> fs(564), NULL(0), 
 31343 ;;  fmt             2  171[BANK6 ] unsigned int 
 31344 ;;  nrsv            2  152[BANK6 ] unsigned short 
 31345 ;;  vol             2  146[BANK6 ] int 
 31346 ;;  stat            1  162[BANK6 ] unsigned char 
 31347 ;; Return value:  Size  Location     Type
 31348 ;;                  1    wreg      enum E597
 31349 ;; Registers used:
 31350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31351 ;; Tracked objects:
 31352 ;;		On entry : 0/0
 31353 ;;		On exit  : 0/0
 31354 ;;		Unchanged: 0/0
 31355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31356 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31357 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31358 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31359 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31360 ;;Total ram usage:       46 bytes
 31361 ;; Hardware stack levels used: 1
 31362 ;; Hardware stack levels required when called: 16
 31363 ;; This function calls:
 31364 ;;		___lldiv
 31365 ;;		___lmul
 31366 ;;		_disk_initialize
 31367 ;;		_disk_status
 31368 ;;		_find_volume
 31369 ;;		_get_ldnumber
 31370 ;;		_ld_dword
 31371 ;;		_ld_word
 31372 ;;		_move_window
 31373 ;; This function is called by:
 31374 ;;		_f_mount
 31375 ;;		_f_open
 31376 ;;		_f_chdir
 31377 ;;		_f_getcwd
 31378 ;;		_f_opendir
 31379 ;;		_f_stat
 31380 ;;		_f_getfree
 31381 ;;		_f_unlink
 31382 ;;		_f_mkdir
 31383 ;;		_f_rename
 31384 ;; This function uses a non-reentrant model
 31385 ;;
 31386                           
 31387                           	psect	text74
 31388   010000                     __ptext74:
 31389                           	callstack 0
 31390   010000                     _mount_volume:
 31391                           	callstack 103
 31392   010000                     
 31393                           ;../fatfs/ff.c: 3387:  const TCHAR** path,;../fatfs/ff.c: 3388:  FATFS** rfs,;../fatfs/f
      +                          f.c: 3389:  BYTE mode;../fatfs/ff.c: 3391: {;../fatfs/ff.c: 3392:  int vol;;../fatfs/ff.
      +                          c: 3393:  FATFS *fs;;../fatfs/ff.c: 3394:  DSTATUS stat;;../fatfs/ff.c: 3395:  LBA_t bse
      +                          ct;;../fatfs/ff.c: 3396:  DWORD tsect, sysect, fasize, nclst, szbfat;;../fatfs/ff.c: 339
      +                          7:  WORD nrsv;;../fatfs/ff.c: 3398:  UINT fmt;;../fatfs/ff.c: 3402:  *rfs = 0;
 31394   010000  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 31395   010004  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 31396   010008  6ADE               	clrf	postinc2,c
 31397   01000A  6ADD               	clrf	postdec2,c
 31398   01000C                     
 31399                           ;../fatfs/ff.c: 3403:  vol = get_ldnumber(path);
 31400   01000C  C681  F504         	movff	mount_volume@path,get_ldnumber@path
 31401   010010  C682  F505         	movff	mount_volume@path+1,get_ldnumber@path+1
 31402   010014  EC82  F0D9         	call	_get_ldnumber	;wreg free
 31403   010018  C504  F692         	movff	?_get_ldnumber,mount_volume@vol
 31404   01001C  C505  F693         	movff	?_get_ldnumber+1,mount_volume@vol+1
 31405   010020                     
 31406                           ;../fatfs/ff.c: 3404:  if (vol < 0) return FR_INVALID_DRIVE;
 31407   010020  0106               	movlb	6	; () banked
 31408   010022  BF93               	btfsc	(mount_volume@vol+1)& (0+255),7,b
 31409   010024  EF18  F080         	goto	u30550
 31410   010028  EF16  F080         	goto	u30551
 31411   01002C                     u30551:
 31412   01002C  EF1B  F080         	goto	l22295
 31413   010030                     u30550:
 31414   010030                     
 31415                           ; BSR set to: 6
 31416   010030  0E0B               	movlw	11
 31417   010032  EF6B  F085         	goto	l573
 31418   010036                     l22295:
 31419                           
 31420                           ; BSR set to: 6
 31421                           ;../fatfs/ff.c: 3407:  fs = FatFs[vol];
 31422   010036  90D8               	bcf	status,0,c
 31423   010038  3592               	rlcf	mount_volume@vol& (0+255),w,b
 31424   01003A  6ED9               	movwf	fsr2l,c
 31425   01003C  3593               	rlcf	(mount_volume@vol+1)& (0+255),w,b
 31426   01003E  6EDA               	movwf	fsr2h,c
 31427   010040  0EC5               	movlw	low _FatFs
 31428   010042  26D9               	addwf	fsr2l,f,c
 31429   010044  0E07               	movlw	high _FatFs
 31430   010046  22DA               	addwfc	fsr2h,f,c
 31431   010048  C4DE F6AD          	movff	postinc2,mount_volume@fs
 31432   01004C  C4DD F6AE          	movff	postdec2,mount_volume@fs+1
 31433   010050                     
 31434                           ; BSR set to: 6
 31435                           ;../fatfs/ff.c: 3408:  if (!fs) return FR_NOT_ENABLED;
 31436   010050  51AD               	movf	mount_volume@fs& (0+255),w,b
 31437   010052  11AE               	iorwf	(mount_volume@fs+1)& (0+255),w,b
 31438   010054  A4D8               	btfss	status,2,c
 31439   010056  EF2F  F080         	goto	u30561
 31440   01005A  EF31  F080         	goto	u30560
 31441   01005E                     u30561:
 31442   01005E  EF34  F080         	goto	l22303
 31443   010062                     u30560:
 31444   010062                     
 31445                           ; BSR set to: 6
 31446   010062  0E0C               	movlw	12
 31447   010064  EF6B  F085         	goto	l573
 31448   010068                     l22303:
 31449                           
 31450                           ; BSR set to: 6
 31451                           ;../fatfs/ff.c: 3412:  *rfs = fs;
 31452   010068  C683  F4D9         	movff	mount_volume@rfs,fsr2l
 31453   01006C  C684  F4DA         	movff	mount_volume@rfs+1,fsr2h
 31454   010070  C6AD  F4DE         	movff	mount_volume@fs,postinc2
 31455   010074  C6AE  F4DD         	movff	mount_volume@fs+1,postdec2
 31456   010078                     
 31457                           ; BSR set to: 6
 31458                           ;../fatfs/ff.c: 3414:  mode &= (BYTE)~0x01;
 31459   010078  9185               	bcf	mount_volume@mode& (0+255),0,b
 31460   01007A                     
 31461                           ; BSR set to: 6
 31462                           ;../fatfs/ff.c: 3415:  if (fs->fs_type != 0) {
 31463   01007A  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 31464   01007E  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 31465   010082  50DF               	movf	indf2,w,c
 31466   010084  B4D8               	btfsc	status,2,c
 31467   010086  EF47  F080         	goto	u30571
 31468   01008A  EF49  F080         	goto	u30570
 31469   01008E                     u30571:
 31470   01008E  EF70  F080         	goto	l22325
 31471   010092                     u30570:
 31472   010092                     
 31473                           ; BSR set to: 6
 31474                           ;../fatfs/ff.c: 3416:   stat = disk_status(fs->pdrv);
 31475   010092  EE20 F001          	lfsr	2,1
 31476   010096  51AD               	movf	mount_volume@fs& (0+255),w,b
 31477   010098  26D9               	addwf	fsr2l,f,c
 31478   01009A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31479   01009C  22DA               	addwfc	fsr2h,f,c
 31480   01009E  50DF               	movf	indf2,w,c
 31481   0100A0  EC42  F0FE         	call	_disk_status
 31482   0100A4  0106               	movlb	6	; () banked
 31483   0100A6  6FA2               	movwf	mount_volume@stat& (0+255),b
 31484   0100A8                     
 31485                           ; BSR set to: 6
 31486                           ;../fatfs/ff.c: 3418:    if (!0 && mode && (stat & 0x04)) {
 31487   0100A8  B1A2               	btfsc	mount_volume@stat& (0+255),0,b
 31488   0100AA  EF59  F080         	goto	u30581
 31489   0100AE  EF5B  F080         	goto	u30580
 31490   0100B2                     u30581:
 31491   0100B2  EF70  F080         	goto	l22325
 31492   0100B6                     u30580:
 31493   0100B6                     
 31494                           ; BSR set to: 6
 31495   0100B6  5185               	movf	mount_volume@mode& (0+255),w,b
 31496   0100B8  B4D8               	btfsc	status,2,c
 31497   0100BA  EF61  F080         	goto	u30591
 31498   0100BE  EF63  F080         	goto	u30590
 31499   0100C2                     u30591:
 31500   0100C2  EF6D  F080         	goto	l22321
 31501   0100C6                     u30590:
 31502   0100C6                     
 31503                           ; BSR set to: 6
 31504   0100C6  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 31505   0100C8  EF68  F080         	goto	u30601
 31506   0100CC  EF6A  F080         	goto	u30600
 31507   0100D0                     u30601:
 31508   0100D0  EF6D  F080         	goto	l22321
 31509   0100D4                     u30600:
 31510   0100D4                     l22317:
 31511                           
 31512                           ; BSR set to: 6
 31513                           ;../fatfs/ff.c: 3419:     return FR_WRITE_PROTECTED;
 31514   0100D4  0E0A               	movlw	10
 31515   0100D6  EF6B  F085         	goto	l573
 31516   0100DA                     l22321:
 31517                           
 31518                           ; BSR set to: 6
 31519                           ;../fatfs/ff.c: 3421:    return FR_OK;
 31520   0100DA  0E00               	movlw	0
 31521   0100DC  EF6B  F085         	goto	l573
 31522   0100E0                     l22325:
 31523                           
 31524                           ; BSR set to: 6
 31525                           ;../fatfs/ff.c: 3428:  fs->fs_type = 0;
 31526   0100E0  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 31527   0100E4  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 31528   0100E8  6ADF               	clrf	indf2,c
 31529   0100EA                     
 31530                           ; BSR set to: 6
 31531                           ;../fatfs/ff.c: 3429:  stat = disk_initialize(fs->pdrv);
 31532   0100EA  EE20 F001          	lfsr	2,1
 31533   0100EE  51AD               	movf	mount_volume@fs& (0+255),w,b
 31534   0100F0  26D9               	addwf	fsr2l,f,c
 31535   0100F2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31536   0100F4  22DA               	addwfc	fsr2h,f,c
 31537   0100F6  50DF               	movf	indf2,w,c
 31538   0100F8  EC54  F0DA         	call	_disk_initialize
 31539   0100FC  0106               	movlb	6	; () banked
 31540   0100FE  6FA2               	movwf	mount_volume@stat& (0+255),b
 31541   010100                     
 31542                           ; BSR set to: 6
 31543                           ;../fatfs/ff.c: 3430:  if (stat & 0x01) {
 31544   010100  A1A2               	btfss	mount_volume@stat& (0+255),0,b
 31545   010102  EF85  F080         	goto	u30611
 31546   010106  EF87  F080         	goto	u30610
 31547   01010A                     u30611:
 31548   01010A  EF8A  F080         	goto	l22335
 31549   01010E                     u30610:
 31550   01010E                     
 31551                           ; BSR set to: 6
 31552                           ;../fatfs/ff.c: 3431:   return FR_NOT_READY;
 31553   01010E  0E03               	movlw	3
 31554   010110  EF6B  F085         	goto	l573
 31555   010114                     l22335:
 31556                           
 31557                           ; BSR set to: 6
 31558   010114  5185               	movf	mount_volume@mode& (0+255),w,b
 31559   010116  B4D8               	btfsc	status,2,c
 31560   010118  EF90  F080         	goto	u30621
 31561   01011C  EF92  F080         	goto	u30620
 31562   010120                     u30621:
 31563   010120  EF9B  F080         	goto	l22343
 31564   010124                     u30620:
 31565   010124                     
 31566                           ; BSR set to: 6
 31567   010124  A5A2               	btfss	mount_volume@stat& (0+255),2,b
 31568   010126  EF97  F080         	goto	u30631
 31569   01012A  EF99  F080         	goto	u30630
 31570   01012E                     u30631:
 31571   01012E  EF9B  F080         	goto	l22343
 31572   010132                     u30630:
 31573   010132  EF6A  F080         	goto	l22317
 31574   010136                     l22343:
 31575                           
 31576                           ; BSR set to: 6
 31577                           ;../fatfs/ff.c: 3442:  fmt = find_volume(fs, 0);
 31578   010136  C6AD  F632         	movff	mount_volume@fs,find_volume@fs
 31579   01013A  C6AE  F633         	movff	mount_volume@fs+1,find_volume@fs+1
 31580   01013E  0E00               	movlw	0
 31581   010140  6F35               	movwf	(find_volume@part+1)& (0+255),b
 31582   010142  0E00               	movlw	0
 31583   010144  6F34               	movwf	find_volume@part& (0+255),b
 31584   010146  EC87  F0D2         	call	_find_volume	;wreg free
 31585   01014A  C632  F6AB         	movff	?_find_volume,mount_volume@fmt
 31586   01014E  C633  F6AC         	movff	?_find_volume+1,mount_volume@fmt+1
 31587   010152                     
 31588                           ;../fatfs/ff.c: 3444:  if (fmt == 4) return FR_DISK_ERR;
 31589   010152  0E04               	movlw	4
 31590   010154  0106               	movlb	6	; () banked
 31591   010156  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 31592   010158  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 31593   01015A  A4D8               	btfss	status,2,c
 31594   01015C  EFB2  F080         	goto	u30641
 31595   010160  EFB4  F080         	goto	u30640
 31596   010164                     u30641:
 31597   010164  EFB7  F080         	goto	l22351
 31598   010168                     u30640:
 31599   010168                     
 31600                           ; BSR set to: 6
 31601   010168  0E01               	movlw	1
 31602   01016A  EF6B  F085         	goto	l573
 31603   01016E                     l22351:
 31604                           
 31605                           ; BSR set to: 6
 31606                           ;../fatfs/ff.c: 3445:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 31607   01016E  51AC               	movf	(mount_volume@fmt+1)& (0+255),w,b
 31608   010170  E109               	bnz	u30650
 31609   010172  0E02               	movlw	2
 31610   010174  5DAB               	subwf	mount_volume@fmt& (0+255),w,b
 31611   010176  A0D8               	btfss	status,0,c
 31612   010178  EFC0  F080         	goto	u30651
 31613   01017C  EFC2  F080         	goto	u30650
 31614   010180                     u30651:
 31615   010180  EFC5  F080         	goto	l22357
 31616   010184                     u30650:
 31617   010184                     l22353:
 31618   010184  0E0D               	movlw	13
 31619   010186  EF6B  F085         	goto	l573
 31620   01018A                     l22357:
 31621                           
 31622                           ; BSR set to: 6
 31623                           ;../fatfs/ff.c: 3446:  bsect = fs->winsect;
 31624   01018A  EE20 F030          	lfsr	2,48
 31625   01018E  51AD               	movf	mount_volume@fs& (0+255),w,b
 31626   010190  26D9               	addwf	fsr2l,f,c
 31627   010192  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31628   010194  22DA               	addwfc	fsr2h,f,c
 31629   010196  C4DE F69E          	movff	postinc2,mount_volume@bsect
 31630   01019A  C4DE F69F          	movff	postinc2,mount_volume@bsect+1
 31631   01019E  C4DE F6A0          	movff	postinc2,mount_volume@bsect+2
 31632   0101A2  C4DE F6A1          	movff	postinc2,mount_volume@bsect+3
 31633   0101A6                     
 31634                           ; BSR set to: 6
 31635                           ;../fatfs/ff.c: 3513:  {;../fatfs/ff.c: 3514:   if (ld_word(fs->win + 11) != ((UINT)512)
      +                          ) return FR_NO_FILESYSTEM;
 31636   0101A6  0E3F               	movlw	63
 31637   0101A8  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31638   0101AA  6E04               	movwf	ld_word@ptr^(0+1280),c
 31639   0101AC  0E00               	movlw	0
 31640   0101AE  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31641   0101B0  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31642   0101B2  EC4C  F0FF         	call	_ld_word	;wreg free
 31643   0101B6  0E02               	movlw	2
 31644   0101B8  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 31645   0101BA  1004               	iorwf	?_ld_word^(0+1280),w,c
 31646   0101BC  B4D8               	btfsc	status,2,c
 31647   0101BE  EFE3  F080         	goto	u30661
 31648   0101C2  EFE5  F080         	goto	u30660
 31649   0101C6                     u30661:
 31650   0101C6  EFE7  F080         	goto	l22365
 31651   0101CA                     u30660:
 31652   0101CA  EFC2  F080         	goto	l22353
 31653   0101CE                     l22365:
 31654                           
 31655                           ;../fatfs/ff.c: 3516:   fasize = ld_word(fs->win + 22);
 31656   0101CE  0E4A               	movlw	74
 31657   0101D0  0106               	movlb	6	; () banked
 31658   0101D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31659   0101D4  6E04               	movwf	ld_word@ptr^(0+1280),c
 31660   0101D6  0E00               	movlw	0
 31661   0101D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31662   0101DA  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31663   0101DC  EC4C  F0FF         	call	_ld_word	;wreg free
 31664   0101E0  C504  F6A7         	movff	?_ld_word,mount_volume@fasize
 31665   0101E4  C505  F6A8         	movff	?_ld_word+1,mount_volume@fasize+1
 31666   0101E8  0106               	movlb	6	; () banked
 31667   0101EA  6BA9               	clrf	(mount_volume@fasize+2)& (0+255),b
 31668   0101EC  6BAA               	clrf	(mount_volume@fasize+3)& (0+255),b
 31669   0101EE                     
 31670                           ; BSR set to: 6
 31671                           ;../fatfs/ff.c: 3517:   if (fasize == 0) fasize = ld_dword(fs->win + 36);
 31672   0101EE  51A7               	movf	mount_volume@fasize& (0+255),w,b
 31673   0101F0  11A8               	iorwf	(mount_volume@fasize+1)& (0+255),w,b
 31674   0101F2  11A9               	iorwf	(mount_volume@fasize+2)& (0+255),w,b
 31675   0101F4  11AA               	iorwf	(mount_volume@fasize+3)& (0+255),w,b
 31676   0101F6  A4D8               	btfss	status,2,c
 31677   0101F8  EF00  F081         	goto	u30671
 31678   0101FC  EF02  F081         	goto	u30670
 31679   010200                     u30671:
 31680   010200  EF12  F081         	goto	l22371
 31681   010204                     u30670:
 31682   010204                     
 31683                           ; BSR set to: 6
 31684   010204  0E58               	movlw	88
 31685   010206  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31686   010208  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31687   01020A  0E00               	movlw	0
 31688   01020C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31689   01020E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31690   010210  ECC7  F0F2         	call	_ld_dword	;wreg free
 31691   010214  C504  F6A7         	movff	?_ld_dword,mount_volume@fasize
 31692   010218  C505  F6A8         	movff	?_ld_dword+1,mount_volume@fasize+1
 31693   01021C  C506  F6A9         	movff	?_ld_dword+2,mount_volume@fasize+2
 31694   010220  C507  F6AA         	movff	?_ld_dword+3,mount_volume@fasize+3
 31695   010224                     l22371:
 31696                           
 31697                           ;../fatfs/ff.c: 3518:   fs->fsize = fasize;
 31698   010224  0106               	movlb	6	; () banked
 31699   010226  EE20 F01C          	lfsr	2,28
 31700   01022A  51AD               	movf	mount_volume@fs& (0+255),w,b
 31701   01022C  26D9               	addwf	fsr2l,f,c
 31702   01022E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31703   010230  22DA               	addwfc	fsr2h,f,c
 31704   010232  C6A7  F4DE         	movff	mount_volume@fasize,postinc2
 31705   010236  C6A8  F4DE         	movff	mount_volume@fasize+1,postinc2
 31706   01023A  C6A9  F4DE         	movff	mount_volume@fasize+2,postinc2
 31707   01023E  C6AA  F4DE         	movff	mount_volume@fasize+3,postinc2
 31708   010242                     
 31709                           ; BSR set to: 6
 31710                           ;../fatfs/ff.c: 3520:   fs->n_fats = fs->win[16];
 31711   010242  EE20 F044          	lfsr	2,68
 31712   010246  51AD               	movf	mount_volume@fs& (0+255),w,b
 31713   010248  26D9               	addwf	fsr2l,f,c
 31714   01024A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31715   01024C  22DA               	addwfc	fsr2h,f,c
 31716   01024E  EE10 F003          	lfsr	1,3
 31717   010252  51AD               	movf	mount_volume@fs& (0+255),w,b
 31718   010254  26E1               	addwf	fsr1l,f,c
 31719   010256  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31720   010258  22E2               	addwfc	fsr1h,f,c
 31721   01025A  C4DF F4E7          	movff	indf2,indf1
 31722   01025E                     
 31723                           ; BSR set to: 6
 31724                           ;../fatfs/ff.c: 3521:   if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
 31725   01025E  EE20 F003          	lfsr	2,3
 31726   010262  51AD               	movf	mount_volume@fs& (0+255),w,b
 31727   010264  26D9               	addwf	fsr2l,f,c
 31728   010266  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31729   010268  22DA               	addwfc	fsr2h,f,c
 31730   01026A  04DE               	decf	postinc2,w,c
 31731   01026C  B4D8               	btfsc	status,2,c
 31732   01026E  EF3B  F081         	goto	u30681
 31733   010272  EF3D  F081         	goto	u30680
 31734   010276                     u30681:
 31735   010276  EF4E  F081         	goto	l22383
 31736   01027A                     u30680:
 31737   01027A                     
 31738                           ; BSR set to: 6
 31739   01027A  EE20 F003          	lfsr	2,3
 31740   01027E  51AD               	movf	mount_volume@fs& (0+255),w,b
 31741   010280  26D9               	addwf	fsr2l,f,c
 31742   010282  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31743   010284  22DA               	addwfc	fsr2h,f,c
 31744   010286  0E02               	movlw	2
 31745   010288  18DE               	xorwf	postinc2,w,c
 31746   01028A  B4D8               	btfsc	status,2,c
 31747   01028C  EF4A  F081         	goto	u30691
 31748   010290  EF4C  F081         	goto	u30690
 31749   010294                     u30691:
 31750   010294  EF4E  F081         	goto	l22383
 31751   010298                     u30690:
 31752   010298  EFC2  F080         	goto	l22353
 31753   01029C                     l22383:
 31754                           
 31755                           ; BSR set to: 6
 31756                           ;../fatfs/ff.c: 3522:   fasize *= fs->n_fats;
 31757   01029C  C6A7  F504         	movff	mount_volume@fasize,___lmul@multiplier
 31758   0102A0  C6A8  F505         	movff	mount_volume@fasize+1,___lmul@multiplier+1
 31759   0102A4  C6A9  F506         	movff	mount_volume@fasize+2,___lmul@multiplier+2
 31760   0102A8  C6AA  F507         	movff	mount_volume@fasize+3,___lmul@multiplier+3
 31761   0102AC  EE20 F003          	lfsr	2,3
 31762   0102B0  51AD               	movf	mount_volume@fs& (0+255),w,b
 31763   0102B2  26D9               	addwf	fsr2l,f,c
 31764   0102B4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31765   0102B6  22DA               	addwfc	fsr2h,f,c
 31766   0102B8  50DF               	movf	indf2,w,c
 31767   0102BA  6F86               	movwf	??_mount_volume& (0+255),b
 31768   0102BC  5186               	movf	??_mount_volume& (0+255),w,b
 31769   0102BE  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 31770   0102C0  6A09               	clrf	(___lmul@multiplicand+1)^(0+1280),c
 31771   0102C2  6A0A               	clrf	(___lmul@multiplicand+2)^(0+1280),c
 31772   0102C4  6A0B               	clrf	(___lmul@multiplicand+3)^(0+1280),c
 31773   0102C6  EC13  F0FB         	call	___lmul	;wreg free
 31774   0102CA  C504  F6A7         	movff	?___lmul,mount_volume@fasize
 31775   0102CE  C505  F6A8         	movff	?___lmul+1,mount_volume@fasize+1
 31776   0102D2  C506  F6A9         	movff	?___lmul+2,mount_volume@fasize+2
 31777   0102D6  C507  F6AA         	movff	?___lmul+3,mount_volume@fasize+3
 31778   0102DA                     
 31779                           ;../fatfs/ff.c: 3524:   fs->csize = fs->win[13];
 31780   0102DA  0106               	movlb	6	; () banked
 31781   0102DC  EE20 F041          	lfsr	2,65
 31782   0102E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 31783   0102E2  26D9               	addwf	fsr2l,f,c
 31784   0102E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31785   0102E6  22DA               	addwfc	fsr2h,f,c
 31786   0102E8  50DF               	movf	indf2,w,c
 31787   0102EA  6F86               	movwf	??_mount_volume& (0+255),b
 31788   0102EC  6B87               	clrf	(??_mount_volume+1)& (0+255),b
 31789   0102EE  EE20 F00A          	lfsr	2,10
 31790   0102F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 31791   0102F4  26D9               	addwf	fsr2l,f,c
 31792   0102F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31793   0102F8  22DA               	addwfc	fsr2h,f,c
 31794   0102FA  C686  F4DE         	movff	??_mount_volume,postinc2
 31795   0102FE  C687  F4DD         	movff	??_mount_volume+1,postdec2
 31796   010302                     
 31797                           ; BSR set to: 6
 31798                           ;../fatfs/ff.c: 3525:   if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_N
      +                          O_FILESYSTEM;
 31799   010302  EE20 F00A          	lfsr	2,10
 31800   010306  51AD               	movf	mount_volume@fs& (0+255),w,b
 31801   010308  26D9               	addwf	fsr2l,f,c
 31802   01030A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31803   01030C  22DA               	addwfc	fsr2h,f,c
 31804   01030E  50DE               	movf	postinc2,w,c
 31805   010310  10DE               	iorwf	postinc2,w,c
 31806   010312  B4D8               	btfsc	status,2,c
 31807   010314  EF8E  F081         	goto	u30701
 31808   010318  EF90  F081         	goto	u30700
 31809   01031C                     u30701:
 31810   01031C  EFC2  F080         	goto	l22353
 31811   010320                     u30700:
 31812   010320                     
 31813                           ; BSR set to: 6
 31814   010320  EE20 F00A          	lfsr	2,10
 31815   010324  51AD               	movf	mount_volume@fs& (0+255),w,b
 31816   010326  26D9               	addwf	fsr2l,f,c
 31817   010328  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31818   01032A  22DA               	addwfc	fsr2h,f,c
 31819   01032C  C4DE F686          	movff	postinc2,??_mount_volume
 31820   010330  C4DD F687          	movff	postdec2,??_mount_volume+1
 31821   010334  EE20 F00A          	lfsr	2,10
 31822   010338  51AD               	movf	mount_volume@fs& (0+255),w,b
 31823   01033A  26D9               	addwf	fsr2l,f,c
 31824   01033C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31825   01033E  22DA               	addwfc	fsr2h,f,c
 31826   010340  C4DE F688          	movff	postinc2,??_mount_volume+2
 31827   010344  C4DD F689          	movff	postdec2,??_mount_volume+3
 31828   010348  0EFF               	movlw	255
 31829   01034A  2588               	addwf	(??_mount_volume+2)& (0+255),w,b
 31830   01034C  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 31831   01034E  0EFF               	movlw	255
 31832   010350  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 31833   010352  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 31834   010354  5186               	movf	??_mount_volume& (0+255),w,b
 31835   010356  158A               	andwf	(??_mount_volume+4)& (0+255),w,b
 31836   010358  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 31837   01035A  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 31838   01035C  158B               	andwf	(??_mount_volume+5)& (0+255),w,b
 31839   01035E  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 31840   010360  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 31841   010362  118D               	iorwf	(??_mount_volume+7)& (0+255),w,b
 31842   010364  B4D8               	btfsc	status,2,c
 31843   010366  EFB7  F081         	goto	u30711
 31844   01036A  EFB9  F081         	goto	u30710
 31845   01036E                     u30711:
 31846   01036E  EFBB  F081         	goto	l22395
 31847   010372                     u30710:
 31848   010372  EFC2  F080         	goto	l22353
 31849   010376                     l22395:
 31850                           
 31851                           ; BSR set to: 6
 31852                           ;../fatfs/ff.c: 3527:   fs->n_rootdir = ld_word(fs->win + 17);
 31853   010376  0E45               	movlw	69
 31854   010378  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31855   01037A  6E04               	movwf	ld_word@ptr^(0+1280),c
 31856   01037C  0E00               	movlw	0
 31857   01037E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31858   010380  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31859   010382  EC4C  F0FF         	call	_ld_word	;wreg free
 31860   010386  0106               	movlb	6	; () banked
 31861   010388  EE20 F008          	lfsr	2,8
 31862   01038C  51AD               	movf	mount_volume@fs& (0+255),w,b
 31863   01038E  26D9               	addwf	fsr2l,f,c
 31864   010390  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31865   010392  22DA               	addwfc	fsr2h,f,c
 31866   010394  C504  F4DE         	movff	?_ld_word,postinc2
 31867   010398  C505  F4DD         	movff	?_ld_word+1,postdec2
 31868   01039C                     
 31869                           ; BSR set to: 6
 31870                           ;../fatfs/ff.c: 3528:   if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
 31871   01039C  EE20 F008          	lfsr	2,8
 31872   0103A0  51AD               	movf	mount_volume@fs& (0+255),w,b
 31873   0103A2  26D9               	addwf	fsr2l,f,c
 31874   0103A4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31875   0103A6  22DA               	addwfc	fsr2h,f,c
 31876   0103A8  C4DE F686          	movff	postinc2,??_mount_volume
 31877   0103AC  C4DD F687          	movff	postdec2,??_mount_volume+1
 31878   0103B0  0E0F               	movlw	15
 31879   0103B2  1786               	andwf	??_mount_volume& (0+255),f,b
 31880   0103B4  0E00               	movlw	0
 31881   0103B6  1787               	andwf	(??_mount_volume+1)& (0+255),f,b
 31882   0103B8  5186               	movf	??_mount_volume& (0+255),w,b
 31883   0103BA  1187               	iorwf	(??_mount_volume+1)& (0+255),w,b
 31884   0103BC  B4D8               	btfsc	status,2,c
 31885   0103BE  EFE3  F081         	goto	u30721
 31886   0103C2  EFE5  F081         	goto	u30720
 31887   0103C6                     u30721:
 31888   0103C6  EFE7  F081         	goto	l22403
 31889   0103CA                     u30720:
 31890   0103CA  EFC2  F080         	goto	l22353
 31891   0103CE                     l22403:
 31892                           
 31893                           ; BSR set to: 6
 31894                           ;../fatfs/ff.c: 3530:   tsect = ld_word(fs->win + 19);
 31895   0103CE  0E47               	movlw	71
 31896   0103D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31897   0103D2  6E04               	movwf	ld_word@ptr^(0+1280),c
 31898   0103D4  0E00               	movlw	0
 31899   0103D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31900   0103D8  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31901   0103DA  EC4C  F0FF         	call	_ld_word	;wreg free
 31902   0103DE  C504  F69A         	movff	?_ld_word,mount_volume@tsect
 31903   0103E2  C505  F69B         	movff	?_ld_word+1,mount_volume@tsect+1
 31904   0103E6  0106               	movlb	6	; () banked
 31905   0103E8  6B9C               	clrf	(mount_volume@tsect+2)& (0+255),b
 31906   0103EA  6B9D               	clrf	(mount_volume@tsect+3)& (0+255),b
 31907   0103EC                     
 31908                           ; BSR set to: 6
 31909                           ;../fatfs/ff.c: 3531:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 31910   0103EC  519A               	movf	mount_volume@tsect& (0+255),w,b
 31911   0103EE  119B               	iorwf	(mount_volume@tsect+1)& (0+255),w,b
 31912   0103F0  119C               	iorwf	(mount_volume@tsect+2)& (0+255),w,b
 31913   0103F2  119D               	iorwf	(mount_volume@tsect+3)& (0+255),w,b
 31914   0103F4  A4D8               	btfss	status,2,c
 31915   0103F6  EFFF  F081         	goto	u30731
 31916   0103FA  EF01  F082         	goto	u30730
 31917   0103FE                     u30731:
 31918   0103FE  EF11  F082         	goto	l589
 31919   010402                     u30730:
 31920   010402                     
 31921                           ; BSR set to: 6
 31922   010402  0E54               	movlw	84
 31923   010404  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31924   010406  6E04               	movwf	ld_dword@ptr^(0+1280),c
 31925   010408  0E00               	movlw	0
 31926   01040A  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31927   01040C  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 31928   01040E  ECC7  F0F2         	call	_ld_dword	;wreg free
 31929   010412  C504  F69A         	movff	?_ld_dword,mount_volume@tsect
 31930   010416  C505  F69B         	movff	?_ld_dword+1,mount_volume@tsect+1
 31931   01041A  C506  F69C         	movff	?_ld_dword+2,mount_volume@tsect+2
 31932   01041E  C507  F69D         	movff	?_ld_dword+3,mount_volume@tsect+3
 31933   010422                     l589:
 31934                           
 31935                           ;../fatfs/ff.c: 3533:   nrsv = ld_word(fs->win + 14);
 31936   010422  0E42               	movlw	66
 31937   010424  0106               	movlb	6	; () banked
 31938   010426  25AD               	addwf	mount_volume@fs& (0+255),w,b
 31939   010428  6E04               	movwf	ld_word@ptr^(0+1280),c
 31940   01042A  0E00               	movlw	0
 31941   01042C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 31942   01042E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 31943   010430  EC4C  F0FF         	call	_ld_word	;wreg free
 31944   010434  C504  F698         	movff	?_ld_word,mount_volume@nrsv
 31945   010438  C505  F699         	movff	?_ld_word+1,mount_volume@nrsv+1
 31946   01043C                     
 31947                           ;../fatfs/ff.c: 3534:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 31948   01043C  0106               	movlb	6	; () banked
 31949   01043E  5198               	movf	mount_volume@nrsv& (0+255),w,b
 31950   010440  1199               	iorwf	(mount_volume@nrsv+1)& (0+255),w,b
 31951   010442  A4D8               	btfss	status,2,c
 31952   010444  EF26  F082         	goto	u30741
 31953   010448  EF28  F082         	goto	u30740
 31954   01044C                     u30741:
 31955   01044C  EF2A  F082         	goto	l22415
 31956   010450                     u30740:
 31957   010450  EFC2  F080         	goto	l22353
 31958   010454                     l22415:
 31959                           
 31960                           ; BSR set to: 6
 31961                           ;../fatfs/ff.c: 3537:   sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 31962   010454  EE20 F008          	lfsr	2,8
 31963   010458  51AD               	movf	mount_volume@fs& (0+255),w,b
 31964   01045A  26D9               	addwf	fsr2l,f,c
 31965   01045C  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 31966   01045E  22DA               	addwfc	fsr2h,f,c
 31967   010460  C4DE F686          	movff	postinc2,??_mount_volume
 31968   010464  C4DD F687          	movff	postdec2,??_mount_volume+1
 31969   010468  0E04               	movlw	4
 31970   01046A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 31971   01046C                     u30755:
 31972   01046C  90D8               	bcf	status,0,c
 31973   01046E  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 31974   010470  3386               	rrcf	??_mount_volume& (0+255),f,b
 31975   010472  2F88               	decfsz	(??_mount_volume+2)& (0+255),f,b
 31976   010474  EF36  F082         	goto	u30755
 31977   010478  5198               	movf	mount_volume@nrsv& (0+255),w,b
 31978   01047A  2586               	addwf	??_mount_volume& (0+255),w,b
 31979   01047C  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 31980   01047E  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 31981   010480  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 31982   010482  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 31983   010484  6B8B               	clrf	(??_mount_volume+5)& (0+255),b
 31984   010486  B0D8               	btfsc	status,0,c
 31985   010488  2B8B               	incf	(??_mount_volume+5)& (0+255),f,b
 31986   01048A  6B8C               	clrf	(??_mount_volume+6)& (0+255),b
 31987   01048C  51A7               	movf	mount_volume@fasize& (0+255),w,b
 31988   01048E  2589               	addwf	(??_mount_volume+3)& (0+255),w,b
 31989   010490  6F94               	movwf	mount_volume@sysect& (0+255),b
 31990   010492  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 31991   010494  218A               	addwfc	(??_mount_volume+4)& (0+255),w,b
 31992   010496  6F95               	movwf	(mount_volume@sysect+1)& (0+255),b
 31993   010498  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 31994   01049A  218B               	addwfc	(??_mount_volume+5)& (0+255),w,b
 31995   01049C  6F96               	movwf	(mount_volume@sysect+2)& (0+255),b
 31996   01049E  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 31997   0104A0  218C               	addwfc	(??_mount_volume+6)& (0+255),w,b
 31998   0104A2  6F97               	movwf	(mount_volume@sysect+3)& (0+255),b
 31999   0104A4                     
 32000                           ; BSR set to: 6
 32001                           ;../fatfs/ff.c: 3538:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 32002   0104A4  5194               	movf	mount_volume@sysect& (0+255),w,b
 32003   0104A6  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 32004   0104A8  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 32005   0104AA  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 32006   0104AC  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 32007   0104AE  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 32008   0104B0  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 32009   0104B2  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 32010   0104B4  B0D8               	btfsc	status,0,c
 32011   0104B6  EF5F  F082         	goto	u30761
 32012   0104BA  EF61  F082         	goto	u30760
 32013   0104BE                     u30761:
 32014   0104BE  EF63  F082         	goto	l22423
 32015   0104C2                     u30760:
 32016   0104C2  EFC2  F080         	goto	l22353
 32017   0104C6                     l22423:
 32018                           
 32019                           ; BSR set to: 6
 32020                           ;../fatfs/ff.c: 3539:   nclst = (tsect - sysect) / fs->csize;
 32021   0104C6  5194               	movf	mount_volume@sysect& (0+255),w,b
 32022   0104C8  5D9A               	subwf	mount_volume@tsect& (0+255),w,b
 32023   0104CA  6E04               	movwf	___lldiv@dividend^(0+1280),c
 32024   0104CC  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 32025   0104CE  599B               	subwfb	(mount_volume@tsect+1)& (0+255),w,b
 32026   0104D0  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 32027   0104D2  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 32028   0104D4  599C               	subwfb	(mount_volume@tsect+2)& (0+255),w,b
 32029   0104D6  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 32030   0104D8  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 32031   0104DA  599D               	subwfb	(mount_volume@tsect+3)& (0+255),w,b
 32032   0104DC  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 32033   0104DE  EE20 F00A          	lfsr	2,10
 32034   0104E2  51AD               	movf	mount_volume@fs& (0+255),w,b
 32035   0104E4  26D9               	addwf	fsr2l,f,c
 32036   0104E6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32037   0104E8  22DA               	addwfc	fsr2h,f,c
 32038   0104EA  C4DE F686          	movff	postinc2,??_mount_volume
 32039   0104EE  C4DD F687          	movff	postdec2,??_mount_volume+1
 32040   0104F2  C686  F508         	movff	??_mount_volume,___lldiv@divisor
 32041   0104F6  C687  F509         	movff	??_mount_volume+1,___lldiv@divisor+1
 32042   0104FA  6A0A               	clrf	(___lldiv@divisor+2)^(0+1280),c
 32043   0104FC  6A0B               	clrf	(___lldiv@divisor+3)^(0+1280),c
 32044   0104FE  EC7E  F0F5         	call	___lldiv	;wreg free
 32045   010502  C504  F6A3         	movff	?___lldiv,mount_volume@nclst
 32046   010506  C505  F6A4         	movff	?___lldiv+1,mount_volume@nclst+1
 32047   01050A  C506  F6A5         	movff	?___lldiv+2,mount_volume@nclst+2
 32048   01050E  C507  F6A6         	movff	?___lldiv+3,mount_volume@nclst+3
 32049   010512                     
 32050                           ;../fatfs/ff.c: 3540:   if (nclst == 0) return FR_NO_FILESYSTEM;
 32051   010512  0106               	movlb	6	; () banked
 32052   010514  51A3               	movf	mount_volume@nclst& (0+255),w,b
 32053   010516  11A4               	iorwf	(mount_volume@nclst+1)& (0+255),w,b
 32054   010518  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 32055   01051A  11A6               	iorwf	(mount_volume@nclst+3)& (0+255),w,b
 32056   01051C  A4D8               	btfss	status,2,c
 32057   01051E  EF93  F082         	goto	u30771
 32058   010522  EF95  F082         	goto	u30770
 32059   010526                     u30771:
 32060   010526  EF97  F082         	goto	l22431
 32061   01052A                     u30770:
 32062   01052A  EFC2  F080         	goto	l22353
 32063   01052E                     l22431:
 32064                           
 32065                           ; BSR set to: 6
 32066                           ;../fatfs/ff.c: 3541:   fmt = 0;
 32067   01052E  0E00               	movlw	0
 32068   010530  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 32069   010532  0E00               	movlw	0
 32070   010534  6FAB               	movwf	mount_volume@fmt& (0+255),b
 32071   010536                     
 32072                           ; BSR set to: 6
 32073                           ;../fatfs/ff.c: 3542:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 32074   010536  0EF6               	movlw	246
 32075   010538  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 32076   01053A  0EFF               	movlw	255
 32077   01053C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 32078   01053E  0EFF               	movlw	255
 32079   010540  59A5               	subwfb	(mount_volume@nclst+2)& (0+255),w,b
 32080   010542  0E0F               	movlw	15
 32081   010544  59A6               	subwfb	(mount_volume@nclst+3)& (0+255),w,b
 32082   010546  B0D8               	btfsc	status,0,c
 32083   010548  EFA8  F082         	goto	u30781
 32084   01054C  EFAA  F082         	goto	u30780
 32085   010550                     u30781:
 32086   010550  EFAE  F082         	goto	l22437
 32087   010554                     u30780:
 32088   010554                     
 32089                           ; BSR set to: 6
 32090   010554  0E00               	movlw	0
 32091   010556  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 32092   010558  0E03               	movlw	3
 32093   01055A  6FAB               	movwf	mount_volume@fmt& (0+255),b
 32094   01055C                     l22437:
 32095                           
 32096                           ; BSR set to: 6
 32097                           ;../fatfs/ff.c: 3543:   if (nclst <= 0xFFF5) fmt = 2;
 32098   01055C  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 32099   01055E  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 32100   010560  E109               	bnz	u30791
 32101   010562  0EF6               	movlw	246
 32102   010564  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 32103   010566  0EFF               	movlw	255
 32104   010568  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 32105   01056A  B0D8               	btfsc	status,0,c
 32106   01056C  EFBA  F082         	goto	u30791
 32107   010570  EFBC  F082         	goto	u30790
 32108   010574                     u30791:
 32109   010574  EFC0  F082         	goto	l22441
 32110   010578                     u30790:
 32111   010578                     
 32112                           ; BSR set to: 6
 32113   010578  0E00               	movlw	0
 32114   01057A  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 32115   01057C  0E02               	movlw	2
 32116   01057E  6FAB               	movwf	mount_volume@fmt& (0+255),b
 32117   010580                     l22441:
 32118                           
 32119                           ; BSR set to: 6
 32120                           ;../fatfs/ff.c: 3544:   if (nclst <= 0xFF5) fmt = 1;
 32121   010580  51A6               	movf	(mount_volume@nclst+3)& (0+255),w,b
 32122   010582  11A5               	iorwf	(mount_volume@nclst+2)& (0+255),w,b
 32123   010584  E109               	bnz	u30801
 32124   010586  0EF6               	movlw	246
 32125   010588  5DA3               	subwf	mount_volume@nclst& (0+255),w,b
 32126   01058A  0E0F               	movlw	15
 32127   01058C  59A4               	subwfb	(mount_volume@nclst+1)& (0+255),w,b
 32128   01058E  B0D8               	btfsc	status,0,c
 32129   010590  EFCC  F082         	goto	u30801
 32130   010594  EFCE  F082         	goto	u30800
 32131   010598                     u30801:
 32132   010598  EFD2  F082         	goto	l22445
 32133   01059C                     u30800:
 32134   01059C                     
 32135                           ; BSR set to: 6
 32136   01059C  0E00               	movlw	0
 32137   01059E  6FAC               	movwf	(mount_volume@fmt+1)& (0+255),b
 32138   0105A0  0E01               	movlw	1
 32139   0105A2  6FAB               	movwf	mount_volume@fmt& (0+255),b
 32140   0105A4                     l22445:
 32141                           
 32142                           ; BSR set to: 6
 32143                           ;../fatfs/ff.c: 3545:   if (fmt == 0) return FR_NO_FILESYSTEM;
 32144   0105A4  51AB               	movf	mount_volume@fmt& (0+255),w,b
 32145   0105A6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 32146   0105A8  A4D8               	btfss	status,2,c
 32147   0105AA  EFD9  F082         	goto	u30811
 32148   0105AE  EFDB  F082         	goto	u30810
 32149   0105B2                     u30811:
 32150   0105B2  EFDD  F082         	goto	l22451
 32151   0105B6                     u30810:
 32152   0105B6  EFC2  F080         	goto	l22353
 32153   0105BA                     l22451:
 32154                           
 32155                           ; BSR set to: 6
 32156                           ;../fatfs/ff.c: 3548:   fs->n_fatent = nclst + 2;
 32157   0105BA  0E02               	movlw	2
 32158   0105BC  25A3               	addwf	mount_volume@nclst& (0+255),w,b
 32159   0105BE  6F86               	movwf	??_mount_volume& (0+255),b
 32160   0105C0  0E00               	movlw	0
 32161   0105C2  21A4               	addwfc	(mount_volume@nclst+1)& (0+255),w,b
 32162   0105C4  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 32163   0105C6  0E00               	movlw	0
 32164   0105C8  21A5               	addwfc	(mount_volume@nclst+2)& (0+255),w,b
 32165   0105CA  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 32166   0105CC  0E00               	movlw	0
 32167   0105CE  21A6               	addwfc	(mount_volume@nclst+3)& (0+255),w,b
 32168   0105D0  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 32169   0105D2  EE20 F018          	lfsr	2,24
 32170   0105D6  51AD               	movf	mount_volume@fs& (0+255),w,b
 32171   0105D8  26D9               	addwf	fsr2l,f,c
 32172   0105DA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32173   0105DC  22DA               	addwfc	fsr2h,f,c
 32174   0105DE  C686  F4DE         	movff	??_mount_volume,postinc2
 32175   0105E2  C687  F4DE         	movff	??_mount_volume+1,postinc2
 32176   0105E6  C688  F4DE         	movff	??_mount_volume+2,postinc2
 32177   0105EA  C689  F4DE         	movff	??_mount_volume+3,postinc2
 32178                           
 32179                           ;../fatfs/ff.c: 3549:   fs->volbase = bsect;
 32180   0105EE  EE20 F020          	lfsr	2,32
 32181   0105F2  51AD               	movf	mount_volume@fs& (0+255),w,b
 32182   0105F4  26D9               	addwf	fsr2l,f,c
 32183   0105F6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32184   0105F8  22DA               	addwfc	fsr2h,f,c
 32185   0105FA  C69E  F4DE         	movff	mount_volume@bsect,postinc2
 32186   0105FE  C69F  F4DE         	movff	mount_volume@bsect+1,postinc2
 32187   010602  C6A0  F4DE         	movff	mount_volume@bsect+2,postinc2
 32188   010606  C6A1  F4DE         	movff	mount_volume@bsect+3,postinc2
 32189                           
 32190                           ;../fatfs/ff.c: 3550:   fs->fatbase = bsect + nrsv;
 32191   01060A  5198               	movf	mount_volume@nrsv& (0+255),w,b
 32192   01060C  259E               	addwf	mount_volume@bsect& (0+255),w,b
 32193   01060E  6F86               	movwf	??_mount_volume& (0+255),b
 32194   010610  5199               	movf	(mount_volume@nrsv+1)& (0+255),w,b
 32195   010612  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 32196   010614  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 32197   010616  0E00               	movlw	0
 32198   010618  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 32199   01061A  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 32200   01061C  0E00               	movlw	0
 32201   01061E  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 32202   010620  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 32203   010622  EE20 F024          	lfsr	2,36
 32204   010626  51AD               	movf	mount_volume@fs& (0+255),w,b
 32205   010628  26D9               	addwf	fsr2l,f,c
 32206   01062A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32207   01062C  22DA               	addwfc	fsr2h,f,c
 32208   01062E  C686  F4DE         	movff	??_mount_volume,postinc2
 32209   010632  C687  F4DE         	movff	??_mount_volume+1,postinc2
 32210   010636  C688  F4DE         	movff	??_mount_volume+2,postinc2
 32211   01063A  C689  F4DE         	movff	??_mount_volume+3,postinc2
 32212                           
 32213                           ;../fatfs/ff.c: 3551:   fs->database = bsect + sysect;
 32214   01063E  5194               	movf	mount_volume@sysect& (0+255),w,b
 32215   010640  259E               	addwf	mount_volume@bsect& (0+255),w,b
 32216   010642  6F86               	movwf	??_mount_volume& (0+255),b
 32217   010644  5195               	movf	(mount_volume@sysect+1)& (0+255),w,b
 32218   010646  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 32219   010648  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 32220   01064A  5196               	movf	(mount_volume@sysect+2)& (0+255),w,b
 32221   01064C  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 32222   01064E  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 32223   010650  5197               	movf	(mount_volume@sysect+3)& (0+255),w,b
 32224   010652  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 32225   010654  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 32226   010656  EE20 F02C          	lfsr	2,44
 32227   01065A  51AD               	movf	mount_volume@fs& (0+255),w,b
 32228   01065C  26D9               	addwf	fsr2l,f,c
 32229   01065E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32230   010660  22DA               	addwfc	fsr2h,f,c
 32231   010662  C686  F4DE         	movff	??_mount_volume,postinc2
 32232   010666  C687  F4DE         	movff	??_mount_volume+1,postinc2
 32233   01066A  C688  F4DE         	movff	??_mount_volume+2,postinc2
 32234   01066E  C689  F4DE         	movff	??_mount_volume+3,postinc2
 32235   010672                     
 32236                           ; BSR set to: 6
 32237                           ;../fatfs/ff.c: 3552:   if (fmt == 3) {
 32238   010672  0E03               	movlw	3
 32239   010674  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 32240   010676  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 32241   010678  A4D8               	btfss	status,2,c
 32242   01067A  EF41  F083         	goto	u30821
 32243   01067E  EF43  F083         	goto	u30820
 32244   010682                     u30821:
 32245   010682  EFA0  F083         	goto	l22471
 32246   010686                     u30820:
 32247   010686                     
 32248                           ; BSR set to: 6
 32249                           ;../fatfs/ff.c: 3553:    if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
 32250   010686  0E5E               	movlw	94
 32251   010688  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32252   01068A  6E04               	movwf	ld_word@ptr^(0+1280),c
 32253   01068C  0E00               	movlw	0
 32254   01068E  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32255   010690  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32256   010692  EC4C  F0FF         	call	_ld_word	;wreg free
 32257   010696  5004               	movf	?_ld_word^(0+1280),w,c
 32258   010698  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 32259   01069A  B4D8               	btfsc	status,2,c
 32260   01069C  EF52  F083         	goto	u30831
 32261   0106A0  EF54  F083         	goto	u30830
 32262   0106A4                     u30831:
 32263   0106A4  EF56  F083         	goto	l22461
 32264   0106A8                     u30830:
 32265   0106A8  EFC2  F080         	goto	l22353
 32266   0106AC                     l22461:
 32267                           
 32268                           ;../fatfs/ff.c: 3554:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
 32269   0106AC  0106               	movlb	6	; () banked
 32270   0106AE  EE20 F008          	lfsr	2,8
 32271   0106B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 32272   0106B4  26D9               	addwf	fsr2l,f,c
 32273   0106B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32274   0106B8  22DA               	addwfc	fsr2h,f,c
 32275   0106BA  50DE               	movf	postinc2,w,c
 32276   0106BC  10DE               	iorwf	postinc2,w,c
 32277   0106BE  B4D8               	btfsc	status,2,c
 32278   0106C0  EF64  F083         	goto	u30841
 32279   0106C4  EF66  F083         	goto	u30840
 32280   0106C8                     u30841:
 32281   0106C8  EF68  F083         	goto	l22467
 32282   0106CC                     u30840:
 32283   0106CC  EFC2  F080         	goto	l22353
 32284   0106D0                     l22467:
 32285                           
 32286                           ; BSR set to: 6
 32287                           ;../fatfs/ff.c: 3555:    fs->dirbase = ld_dword(fs->win + 44);
 32288   0106D0  0E60               	movlw	96
 32289   0106D2  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32290   0106D4  6E04               	movwf	ld_dword@ptr^(0+1280),c
 32291   0106D6  0E00               	movlw	0
 32292   0106D8  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32293   0106DA  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 32294   0106DC  ECC7  F0F2         	call	_ld_dword	;wreg free
 32295   0106E0  0106               	movlb	6	; () banked
 32296   0106E2  EE20 F028          	lfsr	2,40
 32297   0106E6  51AD               	movf	mount_volume@fs& (0+255),w,b
 32298   0106E8  26D9               	addwf	fsr2l,f,c
 32299   0106EA  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32300   0106EC  22DA               	addwfc	fsr2h,f,c
 32301   0106EE  C504  F4DE         	movff	?_ld_dword,postinc2
 32302   0106F2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 32303   0106F6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 32304   0106FA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 32305   0106FE                     
 32306                           ; BSR set to: 6
 32307                           ;../fatfs/ff.c: 3556:    szbfat = fs->n_fatent * 4;
 32308   0106FE  EE20 F018          	lfsr	2,24
 32309   010702  51AD               	movf	mount_volume@fs& (0+255),w,b
 32310   010704  26D9               	addwf	fsr2l,f,c
 32311   010706  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32312   010708  22DA               	addwfc	fsr2h,f,c
 32313   01070A  C4DE F686          	movff	postinc2,??_mount_volume
 32314   01070E  C4DE F687          	movff	postinc2,??_mount_volume+1
 32315   010712  C4DE F688          	movff	postinc2,??_mount_volume+2
 32316   010716  C4DE F689          	movff	postinc2,??_mount_volume+3
 32317   01071A  0E02               	movlw	2
 32318   01071C                     u30855:
 32319   01071C  90D8               	bcf	status,0,c
 32320   01071E  3786               	rlcf	??_mount_volume& (0+255),f,b
 32321   010720  3787               	rlcf	(??_mount_volume+1)& (0+255),f,b
 32322   010722  3788               	rlcf	(??_mount_volume+2)& (0+255),f,b
 32323   010724  3789               	rlcf	(??_mount_volume+3)& (0+255),f,b
 32324   010726  2EE8               	decfsz	wreg,f,c
 32325   010728  EF8E  F083         	goto	u30855
 32326   01072C  C686  F68E         	movff	??_mount_volume,mount_volume@szbfat
 32327   010730  C687  F68F         	movff	??_mount_volume+1,mount_volume@szbfat+1
 32328   010734  C688  F690         	movff	??_mount_volume+2,mount_volume@szbfat+2
 32329   010738  C689  F691         	movff	??_mount_volume+3,mount_volume@szbfat+3
 32330                           
 32331                           ;../fatfs/ff.c: 3557:   } else {
 32332   01073C  EF40  F084         	goto	l600
 32333   010740                     l22471:
 32334                           
 32335                           ; BSR set to: 6
 32336                           ;../fatfs/ff.c: 3558:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
 32337   010740  EE20 F008          	lfsr	2,8
 32338   010744  51AD               	movf	mount_volume@fs& (0+255),w,b
 32339   010746  26D9               	addwf	fsr2l,f,c
 32340   010748  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32341   01074A  22DA               	addwfc	fsr2h,f,c
 32342   01074C  50DE               	movf	postinc2,w,c
 32343   01074E  10DE               	iorwf	postinc2,w,c
 32344   010750  A4D8               	btfss	status,2,c
 32345   010752  EFAD  F083         	goto	u30861
 32346   010756  EFAF  F083         	goto	u30860
 32347   01075A                     u30861:
 32348   01075A  EFB1  F083         	goto	l22477
 32349   01075E                     u30860:
 32350   01075E  EFC2  F080         	goto	l22353
 32351   010762                     l22477:
 32352                           
 32353                           ; BSR set to: 6
 32354                           ;../fatfs/ff.c: 3559:    fs->dirbase = fs->fatbase + fasize;
 32355   010762  EE20 F024          	lfsr	2,36
 32356   010766  51AD               	movf	mount_volume@fs& (0+255),w,b
 32357   010768  26D9               	addwf	fsr2l,f,c
 32358   01076A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32359   01076C  22DA               	addwfc	fsr2h,f,c
 32360   01076E  C4DE F686          	movff	postinc2,??_mount_volume
 32361   010772  C4DE F687          	movff	postinc2,??_mount_volume+1
 32362   010776  C4DE F688          	movff	postinc2,??_mount_volume+2
 32363   01077A  C4DE F689          	movff	postinc2,??_mount_volume+3
 32364   01077E  51A7               	movf	mount_volume@fasize& (0+255),w,b
 32365   010780  2586               	addwf	??_mount_volume& (0+255),w,b
 32366   010782  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 32367   010784  51A8               	movf	(mount_volume@fasize+1)& (0+255),w,b
 32368   010786  2187               	addwfc	(??_mount_volume+1)& (0+255),w,b
 32369   010788  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 32370   01078A  51A9               	movf	(mount_volume@fasize+2)& (0+255),w,b
 32371   01078C  2188               	addwfc	(??_mount_volume+2)& (0+255),w,b
 32372   01078E  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 32373   010790  51AA               	movf	(mount_volume@fasize+3)& (0+255),w,b
 32374   010792  2189               	addwfc	(??_mount_volume+3)& (0+255),w,b
 32375   010794  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 32376   010796  EE20 F028          	lfsr	2,40
 32377   01079A  51AD               	movf	mount_volume@fs& (0+255),w,b
 32378   01079C  26D9               	addwf	fsr2l,f,c
 32379   01079E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32380   0107A0  22DA               	addwfc	fsr2h,f,c
 32381   0107A2  C68A  F4DE         	movff	??_mount_volume+4,postinc2
 32382   0107A6  C68B  F4DE         	movff	??_mount_volume+5,postinc2
 32383   0107AA  C68C  F4DE         	movff	??_mount_volume+6,postinc2
 32384   0107AE  C68D  F4DE         	movff	??_mount_volume+7,postinc2
 32385   0107B2                     
 32386                           ; BSR set to: 6
 32387                           ;../fatfs/ff.c: 3560:    szbfat = (fmt == 2) ?
 32388   0107B2  0E02               	movlw	2
 32389   0107B4  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 32390   0107B6  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 32391   0107B8  B4D8               	btfsc	status,2,c
 32392   0107BA  EFE1  F083         	goto	u30871
 32393   0107BE  EFE3  F083         	goto	u30870
 32394   0107C2                     u30871:
 32395   0107C2  EF29  F084         	goto	l22483
 32396   0107C6                     u30870:
 32397   0107C6                     
 32398                           ; BSR set to: 6
 32399   0107C6  EE20 F018          	lfsr	2,24
 32400   0107CA  51AD               	movf	mount_volume@fs& (0+255),w,b
 32401   0107CC  26D9               	addwf	fsr2l,f,c
 32402   0107CE  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32403   0107D0  22DA               	addwfc	fsr2h,f,c
 32404   0107D2  C4DE F686          	movff	postinc2,??_mount_volume
 32405   0107D6  C4DE F687          	movff	postinc2,??_mount_volume+1
 32406   0107DA  C4DE F688          	movff	postinc2,??_mount_volume+2
 32407   0107DE  C4DE F689          	movff	postinc2,??_mount_volume+3
 32408   0107E2  0E01               	movlw	1
 32409   0107E4  1586               	andwf	??_mount_volume& (0+255),w,b
 32410   0107E6  6F8A               	movwf	(??_mount_volume+4)& (0+255),b
 32411   0107E8  0E00               	movlw	0
 32412   0107EA  1587               	andwf	(??_mount_volume+1)& (0+255),w,b
 32413   0107EC  6F8B               	movwf	(??_mount_volume+5)& (0+255),b
 32414   0107EE  0E00               	movlw	0
 32415   0107F0  1588               	andwf	(??_mount_volume+2)& (0+255),w,b
 32416   0107F2  6F8C               	movwf	(??_mount_volume+6)& (0+255),b
 32417   0107F4  0E00               	movlw	0
 32418   0107F6  1589               	andwf	(??_mount_volume+3)& (0+255),w,b
 32419   0107F8  6F8D               	movwf	(??_mount_volume+7)& (0+255),b
 32420   0107FA  EE20 F018          	lfsr	2,24
 32421   0107FE  51AD               	movf	mount_volume@fs& (0+255),w,b
 32422   010800  26D9               	addwf	fsr2l,f,c
 32423   010802  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32424   010804  22DA               	addwfc	fsr2h,f,c
 32425   010806  C4DE F504          	movff	postinc2,___lmul@multiplier
 32426   01080A  C4DE F505          	movff	postinc2,___lmul@multiplier+1
 32427   01080E  C4DE F506          	movff	postinc2,___lmul@multiplier+2
 32428   010812  C4DE F507          	movff	postinc2,___lmul@multiplier+3
 32429   010816  0E03               	movlw	3
 32430   010818  6E08               	movwf	___lmul@multiplicand^(0+1280),c
 32431   01081A  0E00               	movlw	0
 32432   01081C  6E09               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 32433   01081E  0E00               	movlw	0
 32434   010820  6E0A               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 32435   010822  0E00               	movlw	0
 32436   010824  6E0B               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 32437   010826  EC13  F0FB         	call	___lmul	;wreg free
 32438   01082A  90D8               	bcf	status,0,c
 32439   01082C  3207               	rrcf	(?___lmul+3)^(0+1280),f,c
 32440   01082E  3206               	rrcf	(?___lmul+2)^(0+1280),f,c
 32441   010830  3205               	rrcf	(?___lmul+1)^(0+1280),f,c
 32442   010832  3204               	rrcf	?___lmul^(0+1280),f,c
 32443   010834  0106               	movlb	6	; () banked
 32444   010836  518A               	movf	(??_mount_volume+4)& (0+255),w,b
 32445   010838  2404               	addwf	?___lmul^(0+1280),w,c
 32446   01083A  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 32447   01083C  518B               	movf	(??_mount_volume+5)& (0+255),w,b
 32448   01083E  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 32449   010840  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 32450   010842  518C               	movf	(??_mount_volume+6)& (0+255),w,b
 32451   010844  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 32452   010846  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 32453   010848  518D               	movf	(??_mount_volume+7)& (0+255),w,b
 32454   01084A  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 32455   01084C  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 32456   01084E  EF40  F084         	goto	l600
 32457   010852                     l22483:
 32458                           
 32459                           ; BSR set to: 6
 32460   010852  EE20 F018          	lfsr	2,24
 32461   010856  51AD               	movf	mount_volume@fs& (0+255),w,b
 32462   010858  26D9               	addwf	fsr2l,f,c
 32463   01085A  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32464   01085C  22DA               	addwfc	fsr2h,f,c
 32465   01085E  C4DE F686          	movff	postinc2,??_mount_volume
 32466   010862  C4DE F687          	movff	postinc2,??_mount_volume+1
 32467   010866  C4DE F688          	movff	postinc2,??_mount_volume+2
 32468   01086A  C4DE F689          	movff	postinc2,??_mount_volume+3
 32469   01086E  90D8               	bcf	status,0,c
 32470   010870  3586               	rlcf	??_mount_volume& (0+255),w,b
 32471   010872  6F8E               	movwf	mount_volume@szbfat& (0+255),b
 32472   010874  3587               	rlcf	(??_mount_volume+1)& (0+255),w,b
 32473   010876  6F8F               	movwf	(mount_volume@szbfat+1)& (0+255),b
 32474   010878  3588               	rlcf	(??_mount_volume+2)& (0+255),w,b
 32475   01087A  6F90               	movwf	(mount_volume@szbfat+2)& (0+255),b
 32476   01087C  3589               	rlcf	(??_mount_volume+3)& (0+255),w,b
 32477   01087E  6F91               	movwf	(mount_volume@szbfat+3)& (0+255),b
 32478   010880                     l600:
 32479                           
 32480                           ; BSR set to: 6
 32481                           ;../fatfs/ff.c: 3563:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) retu
      +                          rn FR_NO_FILESYSTEM;
 32482   010880  0EFF               	movlw	255
 32483   010882  258E               	addwf	mount_volume@szbfat& (0+255),w,b
 32484   010884  6F86               	movwf	??_mount_volume& (0+255),b
 32485   010886  0E01               	movlw	1
 32486   010888  218F               	addwfc	(mount_volume@szbfat+1)& (0+255),w,b
 32487   01088A  6F87               	movwf	(??_mount_volume+1)& (0+255),b
 32488   01088C  0E00               	movlw	0
 32489   01088E  2190               	addwfc	(mount_volume@szbfat+2)& (0+255),w,b
 32490   010890  6F88               	movwf	(??_mount_volume+2)& (0+255),b
 32491   010892  0E00               	movlw	0
 32492   010894  2191               	addwfc	(mount_volume@szbfat+3)& (0+255),w,b
 32493   010896  6F89               	movwf	(??_mount_volume+3)& (0+255),b
 32494   010898  0E0A               	movlw	10
 32495   01089A  EF54  F084         	goto	u30880
 32496   01089E                     u30885:
 32497   01089E  90D8               	bcf	status,0,c
 32498   0108A0  3389               	rrcf	(??_mount_volume+3)& (0+255),f,b
 32499   0108A2  3388               	rrcf	(??_mount_volume+2)& (0+255),f,b
 32500   0108A4  3387               	rrcf	(??_mount_volume+1)& (0+255),f,b
 32501   0108A6  3386               	rrcf	??_mount_volume& (0+255),f,b
 32502   0108A8                     u30880:
 32503   0108A8  2EE8               	decfsz	wreg,f,c
 32504   0108AA  EF4F  F084         	goto	u30885
 32505   0108AE  EE20 F01C          	lfsr	2,28
 32506   0108B2  51AD               	movf	mount_volume@fs& (0+255),w,b
 32507   0108B4  26D9               	addwf	fsr2l,f,c
 32508   0108B6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32509   0108B8  22DA               	addwfc	fsr2h,f,c
 32510   0108BA  5186               	movf	??_mount_volume& (0+255),w,b
 32511   0108BC  5CDE               	subwf	postinc2,w,c
 32512   0108BE  5187               	movf	(??_mount_volume+1)& (0+255),w,b
 32513   0108C0  58DE               	subwfb	postinc2,w,c
 32514   0108C2  5188               	movf	(??_mount_volume+2)& (0+255),w,b
 32515   0108C4  58DE               	subwfb	postinc2,w,c
 32516   0108C6  5189               	movf	(??_mount_volume+3)& (0+255),w,b
 32517   0108C8  58DE               	subwfb	postinc2,w,c
 32518   0108CA  B0D8               	btfsc	status,0,c
 32519   0108CC  EF6A  F084         	goto	u30891
 32520   0108D0  EF6C  F084         	goto	u30890
 32521   0108D4                     u30891:
 32522   0108D4  EF6E  F084         	goto	l22489
 32523   0108D8                     u30890:
 32524   0108D8  EFC2  F080         	goto	l22353
 32525   0108DC                     l22489:
 32526                           
 32527                           ; BSR set to: 6
 32528                           ;../fatfs/ff.c: 3567:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 32529   0108DC  EE20 F010          	lfsr	2,16
 32530   0108E0  51AD               	movf	mount_volume@fs& (0+255),w,b
 32531   0108E2  26D9               	addwf	fsr2l,f,c
 32532   0108E4  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32533   0108E6  22DA               	addwfc	fsr2h,f,c
 32534   0108E8  0EFF               	movlw	255
 32535   0108EA  6EDE               	movwf	postinc2,c
 32536   0108EC  0EFF               	movlw	255
 32537   0108EE  6EDE               	movwf	postinc2,c
 32538   0108F0  0EFF               	movlw	255
 32539   0108F2  6EDE               	movwf	postinc2,c
 32540   0108F4  0EFF               	movlw	255
 32541   0108F6  6EDD               	movwf	postdec2,c
 32542   0108F8  52DD               	movf	postdec2,f,c
 32543   0108FA  52DD               	movf	postdec2,f,c
 32544   0108FC  EE10 F00C          	lfsr	1,12
 32545   010900  51AD               	movf	mount_volume@fs& (0+255),w,b
 32546   010902  26E1               	addwf	fsr1l,f,c
 32547   010904  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32548   010906  22E2               	addwfc	fsr1h,f,c
 32549   010908  C4DE F4E6          	movff	postinc2,postinc1
 32550   01090C  C4DE F4E6          	movff	postinc2,postinc1
 32551   010910  C4DE F4E6          	movff	postinc2,postinc1
 32552   010914  C4DE F4E6          	movff	postinc2,postinc1
 32553   010918                     
 32554                           ; BSR set to: 6
 32555                           ;../fatfs/ff.c: 3568:   fs->fsi_flag = 0x80;
 32556   010918  EE20 F005          	lfsr	2,5
 32557   01091C  51AD               	movf	mount_volume@fs& (0+255),w,b
 32558   01091E  26D9               	addwf	fsr2l,f,c
 32559   010920  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32560   010922  22DA               	addwfc	fsr2h,f,c
 32561   010924  0E80               	movlw	128
 32562   010926  6EDF               	movwf	indf2,c
 32563   010928                     
 32564                           ; BSR set to: 6
 32565                           ;../fatfs/ff.c: 3570:   if (fmt == 3
 32566   010928  0E03               	movlw	3
 32567   01092A  19AB               	xorwf	mount_volume@fmt& (0+255),w,b
 32568   01092C  11AC               	iorwf	(mount_volume@fmt+1)& (0+255),w,b
 32569   01092E  A4D8               	btfss	status,2,c
 32570   010930  EF9C  F084         	goto	u30901
 32571   010934  EF9E  F084         	goto	u30900
 32572   010938                     u30901:
 32573   010938  EF4B  F085         	goto	l22509
 32574   01093C                     u30900:
 32575   01093C                     
 32576                           ; BSR set to: 6
 32577   01093C  0E64               	movlw	100
 32578   01093E  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32579   010940  6E04               	movwf	ld_word@ptr^(0+1280),c
 32580   010942  0E00               	movlw	0
 32581   010944  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32582   010946  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32583   010948  EC4C  F0FF         	call	_ld_word	;wreg free
 32584   01094C  0404               	decf	?_ld_word^(0+1280),w,c
 32585   01094E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 32586   010950  A4D8               	btfss	status,2,c
 32587   010952  EFAD  F084         	goto	u30911
 32588   010956  EFAF  F084         	goto	u30910
 32589   01095A                     u30911:
 32590   01095A  EF4B  F085         	goto	l22509
 32591   01095E                     u30910:
 32592   01095E  C6AD  F61A         	movff	mount_volume@fs,move_window@fs
 32593   010962  C6AE  F61B         	movff	mount_volume@fs+1,move_window@fs+1
 32594   010966  0E01               	movlw	1
 32595   010968  0106               	movlb	6	; () banked
 32596   01096A  259E               	addwf	mount_volume@bsect& (0+255),w,b
 32597   01096C  6F1C               	movwf	move_window@sect& (0+255),b
 32598   01096E  0E00               	movlw	0
 32599   010970  219F               	addwfc	(mount_volume@bsect+1)& (0+255),w,b
 32600   010972  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 32601   010974  0E00               	movlw	0
 32602   010976  21A0               	addwfc	(mount_volume@bsect+2)& (0+255),w,b
 32603   010978  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 32604   01097A  0E00               	movlw	0
 32605   01097C  21A1               	addwfc	(mount_volume@bsect+3)& (0+255),w,b
 32606   01097E  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 32607   010980  ECAB  F0EF         	call	_move_window	;wreg free
 32608   010984  0900               	iorlw	0
 32609   010986  A4D8               	btfss	status,2,c
 32610   010988  EFC8  F084         	goto	u30921
 32611   01098C  EFCA  F084         	goto	u30920
 32612   010990                     u30921:
 32613   010990  EF4B  F085         	goto	l22509
 32614   010994                     u30920:
 32615   010994                     
 32616                           ;../fatfs/ff.c: 3573:   {;../fatfs/ff.c: 3574:    fs->fsi_flag = 0;
 32617   010994  0106               	movlb	6	; () banked
 32618   010996  EE20 F005          	lfsr	2,5
 32619   01099A  51AD               	movf	mount_volume@fs& (0+255),w,b
 32620   01099C  26D9               	addwf	fsr2l,f,c
 32621   01099E  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32622   0109A0  22DA               	addwfc	fsr2h,f,c
 32623   0109A2  6ADF               	clrf	indf2,c
 32624   0109A4                     
 32625                           ; BSR set to: 6
 32626                           ;../fatfs/ff.c: 3575:    if (ld_word(fs->win + 510) == 0xAA55
 32627   0109A4  0E32               	movlw	50
 32628   0109A6  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32629   0109A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 32630   0109AA  0E02               	movlw	2
 32631   0109AC  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32632   0109AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 32633   0109B0  EC4C  F0FF         	call	_ld_word	;wreg free
 32634   0109B4  0E55               	movlw	85
 32635   0109B6  1804               	xorwf	?_ld_word^(0+1280),w,c
 32636   0109B8  E107               	bnz	u30931
 32637   0109BA  0EAA               	movlw	170
 32638   0109BC  1805               	xorwf	(?_ld_word+1)^(0+1280),w,c
 32639   0109BE  A4D8               	btfss	status,2,c
 32640   0109C0  EFE4  F084         	goto	u30931
 32641   0109C4  EFE6  F084         	goto	u30930
 32642   0109C8                     u30931:
 32643   0109C8  EF4B  F085         	goto	l22509
 32644   0109CC                     u30930:
 32645   0109CC  0E34               	movlw	52
 32646   0109CE  0106               	movlb	6	; () banked
 32647   0109D0  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32648   0109D2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 32649   0109D4  0E00               	movlw	0
 32650   0109D6  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32651   0109D8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 32652   0109DA  ECC7  F0F2         	call	_ld_dword	;wreg free
 32653   0109DE  0E52               	movlw	82
 32654   0109E0  1804               	xorwf	?_ld_dword^(0+1280),w,c
 32655   0109E2  E10D               	bnz	u30941
 32656   0109E4  0E52               	movlw	82
 32657   0109E6  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 32658   0109E8  E10A               	bnz	u30941
 32659   0109EA  0E61               	movlw	97
 32660   0109EC  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 32661   0109EE  E107               	bnz	u30941
 32662   0109F0  0E41               	movlw	65
 32663   0109F2  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 32664   0109F4  A4D8               	btfss	status,2,c
 32665   0109F6  EFFF  F084         	goto	u30941
 32666   0109FA  EF01  F085         	goto	u30940
 32667   0109FE                     u30941:
 32668   0109FE  EF4B  F085         	goto	l22509
 32669   010A02                     u30940:
 32670   010A02  0E18               	movlw	24
 32671   010A04  0106               	movlb	6	; () banked
 32672   010A06  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32673   010A08  6E04               	movwf	ld_dword@ptr^(0+1280),c
 32674   010A0A  0E02               	movlw	2
 32675   010A0C  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32676   010A0E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 32677   010A10  ECC7  F0F2         	call	_ld_dword	;wreg free
 32678   010A14  0E72               	movlw	114
 32679   010A16  1804               	xorwf	?_ld_dword^(0+1280),w,c
 32680   010A18  E10D               	bnz	u30951
 32681   010A1A  0E72               	movlw	114
 32682   010A1C  1805               	xorwf	(?_ld_dword+1)^(0+1280),w,c
 32683   010A1E  E10A               	bnz	u30951
 32684   010A20  0E41               	movlw	65
 32685   010A22  1806               	xorwf	(?_ld_dword+2)^(0+1280),w,c
 32686   010A24  E107               	bnz	u30951
 32687   010A26  0E61               	movlw	97
 32688   010A28  1807               	xorwf	(?_ld_dword+3)^(0+1280),w,c
 32689   010A2A  A4D8               	btfss	status,2,c
 32690   010A2C  EF1A  F085         	goto	u30951
 32691   010A30  EF1C  F085         	goto	u30950
 32692   010A34                     u30951:
 32693   010A34  EF4B  F085         	goto	l22509
 32694   010A38                     u30950:
 32695   010A38                     
 32696                           ;../fatfs/ff.c: 3578:    {;../fatfs/ff.c: 3580:     fs->free_clst = ld_dword(fs->win + 4
      +                          88);
 32697   010A38  0E1C               	movlw	28
 32698   010A3A  0106               	movlb	6	; () banked
 32699   010A3C  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32700   010A3E  6E04               	movwf	ld_dword@ptr^(0+1280),c
 32701   010A40  0E02               	movlw	2
 32702   010A42  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32703   010A44  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 32704   010A46  ECC7  F0F2         	call	_ld_dword	;wreg free
 32705   010A4A  0106               	movlb	6	; () banked
 32706   010A4C  EE20 F010          	lfsr	2,16
 32707   010A50  51AD               	movf	mount_volume@fs& (0+255),w,b
 32708   010A52  26D9               	addwf	fsr2l,f,c
 32709   010A54  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32710   010A56  22DA               	addwfc	fsr2h,f,c
 32711   010A58  C504  F4DE         	movff	?_ld_dword,postinc2
 32712   010A5C  C505  F4DE         	movff	?_ld_dword+1,postinc2
 32713   010A60  C506  F4DE         	movff	?_ld_dword+2,postinc2
 32714   010A64  C507  F4DE         	movff	?_ld_dword+3,postinc2
 32715                           
 32716                           ;../fatfs/ff.c: 3583:     fs->last_clst = ld_dword(fs->win + 492);
 32717   010A68  0E20               	movlw	32
 32718   010A6A  25AD               	addwf	mount_volume@fs& (0+255),w,b
 32719   010A6C  6E04               	movwf	ld_dword@ptr^(0+1280),c
 32720   010A6E  0E02               	movlw	2
 32721   010A70  21AE               	addwfc	(mount_volume@fs+1)& (0+255),w,b
 32722   010A72  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 32723   010A74  ECC7  F0F2         	call	_ld_dword	;wreg free
 32724   010A78  0106               	movlb	6	; () banked
 32725   010A7A  EE20 F00C          	lfsr	2,12
 32726   010A7E  51AD               	movf	mount_volume@fs& (0+255),w,b
 32727   010A80  26D9               	addwf	fsr2l,f,c
 32728   010A82  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32729   010A84  22DA               	addwfc	fsr2h,f,c
 32730   010A86  C504  F4DE         	movff	?_ld_dword,postinc2
 32731   010A8A  C505  F4DE         	movff	?_ld_dword+1,postinc2
 32732   010A8E  C506  F4DE         	movff	?_ld_dword+2,postinc2
 32733   010A92  C507  F4DE         	movff	?_ld_dword+3,postinc2
 32734   010A96                     l22509:
 32735                           
 32736                           ;../fatfs/ff.c: 3589:  };../fatfs/ff.c: 3591:  fs->fs_type = (BYTE)fmt;
 32737   010A96  C6AD  F4D9         	movff	mount_volume@fs,fsr2l
 32738   010A9A  C6AE  F4DA         	movff	mount_volume@fs+1,fsr2h
 32739   010A9E  C6AB  F4DF         	movff	mount_volume@fmt,indf2
 32740   010AA2                     
 32741                           ;../fatfs/ff.c: 3592:  fs->id = ++Fsid;
 32742   010AA2  0107               	movlb	7	; () banked
 32743   010AA4  4BC3               	infsnz	_Fsid& (0+255),f,b
 32744   010AA6  2BC4               	incf	(_Fsid+1)& (0+255),f,b
 32745   010AA8  0106               	movlb	6	; () banked
 32746   010AAA  EE20 F006          	lfsr	2,6
 32747   010AAE  51AD               	movf	mount_volume@fs& (0+255),w,b
 32748   010AB0  26D9               	addwf	fsr2l,f,c
 32749   010AB2  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32750   010AB4  22DA               	addwfc	fsr2h,f,c
 32751   010AB6  C7C3  F4DE         	movff	_Fsid,postinc2
 32752   010ABA  C7C4  F4DD         	movff	_Fsid+1,postdec2
 32753   010ABE                     
 32754                           ; BSR set to: 6
 32755                           ;../fatfs/ff.c: 3600:  fs->cdir = 0;
 32756   010ABE  EE20 F014          	lfsr	2,20
 32757   010AC2  51AD               	movf	mount_volume@fs& (0+255),w,b
 32758   010AC4  26D9               	addwf	fsr2l,f,c
 32759   010AC6  51AE               	movf	(mount_volume@fs+1)& (0+255),w,b
 32760   010AC8  22DA               	addwfc	fsr2h,f,c
 32761   010ACA  6ADE               	clrf	postinc2,c
 32762   010ACC  6ADE               	clrf	postinc2,c
 32763   010ACE  6ADE               	clrf	postinc2,c
 32764   010AD0  6ADD               	clrf	postdec2,c
 32765   010AD2  EF6D  F080         	goto	l22321
 32766   010AD6                     l573:
 32767   010AD6  0012               	return		;funcret
 32768   010AD8                     __end_of_mount_volume:
 32769                           	callstack 0
 32770                           
 32771 ;; *************** function _get_ldnumber *****************
 32772 ;; Defined at:
 32773 ;;		line 3139 in file "../fatfs/ff.c"
 32774 ;; Parameters:    Size  Location     Type
 32775 ;;  path            2    3[COMRAM] PTR PTR const unsigned c
 32776 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 32777 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), 
 32778 ;;		 -> f_chdir@path(2), f_chdrive@path(2), f_open@path(2), f_mount@path(2), 
 32779 ;;		 -> f_mount@rp(2), 
 32780 ;; Auto vars:     Size  Location     Type
 32781 ;;  tp              2   14[COMRAM] PTR const unsigned char 
 32782 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 32783 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 32784 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 32785 ;;  vol             2   12[COMRAM] int 
 32786 ;;  tt              2   10[COMRAM] PTR const unsigned char 
 32787 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 32788 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 32789 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 32790 ;;  i               2    7[COMRAM] int 
 32791 ;;  tc              1    9[COMRAM] unsigned char 
 32792 ;; Return value:  Size  Location     Type
 32793 ;;                  2    3[COMRAM] int 
 32794 ;; Registers used:
 32795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32796 ;; Tracked objects:
 32797 ;;		On entry : 0/0
 32798 ;;		On exit  : 0/0
 32799 ;;		Unchanged: 0/0
 32800 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32802 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32804 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32805 ;;Total ram usage:       13 bytes
 32806 ;; Hardware stack levels used: 1
 32807 ;; Hardware stack levels required when called: 1
 32808 ;; This function calls:
 32809 ;;		Nothing
 32810 ;; This function is called by:
 32811 ;;		_mount_volume
 32812 ;;		_f_mount
 32813 ;;		_f_chdrive
 32814 ;;		_f_rename
 32815 ;; This function uses a non-reentrant model
 32816 ;;
 32817                           
 32818                           	psect	text75
 32819   01B304                     __ptext75:
 32820                           	callstack 0
 32821   01B304                     _get_ldnumber:
 32822                           	callstack 117
 32823   01B304                     
 32824                           ;../fatfs/ff.c: 3140:  const TCHAR** path;../fatfs/ff.c: 3142: {;../fatfs/ff.c: 3143:  c
      +                          onst TCHAR *tp;;../fatfs/ff.c: 3144:  const TCHAR *tt;;../fatfs/ff.c: 3145:  TCHAR tc;;.
      +                          ./fatfs/ff.c: 3146:  int i;;../fatfs/ff.c: 3147:  int vol = -1;
 32825   01B304  680D               	setf	get_ldnumber@vol^(0+1280),c
 32826   01B306  680E               	setf	(get_ldnumber@vol+1)^(0+1280),c
 32827   01B308                     
 32828                           ;../fatfs/ff.c: 3153:  tt = tp = *path;
 32829   01B308  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 32830   01B30C  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 32831   01B310  C4DE F50F          	movff	postinc2,get_ldnumber@tp
 32832   01B314  C4DD F510          	movff	postdec2,get_ldnumber@tp+1
 32833   01B318  C50F  F50B         	movff	get_ldnumber@tp,get_ldnumber@tt
 32834   01B31C  C510  F50C         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 32835   01B320                     
 32836                           ;../fatfs/ff.c: 3154:  if (!tp) return vol;
 32837   01B320  500F               	movf	get_ldnumber@tp^(0+1280),w,c
 32838   01B322  1010               	iorwf	(get_ldnumber@tp+1)^(0+1280),w,c
 32839   01B324  A4D8               	btfss	status,2,c
 32840   01B326  EF97  F0D9         	goto	u29951
 32841   01B32A  EF99  F0D9         	goto	u29950
 32842   01B32E                     u29951:
 32843   01B32E  EF9D  F0D9         	goto	l22009
 32844   01B332                     u29950:
 32845   01B332  6804               	setf	?_get_ldnumber^(0+1280),c
 32846   01B334  6805               	setf	(?_get_ldnumber+1)^(0+1280),c
 32847   01B336  EF53  F0DA         	goto	l522
 32848   01B33A                     l22009:
 32849                           
 32850                           ;../fatfs/ff.c: 3156:   tc = *tt++;
 32851   01B33A  C50B  F4F6         	movff	get_ldnumber@tt,tblptrl
 32852   01B33E  C50C  F4F7         	movff	get_ldnumber@tt+1,tblptrh
 32853   01B342  0E00               	movlw	low (__mediumconst shr (0+16))
 32854   01B344  6EF8               	movwf	tblptru,c
 32855   01B346  0E3F               	movlw	(high __ramtop+-1)
 32856   01B348  64F7               	cpfsgt	tblptrh,c
 32857   01B34A  D003               	bra	u29967
 32858   01B34C  0008               	tblrd		*
 32859   01B34E  50F5               	movf	tablat,w,c
 32860   01B350  D005               	bra	u29960
 32861   01B352                     u29967:
 32862   01B352  C4F6 F4E9          	movff	tblptrl,fsr0l
 32863   01B356  C4F7 F4EA          	movff	tblptrh,fsr0h
 32864   01B35A  50EF               	movf	indf0,w,c
 32865   01B35C                     u29960:
 32866   01B35C  6E0A               	movwf	get_ldnumber@tc^(0+1280),c
 32867   01B35E                     
 32868                           ;../fatfs/ff.c: 3157:  } while (!((UINT)(tc) < (0 ? ' ' : '!')) && tc != ':');
 32869   01B35E  4A0B               	infsnz	get_ldnumber@tt^(0+1280),f,c
 32870   01B360  2A0C               	incf	(get_ldnumber@tt+1)^(0+1280),f,c
 32871   01B362  0E20               	movlw	32
 32872   01B364  640A               	cpfsgt	get_ldnumber@tc^(0+1280),c
 32873   01B366  EFB7  F0D9         	goto	u29971
 32874   01B36A  EFB9  F0D9         	goto	u29970
 32875   01B36E                     u29971:
 32876   01B36E  EFC2  F0D9         	goto	l22021
 32877   01B372                     u29970:
 32878   01B372  0E3A               	movlw	58
 32879   01B374  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 32880   01B376  A4D8               	btfss	status,2,c
 32881   01B378  EFC0  F0D9         	goto	u29981
 32882   01B37C  EFC2  F0D9         	goto	u29980
 32883   01B380                     u29981:
 32884   01B380  EF9D  F0D9         	goto	l22009
 32885   01B384                     u29980:
 32886   01B384                     l22021:
 32887                           
 32888                           ;../fatfs/ff.c: 3159:  if (tc == ':') {
 32889   01B384  0E3A               	movlw	58
 32890   01B386  180A               	xorwf	get_ldnumber@tc^(0+1280),w,c
 32891   01B388  A4D8               	btfss	status,2,c
 32892   01B38A  EFC9  F0D9         	goto	u29991
 32893   01B38E  EFCB  F0D9         	goto	u29990
 32894   01B392                     u29991:
 32895   01B392  EF4C  F0DA         	goto	l531
 32896   01B396                     u29990:
 32897   01B396                     
 32898                           ;../fatfs/ff.c: 3160:   i = 1;
 32899   01B396  0E00               	movlw	0
 32900   01B398  6E09               	movwf	(get_ldnumber@i+1)^(0+1280),c
 32901   01B39A  0E01               	movlw	1
 32902   01B39C  6E08               	movwf	get_ldnumber@i^(0+1280),c
 32903   01B39E                     
 32904                           ;../fatfs/ff.c: 3161:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 == tt) {
 32905   01B39E  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 32906   01B3A2  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 32907   01B3A6  0E00               	movlw	low (__mediumconst shr (0+16))
 32908   01B3A8  6EF8               	movwf	tblptru,c
 32909   01B3AA  0E3F               	movlw	(high __ramtop+-1)
 32910   01B3AC  64F7               	cpfsgt	tblptrh,c
 32911   01B3AE  D003               	bra	u30007
 32912   01B3B0  0008               	tblrd		*
 32913   01B3B2  50F5               	movf	tablat,w,c
 32914   01B3B4  D005               	bra	u30000
 32915   01B3B6                     u30007:
 32916   01B3B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 32917   01B3BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 32918   01B3BE  50EF               	movf	indf0,w,c
 32919   01B3C0                     u30000:
 32920   01B3C0  6E06               	movwf	??_get_ldnumber^(0+1280),c
 32921   01B3C2  0E2F               	movlw	47
 32922   01B3C4  6406               	cpfsgt	??_get_ldnumber^(0+1280),c
 32923   01B3C6  EFE7  F0D9         	goto	u30011
 32924   01B3CA  EFE9  F0D9         	goto	u30010
 32925   01B3CE                     u30011:
 32926   01B3CE  EF2D  F0DA         	goto	l22033
 32927   01B3D2                     u30010:
 32928   01B3D2  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 32929   01B3D6  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 32930   01B3DA  0E00               	movlw	low (__mediumconst shr (0+16))
 32931   01B3DC  6EF8               	movwf	tblptru,c
 32932   01B3DE  0E3F               	movlw	(high __ramtop+-1)
 32933   01B3E0  64F7               	cpfsgt	tblptrh,c
 32934   01B3E2  D003               	bra	u30027
 32935   01B3E4  0008               	tblrd		*
 32936   01B3E6  50F5               	movf	tablat,w,c
 32937   01B3E8  D005               	bra	u30020
 32938   01B3EA                     u30027:
 32939   01B3EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 32940   01B3EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 32941   01B3F2  50EF               	movf	indf0,w,c
 32942   01B3F4                     u30020:
 32943   01B3F4  6E06               	movwf	??_get_ldnumber^(0+1280),c
 32944   01B3F6  0E3A               	movlw	58
 32945   01B3F8  6006               	cpfslt	??_get_ldnumber^(0+1280),c
 32946   01B3FA  EF01  F0DA         	goto	u30031
 32947   01B3FE  EF03  F0DA         	goto	u30030
 32948   01B402                     u30031:
 32949   01B402  EF2D  F0DA         	goto	l22033
 32950   01B406                     u30030:
 32951   01B406  0E02               	movlw	2
 32952   01B408  240F               	addwf	get_ldnumber@tp^(0+1280),w,c
 32953   01B40A  6E06               	movwf	??_get_ldnumber^(0+1280),c
 32954   01B40C  0E00               	movlw	0
 32955   01B40E  2010               	addwfc	(get_ldnumber@tp+1)^(0+1280),w,c
 32956   01B410  6E07               	movwf	(??_get_ldnumber+1)^(0+1280),c
 32957   01B412  500B               	movf	get_ldnumber@tt^(0+1280),w,c
 32958   01B414  1806               	xorwf	??_get_ldnumber^(0+1280),w,c
 32959   01B416  E107               	bnz	u30041
 32960   01B418  500C               	movf	(get_ldnumber@tt+1)^(0+1280),w,c
 32961   01B41A  1807               	xorwf	(??_get_ldnumber+1)^(0+1280),w,c
 32962   01B41C  A4D8               	btfss	status,2,c
 32963   01B41E  EF13  F0DA         	goto	u30041
 32964   01B422  EF15  F0DA         	goto	u30040
 32965   01B426                     u30041:
 32966   01B426  EF2D  F0DA         	goto	l22033
 32967   01B42A                     u30040:
 32968   01B42A                     
 32969                           ;../fatfs/ff.c: 3162:    i = (int)*tp - '0';
 32970   01B42A  C50F  F4F6         	movff	get_ldnumber@tp,tblptrl
 32971   01B42E  C510  F4F7         	movff	get_ldnumber@tp+1,tblptrh
 32972   01B432  0E00               	movlw	low (__mediumconst shr (0+16))
 32973   01B434  6EF8               	movwf	tblptru,c
 32974   01B436  0E3F               	movlw	(high __ramtop+-1)
 32975   01B438  64F7               	cpfsgt	tblptrh,c
 32976   01B43A  D003               	bra	u30057
 32977   01B43C  0008               	tblrd		*
 32978   01B43E  50F5               	movf	tablat,w,c
 32979   01B440  D005               	bra	u30050
 32980   01B442                     u30057:
 32981   01B442  C4F6 F4E9          	movff	tblptrl,fsr0l
 32982   01B446  C4F7 F4EA          	movff	tblptrh,fsr0h
 32983   01B44A  50EF               	movf	indf0,w,c
 32984   01B44C                     u30050:
 32985   01B44C  6E06               	movwf	??_get_ldnumber^(0+1280),c
 32986   01B44E  0ED0               	movlw	208
 32987   01B450  2406               	addwf	??_get_ldnumber^(0+1280),w,c
 32988   01B452  6E08               	movwf	get_ldnumber@i^(0+1280),c
 32989   01B454  6A09               	clrf	(get_ldnumber@i+1)^(0+1280),c
 32990   01B456  0EFF               	movlw	255
 32991   01B458  2209               	addwfc	(get_ldnumber@i+1)^(0+1280),f,c
 32992   01B45A                     l22033:
 32993                           
 32994                           ;../fatfs/ff.c: 3177:   if (i < 1) {
 32995   01B45A  BE09               	btfsc	(get_ldnumber@i+1)^(0+1280),7,c
 32996   01B45C  EF3A  F0DA         	goto	u30060
 32997   01B460  5009               	movf	(get_ldnumber@i+1)^(0+1280),w,c
 32998   01B462  E106               	bnz	u30061
 32999   01B464  0408               	decf	get_ldnumber@i^(0+1280),w,c
 33000   01B466  B0D8               	btfsc	status,0,c
 33001   01B468  EF38  F0DA         	goto	u30061
 33002   01B46C  EF3A  F0DA         	goto	u30060
 33003   01B470                     u30061:
 33004   01B470  EF46  F0DA         	goto	l22039
 33005   01B474                     u30060:
 33006   01B474                     
 33007                           ;../fatfs/ff.c: 3178:    vol = i;
 33008   01B474  C508  F50D         	movff	get_ldnumber@i,get_ldnumber@vol
 33009   01B478  C509  F50E         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 33010   01B47C                     
 33011                           ;../fatfs/ff.c: 3179:    *path = tt;
 33012   01B47C  C504  F4D9         	movff	get_ldnumber@path,fsr2l
 33013   01B480  C505  F4DA         	movff	get_ldnumber@path+1,fsr2h
 33014   01B484  C50B  F4DE         	movff	get_ldnumber@tt,postinc2
 33015   01B488  C50C  F4DD         	movff	get_ldnumber@tt+1,postdec2
 33016   01B48C                     l22039:
 33017                           
 33018                           ;../fatfs/ff.c: 3181:   return vol;
 33019   01B48C  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 33020   01B490  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 33021   01B494  EF53  F0DA         	goto	l522
 33022   01B498                     l531:
 33023                           
 33024                           ;../fatfs/ff.c: 3204:  vol = CurrVol;
 33025   01B498  C7CD  F50D         	movff	_CurrVol,get_ldnumber@vol
 33026   01B49C  6A0E               	clrf	(get_ldnumber@vol+1)^(0+1280),c
 33027                           
 33028                           ;../fatfs/ff.c: 3208:  return vol;
 33029   01B49E  C50D  F504         	movff	get_ldnumber@vol,?_get_ldnumber
 33030   01B4A2  C50E  F505         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 33031   01B4A6                     l522:
 33032   01B4A6  0012               	return		;funcret
 33033   01B4A8                     __end_of_get_ldnumber:
 33034                           	callstack 0
 33035                           
 33036 ;; *************** function _find_volume *****************
 33037 ;; Defined at:
 33038 ;;		line 3332 in file "../fatfs/ff.c"
 33039 ;; Parameters:    Size  Location     Type
 33040 ;;  fs              2   50[BANK6 ] PTR struct .
 33041 ;;		 -> fs(564), NULL(0), 
 33042 ;;  part            2   52[BANK6 ] unsigned int 
 33043 ;; Auto vars:     Size  Location     Type
 33044 ;;  mbr_pt         16   60[BANK6 ] unsigned long [4]
 33045 ;;  i               2   78[BANK6 ] unsigned int 
 33046 ;;  fmt             2   76[BANK6 ] unsigned int 
 33047 ;; Return value:  Size  Location     Type
 33048 ;;                  2   50[BANK6 ] unsigned int 
 33049 ;; Registers used:
 33050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33051 ;; Tracked objects:
 33052 ;;		On entry : 0/0
 33053 ;;		On exit  : 0/0
 33054 ;;		Unchanged: 0/0
 33055 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33056 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33057 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33058 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33059 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33060 ;;Total ram usage:       30 bytes
 33061 ;; Hardware stack levels used: 1
 33062 ;; Hardware stack levels required when called: 15
 33063 ;; This function calls:
 33064 ;;		_check_fs
 33065 ;;		_ld_dword
 33066 ;; This function is called by:
 33067 ;;		_mount_volume
 33068 ;; This function uses a non-reentrant model
 33069 ;;
 33070                           
 33071                           	psect	text76
 33072   01A50E                     __ptext76:
 33073                           	callstack 0
 33074   01A50E                     _find_volume:
 33075                           	callstack 103
 33076   01A50E                     
 33077                           ;../fatfs/ff.c: 3333:  FATFS* fs,;../fatfs/ff.c: 3334:  UINT part;../fatfs/ff.c: 3336: {
      +                          ;../fatfs/ff.c: 3337:  UINT fmt, i;;../fatfs/ff.c: 3338:  DWORD mbr_pt[4];;../fatfs/ff.c
      +                          : 3341:  fmt = check_fs(fs, 0);
 33078   01A50E  C632  F624         	movff	find_volume@fs,check_fs@fs
 33079   01A512  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 33080   01A516  0E00               	movlw	0
 33081   01A518  0106               	movlb	6	; () banked
 33082   01A51A  6F26               	movwf	check_fs@sect& (0+255),b
 33083   01A51C  0E00               	movlw	0
 33084   01A51E  6F27               	movwf	(check_fs@sect+1)& (0+255),b
 33085   01A520  0E00               	movlw	0
 33086   01A522  6F28               	movwf	(check_fs@sect+2)& (0+255),b
 33087   01A524  0E00               	movlw	0
 33088   01A526  6F29               	movwf	(check_fs@sect+3)& (0+255),b
 33089   01A528  ECEB  F0C2         	call	_check_fs	;wreg free
 33090   01A52C  C624  F64C         	movff	?_check_fs,find_volume@fmt
 33091   01A530  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 33092   01A534                     
 33093                           ;../fatfs/ff.c: 3342:  if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;
 33094   01A534  0E02               	movlw	2
 33095   01A536  0106               	movlb	6	; () banked
 33096   01A538  194C               	xorwf	find_volume@fmt& (0+255),w,b
 33097   01A53A  114D               	iorwf	(find_volume@fmt+1)& (0+255),w,b
 33098   01A53C  B4D8               	btfsc	status,2,c
 33099   01A53E  EFA3  F0D2         	goto	u30071
 33100   01A542  EFA5  F0D2         	goto	u30070
 33101   01A546                     u30071:
 33102   01A546  EFBF  F0D2         	goto	l22057
 33103   01A54A                     u30070:
 33104   01A54A                     
 33105                           ; BSR set to: 6
 33106   01A54A  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 33107   01A54C  E107               	bnz	u30081
 33108   01A54E  0E03               	movlw	3
 33109   01A550  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 33110   01A552  B0D8               	btfsc	status,0,c
 33111   01A554  EFAE  F0D2         	goto	u30081
 33112   01A558  EFB0  F0D2         	goto	u30080
 33113   01A55C                     u30081:
 33114   01A55C  EFB9  F0D2         	goto	l553
 33115   01A560                     u30080:
 33116   01A560                     
 33117                           ; BSR set to: 6
 33118   01A560  5134               	movf	find_volume@part& (0+255),w,b
 33119   01A562  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 33120   01A564  A4D8               	btfss	status,2,c
 33121   01A566  EFB7  F0D2         	goto	u30091
 33122   01A56A  EFB9  F0D2         	goto	u30090
 33123   01A56E                     u30091:
 33124   01A56E  EFBF  F0D2         	goto	l22057
 33125   01A572                     u30090:
 33126   01A572                     l553:
 33127                           
 33128                           ; BSR set to: 6
 33129   01A572  C64C  F632         	movff	find_volume@fmt,?_find_volume
 33130   01A576  C64D  F633         	movff	find_volume@fmt+1,?_find_volume+1
 33131   01A57A  EF80  F0D3         	goto	l554
 33132   01A57E                     l22057:
 33133                           
 33134                           ; BSR set to: 6
 33135                           ;../fatfs/ff.c: 3369:  for (i = 0; i < 4; i++) {
 33136   01A57E  0E00               	movlw	0
 33137   01A580  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 33138   01A582  0E00               	movlw	0
 33139   01A584  6F4E               	movwf	find_volume@i& (0+255),b
 33140   01A586                     l22063:
 33141                           
 33142                           ; BSR set to: 6
 33143                           ;../fatfs/ff.c: 3370:   mbr_pt[i] = ld_dword(fs->win + 446 + i * 16 + 8);
 33144   01A586  C64E  F636         	movff	find_volume@i,??_find_volume
 33145   01A58A  C64F  F637         	movff	find_volume@i+1,??_find_volume+1
 33146   01A58E  3B36               	swapf	??_find_volume& (0+255),f,b
 33147   01A590  3B37               	swapf	(??_find_volume+1)& (0+255),f,b
 33148   01A592  0EF0               	movlw	240
 33149   01A594  1737               	andwf	(??_find_volume+1)& (0+255),f,b
 33150   01A596  5136               	movf	??_find_volume& (0+255),w,b
 33151   01A598  0B0F               	andlw	15
 33152   01A59A  1337               	iorwf	(??_find_volume+1)& (0+255),f,b
 33153   01A59C  0EF0               	movlw	240
 33154   01A59E  1736               	andwf	??_find_volume& (0+255),f,b
 33155   01A5A0  5136               	movf	??_find_volume& (0+255),w,b
 33156   01A5A2  2532               	addwf	find_volume@fs& (0+255),w,b
 33157   01A5A4  6F38               	movwf	(??_find_volume+2)& (0+255),b
 33158   01A5A6  5137               	movf	(??_find_volume+1)& (0+255),w,b
 33159   01A5A8  2133               	addwfc	(find_volume@fs+1)& (0+255),w,b
 33160   01A5AA  6F39               	movwf	(??_find_volume+3)& (0+255),b
 33161   01A5AC  0EFA               	movlw	250
 33162   01A5AE  2538               	addwf	(??_find_volume+2)& (0+255),w,b
 33163   01A5B0  6E04               	movwf	ld_dword@ptr^(0+1280),c
 33164   01A5B2  0E01               	movlw	1
 33165   01A5B4  2139               	addwfc	(??_find_volume+3)& (0+255),w,b
 33166   01A5B6  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 33167   01A5B8  ECC7  F0F2         	call	_ld_dword	;wreg free
 33168   01A5BC  0E3C               	movlw	low find_volume@mbr_pt
 33169   01A5BE  0106               	movlb	6	; () banked
 33170   01A5C0  6F3A               	movwf	(??_find_volume+4)& (0+255),b
 33171   01A5C2  0E06               	movlw	high find_volume@mbr_pt
 33172   01A5C4  6F3B               	movwf	(??_find_volume+5)& (0+255),b
 33173   01A5C6  90D8               	bcf	status,0,c
 33174   01A5C8  354E               	rlcf	find_volume@i& (0+255),w,b
 33175   01A5CA  6ED9               	movwf	fsr2l,c
 33176   01A5CC  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 33177   01A5CE  6EDA               	movwf	fsr2h,c
 33178   01A5D0  90D8               	bcf	status,0,c
 33179   01A5D2  36D9               	rlcf	fsr2l,f,c
 33180   01A5D4  36DA               	rlcf	fsr2h,f,c
 33181   01A5D6  513A               	movf	(??_find_volume+4)& (0+255),w,b
 33182   01A5D8  26D9               	addwf	fsr2l,f,c
 33183   01A5DA  513B               	movf	(??_find_volume+5)& (0+255),w,b
 33184   01A5DC  22DA               	addwfc	fsr2h,f,c
 33185   01A5DE  C504  F4DE         	movff	?_ld_dword,postinc2
 33186   01A5E2  C505  F4DE         	movff	?_ld_dword+1,postinc2
 33187   01A5E6  C506  F4DE         	movff	?_ld_dword+2,postinc2
 33188   01A5EA  C507  F4DE         	movff	?_ld_dword+3,postinc2
 33189   01A5EE                     
 33190                           ; BSR set to: 6
 33191                           ;../fatfs/ff.c: 3371:  }
 33192   01A5EE  4B4E               	infsnz	find_volume@i& (0+255),f,b
 33193   01A5F0  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 33194   01A5F2                     
 33195                           ; BSR set to: 6
 33196   01A5F2  514F               	movf	(find_volume@i+1)& (0+255),w,b
 33197   01A5F4  E109               	bnz	u30100
 33198   01A5F6  0E04               	movlw	4
 33199   01A5F8  5D4E               	subwf	find_volume@i& (0+255),w,b
 33200   01A5FA  A0D8               	btfss	status,0,c
 33201   01A5FC  EF02  F0D3         	goto	u30101
 33202   01A600  EF04  F0D3         	goto	u30100
 33203   01A604                     u30101:
 33204   01A604  EFC3  F0D2         	goto	l22063
 33205   01A608                     u30100:
 33206   01A608                     
 33207                           ; BSR set to: 6
 33208                           ;../fatfs/ff.c: 3372:  i = part ? part - 1 : 0;
 33209   01A608  5134               	movf	find_volume@part& (0+255),w,b
 33210   01A60A  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 33211   01A60C  A4D8               	btfss	status,2,c
 33212   01A60E  EF0B  F0D3         	goto	u30111
 33213   01A612  EF0D  F0D3         	goto	u30110
 33214   01A616                     u30111:
 33215   01A616  EF13  F0D3         	goto	l22073
 33216   01A61A                     u30110:
 33217   01A61A                     
 33218                           ; BSR set to: 6
 33219   01A61A  0E00               	movlw	0
 33220   01A61C  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 33221   01A61E  0E00               	movlw	0
 33222   01A620  6F4E               	movwf	find_volume@i& (0+255),b
 33223   01A622  EF19  F0D3         	goto	l22075
 33224   01A626                     l22073:
 33225                           
 33226                           ; BSR set to: 6
 33227   01A626  0EFF               	movlw	255
 33228   01A628  2534               	addwf	find_volume@part& (0+255),w,b
 33229   01A62A  6F4E               	movwf	find_volume@i& (0+255),b
 33230   01A62C  0EFF               	movlw	255
 33231   01A62E  2135               	addwfc	(find_volume@part+1)& (0+255),w,b
 33232   01A630  6F4F               	movwf	(find_volume@i+1)& (0+255),b
 33233   01A632                     l22075:
 33234                           
 33235                           ; BSR set to: 6
 33236                           ;../fatfs/ff.c: 3374:   fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;
 33237   01A632  0E3C               	movlw	low find_volume@mbr_pt
 33238   01A634  6F36               	movwf	??_find_volume& (0+255),b
 33239   01A636  0E06               	movlw	high find_volume@mbr_pt
 33240   01A638  6F37               	movwf	(??_find_volume+1)& (0+255),b
 33241   01A63A  90D8               	bcf	status,0,c
 33242   01A63C  354E               	rlcf	find_volume@i& (0+255),w,b
 33243   01A63E  6ED9               	movwf	fsr2l,c
 33244   01A640  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 33245   01A642  6EDA               	movwf	fsr2h,c
 33246   01A644  90D8               	bcf	status,0,c
 33247   01A646  36D9               	rlcf	fsr2l,f,c
 33248   01A648  36DA               	rlcf	fsr2h,f,c
 33249   01A64A  5136               	movf	??_find_volume& (0+255),w,b
 33250   01A64C  26D9               	addwf	fsr2l,f,c
 33251   01A64E  5137               	movf	(??_find_volume+1)& (0+255),w,b
 33252   01A650  22DA               	addwfc	fsr2h,f,c
 33253   01A652  50DE               	movf	postinc2,w,c
 33254   01A654  10DE               	iorwf	postinc2,w,c
 33255   01A656  10DE               	iorwf	postinc2,w,c
 33256   01A658  10DE               	iorwf	postinc2,w,c
 33257   01A65A  A4D8               	btfss	status,2,c
 33258   01A65C  EF32  F0D3         	goto	u30121
 33259   01A660  EF34  F0D3         	goto	u30120
 33260   01A664                     u30121:
 33261   01A664  EF3A  F0D3         	goto	l22079
 33262   01A668                     u30120:
 33263   01A668                     
 33264                           ; BSR set to: 6
 33265   01A668  0E00               	movlw	0
 33266   01A66A  6F4D               	movwf	(find_volume@fmt+1)& (0+255),b
 33267   01A66C  0E03               	movlw	3
 33268   01A66E  6F4C               	movwf	find_volume@fmt& (0+255),b
 33269   01A670  EF5C  F0D3         	goto	l22081
 33270   01A674                     l22079:
 33271                           
 33272                           ; BSR set to: 6
 33273   01A674  C632  F624         	movff	find_volume@fs,check_fs@fs
 33274   01A678  C633  F625         	movff	find_volume@fs+1,check_fs@fs+1
 33275   01A67C  0E3C               	movlw	low find_volume@mbr_pt
 33276   01A67E  6F36               	movwf	??_find_volume& (0+255),b
 33277   01A680  0E06               	movlw	high find_volume@mbr_pt
 33278   01A682  6F37               	movwf	(??_find_volume+1)& (0+255),b
 33279   01A684  90D8               	bcf	status,0,c
 33280   01A686  354E               	rlcf	find_volume@i& (0+255),w,b
 33281   01A688  6ED9               	movwf	fsr2l,c
 33282   01A68A  354F               	rlcf	(find_volume@i+1)& (0+255),w,b
 33283   01A68C  6EDA               	movwf	fsr2h,c
 33284   01A68E  90D8               	bcf	status,0,c
 33285   01A690  36D9               	rlcf	fsr2l,f,c
 33286   01A692  36DA               	rlcf	fsr2h,f,c
 33287   01A694  5136               	movf	??_find_volume& (0+255),w,b
 33288   01A696  26D9               	addwf	fsr2l,f,c
 33289   01A698  5137               	movf	(??_find_volume+1)& (0+255),w,b
 33290   01A69A  22DA               	addwfc	fsr2h,f,c
 33291   01A69C  C4DE F626          	movff	postinc2,check_fs@sect
 33292   01A6A0  C4DE F627          	movff	postinc2,check_fs@sect+1
 33293   01A6A4  C4DE F628          	movff	postinc2,check_fs@sect+2
 33294   01A6A8  C4DE F629          	movff	postinc2,check_fs@sect+3
 33295   01A6AC  ECEB  F0C2         	call	_check_fs	;wreg free
 33296   01A6B0  C624  F64C         	movff	?_check_fs,find_volume@fmt
 33297   01A6B4  C625  F64D         	movff	?_check_fs+1,find_volume@fmt+1
 33298   01A6B8                     l22081:
 33299                           
 33300                           ;../fatfs/ff.c: 3375:  } while (part == 0 && fmt >= 2 && ++i < 4);
 33301   01A6B8  0106               	movlb	6	; () banked
 33302   01A6BA  5134               	movf	find_volume@part& (0+255),w,b
 33303   01A6BC  1135               	iorwf	(find_volume@part+1)& (0+255),w,b
 33304   01A6BE  A4D8               	btfss	status,2,c
 33305   01A6C0  EF64  F0D3         	goto	u30131
 33306   01A6C4  EF66  F0D3         	goto	u30130
 33307   01A6C8                     u30131:
 33308   01A6C8  EFB9  F0D2         	goto	l553
 33309   01A6CC                     u30130:
 33310   01A6CC                     
 33311                           ; BSR set to: 6
 33312   01A6CC  514D               	movf	(find_volume@fmt+1)& (0+255),w,b
 33313   01A6CE  E109               	bnz	u30140
 33314   01A6D0  0E02               	movlw	2
 33315   01A6D2  5D4C               	subwf	find_volume@fmt& (0+255),w,b
 33316   01A6D4  A0D8               	btfss	status,0,c
 33317   01A6D6  EF6F  F0D3         	goto	u30141
 33318   01A6DA  EF71  F0D3         	goto	u30140
 33319   01A6DE                     u30141:
 33320   01A6DE  EFB9  F0D2         	goto	l553
 33321   01A6E2                     u30140:
 33322   01A6E2                     
 33323                           ; BSR set to: 6
 33324   01A6E2  4B4E               	infsnz	find_volume@i& (0+255),f,b
 33325   01A6E4  2B4F               	incf	(find_volume@i+1)& (0+255),f,b
 33326   01A6E6  514F               	movf	(find_volume@i+1)& (0+255),w,b
 33327   01A6E8  E109               	bnz	u30150
 33328   01A6EA  0E04               	movlw	4
 33329   01A6EC  5D4E               	subwf	find_volume@i& (0+255),w,b
 33330   01A6EE  A0D8               	btfss	status,0,c
 33331   01A6F0  EF7C  F0D3         	goto	u30151
 33332   01A6F4  EF7E  F0D3         	goto	u30150
 33333   01A6F8                     u30151:
 33334   01A6F8  EF19  F0D3         	goto	l22075
 33335   01A6FC                     u30150:
 33336   01A6FC  EFB9  F0D2         	goto	l553
 33337   01A700                     l554:
 33338                           
 33339                           ; BSR set to: 6
 33340   01A700  0012               	return		;funcret
 33341   01A702                     __end_of_find_volume:
 33342                           	callstack 0
 33343                           
 33344 ;; *************** function _check_fs *****************
 33345 ;; Defined at:
 33346 ;;		line 3292 in file "../fatfs/ff.c"
 33347 ;; Parameters:    Size  Location     Type
 33348 ;;  fs              2   36[BANK6 ] PTR struct .
 33349 ;;		 -> fs(564), NULL(0), 
 33350 ;;  sect            4   38[BANK6 ] unsigned long 
 33351 ;; Auto vars:     Size  Location     Type
 33352 ;;  w               2   47[BANK6 ] unsigned short 
 33353 ;;  sign            2   45[BANK6 ] unsigned short 
 33354 ;;  b               1   49[BANK6 ] unsigned char 
 33355 ;; Return value:  Size  Location     Type
 33356 ;;                  2   36[BANK6 ] unsigned int 
 33357 ;; Registers used:
 33358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33359 ;; Tracked objects:
 33360 ;;		On entry : 0/0
 33361 ;;		On exit  : 0/0
 33362 ;;		Unchanged: 0/0
 33363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33364 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33365 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33366 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33367 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33368 ;;Total ram usage:       14 bytes
 33369 ;; Hardware stack levels used: 1
 33370 ;; Hardware stack levels required when called: 14
 33371 ;; This function calls:
 33372 ;;		_ld_dword
 33373 ;;		_ld_word
 33374 ;;		_memcmp
 33375 ;;		_move_window
 33376 ;; This function is called by:
 33377 ;;		_find_volume
 33378 ;; This function uses a non-reentrant model
 33379 ;;
 33380                           
 33381                           	psect	text77
 33382   0185D6                     __ptext77:
 33383                           	callstack 0
 33384   0185D6                     _check_fs:
 33385                           	callstack 103
 33386   0185D6                     
 33387                           ;../fatfs/ff.c: 3293:  FATFS* fs,;../fatfs/ff.c: 3294:  LBA_t sect;../fatfs/ff.c: 3296: 
      +                          {;../fatfs/ff.c: 3297:  WORD w, sign;;../fatfs/ff.c: 3298:  BYTE b;;../fatfs/ff.c: 3301:
      +                            fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;
 33388   0185D6  0106               	movlb	6	; () banked
 33389   0185D8  EE20 F004          	lfsr	2,4
 33390   0185DC  5124               	movf	check_fs@fs& (0+255),w,b
 33391   0185DE  26D9               	addwf	fsr2l,f,c
 33392   0185E0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 33393   0185E2  22DA               	addwfc	fsr2h,f,c
 33394   0185E4  6ADF               	clrf	indf2,c
 33395   0185E6  EE20 F030          	lfsr	2,48
 33396   0185EA  5124               	movf	check_fs@fs& (0+255),w,b
 33397   0185EC  26D9               	addwf	fsr2l,f,c
 33398   0185EE  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 33399   0185F0  22DA               	addwfc	fsr2h,f,c
 33400   0185F2  0EFF               	movlw	255
 33401   0185F4  6EDE               	movwf	postinc2,c
 33402   0185F6  0EFF               	movlw	255
 33403   0185F8  6EDE               	movwf	postinc2,c
 33404   0185FA  0EFF               	movlw	255
 33405   0185FC  6EDE               	movwf	postinc2,c
 33406   0185FE  0EFF               	movlw	255
 33407   018600  6EDD               	movwf	postdec2,c
 33408   018602                     
 33409                           ; BSR set to: 6
 33410                           ;../fatfs/ff.c: 3302:  if (move_window(fs, sect) != FR_OK) return 4;
 33411   018602  C624  F61A         	movff	check_fs@fs,move_window@fs
 33412   018606  C625  F61B         	movff	check_fs@fs+1,move_window@fs+1
 33413   01860A  C626  F61C         	movff	check_fs@sect,move_window@sect
 33414   01860E  C627  F61D         	movff	check_fs@sect+1,move_window@sect+1
 33415   018612  C628  F61E         	movff	check_fs@sect+2,move_window@sect+2
 33416   018616  C629  F61F         	movff	check_fs@sect+3,move_window@sect+3
 33417   01861A  ECAB  F0EF         	call	_move_window	;wreg free
 33418   01861E  0900               	iorlw	0
 33419   018620  B4D8               	btfsc	status,2,c
 33420   018622  EF15  F0C3         	goto	u29151
 33421   018626  EF17  F0C3         	goto	u29150
 33422   01862A                     u29151:
 33423   01862A  EF1E  F0C3         	goto	l21625
 33424   01862E                     u29150:
 33425   01862E  0E00               	movlw	0
 33426   018630  0106               	movlb	6	; () banked
 33427   018632  6F25               	movwf	(?_check_fs+1)& (0+255),b
 33428   018634  0E04               	movlw	4
 33429   018636  6F24               	movwf	?_check_fs& (0+255),b
 33430   018638  EF60  F0C4         	goto	l537
 33431   01863C                     l21625:
 33432                           
 33433                           ;../fatfs/ff.c: 3303:  sign = ld_word(fs->win + 510);
 33434   01863C  0E32               	movlw	50
 33435   01863E  0106               	movlb	6	; () banked
 33436   018640  2524               	addwf	check_fs@fs& (0+255),w,b
 33437   018642  6E04               	movwf	ld_word@ptr^(0+1280),c
 33438   018644  0E02               	movlw	2
 33439   018646  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33440   018648  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33441   01864A  EC4C  F0FF         	call	_ld_word	;wreg free
 33442   01864E  C504  F62D         	movff	?_ld_word,check_fs@sign
 33443   018652  C505  F62E         	movff	?_ld_word+1,check_fs@sign+1
 33444   018656                     
 33445                           ;../fatfs/ff.c: 3307:  b = fs->win[0];
 33446   018656  0106               	movlb	6	; () banked
 33447   018658  EE20 F034          	lfsr	2,52
 33448   01865C  5124               	movf	check_fs@fs& (0+255),w,b
 33449   01865E  26D9               	addwf	fsr2l,f,c
 33450   018660  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 33451   018662  22DA               	addwfc	fsr2h,f,c
 33452   018664  50DF               	movf	indf2,w,c
 33453   018666  6F31               	movwf	check_fs@b& (0+255),b
 33454   018668                     
 33455                           ; BSR set to: 6
 33456                           ;../fatfs/ff.c: 3308:  if (b == 0xEB || b == 0xE9 || b == 0xE8) {
 33457   018668  0EEB               	movlw	235
 33458   01866A  1931               	xorwf	check_fs@b& (0+255),w,b
 33459   01866C  B4D8               	btfsc	status,2,c
 33460   01866E  EF3B  F0C3         	goto	u29161
 33461   018672  EF3D  F0C3         	goto	u29160
 33462   018676                     u29161:
 33463   018676  EF4F  F0C3         	goto	l21635
 33464   01867A                     u29160:
 33465   01867A                     
 33466                           ; BSR set to: 6
 33467   01867A  0EE9               	movlw	233
 33468   01867C  1931               	xorwf	check_fs@b& (0+255),w,b
 33469   01867E  B4D8               	btfsc	status,2,c
 33470   018680  EF44  F0C3         	goto	u29171
 33471   018684  EF46  F0C3         	goto	u29170
 33472   018688                     u29171:
 33473   018688  EF4F  F0C3         	goto	l21635
 33474   01868C                     u29170:
 33475   01868C                     
 33476                           ; BSR set to: 6
 33477   01868C  0EE8               	movlw	232
 33478   01868E  1931               	xorwf	check_fs@b& (0+255),w,b
 33479   018690  A4D8               	btfss	status,2,c
 33480   018692  EF4D  F0C3         	goto	u29181
 33481   018696  EF4F  F0C3         	goto	u29180
 33482   01869A                     u29181:
 33483   01869A  EF49  F0C4         	goto	l21673
 33484   01869E                     u29180:
 33485   01869E                     l21635:
 33486                           
 33487                           ; BSR set to: 6
 33488                           ;../fatfs/ff.c: 3309:   if (sign == 0xAA55 && !memcmp(fs->win + 82, "FAT32   ", 8)) {
 33489   01869E  0E55               	movlw	85
 33490   0186A0  192D               	xorwf	check_fs@sign& (0+255),w,b
 33491   0186A2  E107               	bnz	u29191
 33492   0186A4  0EAA               	movlw	170
 33493   0186A6  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 33494   0186A8  A4D8               	btfss	status,2,c
 33495   0186AA  EF59  F0C3         	goto	u29191
 33496   0186AE  EF5B  F0C3         	goto	u29190
 33497   0186B2                     u29191:
 33498   0186B2  EF7B  F0C3         	goto	l21643
 33499   0186B6                     u29190:
 33500   0186B6                     
 33501                           ; BSR set to: 6
 33502   0186B6  0E86               	movlw	134
 33503   0186B8  2524               	addwf	check_fs@fs& (0+255),w,b
 33504   0186BA  6E04               	movwf	memcmp@vl^(0+1280),c
 33505   0186BC  0E00               	movlw	0
 33506   0186BE  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33507   0186C0  6E05               	movwf	(memcmp@vl+1)^(0+1280),c
 33508   0186C2  0E1E               	movlw	low STR_29
 33509   0186C4  6E06               	movwf	memcmp@vr^(0+1280),c
 33510   0186C6  0EFF               	movlw	high STR_29
 33511   0186C8  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 33512   0186CA  0E00               	movlw	0
 33513   0186CC  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 33514   0186CE  0E08               	movlw	8
 33515   0186D0  6E08               	movwf	memcmp@n^(0+1280),c
 33516   0186D2  EC23  F0EA         	call	_memcmp	;wreg free
 33517   0186D6  5004               	movf	?_memcmp^(0+1280),w,c
 33518   0186D8  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 33519   0186DA  A4D8               	btfss	status,2,c
 33520   0186DC  EF72  F0C3         	goto	u29201
 33521   0186E0  EF74  F0C3         	goto	u29200
 33522   0186E4                     u29201:
 33523   0186E4  EF7B  F0C3         	goto	l21643
 33524   0186E8                     u29200:
 33525   0186E8                     l21639:
 33526                           
 33527                           ;../fatfs/ff.c: 3310:    return 0;
 33528   0186E8  0E00               	movlw	0
 33529   0186EA  0106               	movlb	6	; () banked
 33530   0186EC  6F25               	movwf	(?_check_fs+1)& (0+255),b
 33531   0186EE  0E00               	movlw	0
 33532   0186F0  6F24               	movwf	?_check_fs& (0+255),b
 33533   0186F2  EF60  F0C4         	goto	l537
 33534   0186F6                     l21643:
 33535                           
 33536                           ;../fatfs/ff.c: 3313:   w = ld_word(fs->win + 11);
 33537   0186F6  0E3F               	movlw	63
 33538   0186F8  0106               	movlb	6	; () banked
 33539   0186FA  2524               	addwf	check_fs@fs& (0+255),w,b
 33540   0186FC  6E04               	movwf	ld_word@ptr^(0+1280),c
 33541   0186FE  0E00               	movlw	0
 33542   018700  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33543   018702  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33544   018704  EC4C  F0FF         	call	_ld_word	;wreg free
 33545   018708  C504  F62F         	movff	?_ld_word,check_fs@w
 33546   01870C  C505  F630         	movff	?_ld_word+1,check_fs@w+1
 33547   018710                     
 33548                           ;../fatfs/ff.c: 3314:   b = fs->win[13];
 33549   018710  0106               	movlb	6	; () banked
 33550   018712  EE20 F041          	lfsr	2,65
 33551   018716  5124               	movf	check_fs@fs& (0+255),w,b
 33552   018718  26D9               	addwf	fsr2l,f,c
 33553   01871A  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 33554   01871C  22DA               	addwfc	fsr2h,f,c
 33555   01871E  50DF               	movf	indf2,w,c
 33556   018720  6F31               	movwf	check_fs@b& (0+255),b
 33557   018722                     
 33558                           ; BSR set to: 6
 33559                           ;../fatfs/ff.c: 3315:   if ((w & (w - 1)) == 0 && w >= 512 && w <= 512
 33560   018722  0EFF               	movlw	255
 33561   018724  252F               	addwf	check_fs@w& (0+255),w,b
 33562   018726  6F2A               	movwf	??_check_fs& (0+255),b
 33563   018728  0EFF               	movlw	255
 33564   01872A  2130               	addwfc	(check_fs@w+1)& (0+255),w,b
 33565   01872C  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 33566   01872E  512F               	movf	check_fs@w& (0+255),w,b
 33567   018730  172A               	andwf	??_check_fs& (0+255),f,b
 33568   018732  5130               	movf	(check_fs@w+1)& (0+255),w,b
 33569   018734  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 33570   018736  512A               	movf	??_check_fs& (0+255),w,b
 33571   018738  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 33572   01873A  A4D8               	btfss	status,2,c
 33573   01873C  EFA2  F0C3         	goto	u29211
 33574   018740  EFA4  F0C3         	goto	u29210
 33575   018744                     u29211:
 33576   018744  EF49  F0C4         	goto	l21673
 33577   018748                     u29210:
 33578   018748                     
 33579                           ; BSR set to: 6
 33580   018748  0E02               	movlw	2
 33581   01874A  5D30               	subwf	(check_fs@w+1)& (0+255),w,b
 33582   01874C  A0D8               	btfss	status,0,c
 33583   01874E  EFAB  F0C3         	goto	u29221
 33584   018752  EFAD  F0C3         	goto	u29220
 33585   018756                     u29221:
 33586   018756  EF49  F0C4         	goto	l21673
 33587   01875A                     u29220:
 33588   01875A                     
 33589                           ; BSR set to: 6
 33590   01875A  052F               	decf	check_fs@w& (0+255),w,b
 33591   01875C  0E02               	movlw	2
 33592   01875E  5930               	subwfb	(check_fs@w+1)& (0+255),w,b
 33593   018760  B0D8               	btfsc	status,0,c
 33594   018762  EFB5  F0C3         	goto	u29231
 33595   018766  EFB7  F0C3         	goto	u29230
 33596   01876A                     u29231:
 33597   01876A  EF49  F0C4         	goto	l21673
 33598   01876E                     u29230:
 33599   01876E                     
 33600                           ; BSR set to: 6
 33601   01876E  5131               	movf	check_fs@b& (0+255),w,b
 33602   018770  B4D8               	btfsc	status,2,c
 33603   018772  EFBD  F0C3         	goto	u29241
 33604   018776  EFBF  F0C3         	goto	u29240
 33605   01877A                     u29241:
 33606   01877A  EF49  F0C4         	goto	l21673
 33607   01877E                     u29240:
 33608   01877E                     
 33609                           ; BSR set to: 6
 33610   01877E  0EFF               	movlw	255
 33611   018780  2531               	addwf	check_fs@b& (0+255),w,b
 33612   018782  6F2A               	movwf	??_check_fs& (0+255),b
 33613   018784  6B2B               	clrf	(??_check_fs+1)& (0+255),b
 33614   018786  0EFF               	movlw	255
 33615   018788  232B               	addwfc	(??_check_fs+1)& (0+255),f,b
 33616   01878A  5131               	movf	check_fs@b& (0+255),w,b
 33617   01878C  172A               	andwf	??_check_fs& (0+255),f,b
 33618   01878E  0E00               	movlw	0
 33619   018790  172B               	andwf	(??_check_fs+1)& (0+255),f,b
 33620   018792  512A               	movf	??_check_fs& (0+255),w,b
 33621   018794  112B               	iorwf	(??_check_fs+1)& (0+255),w,b
 33622   018796  A4D8               	btfss	status,2,c
 33623   018798  EFD0  F0C3         	goto	u29251
 33624   01879C  EFD2  F0C3         	goto	u29250
 33625   0187A0                     u29251:
 33626   0187A0  EF49  F0C4         	goto	l21673
 33627   0187A4                     u29250:
 33628   0187A4                     
 33629                           ; BSR set to: 6
 33630   0187A4  0E42               	movlw	66
 33631   0187A6  2524               	addwf	check_fs@fs& (0+255),w,b
 33632   0187A8  6E04               	movwf	ld_word@ptr^(0+1280),c
 33633   0187AA  0E00               	movlw	0
 33634   0187AC  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33635   0187AE  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33636   0187B0  EC4C  F0FF         	call	_ld_word	;wreg free
 33637   0187B4  5004               	movf	?_ld_word^(0+1280),w,c
 33638   0187B6  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 33639   0187B8  B4D8               	btfsc	status,2,c
 33640   0187BA  EFE1  F0C3         	goto	u29261
 33641   0187BE  EFE3  F0C3         	goto	u29260
 33642   0187C2                     u29261:
 33643   0187C2  EF49  F0C4         	goto	l21673
 33644   0187C6                     u29260:
 33645   0187C6  0106               	movlb	6	; () banked
 33646   0187C8  EE20 F044          	lfsr	2,68
 33647   0187CC  5124               	movf	check_fs@fs& (0+255),w,b
 33648   0187CE  26D9               	addwf	fsr2l,f,c
 33649   0187D0  5125               	movf	(check_fs@fs+1)& (0+255),w,b
 33650   0187D2  22DA               	addwfc	fsr2h,f,c
 33651   0187D4  50DF               	movf	indf2,w,c
 33652   0187D6  6F2A               	movwf	??_check_fs& (0+255),b
 33653   0187D8  0EFF               	movlw	255
 33654   0187DA  252A               	addwf	??_check_fs& (0+255),w,b
 33655   0187DC  6F2B               	movwf	(??_check_fs+1)& (0+255),b
 33656   0187DE  6B2C               	clrf	(??_check_fs+2)& (0+255),b
 33657   0187E0  0EFF               	movlw	255
 33658   0187E2  232C               	addwfc	(??_check_fs+2)& (0+255),f,b
 33659   0187E4  512C               	movf	(??_check_fs+2)& (0+255),w,b
 33660   0187E6  E107               	bnz	u29271
 33661   0187E8  0E02               	movlw	2
 33662   0187EA  5D2B               	subwf	(??_check_fs+1)& (0+255),w,b
 33663   0187EC  B0D8               	btfsc	status,0,c
 33664   0187EE  EFFB  F0C3         	goto	u29271
 33665   0187F2  EFFD  F0C3         	goto	u29270
 33666   0187F6                     u29271:
 33667   0187F6  EF49  F0C4         	goto	l21673
 33668   0187FA                     u29270:
 33669   0187FA                     
 33670                           ; BSR set to: 6
 33671   0187FA  0E45               	movlw	69
 33672   0187FC  2524               	addwf	check_fs@fs& (0+255),w,b
 33673   0187FE  6E04               	movwf	ld_word@ptr^(0+1280),c
 33674   018800  0E00               	movlw	0
 33675   018802  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33676   018804  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33677   018806  EC4C  F0FF         	call	_ld_word	;wreg free
 33678   01880A  5004               	movf	?_ld_word^(0+1280),w,c
 33679   01880C  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 33680   01880E  B4D8               	btfsc	status,2,c
 33681   018810  EF0C  F0C4         	goto	u29281
 33682   018814  EF0E  F0C4         	goto	u29280
 33683   018818                     u29281:
 33684   018818  EF49  F0C4         	goto	l21673
 33685   01881C                     u29280:
 33686   01881C  0E47               	movlw	71
 33687   01881E  0106               	movlb	6	; () banked
 33688   018820  2524               	addwf	check_fs@fs& (0+255),w,b
 33689   018822  6E04               	movwf	ld_word@ptr^(0+1280),c
 33690   018824  0E00               	movlw	0
 33691   018826  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33692   018828  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33693   01882A  EC4C  F0FF         	call	_ld_word	;wreg free
 33694   01882E  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 33695   018830  E107               	bnz	u29291
 33696   018832  0E80               	movlw	128
 33697   018834  5C04               	subwf	?_ld_word^(0+1280),w,c
 33698   018836  B0D8               	btfsc	status,0,c
 33699   018838  EF20  F0C4         	goto	u29291
 33700   01883C  EF22  F0C4         	goto	u29290
 33701   018840                     u29291:
 33702   018840  EF35  F0C4         	goto	l21667
 33703   018844                     u29290:
 33704   018844  0E54               	movlw	84
 33705   018846  0106               	movlb	6	; () banked
 33706   018848  2524               	addwf	check_fs@fs& (0+255),w,b
 33707   01884A  6E04               	movwf	ld_dword@ptr^(0+1280),c
 33708   01884C  0E00               	movlw	0
 33709   01884E  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33710   018850  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 33711   018852  ECC7  F0F2         	call	_ld_dword	;wreg free
 33712   018856  5007               	movf	(?_ld_dword+3)^(0+1280),w,c
 33713   018858  E108               	bnz	u29300
 33714   01885A  0406               	decf	(?_ld_dword+2)^(0+1280),w,c
 33715   01885C  A0D8               	btfss	status,0,c
 33716   01885E  EF33  F0C4         	goto	u29301
 33717   018862  EF35  F0C4         	goto	u29300
 33718   018866                     u29301:
 33719   018866  EF49  F0C4         	goto	l21673
 33720   01886A                     u29300:
 33721   01886A                     l21667:
 33722   01886A  0E4A               	movlw	74
 33723   01886C  0106               	movlb	6	; () banked
 33724   01886E  2524               	addwf	check_fs@fs& (0+255),w,b
 33725   018870  6E04               	movwf	ld_word@ptr^(0+1280),c
 33726   018872  0E00               	movlw	0
 33727   018874  2125               	addwfc	(check_fs@fs+1)& (0+255),w,b
 33728   018876  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 33729   018878  EC4C  F0FF         	call	_ld_word	;wreg free
 33730   01887C  5004               	movf	?_ld_word^(0+1280),w,c
 33731   01887E  1005               	iorwf	(?_ld_word+1)^(0+1280),w,c
 33732   018880  B4D8               	btfsc	status,2,c
 33733   018882  EF45  F0C4         	goto	u29311
 33734   018886  EF47  F0C4         	goto	u29310
 33735   01888A                     u29311:
 33736   01888A  EF49  F0C4         	goto	l21673
 33737   01888E                     u29310:
 33738   01888E  EF74  F0C3         	goto	l21639
 33739   018892                     l21673:
 33740                           
 33741                           ;../fatfs/ff.c: 3325:  return sign == 0xAA55 ? 2 : 3;
 33742   018892  0E55               	movlw	85
 33743   018894  0106               	movlb	6	; () banked
 33744   018896  192D               	xorwf	check_fs@sign& (0+255),w,b
 33745   018898  E109               	bnz	u29320
 33746   01889A  0EAA               	movlw	170
 33747   01889C  192E               	xorwf	(check_fs@sign+1)& (0+255),w,b
 33748   01889E  B4D8               	btfsc	status,2,c
 33749   0188A0  EF54  F0C4         	goto	u29321
 33750   0188A4  EF56  F0C4         	goto	u29320
 33751   0188A8                     u29321:
 33752   0188A8  EF5C  F0C4         	goto	l21677
 33753   0188AC                     u29320:
 33754   0188AC                     
 33755                           ; BSR set to: 6
 33756   0188AC  0E00               	movlw	0
 33757   0188AE  6F25               	movwf	(?_check_fs+1)& (0+255),b
 33758   0188B0  0E03               	movlw	3
 33759   0188B2  6F24               	movwf	?_check_fs& (0+255),b
 33760   0188B4  EF60  F0C4         	goto	l537
 33761   0188B8                     l21677:
 33762                           
 33763                           ; BSR set to: 6
 33764   0188B8  0E00               	movlw	0
 33765   0188BA  6F25               	movwf	(?_check_fs+1)& (0+255),b
 33766   0188BC  0E02               	movlw	2
 33767   0188BE  6F24               	movwf	?_check_fs& (0+255),b
 33768   0188C0                     l537:
 33769                           
 33770                           ; BSR set to: 6
 33771   0188C0  0012               	return		;funcret
 33772   0188C2                     __end_of_check_fs:
 33773                           	callstack 0
 33774                           
 33775 ;; *************** function _disk_initialize *****************
 33776 ;; Defined at:
 33777 ;;		line 53 in file "../drivers/diskio.c"
 33778 ;; Parameters:    Size  Location     Type
 33779 ;;  pdrv            1    wreg     unsigned char 
 33780 ;; Auto vars:     Size  Location     Type
 33781 ;;  pdrv            1  128[BANK6 ] unsigned char 
 33782 ;;  buf           128    0[BANK6 ] unsigned char [128]
 33783 ;; Return value:  Size  Location     Type
 33784 ;;                  1    wreg      unsigned char 
 33785 ;; Registers used:
 33786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33787 ;; Tracked objects:
 33788 ;;		On entry : 0/0
 33789 ;;		On exit  : 0/0
 33790 ;;		Unchanged: 0/0
 33791 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33793 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33794 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33795 ;;      Totals:         0       4     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33796 ;;Total ram usage:      133 bytes
 33797 ;; Hardware stack levels used: 1
 33798 ;; Hardware stack levels required when called: 11
 33799 ;; This function calls:
 33800 ;;		_SDCard_read512
 33801 ;;		_printf
 33802 ;;		_util_hexdump
 33803 ;; This function is called by:
 33804 ;;		_mount_volume
 33805 ;; This function uses a non-reentrant model
 33806 ;;
 33807                           
 33808                           	psect	text78
 33809   01B4A8                     __ptext78:
 33810                           	callstack 0
 33811   01B4A8                     _disk_initialize:
 33812                           	callstack 107
 33813                           
 33814                           ; BSR set to: 6
 33815                           ;incstack = 0
 33816                           ;disk_initialize@pdrv stored from wreg
 33817   01B4A8  0106               	movlb	6	; () banked
 33818   01B4AA  6F80               	movwf	disk_initialize@pdrv& (0+255),b
 33819   01B4AC                     
 33820                           ;../drivers/diskio.c: 58:     if (pdrv != 0) {
 33821   01B4AC  0106               	movlb	6	; () banked
 33822   01B4AE  5180               	movf	disk_initialize@pdrv& (0+255),w,b
 33823   01B4B0  B4D8               	btfsc	status,2,c
 33824   01B4B2  EF5D  F0DA         	goto	u29331
 33825   01B4B6  EF5F  F0DA         	goto	u29330
 33826   01B4BA                     u29331:
 33827   01B4BA  EF62  F0DA         	goto	l29
 33828   01B4BE                     u29330:
 33829   01B4BE                     l21691:
 33830                           
 33831                           ;../drivers/diskio.c: 60:         return 0x02;
 33832   01B4BE  0E02               	movlw	2
 33833   01B4C0  EF25  F0DB         	goto	l27
 33834   01B4C4                     l29:
 33835   01B4C4                     
 33836                           ; BSR set to: 6
 33837                           ;../drivers/diskio.c: 65:     if (SDCard_read512(0, 384, buf, 128) != 0) {
 33838   01B4C4  0E00               	movlw	0
 33839   01B4C6  0105               	movlb	5	; () banked
 33840   01B4C8  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 33841   01B4CA  0E00               	movlw	0
 33842   01B4CC  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 33843   01B4CE  0E00               	movlw	0
 33844   01B4D0  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 33845   01B4D2  0E00               	movlw	0
 33846   01B4D4  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 33847   01B4D6  0E01               	movlw	1
 33848   01B4D8  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 33849   01B4DA  0E80               	movlw	128
 33850   01B4DC  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 33851   01B4DE  0E00               	movlw	low disk_initialize@buf
 33852   01B4E0  6FE4               	movwf	SDCard_read512@buf& (0+255),b
 33853   01B4E2  0E06               	movlw	high disk_initialize@buf
 33854   01B4E4  6FE5               	movwf	(SDCard_read512@buf+1)& (0+255),b
 33855   01B4E6  0E00               	movlw	0
 33856   01B4E8  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 33857   01B4EA  0E80               	movlw	128
 33858   01B4EC  6FE6               	movwf	SDCard_read512@count& (0+255),b
 33859   01B4EE  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 33860   01B4F2  0105               	movlb	5	; () banked
 33861   01B4F4  51DE               	movf	?_SDCard_read512& (0+255),w,b
 33862   01B4F6  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 33863   01B4F8  B4D8               	btfsc	status,2,c
 33864   01B4FA  EF81  F0DA         	goto	u29341
 33865   01B4FE  EF83  F0DA         	goto	u29340
 33866   01B502                     u29341:
 33867   01B502  EF85  F0DA         	goto	l21709
 33868   01B506                     u29340:
 33869   01B506  EF5F  F0DA         	goto	l21691
 33870   01B50A                     l21709:
 33871                           
 33872                           ; BSR set to: 5
 33873                           ;../drivers/diskio.c: 72:     if (buf[126] != 0x55 || buf[127] != 0xaa) {
 33874   01B50A  0E55               	movlw	85
 33875   01B50C  0106               	movlb	6	; () banked
 33876   01B50E  197E               	xorwf	(disk_initialize@buf+126)& (0+255),w,b
 33877   01B510  A4D8               	btfss	status,2,c
 33878   01B512  EF8D  F0DA         	goto	u29351
 33879   01B516  EF8F  F0DA         	goto	u29350
 33880   01B51A                     u29351:
 33881   01B51A  EF9A  F0DA         	goto	l41
 33882   01B51E                     u29350:
 33883   01B51E                     
 33884                           ; BSR set to: 6
 33885   01B51E  0EAA               	movlw	170
 33886   01B520  197F               	xorwf	(disk_initialize@buf+127)& (0+255),w,b
 33887   01B522  B4D8               	btfsc	status,2,c
 33888   01B524  EF96  F0DA         	goto	u29361
 33889   01B528  EF98  F0DA         	goto	u29360
 33890   01B52C                     u29361:
 33891   01B52C  EF9C  F0DA         	goto	l21719
 33892   01B530                     u29360:
 33893   01B530  EF5F  F0DA         	goto	l21691
 33894   01B534                     l41:
 33895                           
 33896                           ; BSR set to: 6
 33897   01B534  EF5F  F0DA         	goto	l21691
 33898   01B538                     l21719:
 33899                           
 33900                           ; BSR set to: 6
 33901                           ;../drivers/diskio.c: 84:     if (buf[66] != 0x01 && buf[66] != 0x04 && buf[66] != 0x06 
      +                          &&
 33902   01B538  0542               	decf	(disk_initialize@buf+66)& (0+255),w,b
 33903   01B53A  B4D8               	btfsc	status,2,c
 33904   01B53C  EFA2  F0DA         	goto	u29371
 33905   01B540  EFA4  F0DA         	goto	u29370
 33906   01B544                     u29371:
 33907   01B544  EFD3  F0DA         	goto	l21737
 33908   01B548                     u29370:
 33909   01B548                     
 33910                           ; BSR set to: 6
 33911   01B548  0E04               	movlw	4
 33912   01B54A  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 33913   01B54C  B4D8               	btfsc	status,2,c
 33914   01B54E  EFAB  F0DA         	goto	u29381
 33915   01B552  EFAD  F0DA         	goto	u29380
 33916   01B556                     u29381:
 33917   01B556  EFD3  F0DA         	goto	l21737
 33918   01B55A                     u29380:
 33919   01B55A                     
 33920                           ; BSR set to: 6
 33921   01B55A  0E06               	movlw	6
 33922   01B55C  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 33923   01B55E  B4D8               	btfsc	status,2,c
 33924   01B560  EFB4  F0DA         	goto	u29391
 33925   01B564  EFB6  F0DA         	goto	u29390
 33926   01B568                     u29391:
 33927   01B568  EFD3  F0DA         	goto	l21737
 33928   01B56C                     u29390:
 33929   01B56C                     
 33930                           ; BSR set to: 6
 33931   01B56C  0E0B               	movlw	11
 33932   01B56E  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 33933   01B570  B4D8               	btfsc	status,2,c
 33934   01B572  EFBD  F0DA         	goto	u29401
 33935   01B576  EFBF  F0DA         	goto	u29400
 33936   01B57A                     u29401:
 33937   01B57A  EFD3  F0DA         	goto	l21737
 33938   01B57E                     u29400:
 33939   01B57E                     
 33940                           ; BSR set to: 6
 33941   01B57E  0E0C               	movlw	12
 33942   01B580  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 33943   01B582  B4D8               	btfsc	status,2,c
 33944   01B584  EFC6  F0DA         	goto	u29411
 33945   01B588  EFC8  F0DA         	goto	u29410
 33946   01B58C                     u29411:
 33947   01B58C  EFD3  F0DA         	goto	l21737
 33948   01B590                     u29410:
 33949   01B590                     
 33950                           ; BSR set to: 6
 33951   01B590  0E0E               	movlw	14
 33952   01B592  1942               	xorwf	(disk_initialize@buf+66)& (0+255),w,b
 33953   01B594  B4D8               	btfsc	status,2,c
 33954   01B596  EFCF  F0DA         	goto	u29421
 33955   01B59A  EFD1  F0DA         	goto	u29420
 33956   01B59E                     u29421:
 33957   01B59E  EFD3  F0DA         	goto	l21737
 33958   01B5A2                     u29420:
 33959   01B5A2  EF5F  F0DA         	goto	l21691
 33960   01B5A6                     l21737:
 33961                           
 33962                           ; BSR set to: 6
 33963                           ;../drivers/diskio.c: 89:     start_lba = buf[73];
 33964   01B5A6  5149               	movf	(disk_initialize@buf+73)& (0+255),w,b
 33965   01B5A8  0107               	movlb	7	; () banked
 33966   01B5AA  6FEE               	movwf	_start_lba& (0+255),b
 33967   01B5AC  6BEF               	clrf	(_start_lba+1)& (0+255),b
 33968   01B5AE  6BF0               	clrf	(_start_lba+2)& (0+255),b
 33969   01B5B0  6BF1               	clrf	(_start_lba+3)& (0+255),b
 33970   01B5B2                     
 33971                           ; BSR set to: 7
 33972                           ;../drivers/diskio.c: 90:     start_lba = (start_lba << 8) | buf[72];
 33973   01B5B2  0106               	movlb	6	; () banked
 33974   01B5B4  5148               	movf	(disk_initialize@buf+72)& (0+255),w,b
 33975   01B5B6  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 33976   01B5BA  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 33977   01B5BE  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 33978   01B5C2  0105               	movlb	5	; () banked
 33979   01B5C4  6BFB               	clrf	??_disk_initialize& (0+255),b
 33980   01B5C6  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 33981   01B5C8  0107               	movlb	7	; () banked
 33982   01B5CA  6FEE               	movwf	_start_lba& (0+255),b
 33983   01B5CC  0105               	movlb	5	; () banked
 33984   01B5CE  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 33985   01B5D0  0107               	movlb	7	; () banked
 33986   01B5D2  6FEF               	movwf	(_start_lba+1)& (0+255),b
 33987   01B5D4  0105               	movlb	5	; () banked
 33988   01B5D6  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 33989   01B5D8  0107               	movlb	7	; () banked
 33990   01B5DA  6FF0               	movwf	(_start_lba+2)& (0+255),b
 33991   01B5DC  0105               	movlb	5	; () banked
 33992   01B5DE  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 33993   01B5E0  0107               	movlb	7	; () banked
 33994   01B5E2  6FF1               	movwf	(_start_lba+3)& (0+255),b
 33995   01B5E4                     
 33996                           ; BSR set to: 7
 33997                           ;../drivers/diskio.c: 91:     start_lba = (start_lba << 8) | buf[71];
 33998   01B5E4  0106               	movlb	6	; () banked
 33999   01B5E6  5147               	movf	(disk_initialize@buf+71)& (0+255),w,b
 34000   01B5E8  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 34001   01B5EC  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 34002   01B5F0  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 34003   01B5F4  0105               	movlb	5	; () banked
 34004   01B5F6  6BFB               	clrf	??_disk_initialize& (0+255),b
 34005   01B5F8  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 34006   01B5FA  0107               	movlb	7	; () banked
 34007   01B5FC  6FEE               	movwf	_start_lba& (0+255),b
 34008   01B5FE  0105               	movlb	5	; () banked
 34009   01B600  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 34010   01B602  0107               	movlb	7	; () banked
 34011   01B604  6FEF               	movwf	(_start_lba+1)& (0+255),b
 34012   01B606  0105               	movlb	5	; () banked
 34013   01B608  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 34014   01B60A  0107               	movlb	7	; () banked
 34015   01B60C  6FF0               	movwf	(_start_lba+2)& (0+255),b
 34016   01B60E  0105               	movlb	5	; () banked
 34017   01B610  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 34018   01B612  0107               	movlb	7	; () banked
 34019   01B614  6FF1               	movwf	(_start_lba+3)& (0+255),b
 34020   01B616                     
 34021                           ; BSR set to: 7
 34022                           ;../drivers/diskio.c: 92:     start_lba = (start_lba << 8) | buf[70];
 34023   01B616  0106               	movlb	6	; () banked
 34024   01B618  5146               	movf	(disk_initialize@buf+70)& (0+255),w,b
 34025   01B61A  C7EE  F5FC         	movff	_start_lba,??_disk_initialize+1
 34026   01B61E  C7EF  F5FD         	movff	_start_lba+1,??_disk_initialize+2
 34027   01B622  C7F0  F5FE         	movff	_start_lba+2,??_disk_initialize+3
 34028   01B626  0105               	movlb	5	; () banked
 34029   01B628  6BFB               	clrf	??_disk_initialize& (0+255),b
 34030   01B62A  11FB               	iorwf	??_disk_initialize& (0+255),w,b
 34031   01B62C  0107               	movlb	7	; () banked
 34032   01B62E  6FEE               	movwf	_start_lba& (0+255),b
 34033   01B630  0105               	movlb	5	; () banked
 34034   01B632  51FC               	movf	(??_disk_initialize+1)& (0+255),w,b
 34035   01B634  0107               	movlb	7	; () banked
 34036   01B636  6FEF               	movwf	(_start_lba+1)& (0+255),b
 34037   01B638  0105               	movlb	5	; () banked
 34038   01B63A  51FD               	movf	(??_disk_initialize+2)& (0+255),w,b
 34039   01B63C  0107               	movlb	7	; () banked
 34040   01B63E  6FF0               	movwf	(_start_lba+2)& (0+255),b
 34041   01B640  0105               	movlb	5	; () banked
 34042   01B642  51FE               	movf	(??_disk_initialize+3)& (0+255),w,b
 34043   01B644  0107               	movlb	7	; () banked
 34044   01B646  6FF1               	movwf	(_start_lba+3)& (0+255),b
 34045   01B648                     
 34046                           ; BSR set to: 7
 34047                           ;../drivers/diskio.c: 95:     return 0;
 34048   01B648  0E00               	movlw	0
 34049   01B64A                     l27:
 34050   01B64A  0012               	return		;funcret
 34051   01B64C                     __end_of_disk_initialize:
 34052                           	callstack 0
 34053                           
 34054 ;; *************** function _follow_path *****************
 34055 ;; Defined at:
 34056 ;;		line 3052 in file "../fatfs/ff.c"
 34057 ;; Parameters:    Size  Location     Type
 34058 ;;  dp              2  132[BANK6 ] PTR struct .
 34059 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_rename@djn(40), f_rename@djo(40), 
 34060 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 34061 ;;		 -> f_open@dj(40), 
 34062 ;;  path            2  134[BANK6 ] PTR const unsigned char 
 34063 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 34064 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 34065 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 34066 ;; Auto vars:     Size  Location     Type
 34067 ;;  fs              2  142[BANK6 ] PTR struct .
 34068 ;;		 -> fs(564), NULL(0), 
 34069 ;;  res             1  145[BANK6 ] enum E597
 34070 ;;  ns              1  144[BANK6 ] unsigned char 
 34071 ;; Return value:  Size  Location     Type
 34072 ;;                  1    wreg      enum E597
 34073 ;; Registers used:
 34074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34075 ;; Tracked objects:
 34076 ;;		On entry : 0/0
 34077 ;;		On exit  : 0/0
 34078 ;;		Unchanged: 0/0
 34079 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34080 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34081 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34082 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34083 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34084 ;;Total ram usage:       14 bytes
 34085 ;; Hardware stack levels used: 1
 34086 ;; Hardware stack levels required when called: 18
 34087 ;; This function calls:
 34088 ;;		_create_name
 34089 ;;		_dir_find
 34090 ;;		_dir_sdi
 34091 ;;		_ld_clust
 34092 ;; This function is called by:
 34093 ;;		_f_open
 34094 ;;		_f_chdir
 34095 ;;		_f_opendir
 34096 ;;		_f_stat
 34097 ;;		_f_unlink
 34098 ;;		_f_mkdir
 34099 ;;		_f_rename
 34100 ;; This function uses a non-reentrant model
 34101 ;;
 34102                           
 34103                           	psect	text79
 34104   0188C2                     __ptext79:
 34105                           	callstack 0
 34106   0188C2                     _follow_path:
 34107                           	callstack 101
 34108   0188C2                     
 34109                           ;../fatfs/ff.c: 3053:  DIR* dp,;../fatfs/ff.c: 3054:  const TCHAR* path;../fatfs/ff.c: 3
      +                          056: {;../fatfs/ff.c: 3057:  FRESULT res;;../fatfs/ff.c: 3058:  BYTE ns;;../fatfs/ff.c: 
      +                          3059:  FATFS *fs = dp->obj.fs;
 34110   0188C2  C684  F4D9         	movff	follow_path@dp,fsr2l
 34111   0188C6  C685  F4DA         	movff	follow_path@dp+1,fsr2h
 34112   0188CA  C4DE F68E          	movff	postinc2,follow_path@fs
 34113   0188CE  C4DD F68F          	movff	postdec2,follow_path@fs+1
 34114   0188D2                     
 34115                           ;../fatfs/ff.c: 3063:  if (!((*path) == '/' || (*path) == '\\') && (0 != 2 || !((UINT)(*
      +                          path) < (0 ? ' ' : '!')))) {
 34116   0188D2  C686  F4F6         	movff	follow_path@path,tblptrl
 34117   0188D6  C687  F4F7         	movff	follow_path@path+1,tblptrh
 34118   0188DA  0E00               	movlw	low (__mediumconst shr (0+16))
 34119   0188DC  6EF8               	movwf	tblptru,c
 34120   0188DE  0E3F               	movlw	(high __ramtop+-1)
 34121   0188E0  64F7               	cpfsgt	tblptrh,c
 34122   0188E2  D003               	bra	u30377
 34123   0188E4  0008               	tblrd		*
 34124   0188E6  50F5               	movf	tablat,w,c
 34125   0188E8  D005               	bra	u30370
 34126   0188EA                     u30377:
 34127   0188EA  C4F6 F4E9          	movff	tblptrl,fsr0l
 34128   0188EE  C4F7 F4EA          	movff	tblptrh,fsr0h
 34129   0188F2  50EF               	movf	indf0,w,c
 34130   0188F4                     u30370:
 34131   0188F4  0A2F               	xorlw	47
 34132   0188F6  B4D8               	btfsc	status,2,c
 34133   0188F8  EF80  F0C4         	goto	u30381
 34134   0188FC  EF82  F0C4         	goto	u30380
 34135   018900                     u30381:
 34136   018900  EFB5  F0C4         	goto	l22235
 34137   018904                     u30380:
 34138   018904  C686  F4F6         	movff	follow_path@path,tblptrl
 34139   018908  C687  F4F7         	movff	follow_path@path+1,tblptrh
 34140   01890C  0E00               	movlw	low (__mediumconst shr (0+16))
 34141   01890E  6EF8               	movwf	tblptru,c
 34142   018910  0E3F               	movlw	(high __ramtop+-1)
 34143   018912  64F7               	cpfsgt	tblptrh,c
 34144   018914  D003               	bra	u30397
 34145   018916  0008               	tblrd		*
 34146   018918  50F5               	movf	tablat,w,c
 34147   01891A  D005               	bra	u30390
 34148   01891C                     u30397:
 34149   01891C  C4F6 F4E9          	movff	tblptrl,fsr0l
 34150   018920  C4F7 F4EA          	movff	tblptrh,fsr0h
 34151   018924  50EF               	movf	indf0,w,c
 34152   018926                     u30390:
 34153   018926  0A5C               	xorlw	92
 34154   018928  B4D8               	btfsc	status,2,c
 34155   01892A  EF99  F0C4         	goto	u30401
 34156   01892E  EF9B  F0C4         	goto	u30400
 34157   018932                     u30401:
 34158   018932  EFB5  F0C4         	goto	l22235
 34159   018936                     u30400:
 34160   018936                     
 34161                           ;../fatfs/ff.c: 3064:   dp->obj.sclust = fs->cdir;
 34162   018936  0106               	movlb	6	; () banked
 34163   018938  EE20 F014          	lfsr	2,20
 34164   01893C  518E               	movf	follow_path@fs& (0+255),w,b
 34165   01893E  26D9               	addwf	fsr2l,f,c
 34166   018940  518F               	movf	(follow_path@fs+1)& (0+255),w,b
 34167   018942  22DA               	addwfc	fsr2h,f,c
 34168   018944  EE10 F006          	lfsr	1,6
 34169   018948  5184               	movf	follow_path@dp& (0+255),w,b
 34170   01894A  26E1               	addwf	fsr1l,f,c
 34171   01894C  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34172   01894E  22E2               	addwfc	fsr1h,f,c
 34173   018950  C4DE F4E6          	movff	postinc2,postinc1
 34174   018954  C4DE F4E6          	movff	postinc2,postinc1
 34175   018958  C4DE F4E6          	movff	postinc2,postinc1
 34176   01895C  C4DE F4E6          	movff	postinc2,postinc1
 34177                           
 34178                           ;../fatfs/ff.c: 3065:  } else
 34179   018960  EFF2  F0C4         	goto	l22241
 34180   018964                     l22233:
 34181   018964  0106               	movlb	6	; () banked
 34182   018966  4B86               	infsnz	follow_path@path& (0+255),f,b
 34183   018968  2B87               	incf	(follow_path@path+1)& (0+255),f,b
 34184   01896A                     l22235:
 34185   01896A  C686  F4F6         	movff	follow_path@path,tblptrl
 34186   01896E  C687  F4F7         	movff	follow_path@path+1,tblptrh
 34187   018972  0E00               	movlw	low (__mediumconst shr (0+16))
 34188   018974  6EF8               	movwf	tblptru,c
 34189   018976  0E3F               	movlw	(high __ramtop+-1)
 34190   018978  64F7               	cpfsgt	tblptrh,c
 34191   01897A  D003               	bra	u30417
 34192   01897C  0008               	tblrd		*
 34193   01897E  50F5               	movf	tablat,w,c
 34194   018980  D005               	bra	u30410
 34195   018982                     u30417:
 34196   018982  C4F6 F4E9          	movff	tblptrl,fsr0l
 34197   018986  C4F7 F4EA          	movff	tblptrh,fsr0h
 34198   01898A  50EF               	movf	indf0,w,c
 34199   01898C                     u30410:
 34200   01898C  0A2F               	xorlw	47
 34201   01898E  B4D8               	btfsc	status,2,c
 34202   018990  EFCC  F0C4         	goto	u30421
 34203   018994  EFCE  F0C4         	goto	u30420
 34204   018998                     u30421:
 34205   018998  EFB2  F0C4         	goto	l22233
 34206   01899C                     u30420:
 34207   01899C  C686  F4F6         	movff	follow_path@path,tblptrl
 34208   0189A0  C687  F4F7         	movff	follow_path@path+1,tblptrh
 34209   0189A4  0E00               	movlw	low (__mediumconst shr (0+16))
 34210   0189A6  6EF8               	movwf	tblptru,c
 34211   0189A8  0E3F               	movlw	(high __ramtop+-1)
 34212   0189AA  64F7               	cpfsgt	tblptrh,c
 34213   0189AC  D003               	bra	u30437
 34214   0189AE  0008               	tblrd		*
 34215   0189B0  50F5               	movf	tablat,w,c
 34216   0189B2  D005               	bra	u30430
 34217   0189B4                     u30437:
 34218   0189B4  C4F6 F4E9          	movff	tblptrl,fsr0l
 34219   0189B8  C4F7 F4EA          	movff	tblptrh,fsr0h
 34220   0189BC  50EF               	movf	indf0,w,c
 34221   0189BE                     u30430:
 34222   0189BE  0A5C               	xorlw	92
 34223   0189C0  B4D8               	btfsc	status,2,c
 34224   0189C2  EFE5  F0C4         	goto	u30441
 34225   0189C6  EFE7  F0C4         	goto	u30440
 34226   0189CA                     u30441:
 34227   0189CA  EFB2  F0C4         	goto	l22233
 34228   0189CE                     u30440:
 34229   0189CE                     
 34230                           ;../fatfs/ff.c: 3069:   dp->obj.sclust = 0;
 34231   0189CE  0106               	movlb	6	; () banked
 34232   0189D0  EE20 F006          	lfsr	2,6
 34233   0189D4  5184               	movf	follow_path@dp& (0+255),w,b
 34234   0189D6  26D9               	addwf	fsr2l,f,c
 34235   0189D8  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34236   0189DA  22DA               	addwfc	fsr2h,f,c
 34237   0189DC  6ADE               	clrf	postinc2,c
 34238   0189DE  6ADE               	clrf	postinc2,c
 34239   0189E0  6ADE               	clrf	postinc2,c
 34240   0189E2  6ADD               	clrf	postdec2,c
 34241   0189E4                     l22241:
 34242                           
 34243                           ; BSR set to: 6
 34244                           ;../fatfs/ff.c: 3088:  if ((UINT)*path < ' ') {
 34245   0189E4  C686  F4F6         	movff	follow_path@path,tblptrl
 34246   0189E8  C687  F4F7         	movff	follow_path@path+1,tblptrh
 34247   0189EC  0E00               	movlw	low (__mediumconst shr (0+16))
 34248   0189EE  6EF8               	movwf	tblptru,c
 34249   0189F0  0E3F               	movlw	(high __ramtop+-1)
 34250   0189F2  64F7               	cpfsgt	tblptrh,c
 34251   0189F4  D003               	bra	u30457
 34252   0189F6  0008               	tblrd		*
 34253   0189F8  50F5               	movf	tablat,w,c
 34254   0189FA  D005               	bra	u30450
 34255   0189FC                     u30457:
 34256   0189FC  C4F6 F4E9          	movff	tblptrl,fsr0l
 34257   018A00  C4F7 F4EA          	movff	tblptrh,fsr0h
 34258   018A04  50EF               	movf	indf0,w,c
 34259   018A06                     u30450:
 34260   018A06  0106               	movlb	6	; () banked
 34261   018A08  6F88               	movwf	??_follow_path& (0+255),b
 34262   018A0A  0E20               	movlw	32
 34263   018A0C  6188               	cpfslt	??_follow_path& (0+255),b
 34264   018A0E  EF0B  F0C5         	goto	u30461
 34265   018A12  EF0D  F0C5         	goto	u30460
 34266   018A16                     u30461:
 34267   018A16  EF27  F0C5         	goto	l22247
 34268   018A1A                     u30460:
 34269   018A1A                     
 34270                           ; BSR set to: 6
 34271                           ;../fatfs/ff.c: 3089:   dp->fn[11] = 0x80;
 34272   018A1A  EE20 F027          	lfsr	2,39
 34273   018A1E  5184               	movf	follow_path@dp& (0+255),w,b
 34274   018A20  26D9               	addwf	fsr2l,f,c
 34275   018A22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34276   018A24  22DA               	addwfc	fsr2h,f,c
 34277   018A26  0E80               	movlw	128
 34278   018A28  6EDF               	movwf	indf2,c
 34279   018A2A                     
 34280                           ; BSR set to: 6
 34281                           ;../fatfs/ff.c: 3090:   res = dir_sdi(dp, 0);
 34282   018A2A  C684  F63E         	movff	follow_path@dp,dir_sdi@dp
 34283   018A2E  C685  F63F         	movff	follow_path@dp+1,dir_sdi@dp+1
 34284   018A32  0E00               	movlw	0
 34285   018A34  6F40               	movwf	dir_sdi@ofs& (0+255),b
 34286   018A36  0E00               	movlw	0
 34287   018A38  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 34288   018A3A  0E00               	movlw	0
 34289   018A3C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 34290   018A3E  0E00               	movlw	0
 34291   018A40  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 34292   018A42  EC72  F0BC         	call	_dir_sdi	;wreg free
 34293   018A46  0106               	movlb	6	; () banked
 34294   018A48  6F91               	movwf	follow_path@res& (0+255),b
 34295                           
 34296                           ;../fatfs/ff.c: 3092:  } else {
 34297   018A4A  EFCF  F0C5         	goto	l22281
 34298   018A4E                     l22247:
 34299                           
 34300                           ; BSR set to: 6
 34301                           ;../fatfs/ff.c: 3094:    res = create_name(dp, &path);
 34302   018A4E  C684  F50C         	movff	follow_path@dp,create_name@dp
 34303   018A52  C685  F50D         	movff	follow_path@dp+1,create_name@dp+1
 34304   018A56  0E86               	movlw	low follow_path@path
 34305   018A58  6E0E               	movwf	create_name@path^(0+1280),c
 34306   018A5A  0E06               	movlw	high follow_path@path
 34307   018A5C  6E0F               	movwf	(create_name@path+1)^(0+1280),c
 34308   018A5E  ECCA  F0A2         	call	_create_name	;wreg free
 34309   018A62  0106               	movlb	6	; () banked
 34310   018A64  6F91               	movwf	follow_path@res& (0+255),b
 34311   018A66                     
 34312                           ; BSR set to: 6
 34313                           ;../fatfs/ff.c: 3095:    if (res != FR_OK) break;
 34314   018A66  5191               	movf	follow_path@res& (0+255),w,b
 34315   018A68  B4D8               	btfsc	status,2,c
 34316   018A6A  EF39  F0C5         	goto	u30471
 34317   018A6E  EF3B  F0C5         	goto	u30470
 34318   018A72                     u30471:
 34319   018A72  EF3D  F0C5         	goto	l22253
 34320   018A76                     u30470:
 34321   018A76  EFCF  F0C5         	goto	l22281
 34322   018A7A                     l22253:
 34323                           
 34324                           ; BSR set to: 6
 34325                           ;../fatfs/ff.c: 3096:    res = dir_find(dp);
 34326   018A7A  C684  F67C         	movff	follow_path@dp,dir_find@dp
 34327   018A7E  C685  F67D         	movff	follow_path@dp+1,dir_find@dp+1
 34328   018A82  EC52  F0DE         	call	_dir_find	;wreg free
 34329   018A86  0106               	movlb	6	; () banked
 34330   018A88  6F91               	movwf	follow_path@res& (0+255),b
 34331   018A8A                     
 34332                           ; BSR set to: 6
 34333                           ;../fatfs/ff.c: 3097:    ns = dp->fn[11];
 34334   018A8A  EE20 F027          	lfsr	2,39
 34335   018A8E  5184               	movf	follow_path@dp& (0+255),w,b
 34336   018A90  26D9               	addwf	fsr2l,f,c
 34337   018A92  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34338   018A94  22DA               	addwfc	fsr2h,f,c
 34339   018A96  50DF               	movf	indf2,w,c
 34340   018A98  6F90               	movwf	follow_path@ns& (0+255),b
 34341   018A9A                     
 34342                           ; BSR set to: 6
 34343                           ;../fatfs/ff.c: 3098:    if (res != FR_OK) {
 34344   018A9A  5191               	movf	follow_path@res& (0+255),w,b
 34345   018A9C  B4D8               	btfsc	status,2,c
 34346   018A9E  EF53  F0C5         	goto	u30481
 34347   018AA2  EF55  F0C5         	goto	u30480
 34348   018AA6                     u30481:
 34349   018AA6  EF84  F0C5         	goto	l509
 34350   018AAA                     u30480:
 34351   018AAA                     
 34352                           ; BSR set to: 6
 34353                           ;../fatfs/ff.c: 3100:      if (2 && (ns & 0x20)) {
 34354   018AAA  0E04               	movlw	4
 34355   018AAC  1991               	xorwf	follow_path@res& (0+255),w,b
 34356   018AAE  A4D8               	btfss	status,2,c
 34357   018AB0  EF5C  F0C5         	goto	u30491
 34358   018AB4  EF5E  F0C5         	goto	u30490
 34359   018AB8                     u30491:
 34360   018AB8  EFCF  F0C5         	goto	l22281
 34361   018ABC                     u30490:
 34362   018ABC                     
 34363                           ; BSR set to: 6
 34364   018ABC  AB90               	btfss	follow_path@ns& (0+255),5,b
 34365   018ABE  EF63  F0C5         	goto	u30501
 34366   018AC2  EF65  F0C5         	goto	u30500
 34367   018AC6                     u30501:
 34368   018AC6  EF79  F0C5         	goto	l511
 34369   018ACA                     u30500:
 34370   018ACA                     
 34371                           ; BSR set to: 6
 34372                           ;../fatfs/ff.c: 3101:       if (!(ns & 0x04)) continue;
 34373   018ACA  B590               	btfsc	follow_path@ns& (0+255),2,b
 34374   018ACC  EF6A  F0C5         	goto	u30511
 34375   018AD0  EF6C  F0C5         	goto	u30510
 34376   018AD4                     u30511:
 34377   018AD4  EF6E  F0C5         	goto	l22267
 34378   018AD8                     u30510:
 34379   018AD8  EF27  F0C5         	goto	l22247
 34380   018ADC                     l22267:
 34381                           
 34382                           ; BSR set to: 6
 34383                           ;../fatfs/ff.c: 3102:       dp->fn[11] = 0x80;
 34384   018ADC  EE20 F027          	lfsr	2,39
 34385   018AE0  5184               	movf	follow_path@dp& (0+255),w,b
 34386   018AE2  26D9               	addwf	fsr2l,f,c
 34387   018AE4  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34388   018AE6  22DA               	addwfc	fsr2h,f,c
 34389   018AE8  0E80               	movlw	128
 34390   018AEA  6EDF               	movwf	indf2,c
 34391   018AEC                     
 34392                           ; BSR set to: 6
 34393                           ;../fatfs/ff.c: 3103:       res = FR_OK;
 34394   018AEC  6B91               	clrf	follow_path@res& (0+255),b
 34395                           
 34396                           ;../fatfs/ff.c: 3104:      } else {
 34397   018AEE  EFCF  F0C5         	goto	l22281
 34398   018AF2                     l511:
 34399                           
 34400                           ; BSR set to: 6
 34401                           ;../fatfs/ff.c: 3105:       if (!(ns & 0x04)) res = FR_NO_PATH;
 34402   018AF2  B590               	btfsc	follow_path@ns& (0+255),2,b
 34403   018AF4  EF7E  F0C5         	goto	u30521
 34404   018AF8  EF80  F0C5         	goto	u30520
 34405   018AFC                     u30521:
 34406   018AFC  EFCF  F0C5         	goto	l22281
 34407   018B00                     u30520:
 34408   018B00                     l22271:
 34409                           
 34410                           ; BSR set to: 6
 34411   018B00  0E05               	movlw	5
 34412   018B02  6F91               	movwf	follow_path@res& (0+255),b
 34413   018B04  EFCF  F0C5         	goto	l22281
 34414   018B08                     l509:
 34415                           
 34416                           ; BSR set to: 6
 34417                           ;../fatfs/ff.c: 3110:    if (ns & 0x04) break;
 34418   018B08  A590               	btfss	follow_path@ns& (0+255),2,b
 34419   018B0A  EF89  F0C5         	goto	u30531
 34420   018B0E  EF8B  F0C5         	goto	u30530
 34421   018B12                     u30531:
 34422   018B12  EF8D  F0C5         	goto	l22275
 34423   018B16                     u30530:
 34424   018B16  EFCF  F0C5         	goto	l22281
 34425   018B1A                     l22275:
 34426                           
 34427                           ; BSR set to: 6
 34428                           ;../fatfs/ff.c: 3112:    if (!(dp->obj.attr & 0x10)) {
 34429   018B1A  EE20 F004          	lfsr	2,4
 34430   018B1E  5184               	movf	follow_path@dp& (0+255),w,b
 34431   018B20  26D9               	addwf	fsr2l,f,c
 34432   018B22  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34433   018B24  22DA               	addwfc	fsr2h,f,c
 34434   018B26  B8DF               	btfsc	indf2,4,c
 34435   018B28  EF98  F0C5         	goto	u30541
 34436   018B2C  EF9A  F0C5         	goto	u30540
 34437   018B30                     u30541:
 34438   018B30  EF9C  F0C5         	goto	l22279
 34439   018B34                     u30540:
 34440   018B34  EF80  F0C5         	goto	l22271
 34441   018B38                     l22279:
 34442                           
 34443                           ; BSR set to: 6
 34444                           ;../fatfs/ff.c: 3123:    {;../fatfs/ff.c: 3124:     dp->obj.sclust = ld_clust(fs, fs->wi
      +                          n + dp->dptr % ((UINT)512));
 34445   018B38  C68E  F50B         	movff	follow_path@fs,ld_clust@fs
 34446   018B3C  C68F  F50C         	movff	follow_path@fs+1,ld_clust@fs+1
 34447   018B40  EE20 F00E          	lfsr	2,14
 34448   018B44  5184               	movf	follow_path@dp& (0+255),w,b
 34449   018B46  26D9               	addwf	fsr2l,f,c
 34450   018B48  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34451   018B4A  22DA               	addwfc	fsr2h,f,c
 34452   018B4C  C4DE F688          	movff	postinc2,??_follow_path
 34453   018B50  C4DD F689          	movff	postdec2,??_follow_path+1
 34454   018B54  0EFF               	movlw	255
 34455   018B56  1588               	andwf	??_follow_path& (0+255),w,b
 34456   018B58  6F8A               	movwf	(??_follow_path+2)& (0+255),b
 34457   018B5A  0E01               	movlw	1
 34458   018B5C  1589               	andwf	(??_follow_path+1)& (0+255),w,b
 34459   018B5E  6F8B               	movwf	(??_follow_path+3)& (0+255),b
 34460   018B60  518A               	movf	(??_follow_path+2)& (0+255),w,b
 34461   018B62  258E               	addwf	follow_path@fs& (0+255),w,b
 34462   018B64  6F8C               	movwf	(??_follow_path+4)& (0+255),b
 34463   018B66  518B               	movf	(??_follow_path+3)& (0+255),w,b
 34464   018B68  218F               	addwfc	(follow_path@fs+1)& (0+255),w,b
 34465   018B6A  6F8D               	movwf	(??_follow_path+5)& (0+255),b
 34466   018B6C  0E34               	movlw	52
 34467   018B6E  258C               	addwf	(??_follow_path+4)& (0+255),w,b
 34468   018B70  6E0D               	movwf	ld_clust@dir^(0+1280),c
 34469   018B72  0E00               	movlw	0
 34470   018B74  218D               	addwfc	(??_follow_path+5)& (0+255),w,b
 34471   018B76  6E0E               	movwf	(ld_clust@dir+1)^(0+1280),c
 34472   018B78  EC3A  F0F9         	call	_ld_clust	;wreg free
 34473   018B7C  0106               	movlb	6	; () banked
 34474   018B7E  EE20 F006          	lfsr	2,6
 34475   018B82  5184               	movf	follow_path@dp& (0+255),w,b
 34476   018B84  26D9               	addwf	fsr2l,f,c
 34477   018B86  5185               	movf	(follow_path@dp+1)& (0+255),w,b
 34478   018B88  22DA               	addwfc	fsr2h,f,c
 34479   018B8A  C50B  F4DE         	movff	?_ld_clust,postinc2
 34480   018B8E  C50C  F4DE         	movff	?_ld_clust+1,postinc2
 34481   018B92  C50D  F4DE         	movff	?_ld_clust+2,postinc2
 34482   018B96  C50E  F4DE         	movff	?_ld_clust+3,postinc2
 34483   018B9A  EF27  F0C5         	goto	l22247
 34484   018B9E                     l22281:
 34485                           
 34486                           ; BSR set to: 6
 34487                           ;../fatfs/ff.c: 3129:  return res;
 34488   018B9E  5191               	movf	follow_path@res& (0+255),w,b
 34489   018BA0                     
 34490                           ; BSR set to: 6
 34491   018BA0  0012               	return		;funcret
 34492   018BA2                     __end_of_follow_path:
 34493                           	callstack 0
 34494                           
 34495 ;; *************** function _ld_clust *****************
 34496 ;; Defined at:
 34497 ;;		line 1849 in file "../fatfs/ff.c"
 34498 ;; Parameters:    Size  Location     Type
 34499 ;;  fs              2   10[COMRAM] PTR struct .
 34500 ;;		 -> fs(564), NULL(0), 
 34501 ;;  dir             2   12[COMRAM] PTR const unsigned char 
 34502 ;;		 -> fs$win(512), fs(564), NULL(0), 
 34503 ;; Auto vars:     Size  Location     Type
 34504 ;;  cl              4   18[COMRAM] unsigned long 
 34505 ;; Return value:  Size  Location     Type
 34506 ;;                  4   10[COMRAM] unsigned long 
 34507 ;; Registers used:
 34508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34509 ;; Tracked objects:
 34510 ;;		On entry : 0/0
 34511 ;;		On exit  : 0/0
 34512 ;;		Unchanged: 0/0
 34513 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34518 ;;Total ram usage:       12 bytes
 34519 ;; Hardware stack levels used: 1
 34520 ;; Hardware stack levels required when called: 2
 34521 ;; This function calls:
 34522 ;;		_ld_word
 34523 ;; This function is called by:
 34524 ;;		_follow_path
 34525 ;;		_f_open
 34526 ;;		_f_chdir
 34527 ;;		_f_getcwd
 34528 ;;		_f_opendir
 34529 ;;		_f_unlink
 34530 ;;		_f_rename
 34531 ;; This function uses a non-reentrant model
 34532 ;;
 34533                           
 34534                           	psect	text80
 34535   01F274                     __ptext80:
 34536                           	callstack 0
 34537   01F274                     _ld_clust:
 34538                           	callstack 117
 34539   01F274                     
 34540                           ;../fatfs/ff.c: 1850:  FATFS* fs,;../fatfs/ff.c: 1851:  const BYTE* dir;../fatfs/ff.c: 1
      +                          853: {;../fatfs/ff.c: 1854:  DWORD cl;;../fatfs/ff.c: 1856:  cl = ld_word(dir + 26);
 34541   01F274  0E1A               	movlw	26
 34542   01F276  240D               	addwf	ld_clust@dir^(0+1280),w,c
 34543   01F278  6E04               	movwf	ld_word@ptr^(0+1280),c
 34544   01F27A  0E00               	movlw	0
 34545   01F27C  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 34546   01F27E  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 34547   01F280  EC4C  F0FF         	call	_ld_word	;wreg free
 34548   01F284  C504  F513         	movff	?_ld_word,ld_clust@cl
 34549   01F288  C505  F514         	movff	?_ld_word+1,ld_clust@cl+1
 34550   01F28C  6A15               	clrf	(ld_clust@cl+2)^(0+1280),c
 34551   01F28E  6A16               	clrf	(ld_clust@cl+3)^(0+1280),c
 34552   01F290                     
 34553                           ;../fatfs/ff.c: 1857:  if (fs->fs_type == 3) {
 34554   01F290  C50B  F4D9         	movff	ld_clust@fs,fsr2l
 34555   01F294  C50C  F4DA         	movff	ld_clust@fs+1,fsr2h
 34556   01F298  0E03               	movlw	3
 34557   01F29A  18DE               	xorwf	postinc2,w,c
 34558   01F29C  A4D8               	btfss	status,2,c
 34559   01F29E  EF53  F0F9         	goto	u29541
 34560   01F2A2  EF55  F0F9         	goto	u29540
 34561   01F2A6                     u29541:
 34562   01F2A6  EF71  F0F9         	goto	l21811
 34563   01F2AA                     u29540:
 34564   01F2AA                     
 34565                           ;../fatfs/ff.c: 1858:   cl |= (DWORD)ld_word(dir + 20) << 16;
 34566   01F2AA  0E14               	movlw	20
 34567   01F2AC  240D               	addwf	ld_clust@dir^(0+1280),w,c
 34568   01F2AE  6E04               	movwf	ld_word@ptr^(0+1280),c
 34569   01F2B0  0E00               	movlw	0
 34570   01F2B2  200E               	addwfc	(ld_clust@dir+1)^(0+1280),w,c
 34571   01F2B4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 34572   01F2B6  EC4C  F0FF         	call	_ld_word	;wreg free
 34573   01F2BA  5004               	movf	?_ld_word^(0+1280),w,c
 34574   01F2BC  6E0F               	movwf	??_ld_clust^(0+1280),c
 34575   01F2BE  5005               	movf	(?_ld_word+1)^(0+1280),w,c
 34576   01F2C0  6E10               	movwf	(??_ld_clust+1)^(0+1280),c
 34577   01F2C2  6A11               	clrf	(??_ld_clust+2)^(0+1280),c
 34578   01F2C4  6A12               	clrf	(??_ld_clust+3)^(0+1280),c
 34579   01F2C6  C510  F512         	movff	??_ld_clust+1,??_ld_clust+3
 34580   01F2CA  C50F  F511         	movff	??_ld_clust,??_ld_clust+2
 34581   01F2CE  6A10               	clrf	(??_ld_clust+1)^(0+1280),c
 34582   01F2D0  6A0F               	clrf	??_ld_clust^(0+1280),c
 34583   01F2D2  500F               	movf	??_ld_clust^(0+1280),w,c
 34584   01F2D4  1213               	iorwf	ld_clust@cl^(0+1280),f,c
 34585   01F2D6  5010               	movf	(??_ld_clust+1)^(0+1280),w,c
 34586   01F2D8  1214               	iorwf	(ld_clust@cl+1)^(0+1280),f,c
 34587   01F2DA  5011               	movf	(??_ld_clust+2)^(0+1280),w,c
 34588   01F2DC  1215               	iorwf	(ld_clust@cl+2)^(0+1280),f,c
 34589   01F2DE  5012               	movf	(??_ld_clust+3)^(0+1280),w,c
 34590   01F2E0  1216               	iorwf	(ld_clust@cl+3)^(0+1280),f,c
 34591   01F2E2                     l21811:
 34592                           
 34593                           ;../fatfs/ff.c: 1861:  return cl;
 34594   01F2E2  C513  F50B         	movff	ld_clust@cl,?_ld_clust
 34595   01F2E6  C514  F50C         	movff	ld_clust@cl+1,?_ld_clust+1
 34596   01F2EA  C515  F50D         	movff	ld_clust@cl+2,?_ld_clust+2
 34597   01F2EE  C516  F50E         	movff	ld_clust@cl+3,?_ld_clust+3
 34598   01F2F2  0012               	return		;funcret
 34599   01F2F4                     __end_of_ld_clust:
 34600                           	callstack 0
 34601                           
 34602 ;; *************** function _dir_find *****************
 34603 ;; Defined at:
 34604 ;;		line 2385 in file "../fatfs/ff.c"
 34605 ;; Parameters:    Size  Location     Type
 34606 ;;  dp              2  124[BANK6 ] PTR struct .
 34607 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_rename@djn(40), f_rename@djo(40), 
 34608 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 34609 ;;		 -> f_open@dj(40), 
 34610 ;; Auto vars:     Size  Location     Type
 34611 ;;  fs              2  128[BANK6 ] PTR struct .
 34612 ;;		 -> fs(564), NULL(0), 
 34613 ;;  res             1  131[BANK6 ] enum E597
 34614 ;;  c               1  130[BANK6 ] unsigned char 
 34615 ;; Return value:  Size  Location     Type
 34616 ;;                  1    wreg      enum E597
 34617 ;; Registers used:
 34618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34619 ;; Tracked objects:
 34620 ;;		On entry : 0/0
 34621 ;;		On exit  : 0/0
 34622 ;;		Unchanged: 0/0
 34623 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34624 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34625 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34626 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34627 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34628 ;;Total ram usage:        8 bytes
 34629 ;; Hardware stack levels used: 1
 34630 ;; Hardware stack levels required when called: 17
 34631 ;; This function calls:
 34632 ;;		_dir_next
 34633 ;;		_dir_sdi
 34634 ;;		_memcmp
 34635 ;;		_move_window
 34636 ;; This function is called by:
 34637 ;;		_follow_path
 34638 ;; This function uses a non-reentrant model
 34639 ;;
 34640                           
 34641                           	psect	text81
 34642   01BCA4                     __ptext81:
 34643                           	callstack 0
 34644   01BCA4                     _dir_find:
 34645                           	callstack 101
 34646   01BCA4                     
 34647                           ;../fatfs/ff.c: 2386:  DIR* dp;../fatfs/ff.c: 2388: {;../fatfs/ff.c: 2389:  FRESULT res;
      +                          ;../fatfs/ff.c: 2390:  FATFS *fs = dp->obj.fs;
 34648   01BCA4  C67C  F4D9         	movff	dir_find@dp,fsr2l
 34649   01BCA8  C67D  F4DA         	movff	dir_find@dp+1,fsr2h
 34650   01BCAC  C4DE F680          	movff	postinc2,dir_find@fs
 34651   01BCB0  C4DD F681          	movff	postdec2,dir_find@fs+1
 34652   01BCB4                     
 34653                           ;../fatfs/ff.c: 2391:  BYTE c;;../fatfs/ff.c: 2396:  res = dir_sdi(dp, 0);
 34654   01BCB4  C67C  F63E         	movff	dir_find@dp,dir_sdi@dp
 34655   01BCB8  C67D  F63F         	movff	dir_find@dp+1,dir_sdi@dp+1
 34656   01BCBC  0E00               	movlw	0
 34657   01BCBE  0106               	movlb	6	; () banked
 34658   01BCC0  6F40               	movwf	dir_sdi@ofs& (0+255),b
 34659   01BCC2  0E00               	movlw	0
 34660   01BCC4  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 34661   01BCC6  0E00               	movlw	0
 34662   01BCC8  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 34663   01BCCA  0E00               	movlw	0
 34664   01BCCC  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 34665   01BCCE  EC72  F0BC         	call	_dir_sdi	;wreg free
 34666   01BCD2  0106               	movlb	6	; () banked
 34667   01BCD4  6F83               	movwf	dir_find@res& (0+255),b
 34668   01BCD6                     
 34669                           ; BSR set to: 6
 34670                           ;../fatfs/ff.c: 2397:  if (res != FR_OK) return res;
 34671   01BCD6  5183               	movf	dir_find@res& (0+255),w,b
 34672   01BCD8  B4D8               	btfsc	status,2,c
 34673   01BCDA  EF71  F0DE         	goto	u29561
 34674   01BCDE  EF73  F0DE         	goto	u29560
 34675   01BCE2                     u29561:
 34676   01BCE2  EF77  F0DE         	goto	l21831
 34677   01BCE6                     u29560:
 34678   01BCE6                     l21827:
 34679   01BCE6  0106               	movlb	6	; () banked
 34680   01BCE8  5183               	movf	dir_find@res& (0+255),w,b
 34681   01BCEA  EF13  F0DF         	goto	l423
 34682   01BCEE                     l21831:
 34683                           
 34684                           ; BSR set to: 6
 34685                           ;../fatfs/ff.c: 2423:   res = move_window(fs, dp->sect);
 34686   01BCEE  C680  F61A         	movff	dir_find@fs,move_window@fs
 34687   01BCF2  C681  F61B         	movff	dir_find@fs+1,move_window@fs+1
 34688   01BCF6  EE20 F016          	lfsr	2,22
 34689   01BCFA  517C               	movf	dir_find@dp& (0+255),w,b
 34690   01BCFC  26D9               	addwf	fsr2l,f,c
 34691   01BCFE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34692   01BD00  22DA               	addwfc	fsr2h,f,c
 34693   01BD02  C4DE F61C          	movff	postinc2,move_window@sect
 34694   01BD06  C4DE F61D          	movff	postinc2,move_window@sect+1
 34695   01BD0A  C4DE F61E          	movff	postinc2,move_window@sect+2
 34696   01BD0E  C4DE F61F          	movff	postinc2,move_window@sect+3
 34697   01BD12  ECAB  F0EF         	call	_move_window	;wreg free
 34698   01BD16  0106               	movlb	6	; () banked
 34699   01BD18  6F83               	movwf	dir_find@res& (0+255),b
 34700   01BD1A                     
 34701                           ; BSR set to: 6
 34702                           ;../fatfs/ff.c: 2424:   if (res != FR_OK) break;
 34703   01BD1A  5183               	movf	dir_find@res& (0+255),w,b
 34704   01BD1C  B4D8               	btfsc	status,2,c
 34705   01BD1E  EF93  F0DE         	goto	u29571
 34706   01BD22  EF95  F0DE         	goto	u29570
 34707   01BD26                     u29571:
 34708   01BD26  EF97  F0DE         	goto	l21837
 34709   01BD2A                     u29570:
 34710   01BD2A  EF73  F0DE         	goto	l21827
 34711   01BD2E                     l21837:
 34712                           
 34713                           ; BSR set to: 6
 34714                           ;../fatfs/ff.c: 2425:   c = dp->dir[0];
 34715   01BD2E  EE20 F01A          	lfsr	2,26
 34716   01BD32  517C               	movf	dir_find@dp& (0+255),w,b
 34717   01BD34  26D9               	addwf	fsr2l,f,c
 34718   01BD36  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34719   01BD38  22DA               	addwfc	fsr2h,f,c
 34720   01BD3A  C4DE F67E          	movff	postinc2,??_dir_find
 34721   01BD3E  C4DD F67F          	movff	postdec2,??_dir_find+1
 34722   01BD42  C67E  F4D9         	movff	??_dir_find,fsr2l
 34723   01BD46  C67F  F4DA         	movff	??_dir_find+1,fsr2h
 34724   01BD4A  50DF               	movf	indf2,w,c
 34725   01BD4C  6F82               	movwf	dir_find@c& (0+255),b
 34726   01BD4E                     
 34727                           ; BSR set to: 6
 34728                           ;../fatfs/ff.c: 2426:   if (c == 0) { res = FR_NO_FILE; break; }
 34729   01BD4E  5182               	movf	dir_find@c& (0+255),w,b
 34730   01BD50  A4D8               	btfss	status,2,c
 34731   01BD52  EFAD  F0DE         	goto	u29581
 34732   01BD56  EFAF  F0DE         	goto	u29580
 34733   01BD5A                     u29581:
 34734   01BD5A  EFB3  F0DE         	goto	l21843
 34735   01BD5E                     u29580:
 34736   01BD5E                     
 34737                           ; BSR set to: 6
 34738   01BD5E  0E04               	movlw	4
 34739   01BD60  6F83               	movwf	dir_find@res& (0+255),b
 34740   01BD62  EF73  F0DE         	goto	l21827
 34741   01BD66                     l21843:
 34742                           
 34743                           ; BSR set to: 6
 34744                           ;../fatfs/ff.c: 2449:   dp->obj.attr = dp->dir[11] & 0x3F;
 34745   01BD66  EE20 F004          	lfsr	2,4
 34746   01BD6A  517C               	movf	dir_find@dp& (0+255),w,b
 34747   01BD6C  26D9               	addwf	fsr2l,f,c
 34748   01BD6E  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34749   01BD70  22DA               	addwfc	fsr2h,f,c
 34750   01BD72  EE10 F01A          	lfsr	1,26
 34751   01BD76  517C               	movf	dir_find@dp& (0+255),w,b
 34752   01BD78  26E1               	addwf	fsr1l,f,c
 34753   01BD7A  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34754   01BD7C  22E2               	addwfc	fsr1h,f,c
 34755   01BD7E  EE00 F00B          	lfsr	0,11
 34756   01BD82  50E6               	movf	postinc1,w,c
 34757   01BD84  26E9               	addwf	fsr0l,f,c
 34758   01BD86  50E5               	movf	postdec1,w,c
 34759   01BD88  22EA               	addwfc	fsr0h,f,c
 34760   01BD8A  50EF               	movf	indf0,w,c
 34761   01BD8C  0B3F               	andlw	63
 34762   01BD8E  6EDF               	movwf	indf2,c
 34763   01BD90                     
 34764                           ; BSR set to: 6
 34765                           ;../fatfs/ff.c: 2450:   if (!(dp->dir[11] & 0x08) && !memcmp(dp->dir, dp->fn, 11)) break
      +                          ;
 34766   01BD90  EE20 F01A          	lfsr	2,26
 34767   01BD94  517C               	movf	dir_find@dp& (0+255),w,b
 34768   01BD96  26D9               	addwf	fsr2l,f,c
 34769   01BD98  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34770   01BD9A  22DA               	addwfc	fsr2h,f,c
 34771   01BD9C  EE10 F00B          	lfsr	1,11
 34772   01BDA0  50DE               	movf	postinc2,w,c
 34773   01BDA2  26E1               	addwf	fsr1l,f,c
 34774   01BDA4  50DD               	movf	postdec2,w,c
 34775   01BDA6  22E2               	addwfc	fsr1h,f,c
 34776   01BDA8  B6E7               	btfsc	indf1,3,c
 34777   01BDAA  EFD9  F0DE         	goto	u29591
 34778   01BDAE  EFDB  F0DE         	goto	u29590
 34779   01BDB2                     u29591:
 34780   01BDB2  EFFC  F0DE         	goto	l21851
 34781   01BDB6                     u29590:
 34782   01BDB6                     
 34783                           ; BSR set to: 6
 34784   01BDB6  EE20 F01A          	lfsr	2,26
 34785   01BDBA  517C               	movf	dir_find@dp& (0+255),w,b
 34786   01BDBC  26D9               	addwf	fsr2l,f,c
 34787   01BDBE  517D               	movf	(dir_find@dp+1)& (0+255),w,b
 34788   01BDC0  22DA               	addwfc	fsr2h,f,c
 34789   01BDC2  C4DE F504          	movff	postinc2,memcmp@vl
 34790   01BDC6  C4DD F505          	movff	postdec2,memcmp@vl+1
 34791   01BDCA  0E1C               	movlw	28
 34792   01BDCC  257C               	addwf	dir_find@dp& (0+255),w,b
 34793   01BDCE  6E06               	movwf	memcmp@vr^(0+1280),c
 34794   01BDD0  0E00               	movlw	0
 34795   01BDD2  217D               	addwfc	(dir_find@dp+1)& (0+255),w,b
 34796   01BDD4  6E07               	movwf	(memcmp@vr+1)^(0+1280),c
 34797   01BDD6  0E00               	movlw	0
 34798   01BDD8  6E09               	movwf	(memcmp@n+1)^(0+1280),c
 34799   01BDDA  0E0B               	movlw	11
 34800   01BDDC  6E08               	movwf	memcmp@n^(0+1280),c
 34801   01BDDE  EC23  F0EA         	call	_memcmp	;wreg free
 34802   01BDE2  5004               	movf	?_memcmp^(0+1280),w,c
 34803   01BDE4  1005               	iorwf	(?_memcmp+1)^(0+1280),w,c
 34804   01BDE6  A4D8               	btfss	status,2,c
 34805   01BDE8  EFF8  F0DE         	goto	u29601
 34806   01BDEC  EFFA  F0DE         	goto	u29600
 34807   01BDF0                     u29601:
 34808   01BDF0  EFFC  F0DE         	goto	l21851
 34809   01BDF4                     u29600:
 34810   01BDF4  EF73  F0DE         	goto	l21827
 34811   01BDF8                     l21851:
 34812                           
 34813                           ;../fatfs/ff.c: 2452:   res = dir_next(dp, 0);
 34814   01BDF8  C67C  F662         	movff	dir_find@dp,dir_next@dp
 34815   01BDFC  C67D  F663         	movff	dir_find@dp+1,dir_next@dp+1
 34816   01BE00  0E00               	movlw	0
 34817   01BE02  0106               	movlb	6	; () banked
 34818   01BE04  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 34819   01BE06  0E00               	movlw	0
 34820   01BE08  6F64               	movwf	dir_next@stretch& (0+255),b
 34821   01BE0A  ECCF  F0B0         	call	_dir_next	;wreg free
 34822   01BE0E  0106               	movlb	6	; () banked
 34823   01BE10  6F83               	movwf	dir_find@res& (0+255),b
 34824   01BE12                     
 34825                           ; BSR set to: 6
 34826                           ;../fatfs/ff.c: 2453:  } while (res == FR_OK);
 34827   01BE12  5183               	movf	dir_find@res& (0+255),w,b
 34828   01BE14  B4D8               	btfsc	status,2,c
 34829   01BE16  EF0F  F0DF         	goto	u29611
 34830   01BE1A  EF11  F0DF         	goto	u29610
 34831   01BE1E                     u29611:
 34832   01BE1E  EF77  F0DE         	goto	l21831
 34833   01BE22                     u29610:
 34834   01BE22  EF73  F0DE         	goto	l21827
 34835   01BE26                     l423:
 34836                           
 34837                           ; BSR set to: 6
 34838   01BE26  0012               	return		;funcret
 34839   01BE28                     __end_of_dir_find:
 34840                           	callstack 0
 34841                           
 34842 ;; *************** function _memcmp *****************
 34843 ;; Defined at:
 34844 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcmp.c"
 34845 ;; Parameters:    Size  Location     Type
 34846 ;;  vl              2    3[COMRAM] PTR const void 
 34847 ;;		 -> fs$win(512), rom(16), fs(564), tmp_buf(512), 
 34848 ;;		 -> NULL(0), 
 34849 ;;  vr              2    5[COMRAM] PTR const void 
 34850 ;;		 -> djn$fn(12), dir$fn(12), scan_files1@dir(40), scan_files@dir(40), 
 34851 ;;		 -> tmp_buf(512), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 34852 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 34853 ;;		 -> dj$fn(12), f_open@dj(40), STR_30(9), 
 34854 ;;  n               2    7[COMRAM] unsigned int 
 34855 ;; Auto vars:     Size  Location     Type
 34856 ;;  r               2   13[COMRAM] PTR const unsigned char 
 34857 ;;		 -> djn$fn(12), dir$fn(12), scan_files1@dir(40), scan_files@dir(40), 
 34858 ;;		 -> tmp_buf(512), f_rename@djn(40), djo$fn(12), f_rename@djo(40), 
 34859 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 34860 ;;		 -> dj$fn(12), f_open@dj(40), STR_30(9), 
 34861 ;;  l               2   11[COMRAM] PTR const unsigned char 
 34862 ;;		 -> fs$win(512), rom(16), fs(564), tmp_buf(512), 
 34863 ;;		 -> NULL(0), 
 34864 ;; Return value:  Size  Location     Type
 34865 ;;                  2    3[COMRAM] int 
 34866 ;; Registers used:
 34867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 34868 ;; Tracked objects:
 34869 ;;		On entry : 0/0
 34870 ;;		On exit  : 0/0
 34871 ;;		Unchanged: 0/0
 34872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34873 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34874 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34876 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34877 ;;Total ram usage:       12 bytes
 34878 ;; Hardware stack levels used: 1
 34879 ;; Hardware stack levels required when called: 1
 34880 ;; This function calls:
 34881 ;;		Nothing
 34882 ;; This function is called by:
 34883 ;;		_dir_find
 34884 ;;		_check_fs
 34885 ;;		_mem_init
 34886 ;;		_reset_cpu
 34887 ;; This function uses a non-reentrant model
 34888 ;;
 34889                           
 34890                           	psect	text82
 34891   01D446                     __ptext82:
 34892                           	callstack 0
 34893   01D446                     _memcmp:
 34894                           	callstack 115
 34895   01D446  C504  F50C         	movff	memcmp@vl,memcmp@l
 34896   01D44A  C505  F50D         	movff	memcmp@vl+1,memcmp@l+1
 34897   01D44E  C506  F50E         	movff	memcmp@vr,memcmp@r
 34898   01D452  C507  F50F         	movff	memcmp@vr+1,memcmp@r+1
 34899   01D456  EF34  F0EA         	goto	l21319
 34900   01D45A                     l21317:
 34901   01D45A  0608               	decf	memcmp@n^(0+1280),f,c
 34902   01D45C  A0D8               	btfss	status,0,c
 34903   01D45E  0609               	decf	(memcmp@n+1)^(0+1280),f,c
 34904   01D460  4A0C               	infsnz	memcmp@l^(0+1280),f,c
 34905   01D462  2A0D               	incf	(memcmp@l+1)^(0+1280),f,c
 34906   01D464  4A0E               	infsnz	memcmp@r^(0+1280),f,c
 34907   01D466  2A0F               	incf	(memcmp@r+1)^(0+1280),f,c
 34908   01D468                     l21319:
 34909   01D468  5008               	movf	memcmp@n^(0+1280),w,c
 34910   01D46A  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 34911   01D46C  B4D8               	btfsc	status,2,c
 34912   01D46E  EF3B  F0EA         	goto	u28581
 34913   01D472  EF3D  F0EA         	goto	u28580
 34914   01D476                     u28581:
 34915   01D476  EF68  F0EA         	goto	l21323
 34916   01D47A                     u28580:
 34917   01D47A  C50E  F4F6         	movff	memcmp@r,tblptrl
 34918   01D47E  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 34919   01D482  0E00               	movlw	low (__mediumconst shr (0+16))
 34920   01D484  6EF8               	movwf	tblptru,c
 34921   01D486  0E3F               	movlw	(high __ramtop+-1)
 34922   01D488  64F7               	cpfsgt	tblptrh,c
 34923   01D48A  D003               	bra	u28597
 34924   01D48C  0008               	tblrd		*
 34925   01D48E  50F5               	movf	tablat,w,c
 34926   01D490  D005               	bra	u28590
 34927   01D492                     u28597:
 34928   01D492  C4F6 F4E9          	movff	tblptrl,fsr0l
 34929   01D496  C4F7 F4EA          	movff	tblptrh,fsr0h
 34930   01D49A  50EF               	movf	indf0,w,c
 34931   01D49C                     u28590:
 34932   01D49C  6E0A               	movwf	??_memcmp^(0+1280),c
 34933   01D49E  C50C  F4F6         	movff	memcmp@l,tblptrl
 34934   01D4A2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 34935   01D4A6  0E00               	movlw	low (__mediumconst shr (0+16))
 34936   01D4A8  6EF8               	movwf	tblptru,c
 34937   01D4AA  0E3F               	movlw	(high __ramtop+-1)
 34938   01D4AC  64F7               	cpfsgt	tblptrh,c
 34939   01D4AE  D003               	bra	u28607
 34940   01D4B0  0008               	tblrd		*
 34941   01D4B2  50F5               	movf	tablat,w,c
 34942   01D4B4  D005               	bra	u28605
 34943   01D4B6                     u28607:
 34944   01D4B6  C4F6 F4E9          	movff	tblptrl,fsr0l
 34945   01D4BA  C4F7 F4EA          	movff	tblptrh,fsr0h
 34946   01D4BE  50EF               	movf	indf0,w,c
 34947   01D4C0                     u28605:
 34948   01D4C0  180A               	xorwf	??_memcmp^(0+1280),w,c
 34949   01D4C2  B4D8               	btfsc	status,2,c
 34950   01D4C4  EF66  F0EA         	goto	u28601
 34951   01D4C8  EF68  F0EA         	goto	u28600
 34952   01D4CC                     u28601:
 34953   01D4CC  EF2D  F0EA         	goto	l21317
 34954   01D4D0                     u28600:
 34955   01D4D0                     l21323:
 34956   01D4D0  5008               	movf	memcmp@n^(0+1280),w,c
 34957   01D4D2  1009               	iorwf	(memcmp@n+1)^(0+1280),w,c
 34958   01D4D4  A4D8               	btfss	status,2,c
 34959   01D4D6  EF6F  F0EA         	goto	u28611
 34960   01D4DA  EF71  F0EA         	goto	u28610
 34961   01D4DE                     u28611:
 34962   01D4DE  EF77  F0EA         	goto	l21327
 34963   01D4E2                     u28610:
 34964   01D4E2  0E00               	movlw	0
 34965   01D4E4  6E05               	movwf	(?_memcmp+1)^(0+1280),c
 34966   01D4E6  0E00               	movlw	0
 34967   01D4E8  6E04               	movwf	?_memcmp^(0+1280),c
 34968   01D4EA  EFA1  F0EA         	goto	l3301
 34969   01D4EE                     l21327:
 34970   01D4EE  C50C  F4F6         	movff	memcmp@l,tblptrl
 34971   01D4F2  C50D  F4F7         	movff	memcmp@l+1,tblptrh
 34972   01D4F6  0E00               	movlw	low (__mediumconst shr (0+16))
 34973   01D4F8  6EF8               	movwf	tblptru,c
 34974   01D4FA  0E3F               	movlw	(high __ramtop+-1)
 34975   01D4FC  64F7               	cpfsgt	tblptrh,c
 34976   01D4FE  D003               	bra	u28627
 34977   01D500  0008               	tblrd		*
 34978   01D502  50F5               	movf	tablat,w,c
 34979   01D504  D005               	bra	u28620
 34980   01D506                     u28627:
 34981   01D506  C4F6 F4E9          	movff	tblptrl,fsr0l
 34982   01D50A  C4F7 F4EA          	movff	tblptrh,fsr0h
 34983   01D50E  50EF               	movf	indf0,w,c
 34984   01D510                     u28620:
 34985   01D510  6E0A               	movwf	??_memcmp^(0+1280),c
 34986   01D512  C50E  F4F6         	movff	memcmp@r,tblptrl
 34987   01D516  C50F  F4F7         	movff	memcmp@r+1,tblptrh
 34988   01D51A  0E00               	movlw	low (__mediumconst shr (0+16))
 34989   01D51C  6EF8               	movwf	tblptru,c
 34990   01D51E  0E3F               	movlw	(high __ramtop+-1)
 34991   01D520  64F7               	cpfsgt	tblptrh,c
 34992   01D522  D003               	bra	u28637
 34993   01D524  0008               	tblrd		*
 34994   01D526  50F5               	movf	tablat,w,c
 34995   01D528  D005               	bra	u28630
 34996   01D52A                     u28637:
 34997   01D52A  C4F6 F4E9          	movff	tblptrl,fsr0l
 34998   01D52E  C4F7 F4EA          	movff	tblptrh,fsr0h
 34999   01D532  50EF               	movf	indf0,w,c
 35000   01D534                     u28630:
 35001   01D534  6E0B               	movwf	(??_memcmp+1)^(0+1280),c
 35002   01D536  500B               	movf	(??_memcmp+1)^(0+1280),w,c
 35003   01D538  5C0A               	subwf	??_memcmp^(0+1280),w,c
 35004   01D53A  6E04               	movwf	?_memcmp^(0+1280),c
 35005   01D53C  6A05               	clrf	(?_memcmp+1)^(0+1280),c
 35006   01D53E  A0D8               	btfss	status,0,c
 35007   01D540  0605               	decf	(?_memcmp+1)^(0+1280),f,c
 35008   01D542                     l3301:
 35009   01D542  0012               	return		;funcret
 35010   01D544                     __end_of_memcmp:
 35011                           	callstack 0
 35012                           
 35013 ;; *************** function _create_name *****************
 35014 ;; Defined at:
 35015 ;;		line 2848 in file "../fatfs/ff.c"
 35016 ;; Parameters:    Size  Location     Type
 35017 ;;  dp              2   11[COMRAM] PTR struct .
 35018 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_rename@djn(40), f_rename@djo(40), 
 35019 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), 
 35020 ;;		 -> f_open@dj(40), 
 35021 ;;  path            2   13[COMRAM] PTR PTR const unsigned c
 35022 ;;		 -> follow_path@path(2), 
 35023 ;; Auto vars:     Size  Location     Type
 35024 ;;  si              2   31[COMRAM] unsigned int 
 35025 ;;  p               2   29[COMRAM] PTR const unsigned char 
 35026 ;;		 -> tmp_buf$mezID(8), fin_name(13), STR_85(5), line_buf(81), 
 35027 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 35028 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 35029 ;;  sfn             2   27[COMRAM] PTR unsigned char 
 35030 ;;		 -> djn$fn(12), dir$fn(12), scan_files1@dir(40), scan_files@dir(40), 
 35031 ;;		 -> f_rename@djn(40), djo$fn(12), f_rename@djo(40), f_mkdir@dj(40), 
 35032 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), dj$fn(12), 
 35033 ;;		 -> f_open@dj(40), 
 35034 ;;  i               2   25[COMRAM] unsigned int 
 35035 ;;  ni              2   23[COMRAM] unsigned int 
 35036 ;;  c               1   33[COMRAM] unsigned char 
 35037 ;;  d               1   22[COMRAM] unsigned char 
 35038 ;; Return value:  Size  Location     Type
 35039 ;;                  1    wreg      enum E597
 35040 ;; Registers used:
 35041 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35042 ;; Tracked objects:
 35043 ;;		On entry : 0/0
 35044 ;;		On exit  : 0/0
 35045 ;;		Unchanged: 0/0
 35046 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35048 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35050 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35051 ;;Total ram usage:       23 bytes
 35052 ;; Hardware stack levels used: 1
 35053 ;; Hardware stack levels required when called: 2
 35054 ;; This function calls:
 35055 ;;		_dbc_1st
 35056 ;;		_dbc_2nd
 35057 ;;		_memset
 35058 ;;		_strchr
 35059 ;; This function is called by:
 35060 ;;		_follow_path
 35061 ;; This function uses a non-reentrant model
 35062 ;;
 35063                           
 35064                           	psect	text83
 35065   014594                     __ptext83:
 35066                           	callstack 0
 35067   014594                     _create_name:
 35068                           	callstack 116
 35069   014594                     
 35070                           ;../fatfs/ff.c: 2849:  DIR* dp,;../fatfs/ff.c: 2850:  const TCHAR** path;../fatfs/ff.c: 
      +                          2852: {;../fatfs/ff.c: 2981:  BYTE c, d;;../fatfs/ff.c: 2982:  BYTE *sfn;;../fatfs/ff.c:
      +                           2983:  UINT ni, si, i;;../fatfs/ff.c: 2984:  const char *p;;../fatfs/ff.c: 2987:  p = *
      +                          path; sfn = dp->fn;
 35071   014594  C50E  F4D9         	movff	create_name@path,fsr2l
 35072   014598  C50F  F4DA         	movff	create_name@path+1,fsr2h
 35073   01459C  C4DE F51E          	movff	postinc2,create_name@p
 35074   0145A0  C4DD F51F          	movff	postdec2,create_name@p+1
 35075   0145A4  0E1C               	movlw	28
 35076   0145A6  240C               	addwf	create_name@dp^(0+1280),w,c
 35077   0145A8  6E1C               	movwf	create_name@sfn^(0+1280),c
 35078   0145AA  0E00               	movlw	0
 35079   0145AC  200D               	addwfc	(create_name@dp+1)^(0+1280),w,c
 35080   0145AE  6E1D               	movwf	(create_name@sfn+1)^(0+1280),c
 35081   0145B0                     
 35082                           ;../fatfs/ff.c: 2988:  memset(sfn, ' ', 11);
 35083   0145B0  C51C  F504         	movff	create_name@sfn,memset@dest
 35084   0145B4  C51D  F505         	movff	create_name@sfn+1,memset@dest+1
 35085   0145B8  0E00               	movlw	0
 35086   0145BA  6E07               	movwf	(memset@c+1)^(0+1280),c
 35087   0145BC  0E20               	movlw	32
 35088   0145BE  6E06               	movwf	memset@c^(0+1280),c
 35089   0145C0  0E00               	movlw	0
 35090   0145C2  6E09               	movwf	(memset@n+1)^(0+1280),c
 35091   0145C4  0E0B               	movlw	11
 35092   0145C6  6E08               	movwf	memset@n^(0+1280),c
 35093   0145C8  EC14  F0FF         	call	_memset	;wreg free
 35094   0145CC                     
 35095                           ;../fatfs/ff.c: 2989:  si = i = 0; ni = 8;
 35096   0145CC  0E00               	movlw	0
 35097   0145CE  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 35098   0145D0  0E00               	movlw	0
 35099   0145D2  6E1A               	movwf	create_name@i^(0+1280),c
 35100   0145D4  C51A  F520         	movff	create_name@i,create_name@si
 35101   0145D8  C51B  F521         	movff	create_name@i+1,create_name@si+1
 35102   0145DC  0E00               	movlw	0
 35103   0145DE  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 35104   0145E0  0E08               	movlw	8
 35105   0145E2  6E18               	movwf	create_name@ni^(0+1280),c
 35106   0145E4                     
 35107                           ;../fatfs/ff.c: 2991:  if (p[si] == '.') {
 35108   0145E4  5020               	movf	create_name@si^(0+1280),w,c
 35109   0145E6  241E               	addwf	create_name@p^(0+1280),w,c
 35110   0145E8  6E10               	movwf	??_create_name^(0+1280),c
 35111   0145EA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35112   0145EC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35113   0145EE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35114   0145F0  C510  F4F6         	movff	??_create_name,tblptrl
 35115   0145F4  C511  F4F7         	movff	??_create_name+1,tblptrh
 35116   0145F8  0E00               	movlw	low (__mediumconst shr (0+16))
 35117   0145FA  6EF8               	movwf	tblptru,c
 35118   0145FC  0E3F               	movlw	(high __ramtop+-1)
 35119   0145FE  64F7               	cpfsgt	tblptrh,c
 35120   014600  D003               	bra	u29627
 35121   014602  0008               	tblrd		*
 35122   014604  50F5               	movf	tablat,w,c
 35123   014606  D005               	bra	u29620
 35124   014608                     u29627:
 35125   014608  C4F6 F4E9          	movff	tblptrl,fsr0l
 35126   01460C  C4F7 F4EA          	movff	tblptrh,fsr0h
 35127   014610  50EF               	movf	indf0,w,c
 35128   014612                     u29620:
 35129   014612  0A2E               	xorlw	46
 35130   014614  A4D8               	btfss	status,2,c
 35131   014616  EF0F  F0A3         	goto	u29631
 35132   01461A  EF11  F0A3         	goto	u29630
 35133   01461E                     u29631:
 35134   01461E  EF95  F0A3         	goto	l21907
 35135   014622                     u29630:
 35136   014622                     l21871:
 35137                           
 35138                           ;../fatfs/ff.c: 2993:    c = (BYTE)p[si++];
 35139   014622  5020               	movf	create_name@si^(0+1280),w,c
 35140   014624  241E               	addwf	create_name@p^(0+1280),w,c
 35141   014626  6E10               	movwf	??_create_name^(0+1280),c
 35142   014628  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35143   01462A  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35144   01462C  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35145   01462E  C510  F4F6         	movff	??_create_name,tblptrl
 35146   014632  C511  F4F7         	movff	??_create_name+1,tblptrh
 35147   014636  0E00               	movlw	low (__mediumconst shr (0+16))
 35148   014638  6EF8               	movwf	tblptru,c
 35149   01463A  0E3F               	movlw	(high __ramtop+-1)
 35150   01463C  64F7               	cpfsgt	tblptrh,c
 35151   01463E  D003               	bra	u29647
 35152   014640  0008               	tblrd		*
 35153   014642  50F5               	movf	tablat,w,c
 35154   014644  D005               	bra	u29640
 35155   014646                     u29647:
 35156   014646  C4F6 F4E9          	movff	tblptrl,fsr0l
 35157   01464A  C4F7 F4EA          	movff	tblptrh,fsr0h
 35158   01464E  50EF               	movf	indf0,w,c
 35159   014650                     u29640:
 35160   014650  6E22               	movwf	create_name@c^(0+1280),c
 35161   014652  4A20               	infsnz	create_name@si^(0+1280),f,c
 35162   014654  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 35163   014656                     
 35164                           ;../fatfs/ff.c: 2994:    if (c != '.' || si >= 3) break;
 35165   014656  0E2E               	movlw	46
 35166   014658  1822               	xorwf	create_name@c^(0+1280),w,c
 35167   01465A  A4D8               	btfss	status,2,c
 35168   01465C  EF32  F0A3         	goto	u29651
 35169   014660  EF34  F0A3         	goto	u29650
 35170   014664                     u29651:
 35171   014664  EF4D  F0A3         	goto	l21883
 35172   014668                     u29650:
 35173   014668  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35174   01466A  E109               	bnz	u29660
 35175   01466C  0E03               	movlw	3
 35176   01466E  5C20               	subwf	create_name@si^(0+1280),w,c
 35177   014670  A0D8               	btfss	status,0,c
 35178   014672  EF3D  F0A3         	goto	u29661
 35179   014676  EF3F  F0A3         	goto	u29660
 35180   01467A                     u29661:
 35181   01467A  EF41  F0A3         	goto	l21879
 35182   01467E                     u29660:
 35183   01467E  EF4D  F0A3         	goto	l21883
 35184   014682                     l21879:
 35185                           
 35186                           ;../fatfs/ff.c: 2995:    sfn[i++] = c;
 35187   014682  501A               	movf	create_name@i^(0+1280),w,c
 35188   014684  241C               	addwf	create_name@sfn^(0+1280),w,c
 35189   014686  6ED9               	movwf	fsr2l,c
 35190   014688  501B               	movf	(create_name@i+1)^(0+1280),w,c
 35191   01468A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 35192   01468C  6EDA               	movwf	fsr2h,c
 35193   01468E  C522  F4DF         	movff	create_name@c,indf2
 35194   014692  4A1A               	infsnz	create_name@i^(0+1280),f,c
 35195   014694  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 35196                           
 35197                           ;../fatfs/ff.c: 2996:   }
 35198   014696  EF11  F0A3         	goto	l21871
 35199   01469A                     l21883:
 35200                           
 35201                           ;../fatfs/ff.c: 2997:   if (!((c) == '/' || (c) == '\\') && c > ' ') return FR_INVALID_N
      +                          AME;
 35202   01469A  0E2F               	movlw	47
 35203   01469C  1822               	xorwf	create_name@c^(0+1280),w,c
 35204   01469E  B4D8               	btfsc	status,2,c
 35205   0146A0  EF54  F0A3         	goto	u29671
 35206   0146A4  EF56  F0A3         	goto	u29670
 35207   0146A8                     u29671:
 35208   0146A8  EF6A  F0A3         	goto	l21893
 35209   0146AC                     u29670:
 35210   0146AC  0E5C               	movlw	92
 35211   0146AE  1822               	xorwf	create_name@c^(0+1280),w,c
 35212   0146B0  B4D8               	btfsc	status,2,c
 35213   0146B2  EF5D  F0A3         	goto	u29681
 35214   0146B6  EF5F  F0A3         	goto	u29680
 35215   0146BA                     u29681:
 35216   0146BA  EF6A  F0A3         	goto	l21893
 35217   0146BE                     u29680:
 35218   0146BE  0E20               	movlw	32
 35219   0146C0  6422               	cpfsgt	create_name@c^(0+1280),c
 35220   0146C2  EF65  F0A3         	goto	u29691
 35221   0146C6  EF67  F0A3         	goto	u29690
 35222   0146CA                     u29691:
 35223   0146CA  EF6A  F0A3         	goto	l21893
 35224   0146CE                     u29690:
 35225   0146CE                     l21889:
 35226   0146CE  0E06               	movlw	6
 35227   0146D0  EF37  F0A5         	goto	l457
 35228   0146D4                     l21893:
 35229                           
 35230                           ;../fatfs/ff.c: 2998:   *path = p + si;
 35231   0146D4  5020               	movf	create_name@si^(0+1280),w,c
 35232   0146D6  241E               	addwf	create_name@p^(0+1280),w,c
 35233   0146D8  6E10               	movwf	??_create_name^(0+1280),c
 35234   0146DA  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35235   0146DC  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35236   0146DE  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35237   0146E0  C50E  F4D9         	movff	create_name@path,fsr2l
 35238   0146E4  C50F  F4DA         	movff	create_name@path+1,fsr2h
 35239   0146E8  C510  F4DE         	movff	??_create_name,postinc2
 35240   0146EC  C511  F4DD         	movff	??_create_name+1,postdec2
 35241   0146F0                     
 35242                           ;../fatfs/ff.c: 2999:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
 35243   0146F0  0E20               	movlw	32
 35244   0146F2  6422               	cpfsgt	create_name@c^(0+1280),c
 35245   0146F4  EF7E  F0A3         	goto	u29701
 35246   0146F8  EF80  F0A3         	goto	u29700
 35247   0146FC                     u29701:
 35248   0146FC  EF86  F0A3         	goto	l21899
 35249   014700                     u29700:
 35250   014700  0E00               	movlw	0
 35251   014702  6E14               	movwf	(_create_name$968+1)^(0+1280),c
 35252   014704  0E20               	movlw	32
 35253   014706  6E13               	movwf	_create_name$968^(0+1280),c
 35254   014708  EF8A  F0A3         	goto	l21901
 35255   01470C                     l21899:
 35256   01470C  0E00               	movlw	0
 35257   01470E  6E14               	movwf	(_create_name$968+1)^(0+1280),c
 35258   014710  0E24               	movlw	36
 35259   014712  6E13               	movwf	_create_name$968^(0+1280),c
 35260   014714                     l21901:
 35261   014714  EE20 F00B          	lfsr	2,11
 35262   014718  501C               	movf	create_name@sfn^(0+1280),w,c
 35263   01471A  26D9               	addwf	fsr2l,f,c
 35264   01471C  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 35265   01471E  22DA               	addwfc	fsr2h,f,c
 35266   014720  C513  F4DF         	movff	_create_name$968,indf2
 35267   014724                     l21903:
 35268                           
 35269                           ;../fatfs/ff.c: 3000:   return FR_OK;
 35270   014724  0E00               	movlw	0
 35271   014726  EF37  F0A5         	goto	l457
 35272   01472A                     l21907:
 35273                           
 35274                           ;../fatfs/ff.c: 3004:   c = (BYTE)p[si++];
 35275   01472A  5020               	movf	create_name@si^(0+1280),w,c
 35276   01472C  241E               	addwf	create_name@p^(0+1280),w,c
 35277   01472E  6E10               	movwf	??_create_name^(0+1280),c
 35278   014730  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35279   014732  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35280   014734  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35281   014736  C510  F4F6         	movff	??_create_name,tblptrl
 35282   01473A  C511  F4F7         	movff	??_create_name+1,tblptrh
 35283   01473E  0E00               	movlw	low (__mediumconst shr (0+16))
 35284   014740  6EF8               	movwf	tblptru,c
 35285   014742  0E3F               	movlw	(high __ramtop+-1)
 35286   014744  64F7               	cpfsgt	tblptrh,c
 35287   014746  D003               	bra	u29717
 35288   014748  0008               	tblrd		*
 35289   01474A  50F5               	movf	tablat,w,c
 35290   01474C  D005               	bra	u29710
 35291   01474E                     u29717:
 35292   01474E  C4F6 F4E9          	movff	tblptrl,fsr0l
 35293   014752  C4F7 F4EA          	movff	tblptrh,fsr0h
 35294   014756  50EF               	movf	indf0,w,c
 35295   014758                     u29710:
 35296   014758  6E22               	movwf	create_name@c^(0+1280),c
 35297   01475A  4A20               	infsnz	create_name@si^(0+1280),f,c
 35298   01475C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 35299   01475E                     
 35300                           ;../fatfs/ff.c: 3005:   if (c <= ' ') break;
 35301   01475E  0E21               	movlw	33
 35302   014760  6022               	cpfslt	create_name@c^(0+1280),c
 35303   014762  EFB5  F0A3         	goto	u29721
 35304   014766  EFB7  F0A3         	goto	u29720
 35305   01476A                     u29721:
 35306   01476A  EFB9  F0A3         	goto	l21915
 35307   01476E                     u29720:
 35308   01476E  EFCF  F0A4         	goto	l21975
 35309   014772                     l21915:
 35310                           
 35311                           ;../fatfs/ff.c: 3006:   if (((c) == '/' || (c) == '\\')) {
 35312   014772  0E2F               	movlw	47
 35313   014774  1822               	xorwf	create_name@c^(0+1280),w,c
 35314   014776  B4D8               	btfsc	status,2,c
 35315   014778  EFC0  F0A3         	goto	u29731
 35316   01477C  EFC2  F0A3         	goto	u29730
 35317   014780                     u29731:
 35318   014780  EFCF  F0A3         	goto	l21921
 35319   014784                     u29730:
 35320   014784  0E5C               	movlw	92
 35321   014786  1822               	xorwf	create_name@c^(0+1280),w,c
 35322   014788  A4D8               	btfss	status,2,c
 35323   01478A  EFC9  F0A3         	goto	u29741
 35324   01478E  EFCB  F0A3         	goto	u29740
 35325   014792                     u29741:
 35326   014792  EF0F  F0A4         	goto	l21925
 35327   014796                     u29740:
 35328   014796  EFCF  F0A3         	goto	l21921
 35329   01479A                     l21919:
 35330   01479A  4A20               	infsnz	create_name@si^(0+1280),f,c
 35331   01479C  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 35332   01479E                     l21921:
 35333   01479E  5020               	movf	create_name@si^(0+1280),w,c
 35334   0147A0  241E               	addwf	create_name@p^(0+1280),w,c
 35335   0147A2  6E10               	movwf	??_create_name^(0+1280),c
 35336   0147A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35337   0147A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35338   0147A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35339   0147AA  C510  F4F6         	movff	??_create_name,tblptrl
 35340   0147AE  C511  F4F7         	movff	??_create_name+1,tblptrh
 35341   0147B2  0E00               	movlw	low (__mediumconst shr (0+16))
 35342   0147B4  6EF8               	movwf	tblptru,c
 35343   0147B6  0E3F               	movlw	(high __ramtop+-1)
 35344   0147B8  64F7               	cpfsgt	tblptrh,c
 35345   0147BA  D003               	bra	u29757
 35346   0147BC  0008               	tblrd		*
 35347   0147BE  50F5               	movf	tablat,w,c
 35348   0147C0  D005               	bra	u29750
 35349   0147C2                     u29757:
 35350   0147C2  C4F6 F4E9          	movff	tblptrl,fsr0l
 35351   0147C6  C4F7 F4EA          	movff	tblptrh,fsr0h
 35352   0147CA  50EF               	movf	indf0,w,c
 35353   0147CC                     u29750:
 35354   0147CC  0A2F               	xorlw	47
 35355   0147CE  B4D8               	btfsc	status,2,c
 35356   0147D0  EFEC  F0A3         	goto	u29761
 35357   0147D4  EFEE  F0A3         	goto	u29760
 35358   0147D8                     u29761:
 35359   0147D8  EFCD  F0A3         	goto	l21919
 35360   0147DC                     u29760:
 35361   0147DC  5020               	movf	create_name@si^(0+1280),w,c
 35362   0147DE  241E               	addwf	create_name@p^(0+1280),w,c
 35363   0147E0  6E10               	movwf	??_create_name^(0+1280),c
 35364   0147E2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35365   0147E4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35366   0147E6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35367   0147E8  C510  F4F6         	movff	??_create_name,tblptrl
 35368   0147EC  C511  F4F7         	movff	??_create_name+1,tblptrh
 35369   0147F0  0E00               	movlw	low (__mediumconst shr (0+16))
 35370   0147F2  6EF8               	movwf	tblptru,c
 35371   0147F4  0E3F               	movlw	(high __ramtop+-1)
 35372   0147F6  64F7               	cpfsgt	tblptrh,c
 35373   0147F8  D003               	bra	u29777
 35374   0147FA  0008               	tblrd		*
 35375   0147FC  50F5               	movf	tablat,w,c
 35376   0147FE  D005               	bra	u29770
 35377   014800                     u29777:
 35378   014800  C4F6 F4E9          	movff	tblptrl,fsr0l
 35379   014804  C4F7 F4EA          	movff	tblptrh,fsr0h
 35380   014808  50EF               	movf	indf0,w,c
 35381   01480A                     u29770:
 35382   01480A  0A5C               	xorlw	92
 35383   01480C  B4D8               	btfsc	status,2,c
 35384   01480E  EF0B  F0A4         	goto	u29781
 35385   014812  EF0D  F0A4         	goto	u29780
 35386   014816                     u29781:
 35387   014816  EFCD  F0A3         	goto	l21919
 35388   01481A                     u29780:
 35389   01481A  EFCF  F0A4         	goto	l21975
 35390   01481E                     l21925:
 35391                           
 35392                           ;../fatfs/ff.c: 3010:   if (c == '.' || i >= ni) {
 35393   01481E  0E2E               	movlw	46
 35394   014820  1822               	xorwf	create_name@c^(0+1280),w,c
 35395   014822  B4D8               	btfsc	status,2,c
 35396   014824  EF16  F0A4         	goto	u29791
 35397   014828  EF18  F0A4         	goto	u29790
 35398   01482C                     u29791:
 35399   01482C  EF23  F0A4         	goto	l21929
 35400   014830                     u29790:
 35401   014830  5018               	movf	create_name@ni^(0+1280),w,c
 35402   014832  5C1A               	subwf	create_name@i^(0+1280),w,c
 35403   014834  5019               	movf	(create_name@ni+1)^(0+1280),w,c
 35404   014836  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 35405   014838  A0D8               	btfss	status,0,c
 35406   01483A  EF21  F0A4         	goto	u29801
 35407   01483E  EF23  F0A4         	goto	u29800
 35408   014842                     u29801:
 35409   014842  EF42  F0A4         	goto	l21939
 35410   014846                     u29800:
 35411   014846                     l21929:
 35412                           
 35413                           ;../fatfs/ff.c: 3011:    if (ni == 11 || c != '.') return FR_INVALID_NAME;
 35414   014846  0E0B               	movlw	11
 35415   014848  1818               	xorwf	create_name@ni^(0+1280),w,c
 35416   01484A  1019               	iorwf	(create_name@ni+1)^(0+1280),w,c
 35417   01484C  B4D8               	btfsc	status,2,c
 35418   01484E  EF2B  F0A4         	goto	u29811
 35419   014852  EF2D  F0A4         	goto	u29810
 35420   014856                     u29811:
 35421   014856  EF67  F0A3         	goto	l21889
 35422   01485A                     u29810:
 35423   01485A  0E2E               	movlw	46
 35424   01485C  1822               	xorwf	create_name@c^(0+1280),w,c
 35425   01485E  B4D8               	btfsc	status,2,c
 35426   014860  EF34  F0A4         	goto	u29821
 35427   014864  EF36  F0A4         	goto	u29820
 35428   014868                     u29821:
 35429   014868  EF38  F0A4         	goto	l21937
 35430   01486C                     u29820:
 35431   01486C  EF67  F0A3         	goto	l21889
 35432   014870                     l21937:
 35433                           
 35434                           ;../fatfs/ff.c: 3012:    i = 8; ni = 11;
 35435   014870  0E00               	movlw	0
 35436   014872  6E1B               	movwf	(create_name@i+1)^(0+1280),c
 35437   014874  0E08               	movlw	8
 35438   014876  6E1A               	movwf	create_name@i^(0+1280),c
 35439   014878  0E00               	movlw	0
 35440   01487A  6E19               	movwf	(create_name@ni+1)^(0+1280),c
 35441   01487C  0E0B               	movlw	11
 35442   01487E  6E18               	movwf	create_name@ni^(0+1280),c
 35443                           
 35444                           ;../fatfs/ff.c: 3013:    continue;
 35445   014880  EF95  F0A3         	goto	l21907
 35446   014884                     l21939:
 35447                           
 35448                           ;../fatfs/ff.c: 3024:   if (dbc_1st(c)) {
 35449   014884  5022               	movf	create_name@c^(0+1280),w,c
 35450   014886  EC6E  F0F6         	call	_dbc_1st
 35451   01488A  5004               	movf	?_dbc_1st^(0+1280),w,c
 35452   01488C  1005               	iorwf	(?_dbc_1st+1)^(0+1280),w,c
 35453   01488E  B4D8               	btfsc	status,2,c
 35454   014890  EF4C  F0A4         	goto	u29831
 35455   014894  EF4E  F0A4         	goto	u29830
 35456   014898                     u29831:
 35457   014898  EF9D  F0A4         	goto	l21959
 35458   01489C                     u29830:
 35459   01489C                     
 35460                           ;../fatfs/ff.c: 3025:    d = (BYTE)p[si++];
 35461   01489C  5020               	movf	create_name@si^(0+1280),w,c
 35462   01489E  241E               	addwf	create_name@p^(0+1280),w,c
 35463   0148A0  6E10               	movwf	??_create_name^(0+1280),c
 35464   0148A2  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35465   0148A4  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35466   0148A6  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35467   0148A8  C510  F4F6         	movff	??_create_name,tblptrl
 35468   0148AC  C511  F4F7         	movff	??_create_name+1,tblptrh
 35469   0148B0  0E00               	movlw	low (__mediumconst shr (0+16))
 35470   0148B2  6EF8               	movwf	tblptru,c
 35471   0148B4  0E3F               	movlw	(high __ramtop+-1)
 35472   0148B6  64F7               	cpfsgt	tblptrh,c
 35473   0148B8  D003               	bra	u29847
 35474   0148BA  0008               	tblrd		*
 35475   0148BC  50F5               	movf	tablat,w,c
 35476   0148BE  D005               	bra	u29840
 35477   0148C0                     u29847:
 35478   0148C0  C4F6 F4E9          	movff	tblptrl,fsr0l
 35479   0148C4  C4F7 F4EA          	movff	tblptrh,fsr0h
 35480   0148C8  50EF               	movf	indf0,w,c
 35481   0148CA                     u29840:
 35482   0148CA  6E17               	movwf	create_name@d^(0+1280),c
 35483   0148CC  4A20               	infsnz	create_name@si^(0+1280),f,c
 35484   0148CE  2A21               	incf	(create_name@si+1)^(0+1280),f,c
 35485   0148D0                     
 35486                           ;../fatfs/ff.c: 3026:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;
 35487   0148D0  5017               	movf	create_name@d^(0+1280),w,c
 35488   0148D2  EC5F  F0EE         	call	_dbc_2nd
 35489   0148D6  5004               	movf	?_dbc_2nd^(0+1280),w,c
 35490   0148D8  1005               	iorwf	(?_dbc_2nd+1)^(0+1280),w,c
 35491   0148DA  B4D8               	btfsc	status,2,c
 35492   0148DC  EF72  F0A4         	goto	u29851
 35493   0148E0  EF74  F0A4         	goto	u29850
 35494   0148E4                     u29851:
 35495   0148E4  EF67  F0A3         	goto	l21889
 35496   0148E8                     u29850:
 35497   0148E8  0EFF               	movlw	255
 35498   0148EA  2418               	addwf	create_name@ni^(0+1280),w,c
 35499   0148EC  6E10               	movwf	??_create_name^(0+1280),c
 35500   0148EE  0EFF               	movlw	255
 35501   0148F0  2019               	addwfc	(create_name@ni+1)^(0+1280),w,c
 35502   0148F2  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35503   0148F4  5010               	movf	??_create_name^(0+1280),w,c
 35504   0148F6  5C1A               	subwf	create_name@i^(0+1280),w,c
 35505   0148F8  5011               	movf	(??_create_name+1)^(0+1280),w,c
 35506   0148FA  581B               	subwfb	(create_name@i+1)^(0+1280),w,c
 35507   0148FC  A0D8               	btfss	status,0,c
 35508   0148FE  EF83  F0A4         	goto	u29861
 35509   014902  EF85  F0A4         	goto	u29860
 35510   014906                     u29861:
 35511   014906  EF87  F0A4         	goto	l21953
 35512   01490A                     u29860:
 35513   01490A  EF67  F0A3         	goto	l21889
 35514   01490E                     l21953:
 35515                           
 35516                           ;../fatfs/ff.c: 3027:    sfn[i++] = c;
 35517   01490E  501A               	movf	create_name@i^(0+1280),w,c
 35518   014910  241C               	addwf	create_name@sfn^(0+1280),w,c
 35519   014912  6ED9               	movwf	fsr2l,c
 35520   014914  501B               	movf	(create_name@i+1)^(0+1280),w,c
 35521   014916  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 35522   014918  6EDA               	movwf	fsr2h,c
 35523   01491A  C522  F4DF         	movff	create_name@c,indf2
 35524   01491E  4A1A               	infsnz	create_name@i^(0+1280),f,c
 35525   014920  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 35526   014922                     
 35527                           ;../fatfs/ff.c: 3028:    sfn[i++] = d;
 35528   014922  501A               	movf	create_name@i^(0+1280),w,c
 35529   014924  241C               	addwf	create_name@sfn^(0+1280),w,c
 35530   014926  6ED9               	movwf	fsr2l,c
 35531   014928  501B               	movf	(create_name@i+1)^(0+1280),w,c
 35532   01492A  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 35533   01492C  6EDA               	movwf	fsr2h,c
 35534   01492E  C517  F4DF         	movff	create_name@d,indf2
 35535   014932  4A1A               	infsnz	create_name@i^(0+1280),f,c
 35536   014934  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 35537                           
 35538                           ;../fatfs/ff.c: 3029:   } else {
 35539   014936  EF95  F0A3         	goto	l21907
 35540   01493A                     l21959:
 35541                           
 35542                           ;../fatfs/ff.c: 3030:    if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NA
      +                          ME;
 35543   01493A  0E25               	movlw	low STR_27
 35544   01493C  6E04               	movwf	strchr@s^(0+1280),c
 35545   01493E  0EFE               	movlw	high STR_27
 35546   014940  6E05               	movwf	(strchr@s+1)^(0+1280),c
 35547   014942  C522  F506         	movff	create_name@c,strchr@c
 35548   014946  6A07               	clrf	(strchr@c+1)^(0+1280),c
 35549   014948  EC75  F0F8         	call	_strchr	;wreg free
 35550   01494C  5004               	movf	?_strchr^(0+1280),w,c
 35551   01494E  1005               	iorwf	(?_strchr+1)^(0+1280),w,c
 35552   014950  B4D8               	btfsc	status,2,c
 35553   014952  EFAD  F0A4         	goto	u29871
 35554   014956  EFAF  F0A4         	goto	u29870
 35555   01495A                     u29871:
 35556   01495A  EFB1  F0A4         	goto	l21965
 35557   01495E                     u29870:
 35558   01495E  EF67  F0A3         	goto	l21889
 35559   014962                     l21965:
 35560                           
 35561                           ;../fatfs/ff.c: 3031:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
 35562   014962  0E60               	movlw	96
 35563   014964  6422               	cpfsgt	create_name@c^(0+1280),c
 35564   014966  EFB7  F0A4         	goto	u29881
 35565   01496A  EFB9  F0A4         	goto	u29880
 35566   01496E                     u29881:
 35567   01496E  EFC3  F0A4         	goto	l21971
 35568   014972                     u29880:
 35569   014972  0E7B               	movlw	123
 35570   014974  6022               	cpfslt	create_name@c^(0+1280),c
 35571   014976  EFBF  F0A4         	goto	u29891
 35572   01497A  EFC1  F0A4         	goto	u29890
 35573   01497E                     u29891:
 35574   01497E  EFC3  F0A4         	goto	l21971
 35575   014982                     u29890:
 35576   014982  0E20               	movlw	32
 35577   014984  5E22               	subwf	create_name@c^(0+1280),f,c
 35578   014986                     l21971:
 35579                           
 35580                           ;../fatfs/ff.c: 3032:    sfn[i++] = c;
 35581   014986  501A               	movf	create_name@i^(0+1280),w,c
 35582   014988  241C               	addwf	create_name@sfn^(0+1280),w,c
 35583   01498A  6ED9               	movwf	fsr2l,c
 35584   01498C  501B               	movf	(create_name@i+1)^(0+1280),w,c
 35585   01498E  201D               	addwfc	(create_name@sfn+1)^(0+1280),w,c
 35586   014990  6EDA               	movwf	fsr2h,c
 35587   014992  C522  F4DF         	movff	create_name@c,indf2
 35588   014996  4A1A               	infsnz	create_name@i^(0+1280),f,c
 35589   014998  2A1B               	incf	(create_name@i+1)^(0+1280),f,c
 35590   01499A  EF95  F0A3         	goto	l21907
 35591   01499E                     l21975:
 35592                           
 35593                           ;../fatfs/ff.c: 3035:  *path = &p[si];
 35594   01499E  5020               	movf	create_name@si^(0+1280),w,c
 35595   0149A0  241E               	addwf	create_name@p^(0+1280),w,c
 35596   0149A2  6E10               	movwf	??_create_name^(0+1280),c
 35597   0149A4  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35598   0149A6  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35599   0149A8  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35600   0149AA  C50E  F4D9         	movff	create_name@path,fsr2l
 35601   0149AE  C50F  F4DA         	movff	create_name@path+1,fsr2h
 35602   0149B2  C510  F4DE         	movff	??_create_name,postinc2
 35603   0149B6  C511  F4DD         	movff	??_create_name+1,postdec2
 35604   0149BA                     
 35605                           ;../fatfs/ff.c: 3036:  if (i == 0) return FR_INVALID_NAME;
 35606   0149BA  501A               	movf	create_name@i^(0+1280),w,c
 35607   0149BC  101B               	iorwf	(create_name@i+1)^(0+1280),w,c
 35608   0149BE  A4D8               	btfss	status,2,c
 35609   0149C0  EFE4  F0A4         	goto	u29901
 35610   0149C4  EFE6  F0A4         	goto	u29900
 35611   0149C8                     u29901:
 35612   0149C8  EFE8  F0A4         	goto	l21983
 35613   0149CC                     u29900:
 35614   0149CC  EF67  F0A3         	goto	l21889
 35615   0149D0                     l21983:
 35616                           
 35617                           ;../fatfs/ff.c: 3038:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
 35618   0149D0  C51C  F4D9         	movff	create_name@sfn,fsr2l
 35619   0149D4  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 35620   0149D8  0EE5               	movlw	229
 35621   0149DA  18DE               	xorwf	postinc2,w,c
 35622   0149DC  A4D8               	btfss	status,2,c
 35623   0149DE  EFF3  F0A4         	goto	u29911
 35624   0149E2  EFF5  F0A4         	goto	u29910
 35625   0149E6                     u29911:
 35626   0149E6  EFFB  F0A4         	goto	l21987
 35627   0149EA                     u29910:
 35628   0149EA  C51C  F4D9         	movff	create_name@sfn,fsr2l
 35629   0149EE  C51D  F4DA         	movff	create_name@sfn+1,fsr2h
 35630   0149F2  0E05               	movlw	5
 35631   0149F4  6EDF               	movwf	indf2,c
 35632   0149F6                     l21987:
 35633                           
 35634                           ;../fatfs/ff.c: 3039:  sfn[11] = (c <= ' ' || p[si] <= ' ') ? 0x04 : 0;
 35635   0149F6  0E20               	movlw	32
 35636   0149F8  6422               	cpfsgt	create_name@c^(0+1280),c
 35637   0149FA  EF01  F0A5         	goto	u29921
 35638   0149FE  EF03  F0A5         	goto	u29920
 35639   014A02                     u29921:
 35640   014A02  EF29  F0A5         	goto	l21993
 35641   014A06                     u29920:
 35642   014A06  5020               	movf	create_name@si^(0+1280),w,c
 35643   014A08  241E               	addwf	create_name@p^(0+1280),w,c
 35644   014A0A  6E10               	movwf	??_create_name^(0+1280),c
 35645   014A0C  5021               	movf	(create_name@si+1)^(0+1280),w,c
 35646   014A0E  201F               	addwfc	(create_name@p+1)^(0+1280),w,c
 35647   014A10  6E11               	movwf	(??_create_name+1)^(0+1280),c
 35648   014A12  C510  F4F6         	movff	??_create_name,tblptrl
 35649   014A16  C511  F4F7         	movff	??_create_name+1,tblptrh
 35650   014A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 35651   014A1C  6EF8               	movwf	tblptru,c
 35652   014A1E  0E3F               	movlw	(high __ramtop+-1)
 35653   014A20  64F7               	cpfsgt	tblptrh,c
 35654   014A22  D003               	bra	u29937
 35655   014A24  0008               	tblrd		*
 35656   014A26  50F5               	movf	tablat,w,c
 35657   014A28  D005               	bra	u29930
 35658   014A2A                     u29937:
 35659   014A2A  C4F6 F4E9          	movff	tblptrl,fsr0l
 35660   014A2E  C4F7 F4EA          	movff	tblptrh,fsr0h
 35661   014A32  50EF               	movf	indf0,w,c
 35662   014A34                     u29930:
 35663   014A34  6E12               	movwf	(??_create_name+2)^(0+1280),c
 35664   014A36  0E20               	movlw	32
 35665   014A38  6412               	cpfsgt	(??_create_name+2)^(0+1280),c
 35666   014A3A  EF21  F0A5         	goto	u29941
 35667   014A3E  EF23  F0A5         	goto	u29940
 35668   014A42                     u29941:
 35669   014A42  EF29  F0A5         	goto	l21993
 35670   014A46                     u29940:
 35671   014A46  0E00               	movlw	0
 35672   014A48  6E16               	movwf	(_create_name$972+1)^(0+1280),c
 35673   014A4A  0E00               	movlw	0
 35674   014A4C  6E15               	movwf	_create_name$972^(0+1280),c
 35675   014A4E  EF2D  F0A5         	goto	l21995
 35676   014A52                     l21993:
 35677   014A52  0E00               	movlw	0
 35678   014A54  6E16               	movwf	(_create_name$972+1)^(0+1280),c
 35679   014A56  0E04               	movlw	4
 35680   014A58  6E15               	movwf	_create_name$972^(0+1280),c
 35681   014A5A                     l21995:
 35682   014A5A  EE20 F00B          	lfsr	2,11
 35683   014A5E  501C               	movf	create_name@sfn^(0+1280),w,c
 35684   014A60  26D9               	addwf	fsr2l,f,c
 35685   014A62  501D               	movf	(create_name@sfn+1)^(0+1280),w,c
 35686   014A64  22DA               	addwfc	fsr2h,f,c
 35687   014A66  C515  F4DF         	movff	_create_name$972,indf2
 35688   014A6A  EF92  F0A3         	goto	l21903
 35689   014A6E                     l457:
 35690   014A6E  0012               	return		;funcret
 35691   014A70                     __end_of_create_name:
 35692                           	callstack 0
 35693                           
 35694 ;; *************** function _strchr *****************
 35695 ;; Defined at:
 35696 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
 35697 ;; Parameters:    Size  Location     Type
 35698 ;;  s               2    3[COMRAM] PTR const unsigned char 
 35699 ;;		 -> tmp_buf$mezID(8), line_buf(81), STR_52(11), STR_51(11), 
 35700 ;;		 -> tmp_buf(512), STR_28(15), NULL(0), 
 35701 ;;  c               2    5[COMRAM] int 
 35702 ;; Auto vars:     Size  Location     Type
 35703 ;;		None
 35704 ;; Return value:  Size  Location     Type
 35705 ;;                  2    3[COMRAM] PTR unsigned char 
 35706 ;; Registers used:
 35707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 35708 ;; Tracked objects:
 35709 ;;		On entry : 0/0
 35710 ;;		On exit  : 0/0
 35711 ;;		Unchanged: 0/0
 35712 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35717 ;;Total ram usage:        6 bytes
 35718 ;; Hardware stack levels used: 1
 35719 ;; Hardware stack levels required when called: 1
 35720 ;; This function calls:
 35721 ;;		Nothing
 35722 ;; This function is called by:
 35723 ;;		_create_name
 35724 ;;		_strstr
 35725 ;; This function uses a non-reentrant model
 35726 ;;
 35727                           
 35728                           	psect	text84
 35729   01F0EA                     __ptext84:
 35730                           	callstack 0
 35731   01F0EA                     _strchr:
 35732                           	callstack 116
 35733   01F0EA                     l3605:
 35734   01F0EA  C504  F4F6         	movff	strchr@s,tblptrl
 35735   01F0EE  C505  F4F7         	movff	strchr@s+1,tblptrh
 35736   01F0F2  0E00               	movlw	low (__mediumconst shr (0+16))
 35737   01F0F4  6EF8               	movwf	tblptru,c
 35738   01F0F6  0E3F               	movlw	(high __ramtop+-1)
 35739   01F0F8  64F7               	cpfsgt	tblptrh,c
 35740   01F0FA  D003               	bra	u29117
 35741   01F0FC  0008               	tblrd		*
 35742   01F0FE  50F5               	movf	tablat,w,c
 35743   01F100  D005               	bra	u29110
 35744   01F102                     u29117:
 35745   01F102  C4F6 F4E9          	movff	tblptrl,fsr0l
 35746   01F106  C4F7 F4EA          	movff	tblptrh,fsr0h
 35747   01F10A  50EF               	movf	indf0,w,c
 35748   01F10C                     u29110:
 35749   01F10C  1806               	xorwf	strchr@c^(0+1280),w,c
 35750   01F10E  A4D8               	btfss	status,2,c
 35751   01F110  EF8C  F0F8         	goto	u29121
 35752   01F114  EF8E  F0F8         	goto	u29120
 35753   01F118                     u29121:
 35754   01F118  EF94  F0F8         	goto	l21611
 35755   01F11C                     u29120:
 35756   01F11C  C504  F504         	movff	strchr@s,?_strchr
 35757   01F120  C505  F505         	movff	strchr@s+1,?_strchr+1
 35758   01F124  EFB7  F0F8         	goto	l3607
 35759   01F128                     l21611:
 35760   01F128  5004               	movf	strchr@s^(0+1280),w,c
 35761   01F12A  6E08               	movwf	??_strchr^(0+1280),c
 35762   01F12C  5005               	movf	(strchr@s+1)^(0+1280),w,c
 35763   01F12E  6E09               	movwf	(??_strchr+1)^(0+1280),c
 35764   01F130  4A04               	infsnz	strchr@s^(0+1280),f,c
 35765   01F132  2A05               	incf	(strchr@s+1)^(0+1280),f,c
 35766   01F134  C508  F4F6         	movff	??_strchr,tblptrl
 35767   01F138  C509  F4F7         	movff	??_strchr+1,tblptrh
 35768   01F13C  0E00               	movlw	low (__mediumconst shr (0+16))
 35769   01F13E  6EF8               	movwf	tblptru,c
 35770   01F140  0E3F               	movlw	(high __ramtop+-1)
 35771   01F142  64F7               	cpfsgt	tblptrh,c
 35772   01F144  D003               	bra	u29137
 35773   01F146  0008               	tblrd		*
 35774   01F148  50F5               	movf	tablat,w,c
 35775   01F14A  D005               	bra	u29130
 35776   01F14C                     u29137:
 35777   01F14C  C4F6 F4E9          	movff	tblptrl,fsr0l
 35778   01F150  C4F7 F4EA          	movff	tblptrh,fsr0h
 35779   01F154  50EF               	movf	indf0,w,c
 35780   01F156                     u29130:
 35781   01F156  0900               	iorlw	0
 35782   01F158  A4D8               	btfss	status,2,c
 35783   01F15A  EFB1  F0F8         	goto	u29141
 35784   01F15E  EFB3  F0F8         	goto	u29140
 35785   01F162                     u29141:
 35786   01F162  EF75  F0F8         	goto	l3605
 35787   01F166                     u29140:
 35788   01F166  0E00               	movlw	0
 35789   01F168  6E04               	movwf	?_strchr^(0+1280),c
 35790   01F16A  0E00               	movlw	0
 35791   01F16C  6E05               	movwf	(?_strchr+1)^(0+1280),c
 35792   01F16E                     l3607:
 35793   01F16E  0012               	return		;funcret
 35794   01F170                     __end_of_strchr:
 35795                           	callstack 0
 35796                           
 35797 ;; *************** function _dbc_2nd *****************
 35798 ;; Defined at:
 35799 ;;		line 713 in file "../fatfs/ff.c"
 35800 ;; Parameters:    Size  Location     Type
 35801 ;;  c               1    wreg     unsigned char 
 35802 ;; Auto vars:     Size  Location     Type
 35803 ;;  c               1    5[COMRAM] unsigned char 
 35804 ;; Return value:  Size  Location     Type
 35805 ;;                  2    3[COMRAM] int 
 35806 ;; Registers used:
 35807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35808 ;; Tracked objects:
 35809 ;;		On entry : 0/0
 35810 ;;		On exit  : 0/0
 35811 ;;		Unchanged: 0/0
 35812 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35816 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35817 ;;Total ram usage:        3 bytes
 35818 ;; Hardware stack levels used: 1
 35819 ;; Hardware stack levels required when called: 1
 35820 ;; This function calls:
 35821 ;;		Nothing
 35822 ;; This function is called by:
 35823 ;;		_create_name
 35824 ;; This function uses a non-reentrant model
 35825 ;;
 35826                           
 35827                           	psect	text85
 35828   01DCBE                     __ptext85:
 35829                           	callstack 0
 35830   01DCBE                     _dbc_2nd:
 35831                           	callstack 116
 35832                           
 35833                           ;incstack = 0
 35834                           ;dbc_2nd@c stored from wreg
 35835   01DCBE  6E06               	movwf	dbc_2nd@c^(0+1280),c
 35836   01DCC0                     
 35837                           ;../fatfs/ff.c: 713: static int dbc_2nd (BYTE c);../fatfs/ff.c: 714: {;../fatfs/ff.c: 72
      +                          2:  if (c >= DbcTbl[4]) {
 35838   01DCC0  0E05               	movlw	low (_DbcTbl+4)
 35839   01DCC2  6EF6               	movwf	tblptrl,c
 35840   01DCC4  0EF2               	movlw	high (_DbcTbl+4)
 35841   01DCC6  6EF7               	movwf	tblptrh,c
 35842   01DCC8                     	if	0	;tblptru may be non-zero
 35843   01DCC8                     	endif
 35844   01DCC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35845   01DCC8  0E00               	movlw	low (__mediumconst shr (0+16))
 35846   01DCCA  6EF8               	movwf	tblptru,c
 35847   01DCCC                     	endif
 35848   01DCCC  0009               	tblrd		*+
 35849   01DCCE  50F5               	movf	tablat,w,c
 35850   01DCD0  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 35851   01DCD2  A0D8               	btfss	status,0,c
 35852   01DCD4  EF6E  F0EE         	goto	u28751
 35853   01DCD8  EF70  F0EE         	goto	u28750
 35854   01DCDC                     u28751:
 35855   01DCDC  EFCA  F0EE         	goto	l21435
 35856   01DCE0                     u28750:
 35857   01DCE0                     
 35858                           ;../fatfs/ff.c: 723:   if (c <= DbcTbl[5]) return 1;
 35859   01DCE0  0E06               	movlw	low (_DbcTbl+5)
 35860   01DCE2  6EF6               	movwf	tblptrl,c
 35861   01DCE4  0EF2               	movlw	high (_DbcTbl+5)
 35862   01DCE6  6EF7               	movwf	tblptrh,c
 35863   01DCE8                     	if	0	;tblptru may be non-zero
 35864   01DCE8                     	endif
 35865   01DCE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35866   01DCE8  0E00               	movlw	low (__mediumconst shr (0+16))
 35867   01DCEA  6EF8               	movwf	tblptru,c
 35868   01DCEC                     	endif
 35869   01DCEC  5006               	movf	dbc_2nd@c^(0+1280),w,c
 35870   01DCEE  0009               	tblrd		*+
 35871   01DCF0  5CF5               	subwf	tablat,w,c
 35872   01DCF2  A0D8               	btfss	status,0,c
 35873   01DCF4  EF7E  F0EE         	goto	u28761
 35874   01DCF8  EF80  F0EE         	goto	u28760
 35875   01DCFC                     u28761:
 35876   01DCFC  EF86  F0EE         	goto	l21419
 35877   01DD00                     u28760:
 35878   01DD00                     l21415:
 35879   01DD00  0E00               	movlw	0
 35880   01DD02  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 35881   01DD04  0E01               	movlw	1
 35882   01DD06  6E04               	movwf	?_dbc_2nd^(0+1280),c
 35883   01DD08  EFCE  F0EE         	goto	l200
 35884   01DD0C                     l21419:
 35885                           
 35886                           ;../fatfs/ff.c: 724:   if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
 35887   01DD0C  0E07               	movlw	low (_DbcTbl+6)
 35888   01DD0E  6EF6               	movwf	tblptrl,c
 35889   01DD10  0EF2               	movlw	high (_DbcTbl+6)
 35890   01DD12  6EF7               	movwf	tblptrh,c
 35891   01DD14                     	if	0	;tblptru may be non-zero
 35892   01DD14                     	endif
 35893   01DD14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35894   01DD14  0E00               	movlw	low (__mediumconst shr (0+16))
 35895   01DD16  6EF8               	movwf	tblptru,c
 35896   01DD18                     	endif
 35897   01DD18  0009               	tblrd		*+
 35898   01DD1A  50F5               	movf	tablat,w,c
 35899   01DD1C  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 35900   01DD1E  A0D8               	btfss	status,0,c
 35901   01DD20  EF94  F0EE         	goto	u28771
 35902   01DD24  EF96  F0EE         	goto	u28770
 35903   01DD28                     u28771:
 35904   01DD28  EFA8  F0EE         	goto	l21427
 35905   01DD2C                     u28770:
 35906   01DD2C  0E08               	movlw	low (_DbcTbl+7)
 35907   01DD2E  6EF6               	movwf	tblptrl,c
 35908   01DD30  0EF2               	movlw	high (_DbcTbl+7)
 35909   01DD32  6EF7               	movwf	tblptrh,c
 35910   01DD34                     	if	0	;tblptru may be non-zero
 35911   01DD34                     	endif
 35912   01DD34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35913   01DD34  0E00               	movlw	low (__mediumconst shr (0+16))
 35914   01DD36  6EF8               	movwf	tblptru,c
 35915   01DD38                     	endif
 35916   01DD38  5006               	movf	dbc_2nd@c^(0+1280),w,c
 35917   01DD3A  0009               	tblrd		*+
 35918   01DD3C  5CF5               	subwf	tablat,w,c
 35919   01DD3E  A0D8               	btfss	status,0,c
 35920   01DD40  EFA4  F0EE         	goto	u28781
 35921   01DD44  EFA6  F0EE         	goto	u28780
 35922   01DD48                     u28781:
 35923   01DD48  EFA8  F0EE         	goto	l21427
 35924   01DD4C                     u28780:
 35925   01DD4C  EF80  F0EE         	goto	l21415
 35926   01DD50                     l21427:
 35927                           
 35928                           ;../fatfs/ff.c: 725:   if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
 35929   01DD50  0E09               	movlw	low (_DbcTbl+8)
 35930   01DD52  6EF6               	movwf	tblptrl,c
 35931   01DD54  0EF2               	movlw	high (_DbcTbl+8)
 35932   01DD56  6EF7               	movwf	tblptrh,c
 35933   01DD58                     	if	0	;tblptru may be non-zero
 35934   01DD58                     	endif
 35935   01DD58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35936   01DD58  0E00               	movlw	low (__mediumconst shr (0+16))
 35937   01DD5A  6EF8               	movwf	tblptru,c
 35938   01DD5C                     	endif
 35939   01DD5C  0009               	tblrd		*+
 35940   01DD5E  50F5               	movf	tablat,w,c
 35941   01DD60  5C06               	subwf	dbc_2nd@c^(0+1280),w,c
 35942   01DD62  A0D8               	btfss	status,0,c
 35943   01DD64  EFB6  F0EE         	goto	u28791
 35944   01DD68  EFB8  F0EE         	goto	u28790
 35945   01DD6C                     u28791:
 35946   01DD6C  EFCA  F0EE         	goto	l21435
 35947   01DD70                     u28790:
 35948   01DD70  0E0A               	movlw	low (_DbcTbl+9)
 35949   01DD72  6EF6               	movwf	tblptrl,c
 35950   01DD74  0EF2               	movlw	high (_DbcTbl+9)
 35951   01DD76  6EF7               	movwf	tblptrh,c
 35952   01DD78                     	if	0	;tblptru may be non-zero
 35953   01DD78                     	endif
 35954   01DD78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35955   01DD78  0E00               	movlw	low (__mediumconst shr (0+16))
 35956   01DD7A  6EF8               	movwf	tblptru,c
 35957   01DD7C                     	endif
 35958   01DD7C  5006               	movf	dbc_2nd@c^(0+1280),w,c
 35959   01DD7E  0009               	tblrd		*+
 35960   01DD80  5CF5               	subwf	tablat,w,c
 35961   01DD82  A0D8               	btfss	status,0,c
 35962   01DD84  EFC6  F0EE         	goto	u28801
 35963   01DD88  EFC8  F0EE         	goto	u28800
 35964   01DD8C                     u28801:
 35965   01DD8C  EFCA  F0EE         	goto	l21435
 35966   01DD90                     u28800:
 35967   01DD90  EF80  F0EE         	goto	l21415
 35968   01DD94                     l21435:
 35969                           
 35970                           ;../fatfs/ff.c: 730:  return 0;
 35971   01DD94  0E00               	movlw	0
 35972   01DD96  6E05               	movwf	(?_dbc_2nd+1)^(0+1280),c
 35973   01DD98  0E00               	movlw	0
 35974   01DD9A  6E04               	movwf	?_dbc_2nd^(0+1280),c
 35975   01DD9C                     l200:
 35976   01DD9C  0012               	return		;funcret
 35977   01DD9E                     __end_of_dbc_2nd:
 35978                           	callstack 0
 35979                           
 35980 ;; *************** function _dbc_1st *****************
 35981 ;; Defined at:
 35982 ;;		line 693 in file "../fatfs/ff.c"
 35983 ;; Parameters:    Size  Location     Type
 35984 ;;  c               1    wreg     unsigned char 
 35985 ;; Auto vars:     Size  Location     Type
 35986 ;;  c               1    5[COMRAM] unsigned char 
 35987 ;; Return value:  Size  Location     Type
 35988 ;;                  2    3[COMRAM] int 
 35989 ;; Registers used:
 35990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35991 ;; Tracked objects:
 35992 ;;		On entry : 0/0
 35993 ;;		On exit  : 0/0
 35994 ;;		Unchanged: 0/0
 35995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35999 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36000 ;;Total ram usage:        3 bytes
 36001 ;; Hardware stack levels used: 1
 36002 ;; Hardware stack levels required when called: 1
 36003 ;; This function calls:
 36004 ;;		Nothing
 36005 ;; This function is called by:
 36006 ;;		_create_name
 36007 ;; This function uses a non-reentrant model
 36008 ;;
 36009                           
 36010                           	psect	text86
 36011   01ECDC                     __ptext86:
 36012                           	callstack 0
 36013   01ECDC                     _dbc_1st:
 36014                           	callstack 116
 36015                           
 36016                           ;incstack = 0
 36017                           ;dbc_1st@c stored from wreg
 36018   01ECDC  6E06               	movwf	dbc_1st@c^(0+1280),c
 36019   01ECDE                     
 36020                           ;../fatfs/ff.c: 693: static int dbc_1st (BYTE c);../fatfs/ff.c: 694: {;../fatfs/ff.c: 70
      +                          1:  if (c >= DbcTbl[0]) {
 36021   01ECDE  0E01               	movlw	low _DbcTbl
 36022   01ECE0  6EF6               	movwf	tblptrl,c
 36023   01ECE2                     	if	1	;There is more than 1 active tblptr byte
 36024   01ECE2  0EF2               	movlw	high _DbcTbl
 36025   01ECE4  6EF7               	movwf	tblptrh,c
 36026   01ECE6                     	endif
 36027   01ECE6                     	if	1	;There are 3 active tblptr bytes
 36028   01ECE6  0E00               	movlw	low (_DbcTbl shr (0+16))
 36029   01ECE8  6EF8               	movwf	tblptru,c
 36030   01ECEA                     	endif
 36031   01ECEA  0009               	tblrd		*+
 36032   01ECEC  50F5               	movf	tablat,w,c
 36033   01ECEE  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 36034   01ECF0  A0D8               	btfss	status,0,c
 36035   01ECF2  EF7D  F0F6         	goto	u28711
 36036   01ECF6  EF7F  F0F6         	goto	u28710
 36037   01ECFA                     u28711:
 36038   01ECFA  EFB7  F0F6         	goto	l21407
 36039   01ECFE                     u28710:
 36040   01ECFE                     
 36041                           ;../fatfs/ff.c: 702:   if (c <= DbcTbl[1]) return 1;
 36042   01ECFE  0E02               	movlw	low (_DbcTbl+1)
 36043   01ED00  6EF6               	movwf	tblptrl,c
 36044   01ED02  0EF2               	movlw	high (_DbcTbl+1)
 36045   01ED04  6EF7               	movwf	tblptrh,c
 36046   01ED06                     	if	0	;tblptru may be non-zero
 36047   01ED06                     	endif
 36048   01ED06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36049   01ED06  0E00               	movlw	low (__mediumconst shr (0+16))
 36050   01ED08  6EF8               	movwf	tblptru,c
 36051   01ED0A                     	endif
 36052   01ED0A  5006               	movf	dbc_1st@c^(0+1280),w,c
 36053   01ED0C  0009               	tblrd		*+
 36054   01ED0E  5CF5               	subwf	tablat,w,c
 36055   01ED10  A0D8               	btfss	status,0,c
 36056   01ED12  EF8D  F0F6         	goto	u28721
 36057   01ED16  EF8F  F0F6         	goto	u28720
 36058   01ED1A                     u28721:
 36059   01ED1A  EF95  F0F6         	goto	l21399
 36060   01ED1E                     u28720:
 36061   01ED1E                     l21395:
 36062   01ED1E  0E00               	movlw	0
 36063   01ED20  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 36064   01ED22  0E01               	movlw	1
 36065   01ED24  6E04               	movwf	?_dbc_1st^(0+1280),c
 36066   01ED26  EFBB  F0F6         	goto	l194
 36067   01ED2A                     l21399:
 36068                           
 36069                           ;../fatfs/ff.c: 703:   if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
 36070   01ED2A  0E03               	movlw	low (_DbcTbl+2)
 36071   01ED2C  6EF6               	movwf	tblptrl,c
 36072   01ED2E  0EF2               	movlw	high (_DbcTbl+2)
 36073   01ED30  6EF7               	movwf	tblptrh,c
 36074   01ED32                     	if	0	;tblptru may be non-zero
 36075   01ED32                     	endif
 36076   01ED32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36077   01ED32  0E00               	movlw	low (__mediumconst shr (0+16))
 36078   01ED34  6EF8               	movwf	tblptru,c
 36079   01ED36                     	endif
 36080   01ED36  0009               	tblrd		*+
 36081   01ED38  50F5               	movf	tablat,w,c
 36082   01ED3A  5C06               	subwf	dbc_1st@c^(0+1280),w,c
 36083   01ED3C  A0D8               	btfss	status,0,c
 36084   01ED3E  EFA3  F0F6         	goto	u28731
 36085   01ED42  EFA5  F0F6         	goto	u28730
 36086   01ED46                     u28731:
 36087   01ED46  EFB7  F0F6         	goto	l21407
 36088   01ED4A                     u28730:
 36089   01ED4A  0E04               	movlw	low (_DbcTbl+3)
 36090   01ED4C  6EF6               	movwf	tblptrl,c
 36091   01ED4E  0EF2               	movlw	high (_DbcTbl+3)
 36092   01ED50  6EF7               	movwf	tblptrh,c
 36093   01ED52                     	if	0	;tblptru may be non-zero
 36094   01ED52                     	endif
 36095   01ED52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36096   01ED52  0E00               	movlw	low (__mediumconst shr (0+16))
 36097   01ED54  6EF8               	movwf	tblptru,c
 36098   01ED56                     	endif
 36099   01ED56  5006               	movf	dbc_1st@c^(0+1280),w,c
 36100   01ED58  0009               	tblrd		*+
 36101   01ED5A  5CF5               	subwf	tablat,w,c
 36102   01ED5C  A0D8               	btfss	status,0,c
 36103   01ED5E  EFB3  F0F6         	goto	u28741
 36104   01ED62  EFB5  F0F6         	goto	u28740
 36105   01ED66                     u28741:
 36106   01ED66  EFB7  F0F6         	goto	l21407
 36107   01ED6A                     u28740:
 36108   01ED6A  EF8F  F0F6         	goto	l21395
 36109   01ED6E                     l21407:
 36110                           
 36111                           ;../fatfs/ff.c: 708:  return 0;
 36112   01ED6E  0E00               	movlw	0
 36113   01ED70  6E05               	movwf	(?_dbc_1st+1)^(0+1280),c
 36114   01ED72  0E00               	movlw	0
 36115   01ED74  6E04               	movwf	?_dbc_1st^(0+1280),c
 36116   01ED76                     l194:
 36117   01ED76  0012               	return		;funcret
 36118   01ED78                     __end_of_dbc_1st:
 36119                           	callstack 0
 36120                           
 36121 ;; *************** function _dir_register *****************
 36122 ;; Defined at:
 36123 ;;		line 2466 in file "../fatfs/ff.c"
 36124 ;; Parameters:    Size  Location     Type
 36125 ;;  dp              2  136[BANK6 ] PTR struct .
 36126 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 36127 ;; Auto vars:     Size  Location     Type
 36128 ;;  fs              2  138[BANK6 ] PTR struct .
 36129 ;;		 -> fs(564), NULL(0), 
 36130 ;;  res             1  140[BANK6 ] enum E597
 36131 ;; Return value:  Size  Location     Type
 36132 ;;                  1    wreg      enum E597
 36133 ;; Registers used:
 36134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36135 ;; Tracked objects:
 36136 ;;		On entry : 0/0
 36137 ;;		On exit  : 0/0
 36138 ;;		Unchanged: 0/0
 36139 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36140 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36141 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36143 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36144 ;;Total ram usage:        5 bytes
 36145 ;; Hardware stack levels used: 1
 36146 ;; Hardware stack levels required when called: 18
 36147 ;; This function calls:
 36148 ;;		_dir_alloc
 36149 ;;		_memcpy
 36150 ;;		_memset
 36151 ;;		_move_window
 36152 ;; This function is called by:
 36153 ;;		_f_open
 36154 ;;		_f_mkdir
 36155 ;;		_f_rename
 36156 ;; This function uses a non-reentrant model
 36157 ;;
 36158                           
 36159                           	psect	text87
 36160   01DBDC                     __ptext87:
 36161                           	callstack 0
 36162   01DBDC                     _dir_register:
 36163                           	callstack 101
 36164   01DBDC                     
 36165                           ;../fatfs/ff.c: 2467:  DIR* dp;../fatfs/ff.c: 2469: {;../fatfs/ff.c: 2470:  FRESULT res;
      +                          ;../fatfs/ff.c: 2471:  FATFS *fs = dp->obj.fs;
 36166   01DBDC  C688  F4D9         	movff	dir_register@dp,fsr2l
 36167   01DBE0  C689  F4DA         	movff	dir_register@dp+1,fsr2h
 36168   01DBE4  C4DE F68A          	movff	postinc2,dir_register@fs
 36169   01DBE8  C4DD F68B          	movff	postdec2,dir_register@fs+1
 36170   01DBEC                     
 36171                           ;../fatfs/ff.c: 2543:  res = dir_alloc(dp, 1);
 36172   01DBEC  C688  F67C         	movff	dir_register@dp,dir_alloc@dp
 36173   01DBF0  C689  F67D         	movff	dir_register@dp+1,dir_alloc@dp+1
 36174   01DBF4  0E00               	movlw	0
 36175   01DBF6  0106               	movlb	6	; () banked
 36176   01DBF8  6F7F               	movwf	(dir_alloc@n_ent+1)& (0+255),b
 36177   01DBFA  0E01               	movlw	1
 36178   01DBFC  6F7E               	movwf	dir_alloc@n_ent& (0+255),b
 36179   01DBFE  ECB4  F0E4         	call	_dir_alloc	;wreg free
 36180   01DC02  0106               	movlb	6	; () banked
 36181   01DC04  6F8C               	movwf	dir_register@res& (0+255),b
 36182   01DC06                     
 36183                           ; BSR set to: 6
 36184                           ;../fatfs/ff.c: 2548:  if (res == FR_OK) {
 36185   01DC06  518C               	movf	dir_register@res& (0+255),w,b
 36186   01DC08  A4D8               	btfss	status,2,c
 36187   01DC0A  EF09  F0EE         	goto	u30351
 36188   01DC0E  EF0B  F0EE         	goto	u30350
 36189   01DC12                     u30351:
 36190   01DC12  EF5D  F0EE         	goto	l22213
 36191   01DC16                     u30350:
 36192   01DC16                     
 36193                           ; BSR set to: 6
 36194                           ;../fatfs/ff.c: 2549:   res = move_window(fs, dp->sect);
 36195   01DC16  C68A  F61A         	movff	dir_register@fs,move_window@fs
 36196   01DC1A  C68B  F61B         	movff	dir_register@fs+1,move_window@fs+1
 36197   01DC1E  EE20 F016          	lfsr	2,22
 36198   01DC22  5188               	movf	dir_register@dp& (0+255),w,b
 36199   01DC24  26D9               	addwf	fsr2l,f,c
 36200   01DC26  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 36201   01DC28  22DA               	addwfc	fsr2h,f,c
 36202   01DC2A  C4DE F61C          	movff	postinc2,move_window@sect
 36203   01DC2E  C4DE F61D          	movff	postinc2,move_window@sect+1
 36204   01DC32  C4DE F61E          	movff	postinc2,move_window@sect+2
 36205   01DC36  C4DE F61F          	movff	postinc2,move_window@sect+3
 36206   01DC3A  ECAB  F0EF         	call	_move_window	;wreg free
 36207   01DC3E  0106               	movlb	6	; () banked
 36208   01DC40  6F8C               	movwf	dir_register@res& (0+255),b
 36209   01DC42                     
 36210                           ; BSR set to: 6
 36211                           ;../fatfs/ff.c: 2550:   if (res == FR_OK) {
 36212   01DC42  518C               	movf	dir_register@res& (0+255),w,b
 36213   01DC44  A4D8               	btfss	status,2,c
 36214   01DC46  EF27  F0EE         	goto	u30361
 36215   01DC4A  EF29  F0EE         	goto	u30360
 36216   01DC4E                     u30361:
 36217   01DC4E  EF5D  F0EE         	goto	l22213
 36218   01DC52                     u30360:
 36219   01DC52                     
 36220                           ; BSR set to: 6
 36221                           ;../fatfs/ff.c: 2551:    memset(dp->dir, 0, 32);
 36222   01DC52  EE20 F01A          	lfsr	2,26
 36223   01DC56  5188               	movf	dir_register@dp& (0+255),w,b
 36224   01DC58  26D9               	addwf	fsr2l,f,c
 36225   01DC5A  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 36226   01DC5C  22DA               	addwfc	fsr2h,f,c
 36227   01DC5E  C4DE F504          	movff	postinc2,memset@dest
 36228   01DC62  C4DD F505          	movff	postdec2,memset@dest+1
 36229   01DC66  0E00               	movlw	0
 36230   01DC68  6E07               	movwf	(memset@c+1)^(0+1280),c
 36231   01DC6A  0E00               	movlw	0
 36232   01DC6C  6E06               	movwf	memset@c^(0+1280),c
 36233   01DC6E  0E00               	movlw	0
 36234   01DC70  6E09               	movwf	(memset@n+1)^(0+1280),c
 36235   01DC72  0E20               	movlw	32
 36236   01DC74  6E08               	movwf	memset@n^(0+1280),c
 36237   01DC76  EC14  F0FF         	call	_memset	;wreg free
 36238                           
 36239                           ;../fatfs/ff.c: 2552:    memcpy(dp->dir + 0, dp->fn, 11);
 36240   01DC7A  0106               	movlb	6	; () banked
 36241   01DC7C  EE20 F01A          	lfsr	2,26
 36242   01DC80  5188               	movf	dir_register@dp& (0+255),w,b
 36243   01DC82  26D9               	addwf	fsr2l,f,c
 36244   01DC84  5189               	movf	(dir_register@dp+1)& (0+255),w,b
 36245   01DC86  22DA               	addwfc	fsr2h,f,c
 36246   01DC88  C4DE F504          	movff	postinc2,memcpy@d1
 36247   01DC8C  C4DD F505          	movff	postdec2,memcpy@d1+1
 36248   01DC90  0E1C               	movlw	28
 36249   01DC92  2588               	addwf	dir_register@dp& (0+255),w,b
 36250   01DC94  6E06               	movwf	memcpy@s1^(0+1280),c
 36251   01DC96  0E00               	movlw	0
 36252   01DC98  2189               	addwfc	(dir_register@dp+1)& (0+255),w,b
 36253   01DC9A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 36254   01DC9C  0E00               	movlw	0
 36255   01DC9E  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 36256   01DCA0  0E0B               	movlw	11
 36257   01DCA2  6E08               	movwf	memcpy@n^(0+1280),c
 36258   01DCA4  EC00  F0FD         	call	_memcpy	;wreg free
 36259   01DCA8                     
 36260                           ;../fatfs/ff.c: 2556:    fs->wflag = 1;
 36261   01DCA8  0106               	movlb	6	; () banked
 36262   01DCAA  EE20 F004          	lfsr	2,4
 36263   01DCAE  518A               	movf	dir_register@fs& (0+255),w,b
 36264   01DCB0  26D9               	addwf	fsr2l,f,c
 36265   01DCB2  518B               	movf	(dir_register@fs+1)& (0+255),w,b
 36266   01DCB4  22DA               	addwfc	fsr2h,f,c
 36267   01DCB6  0E01               	movlw	1
 36268   01DCB8  6EDF               	movwf	indf2,c
 36269   01DCBA                     l22213:
 36270                           
 36271                           ; BSR set to: 6
 36272                           ;../fatfs/ff.c: 2560:  return res;
 36273   01DCBA  518C               	movf	dir_register@res& (0+255),w,b
 36274   01DCBC                     
 36275                           ; BSR set to: 6
 36276   01DCBC  0012               	return		;funcret
 36277   01DCBE                     __end_of_dir_register:
 36278                           	callstack 0
 36279                           
 36280 ;; *************** function _dir_alloc *****************
 36281 ;; Defined at:
 36282 ;;		line 1807 in file "../fatfs/ff.c"
 36283 ;; Parameters:    Size  Location     Type
 36284 ;;  dp              2  124[BANK6 ] PTR struct .
 36285 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
 36286 ;;  n_ent           2  126[BANK6 ] unsigned int 
 36287 ;; Auto vars:     Size  Location     Type
 36288 ;;  n               2  133[BANK6 ] unsigned int 
 36289 ;;  fs              2  131[BANK6 ] PTR struct .
 36290 ;;		 -> fs(564), NULL(0), 
 36291 ;;  res             1  135[BANK6 ] enum E597
 36292 ;; Return value:  Size  Location     Type
 36293 ;;                  1    wreg      enum E597
 36294 ;; Registers used:
 36295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36296 ;; Tracked objects:
 36297 ;;		On entry : 0/0
 36298 ;;		On exit  : 0/0
 36299 ;;		Unchanged: 0/0
 36300 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36302 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36303 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36304 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36305 ;;Total ram usage:       12 bytes
 36306 ;; Hardware stack levels used: 1
 36307 ;; Hardware stack levels required when called: 17
 36308 ;; This function calls:
 36309 ;;		_dir_next
 36310 ;;		_dir_sdi
 36311 ;;		_move_window
 36312 ;; This function is called by:
 36313 ;;		_dir_register
 36314 ;; This function uses a non-reentrant model
 36315 ;;
 36316                           
 36317                           	psect	text88
 36318   01C968                     __ptext88:
 36319                           	callstack 0
 36320   01C968                     _dir_alloc:
 36321                           	callstack 101
 36322   01C968                     
 36323                           ;../fatfs/ff.c: 1808:  DIR* dp,;../fatfs/ff.c: 1809:  UINT n_ent;../fatfs/ff.c: 1811: {;
      +                          ../fatfs/ff.c: 1812:  FRESULT res;;../fatfs/ff.c: 1813:  UINT n;;../fatfs/ff.c: 1814:  F
      +                          ATFS *fs = dp->obj.fs;
 36324   01C968  C67C  F4D9         	movff	dir_alloc@dp,fsr2l
 36325   01C96C  C67D  F4DA         	movff	dir_alloc@dp+1,fsr2h
 36326   01C970  C4DE F683          	movff	postinc2,dir_alloc@fs
 36327   01C974  C4DD F684          	movff	postdec2,dir_alloc@fs+1
 36328   01C978                     
 36329                           ;../fatfs/ff.c: 1817:  res = dir_sdi(dp, 0);
 36330   01C978  C67C  F63E         	movff	dir_alloc@dp,dir_sdi@dp
 36331   01C97C  C67D  F63F         	movff	dir_alloc@dp+1,dir_sdi@dp+1
 36332   01C980  0E00               	movlw	0
 36333   01C982  0106               	movlb	6	; () banked
 36334   01C984  6F40               	movwf	dir_sdi@ofs& (0+255),b
 36335   01C986  0E00               	movlw	0
 36336   01C988  6F41               	movwf	(dir_sdi@ofs+1)& (0+255),b
 36337   01C98A  0E00               	movlw	0
 36338   01C98C  6F42               	movwf	(dir_sdi@ofs+2)& (0+255),b
 36339   01C98E  0E00               	movlw	0
 36340   01C990  6F43               	movwf	(dir_sdi@ofs+3)& (0+255),b
 36341   01C992  EC72  F0BC         	call	_dir_sdi	;wreg free
 36342   01C996  0106               	movlb	6	; () banked
 36343   01C998  6F87               	movwf	dir_alloc@res& (0+255),b
 36344   01C99A                     
 36345                           ; BSR set to: 6
 36346                           ;../fatfs/ff.c: 1818:  if (res == FR_OK) {
 36347   01C99A  5187               	movf	dir_alloc@res& (0+255),w,b
 36348   01C99C  A4D8               	btfss	status,2,c
 36349   01C99E  EFD3  F0E4         	goto	u29471
 36350   01C9A2  EFD5  F0E4         	goto	u29470
 36351   01C9A6                     u29471:
 36352   01C9A6  EF4E  F0E5         	goto	l21799
 36353   01C9AA                     u29470:
 36354   01C9AA                     
 36355                           ; BSR set to: 6
 36356                           ;../fatfs/ff.c: 1819:   n = 0;
 36357   01C9AA  0E00               	movlw	0
 36358   01C9AC  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 36359   01C9AE  0E00               	movlw	0
 36360   01C9B0  6F85               	movwf	dir_alloc@n& (0+255),b
 36361   01C9B2                     l21779:
 36362                           
 36363                           ; BSR set to: 6
 36364                           ;../fatfs/ff.c: 1821:    res = move_window(fs, dp->sect);
 36365   01C9B2  C683  F61A         	movff	dir_alloc@fs,move_window@fs
 36366   01C9B6  C684  F61B         	movff	dir_alloc@fs+1,move_window@fs+1
 36367   01C9BA  EE20 F016          	lfsr	2,22
 36368   01C9BE  517C               	movf	dir_alloc@dp& (0+255),w,b
 36369   01C9C0  26D9               	addwf	fsr2l,f,c
 36370   01C9C2  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 36371   01C9C4  22DA               	addwfc	fsr2h,f,c
 36372   01C9C6  C4DE F61C          	movff	postinc2,move_window@sect
 36373   01C9CA  C4DE F61D          	movff	postinc2,move_window@sect+1
 36374   01C9CE  C4DE F61E          	movff	postinc2,move_window@sect+2
 36375   01C9D2  C4DE F61F          	movff	postinc2,move_window@sect+3
 36376   01C9D6  ECAB  F0EF         	call	_move_window	;wreg free
 36377   01C9DA  0106               	movlb	6	; () banked
 36378   01C9DC  6F87               	movwf	dir_alloc@res& (0+255),b
 36379   01C9DE                     
 36380                           ; BSR set to: 6
 36381                           ;../fatfs/ff.c: 1822:    if (res != FR_OK) break;
 36382   01C9DE  5187               	movf	dir_alloc@res& (0+255),w,b
 36383   01C9E0  B4D8               	btfsc	status,2,c
 36384   01C9E2  EFF5  F0E4         	goto	u29481
 36385   01C9E6  EFF7  F0E4         	goto	u29480
 36386   01C9EA                     u29481:
 36387   01C9EA  EFF9  F0E4         	goto	l21785
 36388   01C9EE                     u29480:
 36389   01C9EE  EF4E  F0E5         	goto	l21799
 36390   01C9F2                     l21785:
 36391                           
 36392                           ; BSR set to: 6
 36393                           ;../fatfs/ff.c: 1826:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
 36394   01C9F2  EE20 F01A          	lfsr	2,26
 36395   01C9F6  517C               	movf	dir_alloc@dp& (0+255),w,b
 36396   01C9F8  26D9               	addwf	fsr2l,f,c
 36397   01C9FA  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 36398   01C9FC  22DA               	addwfc	fsr2h,f,c
 36399   01C9FE  C4DE F680          	movff	postinc2,??_dir_alloc
 36400   01CA02  C4DD F681          	movff	postdec2,??_dir_alloc+1
 36401   01CA06  C680  F4D9         	movff	??_dir_alloc,fsr2l
 36402   01CA0A  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 36403   01CA0E  0EE5               	movlw	229
 36404   01CA10  18DE               	xorwf	postinc2,w,c
 36405   01CA12  B4D8               	btfsc	status,2,c
 36406   01CA14  EF0E  F0E5         	goto	u29491
 36407   01CA18  EF10  F0E5         	goto	u29490
 36408   01CA1C                     u29491:
 36409   01CA1C  EF26  F0E5         	goto	l21789
 36410   01CA20                     u29490:
 36411   01CA20                     
 36412                           ; BSR set to: 6
 36413   01CA20  EE20 F01A          	lfsr	2,26
 36414   01CA24  517C               	movf	dir_alloc@dp& (0+255),w,b
 36415   01CA26  26D9               	addwf	fsr2l,f,c
 36416   01CA28  517D               	movf	(dir_alloc@dp+1)& (0+255),w,b
 36417   01CA2A  22DA               	addwfc	fsr2h,f,c
 36418   01CA2C  C4DE F680          	movff	postinc2,??_dir_alloc
 36419   01CA30  C4DD F681          	movff	postdec2,??_dir_alloc+1
 36420   01CA34  C680  F4D9         	movff	??_dir_alloc,fsr2l
 36421   01CA38  C681  F4DA         	movff	??_dir_alloc+1,fsr2h
 36422   01CA3C  50DF               	movf	indf2,w,c
 36423   01CA3E  A4D8               	btfss	status,2,c
 36424   01CA40  EF24  F0E5         	goto	u29501
 36425   01CA44  EF26  F0E5         	goto	u29500
 36426   01CA48                     u29501:
 36427   01CA48  EF36  F0E5         	goto	l21793
 36428   01CA4C                     u29500:
 36429   01CA4C                     l21789:
 36430                           
 36431                           ; BSR set to: 6
 36432                           ;../fatfs/ff.c: 1828:     if (++n == n_ent) break;
 36433   01CA4C  4B85               	infsnz	dir_alloc@n& (0+255),f,b
 36434   01CA4E  2B86               	incf	(dir_alloc@n+1)& (0+255),f,b
 36435   01CA50  517E               	movf	dir_alloc@n_ent& (0+255),w,b
 36436   01CA52  1985               	xorwf	dir_alloc@n& (0+255),w,b
 36437   01CA54  E107               	bnz	u29511
 36438   01CA56  517F               	movf	(dir_alloc@n_ent+1)& (0+255),w,b
 36439   01CA58  1986               	xorwf	(dir_alloc@n+1)& (0+255),w,b
 36440   01CA5A  A4D8               	btfss	status,2,c
 36441   01CA5C  EF32  F0E5         	goto	u29511
 36442   01CA60  EF34  F0E5         	goto	u29510
 36443   01CA64                     u29511:
 36444   01CA64  EF3A  F0E5         	goto	l21795
 36445   01CA68                     u29510:
 36446   01CA68  EF4E  F0E5         	goto	l21799
 36447   01CA6C                     l21793:
 36448                           
 36449                           ; BSR set to: 6
 36450                           ;../fatfs/ff.c: 1830:     n = 0;
 36451   01CA6C  0E00               	movlw	0
 36452   01CA6E  6F86               	movwf	(dir_alloc@n+1)& (0+255),b
 36453   01CA70  0E00               	movlw	0
 36454   01CA72  6F85               	movwf	dir_alloc@n& (0+255),b
 36455   01CA74                     l21795:
 36456                           
 36457                           ; BSR set to: 6
 36458                           ;../fatfs/ff.c: 1832:    res = dir_next(dp, 1);
 36459   01CA74  C67C  F662         	movff	dir_alloc@dp,dir_next@dp
 36460   01CA78  C67D  F663         	movff	dir_alloc@dp+1,dir_next@dp+1
 36461   01CA7C  0E00               	movlw	0
 36462   01CA7E  6F65               	movwf	(dir_next@stretch+1)& (0+255),b
 36463   01CA80  0E01               	movlw	1
 36464   01CA82  6F64               	movwf	dir_next@stretch& (0+255),b
 36465   01CA84  ECCF  F0B0         	call	_dir_next	;wreg free
 36466   01CA88  0106               	movlb	6	; () banked
 36467   01CA8A  6F87               	movwf	dir_alloc@res& (0+255),b
 36468   01CA8C                     
 36469                           ; BSR set to: 6
 36470                           ;../fatfs/ff.c: 1833:   } while (res == FR_OK);
 36471   01CA8C  5187               	movf	dir_alloc@res& (0+255),w,b
 36472   01CA8E  B4D8               	btfsc	status,2,c
 36473   01CA90  EF4C  F0E5         	goto	u29521
 36474   01CA94  EF4E  F0E5         	goto	u29520
 36475   01CA98                     u29521:
 36476   01CA98  EFD9  F0E4         	goto	l21779
 36477   01CA9C                     u29520:
 36478   01CA9C                     l21799:
 36479                           
 36480                           ; BSR set to: 6
 36481                           ;../fatfs/ff.c: 1836:  if (res == FR_NO_FILE) res = FR_DENIED;
 36482   01CA9C  0E04               	movlw	4
 36483   01CA9E  1987               	xorwf	dir_alloc@res& (0+255),w,b
 36484   01CAA0  A4D8               	btfss	status,2,c
 36485   01CAA2  EF55  F0E5         	goto	u29531
 36486   01CAA6  EF57  F0E5         	goto	u29530
 36487   01CAAA                     u29531:
 36488   01CAAA  EF59  F0E5         	goto	l399
 36489   01CAAE                     u29530:
 36490   01CAAE                     
 36491                           ; BSR set to: 6
 36492   01CAAE  0E07               	movlw	7
 36493   01CAB0  6F87               	movwf	dir_alloc@res& (0+255),b
 36494   01CAB2                     l399:
 36495                           
 36496                           ; BSR set to: 6
 36497                           ;../fatfs/ff.c: 1837:  return res;
 36498   01CAB2  5187               	movf	dir_alloc@res& (0+255),w,b
 36499   01CAB4                     
 36500                           ; BSR set to: 6
 36501   01CAB4  0012               	return		;funcret
 36502   01CAB6                     __end_of_dir_alloc:
 36503                           	callstack 0
 36504                           
 36505 ;; *************** function _dir_sdi *****************
 36506 ;; Defined at:
 36507 ;;		line 1698 in file "../fatfs/ff.c"
 36508 ;; Parameters:    Size  Location     Type
 36509 ;;  dp              2   62[BANK6 ] PTR struct .
 36510 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_rename@djn(40), f_rename@djo(40), 
 36511 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), 
 36512 ;;		 -> f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), 
 36513 ;;  ofs             4   64[BANK6 ] unsigned long 
 36514 ;; Auto vars:     Size  Location     Type
 36515 ;;  clst            4   82[BANK6 ] unsigned long 
 36516 ;;  csz             4   78[BANK6 ] unsigned long 
 36517 ;;  fs              2   86[BANK6 ] PTR struct .
 36518 ;;		 -> fs(564), NULL(0), 
 36519 ;; Return value:  Size  Location     Type
 36520 ;;                  1    wreg      enum E597
 36521 ;; Registers used:
 36522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36523 ;; Tracked objects:
 36524 ;;		On entry : 0/0
 36525 ;;		On exit  : 0/0
 36526 ;;		Unchanged: 0/0
 36527 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36528 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36529 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36530 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36531 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36532 ;;Total ram usage:       26 bytes
 36533 ;; Hardware stack levels used: 1
 36534 ;; Hardware stack levels required when called: 15
 36535 ;; This function calls:
 36536 ;;		_clst2sect
 36537 ;;		_get_fat
 36538 ;; This function is called by:
 36539 ;;		_dir_alloc
 36540 ;;		_dir_find
 36541 ;;		_follow_path
 36542 ;;		_f_getcwd
 36543 ;;		_f_opendir
 36544 ;;		_f_readdir
 36545 ;;		_f_unlink
 36546 ;; This function uses a non-reentrant model
 36547 ;;
 36548                           
 36549                           	psect	text89
 36550   0178E4                     __ptext89:
 36551                           	callstack 0
 36552   0178E4                     _dir_sdi:
 36553                           	callstack 103
 36554   0178E4                     
 36555                           ;../fatfs/ff.c: 1699:  DIR* dp,;../fatfs/ff.c: 1700:  DWORD ofs;../fatfs/ff.c: 1702: {;.
      +                          ./fatfs/ff.c: 1703:  DWORD csz, clst;;../fatfs/ff.c: 1704:  FATFS *fs = dp->obj.fs;
 36556   0178E4  C63E  F4D9         	movff	dir_sdi@dp,fsr2l
 36557   0178E8  C63F  F4DA         	movff	dir_sdi@dp+1,fsr2h
 36558   0178EC  C4DE F656          	movff	postinc2,dir_sdi@fs
 36559   0178F0  C4DD F657          	movff	postdec2,dir_sdi@fs+1
 36560   0178F4  0106               	movlb	6	; () banked
 36561   0178F6  5143               	movf	(dir_sdi@ofs+3)& (0+255),w,b
 36562   0178F8  E107               	bnz	u28811
 36563   0178FA  0E20               	movlw	32
 36564   0178FC  5D42               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
 36565   0178FE  B0D8               	btfsc	status,0,c
 36566   017900  EF84  F0BC         	goto	u28811
 36567   017904  EF86  F0BC         	goto	u28810
 36568   017908                     u28811:
 36569   017908  EF9D  F0BC         	goto	l21451
 36570   01790C                     u28810:
 36571   01790C                     
 36572                           ; BSR set to: 6
 36573   01790C  0E1F               	movlw	31
 36574   01790E  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 36575   017910  6F44               	movwf	??_dir_sdi& (0+255),b
 36576   017912  0E00               	movlw	0
 36577   017914  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 36578   017916  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 36579   017918  0E00               	movlw	0
 36580   01791A  1542               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
 36581   01791C  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 36582   01791E  0E00               	movlw	0
 36583   017920  1543               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
 36584   017922  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 36585   017924  5144               	movf	??_dir_sdi& (0+255),w,b
 36586   017926  1145               	iorwf	(??_dir_sdi+1)& (0+255),w,b
 36587   017928  1146               	iorwf	(??_dir_sdi+2)& (0+255),w,b
 36588   01792A  1147               	iorwf	(??_dir_sdi+3)& (0+255),w,b
 36589   01792C  B4D8               	btfsc	status,2,c
 36590   01792E  EF9B  F0BC         	goto	u28821
 36591   017932  EF9D  F0BC         	goto	u28820
 36592   017936                     u28821:
 36593   017936  EFA0  F0BC         	goto	l21455
 36594   01793A                     u28820:
 36595   01793A                     l21451:
 36596                           
 36597                           ; BSR set to: 6
 36598                           ;../fatfs/ff.c: 1708:   return FR_INT_ERR;
 36599   01793A  0E02               	movlw	2
 36600   01793C  EF36  F0BE         	goto	l349
 36601   017940                     l21455:
 36602                           
 36603                           ; BSR set to: 6
 36604                           ;../fatfs/ff.c: 1710:  dp->dptr = ofs;
 36605   017940  EE20 F00E          	lfsr	2,14
 36606   017944  513E               	movf	dir_sdi@dp& (0+255),w,b
 36607   017946  26D9               	addwf	fsr2l,f,c
 36608   017948  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36609   01794A  22DA               	addwfc	fsr2h,f,c
 36610   01794C  C640  F4DE         	movff	dir_sdi@ofs,postinc2
 36611   017950  C641  F4DE         	movff	dir_sdi@ofs+1,postinc2
 36612   017954  C642  F4DE         	movff	dir_sdi@ofs+2,postinc2
 36613   017958  C643  F4DE         	movff	dir_sdi@ofs+3,postinc2
 36614                           
 36615                           ;../fatfs/ff.c: 1711:  clst = dp->obj.sclust;
 36616   01795C  EE20 F006          	lfsr	2,6
 36617   017960  513E               	movf	dir_sdi@dp& (0+255),w,b
 36618   017962  26D9               	addwf	fsr2l,f,c
 36619   017964  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36620   017966  22DA               	addwfc	fsr2h,f,c
 36621   017968  C4DE F652          	movff	postinc2,dir_sdi@clst
 36622   01796C  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 36623   017970  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 36624   017974  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 36625   017978                     
 36626                           ; BSR set to: 6
 36627                           ;../fatfs/ff.c: 1712:  if (clst == 0 && fs->fs_type >= 3) {
 36628   017978  5152               	movf	dir_sdi@clst& (0+255),w,b
 36629   01797A  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 36630   01797C  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 36631   01797E  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 36632   017980  A4D8               	btfss	status,2,c
 36633   017982  EFC5  F0BC         	goto	u28831
 36634   017986  EFC7  F0BC         	goto	u28830
 36635   01798A                     u28831:
 36636   01798A  EFE1  F0BC         	goto	l21465
 36637   01798E                     u28830:
 36638   01798E                     
 36639                           ; BSR set to: 6
 36640   01798E  C656  F4D9         	movff	dir_sdi@fs,fsr2l
 36641   017992  C657  F4DA         	movff	dir_sdi@fs+1,fsr2h
 36642   017996  0E02               	movlw	2
 36643   017998  64DF               	cpfsgt	indf2,c
 36644   01799A  EFD1  F0BC         	goto	u28841
 36645   01799E  EFD3  F0BC         	goto	u28840
 36646   0179A2                     u28841:
 36647   0179A2  EFE1  F0BC         	goto	l21465
 36648   0179A6                     u28840:
 36649   0179A6                     
 36650                           ; BSR set to: 6
 36651                           ;../fatfs/ff.c: 1713:   clst = (DWORD)fs->dirbase;
 36652   0179A6  EE20 F028          	lfsr	2,40
 36653   0179AA  5156               	movf	dir_sdi@fs& (0+255),w,b
 36654   0179AC  26D9               	addwf	fsr2l,f,c
 36655   0179AE  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 36656   0179B0  22DA               	addwfc	fsr2h,f,c
 36657   0179B2  C4DE F652          	movff	postinc2,dir_sdi@clst
 36658   0179B6  C4DE F653          	movff	postinc2,dir_sdi@clst+1
 36659   0179BA  C4DE F654          	movff	postinc2,dir_sdi@clst+2
 36660   0179BE  C4DE F655          	movff	postinc2,dir_sdi@clst+3
 36661   0179C2                     l21465:
 36662                           
 36663                           ; BSR set to: 6
 36664                           ;../fatfs/ff.c: 1717:  if (clst == 0) {
 36665   0179C2  5152               	movf	dir_sdi@clst& (0+255),w,b
 36666   0179C4  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 36667   0179C6  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 36668   0179C8  1155               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
 36669   0179CA  A4D8               	btfss	status,2,c
 36670   0179CC  EFEA  F0BC         	goto	u28851
 36671   0179D0  EFEC  F0BC         	goto	u28850
 36672   0179D4                     u28851:
 36673   0179D4  EF36  F0BD         	goto	l21475
 36674   0179D8                     u28850:
 36675   0179D8                     
 36676                           ; BSR set to: 6
 36677                           ;../fatfs/ff.c: 1718:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
 36678   0179D8  EE20 F008          	lfsr	2,8
 36679   0179DC  5156               	movf	dir_sdi@fs& (0+255),w,b
 36680   0179DE  26D9               	addwf	fsr2l,f,c
 36681   0179E0  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 36682   0179E2  22DA               	addwfc	fsr2h,f,c
 36683   0179E4  C4DE F644          	movff	postinc2,??_dir_sdi
 36684   0179E8  C4DD F645          	movff	postdec2,??_dir_sdi+1
 36685   0179EC  5144               	movf	??_dir_sdi& (0+255),w,b
 36686   0179EE  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 36687   0179F0  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 36688   0179F2  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 36689   0179F4  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 36690   0179F6  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 36691   0179F8  C640  F64A         	movff	dir_sdi@ofs,??_dir_sdi+6
 36692   0179FC  C641  F64B         	movff	dir_sdi@ofs+1,??_dir_sdi+7
 36693   017A00  C642  F64C         	movff	dir_sdi@ofs+2,??_dir_sdi+8
 36694   017A04  C643  F64D         	movff	dir_sdi@ofs+3,??_dir_sdi+9
 36695   017A08  0E06               	movlw	6
 36696   017A0A  EF0C  F0BD         	goto	u28860
 36697   017A0E                     u28865:
 36698   017A0E  90D8               	bcf	status,0,c
 36699   017A10  334D               	rrcf	(??_dir_sdi+9)& (0+255),f,b
 36700   017A12  334C               	rrcf	(??_dir_sdi+8)& (0+255),f,b
 36701   017A14  334B               	rrcf	(??_dir_sdi+7)& (0+255),f,b
 36702   017A16  334A               	rrcf	(??_dir_sdi+6)& (0+255),f,b
 36703   017A18                     u28860:
 36704   017A18  2EE8               	decfsz	wreg,f,c
 36705   017A1A  EF07  F0BD         	goto	u28865
 36706   017A1E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 36707   017A20  5D4A               	subwf	(??_dir_sdi+6)& (0+255),w,b
 36708   017A22  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 36709   017A24  594B               	subwfb	(??_dir_sdi+7)& (0+255),w,b
 36710   017A26  5148               	movf	(??_dir_sdi+4)& (0+255),w,b
 36711   017A28  594C               	subwfb	(??_dir_sdi+8)& (0+255),w,b
 36712   017A2A  5149               	movf	(??_dir_sdi+5)& (0+255),w,b
 36713   017A2C  594D               	subwfb	(??_dir_sdi+9)& (0+255),w,b
 36714   017A2E  A0D8               	btfss	status,0,c
 36715   017A30  EF1C  F0BD         	goto	u28871
 36716   017A34  EF1E  F0BD         	goto	u28870
 36717   017A38                     u28871:
 36718   017A38  EF20  F0BD         	goto	l21473
 36719   017A3C                     u28870:
 36720   017A3C  EF9D  F0BC         	goto	l21451
 36721   017A40                     l21473:
 36722                           
 36723                           ; BSR set to: 6
 36724                           ;../fatfs/ff.c: 1719:   dp->sect = fs->dirbase;
 36725   017A40  EE20 F028          	lfsr	2,40
 36726   017A44  5156               	movf	dir_sdi@fs& (0+255),w,b
 36727   017A46  26D9               	addwf	fsr2l,f,c
 36728   017A48  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 36729   017A4A  22DA               	addwfc	fsr2h,f,c
 36730   017A4C  EE10 F016          	lfsr	1,22
 36731   017A50  513E               	movf	dir_sdi@dp& (0+255),w,b
 36732   017A52  26E1               	addwf	fsr1l,f,c
 36733   017A54  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36734   017A56  22E2               	addwfc	fsr1h,f,c
 36735   017A58  C4DE F4E6          	movff	postinc2,postinc1
 36736   017A5C  C4DE F4E6          	movff	postinc2,postinc1
 36737   017A60  C4DE F4E6          	movff	postinc2,postinc1
 36738   017A64  C4DE F4E6          	movff	postinc2,postinc1
 36739                           
 36740                           ;../fatfs/ff.c: 1721:  } else {
 36741   017A68  EFD9  F0BD         	goto	l21497
 36742   017A6C                     l21475:
 36743                           
 36744                           ; BSR set to: 6
 36745                           ;../fatfs/ff.c: 1722:   csz = (DWORD)fs->csize * ((UINT)512);
 36746   017A6C  EE20 F00A          	lfsr	2,10
 36747   017A70  5156               	movf	dir_sdi@fs& (0+255),w,b
 36748   017A72  26D9               	addwf	fsr2l,f,c
 36749   017A74  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 36750   017A76  22DA               	addwfc	fsr2h,f,c
 36751   017A78  C4DE F644          	movff	postinc2,??_dir_sdi
 36752   017A7C  C4DD F645          	movff	postdec2,??_dir_sdi+1
 36753   017A80  5144               	movf	??_dir_sdi& (0+255),w,b
 36754   017A82  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 36755   017A84  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 36756   017A86  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 36757   017A88  6B48               	clrf	(??_dir_sdi+4)& (0+255),b
 36758   017A8A  6B49               	clrf	(??_dir_sdi+5)& (0+255),b
 36759   017A8C  0E09               	movlw	9
 36760   017A8E                     u28885:
 36761   017A8E  90D8               	bcf	status,0,c
 36762   017A90  3746               	rlcf	(??_dir_sdi+2)& (0+255),f,b
 36763   017A92  3747               	rlcf	(??_dir_sdi+3)& (0+255),f,b
 36764   017A94  3748               	rlcf	(??_dir_sdi+4)& (0+255),f,b
 36765   017A96  3749               	rlcf	(??_dir_sdi+5)& (0+255),f,b
 36766   017A98  2EE8               	decfsz	wreg,f,c
 36767   017A9A  EF47  F0BD         	goto	u28885
 36768   017A9E  C646  F64E         	movff	??_dir_sdi+2,dir_sdi@csz
 36769   017AA2  C647  F64F         	movff	??_dir_sdi+3,dir_sdi@csz+1
 36770   017AA6  C648  F650         	movff	??_dir_sdi+4,dir_sdi@csz+2
 36771   017AAA  C649  F651         	movff	??_dir_sdi+5,dir_sdi@csz+3
 36772                           
 36773                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 36774   017AAE  EFAD  F0BD         	goto	l355
 36775   017AB2                     l21477:
 36776                           
 36777                           ; BSR set to: 6
 36778                           ;../fatfs/ff.c: 1724:    clst = get_fat(&dp->obj, clst);
 36779   017AB2  C63E  F624         	movff	dir_sdi@dp,get_fat@obj
 36780   017AB6  C63F  F625         	movff	dir_sdi@dp+1,get_fat@obj+1
 36781   017ABA  C652  F626         	movff	dir_sdi@clst,get_fat@clst
 36782   017ABE  C653  F627         	movff	dir_sdi@clst+1,get_fat@clst+1
 36783   017AC2  C654  F628         	movff	dir_sdi@clst+2,get_fat@clst+2
 36784   017AC6  C655  F629         	movff	dir_sdi@clst+3,get_fat@clst+3
 36785   017ACA  ECF7  F0B4         	call	_get_fat	;wreg free
 36786   017ACE  C624  F652         	movff	?_get_fat,dir_sdi@clst
 36787   017AD2  C625  F653         	movff	?_get_fat+1,dir_sdi@clst+1
 36788   017AD6  C626  F654         	movff	?_get_fat+2,dir_sdi@clst+2
 36789   017ADA  C627  F655         	movff	?_get_fat+3,dir_sdi@clst+3
 36790   017ADE                     
 36791                           ;../fatfs/ff.c: 1725:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 36792   017ADE  0106               	movlb	6	; () banked
 36793   017AE0  2952               	incf	dir_sdi@clst& (0+255),w,b
 36794   017AE2  E10A               	bnz	u28891
 36795   017AE4  2953               	incf	(dir_sdi@clst+1)& (0+255),w,b
 36796   017AE6  E108               	bnz	u28891
 36797   017AE8  2954               	incf	(dir_sdi@clst+2)& (0+255),w,b
 36798   017AEA  E106               	bnz	u28891
 36799   017AEC  2955               	incf	(dir_sdi@clst+3)& (0+255),w,b
 36800   017AEE  A4D8               	btfss	status,2,c
 36801   017AF0  EF7C  F0BD         	goto	u28891
 36802   017AF4  EF7E  F0BD         	goto	u28890
 36803   017AF8                     u28891:
 36804   017AF8  EF81  F0BD         	goto	l21485
 36805   017AFC                     u28890:
 36806   017AFC                     
 36807                           ; BSR set to: 6
 36808   017AFC  0E01               	movlw	1
 36809   017AFE  EF36  F0BE         	goto	l349
 36810   017B02                     l21485:
 36811                           
 36812                           ; BSR set to: 6
 36813                           ;../fatfs/ff.c: 1726:    if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
 36814   017B02  5155               	movf	(dir_sdi@clst+3)& (0+255),w,b
 36815   017B04  1154               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
 36816   017B06  1153               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
 36817   017B08  E109               	bnz	u28900
 36818   017B0A  0E02               	movlw	2
 36819   017B0C  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 36820   017B0E  A0D8               	btfss	status,0,c
 36821   017B10  EF8C  F0BD         	goto	u28901
 36822   017B14  EF8E  F0BD         	goto	u28900
 36823   017B18                     u28901:
 36824   017B18  EF9D  F0BC         	goto	l21451
 36825   017B1C                     u28900:
 36826   017B1C                     
 36827                           ; BSR set to: 6
 36828   017B1C  EE20 F018          	lfsr	2,24
 36829   017B20  5156               	movf	dir_sdi@fs& (0+255),w,b
 36830   017B22  26D9               	addwf	fsr2l,f,c
 36831   017B24  5157               	movf	(dir_sdi@fs+1)& (0+255),w,b
 36832   017B26  22DA               	addwfc	fsr2h,f,c
 36833   017B28  50DE               	movf	postinc2,w,c
 36834   017B2A  5D52               	subwf	dir_sdi@clst& (0+255),w,b
 36835   017B2C  50DE               	movf	postinc2,w,c
 36836   017B2E  5953               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
 36837   017B30  50DE               	movf	postinc2,w,c
 36838   017B32  5954               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
 36839   017B34  50DE               	movf	postinc2,w,c
 36840   017B36  5955               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
 36841   017B38  A0D8               	btfss	status,0,c
 36842   017B3A  EFA1  F0BD         	goto	u28911
 36843   017B3E  EFA3  F0BD         	goto	u28910
 36844   017B42                     u28911:
 36845   017B42  EFA5  F0BD         	goto	l21493
 36846   017B46                     u28910:
 36847   017B46  EF9D  F0BC         	goto	l21451
 36848   017B4A                     l21493:
 36849                           
 36850                           ; BSR set to: 6
 36851                           ;../fatfs/ff.c: 1727:    ofs -= csz;
 36852   017B4A  514E               	movf	dir_sdi@csz& (0+255),w,b
 36853   017B4C  5F40               	subwf	dir_sdi@ofs& (0+255),f,b
 36854   017B4E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 36855   017B50  5B41               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
 36856   017B52  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 36857   017B54  5B42               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
 36858   017B56  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 36859   017B58  5B43               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
 36860   017B5A                     l355:
 36861                           
 36862                           ; BSR set to: 6
 36863                           ;../fatfs/ff.c: 1723:   while (ofs >= csz) {
 36864   017B5A  514E               	movf	dir_sdi@csz& (0+255),w,b
 36865   017B5C  5D40               	subwf	dir_sdi@ofs& (0+255),w,b
 36866   017B5E  514F               	movf	(dir_sdi@csz+1)& (0+255),w,b
 36867   017B60  5941               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
 36868   017B62  5150               	movf	(dir_sdi@csz+2)& (0+255),w,b
 36869   017B64  5942               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
 36870   017B66  5151               	movf	(dir_sdi@csz+3)& (0+255),w,b
 36871   017B68  5943               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
 36872   017B6A  B0D8               	btfsc	status,0,c
 36873   017B6C  EFBA  F0BD         	goto	u28921
 36874   017B70  EFBC  F0BD         	goto	u28920
 36875   017B74                     u28921:
 36876   017B74  EF59  F0BD         	goto	l21477
 36877   017B78                     u28920:
 36878   017B78                     
 36879                           ; BSR set to: 6
 36880                           ;../fatfs/ff.c: 1729:   dp->sect = clst2sect(fs, clst);
 36881   017B78  C656  F510         	movff	dir_sdi@fs,clst2sect@fs
 36882   017B7C  C657  F511         	movff	dir_sdi@fs+1,clst2sect@fs+1
 36883   017B80  C652  F512         	movff	dir_sdi@clst,clst2sect@clst
 36884   017B84  C653  F513         	movff	dir_sdi@clst+1,clst2sect@clst+1
 36885   017B88  C654  F514         	movff	dir_sdi@clst+2,clst2sect@clst+2
 36886   017B8C  C655  F515         	movff	dir_sdi@clst+3,clst2sect@clst+3
 36887   017B90  EC7A  F0F0         	call	_clst2sect	;wreg free
 36888   017B94  0106               	movlb	6	; () banked
 36889   017B96  EE20 F016          	lfsr	2,22
 36890   017B9A  513E               	movf	dir_sdi@dp& (0+255),w,b
 36891   017B9C  26D9               	addwf	fsr2l,f,c
 36892   017B9E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36893   017BA0  22DA               	addwfc	fsr2h,f,c
 36894   017BA2  C510  F4DE         	movff	?_clst2sect,postinc2
 36895   017BA6  C511  F4DE         	movff	?_clst2sect+1,postinc2
 36896   017BAA  C512  F4DE         	movff	?_clst2sect+2,postinc2
 36897   017BAE  C513  F4DE         	movff	?_clst2sect+3,postinc2
 36898   017BB2                     l21497:
 36899                           
 36900                           ; BSR set to: 6
 36901                           ;../fatfs/ff.c: 1731:  dp->clust = clst;
 36902   017BB2  EE20 F012          	lfsr	2,18
 36903   017BB6  513E               	movf	dir_sdi@dp& (0+255),w,b
 36904   017BB8  26D9               	addwf	fsr2l,f,c
 36905   017BBA  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36906   017BBC  22DA               	addwfc	fsr2h,f,c
 36907   017BBE  C652  F4DE         	movff	dir_sdi@clst,postinc2
 36908   017BC2  C653  F4DE         	movff	dir_sdi@clst+1,postinc2
 36909   017BC6  C654  F4DE         	movff	dir_sdi@clst+2,postinc2
 36910   017BCA  C655  F4DE         	movff	dir_sdi@clst+3,postinc2
 36911   017BCE                     
 36912                           ; BSR set to: 6
 36913                           ;../fatfs/ff.c: 1732:  if (dp->sect == 0) return FR_INT_ERR;
 36914   017BCE  EE20 F016          	lfsr	2,22
 36915   017BD2  513E               	movf	dir_sdi@dp& (0+255),w,b
 36916   017BD4  26D9               	addwf	fsr2l,f,c
 36917   017BD6  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36918   017BD8  22DA               	addwfc	fsr2h,f,c
 36919   017BDA  50DE               	movf	postinc2,w,c
 36920   017BDC  10DE               	iorwf	postinc2,w,c
 36921   017BDE  10DE               	iorwf	postinc2,w,c
 36922   017BE0  10DE               	iorwf	postinc2,w,c
 36923   017BE2  A4D8               	btfss	status,2,c
 36924   017BE4  EFF6  F0BD         	goto	u28931
 36925   017BE8  EFF8  F0BD         	goto	u28930
 36926   017BEC                     u28931:
 36927   017BEC  EFFA  F0BD         	goto	l21505
 36928   017BF0                     u28930:
 36929   017BF0  EF9D  F0BC         	goto	l21451
 36930   017BF4                     l21505:
 36931                           
 36932                           ; BSR set to: 6
 36933                           ;../fatfs/ff.c: 1733:  dp->sect += ofs / ((UINT)512);
 36934   017BF4  C640  F644         	movff	dir_sdi@ofs,??_dir_sdi
 36935   017BF8  C641  F645         	movff	dir_sdi@ofs+1,??_dir_sdi+1
 36936   017BFC  C642  F646         	movff	dir_sdi@ofs+2,??_dir_sdi+2
 36937   017C00  C643  F647         	movff	dir_sdi@ofs+3,??_dir_sdi+3
 36938   017C04  0E0A               	movlw	10
 36939   017C06  EF0A  F0BE         	goto	u28940
 36940   017C0A                     u28945:
 36941   017C0A  90D8               	bcf	status,0,c
 36942   017C0C  3347               	rrcf	(??_dir_sdi+3)& (0+255),f,b
 36943   017C0E  3346               	rrcf	(??_dir_sdi+2)& (0+255),f,b
 36944   017C10  3345               	rrcf	(??_dir_sdi+1)& (0+255),f,b
 36945   017C12  3344               	rrcf	??_dir_sdi& (0+255),f,b
 36946   017C14                     u28940:
 36947   017C14  2EE8               	decfsz	wreg,f,c
 36948   017C16  EF05  F0BE         	goto	u28945
 36949   017C1A  EE20 F016          	lfsr	2,22
 36950   017C1E  513E               	movf	dir_sdi@dp& (0+255),w,b
 36951   017C20  26D9               	addwf	fsr2l,f,c
 36952   017C22  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36953   017C24  22DA               	addwfc	fsr2h,f,c
 36954   017C26  5144               	movf	??_dir_sdi& (0+255),w,b
 36955   017C28  26DE               	addwf	postinc2,f,c
 36956   017C2A  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 36957   017C2C  22DE               	addwfc	postinc2,f,c
 36958   017C2E  5146               	movf	(??_dir_sdi+2)& (0+255),w,b
 36959   017C30  22DE               	addwfc	postinc2,f,c
 36960   017C32  5147               	movf	(??_dir_sdi+3)& (0+255),w,b
 36961   017C34  22DE               	addwfc	postinc2,f,c
 36962                           
 36963                           ;../fatfs/ff.c: 1734:  dp->dir = fs->win + (ofs % ((UINT)512));
 36964   017C36  0EFF               	movlw	255
 36965   017C38  1540               	andwf	dir_sdi@ofs& (0+255),w,b
 36966   017C3A  6F44               	movwf	??_dir_sdi& (0+255),b
 36967   017C3C  0E01               	movlw	1
 36968   017C3E  1541               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
 36969   017C40  6F45               	movwf	(??_dir_sdi+1)& (0+255),b
 36970   017C42  5144               	movf	??_dir_sdi& (0+255),w,b
 36971   017C44  2556               	addwf	dir_sdi@fs& (0+255),w,b
 36972   017C46  6F46               	movwf	(??_dir_sdi+2)& (0+255),b
 36973   017C48  5145               	movf	(??_dir_sdi+1)& (0+255),w,b
 36974   017C4A  2157               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
 36975   017C4C  6F47               	movwf	(??_dir_sdi+3)& (0+255),b
 36976   017C4E  0E34               	movlw	52
 36977   017C50  2746               	addwf	(??_dir_sdi+2)& (0+255),f,b
 36978   017C52  0E00               	movlw	0
 36979   017C54  2347               	addwfc	(??_dir_sdi+3)& (0+255),f,b
 36980   017C56  EE20 F01A          	lfsr	2,26
 36981   017C5A  513E               	movf	dir_sdi@dp& (0+255),w,b
 36982   017C5C  26D9               	addwf	fsr2l,f,c
 36983   017C5E  513F               	movf	(dir_sdi@dp+1)& (0+255),w,b
 36984   017C60  22DA               	addwfc	fsr2h,f,c
 36985   017C62  C646  F4DE         	movff	??_dir_sdi+2,postinc2
 36986   017C66  C647  F4DD         	movff	??_dir_sdi+3,postdec2
 36987   017C6A                     
 36988                           ; BSR set to: 6
 36989                           ;../fatfs/ff.c: 1736:  return FR_OK;
 36990   017C6A  0E00               	movlw	0
 36991   017C6C                     l349:
 36992                           
 36993                           ; BSR set to: 6
 36994   017C6C  0012               	return		;funcret
 36995   017C6E                     __end_of_dir_sdi:
 36996                           	callstack 0
 36997                           
 36998 ;; *************** function _dir_next *****************
 36999 ;; Defined at:
 37000 ;;		line 1746 in file "../fatfs/ff.c"
 37001 ;; Parameters:    Size  Location     Type
 37002 ;;  dp              2   98[BANK6 ] PTR struct .
 37003 ;;		 -> scan_files1@dir(40), scan_files@dir(40), f_rename@djn(40), f_rename@djo(40), 
 37004 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_stat@dj(40), 
 37005 ;;		 -> f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), 
 37006 ;;  stretch         2  100[BANK6 ] int 
 37007 ;; Auto vars:     Size  Location     Type
 37008 ;;  clst            4  120[BANK6 ] unsigned long 
 37009 ;;  ofs             4  114[BANK6 ] unsigned long 
 37010 ;;  fs              2  118[BANK6 ] PTR struct .
 37011 ;;		 -> fs(564), NULL(0), 
 37012 ;; Return value:  Size  Location     Type
 37013 ;;                  1    wreg      enum E597
 37014 ;; Registers used:
 37015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37016 ;; Tracked objects:
 37017 ;;		On entry : 0/0
 37018 ;;		On exit  : 0/0
 37019 ;;		Unchanged: 0/0
 37020 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37021 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37022 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37023 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37024 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37025 ;;Total ram usage:       26 bytes
 37026 ;; Hardware stack levels used: 1
 37027 ;; Hardware stack levels required when called: 16
 37028 ;; This function calls:
 37029 ;;		_clst2sect
 37030 ;;		_create_chain
 37031 ;;		_dir_clear
 37032 ;;		_get_fat
 37033 ;; This function is called by:
 37034 ;;		_dir_alloc
 37035 ;;		_dir_read
 37036 ;;		_dir_find
 37037 ;;		_f_getcwd
 37038 ;;		_f_readdir
 37039 ;; This function uses a non-reentrant model
 37040 ;;
 37041                           
 37042                           	psect	text90
 37043   01619E                     __ptext90:
 37044                           	callstack 0
 37045   01619E                     _dir_next:
 37046                           	callstack 101
 37047   01619E                     
 37048                           ;../fatfs/ff.c: 1747:  DIR* dp,;../fatfs/ff.c: 1748:  int stretch;../fatfs/ff.c: 1750: {
      +                          ;../fatfs/ff.c: 1751:  DWORD ofs, clst;;../fatfs/ff.c: 1752:  FATFS *fs = dp->obj.fs;
 37049   01619E  C662  F4D9         	movff	dir_next@dp,fsr2l
 37050   0161A2  C663  F4DA         	movff	dir_next@dp+1,fsr2h
 37051   0161A6  C4DE F676          	movff	postinc2,dir_next@fs
 37052   0161AA  C4DD F677          	movff	postdec2,dir_next@fs+1
 37053   0161AE                     
 37054                           ;../fatfs/ff.c: 1755:  ofs = dp->dptr + 32;
 37055   0161AE  0106               	movlb	6	; () banked
 37056   0161B0  EE20 F00E          	lfsr	2,14
 37057   0161B4  5162               	movf	dir_next@dp& (0+255),w,b
 37058   0161B6  26D9               	addwf	fsr2l,f,c
 37059   0161B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37060   0161BA  22DA               	addwfc	fsr2h,f,c
 37061   0161BC  C4DE F666          	movff	postinc2,??_dir_next
 37062   0161C0  C4DE F667          	movff	postinc2,??_dir_next+1
 37063   0161C4  C4DE F668          	movff	postinc2,??_dir_next+2
 37064   0161C8  C4DE F669          	movff	postinc2,??_dir_next+3
 37065   0161CC  0E20               	movlw	32
 37066   0161CE  2566               	addwf	??_dir_next& (0+255),w,b
 37067   0161D0  6F72               	movwf	dir_next@ofs& (0+255),b
 37068   0161D2  0E00               	movlw	0
 37069   0161D4  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 37070   0161D6  6F73               	movwf	(dir_next@ofs+1)& (0+255),b
 37071   0161D8  0E00               	movlw	0
 37072   0161DA  2168               	addwfc	(??_dir_next+2)& (0+255),w,b
 37073   0161DC  6F74               	movwf	(dir_next@ofs+2)& (0+255),b
 37074   0161DE  0E00               	movlw	0
 37075   0161E0  2169               	addwfc	(??_dir_next+3)& (0+255),w,b
 37076   0161E2  6F75               	movwf	(dir_next@ofs+3)& (0+255),b
 37077   0161E4                     
 37078                           ; BSR set to: 6
 37079   0161E4  5175               	movf	(dir_next@ofs+3)& (0+255),w,b
 37080   0161E6  E109               	bnz	u28950
 37081   0161E8  0E20               	movlw	32
 37082   0161EA  5D74               	subwf	(dir_next@ofs+2)& (0+255),w,b
 37083   0161EC  A0D8               	btfss	status,0,c
 37084   0161EE  EFFB  F0B0         	goto	u28951
 37085   0161F2  EFFD  F0B0         	goto	u28950
 37086   0161F6                     u28951:
 37087   0161F6  EF07  F0B1         	goto	l365
 37088   0161FA                     u28950:
 37089   0161FA                     
 37090                           ; BSR set to: 6
 37091   0161FA  EE20 F016          	lfsr	2,22
 37092   0161FE  5162               	movf	dir_next@dp& (0+255),w,b
 37093   016200  26D9               	addwf	fsr2l,f,c
 37094   016202  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37095   016204  22DA               	addwfc	fsr2h,f,c
 37096   016206  6ADE               	clrf	postinc2,c
 37097   016208  6ADE               	clrf	postinc2,c
 37098   01620A  6ADE               	clrf	postinc2,c
 37099   01620C  6ADD               	clrf	postdec2,c
 37100   01620E                     l365:
 37101                           
 37102                           ; BSR set to: 6
 37103                           ;../fatfs/ff.c: 1757:  if (dp->sect == 0) return FR_NO_FILE;
 37104   01620E  EE20 F016          	lfsr	2,22
 37105   016212  5162               	movf	dir_next@dp& (0+255),w,b
 37106   016214  26D9               	addwf	fsr2l,f,c
 37107   016216  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37108   016218  22DA               	addwfc	fsr2h,f,c
 37109   01621A  50DE               	movf	postinc2,w,c
 37110   01621C  10DE               	iorwf	postinc2,w,c
 37111   01621E  10DE               	iorwf	postinc2,w,c
 37112   016220  10DE               	iorwf	postinc2,w,c
 37113   016222  A4D8               	btfss	status,2,c
 37114   016224  EF16  F0B1         	goto	u28961
 37115   016228  EF18  F0B1         	goto	u28960
 37116   01622C                     u28961:
 37117   01622C  EF1B  F0B1         	goto	l21529
 37118   016230                     u28960:
 37119   016230                     l21525:
 37120                           
 37121                           ; BSR set to: 6
 37122   016230  0E04               	movlw	4
 37123   016232  EFE3  F0B2         	goto	l373
 37124   016236                     l21529:
 37125                           
 37126                           ; BSR set to: 6
 37127                           ;../fatfs/ff.c: 1759:  if (ofs % ((UINT)512) == 0) {
 37128   016236  0EFF               	movlw	255
 37129   016238  1572               	andwf	dir_next@ofs& (0+255),w,b
 37130   01623A  6F66               	movwf	??_dir_next& (0+255),b
 37131   01623C  0E01               	movlw	1
 37132   01623E  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 37133   016240  6F67               	movwf	(??_dir_next+1)& (0+255),b
 37134   016242  0E00               	movlw	0
 37135   016244  1574               	andwf	(dir_next@ofs+2)& (0+255),w,b
 37136   016246  6F68               	movwf	(??_dir_next+2)& (0+255),b
 37137   016248  0E00               	movlw	0
 37138   01624A  1575               	andwf	(dir_next@ofs+3)& (0+255),w,b
 37139   01624C  6F69               	movwf	(??_dir_next+3)& (0+255),b
 37140   01624E  5166               	movf	??_dir_next& (0+255),w,b
 37141   016250  1167               	iorwf	(??_dir_next+1)& (0+255),w,b
 37142   016252  1168               	iorwf	(??_dir_next+2)& (0+255),w,b
 37143   016254  1169               	iorwf	(??_dir_next+3)& (0+255),w,b
 37144   016256  A4D8               	btfss	status,2,c
 37145   016258  EF30  F0B1         	goto	u28971
 37146   01625C  EF32  F0B1         	goto	u28970
 37147   016260                     u28971:
 37148   016260  EFBA  F0B2         	goto	l21597
 37149   016264                     u28970:
 37150   016264                     
 37151                           ; BSR set to: 6
 37152                           ;../fatfs/ff.c: 1760:   dp->sect++;
 37153   016264  EE20 F016          	lfsr	2,22
 37154   016268  5162               	movf	dir_next@dp& (0+255),w,b
 37155   01626A  26D9               	addwf	fsr2l,f,c
 37156   01626C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37157   01626E  22DA               	addwfc	fsr2h,f,c
 37158   016270  2ADE               	incf	postinc2,f,c
 37159   016272  0E00               	movlw	0
 37160   016274  22DE               	addwfc	postinc2,f,c
 37161   016276  22DE               	addwfc	postinc2,f,c
 37162   016278  22DE               	addwfc	postinc2,f,c
 37163                           
 37164                           ;../fatfs/ff.c: 1762:   if (dp->clust == 0) {
 37165   01627A  EE20 F012          	lfsr	2,18
 37166   01627E  5162               	movf	dir_next@dp& (0+255),w,b
 37167   016280  26D9               	addwf	fsr2l,f,c
 37168   016282  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37169   016284  22DA               	addwfc	fsr2h,f,c
 37170   016286  50DE               	movf	postinc2,w,c
 37171   016288  10DE               	iorwf	postinc2,w,c
 37172   01628A  10DE               	iorwf	postinc2,w,c
 37173   01628C  10DE               	iorwf	postinc2,w,c
 37174   01628E  A4D8               	btfss	status,2,c
 37175   016290  EF4C  F0B1         	goto	u28981
 37176   016294  EF4E  F0B1         	goto	u28980
 37177   016298                     u28981:
 37178   016298  EF8C  F0B1         	goto	l21541
 37179   01629C                     u28980:
 37180   01629C                     
 37181                           ; BSR set to: 6
 37182                           ;../fatfs/ff.c: 1763:    if (ofs / 32 >= fs->n_rootdir) {
 37183   01629C  EE20 F008          	lfsr	2,8
 37184   0162A0  5176               	movf	dir_next@fs& (0+255),w,b
 37185   0162A2  26D9               	addwf	fsr2l,f,c
 37186   0162A4  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 37187   0162A6  22DA               	addwfc	fsr2h,f,c
 37188   0162A8  C4DE F666          	movff	postinc2,??_dir_next
 37189   0162AC  C4DD F667          	movff	postdec2,??_dir_next+1
 37190   0162B0  5166               	movf	??_dir_next& (0+255),w,b
 37191   0162B2  6F68               	movwf	(??_dir_next+2)& (0+255),b
 37192   0162B4  5167               	movf	(??_dir_next+1)& (0+255),w,b
 37193   0162B6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 37194   0162B8  6B6A               	clrf	(??_dir_next+4)& (0+255),b
 37195   0162BA  6B6B               	clrf	(??_dir_next+5)& (0+255),b
 37196   0162BC  C672  F66C         	movff	dir_next@ofs,??_dir_next+6
 37197   0162C0  C673  F66D         	movff	dir_next@ofs+1,??_dir_next+7
 37198   0162C4  C674  F66E         	movff	dir_next@ofs+2,??_dir_next+8
 37199   0162C8  C675  F66F         	movff	dir_next@ofs+3,??_dir_next+9
 37200   0162CC  0E06               	movlw	6
 37201   0162CE  EF6E  F0B1         	goto	u28990
 37202   0162D2                     u28995:
 37203   0162D2  90D8               	bcf	status,0,c
 37204   0162D4  336F               	rrcf	(??_dir_next+9)& (0+255),f,b
 37205   0162D6  336E               	rrcf	(??_dir_next+8)& (0+255),f,b
 37206   0162D8  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 37207   0162DA  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 37208   0162DC                     u28990:
 37209   0162DC  2EE8               	decfsz	wreg,f,c
 37210   0162DE  EF69  F0B1         	goto	u28995
 37211   0162E2  5168               	movf	(??_dir_next+2)& (0+255),w,b
 37212   0162E4  5D6C               	subwf	(??_dir_next+6)& (0+255),w,b
 37213   0162E6  5169               	movf	(??_dir_next+3)& (0+255),w,b
 37214   0162E8  596D               	subwfb	(??_dir_next+7)& (0+255),w,b
 37215   0162EA  516A               	movf	(??_dir_next+4)& (0+255),w,b
 37216   0162EC  596E               	subwfb	(??_dir_next+8)& (0+255),w,b
 37217   0162EE  516B               	movf	(??_dir_next+5)& (0+255),w,b
 37218   0162F0  596F               	subwfb	(??_dir_next+9)& (0+255),w,b
 37219   0162F2  A0D8               	btfss	status,0,c
 37220   0162F4  EF7E  F0B1         	goto	u29001
 37221   0162F8  EF80  F0B1         	goto	u29000
 37222   0162FC                     u29001:
 37223   0162FC  EFBA  F0B2         	goto	l21597
 37224   016300                     u29000:
 37225   016300                     
 37226                           ; BSR set to: 6
 37227                           ;../fatfs/ff.c: 1764:     dp->sect = 0; return FR_NO_FILE;
 37228   016300  EE20 F016          	lfsr	2,22
 37229   016304  5162               	movf	dir_next@dp& (0+255),w,b
 37230   016306  26D9               	addwf	fsr2l,f,c
 37231   016308  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37232   01630A  22DA               	addwfc	fsr2h,f,c
 37233   01630C  6ADE               	clrf	postinc2,c
 37234   01630E  6ADE               	clrf	postinc2,c
 37235   016310  6ADE               	clrf	postinc2,c
 37236   016312  6ADD               	clrf	postdec2,c
 37237   016314  EF18  F0B1         	goto	l21525
 37238   016318                     l21541:
 37239                           
 37240                           ; BSR set to: 6
 37241                           ;../fatfs/ff.c: 1768:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
 37242   016318  EE20 F00A          	lfsr	2,10
 37243   01631C  5176               	movf	dir_next@fs& (0+255),w,b
 37244   01631E  26D9               	addwf	fsr2l,f,c
 37245   016320  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 37246   016322  22DA               	addwfc	fsr2h,f,c
 37247   016324  C4DE F666          	movff	postinc2,??_dir_next
 37248   016328  C4DD F667          	movff	postdec2,??_dir_next+1
 37249   01632C  0EFF               	movlw	255
 37250   01632E  2566               	addwf	??_dir_next& (0+255),w,b
 37251   016330  6F68               	movwf	(??_dir_next+2)& (0+255),b
 37252   016332  0EFF               	movlw	255
 37253   016334  2167               	addwfc	(??_dir_next+1)& (0+255),w,b
 37254   016336  6F69               	movwf	(??_dir_next+3)& (0+255),b
 37255   016338  C672  F66A         	movff	dir_next@ofs,??_dir_next+4
 37256   01633C  C673  F66B         	movff	dir_next@ofs+1,??_dir_next+5
 37257   016340  C674  F66C         	movff	dir_next@ofs+2,??_dir_next+6
 37258   016344  C675  F66D         	movff	dir_next@ofs+3,??_dir_next+7
 37259   016348  0E0A               	movlw	10
 37260   01634A  EFAC  F0B1         	goto	u29010
 37261   01634E                     u29015:
 37262   01634E  90D8               	bcf	status,0,c
 37263   016350  336D               	rrcf	(??_dir_next+7)& (0+255),f,b
 37264   016352  336C               	rrcf	(??_dir_next+6)& (0+255),f,b
 37265   016354  336B               	rrcf	(??_dir_next+5)& (0+255),f,b
 37266   016356  336A               	rrcf	(??_dir_next+4)& (0+255),f,b
 37267   016358                     u29010:
 37268   016358  2EE8               	decfsz	wreg,f,c
 37269   01635A  EFA7  F0B1         	goto	u29015
 37270   01635E  5168               	movf	(??_dir_next+2)& (0+255),w,b
 37271   016360  156A               	andwf	(??_dir_next+4)& (0+255),w,b
 37272   016362  6F6E               	movwf	(??_dir_next+8)& (0+255),b
 37273   016364  5169               	movf	(??_dir_next+3)& (0+255),w,b
 37274   016366  156B               	andwf	(??_dir_next+5)& (0+255),w,b
 37275   016368  6F6F               	movwf	(??_dir_next+9)& (0+255),b
 37276   01636A  0E00               	movlw	0
 37277   01636C  156C               	andwf	(??_dir_next+6)& (0+255),w,b
 37278   01636E  6F70               	movwf	(??_dir_next+10)& (0+255),b
 37279   016370  0E00               	movlw	0
 37280   016372  156D               	andwf	(??_dir_next+7)& (0+255),w,b
 37281   016374  6F71               	movwf	(??_dir_next+11)& (0+255),b
 37282   016376  516E               	movf	(??_dir_next+8)& (0+255),w,b
 37283   016378  116F               	iorwf	(??_dir_next+9)& (0+255),w,b
 37284   01637A  1170               	iorwf	(??_dir_next+10)& (0+255),w,b
 37285   01637C  1171               	iorwf	(??_dir_next+11)& (0+255),w,b
 37286   01637E  A4D8               	btfss	status,2,c
 37287   016380  EFC4  F0B1         	goto	u29021
 37288   016384  EFC6  F0B1         	goto	u29020
 37289   016388                     u29021:
 37290   016388  EFBA  F0B2         	goto	l21597
 37291   01638C                     u29020:
 37292   01638C                     
 37293                           ; BSR set to: 6
 37294                           ;../fatfs/ff.c: 1769:     clst = get_fat(&dp->obj, dp->clust);
 37295   01638C  C662  F624         	movff	dir_next@dp,get_fat@obj
 37296   016390  C663  F625         	movff	dir_next@dp+1,get_fat@obj+1
 37297   016394  EE20 F012          	lfsr	2,18
 37298   016398  5162               	movf	dir_next@dp& (0+255),w,b
 37299   01639A  26D9               	addwf	fsr2l,f,c
 37300   01639C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37301   01639E  22DA               	addwfc	fsr2h,f,c
 37302   0163A0  C4DE F626          	movff	postinc2,get_fat@clst
 37303   0163A4  C4DE F627          	movff	postinc2,get_fat@clst+1
 37304   0163A8  C4DE F628          	movff	postinc2,get_fat@clst+2
 37305   0163AC  C4DE F629          	movff	postinc2,get_fat@clst+3
 37306   0163B0  ECF7  F0B4         	call	_get_fat	;wreg free
 37307   0163B4  C624  F678         	movff	?_get_fat,dir_next@clst
 37308   0163B8  C625  F679         	movff	?_get_fat+1,dir_next@clst+1
 37309   0163BC  C626  F67A         	movff	?_get_fat+2,dir_next@clst+2
 37310   0163C0  C627  F67B         	movff	?_get_fat+3,dir_next@clst+3
 37311   0163C4                     
 37312                           ;../fatfs/ff.c: 1770:     if (clst <= 1) return FR_INT_ERR;
 37313   0163C4  0106               	movlb	6	; () banked
 37314   0163C6  517B               	movf	(dir_next@clst+3)& (0+255),w,b
 37315   0163C8  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 37316   0163CA  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 37317   0163CC  E107               	bnz	u29031
 37318   0163CE  0E02               	movlw	2
 37319   0163D0  5D78               	subwf	dir_next@clst& (0+255),w,b
 37320   0163D2  B0D8               	btfsc	status,0,c
 37321   0163D4  EFEE  F0B1         	goto	u29031
 37322   0163D8  EFF0  F0B1         	goto	u29030
 37323   0163DC                     u29031:
 37324   0163DC  EFF3  F0B1         	goto	l21551
 37325   0163E0                     u29030:
 37326   0163E0                     l21547:
 37327                           
 37328                           ; BSR set to: 6
 37329   0163E0  0E02               	movlw	2
 37330   0163E2  EFE3  F0B2         	goto	l373
 37331   0163E6                     l21551:
 37332                           
 37333                           ; BSR set to: 6
 37334                           ;../fatfs/ff.c: 1771:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 37335   0163E6  2978               	incf	dir_next@clst& (0+255),w,b
 37336   0163E8  E10A               	bnz	u29041
 37337   0163EA  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 37338   0163EC  E108               	bnz	u29041
 37339   0163EE  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 37340   0163F0  E106               	bnz	u29041
 37341   0163F2  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 37342   0163F4  A4D8               	btfss	status,2,c
 37343   0163F6  EFFF  F0B1         	goto	u29041
 37344   0163FA  EF01  F0B2         	goto	u29040
 37345   0163FE                     u29041:
 37346   0163FE  EF04  F0B2         	goto	l21557
 37347   016402                     u29040:
 37348   016402                     l21553:
 37349   016402  0E01               	movlw	1
 37350   016404  EFE3  F0B2         	goto	l373
 37351   016408                     l21557:
 37352                           
 37353                           ; BSR set to: 6
 37354                           ;../fatfs/ff.c: 1772:     if (clst >= fs->n_fatent) {
 37355   016408  EE20 F018          	lfsr	2,24
 37356   01640C  5176               	movf	dir_next@fs& (0+255),w,b
 37357   01640E  26D9               	addwf	fsr2l,f,c
 37358   016410  5177               	movf	(dir_next@fs+1)& (0+255),w,b
 37359   016412  22DA               	addwfc	fsr2h,f,c
 37360   016414  50DE               	movf	postinc2,w,c
 37361   016416  5D78               	subwf	dir_next@clst& (0+255),w,b
 37362   016418  50DE               	movf	postinc2,w,c
 37363   01641A  5979               	subwfb	(dir_next@clst+1)& (0+255),w,b
 37364   01641C  50DE               	movf	postinc2,w,c
 37365   01641E  597A               	subwfb	(dir_next@clst+2)& (0+255),w,b
 37366   016420  50DE               	movf	postinc2,w,c
 37367   016422  597B               	subwfb	(dir_next@clst+3)& (0+255),w,b
 37368   016424  A0D8               	btfss	status,0,c
 37369   016426  EF17  F0B2         	goto	u29051
 37370   01642A  EF19  F0B2         	goto	u29050
 37371   01642E                     u29051:
 37372   01642E  EF8E  F0B2         	goto	l381
 37373   016432                     u29050:
 37374   016432                     
 37375                           ; BSR set to: 6
 37376                           ;../fatfs/ff.c: 1774:      if (!stretch) {
 37377   016432  5164               	movf	dir_next@stretch& (0+255),w,b
 37378   016434  1165               	iorwf	(dir_next@stretch+1)& (0+255),w,b
 37379   016436  A4D8               	btfss	status,2,c
 37380   016438  EF20  F0B2         	goto	u29061
 37381   01643C  EF22  F0B2         	goto	u29060
 37382   016440                     u29061:
 37383   016440  EF2E  F0B2         	goto	l21567
 37384   016444                     u29060:
 37385   016444                     
 37386                           ; BSR set to: 6
 37387                           ;../fatfs/ff.c: 1775:       dp->sect = 0; return FR_NO_FILE;
 37388   016444  EE20 F016          	lfsr	2,22
 37389   016448  5162               	movf	dir_next@dp& (0+255),w,b
 37390   01644A  26D9               	addwf	fsr2l,f,c
 37391   01644C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37392   01644E  22DA               	addwfc	fsr2h,f,c
 37393   016450  6ADE               	clrf	postinc2,c
 37394   016452  6ADE               	clrf	postinc2,c
 37395   016454  6ADE               	clrf	postinc2,c
 37396   016456  6ADD               	clrf	postdec2,c
 37397   016458  EF18  F0B1         	goto	l21525
 37398   01645C                     l21567:
 37399                           
 37400                           ; BSR set to: 6
 37401                           ;../fatfs/ff.c: 1777:      clst = create_chain(&dp->obj, dp->clust);
 37402   01645C  C662  F645         	movff	dir_next@dp,create_chain@obj
 37403   016460  C663  F646         	movff	dir_next@dp+1,create_chain@obj+1
 37404   016464  EE20 F012          	lfsr	2,18
 37405   016468  5162               	movf	dir_next@dp& (0+255),w,b
 37406   01646A  26D9               	addwf	fsr2l,f,c
 37407   01646C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37408   01646E  22DA               	addwfc	fsr2h,f,c
 37409   016470  C4DE F647          	movff	postinc2,create_chain@clst
 37410   016474  C4DE F648          	movff	postinc2,create_chain@clst+1
 37411   016478  C4DE F649          	movff	postinc2,create_chain@clst+2
 37412   01647C  C4DE F64A          	movff	postinc2,create_chain@clst+3
 37413   016480  EC7C  F09D         	call	_create_chain	;wreg free
 37414   016484  C645  F678         	movff	?_create_chain,dir_next@clst
 37415   016488  C646  F679         	movff	?_create_chain+1,dir_next@clst+1
 37416   01648C  C647  F67A         	movff	?_create_chain+2,dir_next@clst+2
 37417   016490  C648  F67B         	movff	?_create_chain+3,dir_next@clst+3
 37418   016494                     
 37419                           ;../fatfs/ff.c: 1778:      if (clst == 0) return FR_DENIED;
 37420   016494  0106               	movlb	6	; () banked
 37421   016496  5178               	movf	dir_next@clst& (0+255),w,b
 37422   016498  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 37423   01649A  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 37424   01649C  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 37425   01649E  A4D8               	btfss	status,2,c
 37426   0164A0  EF54  F0B2         	goto	u29071
 37427   0164A4  EF56  F0B2         	goto	u29070
 37428   0164A8                     u29071:
 37429   0164A8  EF59  F0B2         	goto	l21575
 37430   0164AC                     u29070:
 37431   0164AC                     
 37432                           ; BSR set to: 6
 37433   0164AC  0E07               	movlw	7
 37434   0164AE  EFE3  F0B2         	goto	l373
 37435   0164B2                     l21575:
 37436                           
 37437                           ; BSR set to: 6
 37438                           ;../fatfs/ff.c: 1779:      if (clst == 1) return FR_INT_ERR;
 37439   0164B2  0578               	decf	dir_next@clst& (0+255),w,b
 37440   0164B4  1179               	iorwf	(dir_next@clst+1)& (0+255),w,b
 37441   0164B6  117A               	iorwf	(dir_next@clst+2)& (0+255),w,b
 37442   0164B8  117B               	iorwf	(dir_next@clst+3)& (0+255),w,b
 37443   0164BA  A4D8               	btfss	status,2,c
 37444   0164BC  EF62  F0B2         	goto	u29081
 37445   0164C0  EF64  F0B2         	goto	u29080
 37446   0164C4                     u29081:
 37447   0164C4  EF66  F0B2         	goto	l21581
 37448   0164C8                     u29080:
 37449   0164C8  EFF0  F0B1         	goto	l21547
 37450   0164CC                     l21581:
 37451                           
 37452                           ; BSR set to: 6
 37453                           ;../fatfs/ff.c: 1780:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 37454   0164CC  2978               	incf	dir_next@clst& (0+255),w,b
 37455   0164CE  E10A               	bnz	u29091
 37456   0164D0  2979               	incf	(dir_next@clst+1)& (0+255),w,b
 37457   0164D2  E108               	bnz	u29091
 37458   0164D4  297A               	incf	(dir_next@clst+2)& (0+255),w,b
 37459   0164D6  E106               	bnz	u29091
 37460   0164D8  297B               	incf	(dir_next@clst+3)& (0+255),w,b
 37461   0164DA  A4D8               	btfss	status,2,c
 37462   0164DC  EF72  F0B2         	goto	u29091
 37463   0164E0  EF74  F0B2         	goto	u29090
 37464   0164E4                     u29091:
 37465   0164E4  EF76  F0B2         	goto	l21587
 37466   0164E8                     u29090:
 37467   0164E8  EF01  F0B2         	goto	l21553
 37468   0164EC                     l21587:
 37469                           
 37470                           ; BSR set to: 6
 37471                           ;../fatfs/ff.c: 1781:      if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
 37472   0164EC  C676  F61A         	movff	dir_next@fs,dir_clear@fs
 37473   0164F0  C677  F61B         	movff	dir_next@fs+1,dir_clear@fs+1
 37474   0164F4  C678  F61C         	movff	dir_next@clst,dir_clear@clst
 37475   0164F8  C679  F61D         	movff	dir_next@clst+1,dir_clear@clst+1
 37476   0164FC  C67A  F61E         	movff	dir_next@clst+2,dir_clear@clst+2
 37477   016500  C67B  F61F         	movff	dir_next@clst+3,dir_clear@clst+3
 37478   016504  EC0C  F0E4         	call	_dir_clear	;wreg free
 37479   016508  0900               	iorlw	0
 37480   01650A  B4D8               	btfsc	status,2,c
 37481   01650C  EF8A  F0B2         	goto	u29101
 37482   016510  EF8C  F0B2         	goto	u29100
 37483   016514                     u29101:
 37484   016514  EF8E  F0B2         	goto	l381
 37485   016518                     u29100:
 37486   016518  EF01  F0B2         	goto	l21553
 37487   01651C                     l381:
 37488                           
 37489                           ;../fatfs/ff.c: 1788:     dp->clust = clst;
 37490   01651C  0106               	movlb	6	; () banked
 37491   01651E  EE20 F012          	lfsr	2,18
 37492   016522  5162               	movf	dir_next@dp& (0+255),w,b
 37493   016524  26D9               	addwf	fsr2l,f,c
 37494   016526  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37495   016528  22DA               	addwfc	fsr2h,f,c
 37496   01652A  C678  F4DE         	movff	dir_next@clst,postinc2
 37497   01652E  C679  F4DE         	movff	dir_next@clst+1,postinc2
 37498   016532  C67A  F4DE         	movff	dir_next@clst+2,postinc2
 37499   016536  C67B  F4DE         	movff	dir_next@clst+3,postinc2
 37500   01653A                     
 37501                           ; BSR set to: 6
 37502                           ;../fatfs/ff.c: 1789:     dp->sect = clst2sect(fs, clst);
 37503   01653A  C676  F510         	movff	dir_next@fs,clst2sect@fs
 37504   01653E  C677  F511         	movff	dir_next@fs+1,clst2sect@fs+1
 37505   016542  C678  F512         	movff	dir_next@clst,clst2sect@clst
 37506   016546  C679  F513         	movff	dir_next@clst+1,clst2sect@clst+1
 37507   01654A  C67A  F514         	movff	dir_next@clst+2,clst2sect@clst+2
 37508   01654E  C67B  F515         	movff	dir_next@clst+3,clst2sect@clst+3
 37509   016552  EC7A  F0F0         	call	_clst2sect	;wreg free
 37510   016556  0106               	movlb	6	; () banked
 37511   016558  EE20 F016          	lfsr	2,22
 37512   01655C  5162               	movf	dir_next@dp& (0+255),w,b
 37513   01655E  26D9               	addwf	fsr2l,f,c
 37514   016560  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37515   016562  22DA               	addwfc	fsr2h,f,c
 37516   016564  C510  F4DE         	movff	?_clst2sect,postinc2
 37517   016568  C511  F4DE         	movff	?_clst2sect+1,postinc2
 37518   01656C  C512  F4DE         	movff	?_clst2sect+2,postinc2
 37519   016570  C513  F4DE         	movff	?_clst2sect+3,postinc2
 37520   016574                     l21597:
 37521                           
 37522                           ; BSR set to: 6
 37523                           ;../fatfs/ff.c: 1793:  dp->dptr = ofs;
 37524   016574  EE20 F00E          	lfsr	2,14
 37525   016578  5162               	movf	dir_next@dp& (0+255),w,b
 37526   01657A  26D9               	addwf	fsr2l,f,c
 37527   01657C  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37528   01657E  22DA               	addwfc	fsr2h,f,c
 37529   016580  C672  F4DE         	movff	dir_next@ofs,postinc2
 37530   016584  C673  F4DE         	movff	dir_next@ofs+1,postinc2
 37531   016588  C674  F4DE         	movff	dir_next@ofs+2,postinc2
 37532   01658C  C675  F4DE         	movff	dir_next@ofs+3,postinc2
 37533   016590                     
 37534                           ; BSR set to: 6
 37535                           ;../fatfs/ff.c: 1794:  dp->dir = fs->win + ofs % ((UINT)512);
 37536   016590  0EFF               	movlw	255
 37537   016592  1572               	andwf	dir_next@ofs& (0+255),w,b
 37538   016594  6F66               	movwf	??_dir_next& (0+255),b
 37539   016596  0E01               	movlw	1
 37540   016598  1573               	andwf	(dir_next@ofs+1)& (0+255),w,b
 37541   01659A  6F67               	movwf	(??_dir_next+1)& (0+255),b
 37542   01659C  5166               	movf	??_dir_next& (0+255),w,b
 37543   01659E  2576               	addwf	dir_next@fs& (0+255),w,b
 37544   0165A0  6F68               	movwf	(??_dir_next+2)& (0+255),b
 37545   0165A2  5167               	movf	(??_dir_next+1)& (0+255),w,b
 37546   0165A4  2177               	addwfc	(dir_next@fs+1)& (0+255),w,b
 37547   0165A6  6F69               	movwf	(??_dir_next+3)& (0+255),b
 37548   0165A8  0E34               	movlw	52
 37549   0165AA  2768               	addwf	(??_dir_next+2)& (0+255),f,b
 37550   0165AC  0E00               	movlw	0
 37551   0165AE  2369               	addwfc	(??_dir_next+3)& (0+255),f,b
 37552   0165B0  EE20 F01A          	lfsr	2,26
 37553   0165B4  5162               	movf	dir_next@dp& (0+255),w,b
 37554   0165B6  26D9               	addwf	fsr2l,f,c
 37555   0165B8  5163               	movf	(dir_next@dp+1)& (0+255),w,b
 37556   0165BA  22DA               	addwfc	fsr2h,f,c
 37557   0165BC  C668  F4DE         	movff	??_dir_next+2,postinc2
 37558   0165C0  C669  F4DD         	movff	??_dir_next+3,postdec2
 37559   0165C4                     
 37560                           ; BSR set to: 6
 37561                           ;../fatfs/ff.c: 1796:  return FR_OK;
 37562   0165C4  0E00               	movlw	0
 37563   0165C6                     l373:
 37564   0165C6  0012               	return		;funcret
 37565   0165C8                     __end_of_dir_next:
 37566                           	callstack 0
 37567                           
 37568 ;; *************** function _dir_clear *****************
 37569 ;; Defined at:
 37570 ;;		line 1659 in file "../fatfs/ff.c"
 37571 ;; Parameters:    Size  Location     Type
 37572 ;;  fs              2   26[BANK6 ] PTR struct .
 37573 ;;		 -> fs(564), NULL(0), 
 37574 ;;  clst            4   28[BANK6 ] unsigned long 
 37575 ;; Auto vars:     Size  Location     Type
 37576 ;;  sect            4   34[BANK6 ] unsigned long 
 37577 ;;  n               2   40[BANK6 ] unsigned int 
 37578 ;;  szb             2   38[BANK6 ] unsigned int 
 37579 ;;  ibuf            2   32[BANK6 ] PTR unsigned char 
 37580 ;;		 -> fs$win(512), fs(564), NULL(0), 
 37581 ;; Return value:  Size  Location     Type
 37582 ;;                  1    wreg      enum E597
 37583 ;; Registers used:
 37584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37585 ;; Tracked objects:
 37586 ;;		On entry : 0/0
 37587 ;;		On exit  : 0/0
 37588 ;;		Unchanged: 0/0
 37589 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37590 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37591 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37593 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37594 ;;Total ram usage:       18 bytes
 37595 ;; Hardware stack levels used: 1
 37596 ;; Hardware stack levels required when called: 13
 37597 ;; This function calls:
 37598 ;;		_clst2sect
 37599 ;;		_disk_write
 37600 ;;		_memset
 37601 ;;		_sync_window
 37602 ;; This function is called by:
 37603 ;;		_dir_next
 37604 ;;		_f_mkdir
 37605 ;; This function uses a non-reentrant model
 37606 ;;
 37607                           
 37608                           	psect	text91
 37609   01C818                     __ptext91:
 37610                           	callstack 0
 37611   01C818                     _dir_clear:
 37612                           	callstack 103
 37613   01C818                     
 37614                           ;../fatfs/ff.c: 1660:  FATFS *fs,;../fatfs/ff.c: 1661:  DWORD clst;../fatfs/ff.c: 1663: 
      +                          {;../fatfs/ff.c: 1664:  LBA_t sect;;../fatfs/ff.c: 1665:  UINT n, szb;;../fatfs/ff.c: 16
      +                          66:  BYTE *ibuf;;../fatfs/ff.c: 1669:  if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 37615   01C818  C61A  F608         	movff	dir_clear@fs,sync_window@fs
 37616   01C81C  C61B  F609         	movff	dir_clear@fs+1,sync_window@fs+1
 37617   01C820  EC26  F0DB         	call	_sync_window	;wreg free
 37618   01C824  0900               	iorlw	0
 37619   01C826  B4D8               	btfsc	status,2,c
 37620   01C828  EF18  F0E4         	goto	u28531
 37621   01C82C  EF1A  F0E4         	goto	u28530
 37622   01C830                     u28531:
 37623   01C830  EF1D  F0E4         	goto	l21293
 37624   01C834                     u28530:
 37625   01C834  0E01               	movlw	1
 37626   01C836  EFB3  F0E4         	goto	l332
 37627   01C83A                     l21293:
 37628                           
 37629                           ;../fatfs/ff.c: 1670:  sect = clst2sect(fs, clst);
 37630   01C83A  C61A  F510         	movff	dir_clear@fs,clst2sect@fs
 37631   01C83E  C61B  F511         	movff	dir_clear@fs+1,clst2sect@fs+1
 37632   01C842  C61C  F512         	movff	dir_clear@clst,clst2sect@clst
 37633   01C846  C61D  F513         	movff	dir_clear@clst+1,clst2sect@clst+1
 37634   01C84A  C61E  F514         	movff	dir_clear@clst+2,clst2sect@clst+2
 37635   01C84E  C61F  F515         	movff	dir_clear@clst+3,clst2sect@clst+3
 37636   01C852  EC7A  F0F0         	call	_clst2sect	;wreg free
 37637   01C856  C510  F622         	movff	?_clst2sect,dir_clear@sect
 37638   01C85A  C511  F623         	movff	?_clst2sect+1,dir_clear@sect+1
 37639   01C85E  C512  F624         	movff	?_clst2sect+2,dir_clear@sect+2
 37640   01C862  C513  F625         	movff	?_clst2sect+3,dir_clear@sect+3
 37641   01C866                     
 37642                           ;../fatfs/ff.c: 1671:  fs->winsect = sect;
 37643   01C866  0106               	movlb	6	; () banked
 37644   01C868  EE20 F030          	lfsr	2,48
 37645   01C86C  511A               	movf	dir_clear@fs& (0+255),w,b
 37646   01C86E  26D9               	addwf	fsr2l,f,c
 37647   01C870  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 37648   01C872  22DA               	addwfc	fsr2h,f,c
 37649   01C874  C622  F4DE         	movff	dir_clear@sect,postinc2
 37650   01C878  C623  F4DE         	movff	dir_clear@sect+1,postinc2
 37651   01C87C  C624  F4DE         	movff	dir_clear@sect+2,postinc2
 37652   01C880  C625  F4DE         	movff	dir_clear@sect+3,postinc2
 37653   01C884                     
 37654                           ; BSR set to: 6
 37655                           ;../fatfs/ff.c: 1672:  memset(fs->win, 0, sizeof fs->win);
 37656   01C884  0E34               	movlw	52
 37657   01C886  251A               	addwf	dir_clear@fs& (0+255),w,b
 37658   01C888  6E04               	movwf	memset@dest^(0+1280),c
 37659   01C88A  0E00               	movlw	0
 37660   01C88C  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 37661   01C88E  6E05               	movwf	(memset@dest+1)^(0+1280),c
 37662   01C890  0E00               	movlw	0
 37663   01C892  6E07               	movwf	(memset@c+1)^(0+1280),c
 37664   01C894  0E00               	movlw	0
 37665   01C896  6E06               	movwf	memset@c^(0+1280),c
 37666   01C898  0E02               	movlw	2
 37667   01C89A  6E09               	movwf	(memset@n+1)^(0+1280),c
 37668   01C89C  0E00               	movlw	0
 37669   01C89E  6E08               	movwf	memset@n^(0+1280),c
 37670   01C8A0  EC14  F0FF         	call	_memset	;wreg free
 37671   01C8A4                     
 37672                           ;../fatfs/ff.c: 1683:  {;../fatfs/ff.c: 1684:   ibuf = fs->win; szb = 1;
 37673   01C8A4  0E34               	movlw	52
 37674   01C8A6  0106               	movlb	6	; () banked
 37675   01C8A8  251A               	addwf	dir_clear@fs& (0+255),w,b
 37676   01C8AA  6F20               	movwf	dir_clear@ibuf& (0+255),b
 37677   01C8AC  0E00               	movlw	0
 37678   01C8AE  211B               	addwfc	(dir_clear@fs+1)& (0+255),w,b
 37679   01C8B0  6F21               	movwf	(dir_clear@ibuf+1)& (0+255),b
 37680   01C8B2                     
 37681                           ; BSR set to: 6
 37682   01C8B2  0E00               	movlw	0
 37683   01C8B4  6F27               	movwf	(dir_clear@szb+1)& (0+255),b
 37684   01C8B6  0E01               	movlw	1
 37685   01C8B8  6F26               	movwf	dir_clear@szb& (0+255),b
 37686   01C8BA                     
 37687                           ; BSR set to: 6
 37688                           ;../fatfs/ff.c: 1685:   for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n
      +                          , szb) == RES_OK; n += szb) ;
 37689   01C8BA  0E00               	movlw	0
 37690   01C8BC  6F29               	movwf	(dir_clear@n+1)& (0+255),b
 37691   01C8BE  0E00               	movlw	0
 37692   01C8C0  6F28               	movwf	dir_clear@n& (0+255),b
 37693   01C8C2  EF68  F0E4         	goto	l21307
 37694   01C8C6                     l21305:
 37695   01C8C6  0106               	movlb	6	; () banked
 37696   01C8C8  5126               	movf	dir_clear@szb& (0+255),w,b
 37697   01C8CA  2728               	addwf	dir_clear@n& (0+255),f,b
 37698   01C8CC  5127               	movf	(dir_clear@szb+1)& (0+255),w,b
 37699   01C8CE  2329               	addwfc	(dir_clear@n+1)& (0+255),f,b
 37700   01C8D0                     l21307:
 37701                           
 37702                           ; BSR set to: 6
 37703   01C8D0  EE20 F00A          	lfsr	2,10
 37704   01C8D4  511A               	movf	dir_clear@fs& (0+255),w,b
 37705   01C8D6  26D9               	addwf	fsr2l,f,c
 37706   01C8D8  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 37707   01C8DA  22DA               	addwfc	fsr2h,f,c
 37708   01C8DC  50DE               	movf	postinc2,w,c
 37709   01C8DE  5D28               	subwf	dir_clear@n& (0+255),w,b
 37710   01C8E0  50DE               	movf	postinc2,w,c
 37711   01C8E2  5929               	subwfb	(dir_clear@n+1)& (0+255),w,b
 37712   01C8E4  B0D8               	btfsc	status,0,c
 37713   01C8E6  EF77  F0E4         	goto	u28541
 37714   01C8EA  EF79  F0E4         	goto	u28540
 37715   01C8EE                     u28541:
 37716   01C8EE  EF9E  F0E4         	goto	l21311
 37717   01C8F2                     u28540:
 37718   01C8F2                     
 37719                           ; BSR set to: 6
 37720   01C8F2  C620  F600         	movff	dir_clear@ibuf,disk_write@buff
 37721   01C8F6  C621  F601         	movff	dir_clear@ibuf+1,disk_write@buff+1
 37722   01C8FA  5128               	movf	dir_clear@n& (0+255),w,b
 37723   01C8FC  2522               	addwf	dir_clear@sect& (0+255),w,b
 37724   01C8FE  6F02               	movwf	disk_write@sector& (0+255),b
 37725   01C900  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 37726   01C902  2123               	addwfc	(dir_clear@sect+1)& (0+255),w,b
 37727   01C904  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 37728   01C906  0E00               	movlw	0
 37729   01C908  2124               	addwfc	(dir_clear@sect+2)& (0+255),w,b
 37730   01C90A  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 37731   01C90C  0E00               	movlw	0
 37732   01C90E  2125               	addwfc	(dir_clear@sect+3)& (0+255),w,b
 37733   01C910  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 37734   01C912  C626  F606         	movff	dir_clear@szb,disk_write@count
 37735   01C916  C627  F607         	movff	dir_clear@szb+1,disk_write@count+1
 37736   01C91A  EE20 F001          	lfsr	2,1
 37737   01C91E  511A               	movf	dir_clear@fs& (0+255),w,b
 37738   01C920  26D9               	addwf	fsr2l,f,c
 37739   01C922  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 37740   01C924  22DA               	addwfc	fsr2h,f,c
 37741   01C926  50DF               	movf	indf2,w,c
 37742   01C928  EC7E  F0F3         	call	_disk_write
 37743   01C92C  0900               	iorlw	0
 37744   01C92E  B4D8               	btfsc	status,2,c
 37745   01C930  EF9C  F0E4         	goto	u28551
 37746   01C934  EF9E  F0E4         	goto	u28550
 37747   01C938                     u28551:
 37748   01C938  EF63  F0E4         	goto	l21305
 37749   01C93C                     u28550:
 37750   01C93C                     l21311:
 37751                           
 37752                           ;../fatfs/ff.c: 1686:  };../fatfs/ff.c: 1687:  return (n == fs->csize) ? FR_OK : FR_DISK
      +                          _ERR;
 37753   01C93C  0106               	movlb	6	; () banked
 37754   01C93E  EE20 F00A          	lfsr	2,10
 37755   01C942  511A               	movf	dir_clear@fs& (0+255),w,b
 37756   01C944  26D9               	addwf	fsr2l,f,c
 37757   01C946  511B               	movf	(dir_clear@fs+1)& (0+255),w,b
 37758   01C948  22DA               	addwfc	fsr2h,f,c
 37759   01C94A  5128               	movf	dir_clear@n& (0+255),w,b
 37760   01C94C  18DE               	xorwf	postinc2,w,c
 37761   01C94E  E107               	bnz	u28561
 37762   01C950  5129               	movf	(dir_clear@n+1)& (0+255),w,b
 37763   01C952  18DE               	xorwf	postinc2,w,c
 37764   01C954  A4D8               	btfss	status,2,c
 37765   01C956  EFAF  F0E4         	goto	u28561
 37766   01C95A  EFB2  F0E4         	goto	u28560
 37767   01C95E                     u28561:
 37768   01C95E  0E01               	movlw	1
 37769   01C960  EFB3  F0E4         	goto	u28570
 37770   01C964                     u28560:
 37771   01C964  0E00               	movlw	0
 37772   01C966                     u28570:
 37773   01C966                     l332:
 37774   01C966  0012               	return		;funcret
 37775   01C968                     __end_of_dir_clear:
 37776                           	callstack 0
 37777                           
 37778 ;; *************** function _f_close *****************
 37779 ;; Defined at:
 37780 ;;		line 4218 in file "../fatfs/ff.c"
 37781 ;; Parameters:    Size  Location     Type
 37782 ;;  fp              2   47[BANK6 ] PTR struct .
 37783 ;;		 -> in_fl(546), rom_fl(546), 
 37784 ;; Auto vars:     Size  Location     Type
 37785 ;;  fs              2   49[BANK6 ] PTR struct .
 37786 ;;		 -> fs(564), NULL(0), 
 37787 ;;  res             1   51[BANK6 ] enum E597
 37788 ;; Return value:  Size  Location     Type
 37789 ;;                  1    wreg      enum E597
 37790 ;; Registers used:
 37791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37792 ;; Tracked objects:
 37793 ;;		On entry : 0/0
 37794 ;;		On exit  : 0/0
 37795 ;;		Unchanged: 0/0
 37796 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37797 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37798 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37800 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37801 ;;Total ram usage:        5 bytes
 37802 ;; Hardware stack levels used: 1
 37803 ;; Hardware stack levels required when called: 15
 37804 ;; This function calls:
 37805 ;;		_f_sync
 37806 ;;		_validate
 37807 ;; This function is called by:
 37808 ;;		_load_program
 37809 ;;		_load_config
 37810 ;;		_scan_files
 37811 ;;		_scan_files1
 37812 ;;		_see_file
 37813 ;;		_in_file
 37814 ;;		_str_inf
 37815 ;; This function uses a non-reentrant model
 37816 ;;
 37817                           
 37818                           	psect	text92
 37819   01F7B6                     __ptext92:
 37820                           	callstack 0
 37821   01F7B6                     _f_close:
 37822                           	callstack 105
 37823   01F7B6                     
 37824                           ;../fatfs/ff.c: 4219:  FIL* fp;../fatfs/ff.c: 4221: {;../fatfs/ff.c: 4222:  FRESULT res;
      +                          ;../fatfs/ff.c: 4223:  FATFS *fs;;../fatfs/ff.c: 4226:  res = f_sync(fp);
 37825   01F7B6  C62F  F624         	movff	f_close@fp,f_sync@fp
 37826   01F7BA  C630  F625         	movff	f_close@fp+1,f_sync@fp+1
 37827   01F7BE  EC6D  F0CE         	call	_f_sync	;wreg free
 37828   01F7C2  0106               	movlb	6	; () banked
 37829   01F7C4  6F33               	movwf	f_close@res& (0+255),b
 37830   01F7C6                     
 37831                           ; BSR set to: 6
 37832                           ;../fatfs/ff.c: 4227:  if (res == FR_OK)
 37833   01F7C6  5133               	movf	f_close@res& (0+255),w,b
 37834   01F7C8  A4D8               	btfss	status,2,c
 37835   01F7CA  EFE9  F0FB         	goto	u31591
 37836   01F7CE  EFEB  F0FB         	goto	u31590
 37837   01F7D2                     u31591:
 37838   01F7D2  EF06  F0FC         	goto	l741
 37839   01F7D6                     u31590:
 37840   01F7D6                     
 37841                           ; BSR set to: 6
 37842                           ;../fatfs/ff.c: 4229:  {;../fatfs/ff.c: 4230:   res = validate(&fp->obj, &fs);
 37843   01F7D6  C62F  F5BE         	movff	f_close@fp,validate@obj
 37844   01F7DA  C630  F5BF         	movff	f_close@fp+1,validate@obj+1
 37845   01F7DE  0E31               	movlw	low f_close@fs
 37846   01F7E0  0105               	movlb	5	; () banked
 37847   01F7E2  6FC0               	movwf	validate@rfs& (0+255),b
 37848   01F7E4  0E06               	movlw	high f_close@fs
 37849   01F7E6  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 37850   01F7E8  ECA3  F0E9         	call	_validate	;wreg free
 37851   01F7EC  0106               	movlb	6	; () banked
 37852   01F7EE  6F33               	movwf	f_close@res& (0+255),b
 37853   01F7F0                     
 37854                           ; BSR set to: 6
 37855                           ;../fatfs/ff.c: 4231:   if (res == FR_OK) {
 37856   01F7F0  5133               	movf	f_close@res& (0+255),w,b
 37857   01F7F2  A4D8               	btfss	status,2,c
 37858   01F7F4  EFFE  F0FB         	goto	u31601
 37859   01F7F8  EF00  F0FC         	goto	u31600
 37860   01F7FC                     u31601:
 37861   01F7FC  EF06  F0FC         	goto	l741
 37862   01F800                     u31600:
 37863   01F800                     
 37864                           ; BSR set to: 6
 37865                           ;../fatfs/ff.c: 4236:    fp->obj.fs = 0;
 37866   01F800  C62F  F4D9         	movff	f_close@fp,fsr2l
 37867   01F804  C630  F4DA         	movff	f_close@fp+1,fsr2h
 37868   01F808  6ADE               	clrf	postinc2,c
 37869   01F80A  6ADD               	clrf	postdec2,c
 37870   01F80C                     l741:
 37871                           
 37872                           ; BSR set to: 6
 37873   01F80C  0012               	return		;funcret
 37874   01F80E                     __end_of_f_close:
 37875                           	callstack 0
 37876                           
 37877 ;; *************** function _f_sync *****************
 37878 ;; Defined at:
 37879 ;;		line 4137 in file "../fatfs/ff.c"
 37880 ;; Parameters:    Size  Location     Type
 37881 ;;  fp              2   36[BANK6 ] PTR struct .
 37882 ;;		 -> in_fl(546), rom_fl(546), 
 37883 ;; Auto vars:     Size  Location     Type
 37884 ;;  tm              4   38[BANK6 ] unsigned long 
 37885 ;;  fs              2   45[BANK6 ] PTR struct .
 37886 ;;		 -> fs(564), NULL(0), 
 37887 ;;  dir             2   43[BANK6 ] PTR unsigned char 
 37888 ;;		 -> fs(564), NULL(0), 
 37889 ;;  res             1   42[BANK6 ] enum E597
 37890 ;; Return value:  Size  Location     Type
 37891 ;;                  1    wreg      enum E597
 37892 ;; Registers used:
 37893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37894 ;; Tracked objects:
 37895 ;;		On entry : 0/0
 37896 ;;		On exit  : 0/0
 37897 ;;		Unchanged: 0/0
 37898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37899 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37900 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37902 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37903 ;;Total ram usage:       11 bytes
 37904 ;; Hardware stack levels used: 1
 37905 ;; Hardware stack levels required when called: 14
 37906 ;; This function calls:
 37907 ;;		_disk_write
 37908 ;;		_get_fattime
 37909 ;;		_move_window
 37910 ;;		_st_clust
 37911 ;;		_st_dword
 37912 ;;		_st_word
 37913 ;;		_sync_fs
 37914 ;;		_validate
 37915 ;; This function is called by:
 37916 ;;		_f_close
 37917 ;;		_write_sector
 37918 ;; This function uses a non-reentrant model
 37919 ;;
 37920                           
 37921                           	psect	text93
 37922   019CDA                     __ptext93:
 37923                           	callstack 0
 37924   019CDA                     _f_sync:
 37925                           	callstack 107
 37926   019CDA                     
 37927                           ;../fatfs/ff.c: 4138:  FIL* fp;../fatfs/ff.c: 4140: {;../fatfs/ff.c: 4141:  FRESULT res;
      +                          ;../fatfs/ff.c: 4142:  FATFS *fs;;../fatfs/ff.c: 4143:  DWORD tm;;../fatfs/ff.c: 4144:  
      +                          BYTE *dir;;../fatfs/ff.c: 4147:  res = validate(&fp->obj, &fs);
 37928   019CDA  C624  F5BE         	movff	f_sync@fp,validate@obj
 37929   019CDE  C625  F5BF         	movff	f_sync@fp+1,validate@obj+1
 37930   019CE2  0E2D               	movlw	low f_sync@fs
 37931   019CE4  0105               	movlb	5	; () banked
 37932   019CE6  6FC0               	movwf	validate@rfs& (0+255),b
 37933   019CE8  0E06               	movlw	high f_sync@fs
 37934   019CEA  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 37935   019CEC  ECA3  F0E9         	call	_validate	;wreg free
 37936   019CF0  0106               	movlb	6	; () banked
 37937   019CF2  6F2A               	movwf	f_sync@res& (0+255),b
 37938   019CF4                     
 37939                           ; BSR set to: 6
 37940                           ;../fatfs/ff.c: 4148:  if (res == FR_OK) {
 37941   019CF4  512A               	movf	f_sync@res& (0+255),w,b
 37942   019CF6  A4D8               	btfss	status,2,c
 37943   019CF8  EF80  F0CE         	goto	u30961
 37944   019CFC  EF82  F0CE         	goto	u30960
 37945   019D00                     u30961:
 37946   019D00  EF76  F0CF         	goto	l22555
 37947   019D04                     u30960:
 37948   019D04                     
 37949                           ; BSR set to: 6
 37950                           ;../fatfs/ff.c: 4149:   if (fp->flag & 0x40) {
 37951   019D04  EE20 F00E          	lfsr	2,14
 37952   019D08  5124               	movf	f_sync@fp& (0+255),w,b
 37953   019D0A  26D9               	addwf	fsr2l,f,c
 37954   019D0C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 37955   019D0E  22DA               	addwfc	fsr2h,f,c
 37956   019D10  ACDF               	btfss	indf2,6,c
 37957   019D12  EF8D  F0CE         	goto	u30971
 37958   019D16  EF8F  F0CE         	goto	u30970
 37959   019D1A                     u30971:
 37960   019D1A  EF76  F0CF         	goto	l22555
 37961   019D1E                     u30970:
 37962   019D1E                     
 37963                           ; BSR set to: 6
 37964                           ;../fatfs/ff.c: 4151:    if (fp->flag & 0x80) {
 37965   019D1E  EE20 F00E          	lfsr	2,14
 37966   019D22  5124               	movf	f_sync@fp& (0+255),w,b
 37967   019D24  26D9               	addwf	fsr2l,f,c
 37968   019D26  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 37969   019D28  22DA               	addwfc	fsr2h,f,c
 37970   019D2A  AEDF               	btfss	indf2,7,c
 37971   019D2C  EF9A  F0CE         	goto	u30981
 37972   019D30  EF9C  F0CE         	goto	u30980
 37973   019D34                     u30981:
 37974   019D34  EFD1  F0CE         	goto	l22535
 37975   019D38                     u30980:
 37976   019D38                     
 37977                           ; BSR set to: 6
 37978                           ;../fatfs/ff.c: 4152:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) retu
      +                          rn FR_DISK_ERR;
 37979   019D38  0E22               	movlw	34
 37980   019D3A  2524               	addwf	f_sync@fp& (0+255),w,b
 37981   019D3C  6F00               	movwf	disk_write@buff& (0+255),b
 37982   019D3E  0E00               	movlw	0
 37983   019D40  2125               	addwfc	(f_sync@fp+1)& (0+255),w,b
 37984   019D42  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 37985   019D44  EE20 F018          	lfsr	2,24
 37986   019D48  5124               	movf	f_sync@fp& (0+255),w,b
 37987   019D4A  26D9               	addwf	fsr2l,f,c
 37988   019D4C  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 37989   019D4E  22DA               	addwfc	fsr2h,f,c
 37990   019D50  C4DE F602          	movff	postinc2,disk_write@sector
 37991   019D54  C4DE F603          	movff	postinc2,disk_write@sector+1
 37992   019D58  C4DE F604          	movff	postinc2,disk_write@sector+2
 37993   019D5C  C4DE F605          	movff	postinc2,disk_write@sector+3
 37994   019D60  0E00               	movlw	0
 37995   019D62  6F07               	movwf	(disk_write@count+1)& (0+255),b
 37996   019D64  0E01               	movlw	1
 37997   019D66  6F06               	movwf	disk_write@count& (0+255),b
 37998   019D68  EE20 F001          	lfsr	2,1
 37999   019D6C  512D               	movf	f_sync@fs& (0+255),w,b
 38000   019D6E  26D9               	addwf	fsr2l,f,c
 38001   019D70  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 38002   019D72  22DA               	addwfc	fsr2h,f,c
 38003   019D74  50DF               	movf	indf2,w,c
 38004   019D76  EC7E  F0F3         	call	_disk_write
 38005   019D7A  0900               	iorlw	0
 38006   019D7C  B4D8               	btfsc	status,2,c
 38007   019D7E  EFC3  F0CE         	goto	u30991
 38008   019D82  EFC5  F0CE         	goto	u30990
 38009   019D86                     u30991:
 38010   019D86  EFC8  F0CE         	goto	l22533
 38011   019D8A                     u30990:
 38012   019D8A  0E01               	movlw	1
 38013   019D8C  EF77  F0CF         	goto	l735
 38014   019D90                     l22533:
 38015                           
 38016                           ;../fatfs/ff.c: 4153:     fp->flag &= (BYTE)~0x80;
 38017   019D90  0106               	movlb	6	; () banked
 38018   019D92  EE20 F00E          	lfsr	2,14
 38019   019D96  5124               	movf	f_sync@fp& (0+255),w,b
 38020   019D98  26D9               	addwf	fsr2l,f,c
 38021   019D9A  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38022   019D9C  22DA               	addwfc	fsr2h,f,c
 38023   019D9E  0E7F               	movlw	127
 38024   019DA0  16DF               	andwf	indf2,f,c
 38025   019DA2                     l22535:
 38026                           
 38027                           ; BSR set to: 6
 38028                           ;../fatfs/ff.c: 4157:    tm = get_fattime();
 38029   019DA2  EC12  F001         	call	_get_fattime	;wreg free
 38030   019DA6  C504  F626         	movff	?_get_fattime,f_sync@tm
 38031   019DAA  C505  F627         	movff	?_get_fattime+1,f_sync@tm+1
 38032   019DAE  C506  F628         	movff	?_get_fattime+2,f_sync@tm+2
 38033   019DB2  C507  F629         	movff	?_get_fattime+3,f_sync@tm+3
 38034   019DB6                     
 38035                           ;../fatfs/ff.c: 4189:    {;../fatfs/ff.c: 4190:     res = move_window(fs, fp->dir_sect);
 38036   019DB6  C62D  F61A         	movff	f_sync@fs,move_window@fs
 38037   019DBA  C62E  F61B         	movff	f_sync@fs+1,move_window@fs+1
 38038   019DBE  0106               	movlb	6	; () banked
 38039   019DC0  EE20 F01C          	lfsr	2,28
 38040   019DC4  5124               	movf	f_sync@fp& (0+255),w,b
 38041   019DC6  26D9               	addwf	fsr2l,f,c
 38042   019DC8  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38043   019DCA  22DA               	addwfc	fsr2h,f,c
 38044   019DCC  C4DE F61C          	movff	postinc2,move_window@sect
 38045   019DD0  C4DE F61D          	movff	postinc2,move_window@sect+1
 38046   019DD4  C4DE F61E          	movff	postinc2,move_window@sect+2
 38047   019DD8  C4DE F61F          	movff	postinc2,move_window@sect+3
 38048   019DDC  ECAB  F0EF         	call	_move_window	;wreg free
 38049   019DE0  0106               	movlb	6	; () banked
 38050   019DE2  6F2A               	movwf	f_sync@res& (0+255),b
 38051   019DE4                     
 38052                           ; BSR set to: 6
 38053                           ;../fatfs/ff.c: 4191:     if (res == FR_OK) {
 38054   019DE4  512A               	movf	f_sync@res& (0+255),w,b
 38055   019DE6  A4D8               	btfss	status,2,c
 38056   019DE8  EFF8  F0CE         	goto	u31001
 38057   019DEC  EFFA  F0CE         	goto	u31000
 38058   019DF0                     u31001:
 38059   019DF0  EF76  F0CF         	goto	l22555
 38060   019DF4                     u31000:
 38061   019DF4                     
 38062                           ; BSR set to: 6
 38063                           ;../fatfs/ff.c: 4192:      dir = fp->dir_ptr;
 38064   019DF4  EE20 F020          	lfsr	2,32
 38065   019DF8  5124               	movf	f_sync@fp& (0+255),w,b
 38066   019DFA  26D9               	addwf	fsr2l,f,c
 38067   019DFC  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38068   019DFE  22DA               	addwfc	fsr2h,f,c
 38069   019E00  C4DE F62B          	movff	postinc2,f_sync@dir
 38070   019E04  C4DD F62C          	movff	postdec2,f_sync@dir+1
 38071                           
 38072                           ;../fatfs/ff.c: 4193:      dir[11] |= 0x20;
 38073   019E08  EE20 F00B          	lfsr	2,11
 38074   019E0C  512B               	movf	f_sync@dir& (0+255),w,b
 38075   019E0E  26D9               	addwf	fsr2l,f,c
 38076   019E10  512C               	movf	(f_sync@dir+1)& (0+255),w,b
 38077   019E12  22DA               	addwfc	fsr2h,f,c
 38078   019E14  0E00               	movlw	0
 38079   019E16  8ADB               	bsf	plusw2,5,c
 38080   019E18                     
 38081                           ; BSR set to: 6
 38082                           ;../fatfs/ff.c: 4194:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 38083   019E18  C624  F4D9         	movff	f_sync@fp,fsr2l
 38084   019E1C  C625  F4DA         	movff	f_sync@fp+1,fsr2h
 38085   019E20  C4DE F508          	movff	postinc2,st_clust@fs
 38086   019E24  C4DD F509          	movff	postdec2,st_clust@fs+1
 38087   019E28  C62B  F50A         	movff	f_sync@dir,st_clust@dir
 38088   019E2C  C62C  F50B         	movff	f_sync@dir+1,st_clust@dir+1
 38089   019E30  EE20 F006          	lfsr	2,6
 38090   019E34  5124               	movf	f_sync@fp& (0+255),w,b
 38091   019E36  26D9               	addwf	fsr2l,f,c
 38092   019E38  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38093   019E3A  22DA               	addwfc	fsr2h,f,c
 38094   019E3C  C4DE F50C          	movff	postinc2,st_clust@cl
 38095   019E40  C4DE F50D          	movff	postinc2,st_clust@cl+1
 38096   019E44  C4DE F50E          	movff	postinc2,st_clust@cl+2
 38097   019E48  C4DE F50F          	movff	postinc2,st_clust@cl+3
 38098   019E4C  EC28  F0FD         	call	_st_clust	;wreg free
 38099   019E50                     
 38100                           ;../fatfs/ff.c: 4195:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 38101   019E50  0E1C               	movlw	28
 38102   019E52  0106               	movlb	6	; () banked
 38103   019E54  252B               	addwf	f_sync@dir& (0+255),w,b
 38104   019E56  6E04               	movwf	st_dword@ptr^(0+1280),c
 38105   019E58  0E00               	movlw	0
 38106   019E5A  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 38107   019E5C  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38108   019E5E  EE20 F00A          	lfsr	2,10
 38109   019E62  5124               	movf	f_sync@fp& (0+255),w,b
 38110   019E64  26D9               	addwf	fsr2l,f,c
 38111   019E66  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38112   019E68  22DA               	addwfc	fsr2h,f,c
 38113   019E6A  C4DE F506          	movff	postinc2,st_dword@val
 38114   019E6E  C4DE F507          	movff	postinc2,st_dword@val+1
 38115   019E72  C4DE F508          	movff	postinc2,st_dword@val+2
 38116   019E76  C4DE F509          	movff	postinc2,st_dword@val+3
 38117   019E7A  ECDD  F0FA         	call	_st_dword	;wreg free
 38118   019E7E                     
 38119                           ;../fatfs/ff.c: 4196:      st_dword(dir + 22, tm);
 38120   019E7E  0E16               	movlw	22
 38121   019E80  0106               	movlb	6	; () banked
 38122   019E82  252B               	addwf	f_sync@dir& (0+255),w,b
 38123   019E84  6E04               	movwf	st_dword@ptr^(0+1280),c
 38124   019E86  0E00               	movlw	0
 38125   019E88  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 38126   019E8A  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38127   019E8C  C626  F506         	movff	f_sync@tm,st_dword@val
 38128   019E90  C627  F507         	movff	f_sync@tm+1,st_dword@val+1
 38129   019E94  C628  F508         	movff	f_sync@tm+2,st_dword@val+2
 38130   019E98  C629  F509         	movff	f_sync@tm+3,st_dword@val+3
 38131   019E9C  ECDD  F0FA         	call	_st_dword	;wreg free
 38132   019EA0                     
 38133                           ;../fatfs/ff.c: 4197:      st_word(dir + 18, 0);
 38134   019EA0  0E12               	movlw	18
 38135   019EA2  0106               	movlb	6	; () banked
 38136   019EA4  252B               	addwf	f_sync@dir& (0+255),w,b
 38137   019EA6  6E04               	movwf	st_word@ptr^(0+1280),c
 38138   019EA8  0E00               	movlw	0
 38139   019EAA  212C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 38140   019EAC  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 38141   019EAE  0E00               	movlw	0
 38142   019EB0  6E07               	movwf	(st_word@val+1)^(0+1280),c
 38143   019EB2  0E00               	movlw	0
 38144   019EB4  6E06               	movwf	st_word@val^(0+1280),c
 38145   019EB6  ECC6  F0FF         	call	_st_word	;wreg free
 38146                           
 38147                           ;../fatfs/ff.c: 4198:      fs->wflag = 1;
 38148   019EBA  0106               	movlb	6	; () banked
 38149   019EBC  EE20 F004          	lfsr	2,4
 38150   019EC0  512D               	movf	f_sync@fs& (0+255),w,b
 38151   019EC2  26D9               	addwf	fsr2l,f,c
 38152   019EC4  512E               	movf	(f_sync@fs+1)& (0+255),w,b
 38153   019EC6  22DA               	addwfc	fsr2h,f,c
 38154   019EC8  0E01               	movlw	1
 38155   019ECA  6EDF               	movwf	indf2,c
 38156   019ECC                     
 38157                           ; BSR set to: 6
 38158                           ;../fatfs/ff.c: 4199:      res = sync_fs(fs);
 38159   019ECC  C62D  F61A         	movff	f_sync@fs,sync_fs@fs
 38160   019ED0  C62E  F61B         	movff	f_sync@fs+1,sync_fs@fs+1
 38161   019ED4  EC78  F0CF         	call	_sync_fs	;wreg free
 38162   019ED8  0106               	movlb	6	; () banked
 38163   019EDA  6F2A               	movwf	f_sync@res& (0+255),b
 38164   019EDC                     
 38165                           ; BSR set to: 6
 38166                           ;../fatfs/ff.c: 4200:      fp->flag &= (BYTE)~0x40;
 38167   019EDC  EE20 F00E          	lfsr	2,14
 38168   019EE0  5124               	movf	f_sync@fp& (0+255),w,b
 38169   019EE2  26D9               	addwf	fsr2l,f,c
 38170   019EE4  5125               	movf	(f_sync@fp+1)& (0+255),w,b
 38171   019EE6  22DA               	addwfc	fsr2h,f,c
 38172   019EE8  0EBF               	movlw	191
 38173   019EEA  16DF               	andwf	indf2,f,c
 38174   019EEC                     l22555:
 38175                           
 38176                           ; BSR set to: 6
 38177                           ;../fatfs/ff.c: 4206:  return res;
 38178   019EEC  512A               	movf	f_sync@res& (0+255),w,b
 38179   019EEE                     l735:
 38180   019EEE  0012               	return		;funcret
 38181   019EF0                     __end_of_f_sync:
 38182                           	callstack 0
 38183                           
 38184 ;; *************** function _sync_fs *****************
 38185 ;; Defined at:
 38186 ;;		line 1109 in file "../fatfs/ff.c"
 38187 ;; Parameters:    Size  Location     Type
 38188 ;;  fs              2   26[BANK6 ] PTR struct .
 38189 ;;		 -> fs(564), NULL(0), 
 38190 ;; Auto vars:     Size  Location     Type
 38191 ;;  res             1  157[BANK5 ] enum E597
 38192 ;; Return value:  Size  Location     Type
 38193 ;;                  1    wreg      enum E597
 38194 ;; Registers used:
 38195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38196 ;; Tracked objects:
 38197 ;;		On entry : 0/0
 38198 ;;		On exit  : 0/0
 38199 ;;		Unchanged: 0/0
 38200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38201 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38203 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38204 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38205 ;;Total ram usage:       11 bytes
 38206 ;; Hardware stack levels used: 1
 38207 ;; Hardware stack levels required when called: 13
 38208 ;; This function calls:
 38209 ;;		_disk_ioctl
 38210 ;;		_disk_write
 38211 ;;		_memset
 38212 ;;		_st_dword
 38213 ;;		_st_word
 38214 ;;		_sync_window
 38215 ;; This function is called by:
 38216 ;;		_f_sync
 38217 ;;		_f_unlink
 38218 ;;		_f_mkdir
 38219 ;;		_f_rename
 38220 ;; This function uses a non-reentrant model
 38221 ;;
 38222                           
 38223                           	psect	text94
 38224   019EF0                     __ptext94:
 38225                           	callstack 0
 38226   019EF0                     _sync_fs:
 38227                           	callstack 107
 38228   019EF0                     
 38229                           ;../fatfs/ff.c: 1110:  FATFS* fs;../fatfs/ff.c: 1112: {;../fatfs/ff.c: 1113:  FRESULT re
      +                          s;;../fatfs/ff.c: 1116:  res = sync_window(fs);
 38230   019EF0  C61A  F608         	movff	sync_fs@fs,sync_window@fs
 38231   019EF4  C61B  F609         	movff	sync_fs@fs+1,sync_window@fs+1
 38232   019EF8  EC26  F0DB         	call	_sync_window	;wreg free
 38233   019EFC  0105               	movlb	5	; () banked
 38234   019EFE  6FFD               	movwf	sync_fs@res& (0+255),b
 38235   019F00                     
 38236                           ; BSR set to: 5
 38237                           ;../fatfs/ff.c: 1117:  if (res == FR_OK) {
 38238   019F00  51FD               	movf	sync_fs@res& (0+255),w,b
 38239   019F02  A4D8               	btfss	status,2,c
 38240   019F04  EF86  F0CF         	goto	u29431
 38241   019F08  EF88  F0CF         	goto	u29430
 38242   019F0C                     u29431:
 38243   019F0C  EF7F  F0D0         	goto	l219
 38244   019F10                     u29430:
 38245   019F10                     
 38246                           ; BSR set to: 5
 38247                           ;../fatfs/ff.c: 1118:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 38248   019F10  C61A  F4D9         	movff	sync_fs@fs,fsr2l
 38249   019F14  C61B  F4DA         	movff	sync_fs@fs+1,fsr2h
 38250   019F18  0E03               	movlw	3
 38251   019F1A  18DE               	xorwf	postinc2,w,c
 38252   019F1C  A4D8               	btfss	status,2,c
 38253   019F1E  EF93  F0CF         	goto	u29441
 38254   019F22  EF95  F0CF         	goto	u29440
 38255   019F26                     u29441:
 38256   019F26  EF63  F0D0         	goto	l21765
 38257   019F2A                     u29440:
 38258   019F2A                     
 38259                           ; BSR set to: 5
 38260   019F2A  0106               	movlb	6	; () banked
 38261   019F2C  EE20 F005          	lfsr	2,5
 38262   019F30  511A               	movf	sync_fs@fs& (0+255),w,b
 38263   019F32  26D9               	addwf	fsr2l,f,c
 38264   019F34  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38265   019F36  22DA               	addwfc	fsr2h,f,c
 38266   019F38  04DE               	decf	postinc2,w,c
 38267   019F3A  A4D8               	btfss	status,2,c
 38268   019F3C  EFA2  F0CF         	goto	u29451
 38269   019F40  EFA4  F0CF         	goto	u29450
 38270   019F44                     u29451:
 38271   019F44  EF63  F0D0         	goto	l21765
 38272   019F48                     u29450:
 38273   019F48                     
 38274                           ; BSR set to: 6
 38275                           ;../fatfs/ff.c: 1120:    memset(fs->win, 0, sizeof fs->win);
 38276   019F48  0E34               	movlw	52
 38277   019F4A  251A               	addwf	sync_fs@fs& (0+255),w,b
 38278   019F4C  6E04               	movwf	memset@dest^(0+1280),c
 38279   019F4E  0E00               	movlw	0
 38280   019F50  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38281   019F52  6E05               	movwf	(memset@dest+1)^(0+1280),c
 38282   019F54  0E00               	movlw	0
 38283   019F56  6E07               	movwf	(memset@c+1)^(0+1280),c
 38284   019F58  0E00               	movlw	0
 38285   019F5A  6E06               	movwf	memset@c^(0+1280),c
 38286   019F5C  0E02               	movlw	2
 38287   019F5E  6E09               	movwf	(memset@n+1)^(0+1280),c
 38288   019F60  0E00               	movlw	0
 38289   019F62  6E08               	movwf	memset@n^(0+1280),c
 38290   019F64  EC14  F0FF         	call	_memset	;wreg free
 38291                           
 38292                           ;../fatfs/ff.c: 1121:    st_word(fs->win + 510, 0xAA55);
 38293   019F68  0E32               	movlw	50
 38294   019F6A  0106               	movlb	6	; () banked
 38295   019F6C  251A               	addwf	sync_fs@fs& (0+255),w,b
 38296   019F6E  6E04               	movwf	st_word@ptr^(0+1280),c
 38297   019F70  0E02               	movlw	2
 38298   019F72  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38299   019F74  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 38300   019F76  0EAA               	movlw	170
 38301   019F78  6E07               	movwf	(st_word@val+1)^(0+1280),c
 38302   019F7A  0E55               	movlw	85
 38303   019F7C  6E06               	movwf	st_word@val^(0+1280),c
 38304   019F7E  ECC6  F0FF         	call	_st_word	;wreg free
 38305                           
 38306                           ;../fatfs/ff.c: 1122:    st_dword(fs->win + 0, 0x41615252);
 38307   019F82  0E34               	movlw	52
 38308   019F84  0106               	movlb	6	; () banked
 38309   019F86  251A               	addwf	sync_fs@fs& (0+255),w,b
 38310   019F88  6E04               	movwf	st_dword@ptr^(0+1280),c
 38311   019F8A  0E00               	movlw	0
 38312   019F8C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38313   019F8E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38314   019F90  0E52               	movlw	82
 38315   019F92  6E06               	movwf	st_dword@val^(0+1280),c
 38316   019F94  0E52               	movlw	82
 38317   019F96  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 38318   019F98  0E61               	movlw	97
 38319   019F9A  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 38320   019F9C  0E41               	movlw	65
 38321   019F9E  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 38322   019FA0  ECDD  F0FA         	call	_st_dword	;wreg free
 38323                           
 38324                           ;../fatfs/ff.c: 1123:    st_dword(fs->win + 484, 0x61417272);
 38325   019FA4  0E18               	movlw	24
 38326   019FA6  0106               	movlb	6	; () banked
 38327   019FA8  251A               	addwf	sync_fs@fs& (0+255),w,b
 38328   019FAA  6E04               	movwf	st_dword@ptr^(0+1280),c
 38329   019FAC  0E02               	movlw	2
 38330   019FAE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38331   019FB0  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38332   019FB2  0E72               	movlw	114
 38333   019FB4  6E06               	movwf	st_dword@val^(0+1280),c
 38334   019FB6  0E72               	movlw	114
 38335   019FB8  6E07               	movwf	(st_dword@val+1)^(0+1280),c
 38336   019FBA  0E41               	movlw	65
 38337   019FBC  6E08               	movwf	(st_dword@val+2)^(0+1280),c
 38338   019FBE  0E61               	movlw	97
 38339   019FC0  6E09               	movwf	(st_dword@val+3)^(0+1280),c
 38340   019FC2  ECDD  F0FA         	call	_st_dword	;wreg free
 38341                           
 38342                           ;../fatfs/ff.c: 1124:    st_dword(fs->win + 488, fs->free_clst);
 38343   019FC6  0E1C               	movlw	28
 38344   019FC8  0106               	movlb	6	; () banked
 38345   019FCA  251A               	addwf	sync_fs@fs& (0+255),w,b
 38346   019FCC  6E04               	movwf	st_dword@ptr^(0+1280),c
 38347   019FCE  0E02               	movlw	2
 38348   019FD0  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38349   019FD2  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38350   019FD4  EE20 F010          	lfsr	2,16
 38351   019FD8  511A               	movf	sync_fs@fs& (0+255),w,b
 38352   019FDA  26D9               	addwf	fsr2l,f,c
 38353   019FDC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38354   019FDE  22DA               	addwfc	fsr2h,f,c
 38355   019FE0  C4DE F506          	movff	postinc2,st_dword@val
 38356   019FE4  C4DE F507          	movff	postinc2,st_dword@val+1
 38357   019FE8  C4DE F508          	movff	postinc2,st_dword@val+2
 38358   019FEC  C4DE F509          	movff	postinc2,st_dword@val+3
 38359   019FF0  ECDD  F0FA         	call	_st_dword	;wreg free
 38360                           
 38361                           ;../fatfs/ff.c: 1125:    st_dword(fs->win + 492, fs->last_clst);
 38362   019FF4  0E20               	movlw	32
 38363   019FF6  0106               	movlb	6	; () banked
 38364   019FF8  251A               	addwf	sync_fs@fs& (0+255),w,b
 38365   019FFA  6E04               	movwf	st_dword@ptr^(0+1280),c
 38366   019FFC  0E02               	movlw	2
 38367   019FFE  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38368   01A000  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 38369   01A002  EE20 F00C          	lfsr	2,12
 38370   01A006  511A               	movf	sync_fs@fs& (0+255),w,b
 38371   01A008  26D9               	addwf	fsr2l,f,c
 38372   01A00A  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38373   01A00C  22DA               	addwfc	fsr2h,f,c
 38374   01A00E  C4DE F506          	movff	postinc2,st_dword@val
 38375   01A012  C4DE F507          	movff	postinc2,st_dword@val+1
 38376   01A016  C4DE F508          	movff	postinc2,st_dword@val+2
 38377   01A01A  C4DE F509          	movff	postinc2,st_dword@val+3
 38378   01A01E  ECDD  F0FA         	call	_st_dword	;wreg free
 38379   01A022                     
 38380                           ;../fatfs/ff.c: 1126:    fs->winsect = fs->volbase + 1;
 38381   01A022  0106               	movlb	6	; () banked
 38382   01A024  EE20 F020          	lfsr	2,32
 38383   01A028  511A               	movf	sync_fs@fs& (0+255),w,b
 38384   01A02A  26D9               	addwf	fsr2l,f,c
 38385   01A02C  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38386   01A02E  22DA               	addwfc	fsr2h,f,c
 38387   01A030  C4DE F61C          	movff	postinc2,??_sync_fs
 38388   01A034  C4DE F61D          	movff	postinc2,??_sync_fs+1
 38389   01A038  C4DE F61E          	movff	postinc2,??_sync_fs+2
 38390   01A03C  C4DE F61F          	movff	postinc2,??_sync_fs+3
 38391   01A040  0E01               	movlw	1
 38392   01A042  251C               	addwf	??_sync_fs& (0+255),w,b
 38393   01A044  6F20               	movwf	(??_sync_fs+4)& (0+255),b
 38394   01A046  0E00               	movlw	0
 38395   01A048  211D               	addwfc	(??_sync_fs+1)& (0+255),w,b
 38396   01A04A  6F21               	movwf	(??_sync_fs+5)& (0+255),b
 38397   01A04C  0E00               	movlw	0
 38398   01A04E  211E               	addwfc	(??_sync_fs+2)& (0+255),w,b
 38399   01A050  6F22               	movwf	(??_sync_fs+6)& (0+255),b
 38400   01A052  0E00               	movlw	0
 38401   01A054  211F               	addwfc	(??_sync_fs+3)& (0+255),w,b
 38402   01A056  6F23               	movwf	(??_sync_fs+7)& (0+255),b
 38403   01A058  EE20 F030          	lfsr	2,48
 38404   01A05C  511A               	movf	sync_fs@fs& (0+255),w,b
 38405   01A05E  26D9               	addwf	fsr2l,f,c
 38406   01A060  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38407   01A062  22DA               	addwfc	fsr2h,f,c
 38408   01A064  C620  F4DE         	movff	??_sync_fs+4,postinc2
 38409   01A068  C621  F4DE         	movff	??_sync_fs+5,postinc2
 38410   01A06C  C622  F4DE         	movff	??_sync_fs+6,postinc2
 38411   01A070  C623  F4DE         	movff	??_sync_fs+7,postinc2
 38412   01A074                     
 38413                           ; BSR set to: 6
 38414                           ;../fatfs/ff.c: 1127:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 38415   01A074  0E34               	movlw	52
 38416   01A076  251A               	addwf	sync_fs@fs& (0+255),w,b
 38417   01A078  6F00               	movwf	disk_write@buff& (0+255),b
 38418   01A07A  0E00               	movlw	0
 38419   01A07C  211B               	addwfc	(sync_fs@fs+1)& (0+255),w,b
 38420   01A07E  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 38421   01A080  EE20 F030          	lfsr	2,48
 38422   01A084  511A               	movf	sync_fs@fs& (0+255),w,b
 38423   01A086  26D9               	addwf	fsr2l,f,c
 38424   01A088  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38425   01A08A  22DA               	addwfc	fsr2h,f,c
 38426   01A08C  C4DE F602          	movff	postinc2,disk_write@sector
 38427   01A090  C4DE F603          	movff	postinc2,disk_write@sector+1
 38428   01A094  C4DE F604          	movff	postinc2,disk_write@sector+2
 38429   01A098  C4DE F605          	movff	postinc2,disk_write@sector+3
 38430   01A09C  0E00               	movlw	0
 38431   01A09E  6F07               	movwf	(disk_write@count+1)& (0+255),b
 38432   01A0A0  0E01               	movlw	1
 38433   01A0A2  6F06               	movwf	disk_write@count& (0+255),b
 38434   01A0A4  EE20 F001          	lfsr	2,1
 38435   01A0A8  511A               	movf	sync_fs@fs& (0+255),w,b
 38436   01A0AA  26D9               	addwf	fsr2l,f,c
 38437   01A0AC  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38438   01A0AE  22DA               	addwfc	fsr2h,f,c
 38439   01A0B0  50DF               	movf	indf2,w,c
 38440   01A0B2  EC7E  F0F3         	call	_disk_write
 38441                           
 38442                           ;../fatfs/ff.c: 1128:    fs->fsi_flag = 0;
 38443   01A0B6  0106               	movlb	6	; () banked
 38444   01A0B8  EE20 F005          	lfsr	2,5
 38445   01A0BC  511A               	movf	sync_fs@fs& (0+255),w,b
 38446   01A0BE  26D9               	addwf	fsr2l,f,c
 38447   01A0C0  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38448   01A0C2  22DA               	addwfc	fsr2h,f,c
 38449   01A0C4  6ADF               	clrf	indf2,c
 38450   01A0C6                     l21765:
 38451                           
 38452                           ;../fatfs/ff.c: 1131:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
 38453   01A0C6  0E00               	movlw	0
 38454   01A0C8  0105               	movlb	5	; () banked
 38455   01A0CA  6FBD               	movwf	disk_ioctl@cmd& (0+255),b
 38456   01A0CC  0E00               	movlw	0
 38457   01A0CE  6FBE               	movwf	disk_ioctl@buff& (0+255),b
 38458   01A0D0  0E00               	movlw	0
 38459   01A0D2  6FBF               	movwf	(disk_ioctl@buff+1)& (0+255),b
 38460   01A0D4  0106               	movlb	6	; () banked
 38461   01A0D6  EE20 F001          	lfsr	2,1
 38462   01A0DA  511A               	movf	sync_fs@fs& (0+255),w,b
 38463   01A0DC  26D9               	addwf	fsr2l,f,c
 38464   01A0DE  511B               	movf	(sync_fs@fs+1)& (0+255),w,b
 38465   01A0E0  22DA               	addwfc	fsr2h,f,c
 38466   01A0E2  50DF               	movf	indf2,w,c
 38467   01A0E4  EC7A  F0FB         	call	_disk_ioctl
 38468   01A0E8  0900               	iorlw	0
 38469   01A0EA  B4D8               	btfsc	status,2,c
 38470   01A0EC  EF7A  F0D0         	goto	u29461
 38471   01A0F0  EF7C  F0D0         	goto	u29460
 38472   01A0F4                     u29461:
 38473   01A0F4  EF7F  F0D0         	goto	l219
 38474   01A0F8                     u29460:
 38475   01A0F8  0E01               	movlw	1
 38476   01A0FA  0105               	movlb	5	; () banked
 38477   01A0FC  6FFD               	movwf	sync_fs@res& (0+255),b
 38478   01A0FE                     l219:
 38479                           
 38480                           ;../fatfs/ff.c: 1134:  return res;
 38481   01A0FE  0105               	movlb	5	; () banked
 38482   01A100  51FD               	movf	sync_fs@res& (0+255),w,b
 38483   01A102                     
 38484                           ; BSR set to: 5
 38485   01A102  0012               	return		;funcret
 38486   01A104                     __end_of_sync_fs:
 38487                           	callstack 0
 38488                           
 38489 ;; *************** function _memset *****************
 38490 ;; Defined at:
 38491 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memset.c"
 38492 ;; Parameters:    Size  Location     Type
 38493 ;;  dest            2    3[COMRAM] PTR void 
 38494 ;;		 -> djn$fn(12), dir$fn(12), in_fl(546), scan_files1@dir(40), 
 38495 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), f_printf@pb(70), 
 38496 ;;		 -> f_puts@pb(70), f_putc@pb(70), f_rename@djn(40), djo$fn(12), 
 38497 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 38498 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), NULL(0), 
 38499 ;;  c               2    5[COMRAM] int 
 38500 ;;  n               2    7[COMRAM] unsigned int 
 38501 ;; Auto vars:     Size  Location     Type
 38502 ;;  p               2    9[COMRAM] PTR unsigned char 
 38503 ;;		 -> djn$fn(12), dir$fn(12), in_fl(546), scan_files1@dir(40), 
 38504 ;;		 -> scan_files@dir(40), fs(564), rom_fl(546), f_printf@pb(70), 
 38505 ;;		 -> f_puts@pb(70), f_putc@pb(70), f_rename@djn(40), djo$fn(12), 
 38506 ;;		 -> f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), f_stat@dj(40), 
 38507 ;;		 -> f_chdir@dj(40), dj$fn(12), f_open@dj(40), NULL(0), 
 38508 ;; Return value:  Size  Location     Type
 38509 ;;                  2    3[COMRAM] PTR void 
 38510 ;; Registers used:
 38511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38512 ;; Tracked objects:
 38513 ;;		On entry : 0/0
 38514 ;;		On exit  : 0/0
 38515 ;;		Unchanged: 0/0
 38516 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38521 ;;Total ram usage:        8 bytes
 38522 ;; Hardware stack levels used: 1
 38523 ;; Hardware stack levels required when called: 1
 38524 ;; This function calls:
 38525 ;;		Nothing
 38526 ;; This function is called by:
 38527 ;;		_sync_fs
 38528 ;;		_dir_clear
 38529 ;;		_dir_register
 38530 ;;		_create_name
 38531 ;;		_f_open
 38532 ;;		_f_mkdir
 38533 ;;		_putc_init
 38534 ;; This function uses a non-reentrant model
 38535 ;;
 38536                           
 38537                           	psect	text95
 38538   01FE28                     __ptext95:
 38539                           	callstack 0
 38540   01FE28                     _memset:
 38541                           	callstack 118
 38542   01FE28  C504  F50A         	movff	memset@dest,memset@p
 38543   01FE2C  C505  F50B         	movff	memset@dest+1,memset@p+1
 38544   01FE30  EF22  F0FF         	goto	l21035
 38545   01FE34                     l21031:
 38546   01FE34  C50A  F4D9         	movff	memset@p,fsr2l
 38547   01FE38  C50B  F4DA         	movff	memset@p+1,fsr2h
 38548   01FE3C  C506  F4DF         	movff	memset@c,indf2
 38549   01FE40  4A0A               	infsnz	memset@p^(0+1280),f,c
 38550   01FE42  2A0B               	incf	(memset@p+1)^(0+1280),f,c
 38551   01FE44                     l21035:
 38552   01FE44  0608               	decf	memset@n^(0+1280),f,c
 38553   01FE46  A0D8               	btfss	status,0,c
 38554   01FE48  0609               	decf	(memset@n+1)^(0+1280),f,c
 38555   01FE4A  2808               	incf	memset@n^(0+1280),w,c
 38556   01FE4C  E106               	bnz	u28021
 38557   01FE4E  2809               	incf	(memset@n+1)^(0+1280),w,c
 38558   01FE50  A4D8               	btfss	status,2,c
 38559   01FE52  EF2D  F0FF         	goto	u28021
 38560   01FE56  EF2F  F0FF         	goto	u28020
 38561   01FE5A                     u28021:
 38562   01FE5A  EF1A  F0FF         	goto	l21031
 38563   01FE5E                     u28020:
 38564   01FE5E  0012               	return		;funcret
 38565   01FE60                     __end_of_memset:
 38566                           	callstack 0
 38567                           
 38568 ;; *************** function _disk_ioctl *****************
 38569 ;; Defined at:
 38570 ;;		line 149 in file "../drivers/diskio.c"
 38571 ;; Parameters:    Size  Location     Type
 38572 ;;  pdrv            1    wreg     unsigned char 
 38573 ;;  cmd             1   93[BANK5 ] unsigned char 
 38574 ;;  buff            2   94[BANK5 ] PTR void 
 38575 ;;		 -> NULL(0), 
 38576 ;; Auto vars:     Size  Location     Type
 38577 ;;  pdrv            1   96[BANK5 ] unsigned char 
 38578 ;;  res             1   97[BANK5 ] enum E23355
 38579 ;; Return value:  Size  Location     Type
 38580 ;;                  1    wreg      enum E23355
 38581 ;; Registers used:
 38582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38583 ;; Tracked objects:
 38584 ;;		On entry : 0/0
 38585 ;;		On exit  : 0/0
 38586 ;;		Unchanged: 0/0
 38587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38588 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38591 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38592 ;;Total ram usage:        5 bytes
 38593 ;; Hardware stack levels used: 1
 38594 ;; Hardware stack levels required when called: 9
 38595 ;; This function calls:
 38596 ;;		_printf
 38597 ;; This function is called by:
 38598 ;;		_sync_fs
 38599 ;; This function uses a non-reentrant model
 38600 ;;
 38601                           
 38602                           	psect	text96
 38603   01F6F4                     __ptext96:
 38604                           	callstack 0
 38605   01F6F4                     _disk_ioctl:
 38606                           	callstack 110
 38607                           
 38608                           ;incstack = 0
 38609                           ;disk_ioctl@pdrv stored from wreg
 38610   01F6F4  0105               	movlb	5	; () banked
 38611   01F6F6  6FC0               	movwf	disk_ioctl@pdrv& (0+255),b
 38612   01F6F8                     
 38613                           ;../drivers/diskio.c: 149: DRESULT disk_ioctl(BYTE pdrv, BYTE cmd, void* buff);../driver
      +                          s/diskio.c: 150: {;../drivers/diskio.c: 151:     DRESULT res = RES_ERROR;
 38614   01F6F8  0E01               	movlw	1
 38615   01F6FA  0105               	movlb	5	; () banked
 38616   01F6FC  6FC1               	movwf	disk_ioctl@res& (0+255),b
 38617                           
 38618                           ;../drivers/diskio.c: 154:     switch (cmd) {
 38619   01F6FE  EF92  F0FB         	goto	l21383
 38620   01F702                     l92:
 38621                           
 38622                           ; BSR set to: 5
 38623                           ;../drivers/diskio.c: 156:         res = RES_OK;
 38624   01F702  6BC1               	clrf	disk_ioctl@res& (0+255),b
 38625                           
 38626                           ;../drivers/diskio.c: 157:         break;
 38627   01F704  EFA9  F0FB         	goto	l21387
 38628   01F708                     l97:
 38629   01F708                     l21379:
 38630                           
 38631                           ; BSR set to: 5
 38632                           ;../drivers/diskio.c: 163:         printf("disk_ioctl: pdrv=%d, cmd=%d: Not handled.\n\r
      +                          ", pdrv, cmd);
 38633   01F708  0E73               	movlw	low STR_17
 38634   01F70A  6FAD               	movwf	printf@fmt& (0+255),b
 38635   01F70C  0EF4               	movlw	high STR_17
 38636   01F70E  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 38637   01F710  C5C0  F5AF         	movff	disk_ioctl@pdrv,?_printf+2
 38638   01F714  6BB0               	clrf	(?_printf+3)& (0+255),b
 38639   01F716  C5BD  F5B1         	movff	disk_ioctl@cmd,?_printf+4
 38640   01F71A  6BB2               	clrf	(?_printf+5)& (0+255),b
 38641   01F71C  ECDA  F0FF         	call	_printf	;wreg free
 38642                           
 38643                           ;../drivers/diskio.c: 164:         break;
 38644   01F720  EFA9  F0FB         	goto	l21387
 38645   01F724                     l21383:
 38646                           
 38647                           ; BSR set to: 5
 38648   01F724  51BD               	movf	disk_ioctl@cmd& (0+255),w,b
 38649                           
 38650                           ; Switch size 1, requested type "simple"
 38651                           ; Number of cases is 5, Range of values is 0 to 4
 38652                           ; switch strategies available:
 38653                           ; Name         Instructions Cycles
 38654                           ; simple_byte           16     9 (average)
 38655                           ;	Chosen strategy is simple_byte
 38656   01F726  0A00               	xorlw	0	; case 0
 38657   01F728  B4D8               	btfsc	status,2,c
 38658   01F72A  EF81  F0FB         	goto	l92
 38659   01F72E  0A01               	xorlw	1	; case 1
 38660   01F730  B4D8               	btfsc	status,2,c
 38661   01F732  EF84  F0FB         	goto	l97
 38662   01F736  0A03               	xorlw	3	; case 2
 38663   01F738  B4D8               	btfsc	status,2,c
 38664   01F73A  EF84  F0FB         	goto	l21379
 38665   01F73E  0A01               	xorlw	1	; case 3
 38666   01F740  B4D8               	btfsc	status,2,c
 38667   01F742  EF84  F0FB         	goto	l21379
 38668   01F746  0A07               	xorlw	7	; case 4
 38669   01F748  B4D8               	btfsc	status,2,c
 38670   01F74A  EF84  F0FB         	goto	l21379
 38671   01F74E  EF84  F0FB         	goto	l21379
 38672   01F752                     l21387:
 38673                           
 38674                           ;../drivers/diskio.c: 168:     return res;
 38675   01F752  0105               	movlb	5	; () banked
 38676   01F754  51C1               	movf	disk_ioctl@res& (0+255),w,b
 38677   01F756                     
 38678                           ; BSR set to: 5
 38679   01F756  0012               	return		;funcret
 38680   01F758                     __end_of_disk_ioctl:
 38681                           	callstack 0
 38682                           
 38683 ;; *************** function _st_clust *****************
 38684 ;; Defined at:
 38685 ;;		line 1866 in file "../fatfs/ff.c"
 38686 ;; Parameters:    Size  Location     Type
 38687 ;;  fs              2    7[COMRAM] PTR struct .
 38688 ;;		 -> fs(564), NULL(0), 
 38689 ;;  dir             2    9[COMRAM] PTR unsigned char 
 38690 ;;		 -> fs$win(512), fs(564), NULL(0), 
 38691 ;;  cl              4   11[COMRAM] unsigned long 
 38692 ;; Auto vars:     Size  Location     Type
 38693 ;;		None
 38694 ;; Return value:  Size  Location     Type
 38695 ;;                  1    wreg      void 
 38696 ;; Registers used:
 38697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38698 ;; Tracked objects:
 38699 ;;		On entry : 0/0
 38700 ;;		On exit  : 0/0
 38701 ;;		Unchanged: 0/0
 38702 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38703 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38706 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38707 ;;Total ram usage:        9 bytes
 38708 ;; Hardware stack levels used: 1
 38709 ;; Hardware stack levels required when called: 2
 38710 ;; This function calls:
 38711 ;;		_st_word
 38712 ;; This function is called by:
 38713 ;;		_f_open
 38714 ;;		_f_sync
 38715 ;;		_f_mkdir
 38716 ;;		_f_rename
 38717 ;; This function uses a non-reentrant model
 38718 ;;
 38719                           
 38720                           	psect	text97
 38721   01FA50                     __ptext97:
 38722                           	callstack 0
 38723   01FA50                     _st_clust:
 38724                           	callstack 118
 38725   01FA50                     
 38726                           ;../fatfs/ff.c: 1867:  FATFS* fs,;../fatfs/ff.c: 1868:  BYTE* dir,;../fatfs/ff.c: 1869: 
      +                           DWORD cl;../fatfs/ff.c: 1871: {;../fatfs/ff.c: 1872:  st_word(dir + 26, (WORD)cl);
 38727   01FA50  0E1A               	movlw	26
 38728   01FA52  240A               	addwf	st_clust@dir^(0+1280),w,c
 38729   01FA54  6E04               	movwf	st_word@ptr^(0+1280),c
 38730   01FA56  0E00               	movlw	0
 38731   01FA58  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 38732   01FA5A  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 38733   01FA5C  C50C  F506         	movff	st_clust@cl,st_word@val
 38734   01FA60  C50D  F507         	movff	st_clust@cl+1,st_word@val+1
 38735   01FA64  ECC6  F0FF         	call	_st_word	;wreg free
 38736   01FA68                     
 38737                           ;../fatfs/ff.c: 1873:  if (fs->fs_type == 3) {
 38738   01FA68  C508  F4D9         	movff	st_clust@fs,fsr2l
 38739   01FA6C  C509  F4DA         	movff	st_clust@fs+1,fsr2h
 38740   01FA70  0E03               	movlw	3
 38741   01FA72  18DE               	xorwf	postinc2,w,c
 38742   01FA74  A4D8               	btfss	status,2,c
 38743   01FA76  EF3F  F0FD         	goto	u29551
 38744   01FA7A  EF41  F0FD         	goto	u29550
 38745   01FA7E                     u29551:
 38746   01FA7E  EF4D  F0FD         	goto	l408
 38747   01FA82                     u29550:
 38748   01FA82                     
 38749                           ;../fatfs/ff.c: 1874:   st_word(dir + 20, (WORD)(cl >> 16));
 38750   01FA82  0E14               	movlw	20
 38751   01FA84  240A               	addwf	st_clust@dir^(0+1280),w,c
 38752   01FA86  6E04               	movwf	st_word@ptr^(0+1280),c
 38753   01FA88  0E00               	movlw	0
 38754   01FA8A  200B               	addwfc	(st_clust@dir+1)^(0+1280),w,c
 38755   01FA8C  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 38756   01FA8E  C50E  F506         	movff	st_clust@cl+2,st_word@val
 38757   01FA92  C50F  F507         	movff	st_clust@cl+3,st_word@val+1
 38758   01FA96  ECC6  F0FF         	call	_st_word	;wreg free
 38759   01FA9A                     l408:
 38760   01FA9A  0012               	return		;funcret
 38761   01FA9C                     __end_of_st_clust:
 38762                           	callstack 0
 38763                           
 38764 ;; *************** function _get_fattime *****************
 38765 ;; Defined at:
 38766 ;;		line 47 in file "../drivers/diskio.c"
 38767 ;; Parameters:    Size  Location     Type
 38768 ;;		None
 38769 ;; Auto vars:     Size  Location     Type
 38770 ;;		None
 38771 ;; Return value:  Size  Location     Type
 38772 ;;                  4    3[COMRAM] unsigned long 
 38773 ;; Registers used:
 38774 ;;		wreg, status,2
 38775 ;; Tracked objects:
 38776 ;;		On entry : 0/0
 38777 ;;		On exit  : 0/0
 38778 ;;		Unchanged: 0/0
 38779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38784 ;;Total ram usage:        4 bytes
 38785 ;; Hardware stack levels used: 1
 38786 ;; Hardware stack levels required when called: 1
 38787 ;; This function calls:
 38788 ;;		Nothing
 38789 ;; This function is called by:
 38790 ;;		_f_open
 38791 ;;		_f_sync
 38792 ;;		_f_mkdir
 38793 ;; This function uses a non-reentrant model
 38794 ;;
 38795                           
 38796                           	psect	text98
 38797   000224                     __ptext98:
 38798                           	callstack 0
 38799   000224                     _get_fattime:
 38800                           	callstack 119
 38801   000224                     
 38802                           ;../drivers/diskio.c: 50:     return (DWORD)0 << 25 | (DWORD)1 << 21 | (DWORD)1 << 16;
 38803   000224  0E00               	movlw	0
 38804   000226  6E04               	movwf	?_get_fattime^(0+1280),c
 38805   000228  0E00               	movlw	0
 38806   00022A  6E05               	movwf	(?_get_fattime+1)^(0+1280),c
 38807   00022C  0E21               	movlw	33
 38808   00022E  6E06               	movwf	(?_get_fattime+2)^(0+1280),c
 38809   000230  0E00               	movlw	0
 38810   000232  6E07               	movwf	(?_get_fattime+3)^(0+1280),c
 38811   000234  0012               	return		;funcret
 38812   000236                     __end_of_get_fattime:
 38813                           	callstack 0
 38814                           
 38815 ;; *************** function _setup_drive *****************
 38816 ;; Defined at:
 38817 ;;		line 130 in file "../src/io_dos.c"
 38818 ;; Parameters:    Size  Location     Type
 38819 ;;		None
 38820 ;; Auto vars:     Size  Location     Type
 38821 ;;		None
 38822 ;; Return value:  Size  Location     Type
 38823 ;;                  2    3[COMRAM] int 
 38824 ;; Registers used:
 38825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38826 ;; Tracked objects:
 38827 ;;		On entry : 0/0
 38828 ;;		On exit  : 0/0
 38829 ;;		Unchanged: 0/0
 38830 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38835 ;;Total ram usage:        4 bytes
 38836 ;; Hardware stack levels used: 1
 38837 ;; Hardware stack levels required when called: 1
 38838 ;; This function calls:
 38839 ;;		Nothing
 38840 ;; This function is called by:
 38841 ;;		_bus_master_operation
 38842 ;; This function uses a non-reentrant model
 38843 ;;
 38844                           
 38845                           	psect	text99
 38846   01F460                     __ptext99:
 38847                           	callstack 0
 38848   01F460                     _setup_drive:
 38849                           	callstack 121
 38850   01F460                     
 38851                           ;../src/io_dos.c: 131:  req_tbl.CBI_CHR = 0;
 38852   01F460  0107               	movlb	7	; () banked
 38853   01F462  6BD1               	clrf	(_req_tbl+3)& (0+255),b
 38854   01F464                     
 38855                           ; BSR set to: 7
 38856                           ;../src/io_dos.c: 132:  if ( req_tbl.disk_drive >= 16 ) return( -1 );
 38857   01F464  0E0F               	movlw	15
 38858   01F466  65D2               	cpfsgt	(_req_tbl+4)& (0+255),b
 38859   01F468  EF38  F0FA         	goto	u32631
 38860   01F46C  EF3A  F0FA         	goto	u32630
 38861   01F470                     u32631:
 38862   01F470  EF3E  F0FA         	goto	l23505
 38863   01F474                     u32630:
 38864   01F474                     l23503:
 38865                           
 38866                           ; BSR set to: 7
 38867   01F474  6804               	setf	?_setup_drive^(0+1280),c
 38868   01F476  6805               	setf	(?_setup_drive+1)^(0+1280),c
 38869   01F478  EF6A  F0FA         	goto	l1227
 38870   01F47C                     l23505:
 38871                           
 38872                           ; BSR set to: 7
 38873                           ;../src/io_dos.c: 133:  if ( cpm_drives[req_tbl.disk_drive].sectors == 0 ) return( -1 );
 38874   01F47C  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38875   01F47E  0D04               	mullw	4
 38876   01F480  0E4B               	movlw	low _cpm_drives
 38877   01F482  24F3               	addwf	243,w,c
 38878   01F484  6ED9               	movwf	fsr2l,c
 38879   01F486  0E09               	movlw	high _cpm_drives
 38880   01F488  20F4               	addwfc	prodh,w,c
 38881   01F48A  6EDA               	movwf	fsr2h,c
 38882   01F48C  50DE               	movf	postinc2,w,c
 38883   01F48E  10DE               	iorwf	postinc2,w,c
 38884   01F490  A4D8               	btfss	status,2,c
 38885   01F492  EF4D  F0FA         	goto	u32641
 38886   01F496  EF4F  F0FA         	goto	u32640
 38887   01F49A                     u32641:
 38888   01F49A  EF51  F0FA         	goto	l23509
 38889   01F49E                     u32640:
 38890   01F49E  EF3A  F0FA         	goto	l23503
 38891   01F4A2                     l23509:
 38892                           
 38893                           ; BSR set to: 7
 38894                           ;../src/io_dos.c: 134:  if ( req_tbl.disk_sector > cpm_drives[req_tbl.disk_drive].sector
      +                          s ) return( -1 );
 38895   01F4A2  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38896   01F4A4  0D04               	mullw	4
 38897   01F4A6  0E4B               	movlw	low _cpm_drives
 38898   01F4A8  24F3               	addwf	243,w,c
 38899   01F4AA  6ED9               	movwf	fsr2l,c
 38900   01F4AC  0E09               	movlw	high _cpm_drives
 38901   01F4AE  20F4               	addwfc	prodh,w,c
 38902   01F4B0  6EDA               	movwf	fsr2h,c
 38903   01F4B2  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 38904   01F4B4  5CDE               	subwf	postinc2,w,c
 38905   01F4B6  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 38906   01F4B8  58DE               	subwfb	postinc2,w,c
 38907   01F4BA  B0D8               	btfsc	status,0,c
 38908   01F4BC  EF62  F0FA         	goto	u32651
 38909   01F4C0  EF64  F0FA         	goto	u32650
 38910   01F4C4                     u32651:
 38911   01F4C4  EF66  F0FA         	goto	l23513
 38912   01F4C8                     u32650:
 38913   01F4C8  EF3A  F0FA         	goto	l23503
 38914   01F4CC                     l23513:
 38915                           
 38916                           ; BSR set to: 7
 38917                           ;../src/io_dos.c: 135:  return( 0 );
 38918   01F4CC  0E00               	movlw	0
 38919   01F4CE  6E05               	movwf	(?_setup_drive+1)^(0+1280),c
 38920   01F4D0  0E00               	movlw	0
 38921   01F4D2  6E04               	movwf	?_setup_drive^(0+1280),c
 38922   01F4D4                     l1227:
 38923                           
 38924                           ; BSR set to: 7
 38925   01F4D4  0012               	return		;funcret
 38926   01F4D6                     __end_of_setup_drive:
 38927                           	callstack 0
 38928                           
 38929 ;; *************** function _read_sector *****************
 38930 ;; Defined at:
 38931 ;;		line 102 in file "../src/io_dos.c"
 38932 ;; Parameters:    Size  Location     Type
 38933 ;;		None
 38934 ;; Auto vars:     Size  Location     Type
 38935 ;;  n               2  162[BANK6 ] unsigned int 
 38936 ;;  filep           2  159[BANK6 ] PTR struct .
 38937 ;;  fres            1  161[BANK6 ] enum E22894
 38938 ;; Return value:  Size  Location     Type
 38939 ;;                  2  154[BANK6 ] int 
 38940 ;; Registers used:
 38941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38942 ;; Tracked objects:
 38943 ;;		On entry : 0/0
 38944 ;;		On exit  : 0/0
 38945 ;;		Unchanged: 0/0
 38946 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38948 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38949 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38950 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38951 ;;Total ram usage:       10 bytes
 38952 ;; Hardware stack levels used: 1
 38953 ;; Hardware stack levels required when called: 18
 38954 ;; This function calls:
 38955 ;;		_f_read
 38956 ;;		_printf
 38957 ;;		_seek_disk
 38958 ;;		_util_hexdump_sum
 38959 ;;		_write_sram
 38960 ;; This function is called by:
 38961 ;;		_bus_master_operation
 38962 ;; This function uses a non-reentrant model
 38963 ;;
 38964                           
 38965                           	psect	text100
 38966   01C568                     __ptext100:
 38967                           	callstack 0
 38968   01C568                     _read_sector:
 38969                           	callstack 104
 38970   01C568                     
 38971                           ;../src/io_dos.c: 103:  unsigned int n;;../src/io_dos.c: 104:  FRESULT fres;;../src/io_d
      +                          os.c: 105:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 38972   01C568  0107               	movlb	7	; () banked
 38973   01C56A  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 38974   01C56C  0D04               	mullw	4
 38975   01C56E  0E4D               	movlw	low (_cpm_drives+2)
 38976   01C570  24F3               	addwf	243,w,c
 38977   01C572  6ED9               	movwf	fsr2l,c
 38978   01C574  0E09               	movlw	high (_cpm_drives+2)
 38979   01C576  20F4               	addwfc	prodh,w,c
 38980   01C578  6EDA               	movwf	fsr2h,c
 38981   01C57A  C4DE F69F          	movff	postinc2,read_sector@filep
 38982   01C57E  C4DD F6A0          	movff	postdec2,read_sector@filep+1
 38983   01C582                     
 38984                           ; BSR set to: 7
 38985                           ;../src/io_dos.c: 107:  if (seek_disk()) return(-1);
 38986   01C582  ECF4  F0E5         	call	_seek_disk	;wreg free
 38987   01C586  0106               	movlb	6	; () banked
 38988   01C588  518B               	movf	?_seek_disk& (0+255),w,b
 38989   01C58A  118C               	iorwf	(?_seek_disk+1)& (0+255),w,b
 38990   01C58C  B4D8               	btfsc	status,2,c
 38991   01C58E  EFCB  F0E2         	goto	u32561
 38992   01C592  EFCD  F0E2         	goto	u32560
 38993   01C596                     u32561:
 38994   01C596  EFD2  F0E2         	goto	l23473
 38995   01C59A                     u32560:
 38996   01C59A                     l23471:
 38997   01C59A  0106               	movlb	6	; () banked
 38998   01C59C  699A               	setf	?_read_sector& (0+255),b
 38999   01C59E  699B               	setf	(?_read_sector+1)& (0+255),b
 39000   01C5A0  EF62  F0E3         	goto	l1217
 39001   01C5A4                     l23473:
 39002                           
 39003                           ; BSR set to: 6
 39004                           ;../src/io_dos.c: 110:  if ((fres = f_read(filep, disk_buf, 128, &n)) != FR_OK || n != 1
      +                          28) {
 39005   01C5A4  C69F  F63E         	movff	read_sector@filep,f_read@fp
 39006   01C5A8  C6A0  F63F         	movff	read_sector@filep+1,f_read@fp+1
 39007   01C5AC  0E00               	movlw	low _disk_buf
 39008   01C5AE  6F40               	movwf	f_read@buff& (0+255),b
 39009   01C5B0  0E0A               	movlw	high _disk_buf
 39010   01C5B2  6F41               	movwf	(f_read@buff+1)& (0+255),b
 39011   01C5B4  0E00               	movlw	0
 39012   01C5B6  6F43               	movwf	(f_read@btr+1)& (0+255),b
 39013   01C5B8  0E80               	movlw	128
 39014   01C5BA  6F42               	movwf	f_read@btr& (0+255),b
 39015   01C5BC  0EA2               	movlw	low read_sector@n
 39016   01C5BE  6F44               	movwf	f_read@br& (0+255),b
 39017   01C5C0  0E06               	movlw	high read_sector@n
 39018   01C5C2  6F45               	movwf	(f_read@br+1)& (0+255),b
 39019   01C5C4  EC9B  F096         	call	_f_read	;wreg free
 39020   01C5C8  0106               	movlb	6	; () banked
 39021   01C5CA  6FA1               	movwf	read_sector@fres& (0+255),b
 39022   01C5CC  51A1               	movf	read_sector@fres& (0+255),w,b
 39023   01C5CE  A4D8               	btfss	status,2,c
 39024   01C5D0  EFEC  F0E2         	goto	u32571
 39025   01C5D4  EFEE  F0E2         	goto	u32570
 39026   01C5D8                     u32571:
 39027   01C5D8  EFF8  F0E2         	goto	l23477
 39028   01C5DC                     u32570:
 39029   01C5DC                     
 39030                           ; BSR set to: 6
 39031   01C5DC  0E80               	movlw	128
 39032   01C5DE  19A2               	xorwf	read_sector@n& (0+255),w,b
 39033   01C5E0  11A3               	iorwf	(read_sector@n+1)& (0+255),w,b
 39034   01C5E2  B4D8               	btfsc	status,2,c
 39035   01C5E4  EFF6  F0E2         	goto	u32581
 39036   01C5E8  EFF8  F0E2         	goto	u32580
 39037   01C5EC                     u32581:
 39038   01C5EC  EF08  F0E3         	goto	l23485
 39039   01C5F0                     u32580:
 39040   01C5F0                     l23477:
 39041                           
 39042                           ; BSR set to: 6
 39043                           ;../src/io_dos.c: 111:   printf("f_read(): ERROR res=%d, n=%d\n\r", fres, n);
 39044   01C5F0  0ED5               	movlw	low STR_39
 39045   01C5F2  0105               	movlb	5	; () banked
 39046   01C5F4  6FAD               	movwf	printf@fmt& (0+255),b
 39047   01C5F6  0EF8               	movlw	high STR_39
 39048   01C5F8  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39049   01C5FA  C6A1  F5AF         	movff	read_sector@fres,?_printf+2
 39050   01C5FE  6BB0               	clrf	(?_printf+3)& (0+255),b
 39051   01C600  C6A2  F5B1         	movff	read_sector@n,?_printf+4
 39052   01C604  C6A3  F5B2         	movff	read_sector@n+1,?_printf+5
 39053   01C608  ECDA  F0FF         	call	_printf	;wreg free
 39054   01C60C  EFCD  F0E2         	goto	l23471
 39055   01C610                     l23485:
 39056                           
 39057                           ; BSR set to: 6
 39058   01C610  0108               	movlb	8	; () banked
 39059   01C612  5117               	movf	(_debug+1)& (0+255),w,b
 39060   01C614  B4D8               	btfsc	status,2,c
 39061   01C616  EF0F  F0E3         	goto	u32591
 39062   01C61A  EF11  F0E3         	goto	u32590
 39063   01C61E                     u32591:
 39064   01C61E  EF4B  F0E3         	goto	l23493
 39065   01C622                     u32590:
 39066   01C622                     
 39067                           ; BSR set to: 8
 39068   01C622  5119               	movf	(_debug+3)& (0+255),w,b
 39069   01C624  B4D8               	btfsc	status,2,c
 39070   01C626  EF17  F0E3         	goto	u32601
 39071   01C62A  EF19  F0E3         	goto	u32600
 39072   01C62E                     u32601:
 39073   01C62E  EF4B  F0E3         	goto	l23493
 39074   01C632                     u32600:
 39075   01C632                     
 39076                           ; BSR set to: 8
 39077   01C632  C7D2  F69C         	movff	_req_tbl+4,??_read_sector
 39078   01C636  0E01               	movlw	1
 39079   01C638  0106               	movlb	6	; () banked
 39080   01C63A  6F9D               	movwf	(??_read_sector+1)& (0+255),b
 39081   01C63C  0E00               	movlw	0
 39082   01C63E  6F9E               	movwf	(??_read_sector+2)& (0+255),b
 39083   01C640  2B9C               	incf	??_read_sector& (0+255),f,b
 39084   01C642  EF26  F0E3         	goto	u32614
 39085   01C646                     u32615:
 39086   01C646  90D8               	bcf	status,0,c
 39087   01C648  379D               	rlcf	(??_read_sector+1)& (0+255),f,b
 39088   01C64A  379E               	rlcf	(??_read_sector+2)& (0+255),f,b
 39089   01C64C                     u32614:
 39090   01C64C  2F9C               	decfsz	??_read_sector& (0+255),f,b
 39091   01C64E  EF23  F0E3         	goto	u32615
 39092   01C652  0108               	movlb	8	; () banked
 39093   01C654  511A               	movf	(_debug+4)& (0+255),w,b
 39094   01C656  0106               	movlb	6	; () banked
 39095   01C658  179D               	andwf	(??_read_sector+1)& (0+255),f,b
 39096   01C65A  0108               	movlb	8	; () banked
 39097   01C65C  511B               	movf	(_debug+5)& (0+255),w,b
 39098   01C65E  0106               	movlb	6	; () banked
 39099   01C660  179E               	andwf	(??_read_sector+2)& (0+255),f,b
 39100   01C662  519D               	movf	(??_read_sector+1)& (0+255),w,b
 39101   01C664  119E               	iorwf	(??_read_sector+2)& (0+255),w,b
 39102   01C666  A4D8               	btfss	status,2,c
 39103   01C668  EF38  F0E3         	goto	u32621
 39104   01C66C  EF3A  F0E3         	goto	u32620
 39105   01C670                     u32621:
 39106   01C670  EF4B  F0E3         	goto	l23493
 39107   01C674                     u32620:
 39108   01C674                     
 39109                           ; BSR set to: 6
 39110                           ;../src/io_dos.c: 115:   util_hexdump_sum("buf: ", disk_buf, 128);
 39111   01C674  0E91               	movlw	low STR_36
 39112   01C676  0105               	movlb	5	; () banked
 39113   01C678  6FDA               	movwf	util_hexdump_sum@header& (0+255),b
 39114   01C67A  0EFF               	movlw	high STR_36
 39115   01C67C  6FDB               	movwf	(util_hexdump_sum@header+1)& (0+255),b
 39116   01C67E  0E00               	movlw	low _disk_buf
 39117   01C680  6FDC               	movwf	util_hexdump_sum@addr& (0+255),b
 39118   01C682  0E0A               	movlw	high _disk_buf
 39119   01C684  6FDD               	movwf	(util_hexdump_sum@addr+1)& (0+255),b
 39120   01C686  0E00               	movlw	0
 39121   01C688  6FDF               	movwf	(util_hexdump_sum@size+1)& (0+255),b
 39122   01C68A  0E80               	movlw	128
 39123   01C68C  6FDE               	movwf	util_hexdump_sum@size& (0+255),b
 39124   01C68E  ECB8  F0F8         	call	_util_hexdump_sum	;wreg free
 39125                           
 39126                           ;../src/io_dos.c: 116:  }
 39127   01C692  EF5D  F0E3         	goto	l23495
 39128   01C696                     l23493:
 39129                           
 39130                           ;../src/io_dos.c: 119:   write_sram(req_tbl.data_adr, disk_buf, 128);
 39131   01C696  C7D7  F504         	movff	_req_tbl+9,write_sram@addr
 39132   01C69A  C7D8  F505         	movff	_req_tbl+10,write_sram@addr+1
 39133   01C69E  C7D9  F506         	movff	_req_tbl+11,write_sram@addr+2
 39134   01C6A2  C7DA  F507         	movff	_req_tbl+12,write_sram@addr+3
 39135   01C6A6  0E00               	movlw	low _disk_buf
 39136   01C6A8  6E08               	movwf	write_sram@buf^(0+1280),c
 39137   01C6AA  0E0A               	movlw	high _disk_buf
 39138   01C6AC  6E09               	movwf	(write_sram@buf+1)^(0+1280),c
 39139   01C6AE  0E00               	movlw	0
 39140   01C6B0  6E0B               	movwf	(write_sram@len+1)^(0+1280),c
 39141   01C6B2  0E80               	movlw	128
 39142   01C6B4  6E0A               	movwf	write_sram@len^(0+1280),c
 39143   01C6B6  EC9F  F0E8         	call	_write_sram	;wreg free
 39144   01C6BA                     l23495:
 39145                           
 39146                           ;../src/io_dos.c: 127:  return(0);
 39147   01C6BA  0E00               	movlw	0
 39148   01C6BC  0106               	movlb	6	; () banked
 39149   01C6BE  6F9B               	movwf	(?_read_sector+1)& (0+255),b
 39150   01C6C0  0E00               	movlw	0
 39151   01C6C2  6F9A               	movwf	?_read_sector& (0+255),b
 39152   01C6C4                     l1217:
 39153                           
 39154                           ; BSR set to: 6
 39155   01C6C4  0012               	return		;funcret
 39156   01C6C6                     __end_of_read_sector:
 39157                           	callstack 0
 39158                           
 39159 ;; *************** function _write_sram *****************
 39160 ;; Defined at:
 39161 ;;		line 338 in file "../src/boards/w65_cmn.c"
 39162 ;; Parameters:    Size  Location     Type
 39163 ;;  addr            4    3[COMRAM] unsigned long 
 39164 ;;  buf             2    7[COMRAM] PTR unsigned char 
 39165 ;;		 -> rom(16), mon_prog@sw(1), cpu_flg(1), binv(42), 
 39166 ;;		 -> fh(32), tmp_buf(512), disk_buf(128), req_tbl(13), 
 39167 ;;  len             2    9[COMRAM] unsigned int 
 39168 ;; Auto vars:     Size  Location     Type
 39169 ;;  ab              4   15[COMRAM] struct address_bus_u
 39170 ;;  i               2   13[COMRAM] unsigned int 
 39171 ;; Return value:  Size  Location     Type
 39172 ;;                  1    wreg      void 
 39173 ;; Registers used:
 39174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 39175 ;; Tracked objects:
 39176 ;;		On entry : 0/0
 39177 ;;		On exit  : 0/0
 39178 ;;		Unchanged: 0/0
 39179 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39180 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39181 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39183 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39184 ;;Total ram usage:       16 bytes
 39185 ;; Hardware stack levels used: 1
 39186 ;; Hardware stack levels required when called: 1
 39187 ;; This function calls:
 39188 ;;		Nothing
 39189 ;; This function is called by:
 39190 ;;		_read_sector
 39191 ;;		_unimon_console
 39192 ;;		_bus_master_operation
 39193 ;;		_mem_init
 39194 ;;		_setup_monitor
 39195 ;;		_load_program
 39196 ;;		_boot_file
 39197 ;;		_wstart_prog
 39198 ;;		_restart_prog
 39199 ;;		_mon_prog
 39200 ;;		_reset_cpu
 39201 ;; This function uses a non-reentrant model
 39202 ;;
 39203                           
 39204                           	psect	text101
 39205   01D13E                     __ptext101:
 39206                           	callstack 0
 39207   01D13E                     _write_sram:
 39208                           	callstack 124
 39209   01D13E                     
 39210                           ;../src/boards/w65_cmn.c: 338: void write_sram(uint32_t addr, uint8_t *buf, unsigned int
      +                           len);../src/boards/w65_cmn.c: 339: {;../src/boards/w65_cmn.c: 340:     union address_bu
      +                          s_u ab;;../src/boards/w65_cmn.c: 341:     unsigned int i;;../src/boards/w65_cmn.c: 343: 
      +                           ab.w = addr;
 39211   01D13E  C504  F510         	movff	write_sram@addr,write_sram@ab
 39212   01D142  C505  F511         	movff	write_sram@addr+1,write_sram@ab+1
 39213   01D146  C506  F512         	movff	write_sram@addr+2,write_sram@ab+2
 39214   01D14A  C507  F513         	movff	write_sram@addr+3,write_sram@ab+3
 39215   01D14E                     
 39216                           ;../src/boards/w65_cmn.c: 344:  i = 0;
 39217   01D14E  0E00               	movlw	0
 39218   01D150  6E0F               	movwf	(write_sram@i+1)^(0+1280),c
 39219   01D152  0E00               	movlw	0
 39220   01D154  6E0E               	movwf	write_sram@i^(0+1280),c
 39221   01D156                     
 39222                           ;../src/boards/w65_cmn.c: 346:  TRISB = 0x00;
 39223   01D156  6AC7               	clrf	199,c	;volatile
 39224                           
 39225                           ;../src/boards/w65_cmn.c: 347:  if (cpu_flg) {
 39226   01D158  0107               	movlb	7	; () banked
 39227   01D15A  51E5               	movf	_cpu_flg& (0+255),w,b
 39228   01D15C  B4D8               	btfsc	status,2,c
 39229   01D15E  EFB3  F0E8         	goto	u32241
 39230   01D162  EFB5  F0E8         	goto	u32240
 39231   01D166                     u32241:
 39232   01D166  EF14  F0E9         	goto	l23267
 39233   01D16A                     u32240:
 39234   01D16A  EFE1  F0E8         	goto	l23257
 39235   01D16E                     l2165:
 39236                           
 39237                           ;../src/boards/w65_cmn.c: 350:       LATC = ab.ll;
 39238   01D16E  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 39239                           
 39240                           ;../src/boards/w65_cmn.c: 351:    LATD = ab.lh;
 39241   01D172  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 39242                           
 39243                           ;../src/boards/w65_cmn.c: 353:       LATB = ab.hl;
 39244   01D176  C512  F4BF         	movff	write_sram@ab+2,1215	;volatile
 39245                           
 39246                           ;../src/boards/w65_cmn.c: 354:    LATA1 = 1;
 39247   01D17A  82BE               	bsf	1214,1,c	;volatile
 39248                           
 39249                           ;../src/boards/w65_cmn.c: 355:    LATA1 = 0;
 39250   01D17C  92BE               	bcf	1214,1,c	;volatile
 39251                           
 39252                           ;../src/boards/w65_cmn.c: 357:          LATA4 = 0;
 39253   01D17E  98BE               	bcf	1214,4,c	;volatile
 39254   01D180                     
 39255                           ;../src/boards/w65_cmn.c: 358:          LATB = ((uint8_t*)buf)[i];
 39256   01D180  500E               	movf	write_sram@i^(0+1280),w,c
 39257   01D182  2408               	addwf	write_sram@buf^(0+1280),w,c
 39258   01D184  6E0C               	movwf	??_write_sram^(0+1280),c
 39259   01D186  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 39260   01D188  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 39261   01D18A  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 39262   01D18C  C50C  F4F6         	movff	??_write_sram,tblptrl
 39263   01D190  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 39264   01D194  0E00               	movlw	low (__mediumconst shr (0+16))
 39265   01D196  6EF8               	movwf	tblptru,c
 39266   01D198  0E3F               	movlw	(high __ramtop+-1)
 39267   01D19A  64F7               	cpfsgt	tblptrh,c
 39268   01D19C  D003               	bra	u32257
 39269   01D19E  0008               	tblrd		*
 39270   01D1A0  50F5               	movf	tablat,w,c
 39271   01D1A2  D005               	bra	u32250
 39272   01D1A4                     u32257:
 39273   01D1A4  C4F6 F4E9          	movff	tblptrl,fsr0l
 39274   01D1A8  C4F7 F4EA          	movff	tblptrh,fsr0h
 39275   01D1AC  50EF               	movf	indf0,w,c
 39276   01D1AE                     u32250:
 39277   01D1AE  6EBF               	movwf	191,c	;volatile
 39278   01D1B0                     
 39279                           ;../src/boards/w65_cmn.c: 359:          LATA4 = 1;
 39280   01D1B0  88BE               	bsf	1214,4,c	;volatile
 39281   01D1B2                     
 39282                           ;../src/boards/w65_cmn.c: 361:    i++;
 39283   01D1B2  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 39284   01D1B4  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 39285   01D1B6                     
 39286                           ;../src/boards/w65_cmn.c: 362:    ab.w++;
 39287   01D1B6  0E01               	movlw	1
 39288   01D1B8  2610               	addwf	write_sram@ab^(0+1280),f,c
 39289   01D1BA  0E00               	movlw	0
 39290   01D1BC  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 39291   01D1BE  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 39292   01D1C0  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 39293   01D1C2                     l23257:
 39294                           
 39295                           ;../src/boards/w65_cmn.c: 349:   while( i < len ) {
 39296   01D1C2  500A               	movf	write_sram@len^(0+1280),w,c
 39297   01D1C4  5C0E               	subwf	write_sram@i^(0+1280),w,c
 39298   01D1C6  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 39299   01D1C8  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 39300   01D1CA  A0D8               	btfss	status,0,c
 39301   01D1CC  EFEA  F0E8         	goto	u32261
 39302   01D1D0  EFEC  F0E8         	goto	u32260
 39303   01D1D4                     u32261:
 39304   01D1D4  EFB7  F0E8         	goto	l2165
 39305   01D1D8                     u32260:
 39306   01D1D8  EF1F  F0E9         	goto	l2167
 39307   01D1DC                     l2169:
 39308                           
 39309                           ;../src/boards/w65_cmn.c: 368:       LATC = ab.ll;
 39310   01D1DC  C510  F4C0         	movff	write_sram@ab,1216	;volatile
 39311                           
 39312                           ;../src/boards/w65_cmn.c: 369:    LATD = ab.lh;
 39313   01D1E0  C511  F4C1         	movff	write_sram@ab+1,1217	;volatile
 39314                           
 39315                           ;../src/boards/w65_cmn.c: 371:          LATA4 = 0;
 39316   01D1E4  98BE               	bcf	1214,4,c	;volatile
 39317   01D1E6                     
 39318                           ;../src/boards/w65_cmn.c: 372:          LATB = ((uint8_t*)buf)[i];
 39319   01D1E6  500E               	movf	write_sram@i^(0+1280),w,c
 39320   01D1E8  2408               	addwf	write_sram@buf^(0+1280),w,c
 39321   01D1EA  6E0C               	movwf	??_write_sram^(0+1280),c
 39322   01D1EC  500F               	movf	(write_sram@i+1)^(0+1280),w,c
 39323   01D1EE  2009               	addwfc	(write_sram@buf+1)^(0+1280),w,c
 39324   01D1F0  6E0D               	movwf	(??_write_sram+1)^(0+1280),c
 39325   01D1F2  C50C  F4F6         	movff	??_write_sram,tblptrl
 39326   01D1F6  C50D  F4F7         	movff	??_write_sram+1,tblptrh
 39327   01D1FA  0E00               	movlw	low (__mediumconst shr (0+16))
 39328   01D1FC  6EF8               	movwf	tblptru,c
 39329   01D1FE  0E3F               	movlw	(high __ramtop+-1)
 39330   01D200  64F7               	cpfsgt	tblptrh,c
 39331   01D202  D003               	bra	u32277
 39332   01D204  0008               	tblrd		*
 39333   01D206  50F5               	movf	tablat,w,c
 39334   01D208  D005               	bra	u32270
 39335   01D20A                     u32277:
 39336   01D20A  C4F6 F4E9          	movff	tblptrl,fsr0l
 39337   01D20E  C4F7 F4EA          	movff	tblptrh,fsr0h
 39338   01D212  50EF               	movf	indf0,w,c
 39339   01D214                     u32270:
 39340   01D214  6EBF               	movwf	191,c	;volatile
 39341   01D216                     
 39342                           ;../src/boards/w65_cmn.c: 373:          LATA4 = 1;
 39343   01D216  88BE               	bsf	1214,4,c	;volatile
 39344   01D218                     
 39345                           ;../src/boards/w65_cmn.c: 375:    i++;
 39346   01D218  4A0E               	infsnz	write_sram@i^(0+1280),f,c
 39347   01D21A  2A0F               	incf	(write_sram@i+1)^(0+1280),f,c
 39348   01D21C                     
 39349                           ;../src/boards/w65_cmn.c: 376:    ab.w++;
 39350   01D21C  0E01               	movlw	1
 39351   01D21E  2610               	addwf	write_sram@ab^(0+1280),f,c
 39352   01D220  0E00               	movlw	0
 39353   01D222  2211               	addwfc	(write_sram@ab+1)^(0+1280),f,c
 39354   01D224  2212               	addwfc	(write_sram@ab+2)^(0+1280),f,c
 39355   01D226  2213               	addwfc	(write_sram@ab+3)^(0+1280),f,c
 39356   01D228                     l23267:
 39357                           
 39358                           ;../src/boards/w65_cmn.c: 367:   while( i < len ) {
 39359   01D228  500A               	movf	write_sram@len^(0+1280),w,c
 39360   01D22A  5C0E               	subwf	write_sram@i^(0+1280),w,c
 39361   01D22C  500B               	movf	(write_sram@len+1)^(0+1280),w,c
 39362   01D22E  580F               	subwfb	(write_sram@i+1)^(0+1280),w,c
 39363   01D230  A0D8               	btfss	status,0,c
 39364   01D232  EF1D  F0E9         	goto	u32281
 39365   01D236  EF1F  F0E9         	goto	u32280
 39366   01D23A                     u32281:
 39367   01D23A  EFEE  F0E8         	goto	l2169
 39368   01D23E                     u32280:
 39369   01D23E                     l2167:
 39370                           
 39371                           ;../src/boards/w65_cmn.c: 379:  TRISB = 0xff;
 39372   01D23E  68C7               	setf	199,c	;volatile
 39373   01D240  0012               	return		;funcret
 39374   01D242                     __end_of_write_sram:
 39375                           	callstack 0
 39376                           
 39377 ;; *************** function _util_hexdump_sum *****************
 39378 ;; Defined at:
 39379 ;;		line 78 in file "../drivers/utils.c"
 39380 ;; Parameters:    Size  Location     Type
 39381 ;;  header          2  122[BANK5 ] PTR const unsigned char 
 39382 ;;		 -> STR_40(6), STR_36(6), 
 39383 ;;  addr            2  124[BANK5 ] PTR const void 
 39384 ;;		 -> disk_buf(128), 
 39385 ;;  size            2  126[BANK5 ] unsigned int 
 39386 ;; Auto vars:     Size  Location     Type
 39387 ;;  i               2  130[BANK5 ] int 
 39388 ;;  p               2  128[BANK5 ] PTR const unsigned char 
 39389 ;;		 -> disk_buf(128), 
 39390 ;;  sum             1  132[BANK5 ] unsigned char 
 39391 ;; Return value:  Size  Location     Type
 39392 ;;                  1    wreg      void 
 39393 ;; Registers used:
 39394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39395 ;; Tracked objects:
 39396 ;;		On entry : 0/0
 39397 ;;		On exit  : 0/0
 39398 ;;		Unchanged: 0/0
 39399 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39400 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39401 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39403 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39404 ;;Total ram usage:       11 bytes
 39405 ;; Hardware stack levels used: 1
 39406 ;; Hardware stack levels required when called: 10
 39407 ;; This function calls:
 39408 ;;		_printf
 39409 ;;		_util_hexdump
 39410 ;; This function is called by:
 39411 ;;		_write_sector
 39412 ;;		_read_sector
 39413 ;; This function uses a non-reentrant model
 39414 ;;
 39415                           
 39416                           	psect	text102
 39417   01F170                     __ptext102:
 39418                           	callstack 0
 39419   01F170                     _util_hexdump_sum:
 39420                           	callstack 111
 39421   01F170                     
 39422                           ;../drivers/utils.c: 78: void util_hexdump_sum(const char *header, const void *addr, uns
      +                          igned int size);../drivers/utils.c: 79: {;../drivers/utils.c: 80:     util_hexdump(heade
      +                          r, addr, size);
 39423   01F170  C5DA  F5BD         	movff	util_hexdump_sum@header,util_hexdump@header
 39424   01F174  C5DB  F5BE         	movff	util_hexdump_sum@header+1,util_hexdump@header+1
 39425   01F178  C5DC  F5BF         	movff	util_hexdump_sum@addr,util_hexdump@addr
 39426   01F17C  C5DD  F5C0         	movff	util_hexdump_sum@addr+1,util_hexdump@addr+1
 39427   01F180  C5DE  F5C1         	movff	util_hexdump_sum@size,util_hexdump@size
 39428   01F184  C5DF  F5C2         	movff	util_hexdump_sum@size+1,util_hexdump@size+1
 39429   01F188  EC03  F0E2         	call	_util_hexdump	;wreg free
 39430   01F18C                     
 39431                           ;../drivers/utils.c: 82:     uint8_t sum = 0;
 39432   01F18C  0105               	movlb	5	; () banked
 39433   01F18E  6BE4               	clrf	util_hexdump_sum@sum& (0+255),b
 39434   01F190                     
 39435                           ; BSR set to: 5
 39436                           ;../drivers/utils.c: 83:     const uint8_t *p = addr;
 39437   01F190  C5DC  F5E0         	movff	util_hexdump_sum@addr,util_hexdump_sum@p
 39438   01F194  C5DD  F5E1         	movff	util_hexdump_sum@addr+1,util_hexdump_sum@p+1
 39439   01F198                     
 39440                           ; BSR set to: 5
 39441                           ;../drivers/utils.c: 84:     for (int i = 0; i < size; i++)
 39442   01F198  0E00               	movlw	0
 39443   01F19A  6FE3               	movwf	(util_hexdump_sum@i+1)& (0+255),b
 39444   01F19C  0E00               	movlw	0
 39445   01F19E  6FE2               	movwf	util_hexdump_sum@i& (0+255),b
 39446   01F1A0  EFDC  F0F8         	goto	l23037
 39447   01F1A4                     l23031:
 39448                           
 39449                           ; BSR set to: 5
 39450                           ;../drivers/utils.c: 85:         sum += *p++;
 39451   01F1A4  C5E0  F4D9         	movff	util_hexdump_sum@p,fsr2l
 39452   01F1A8  C5E1  F4DA         	movff	util_hexdump_sum@p+1,fsr2h
 39453   01F1AC  50DF               	movf	indf2,w,c
 39454   01F1AE  27E4               	addwf	util_hexdump_sum@sum& (0+255),f,b
 39455   01F1B0                     
 39456                           ; BSR set to: 5
 39457   01F1B0  4BE0               	infsnz	util_hexdump_sum@p& (0+255),f,b
 39458   01F1B2  2BE1               	incf	(util_hexdump_sum@p+1)& (0+255),f,b
 39459   01F1B4                     
 39460                           ; BSR set to: 5
 39461   01F1B4  4BE2               	infsnz	util_hexdump_sum@i& (0+255),f,b
 39462   01F1B6  2BE3               	incf	(util_hexdump_sum@i+1)& (0+255),f,b
 39463   01F1B8                     l23037:
 39464                           
 39465                           ; BSR set to: 5
 39466   01F1B8  51DE               	movf	util_hexdump_sum@size& (0+255),w,b
 39467   01F1BA  5DE2               	subwf	util_hexdump_sum@i& (0+255),w,b
 39468   01F1BC  51DF               	movf	(util_hexdump_sum@size+1)& (0+255),w,b
 39469   01F1BE  59E3               	subwfb	(util_hexdump_sum@i+1)& (0+255),w,b
 39470   01F1C0  A0D8               	btfss	status,0,c
 39471   01F1C2  EFE5  F0F8         	goto	u31881
 39472   01F1C6  EFE7  F0F8         	goto	u31880
 39473   01F1CA                     u31881:
 39474   01F1CA  EFD2  F0F8         	goto	l23031
 39475   01F1CE                     u31880:
 39476   01F1CE                     
 39477                           ; BSR set to: 5
 39478                           ;../drivers/utils.c: 86:     printf("%s%53s CHECKSUM: %02x\n\r", header, "", sum);
 39479   01F1CE  0E36               	movlw	low STR_25
 39480   01F1D0  6FAD               	movwf	printf@fmt& (0+255),b
 39481   01F1D2  0EFB               	movlw	high STR_25
 39482   01F1D4  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39483   01F1D6  C5DA  F5AF         	movff	util_hexdump_sum@header,?_printf+2
 39484   01F1DA  C5DB  F5B0         	movff	util_hexdump_sum@header+1,?_printf+3
 39485   01F1DE  0E64               	movlw	low (STR_72+22)
 39486   01F1E0  6FB1               	movwf	(?_printf+4)& (0+255),b
 39487   01F1E2  0EFB               	movlw	high (STR_72+22)
 39488   01F1E4  6FB2               	movwf	(?_printf+5)& (0+255),b
 39489   01F1E6  C5E4  F5B3         	movff	util_hexdump_sum@sum,?_printf+6
 39490   01F1EA  6BB4               	clrf	(?_printf+7)& (0+255),b
 39491   01F1EC  ECDA  F0FF         	call	_printf	;wreg free
 39492   01F1F0  0012               	return		;funcret
 39493   01F1F2                     __end_of_util_hexdump_sum:
 39494                           	callstack 0
 39495                           
 39496 ;; *************** function _util_hexdump *****************
 39497 ;; Defined at:
 39498 ;;		line 36 in file "../drivers/utils.c"
 39499 ;; Parameters:    Size  Location     Type
 39500 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 39501 ;;		 -> STR_40(6), STR_36(6), STR_5(1), 
 39502 ;;  addr            2   95[BANK5 ] PTR const void 
 39503 ;;		 -> disk_buf(128), disk_initialize@buf(128), 
 39504 ;;  size            2   97[BANK5 ] unsigned int 
 39505 ;; Auto vars:     Size  Location     Type
 39506 ;;  i               2  120[BANK5 ] int 
 39507 ;;  chars          17  101[BANK5 ] unsigned char [17]
 39508 ;;  buf             2  118[BANK5 ] PTR const unsigned char 
 39509 ;;		 -> disk_buf(128), disk_initialize@buf(128), 
 39510 ;; Return value:  Size  Location     Type
 39511 ;;                  1    wreg      void 
 39512 ;; Registers used:
 39513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39514 ;; Tracked objects:
 39515 ;;		On entry : 0/0
 39516 ;;		On exit  : 0/0
 39517 ;;		Unchanged: 0/0
 39518 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39519 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39520 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39522 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39523 ;;Total ram usage:       29 bytes
 39524 ;; Hardware stack levels used: 1
 39525 ;; Hardware stack levels required when called: 9
 39526 ;; This function calls:
 39527 ;;		_printf
 39528 ;; This function is called by:
 39529 ;;		_disk_initialize
 39530 ;;		_util_hexdump_sum
 39531 ;; This function uses a non-reentrant model
 39532 ;;
 39533                           
 39534                           	psect	text103
 39535   01C406                     __ptext103:
 39536                           	callstack 0
 39537   01C406                     _util_hexdump:
 39538                           	callstack 111
 39539   01C406                     
 39540                           ;../drivers/utils.c: 36: void util_hexdump(const char *header, const void *addr, unsigne
      +                          d int size);../drivers/utils.c: 37: {;../drivers/utils.c: 38:     char chars[17];;../dri
      +                          vers/utils.c: 39:     const uint8_t *buf = addr;
 39541   01C406  C5BF  F5D6         	movff	util_hexdump@addr,util_hexdump@buf
 39542   01C40A  C5C0  F5D7         	movff	util_hexdump@addr+1,util_hexdump@buf+1
 39543                           
 39544                           ;../drivers/utils.c: 40:     size = ((size + 15) & ~0xfU);
 39545   01C40E  0E0F               	movlw	15
 39546   01C410  0105               	movlb	5	; () banked
 39547   01C412  25C1               	addwf	util_hexdump@size& (0+255),w,b
 39548   01C414  6FC3               	movwf	??_util_hexdump& (0+255),b
 39549   01C416  0E00               	movlw	0
 39550   01C418  21C2               	addwfc	(util_hexdump@size+1)& (0+255),w,b
 39551   01C41A  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 39552   01C41C  0EF0               	movlw	240
 39553   01C41E  15C3               	andwf	??_util_hexdump& (0+255),w,b
 39554   01C420  6FC1               	movwf	util_hexdump@size& (0+255),b
 39555   01C422  0EFF               	movlw	255
 39556   01C424  15C4               	andwf	(??_util_hexdump+1)& (0+255),w,b
 39557   01C426  6FC2               	movwf	(util_hexdump@size+1)& (0+255),b
 39558   01C428                     
 39559                           ; BSR set to: 5
 39560                           ;../drivers/utils.c: 41:     for (int i = 0; i < size; i++) {
 39561   01C428  0E00               	movlw	0
 39562   01C42A  6FD9               	movwf	(util_hexdump@i+1)& (0+255),b
 39563   01C42C  0E00               	movlw	0
 39564   01C42E  6FD8               	movwf	util_hexdump@i& (0+255),b
 39565   01C430  EFA8  F0E2         	goto	l21355
 39566   01C434                     l21335:
 39567                           
 39568                           ; BSR set to: 5
 39569                           ;../drivers/utils.c: 42:         if ((i % 16) == 0)
 39570   01C434  0E0F               	movlw	15
 39571   01C436  15D8               	andwf	util_hexdump@i& (0+255),w,b
 39572   01C438  6FC3               	movwf	??_util_hexdump& (0+255),b
 39573   01C43A  0E00               	movlw	0
 39574   01C43C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 39575   01C43E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 39576   01C440  51C3               	movf	??_util_hexdump& (0+255),w,b
 39577   01C442  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 39578   01C444  A4D8               	btfss	status,2,c
 39579   01C446  EF27  F0E2         	goto	u28641
 39580   01C44A  EF29  F0E2         	goto	u28640
 39581   01C44E                     u28641:
 39582   01C44E  EF37  F0E2         	goto	l109
 39583   01C452                     u28640:
 39584   01C452                     
 39585                           ; BSR set to: 5
 39586                           ;../drivers/utils.c: 43:             printf("%s%04x:", header, i);
 39587   01C452  0E68               	movlw	low STR_19
 39588   01C454  6FAD               	movwf	printf@fmt& (0+255),b
 39589   01C456  0EFF               	movlw	high STR_19
 39590   01C458  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39591   01C45A  C5BD  F5AF         	movff	util_hexdump@header,?_printf+2
 39592   01C45E  C5BE  F5B0         	movff	util_hexdump@header+1,?_printf+3
 39593   01C462  C5D8  F5B1         	movff	util_hexdump@i,?_printf+4
 39594   01C466  C5D9  F5B2         	movff	util_hexdump@i+1,?_printf+5
 39595   01C46A  ECDA  F0FF         	call	_printf	;wreg free
 39596   01C46E                     l109:
 39597                           
 39598                           ;../drivers/utils.c: 44:         printf(" %02x", buf[i]);
 39599   01C46E  0E97               	movlw	low STR_20
 39600   01C470  0105               	movlb	5	; () banked
 39601   01C472  6FAD               	movwf	printf@fmt& (0+255),b
 39602   01C474  0EFF               	movlw	high STR_20
 39603   01C476  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39604   01C478  51D8               	movf	util_hexdump@i& (0+255),w,b
 39605   01C47A  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 39606   01C47C  6ED9               	movwf	fsr2l,c
 39607   01C47E  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 39608   01C480  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 39609   01C482  6EDA               	movwf	fsr2h,c
 39610   01C484  50DF               	movf	indf2,w,c
 39611   01C486  6FC3               	movwf	??_util_hexdump& (0+255),b
 39612   01C488  51C3               	movf	??_util_hexdump& (0+255),w,b
 39613   01C48A  6FAF               	movwf	(?_printf+2)& (0+255),b
 39614   01C48C  6BB0               	clrf	(?_printf+3)& (0+255),b
 39615   01C48E  ECDA  F0FF         	call	_printf	;wreg free
 39616   01C492                     
 39617                           ;../drivers/utils.c: 45:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 39618   01C492  0105               	movlb	5	; () banked
 39619   01C494  51D8               	movf	util_hexdump@i& (0+255),w,b
 39620   01C496  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 39621   01C498  6ED9               	movwf	fsr2l,c
 39622   01C49A  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 39623   01C49C  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 39624   01C49E  6EDA               	movwf	fsr2h,c
 39625   01C4A0  0E1F               	movlw	31
 39626   01C4A2  64DF               	cpfsgt	indf2,c
 39627   01C4A4  EF56  F0E2         	goto	u28651
 39628   01C4A8  EF58  F0E2         	goto	u28650
 39629   01C4AC                     u28651:
 39630   01C4AC  EF7C  F0E2         	goto	l21345
 39631   01C4B0                     u28650:
 39632   01C4B0                     
 39633                           ; BSR set to: 5
 39634   01C4B0  51D8               	movf	util_hexdump@i& (0+255),w,b
 39635   01C4B2  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 39636   01C4B4  6ED9               	movwf	fsr2l,c
 39637   01C4B6  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 39638   01C4B8  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 39639   01C4BA  6EDA               	movwf	fsr2h,c
 39640   01C4BC  0E7F               	movlw	127
 39641   01C4BE  60DF               	cpfslt	indf2,c
 39642   01C4C0  EF64  F0E2         	goto	u28661
 39643   01C4C4  EF66  F0E2         	goto	u28660
 39644   01C4C8                     u28661:
 39645   01C4C8  EF7C  F0E2         	goto	l21345
 39646   01C4CC                     u28660:
 39647   01C4CC                     
 39648                           ; BSR set to: 5
 39649                           ;../drivers/utils.c: 46:             chars[i % 16] = buf[i];
 39650   01C4CC  51D8               	movf	util_hexdump@i& (0+255),w,b
 39651   01C4CE  25D6               	addwf	util_hexdump@buf& (0+255),w,b
 39652   01C4D0  6ED9               	movwf	fsr2l,c
 39653   01C4D2  51D9               	movf	(util_hexdump@i+1)& (0+255),w,b
 39654   01C4D4  21D7               	addwfc	(util_hexdump@buf+1)& (0+255),w,b
 39655   01C4D6  6EDA               	movwf	fsr2h,c
 39656   01C4D8  0E0F               	movlw	15
 39657   01C4DA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 39658   01C4DC  6FC3               	movwf	??_util_hexdump& (0+255),b
 39659   01C4DE  0E00               	movlw	0
 39660   01C4E0  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 39661   01C4E2  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 39662   01C4E4  0EC5               	movlw	low util_hexdump@chars
 39663   01C4E6  25C3               	addwf	??_util_hexdump& (0+255),w,b
 39664   01C4E8  6EE1               	movwf	fsr1l,c
 39665   01C4EA  0E05               	movlw	high util_hexdump@chars
 39666   01C4EC  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 39667   01C4EE  6EE2               	movwf	fsr1h,c
 39668   01C4F0  C4DF F4E7          	movff	indf2,indf1
 39669                           
 39670                           ;../drivers/utils.c: 47:         } else {
 39671   01C4F4  EF8A  F0E2         	goto	l21347
 39672   01C4F8                     l21345:
 39673                           
 39674                           ; BSR set to: 5
 39675                           ;../drivers/utils.c: 48:             chars[i % 16] = '.';
 39676   01C4F8  0E0F               	movlw	15
 39677   01C4FA  15D8               	andwf	util_hexdump@i& (0+255),w,b
 39678   01C4FC  6FC3               	movwf	??_util_hexdump& (0+255),b
 39679   01C4FE  0E00               	movlw	0
 39680   01C500  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 39681   01C502  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 39682   01C504  0EC5               	movlw	low util_hexdump@chars
 39683   01C506  25C3               	addwf	??_util_hexdump& (0+255),w,b
 39684   01C508  6ED9               	movwf	fsr2l,c
 39685   01C50A  0E05               	movlw	high util_hexdump@chars
 39686   01C50C  21C4               	addwfc	(??_util_hexdump+1)& (0+255),w,b
 39687   01C50E  6EDA               	movwf	fsr2h,c
 39688   01C510  0E2E               	movlw	46
 39689   01C512  6EDF               	movwf	indf2,c
 39690   01C514                     l21347:
 39691                           
 39692                           ; BSR set to: 5
 39693                           ;../drivers/utils.c: 50:         if ((i % 16) == 15) {
 39694   01C514  0E0F               	movlw	15
 39695   01C516  15D8               	andwf	util_hexdump@i& (0+255),w,b
 39696   01C518  6FC3               	movwf	??_util_hexdump& (0+255),b
 39697   01C51A  0E00               	movlw	0
 39698   01C51C  15D9               	andwf	(util_hexdump@i+1)& (0+255),w,b
 39699   01C51E  6FC4               	movwf	(??_util_hexdump+1)& (0+255),b
 39700   01C520  0E0F               	movlw	15
 39701   01C522  19C3               	xorwf	??_util_hexdump& (0+255),w,b
 39702   01C524  11C4               	iorwf	(??_util_hexdump+1)& (0+255),w,b
 39703   01C526  A4D8               	btfss	status,2,c
 39704   01C528  EF98  F0E2         	goto	u28671
 39705   01C52C  EF9A  F0E2         	goto	u28670
 39706   01C530                     u28671:
 39707   01C530  EFA5  F0E2         	goto	l21353
 39708   01C534                     u28670:
 39709   01C534                     
 39710                           ; BSR set to: 5
 39711                           ;../drivers/utils.c: 51:             chars[16] = '\0';
 39712   01C534  6BD5               	clrf	(util_hexdump@chars+16)& (0+255),b
 39713   01C536                     
 39714                           ; BSR set to: 5
 39715                           ;../drivers/utils.c: 52:             printf(" %s\n\r", chars);
 39716   01C536  0E66               	movlw	low (STR_74+8)
 39717   01C538  6FAD               	movwf	printf@fmt& (0+255),b
 39718   01C53A  0EFE               	movlw	high (STR_74+8)
 39719   01C53C  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39720   01C53E  0EC5               	movlw	low util_hexdump@chars
 39721   01C540  6FAF               	movwf	(?_printf+2)& (0+255),b
 39722   01C542  0E05               	movlw	high util_hexdump@chars
 39723   01C544  6FB0               	movwf	(?_printf+3)& (0+255),b
 39724   01C546  ECDA  F0FF         	call	_printf	;wreg free
 39725   01C54A                     l21353:
 39726                           
 39727                           ;../drivers/utils.c: 54:     }
 39728   01C54A  0105               	movlb	5	; () banked
 39729   01C54C  4BD8               	infsnz	util_hexdump@i& (0+255),f,b
 39730   01C54E  2BD9               	incf	(util_hexdump@i+1)& (0+255),f,b
 39731   01C550                     l21355:
 39732                           
 39733                           ; BSR set to: 5
 39734   01C550  51C1               	movf	util_hexdump@size& (0+255),w,b
 39735   01C552  5DD8               	subwf	util_hexdump@i& (0+255),w,b
 39736   01C554  51C2               	movf	(util_hexdump@size+1)& (0+255),w,b
 39737   01C556  59D9               	subwfb	(util_hexdump@i+1)& (0+255),w,b
 39738   01C558  A0D8               	btfss	status,0,c
 39739   01C55A  EFB1  F0E2         	goto	u28681
 39740   01C55E  EFB3  F0E2         	goto	u28680
 39741   01C562                     u28681:
 39742   01C562  EF1A  F0E2         	goto	l21335
 39743   01C566                     u28680:
 39744   01C566                     
 39745                           ; BSR set to: 5
 39746   01C566  0012               	return		;funcret
 39747   01C568                     __end_of_util_hexdump:
 39748                           	callstack 0
 39749                           
 39750 ;; *************** function _seek_disk *****************
 39751 ;; Defined at:
 39752 ;;		line 60 in file "../src/io_dos.c"
 39753 ;; Parameters:    Size  Location     Type
 39754 ;;		None
 39755 ;; Auto vars:     Size  Location     Type
 39756 ;;  sector          4  147[BANK6 ] unsigned long 
 39757 ;;  filep           2  151[BANK6 ] PTR struct .
 39758 ;;  n               2    0        unsigned int 
 39759 ;;  fres            1  153[BANK6 ] enum E22894
 39760 ;; Return value:  Size  Location     Type
 39761 ;;                  2  139[BANK6 ] int 
 39762 ;; Registers used:
 39763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39764 ;; Tracked objects:
 39765 ;;		On entry : 0/0
 39766 ;;		On exit  : 0/0
 39767 ;;		Unchanged: 0/0
 39768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39769 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39770 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39771 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39772 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39773 ;;Total ram usage:       15 bytes
 39774 ;; Hardware stack levels used: 1
 39775 ;; Hardware stack levels required when called: 17
 39776 ;; This function calls:
 39777 ;;		_f_lseek
 39778 ;;		_printf
 39779 ;; This function is called by:
 39780 ;;		_write_sector
 39781 ;;		_read_sector
 39782 ;; This function uses a non-reentrant model
 39783 ;;
 39784                           
 39785                           	psect	text104
 39786   01CBE8                     __ptext104:
 39787                           	callstack 0
 39788   01CBE8                     _seek_disk:
 39789                           	callstack 104
 39790   01CBE8                     
 39791                           ;../src/io_dos.c: 61:  unsigned int n;;../src/io_dos.c: 62:  FRESULT fres;;../src/io_dos
      +                          .c: 63:  FIL *filep = cpm_drives[req_tbl.disk_drive].filep;
 39792   01CBE8  0107               	movlb	7	; () banked
 39793   01CBEA  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 39794   01CBEC  0D04               	mullw	4
 39795   01CBEE  0E4D               	movlw	low (_cpm_drives+2)
 39796   01CBF0  24F3               	addwf	243,w,c
 39797   01CBF2  6ED9               	movwf	fsr2l,c
 39798   01CBF4  0E09               	movlw	high (_cpm_drives+2)
 39799   01CBF6  20F4               	addwfc	prodh,w,c
 39800   01CBF8  6EDA               	movwf	fsr2h,c
 39801   01CBFA  C4DE F697          	movff	postinc2,seek_disk@filep
 39802   01CBFE  C4DD F698          	movff	postdec2,seek_disk@filep+1
 39803                           
 39804                           ;../src/io_dos.c: 64:  uint32_t sector;;../src/io_dos.c: 66:  if (cpm_drives[req_tbl.dis
      +                          k_drive].filep == ((void*)0)) return(-1);
 39805   01CC02  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 39806   01CC04  0D04               	mullw	4
 39807   01CC06  0E4D               	movlw	low (_cpm_drives+2)
 39808   01CC08  24F3               	addwf	243,w,c
 39809   01CC0A  6ED9               	movwf	fsr2l,c
 39810   01CC0C  0E09               	movlw	high (_cpm_drives+2)
 39811   01CC0E  20F4               	addwfc	prodh,w,c
 39812   01CC10  6EDA               	movwf	fsr2h,c
 39813   01CC12  50DE               	movf	postinc2,w,c
 39814   01CC14  10DE               	iorwf	postinc2,w,c
 39815   01CC16  A4D8               	btfss	status,2,c
 39816   01CC18  EF10  F0E6         	goto	u32181
 39817   01CC1C  EF12  F0E6         	goto	u32180
 39818   01CC20                     u32181:
 39819   01CC20  EF17  F0E6         	goto	l23205
 39820   01CC24                     u32180:
 39821   01CC24                     l23203:
 39822   01CC24  0106               	movlb	6	; () banked
 39823   01CC26  698B               	setf	?_seek_disk& (0+255),b
 39824   01CC28  698C               	setf	(?_seek_disk+1)& (0+255),b
 39825   01CC2A  EF82  F0E6         	goto	l1202
 39826   01CC2E                     l23205:
 39827                           
 39828                           ; BSR set to: 7
 39829                           ;../src/io_dos.c: 67:  sector = req_tbl.disk_track * cpm_drives[req_tbl.disk_drive].sect
      +                          ors + req_tbl.disk_sector - 1;
 39830   01CC2E  51D2               	movf	(_req_tbl+4)& (0+255),w,b
 39831   01CC30  0D04               	mullw	4
 39832   01CC32  0E4B               	movlw	low _cpm_drives
 39833   01CC34  24F3               	addwf	243,w,c
 39834   01CC36  6ED9               	movwf	fsr2l,c
 39835   01CC38  0E09               	movlw	high _cpm_drives
 39836   01CC3A  20F4               	addwfc	prodh,w,c
 39837   01CC3C  6EDA               	movwf	fsr2h,c
 39838   01CC3E  C4DE F68D          	movff	postinc2,??_seek_disk
 39839   01CC42  C4DD F68E          	movff	postdec2,??_seek_disk+1
 39840   01CC46  0106               	movlb	6	; () banked
 39841   01CC48  518D               	movf	??_seek_disk& (0+255),w,b
 39842   01CC4A  0107               	movlb	7	; () banked
 39843   01CC4C  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 39844   01CC4E  C4F3 F68F          	movff	prodl,??_seek_disk+2
 39845   01CC52  C4F4 F690          	movff	prodh,??_seek_disk+3
 39846   01CC56  03D4               	mulwf	(_req_tbl+6)& (0+255),b
 39847   01CC58  50F3               	movf	prodl,w,c
 39848   01CC5A  0106               	movlb	6	; () banked
 39849   01CC5C  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 39850   01CC5E  518E               	movf	(??_seek_disk+1)& (0+255),w,b
 39851   01CC60  0107               	movlb	7	; () banked
 39852   01CC62  03D3               	mulwf	(_req_tbl+5)& (0+255),b
 39853   01CC64  0106               	movlb	6	; () banked
 39854   01CC66  50F3               	movf	prodl,w,c
 39855   01CC68  2790               	addwf	(??_seek_disk+3)& (0+255),f,b
 39856   01CC6A  0107               	movlb	7	; () banked
 39857   01CC6C  51D5               	movf	(_req_tbl+7)& (0+255),w,b
 39858   01CC6E  0106               	movlb	6	; () banked
 39859   01CC70  278F               	addwf	(??_seek_disk+2)& (0+255),f,b
 39860   01CC72  0107               	movlb	7	; () banked
 39861   01CC74  51D6               	movf	(_req_tbl+8)& (0+255),w,b
 39862   01CC76  0106               	movlb	6	; () banked
 39863   01CC78  2390               	addwfc	(??_seek_disk+3)& (0+255),f,b
 39864   01CC7A  0EFF               	movlw	255
 39865   01CC7C  258F               	addwf	(??_seek_disk+2)& (0+255),w,b
 39866   01CC7E  6F91               	movwf	(??_seek_disk+4)& (0+255),b
 39867   01CC80  0EFF               	movlw	255
 39868   01CC82  2190               	addwfc	(??_seek_disk+3)& (0+255),w,b
 39869   01CC84  6F92               	movwf	(??_seek_disk+5)& (0+255),b
 39870   01CC86  C691  F693         	movff	??_seek_disk+4,seek_disk@sector
 39871   01CC8A  C692  F694         	movff	??_seek_disk+5,seek_disk@sector+1
 39872   01CC8E  6B95               	clrf	(seek_disk@sector+2)& (0+255),b
 39873   01CC90  6B96               	clrf	(seek_disk@sector+3)& (0+255),b
 39874   01CC92                     
 39875                           ; BSR set to: 6
 39876                           ;../src/io_dos.c: 69:  if ((fres = f_lseek(filep, sector * 128)) != FR_OK) {
 39877   01CC92  C697  F662         	movff	seek_disk@filep,f_lseek@fp
 39878   01CC96  C698  F663         	movff	seek_disk@filep+1,f_lseek@fp+1
 39879   01CC9A  C693  F68D         	movff	seek_disk@sector,??_seek_disk
 39880   01CC9E  C694  F68E         	movff	seek_disk@sector+1,??_seek_disk+1
 39881   01CCA2  C695  F68F         	movff	seek_disk@sector+2,??_seek_disk+2
 39882   01CCA6  C696  F690         	movff	seek_disk@sector+3,??_seek_disk+3
 39883   01CCAA  0E07               	movlw	7
 39884   01CCAC                     u32195:
 39885   01CCAC  90D8               	bcf	status,0,c
 39886   01CCAE  378D               	rlcf	??_seek_disk& (0+255),f,b
 39887   01CCB0  378E               	rlcf	(??_seek_disk+1)& (0+255),f,b
 39888   01CCB2  378F               	rlcf	(??_seek_disk+2)& (0+255),f,b
 39889   01CCB4  3790               	rlcf	(??_seek_disk+3)& (0+255),f,b
 39890   01CCB6  2EE8               	decfsz	wreg,f,c
 39891   01CCB8  EF56  F0E6         	goto	u32195
 39892   01CCBC  C68D  F664         	movff	??_seek_disk,f_lseek@ofs
 39893   01CCC0  C68E  F665         	movff	??_seek_disk+1,f_lseek@ofs+1
 39894   01CCC4  C68F  F666         	movff	??_seek_disk+2,f_lseek@ofs+2
 39895   01CCC8  C690  F667         	movff	??_seek_disk+3,f_lseek@ofs+3
 39896   01CCCC  ECDA  F08E         	call	_f_lseek	;wreg free
 39897   01CCD0  0106               	movlb	6	; () banked
 39898   01CCD2  6F99               	movwf	seek_disk@fres& (0+255),b
 39899   01CCD4  5199               	movf	seek_disk@fres& (0+255),w,b
 39900   01CCD6  B4D8               	btfsc	status,2,c
 39901   01CCD8  EF70  F0E6         	goto	u32201
 39902   01CCDC  EF72  F0E6         	goto	u32200
 39903   01CCE0                     u32201:
 39904   01CCE0  EF7E  F0E6         	goto	l23215
 39905   01CCE4                     u32200:
 39906   01CCE4                     
 39907                           ; BSR set to: 6
 39908                           ;../src/io_dos.c: 70:   printf("f_lseek(): ERROR %d\n\r", fres);
 39909   01CCE4  0E30               	movlw	low STR_35
 39910   01CCE6  0105               	movlb	5	; () banked
 39911   01CCE8  6FAD               	movwf	printf@fmt& (0+255),b
 39912   01CCEA  0EFC               	movlw	high STR_35
 39913   01CCEC  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 39914   01CCEE  C699  F5AF         	movff	seek_disk@fres,?_printf+2
 39915   01CCF2  6BB0               	clrf	(?_printf+3)& (0+255),b
 39916   01CCF4  ECDA  F0FF         	call	_printf	;wreg free
 39917   01CCF8  EF12  F0E6         	goto	l23203
 39918   01CCFC                     l23215:
 39919                           
 39920                           ; BSR set to: 6
 39921                           ;../src/io_dos.c: 73:  return(0);
 39922   01CCFC  0E00               	movlw	0
 39923   01CCFE  6F8C               	movwf	(?_seek_disk+1)& (0+255),b
 39924   01CD00  0E00               	movlw	0
 39925   01CD02  6F8B               	movwf	?_seek_disk& (0+255),b
 39926   01CD04                     l1202:
 39927                           
 39928                           ; BSR set to: 6
 39929   01CD04  0012               	return		;funcret
 39930   01CD06                     __end_of_seek_disk:
 39931                           	callstack 0
 39932                           
 39933 ;; *************** function _f_lseek *****************
 39934 ;; Defined at:
 39935 ;;		line 4435 in file "../fatfs/ff.c"
 39936 ;; Parameters:    Size  Location     Type
 39937 ;;  fp              2   98[BANK6 ] PTR struct .
 39938 ;;  ofs             4  100[BANK6 ] unsigned long 
 39939 ;; Auto vars:     Size  Location     Type
 39940 ;;  clst            4  135[BANK6 ] unsigned long 
 39941 ;;  bcs             4  129[BANK6 ] unsigned long 
 39942 ;;  nsect           4  124[BANK6 ] unsigned long 
 39943 ;;  ifptr           4  120[BANK6 ] unsigned long 
 39944 ;;  fs              2  133[BANK6 ] PTR struct .
 39945 ;;		 -> fs(564), NULL(0), 
 39946 ;;  res             1  128[BANK6 ] enum E597
 39947 ;; Return value:  Size  Location     Type
 39948 ;;                  1    wreg      enum E597
 39949 ;; Registers used:
 39950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39951 ;; Tracked objects:
 39952 ;;		On entry : 0/0
 39953 ;;		On exit  : 0/0
 39954 ;;		Unchanged: 0/0
 39955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39956 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39957 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39958 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39959 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39960 ;;Total ram usage:       41 bytes
 39961 ;; Hardware stack levels used: 1
 39962 ;; Hardware stack levels required when called: 16
 39963 ;; This function calls:
 39964 ;;		___lldiv
 39965 ;;		_clst2sect
 39966 ;;		_create_chain
 39967 ;;		_disk_read
 39968 ;;		_disk_write
 39969 ;;		_get_fat
 39970 ;;		_validate
 39971 ;; This function is called by:
 39972 ;;		_seek_disk
 39973 ;; This function uses a non-reentrant model
 39974 ;;
 39975                           
 39976                           	psect	text105
 39977   011DB4                     __ptext105:
 39978                           	callstack 0
 39979   011DB4                     _f_lseek:
 39980                           	callstack 104
 39981   011DB4                     
 39982                           ;../fatfs/ff.c: 4436:  FIL* fp,;../fatfs/ff.c: 4437:  FSIZE_t ofs;../fatfs/ff.c: 4439: {
      +                          ;../fatfs/ff.c: 4440:  FRESULT res;;../fatfs/ff.c: 4441:  FATFS *fs;;../fatfs/ff.c: 4442
      +                          :  DWORD clst, bcs;;../fatfs/ff.c: 4443:  LBA_t nsect;;../fatfs/ff.c: 4444:  FSIZE_t ifp
      +                          tr;;../fatfs/ff.c: 4451:  res = validate(&fp->obj, &fs);
 39983   011DB4  C662  F5BE         	movff	f_lseek@fp,validate@obj
 39984   011DB8  C663  F5BF         	movff	f_lseek@fp+1,validate@obj+1
 39985   011DBC  0E85               	movlw	low f_lseek@fs
 39986   011DBE  0105               	movlb	5	; () banked
 39987   011DC0  6FC0               	movwf	validate@rfs& (0+255),b
 39988   011DC2  0E06               	movlw	high f_lseek@fs
 39989   011DC4  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 39990   011DC6  ECA3  F0E9         	call	_validate	;wreg free
 39991   011DCA  0106               	movlb	6	; () banked
 39992   011DCC  6F80               	movwf	f_lseek@res& (0+255),b
 39993   011DCE                     
 39994                           ; BSR set to: 6
 39995                           ;../fatfs/ff.c: 4452:  if (res == FR_OK) res = (FRESULT)fp->err;
 39996   011DCE  5180               	movf	f_lseek@res& (0+255),w,b
 39997   011DD0  A4D8               	btfss	status,2,c
 39998   011DD2  EFED  F08E         	goto	u31611
 39999   011DD6  EFEF  F08E         	goto	u31610
 40000   011DDA                     u31611:
 40001   011DDA  EFF7  F08E         	goto	l22877
 40002   011DDE                     u31610:
 40003   011DDE                     
 40004                           ; BSR set to: 6
 40005   011DDE  EE20 F00F          	lfsr	2,15
 40006   011DE2  5162               	movf	f_lseek@fp& (0+255),w,b
 40007   011DE4  26D9               	addwf	fsr2l,f,c
 40008   011DE6  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40009   011DE8  22DA               	addwfc	fsr2h,f,c
 40010   011DEA  50DF               	movf	indf2,w,c
 40011   011DEC  6F80               	movwf	f_lseek@res& (0+255),b
 40012   011DEE                     l22877:
 40013                           
 40014                           ; BSR set to: 6
 40015                           ;../fatfs/ff.c: 4458:  if (res != FR_OK) return res;
 40016   011DEE  5180               	movf	f_lseek@res& (0+255),w,b
 40017   011DF0  B4D8               	btfsc	status,2,c
 40018   011DF2  EFFD  F08E         	goto	u31621
 40019   011DF6  EFFF  F08E         	goto	u31620
 40020   011DFA                     u31621:
 40021   011DFA  EF02  F08F         	goto	l22883
 40022   011DFE                     u31620:
 40023   011DFE                     l22879:
 40024                           
 40025                           ; BSR set to: 6
 40026   011DFE  5180               	movf	f_lseek@res& (0+255),w,b
 40027   011E00  EFDA  F092         	goto	l791
 40028   011E04                     l22883:
 40029                           
 40030                           ; BSR set to: 6
 40031                           ;../fatfs/ff.c: 4513:  {;../fatfs/ff.c: 4517:   if (ofs > fp->obj.objsize && (0 || !(fp-
      +                          >flag & 0x02))) {
 40032   011E04  EE20 F00A          	lfsr	2,10
 40033   011E08  5162               	movf	f_lseek@fp& (0+255),w,b
 40034   011E0A  26D9               	addwf	fsr2l,f,c
 40035   011E0C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40036   011E0E  22DA               	addwfc	fsr2h,f,c
 40037   011E10  5164               	movf	f_lseek@ofs& (0+255),w,b
 40038   011E12  5CDE               	subwf	postinc2,w,c
 40039   011E14  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 40040   011E16  58DE               	subwfb	postinc2,w,c
 40041   011E18  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 40042   011E1A  58DE               	subwfb	postinc2,w,c
 40043   011E1C  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 40044   011E1E  58DE               	subwfb	postinc2,w,c
 40045   011E20  B0D8               	btfsc	status,0,c
 40046   011E22  EF15  F08F         	goto	u31631
 40047   011E26  EF17  F08F         	goto	u31630
 40048   011E2A                     u31631:
 40049   011E2A  EF32  F08F         	goto	l792
 40050   011E2E                     u31630:
 40051   011E2E                     
 40052                           ; BSR set to: 6
 40053   011E2E  EE20 F00E          	lfsr	2,14
 40054   011E32  5162               	movf	f_lseek@fp& (0+255),w,b
 40055   011E34  26D9               	addwf	fsr2l,f,c
 40056   011E36  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40057   011E38  22DA               	addwfc	fsr2h,f,c
 40058   011E3A  B2DF               	btfsc	indf2,1,c
 40059   011E3C  EF22  F08F         	goto	u31641
 40060   011E40  EF24  F08F         	goto	u31640
 40061   011E44                     u31641:
 40062   011E44  EF32  F08F         	goto	l792
 40063   011E48                     u31640:
 40064   011E48                     
 40065                           ; BSR set to: 6
 40066                           ;../fatfs/ff.c: 4518:    ofs = fp->obj.objsize;
 40067   011E48  EE20 F00A          	lfsr	2,10
 40068   011E4C  5162               	movf	f_lseek@fp& (0+255),w,b
 40069   011E4E  26D9               	addwf	fsr2l,f,c
 40070   011E50  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40071   011E52  22DA               	addwfc	fsr2h,f,c
 40072   011E54  C4DE F664          	movff	postinc2,f_lseek@ofs
 40073   011E58  C4DE F665          	movff	postinc2,f_lseek@ofs+1
 40074   011E5C  C4DE F666          	movff	postinc2,f_lseek@ofs+2
 40075   011E60  C4DE F667          	movff	postinc2,f_lseek@ofs+3
 40076   011E64                     l792:
 40077                           
 40078                           ; BSR set to: 6
 40079                           ;../fatfs/ff.c: 4520:   ifptr = fp->fptr;
 40080   011E64  EE20 F010          	lfsr	2,16
 40081   011E68  5162               	movf	f_lseek@fp& (0+255),w,b
 40082   011E6A  26D9               	addwf	fsr2l,f,c
 40083   011E6C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40084   011E6E  22DA               	addwfc	fsr2h,f,c
 40085   011E70  C4DE F678          	movff	postinc2,f_lseek@ifptr
 40086   011E74  C4DE F679          	movff	postinc2,f_lseek@ifptr+1
 40087   011E78  C4DE F67A          	movff	postinc2,f_lseek@ifptr+2
 40088   011E7C  C4DE F67B          	movff	postinc2,f_lseek@ifptr+3
 40089                           
 40090                           ;../fatfs/ff.c: 4521:   fp->fptr = nsect = 0;
 40091   011E80  0E00               	movlw	0
 40092   011E82  6F7C               	movwf	f_lseek@nsect& (0+255),b
 40093   011E84  0E00               	movlw	0
 40094   011E86  6F7D               	movwf	(f_lseek@nsect+1)& (0+255),b
 40095   011E88  0E00               	movlw	0
 40096   011E8A  6F7E               	movwf	(f_lseek@nsect+2)& (0+255),b
 40097   011E8C  0E00               	movlw	0
 40098   011E8E  6F7F               	movwf	(f_lseek@nsect+3)& (0+255),b
 40099   011E90  EE20 F010          	lfsr	2,16
 40100   011E94  5162               	movf	f_lseek@fp& (0+255),w,b
 40101   011E96  26D9               	addwf	fsr2l,f,c
 40102   011E98  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40103   011E9A  22DA               	addwfc	fsr2h,f,c
 40104   011E9C  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 40105   011EA0  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 40106   011EA4  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 40107   011EA8  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 40108   011EAC                     
 40109                           ; BSR set to: 6
 40110                           ;../fatfs/ff.c: 4522:   if (ofs > 0) {
 40111   011EAC  5164               	movf	f_lseek@ofs& (0+255),w,b
 40112   011EAE  1165               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 40113   011EB0  1166               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 40114   011EB2  1167               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 40115   011EB4  B4D8               	btfsc	status,2,c
 40116   011EB6  EF5F  F08F         	goto	u31651
 40117   011EBA  EF61  F08F         	goto	u31650
 40118   011EBE                     u31651:
 40119   011EBE  EFE5  F091         	goto	l22987
 40120   011EC2                     u31650:
 40121   011EC2                     
 40122                           ; BSR set to: 6
 40123                           ;../fatfs/ff.c: 4523:    bcs = (DWORD)fs->csize * ((UINT)512);
 40124   011EC2  EE20 F00A          	lfsr	2,10
 40125   011EC6  5185               	movf	f_lseek@fs& (0+255),w,b
 40126   011EC8  26D9               	addwf	fsr2l,f,c
 40127   011ECA  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 40128   011ECC  22DA               	addwfc	fsr2h,f,c
 40129   011ECE  C4DE F668          	movff	postinc2,??_f_lseek
 40130   011ED2  C4DD F669          	movff	postdec2,??_f_lseek+1
 40131   011ED6  5168               	movf	??_f_lseek& (0+255),w,b
 40132   011ED8  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 40133   011EDA  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 40134   011EDC  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 40135   011EDE  6B6C               	clrf	(??_f_lseek+4)& (0+255),b
 40136   011EE0  6B6D               	clrf	(??_f_lseek+5)& (0+255),b
 40137   011EE2  0E09               	movlw	9
 40138   011EE4                     u31665:
 40139   011EE4  90D8               	bcf	status,0,c
 40140   011EE6  376A               	rlcf	(??_f_lseek+2)& (0+255),f,b
 40141   011EE8  376B               	rlcf	(??_f_lseek+3)& (0+255),f,b
 40142   011EEA  376C               	rlcf	(??_f_lseek+4)& (0+255),f,b
 40143   011EEC  376D               	rlcf	(??_f_lseek+5)& (0+255),f,b
 40144   011EEE  2EE8               	decfsz	wreg,f,c
 40145   011EF0  EF72  F08F         	goto	u31665
 40146   011EF4  C66A  F681         	movff	??_f_lseek+2,f_lseek@bcs
 40147   011EF8  C66B  F682         	movff	??_f_lseek+3,f_lseek@bcs+1
 40148   011EFC  C66C  F683         	movff	??_f_lseek+4,f_lseek@bcs+2
 40149   011F00  C66D  F684         	movff	??_f_lseek+5,f_lseek@bcs+3
 40150   011F04                     
 40151                           ; BSR set to: 6
 40152                           ;../fatfs/ff.c: 4524:    if (ifptr > 0 &&
 40153   011F04  5178               	movf	f_lseek@ifptr& (0+255),w,b
 40154   011F06  1179               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 40155   011F08  117A               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 40156   011F0A  117B               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 40157   011F0C  B4D8               	btfsc	status,2,c
 40158   011F0E  EF8B  F08F         	goto	u31671
 40159   011F12  EF8D  F08F         	goto	u31670
 40160   011F16                     u31671:
 40161   011F16  EF2A  F090         	goto	l22899
 40162   011F1A                     u31670:
 40163   011F1A                     
 40164                           ; BSR set to: 6
 40165   011F1A  0EFF               	movlw	255
 40166   011F1C  2564               	addwf	f_lseek@ofs& (0+255),w,b
 40167   011F1E  6E04               	movwf	___lldiv@dividend^(0+1280),c
 40168   011F20  0EFF               	movlw	255
 40169   011F22  2165               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 40170   011F24  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 40171   011F26  0EFF               	movlw	255
 40172   011F28  2166               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 40173   011F2A  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 40174   011F2C  0EFF               	movlw	255
 40175   011F2E  2167               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 40176   011F30  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 40177   011F32  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 40178   011F36  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 40179   011F3A  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 40180   011F3E  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 40181   011F42  EC7E  F0F5         	call	___lldiv	;wreg free
 40182   011F46  C504  F668         	movff	?___lldiv,??_f_lseek
 40183   011F4A  C505  F669         	movff	?___lldiv+1,??_f_lseek+1
 40184   011F4E  C506  F66A         	movff	?___lldiv+2,??_f_lseek+2
 40185   011F52  C507  F66B         	movff	?___lldiv+3,??_f_lseek+3
 40186   011F56  0EFF               	movlw	255
 40187   011F58  0106               	movlb	6	; () banked
 40188   011F5A  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 40189   011F5C  6E04               	movwf	___lldiv@dividend^(0+1280),c
 40190   011F5E  0EFF               	movlw	255
 40191   011F60  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 40192   011F62  6E05               	movwf	(___lldiv@dividend+1)^(0+1280),c
 40193   011F64  0EFF               	movlw	255
 40194   011F66  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 40195   011F68  6E06               	movwf	(___lldiv@dividend+2)^(0+1280),c
 40196   011F6A  0EFF               	movlw	255
 40197   011F6C  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 40198   011F6E  6E07               	movwf	(___lldiv@dividend+3)^(0+1280),c
 40199   011F70  C681  F508         	movff	f_lseek@bcs,___lldiv@divisor
 40200   011F74  C682  F509         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 40201   011F78  C683  F50A         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 40202   011F7C  C684  F50B         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 40203   011F80  EC7E  F0F5         	call	___lldiv	;wreg free
 40204   011F84  5004               	movf	?___lldiv^(0+1280),w,c
 40205   011F86  0106               	movlb	6	; () banked
 40206   011F88  5D68               	subwf	??_f_lseek& (0+255),w,b
 40207   011F8A  5005               	movf	(?___lldiv+1)^(0+1280),w,c
 40208   011F8C  5969               	subwfb	(??_f_lseek+1)& (0+255),w,b
 40209   011F8E  5006               	movf	(?___lldiv+2)^(0+1280),w,c
 40210   011F90  596A               	subwfb	(??_f_lseek+2)& (0+255),w,b
 40211   011F92  5007               	movf	(?___lldiv+3)^(0+1280),w,c
 40212   011F94  596B               	subwfb	(??_f_lseek+3)& (0+255),w,b
 40213   011F96  A0D8               	btfss	status,0,c
 40214   011F98  EFD0  F08F         	goto	u31681
 40215   011F9C  EFD2  F08F         	goto	u31680
 40216   011FA0                     u31681:
 40217   011FA0  EF2A  F090         	goto	l22899
 40218   011FA4                     u31680:
 40219   011FA4                     
 40220                           ; BSR set to: 6
 40221                           ;../fatfs/ff.c: 4525:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;../fatfs/ff.c: 4526:  
      +                             fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 40222   011FA4  0EFF               	movlw	255
 40223   011FA6  2581               	addwf	f_lseek@bcs& (0+255),w,b
 40224   011FA8  6F68               	movwf	??_f_lseek& (0+255),b
 40225   011FAA  0EFF               	movlw	255
 40226   011FAC  2182               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 40227   011FAE  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 40228   011FB0  0EFF               	movlw	255
 40229   011FB2  2183               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 40230   011FB4  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 40231   011FB6  0EFF               	movlw	255
 40232   011FB8  2184               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 40233   011FBA  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 40234   011FBC  1D68               	comf	??_f_lseek& (0+255),w,b
 40235   011FBE  6F6C               	movwf	(??_f_lseek+4)& (0+255),b
 40236   011FC0  1D69               	comf	(??_f_lseek+1)& (0+255),w,b
 40237   011FC2  6F6D               	movwf	(??_f_lseek+5)& (0+255),b
 40238   011FC4  1D6A               	comf	(??_f_lseek+2)& (0+255),w,b
 40239   011FC6  6F6E               	movwf	(??_f_lseek+6)& (0+255),b
 40240   011FC8  1D6B               	comf	(??_f_lseek+3)& (0+255),w,b
 40241   011FCA  6F6F               	movwf	(??_f_lseek+7)& (0+255),b
 40242   011FCC  0EFF               	movlw	255
 40243   011FCE  2578               	addwf	f_lseek@ifptr& (0+255),w,b
 40244   011FD0  6F70               	movwf	(??_f_lseek+8)& (0+255),b
 40245   011FD2  0EFF               	movlw	255
 40246   011FD4  2179               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 40247   011FD6  6F71               	movwf	(??_f_lseek+9)& (0+255),b
 40248   011FD8  0EFF               	movlw	255
 40249   011FDA  217A               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 40250   011FDC  6F72               	movwf	(??_f_lseek+10)& (0+255),b
 40251   011FDE  0EFF               	movlw	255
 40252   011FE0  217B               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 40253   011FE2  6F73               	movwf	(??_f_lseek+11)& (0+255),b
 40254   011FE4  516C               	movf	(??_f_lseek+4)& (0+255),w,b
 40255   011FE6  1570               	andwf	(??_f_lseek+8)& (0+255),w,b
 40256   011FE8  6F74               	movwf	(??_f_lseek+12)& (0+255),b
 40257   011FEA  516D               	movf	(??_f_lseek+5)& (0+255),w,b
 40258   011FEC  1571               	andwf	(??_f_lseek+9)& (0+255),w,b
 40259   011FEE  6F75               	movwf	(??_f_lseek+13)& (0+255),b
 40260   011FF0  516E               	movf	(??_f_lseek+6)& (0+255),w,b
 40261   011FF2  1572               	andwf	(??_f_lseek+10)& (0+255),w,b
 40262   011FF4  6F76               	movwf	(??_f_lseek+14)& (0+255),b
 40263   011FF6  516F               	movf	(??_f_lseek+7)& (0+255),w,b
 40264   011FF8  1573               	andwf	(??_f_lseek+11)& (0+255),w,b
 40265   011FFA  6F77               	movwf	(??_f_lseek+15)& (0+255),b
 40266   011FFC  EE20 F010          	lfsr	2,16
 40267   012000  5162               	movf	f_lseek@fp& (0+255),w,b
 40268   012002  26D9               	addwf	fsr2l,f,c
 40269   012004  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40270   012006  22DA               	addwfc	fsr2h,f,c
 40271   012008  C674  F4DE         	movff	??_f_lseek+12,postinc2
 40272   01200C  C675  F4DE         	movff	??_f_lseek+13,postinc2
 40273   012010  C676  F4DE         	movff	??_f_lseek+14,postinc2
 40274   012014  C677  F4DE         	movff	??_f_lseek+15,postinc2
 40275                           
 40276                           ;../fatfs/ff.c: 4527:     ofs -= fp->fptr;
 40277   012018  EE20 F010          	lfsr	2,16
 40278   01201C  5162               	movf	f_lseek@fp& (0+255),w,b
 40279   01201E  26D9               	addwf	fsr2l,f,c
 40280   012020  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40281   012022  22DA               	addwfc	fsr2h,f,c
 40282   012024  50DE               	movf	postinc2,w,c
 40283   012026  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 40284   012028  50DE               	movf	postinc2,w,c
 40285   01202A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 40286   01202C  50DE               	movf	postinc2,w,c
 40287   01202E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 40288   012030  50DD               	movf	postdec2,w,c
 40289   012032  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 40290                           
 40291                           ;../fatfs/ff.c: 4528:     clst = fp->clust;
 40292   012034  EE20 F014          	lfsr	2,20
 40293   012038  5162               	movf	f_lseek@fp& (0+255),w,b
 40294   01203A  26D9               	addwf	fsr2l,f,c
 40295   01203C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40296   01203E  22DA               	addwfc	fsr2h,f,c
 40297   012040  C4DE F687          	movff	postinc2,f_lseek@clst
 40298   012044  C4DE F688          	movff	postinc2,f_lseek@clst+1
 40299   012048  C4DE F689          	movff	postinc2,f_lseek@clst+2
 40300   01204C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 40301                           
 40302                           ;../fatfs/ff.c: 4529:    } else {
 40303   012050  EFA5  F090         	goto	l22923
 40304   012054                     l22899:
 40305                           
 40306                           ; BSR set to: 6
 40307                           ;../fatfs/ff.c: 4530:     clst = fp->obj.sclust;
 40308   012054  EE20 F006          	lfsr	2,6
 40309   012058  5162               	movf	f_lseek@fp& (0+255),w,b
 40310   01205A  26D9               	addwf	fsr2l,f,c
 40311   01205C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40312   01205E  22DA               	addwfc	fsr2h,f,c
 40313   012060  C4DE F687          	movff	postinc2,f_lseek@clst
 40314   012064  C4DE F688          	movff	postinc2,f_lseek@clst+1
 40315   012068  C4DE F689          	movff	postinc2,f_lseek@clst+2
 40316   01206C  C4DE F68A          	movff	postinc2,f_lseek@clst+3
 40317   012070                     
 40318                           ; BSR set to: 6
 40319                           ;../fatfs/ff.c: 4532:     if (clst == 0) {
 40320   012070  5187               	movf	f_lseek@clst& (0+255),w,b
 40321   012072  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 40322   012074  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 40323   012076  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 40324   012078  A4D8               	btfss	status,2,c
 40325   01207A  EF41  F090         	goto	u31691
 40326   01207E  EF43  F090         	goto	u31690
 40327   012082                     u31691:
 40328   012082  EF97  F090         	goto	l798
 40329   012086                     u31690:
 40330   012086                     
 40331                           ; BSR set to: 6
 40332                           ;../fatfs/ff.c: 4533:      clst = create_chain(&fp->obj, 0);
 40333   012086  C662  F645         	movff	f_lseek@fp,create_chain@obj
 40334   01208A  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 40335   01208E  0E00               	movlw	0
 40336   012090  6F47               	movwf	create_chain@clst& (0+255),b
 40337   012092  0E00               	movlw	0
 40338   012094  6F48               	movwf	(create_chain@clst+1)& (0+255),b
 40339   012096  0E00               	movlw	0
 40340   012098  6F49               	movwf	(create_chain@clst+2)& (0+255),b
 40341   01209A  0E00               	movlw	0
 40342   01209C  6F4A               	movwf	(create_chain@clst+3)& (0+255),b
 40343   01209E  EC7C  F09D         	call	_create_chain	;wreg free
 40344   0120A2  C645  F687         	movff	?_create_chain,f_lseek@clst
 40345   0120A6  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 40346   0120AA  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 40347   0120AE  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 40348   0120B2                     
 40349                           ;../fatfs/ff.c: 4534:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_
      +                          ERR; };
 40350   0120B2  0106               	movlb	6	; () banked
 40351   0120B4  0587               	decf	f_lseek@clst& (0+255),w,b
 40352   0120B6  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 40353   0120B8  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 40354   0120BA  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 40355   0120BC  A4D8               	btfss	status,2,c
 40356   0120BE  EF63  F090         	goto	u31701
 40357   0120C2  EF65  F090         	goto	u31700
 40358   0120C6                     u31701:
 40359   0120C6  EF70  F090         	goto	l22913
 40360   0120CA                     u31700:
 40361   0120CA                     
 40362                           ; BSR set to: 6
 40363   0120CA  EE20 F00F          	lfsr	2,15
 40364   0120CE  5162               	movf	f_lseek@fp& (0+255),w,b
 40365   0120D0  26D9               	addwf	fsr2l,f,c
 40366   0120D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40367   0120D4  22DA               	addwfc	fsr2h,f,c
 40368   0120D6  0E02               	movlw	2
 40369   0120D8  6EDF               	movwf	indf2,c
 40370   0120DA                     l22909:
 40371                           
 40372                           ; BSR set to: 6
 40373   0120DA  0E02               	movlw	2
 40374   0120DC  EFDA  F092         	goto	l791
 40375   0120E0                     l22913:
 40376                           
 40377                           ; BSR set to: 6
 40378                           ;../fatfs/ff.c: 4535:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 40379   0120E0  2987               	incf	f_lseek@clst& (0+255),w,b
 40380   0120E2  E10A               	bnz	u31711
 40381   0120E4  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 40382   0120E6  E108               	bnz	u31711
 40383   0120E8  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 40384   0120EA  E106               	bnz	u31711
 40385   0120EC  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 40386   0120EE  A4D8               	btfss	status,2,c
 40387   0120F0  EF7C  F090         	goto	u31711
 40388   0120F4  EF7E  F090         	goto	u31710
 40389   0120F8                     u31711:
 40390   0120F8  EF89  F090         	goto	l22921
 40391   0120FC                     u31710:
 40392   0120FC                     
 40393                           ; BSR set to: 6
 40394   0120FC  EE20 F00F          	lfsr	2,15
 40395   012100  5162               	movf	f_lseek@fp& (0+255),w,b
 40396   012102  26D9               	addwf	fsr2l,f,c
 40397   012104  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40398   012106  22DA               	addwfc	fsr2h,f,c
 40399   012108  0E01               	movlw	1
 40400   01210A  6EDF               	movwf	indf2,c
 40401   01210C                     l22917:
 40402                           
 40403                           ; BSR set to: 6
 40404   01210C  0E01               	movlw	1
 40405   01210E  EFDA  F092         	goto	l791
 40406   012112                     l22921:
 40407                           
 40408                           ; BSR set to: 6
 40409                           ;../fatfs/ff.c: 4536:      fp->obj.sclust = clst;
 40410   012112  EE20 F006          	lfsr	2,6
 40411   012116  5162               	movf	f_lseek@fp& (0+255),w,b
 40412   012118  26D9               	addwf	fsr2l,f,c
 40413   01211A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40414   01211C  22DA               	addwfc	fsr2h,f,c
 40415   01211E  C687  F4DE         	movff	f_lseek@clst,postinc2
 40416   012122  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 40417   012126  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 40418   01212A  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 40419   01212E                     l798:
 40420                           
 40421                           ; BSR set to: 6
 40422                           ;../fatfs/ff.c: 4539:     fp->clust = clst;
 40423   01212E  EE20 F014          	lfsr	2,20
 40424   012132  5162               	movf	f_lseek@fp& (0+255),w,b
 40425   012134  26D9               	addwf	fsr2l,f,c
 40426   012136  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40427   012138  22DA               	addwfc	fsr2h,f,c
 40428   01213A  C687  F4DE         	movff	f_lseek@clst,postinc2
 40429   01213E  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 40430   012142  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 40431   012146  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 40432   01214A                     l22923:
 40433                           
 40434                           ; BSR set to: 6
 40435                           ;../fatfs/ff.c: 4541:    if (clst != 0) {
 40436   01214A  5187               	movf	f_lseek@clst& (0+255),w,b
 40437   01214C  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 40438   01214E  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 40439   012150  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 40440   012152  B4D8               	btfsc	status,2,c
 40441   012154  EFAE  F090         	goto	u31721
 40442   012158  EFB0  F090         	goto	u31720
 40443   01215C                     u31721:
 40444   01215C  EFE5  F091         	goto	l22987
 40445   012160                     u31720:
 40446   012160  EF6A  F091         	goto	l22969
 40447   012164                     l22927:
 40448                           
 40449                           ; BSR set to: 6
 40450                           ;../fatfs/ff.c: 4543:      ofs -= bcs; fp->fptr += bcs;
 40451   012164  5181               	movf	f_lseek@bcs& (0+255),w,b
 40452   012166  5F64               	subwf	f_lseek@ofs& (0+255),f,b
 40453   012168  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 40454   01216A  5B65               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 40455   01216C  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 40456   01216E  5B66               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 40457   012170  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 40458   012172  5B67               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 40459   012174                     
 40460                           ; BSR set to: 6
 40461   012174  EE20 F010          	lfsr	2,16
 40462   012178  5162               	movf	f_lseek@fp& (0+255),w,b
 40463   01217A  26D9               	addwf	fsr2l,f,c
 40464   01217C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40465   01217E  22DA               	addwfc	fsr2h,f,c
 40466   012180  5181               	movf	f_lseek@bcs& (0+255),w,b
 40467   012182  26DE               	addwf	postinc2,f,c
 40468   012184  5182               	movf	(f_lseek@bcs+1)& (0+255),w,b
 40469   012186  22DE               	addwfc	postinc2,f,c
 40470   012188  5183               	movf	(f_lseek@bcs+2)& (0+255),w,b
 40471   01218A  22DE               	addwfc	postinc2,f,c
 40472   01218C  5184               	movf	(f_lseek@bcs+3)& (0+255),w,b
 40473   01218E  22DE               	addwfc	postinc2,f,c
 40474   012190                     
 40475                           ; BSR set to: 6
 40476                           ;../fatfs/ff.c: 4545:      if (fp->flag & 0x02) {
 40477   012190  EE20 F00E          	lfsr	2,14
 40478   012194  5162               	movf	f_lseek@fp& (0+255),w,b
 40479   012196  26D9               	addwf	fsr2l,f,c
 40480   012198  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40481   01219A  22DA               	addwfc	fsr2h,f,c
 40482   01219C  A2DF               	btfss	indf2,1,c
 40483   01219E  EFD3  F090         	goto	u31731
 40484   0121A2  EFD5  F090         	goto	u31730
 40485   0121A6                     u31731:
 40486   0121A6  EF01  F091         	goto	l22947
 40487   0121AA                     u31730:
 40488   0121AA                     
 40489                           ; BSR set to: 6
 40490                           ;../fatfs/ff.c: 4550:       clst = create_chain(&fp->obj, clst);
 40491   0121AA  C662  F645         	movff	f_lseek@fp,create_chain@obj
 40492   0121AE  C663  F646         	movff	f_lseek@fp+1,create_chain@obj+1
 40493   0121B2  C687  F647         	movff	f_lseek@clst,create_chain@clst
 40494   0121B6  C688  F648         	movff	f_lseek@clst+1,create_chain@clst+1
 40495   0121BA  C689  F649         	movff	f_lseek@clst+2,create_chain@clst+2
 40496   0121BE  C68A  F64A         	movff	f_lseek@clst+3,create_chain@clst+3
 40497   0121C2  EC7C  F09D         	call	_create_chain	;wreg free
 40498   0121C6  C645  F687         	movff	?_create_chain,f_lseek@clst
 40499   0121CA  C646  F688         	movff	?_create_chain+1,f_lseek@clst+1
 40500   0121CE  C647  F689         	movff	?_create_chain+2,f_lseek@clst+2
 40501   0121D2  C648  F68A         	movff	?_create_chain+3,f_lseek@clst+3
 40502   0121D6                     
 40503                           ;../fatfs/ff.c: 4551:       if (clst == 0) {
 40504   0121D6  0106               	movlb	6	; () banked
 40505   0121D8  5187               	movf	f_lseek@clst& (0+255),w,b
 40506   0121DA  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 40507   0121DC  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 40508   0121DE  118A               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 40509   0121E0  A4D8               	btfss	status,2,c
 40510   0121E2  EFF5  F090         	goto	u31741
 40511   0121E6  EFF7  F090         	goto	u31740
 40512   0121EA                     u31741:
 40513   0121EA  EF17  F091         	goto	l22949
 40514   0121EE                     u31740:
 40515   0121EE                     
 40516                           ; BSR set to: 6
 40517                           ;../fatfs/ff.c: 4552:        ofs = 0; break;
 40518   0121EE  0E00               	movlw	0
 40519   0121F0  6F64               	movwf	f_lseek@ofs& (0+255),b
 40520   0121F2  0E00               	movlw	0
 40521   0121F4  6F65               	movwf	(f_lseek@ofs+1)& (0+255),b
 40522   0121F6  0E00               	movlw	0
 40523   0121F8  6F66               	movwf	(f_lseek@ofs+2)& (0+255),b
 40524   0121FA  0E00               	movlw	0
 40525   0121FC  6F67               	movwf	(f_lseek@ofs+3)& (0+255),b
 40526   0121FE  EF79  F091         	goto	l22971
 40527   012202                     l22947:
 40528                           
 40529                           ; BSR set to: 6
 40530                           ;../fatfs/ff.c: 4556:      {;../fatfs/ff.c: 4557:       clst = get_fat(&fp->obj, clst);
 40531   012202  C662  F624         	movff	f_lseek@fp,get_fat@obj
 40532   012206  C663  F625         	movff	f_lseek@fp+1,get_fat@obj+1
 40533   01220A  C687  F626         	movff	f_lseek@clst,get_fat@clst
 40534   01220E  C688  F627         	movff	f_lseek@clst+1,get_fat@clst+1
 40535   012212  C689  F628         	movff	f_lseek@clst+2,get_fat@clst+2
 40536   012216  C68A  F629         	movff	f_lseek@clst+3,get_fat@clst+3
 40537   01221A  ECF7  F0B4         	call	_get_fat	;wreg free
 40538   01221E  C624  F687         	movff	?_get_fat,f_lseek@clst
 40539   012222  C625  F688         	movff	?_get_fat+1,f_lseek@clst+1
 40540   012226  C626  F689         	movff	?_get_fat+2,f_lseek@clst+2
 40541   01222A  C627  F68A         	movff	?_get_fat+3,f_lseek@clst+3
 40542   01222E                     l22949:
 40543                           
 40544                           ;../fatfs/ff.c: 4559:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retu
      +                          rn FR_DISK_ERR; };
 40545   01222E  0106               	movlb	6	; () banked
 40546   012230  2987               	incf	f_lseek@clst& (0+255),w,b
 40547   012232  E10A               	bnz	u31751
 40548   012234  2988               	incf	(f_lseek@clst+1)& (0+255),w,b
 40549   012236  E108               	bnz	u31751
 40550   012238  2989               	incf	(f_lseek@clst+2)& (0+255),w,b
 40551   01223A  E106               	bnz	u31751
 40552   01223C  298A               	incf	(f_lseek@clst+3)& (0+255),w,b
 40553   01223E  A4D8               	btfss	status,2,c
 40554   012240  EF24  F091         	goto	u31751
 40555   012244  EF26  F091         	goto	u31750
 40556   012248                     u31751:
 40557   012248  EF30  F091         	goto	l22957
 40558   01224C                     u31750:
 40559   01224C                     
 40560                           ; BSR set to: 6
 40561   01224C  EE20 F00F          	lfsr	2,15
 40562   012250  5162               	movf	f_lseek@fp& (0+255),w,b
 40563   012252  26D9               	addwf	fsr2l,f,c
 40564   012254  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40565   012256  22DA               	addwfc	fsr2h,f,c
 40566   012258  0E01               	movlw	1
 40567   01225A  6EDF               	movwf	indf2,c
 40568   01225C  EF86  F090         	goto	l22917
 40569   012260                     l22957:
 40570                           
 40571                           ; BSR set to: 6
 40572                           ;../fatfs/ff.c: 4560:      if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_
      +                          INT_ERR); return FR_INT_ERR; };
 40573   012260  518A               	movf	(f_lseek@clst+3)& (0+255),w,b
 40574   012262  1189               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 40575   012264  1188               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 40576   012266  E109               	bnz	u31760
 40577   012268  0E02               	movlw	2
 40578   01226A  5D87               	subwf	f_lseek@clst& (0+255),w,b
 40579   01226C  A0D8               	btfss	status,0,c
 40580   01226E  EF3B  F091         	goto	u31761
 40581   012272  EF3D  F091         	goto	u31760
 40582   012276                     u31761:
 40583   012276  EF52  F091         	goto	l22961
 40584   01227A                     u31760:
 40585   01227A                     
 40586                           ; BSR set to: 6
 40587   01227A  EE20 F018          	lfsr	2,24
 40588   01227E  5185               	movf	f_lseek@fs& (0+255),w,b
 40589   012280  26D9               	addwf	fsr2l,f,c
 40590   012282  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 40591   012284  22DA               	addwfc	fsr2h,f,c
 40592   012286  50DE               	movf	postinc2,w,c
 40593   012288  5D87               	subwf	f_lseek@clst& (0+255),w,b
 40594   01228A  50DE               	movf	postinc2,w,c
 40595   01228C  5988               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 40596   01228E  50DE               	movf	postinc2,w,c
 40597   012290  5989               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 40598   012292  50DE               	movf	postinc2,w,c
 40599   012294  598A               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 40600   012296  A0D8               	btfss	status,0,c
 40601   012298  EF50  F091         	goto	u31771
 40602   01229C  EF52  F091         	goto	u31770
 40603   0122A0                     u31771:
 40604   0122A0  EF5C  F091         	goto	l22967
 40605   0122A4                     u31770:
 40606   0122A4                     l22961:
 40607                           
 40608                           ; BSR set to: 6
 40609   0122A4  EE20 F00F          	lfsr	2,15
 40610   0122A8  5162               	movf	f_lseek@fp& (0+255),w,b
 40611   0122AA  26D9               	addwf	fsr2l,f,c
 40612   0122AC  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40613   0122AE  22DA               	addwfc	fsr2h,f,c
 40614   0122B0  0E02               	movlw	2
 40615   0122B2  6EDF               	movwf	indf2,c
 40616   0122B4  EF6D  F090         	goto	l22909
 40617   0122B8                     l22967:
 40618                           
 40619                           ; BSR set to: 6
 40620                           ;../fatfs/ff.c: 4561:      fp->clust = clst;
 40621   0122B8  EE20 F014          	lfsr	2,20
 40622   0122BC  5162               	movf	f_lseek@fp& (0+255),w,b
 40623   0122BE  26D9               	addwf	fsr2l,f,c
 40624   0122C0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40625   0122C2  22DA               	addwfc	fsr2h,f,c
 40626   0122C4  C687  F4DE         	movff	f_lseek@clst,postinc2
 40627   0122C8  C688  F4DE         	movff	f_lseek@clst+1,postinc2
 40628   0122CC  C689  F4DE         	movff	f_lseek@clst+2,postinc2
 40629   0122D0  C68A  F4DE         	movff	f_lseek@clst+3,postinc2
 40630   0122D4                     l22969:
 40631                           
 40632                           ; BSR set to: 6
 40633                           ;../fatfs/ff.c: 4542:     while (ofs > bcs) {
 40634   0122D4  5164               	movf	f_lseek@ofs& (0+255),w,b
 40635   0122D6  5D81               	subwf	f_lseek@bcs& (0+255),w,b
 40636   0122D8  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 40637   0122DA  5982               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 40638   0122DC  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 40639   0122DE  5983               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 40640   0122E0  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 40641   0122E2  5984               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 40642   0122E4  A0D8               	btfss	status,0,c
 40643   0122E6  EF77  F091         	goto	u31781
 40644   0122EA  EF79  F091         	goto	u31780
 40645   0122EE                     u31781:
 40646   0122EE  EFB2  F090         	goto	l22927
 40647   0122F2                     u31780:
 40648   0122F2                     l22971:
 40649                           
 40650                           ; BSR set to: 6
 40651                           ;../fatfs/ff.c: 4563:     fp->fptr += ofs;
 40652   0122F2  EE20 F010          	lfsr	2,16
 40653   0122F6  5162               	movf	f_lseek@fp& (0+255),w,b
 40654   0122F8  26D9               	addwf	fsr2l,f,c
 40655   0122FA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40656   0122FC  22DA               	addwfc	fsr2h,f,c
 40657   0122FE  5164               	movf	f_lseek@ofs& (0+255),w,b
 40658   012300  26DE               	addwf	postinc2,f,c
 40659   012302  5165               	movf	(f_lseek@ofs+1)& (0+255),w,b
 40660   012304  22DE               	addwfc	postinc2,f,c
 40661   012306  5166               	movf	(f_lseek@ofs+2)& (0+255),w,b
 40662   012308  22DE               	addwfc	postinc2,f,c
 40663   01230A  5167               	movf	(f_lseek@ofs+3)& (0+255),w,b
 40664   01230C  22DE               	addwfc	postinc2,f,c
 40665   01230E                     
 40666                           ; BSR set to: 6
 40667                           ;../fatfs/ff.c: 4564:     if (ofs % ((UINT)512)) {
 40668   01230E  0EFF               	movlw	255
 40669   012310  1564               	andwf	f_lseek@ofs& (0+255),w,b
 40670   012312  6F68               	movwf	??_f_lseek& (0+255),b
 40671   012314  0E01               	movlw	1
 40672   012316  1565               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 40673   012318  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 40674   01231A  0E00               	movlw	0
 40675   01231C  1566               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 40676   01231E  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 40677   012320  0E00               	movlw	0
 40678   012322  1567               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 40679   012324  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 40680   012326  5168               	movf	??_f_lseek& (0+255),w,b
 40681   012328  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 40682   01232A  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 40683   01232C  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 40684   01232E  B4D8               	btfsc	status,2,c
 40685   012330  EF9C  F091         	goto	u31791
 40686   012334  EF9E  F091         	goto	u31790
 40687   012338                     u31791:
 40688   012338  EFE5  F091         	goto	l22987
 40689   01233C                     u31790:
 40690   01233C                     
 40691                           ; BSR set to: 6
 40692                           ;../fatfs/ff.c: 4565:      nsect = clst2sect(fs, clst);
 40693   01233C  C685  F510         	movff	f_lseek@fs,clst2sect@fs
 40694   012340  C686  F511         	movff	f_lseek@fs+1,clst2sect@fs+1
 40695   012344  C687  F512         	movff	f_lseek@clst,clst2sect@clst
 40696   012348  C688  F513         	movff	f_lseek@clst+1,clst2sect@clst+1
 40697   01234C  C689  F514         	movff	f_lseek@clst+2,clst2sect@clst+2
 40698   012350  C68A  F515         	movff	f_lseek@clst+3,clst2sect@clst+3
 40699   012354  EC7A  F0F0         	call	_clst2sect	;wreg free
 40700   012358  C510  F67C         	movff	?_clst2sect,f_lseek@nsect
 40701   01235C  C511  F67D         	movff	?_clst2sect+1,f_lseek@nsect+1
 40702   012360  C512  F67E         	movff	?_clst2sect+2,f_lseek@nsect+2
 40703   012364  C513  F67F         	movff	?_clst2sect+3,f_lseek@nsect+3
 40704   012368                     
 40705                           ;../fatfs/ff.c: 4566:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT
      +                          _ERR; };
 40706   012368  0106               	movlb	6	; () banked
 40707   01236A  517C               	movf	f_lseek@nsect& (0+255),w,b
 40708   01236C  117D               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 40709   01236E  117E               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 40710   012370  117F               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 40711   012372  A4D8               	btfss	status,2,c
 40712   012374  EFBE  F091         	goto	u31801
 40713   012378  EFC0  F091         	goto	u31800
 40714   01237C                     u31801:
 40715   01237C  EFCA  F091         	goto	l22985
 40716   012380                     u31800:
 40717   012380                     
 40718                           ; BSR set to: 6
 40719   012380  EE20 F00F          	lfsr	2,15
 40720   012384  5162               	movf	f_lseek@fp& (0+255),w,b
 40721   012386  26D9               	addwf	fsr2l,f,c
 40722   012388  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40723   01238A  22DA               	addwfc	fsr2h,f,c
 40724   01238C  0E02               	movlw	2
 40725   01238E  6EDF               	movwf	indf2,c
 40726   012390  EF6D  F090         	goto	l22909
 40727   012394                     l22985:
 40728                           
 40729                           ; BSR set to: 6
 40730                           ;../fatfs/ff.c: 4567:      nsect += (DWORD)(ofs / ((UINT)512));
 40731   012394  C664  F668         	movff	f_lseek@ofs,??_f_lseek
 40732   012398  C665  F669         	movff	f_lseek@ofs+1,??_f_lseek+1
 40733   01239C  C666  F66A         	movff	f_lseek@ofs+2,??_f_lseek+2
 40734   0123A0  C667  F66B         	movff	f_lseek@ofs+3,??_f_lseek+3
 40735   0123A4  0E0A               	movlw	10
 40736   0123A6  EFDA  F091         	goto	u31810
 40737   0123AA                     u31815:
 40738   0123AA  90D8               	bcf	status,0,c
 40739   0123AC  336B               	rrcf	(??_f_lseek+3)& (0+255),f,b
 40740   0123AE  336A               	rrcf	(??_f_lseek+2)& (0+255),f,b
 40741   0123B0  3369               	rrcf	(??_f_lseek+1)& (0+255),f,b
 40742   0123B2  3368               	rrcf	??_f_lseek& (0+255),f,b
 40743   0123B4                     u31810:
 40744   0123B4  2EE8               	decfsz	wreg,f,c
 40745   0123B6  EFD5  F091         	goto	u31815
 40746   0123BA  5168               	movf	??_f_lseek& (0+255),w,b
 40747   0123BC  277C               	addwf	f_lseek@nsect& (0+255),f,b
 40748   0123BE  5169               	movf	(??_f_lseek+1)& (0+255),w,b
 40749   0123C0  237D               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 40750   0123C2  516A               	movf	(??_f_lseek+2)& (0+255),w,b
 40751   0123C4  237E               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 40752   0123C6  516B               	movf	(??_f_lseek+3)& (0+255),w,b
 40753   0123C8  237F               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 40754   0123CA                     l22987:
 40755                           
 40756                           ; BSR set to: 6
 40757   0123CA  EE20 F010          	lfsr	2,16
 40758   0123CE  5162               	movf	f_lseek@fp& (0+255),w,b
 40759   0123D0  26D9               	addwf	fsr2l,f,c
 40760   0123D2  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40761   0123D4  22DA               	addwfc	fsr2h,f,c
 40762   0123D6  EE10 F00A          	lfsr	1,10
 40763   0123DA  5162               	movf	f_lseek@fp& (0+255),w,b
 40764   0123DC  26E1               	addwf	fsr1l,f,c
 40765   0123DE  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40766   0123E0  22E2               	addwfc	fsr1h,f,c
 40767   0123E2  50DE               	movf	postinc2,w,c
 40768   0123E4  5CE6               	subwf	postinc1,w,c
 40769   0123E6  50DE               	movf	postinc2,w,c
 40770   0123E8  58E6               	subwfb	postinc1,w,c
 40771   0123EA  50DE               	movf	postinc2,w,c
 40772   0123EC  58E6               	subwfb	postinc1,w,c
 40773   0123EE  50DE               	movf	postinc2,w,c
 40774   0123F0  58E6               	subwfb	postinc1,w,c
 40775   0123F2  B0D8               	btfsc	status,0,c
 40776   0123F4  EFFE  F091         	goto	u31821
 40777   0123F8  EF00  F092         	goto	u31820
 40778   0123FC                     u31821:
 40779   0123FC  EF1C  F092         	goto	l22993
 40780   012400                     u31820:
 40781   012400                     
 40782                           ; BSR set to: 6
 40783                           ;../fatfs/ff.c: 4572:    fp->obj.objsize = fp->fptr;
 40784   012400  EE20 F010          	lfsr	2,16
 40785   012404  5162               	movf	f_lseek@fp& (0+255),w,b
 40786   012406  26D9               	addwf	fsr2l,f,c
 40787   012408  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40788   01240A  22DA               	addwfc	fsr2h,f,c
 40789   01240C  EE10 F00A          	lfsr	1,10
 40790   012410  5162               	movf	f_lseek@fp& (0+255),w,b
 40791   012412  26E1               	addwf	fsr1l,f,c
 40792   012414  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40793   012416  22E2               	addwfc	fsr1h,f,c
 40794   012418  C4DE F4E6          	movff	postinc2,postinc1
 40795   01241C  C4DE F4E6          	movff	postinc2,postinc1
 40796   012420  C4DE F4E6          	movff	postinc2,postinc1
 40797   012424  C4DE F4E6          	movff	postinc2,postinc1
 40798   012428                     
 40799                           ; BSR set to: 6
 40800                           ;../fatfs/ff.c: 4573:    fp->flag |= 0x40;
 40801   012428  EE20 F00E          	lfsr	2,14
 40802   01242C  5162               	movf	f_lseek@fp& (0+255),w,b
 40803   01242E  26D9               	addwf	fsr2l,f,c
 40804   012430  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40805   012432  22DA               	addwfc	fsr2h,f,c
 40806   012434  0E00               	movlw	0
 40807   012436  8CDB               	bsf	plusw2,6,c
 40808   012438                     l22993:
 40809                           
 40810                           ; BSR set to: 6
 40811                           ;../fatfs/ff.c: 4575:   if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
 40812   012438  EE20 F010          	lfsr	2,16
 40813   01243C  5162               	movf	f_lseek@fp& (0+255),w,b
 40814   01243E  26D9               	addwf	fsr2l,f,c
 40815   012440  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40816   012442  22DA               	addwfc	fsr2h,f,c
 40817   012444  0EFF               	movlw	255
 40818   012446  14DE               	andwf	postinc2,w,c
 40819   012448  6F68               	movwf	??_f_lseek& (0+255),b
 40820   01244A  0E01               	movlw	1
 40821   01244C  14DE               	andwf	postinc2,w,c
 40822   01244E  6F69               	movwf	(??_f_lseek+1)& (0+255),b
 40823   012450  0E00               	movlw	0
 40824   012452  14DE               	andwf	postinc2,w,c
 40825   012454  6F6A               	movwf	(??_f_lseek+2)& (0+255),b
 40826   012456  0E00               	movlw	0
 40827   012458  14DE               	andwf	postinc2,w,c
 40828   01245A  6F6B               	movwf	(??_f_lseek+3)& (0+255),b
 40829   01245C  5168               	movf	??_f_lseek& (0+255),w,b
 40830   01245E  1169               	iorwf	(??_f_lseek+1)& (0+255),w,b
 40831   012460  116A               	iorwf	(??_f_lseek+2)& (0+255),w,b
 40832   012462  116B               	iorwf	(??_f_lseek+3)& (0+255),w,b
 40833   012464  B4D8               	btfsc	status,2,c
 40834   012466  EF37  F092         	goto	u31831
 40835   01246A  EF39  F092         	goto	u31830
 40836   01246E                     u31831:
 40837   01246E  EFFF  F08E         	goto	l22879
 40838   012472                     u31830:
 40839   012472                     
 40840                           ; BSR set to: 6
 40841   012472  EE20 F018          	lfsr	2,24
 40842   012476  5162               	movf	f_lseek@fp& (0+255),w,b
 40843   012478  26D9               	addwf	fsr2l,f,c
 40844   01247A  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40845   01247C  22DA               	addwfc	fsr2h,f,c
 40846   01247E  517C               	movf	f_lseek@nsect& (0+255),w,b
 40847   012480  18DE               	xorwf	postinc2,w,c
 40848   012482  E10F               	bnz	u31840
 40849   012484  517D               	movf	(f_lseek@nsect+1)& (0+255),w,b
 40850   012486  18DE               	xorwf	postinc2,w,c
 40851   012488  E10C               	bnz	u31840
 40852   01248A  517E               	movf	(f_lseek@nsect+2)& (0+255),w,b
 40853   01248C  18DE               	xorwf	postinc2,w,c
 40854   01248E  E109               	bnz	u31840
 40855   012490  517F               	movf	(f_lseek@nsect+3)& (0+255),w,b
 40856   012492  18DE               	xorwf	postinc2,w,c
 40857   012494  B4D8               	btfsc	status,2,c
 40858   012496  EF4F  F092         	goto	u31841
 40859   01249A  EF51  F092         	goto	u31840
 40860   01249E                     u31841:
 40861   01249E  EFFF  F08E         	goto	l22879
 40862   0124A2                     u31840:
 40863   0124A2                     
 40864                           ; BSR set to: 6
 40865                           ;../fatfs/ff.c: 4578:    if (fp->flag & 0x80) {
 40866   0124A2  EE20 F00E          	lfsr	2,14
 40867   0124A6  5162               	movf	f_lseek@fp& (0+255),w,b
 40868   0124A8  26D9               	addwf	fsr2l,f,c
 40869   0124AA  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40870   0124AC  22DA               	addwfc	fsr2h,f,c
 40871   0124AE  AEDF               	btfss	indf2,7,c
 40872   0124B0  EF5C  F092         	goto	u31851
 40873   0124B4  EF5E  F092         	goto	u31850
 40874   0124B8                     u31851:
 40875   0124B8  EF9B  F092         	goto	l23009
 40876   0124BC                     u31850:
 40877   0124BC                     
 40878                           ; BSR set to: 6
 40879                           ;../fatfs/ff.c: 4579:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp
      +                          ->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 40880   0124BC  0E22               	movlw	34
 40881   0124BE  2562               	addwf	f_lseek@fp& (0+255),w,b
 40882   0124C0  6F00               	movwf	disk_write@buff& (0+255),b
 40883   0124C2  0E00               	movlw	0
 40884   0124C4  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 40885   0124C6  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 40886   0124C8  EE20 F018          	lfsr	2,24
 40887   0124CC  5162               	movf	f_lseek@fp& (0+255),w,b
 40888   0124CE  26D9               	addwf	fsr2l,f,c
 40889   0124D0  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40890   0124D2  22DA               	addwfc	fsr2h,f,c
 40891   0124D4  C4DE F602          	movff	postinc2,disk_write@sector
 40892   0124D8  C4DE F603          	movff	postinc2,disk_write@sector+1
 40893   0124DC  C4DE F604          	movff	postinc2,disk_write@sector+2
 40894   0124E0  C4DE F605          	movff	postinc2,disk_write@sector+3
 40895   0124E4  0E00               	movlw	0
 40896   0124E6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 40897   0124E8  0E01               	movlw	1
 40898   0124EA  6F06               	movwf	disk_write@count& (0+255),b
 40899   0124EC  EE20 F001          	lfsr	2,1
 40900   0124F0  5185               	movf	f_lseek@fs& (0+255),w,b
 40901   0124F2  26D9               	addwf	fsr2l,f,c
 40902   0124F4  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 40903   0124F6  22DA               	addwfc	fsr2h,f,c
 40904   0124F8  50DF               	movf	indf2,w,c
 40905   0124FA  EC7E  F0F3         	call	_disk_write
 40906   0124FE  0900               	iorlw	0
 40907   012500  B4D8               	btfsc	status,2,c
 40908   012502  EF85  F092         	goto	u31861
 40909   012506  EF87  F092         	goto	u31860
 40910   01250A                     u31861:
 40911   01250A  EF92  F092         	goto	l23007
 40912   01250E                     u31860:
 40913   01250E  0106               	movlb	6	; () banked
 40914   012510  EE20 F00F          	lfsr	2,15
 40915   012514  5162               	movf	f_lseek@fp& (0+255),w,b
 40916   012516  26D9               	addwf	fsr2l,f,c
 40917   012518  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40918   01251A  22DA               	addwfc	fsr2h,f,c
 40919   01251C  0E01               	movlw	1
 40920   01251E  6EDF               	movwf	indf2,c
 40921   012520  EF86  F090         	goto	l22917
 40922   012524                     l23007:
 40923                           
 40924                           ;../fatfs/ff.c: 4580:     fp->flag &= (BYTE)~0x80;
 40925   012524  0106               	movlb	6	; () banked
 40926   012526  EE20 F00E          	lfsr	2,14
 40927   01252A  5162               	movf	f_lseek@fp& (0+255),w,b
 40928   01252C  26D9               	addwf	fsr2l,f,c
 40929   01252E  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40930   012530  22DA               	addwfc	fsr2h,f,c
 40931   012532  0E7F               	movlw	127
 40932   012534  16DF               	andwf	indf2,f,c
 40933   012536                     l23009:
 40934                           
 40935                           ; BSR set to: 6
 40936                           ;../fatfs/ff.c: 4583:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 40937   012536  0E22               	movlw	34
 40938   012538  2562               	addwf	f_lseek@fp& (0+255),w,b
 40939   01253A  6F00               	movwf	disk_read@buff& (0+255),b
 40940   01253C  0E00               	movlw	0
 40941   01253E  2163               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 40942   012540  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 40943   012542  C67C  F602         	movff	f_lseek@nsect,disk_read@sector
 40944   012546  C67D  F603         	movff	f_lseek@nsect+1,disk_read@sector+1
 40945   01254A  C67E  F604         	movff	f_lseek@nsect+2,disk_read@sector+2
 40946   01254E  C67F  F605         	movff	f_lseek@nsect+3,disk_read@sector+3
 40947   012552  0E00               	movlw	0
 40948   012554  6F07               	movwf	(disk_read@count+1)& (0+255),b
 40949   012556  0E01               	movlw	1
 40950   012558  6F06               	movwf	disk_read@count& (0+255),b
 40951   01255A  EE20 F001          	lfsr	2,1
 40952   01255E  5185               	movf	f_lseek@fs& (0+255),w,b
 40953   012560  26D9               	addwf	fsr2l,f,c
 40954   012562  5186               	movf	(f_lseek@fs+1)& (0+255),w,b
 40955   012564  22DA               	addwfc	fsr2h,f,c
 40956   012566  50DF               	movf	indf2,w,c
 40957   012568  ECD5  F0F3         	call	_disk_read
 40958   01256C  0900               	iorlw	0
 40959   01256E  B4D8               	btfsc	status,2,c
 40960   012570  EFBC  F092         	goto	u31871
 40961   012574  EFBE  F092         	goto	u31870
 40962   012578                     u31871:
 40963   012578  EFC9  F092         	goto	l23017
 40964   01257C                     u31870:
 40965   01257C  0106               	movlb	6	; () banked
 40966   01257E  EE20 F00F          	lfsr	2,15
 40967   012582  5162               	movf	f_lseek@fp& (0+255),w,b
 40968   012584  26D9               	addwf	fsr2l,f,c
 40969   012586  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40970   012588  22DA               	addwfc	fsr2h,f,c
 40971   01258A  0E01               	movlw	1
 40972   01258C  6EDF               	movwf	indf2,c
 40973   01258E  EF86  F090         	goto	l22917
 40974   012592                     l23017:
 40975                           
 40976                           ;../fatfs/ff.c: 4585:    fp->sect = nsect;
 40977   012592  0106               	movlb	6	; () banked
 40978   012594  EE20 F018          	lfsr	2,24
 40979   012598  5162               	movf	f_lseek@fp& (0+255),w,b
 40980   01259A  26D9               	addwf	fsr2l,f,c
 40981   01259C  5163               	movf	(f_lseek@fp+1)& (0+255),w,b
 40982   01259E  22DA               	addwfc	fsr2h,f,c
 40983   0125A0  C67C  F4DE         	movff	f_lseek@nsect,postinc2
 40984   0125A4  C67D  F4DE         	movff	f_lseek@nsect+1,postinc2
 40985   0125A8  C67E  F4DE         	movff	f_lseek@nsect+2,postinc2
 40986   0125AC  C67F  F4DE         	movff	f_lseek@nsect+3,postinc2
 40987   0125B0  EFFF  F08E         	goto	l22879
 40988   0125B4                     l791:
 40989                           
 40990                           ; BSR set to: 6
 40991   0125B4  0012               	return		;funcret
 40992   0125B6                     __end_of_f_lseek:
 40993                           	callstack 0
 40994                           
 40995 ;; *************** function _create_chain *****************
 40996 ;; Defined at:
 40997 ;;		line 1525 in file "../fatfs/ff.c"
 40998 ;; Parameters:    Size  Location     Type
 40999 ;;  obj             2   69[BANK6 ] PTR struct .
 41000 ;;		 -> scan_files1@dir(40), scan_files@dir(40), pb$fp(2), f_rename@djn(40), 
 41001 ;;		 -> f_rename@djo(40), f_mkdir@sobj(14), f_mkdir@dj(40), f_unlink@sdj(40), 
 41002 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), 
 41003 ;;		 -> f_open@dj(40), 
 41004 ;;  clst            4   71[BANK6 ] unsigned long 
 41005 ;; Auto vars:     Size  Location     Type
 41006 ;;  cs              4   94[BANK6 ] unsigned long 
 41007 ;;  ncl             4   88[BANK6 ] unsigned long 
 41008 ;;  scl             4   84[BANK6 ] unsigned long 
 41009 ;;  fs              2   92[BANK6 ] PTR struct .
 41010 ;;		 -> fs(564), NULL(0), 
 41011 ;;  res             1   83[BANK6 ] enum E597
 41012 ;; Return value:  Size  Location     Type
 41013 ;;                  4   69[BANK6 ] unsigned long 
 41014 ;; Registers used:
 41015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41016 ;; Tracked objects:
 41017 ;;		On entry : 0/0
 41018 ;;		On exit  : 0/0
 41019 ;;		Unchanged: 0/0
 41020 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41021 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41022 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41023 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41024 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41025 ;;Total ram usage:       29 bytes
 41026 ;; Hardware stack levels used: 1
 41027 ;; Hardware stack levels required when called: 15
 41028 ;; This function calls:
 41029 ;;		_get_fat
 41030 ;;		_put_fat
 41031 ;; This function is called by:
 41032 ;;		_dir_next
 41033 ;;		_f_write
 41034 ;;		_f_lseek
 41035 ;;		_f_mkdir
 41036 ;; This function uses a non-reentrant model
 41037 ;;
 41038                           
 41039                           	psect	text106
 41040   013AF8                     __ptext106:
 41041                           	callstack 0
 41042   013AF8                     _create_chain:
 41043                           	callstack 104
 41044   013AF8                     
 41045                           ;../fatfs/ff.c: 1526:  FFOBJID* obj,;../fatfs/ff.c: 1527:  DWORD clst;../fatfs/ff.c: 152
      +                          9: {;../fatfs/ff.c: 1530:  DWORD cs, ncl, scl;;../fatfs/ff.c: 1531:  FRESULT res;;../fat
      +                          fs/ff.c: 1532:  FATFS *fs = obj->fs;
 41046   013AF8  C645  F4D9         	movff	create_chain@obj,fsr2l
 41047   013AFC  C646  F4DA         	movff	create_chain@obj+1,fsr2h
 41048   013B00  C4DE F65C          	movff	postinc2,create_chain@fs
 41049   013B04  C4DD F65D          	movff	postdec2,create_chain@fs+1
 41050   013B08                     
 41051                           ;../fatfs/ff.c: 1535:  if (clst == 0) {
 41052   013B08  0106               	movlb	6	; () banked
 41053   013B0A  5147               	movf	create_chain@clst& (0+255),w,b
 41054   013B0C  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 41055   013B0E  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 41056   013B10  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 41057   013B12  A4D8               	btfss	status,2,c
 41058   013B14  EF8E  F09D         	goto	u28271
 41059   013B18  EF90  F09D         	goto	u28270
 41060   013B1C                     u28271:
 41061   013B1C  EFC8  F09D         	goto	l21185
 41062   013B20                     u28270:
 41063   013B20                     
 41064                           ; BSR set to: 6
 41065                           ;../fatfs/ff.c: 1536:   scl = fs->last_clst;
 41066   013B20  EE20 F00C          	lfsr	2,12
 41067   013B24  515C               	movf	create_chain@fs& (0+255),w,b
 41068   013B26  26D9               	addwf	fsr2l,f,c
 41069   013B28  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41070   013B2A  22DA               	addwfc	fsr2h,f,c
 41071   013B2C  C4DE F654          	movff	postinc2,create_chain@scl
 41072   013B30  C4DE F655          	movff	postinc2,create_chain@scl+1
 41073   013B34  C4DE F656          	movff	postinc2,create_chain@scl+2
 41074   013B38  C4DE F657          	movff	postinc2,create_chain@scl+3
 41075   013B3C                     
 41076                           ; BSR set to: 6
 41077                           ;../fatfs/ff.c: 1537:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 41078   013B3C  5154               	movf	create_chain@scl& (0+255),w,b
 41079   013B3E  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 41080   013B40  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 41081   013B42  1157               	iorwf	(create_chain@scl+3)& (0+255),w,b
 41082   013B44  B4D8               	btfsc	status,2,c
 41083   013B46  EFA7  F09D         	goto	u28281
 41084   013B4A  EFA9  F09D         	goto	u28280
 41085   013B4E                     u28281:
 41086   013B4E  EFBE  F09D         	goto	l21183
 41087   013B52                     u28280:
 41088   013B52                     
 41089                           ; BSR set to: 6
 41090   013B52  EE20 F018          	lfsr	2,24
 41091   013B56  515C               	movf	create_chain@fs& (0+255),w,b
 41092   013B58  26D9               	addwf	fsr2l,f,c
 41093   013B5A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41094   013B5C  22DA               	addwfc	fsr2h,f,c
 41095   013B5E  50DE               	movf	postinc2,w,c
 41096   013B60  5D54               	subwf	create_chain@scl& (0+255),w,b
 41097   013B62  50DE               	movf	postinc2,w,c
 41098   013B64  5955               	subwfb	(create_chain@scl+1)& (0+255),w,b
 41099   013B66  50DE               	movf	postinc2,w,c
 41100   013B68  5956               	subwfb	(create_chain@scl+2)& (0+255),w,b
 41101   013B6A  50DE               	movf	postinc2,w,c
 41102   013B6C  5957               	subwfb	(create_chain@scl+3)& (0+255),w,b
 41103   013B6E  A0D8               	btfss	status,0,c
 41104   013B70  EFBC  F09D         	goto	u28291
 41105   013B74  EFBE  F09D         	goto	u28290
 41106   013B78                     u28291:
 41107   013B78  EF2D  F09E         	goto	l21201
 41108   013B7C                     u28290:
 41109   013B7C                     l21183:
 41110                           
 41111                           ; BSR set to: 6
 41112   013B7C  0E01               	movlw	1
 41113   013B7E  6F54               	movwf	create_chain@scl& (0+255),b
 41114   013B80  0E00               	movlw	0
 41115   013B82  6F55               	movwf	(create_chain@scl+1)& (0+255),b
 41116   013B84  0E00               	movlw	0
 41117   013B86  6F56               	movwf	(create_chain@scl+2)& (0+255),b
 41118   013B88  0E00               	movlw	0
 41119   013B8A  6F57               	movwf	(create_chain@scl+3)& (0+255),b
 41120   013B8C  EF2D  F09E         	goto	l21201
 41121   013B90                     l21185:
 41122                           
 41123                           ; BSR set to: 6
 41124                           ;../fatfs/ff.c: 1540:   cs = get_fat(obj, clst);
 41125   013B90  C645  F624         	movff	create_chain@obj,get_fat@obj
 41126   013B94  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 41127   013B98  C647  F626         	movff	create_chain@clst,get_fat@clst
 41128   013B9C  C648  F627         	movff	create_chain@clst+1,get_fat@clst+1
 41129   013BA0  C649  F628         	movff	create_chain@clst+2,get_fat@clst+2
 41130   013BA4  C64A  F629         	movff	create_chain@clst+3,get_fat@clst+3
 41131   013BA8  ECF7  F0B4         	call	_get_fat	;wreg free
 41132   013BAC  C624  F65E         	movff	?_get_fat,create_chain@cs
 41133   013BB0  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 41134   013BB4  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 41135   013BB8  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 41136   013BBC                     
 41137                           ;../fatfs/ff.c: 1541:   if (cs < 2) return 1;
 41138   013BBC  0106               	movlb	6	; () banked
 41139   013BBE  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 41140   013BC0  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41141   013BC2  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41142   013BC4  E107               	bnz	u28301
 41143   013BC6  0E02               	movlw	2
 41144   013BC8  5D5E               	subwf	create_chain@cs& (0+255),w,b
 41145   013BCA  B0D8               	btfsc	status,0,c
 41146   013BCC  EFEA  F09D         	goto	u28301
 41147   013BD0  EFEC  F09D         	goto	u28300
 41148   013BD4                     u28301:
 41149   013BD4  EFF6  F09D         	goto	l21193
 41150   013BD8                     u28300:
 41151   013BD8                     
 41152                           ; BSR set to: 6
 41153   013BD8  0E01               	movlw	1
 41154   013BDA  6F45               	movwf	?_create_chain& (0+255),b
 41155   013BDC  0E00               	movlw	0
 41156   013BDE  6F46               	movwf	(?_create_chain+1)& (0+255),b
 41157   013BE0  0E00               	movlw	0
 41158   013BE2  6F47               	movwf	(?_create_chain+2)& (0+255),b
 41159   013BE4  0E00               	movlw	0
 41160   013BE6  6F48               	movwf	(?_create_chain+3)& (0+255),b
 41161   013BE8  EF53  F0A0         	goto	l300
 41162   013BEC                     l21193:
 41163                           
 41164                           ; BSR set to: 6
 41165                           ;../fatfs/ff.c: 1542:   if (cs == 0xFFFFFFFF) return cs;
 41166   013BEC  295E               	incf	create_chain@cs& (0+255),w,b
 41167   013BEE  E10A               	bnz	u28311
 41168   013BF0  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 41169   013BF2  E108               	bnz	u28311
 41170   013BF4  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 41171   013BF6  E106               	bnz	u28311
 41172   013BF8  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 41173   013BFA  A4D8               	btfss	status,2,c
 41174   013BFC  EF02  F09E         	goto	u28311
 41175   013C00  EF04  F09E         	goto	u28310
 41176   013C04                     u28311:
 41177   013C04  EF0E  F09E         	goto	l21197
 41178   013C08                     u28310:
 41179   013C08                     l21195:
 41180                           
 41181                           ; BSR set to: 6
 41182   013C08  C65E  F645         	movff	create_chain@cs,?_create_chain
 41183   013C0C  C65F  F646         	movff	create_chain@cs+1,?_create_chain+1
 41184   013C10  C660  F647         	movff	create_chain@cs+2,?_create_chain+2
 41185   013C14  C661  F648         	movff	create_chain@cs+3,?_create_chain+3
 41186   013C18  EF53  F0A0         	goto	l300
 41187   013C1C                     l21197:
 41188                           
 41189                           ; BSR set to: 6
 41190                           ;../fatfs/ff.c: 1543:   if (cs < fs->n_fatent) return cs;
 41191   013C1C  EE20 F018          	lfsr	2,24
 41192   013C20  515C               	movf	create_chain@fs& (0+255),w,b
 41193   013C22  26D9               	addwf	fsr2l,f,c
 41194   013C24  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41195   013C26  22DA               	addwfc	fsr2h,f,c
 41196   013C28  50DE               	movf	postinc2,w,c
 41197   013C2A  5D5E               	subwf	create_chain@cs& (0+255),w,b
 41198   013C2C  50DE               	movf	postinc2,w,c
 41199   013C2E  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 41200   013C30  50DE               	movf	postinc2,w,c
 41201   013C32  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 41202   013C34  50DE               	movf	postinc2,w,c
 41203   013C36  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 41204   013C38  B0D8               	btfsc	status,0,c
 41205   013C3A  EF21  F09E         	goto	u28321
 41206   013C3E  EF23  F09E         	goto	u28320
 41207   013C42                     u28321:
 41208   013C42  EF25  F09E         	goto	l302
 41209   013C46                     u28320:
 41210   013C46  EF04  F09E         	goto	l21195
 41211   013C4A                     l302:
 41212                           
 41213                           ; BSR set to: 6
 41214                           ;../fatfs/ff.c: 1544:   scl = clst;
 41215   013C4A  C647  F654         	movff	create_chain@clst,create_chain@scl
 41216   013C4E  C648  F655         	movff	create_chain@clst+1,create_chain@scl+1
 41217   013C52  C649  F656         	movff	create_chain@clst+2,create_chain@scl+2
 41218   013C56  C64A  F657         	movff	create_chain@clst+3,create_chain@scl+3
 41219   013C5A                     l21201:
 41220                           
 41221                           ; BSR set to: 6
 41222                           ;../fatfs/ff.c: 1546:  if (fs->free_clst == 0) return 0;
 41223   013C5A  EE20 F010          	lfsr	2,16
 41224   013C5E  515C               	movf	create_chain@fs& (0+255),w,b
 41225   013C60  26D9               	addwf	fsr2l,f,c
 41226   013C62  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41227   013C64  22DA               	addwfc	fsr2h,f,c
 41228   013C66  50DE               	movf	postinc2,w,c
 41229   013C68  10DE               	iorwf	postinc2,w,c
 41230   013C6A  10DE               	iorwf	postinc2,w,c
 41231   013C6C  10DE               	iorwf	postinc2,w,c
 41232   013C6E  A4D8               	btfss	status,2,c
 41233   013C70  EF3C  F09E         	goto	u28331
 41234   013C74  EF3E  F09E         	goto	u28330
 41235   013C78                     u28331:
 41236   013C78  EF48  F09E         	goto	l21207
 41237   013C7C                     u28330:
 41238   013C7C                     l21203:
 41239                           
 41240                           ; BSR set to: 6
 41241   013C7C  0E00               	movlw	0
 41242   013C7E  6F45               	movwf	?_create_chain& (0+255),b
 41243   013C80  0E00               	movlw	0
 41244   013C82  6F46               	movwf	(?_create_chain+1)& (0+255),b
 41245   013C84  0E00               	movlw	0
 41246   013C86  6F47               	movwf	(?_create_chain+2)& (0+255),b
 41247   013C88  0E00               	movlw	0
 41248   013C8A  6F48               	movwf	(?_create_chain+3)& (0+255),b
 41249   013C8C  EF53  F0A0         	goto	l300
 41250   013C90                     l21207:
 41251                           
 41252                           ; BSR set to: 6
 41253                           ;../fatfs/ff.c: 1574:  {;../fatfs/ff.c: 1575:   ncl = 0;
 41254   013C90  0E00               	movlw	0
 41255   013C92  6F58               	movwf	create_chain@ncl& (0+255),b
 41256   013C94  0E00               	movlw	0
 41257   013C96  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41258   013C98  0E00               	movlw	0
 41259   013C9A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41260   013C9C  0E00               	movlw	0
 41261   013C9E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41262   013CA0                     
 41263                           ; BSR set to: 6
 41264                           ;../fatfs/ff.c: 1576:   if (scl == clst) {
 41265   013CA0  5147               	movf	create_chain@clst& (0+255),w,b
 41266   013CA2  1954               	xorwf	create_chain@scl& (0+255),w,b
 41267   013CA4  E10D               	bnz	u28341
 41268   013CA6  5148               	movf	(create_chain@clst+1)& (0+255),w,b
 41269   013CA8  1955               	xorwf	(create_chain@scl+1)& (0+255),w,b
 41270   013CAA  E10A               	bnz	u28341
 41271   013CAC  5149               	movf	(create_chain@clst+2)& (0+255),w,b
 41272   013CAE  1956               	xorwf	(create_chain@scl+2)& (0+255),w,b
 41273   013CB0  E107               	bnz	u28341
 41274   013CB2  514A               	movf	(create_chain@clst+3)& (0+255),w,b
 41275   013CB4  1957               	xorwf	(create_chain@scl+3)& (0+255),w,b
 41276   013CB6  A4D8               	btfss	status,2,c
 41277   013CB8  EF60  F09E         	goto	u28341
 41278   013CBC  EF62  F09E         	goto	u28340
 41279   013CC0                     u28341:
 41280   013CC0  EF08  F09F         	goto	l21235
 41281   013CC4                     u28340:
 41282   013CC4                     
 41283                           ; BSR set to: 6
 41284                           ;../fatfs/ff.c: 1577:    ncl = scl + 1;
 41285   013CC4  0E01               	movlw	1
 41286   013CC6  2554               	addwf	create_chain@scl& (0+255),w,b
 41287   013CC8  6F58               	movwf	create_chain@ncl& (0+255),b
 41288   013CCA  0E00               	movlw	0
 41289   013CCC  2155               	addwfc	(create_chain@scl+1)& (0+255),w,b
 41290   013CCE  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41291   013CD0  0E00               	movlw	0
 41292   013CD2  2156               	addwfc	(create_chain@scl+2)& (0+255),w,b
 41293   013CD4  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41294   013CD6  0E00               	movlw	0
 41295   013CD8  2157               	addwfc	(create_chain@scl+3)& (0+255),w,b
 41296   013CDA  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41297   013CDC                     
 41298                           ; BSR set to: 6
 41299                           ;../fatfs/ff.c: 1578:    if (ncl >= fs->n_fatent) ncl = 2;
 41300   013CDC  EE20 F018          	lfsr	2,24
 41301   013CE0  515C               	movf	create_chain@fs& (0+255),w,b
 41302   013CE2  26D9               	addwf	fsr2l,f,c
 41303   013CE4  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41304   013CE6  22DA               	addwfc	fsr2h,f,c
 41305   013CE8  50DE               	movf	postinc2,w,c
 41306   013CEA  5D58               	subwf	create_chain@ncl& (0+255),w,b
 41307   013CEC  50DE               	movf	postinc2,w,c
 41308   013CEE  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 41309   013CF0  50DE               	movf	postinc2,w,c
 41310   013CF2  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 41311   013CF4  50DE               	movf	postinc2,w,c
 41312   013CF6  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 41313   013CF8  A0D8               	btfss	status,0,c
 41314   013CFA  EF81  F09E         	goto	u28351
 41315   013CFE  EF83  F09E         	goto	u28350
 41316   013D02                     u28351:
 41317   013D02  EF8B  F09E         	goto	l21217
 41318   013D06                     u28350:
 41319   013D06                     
 41320                           ; BSR set to: 6
 41321   013D06  0E02               	movlw	2
 41322   013D08  6F58               	movwf	create_chain@ncl& (0+255),b
 41323   013D0A  0E00               	movlw	0
 41324   013D0C  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41325   013D0E  0E00               	movlw	0
 41326   013D10  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41327   013D12  0E00               	movlw	0
 41328   013D14  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41329   013D16                     l21217:
 41330                           
 41331                           ; BSR set to: 6
 41332                           ;../fatfs/ff.c: 1579:    cs = get_fat(obj, ncl);
 41333   013D16  C645  F624         	movff	create_chain@obj,get_fat@obj
 41334   013D1A  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 41335   013D1E  C658  F626         	movff	create_chain@ncl,get_fat@clst
 41336   013D22  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 41337   013D26  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 41338   013D2A  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 41339   013D2E  ECF7  F0B4         	call	_get_fat	;wreg free
 41340   013D32  C624  F65E         	movff	?_get_fat,create_chain@cs
 41341   013D36  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 41342   013D3A  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 41343   013D3E  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 41344   013D42                     
 41345                           ;../fatfs/ff.c: 1580:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 41346   013D42  0106               	movlb	6	; () banked
 41347   013D44  055E               	decf	create_chain@cs& (0+255),w,b
 41348   013D46  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41349   013D48  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41350   013D4A  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 41351   013D4C  B4D8               	btfsc	status,2,c
 41352   013D4E  EFAB  F09E         	goto	u28361
 41353   013D52  EFAD  F09E         	goto	u28360
 41354   013D56                     u28361:
 41355   013D56  EF04  F09E         	goto	l21195
 41356   013D5A                     u28360:
 41357   013D5A                     
 41358                           ; BSR set to: 6
 41359   013D5A  295E               	incf	create_chain@cs& (0+255),w,b
 41360   013D5C  E10A               	bnz	u28371
 41361   013D5E  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 41362   013D60  E108               	bnz	u28371
 41363   013D62  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 41364   013D64  E106               	bnz	u28371
 41365   013D66  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 41366   013D68  A4D8               	btfss	status,2,c
 41367   013D6A  EFB9  F09E         	goto	u28371
 41368   013D6E  EFBB  F09E         	goto	u28370
 41369   013D72                     u28371:
 41370   013D72  EFBD  F09E         	goto	l21223
 41371   013D76                     u28370:
 41372   013D76  EF04  F09E         	goto	l21195
 41373   013D7A                     l21223:
 41374                           
 41375                           ; BSR set to: 6
 41376                           ;../fatfs/ff.c: 1581:    if (cs != 0) {
 41377   013D7A  515E               	movf	create_chain@cs& (0+255),w,b
 41378   013D7C  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41379   013D7E  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41380   013D80  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 41381   013D82  B4D8               	btfsc	status,2,c
 41382   013D84  EFC6  F09E         	goto	u28381
 41383   013D88  EFC8  F09E         	goto	u28380
 41384   013D8C                     u28381:
 41385   013D8C  EF08  F09F         	goto	l21235
 41386   013D90                     u28380:
 41387   013D90                     
 41388                           ; BSR set to: 6
 41389                           ;../fatfs/ff.c: 1582:     cs = fs->last_clst;
 41390   013D90  EE20 F00C          	lfsr	2,12
 41391   013D94  515C               	movf	create_chain@fs& (0+255),w,b
 41392   013D96  26D9               	addwf	fsr2l,f,c
 41393   013D98  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41394   013D9A  22DA               	addwfc	fsr2h,f,c
 41395   013D9C  C4DE F65E          	movff	postinc2,create_chain@cs
 41396   013DA0  C4DE F65F          	movff	postinc2,create_chain@cs+1
 41397   013DA4  C4DE F660          	movff	postinc2,create_chain@cs+2
 41398   013DA8  C4DE F661          	movff	postinc2,create_chain@cs+3
 41399   013DAC                     
 41400                           ; BSR set to: 6
 41401                           ;../fatfs/ff.c: 1583:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 41402   013DAC  5161               	movf	(create_chain@cs+3)& (0+255),w,b
 41403   013DAE  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41404   013DB0  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41405   013DB2  E109               	bnz	u28390
 41406   013DB4  0E02               	movlw	2
 41407   013DB6  5D5E               	subwf	create_chain@cs& (0+255),w,b
 41408   013DB8  A0D8               	btfss	status,0,c
 41409   013DBA  EFE1  F09E         	goto	u28391
 41410   013DBE  EFE3  F09E         	goto	u28390
 41411   013DC2                     u28391:
 41412   013DC2  EF00  F09F         	goto	l21233
 41413   013DC6                     u28390:
 41414   013DC6                     
 41415                           ; BSR set to: 6
 41416   013DC6  EE20 F018          	lfsr	2,24
 41417   013DCA  515C               	movf	create_chain@fs& (0+255),w,b
 41418   013DCC  26D9               	addwf	fsr2l,f,c
 41419   013DCE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41420   013DD0  22DA               	addwfc	fsr2h,f,c
 41421   013DD2  50DE               	movf	postinc2,w,c
 41422   013DD4  5D5E               	subwf	create_chain@cs& (0+255),w,b
 41423   013DD6  50DE               	movf	postinc2,w,c
 41424   013DD8  595F               	subwfb	(create_chain@cs+1)& (0+255),w,b
 41425   013DDA  50DE               	movf	postinc2,w,c
 41426   013DDC  5960               	subwfb	(create_chain@cs+2)& (0+255),w,b
 41427   013DDE  50DE               	movf	postinc2,w,c
 41428   013DE0  5961               	subwfb	(create_chain@cs+3)& (0+255),w,b
 41429   013DE2  B0D8               	btfsc	status,0,c
 41430   013DE4  EFF6  F09E         	goto	u28401
 41431   013DE8  EFF8  F09E         	goto	u28400
 41432   013DEC                     u28401:
 41433   013DEC  EF00  F09F         	goto	l21233
 41434   013DF0                     u28400:
 41435   013DF0                     
 41436                           ; BSR set to: 6
 41437   013DF0  C65E  F654         	movff	create_chain@cs,create_chain@scl
 41438   013DF4  C65F  F655         	movff	create_chain@cs+1,create_chain@scl+1
 41439   013DF8  C660  F656         	movff	create_chain@cs+2,create_chain@scl+2
 41440   013DFC  C661  F657         	movff	create_chain@cs+3,create_chain@scl+3
 41441   013E00                     l21233:
 41442                           
 41443                           ; BSR set to: 6
 41444                           ;../fatfs/ff.c: 1584:     ncl = 0;
 41445   013E00  0E00               	movlw	0
 41446   013E02  6F58               	movwf	create_chain@ncl& (0+255),b
 41447   013E04  0E00               	movlw	0
 41448   013E06  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41449   013E08  0E00               	movlw	0
 41450   013E0A  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41451   013E0C  0E00               	movlw	0
 41452   013E0E  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41453   013E10                     l21235:
 41454                           
 41455                           ; BSR set to: 6
 41456                           ;../fatfs/ff.c: 1587:   if (ncl == 0) {
 41457   013E10  5158               	movf	create_chain@ncl& (0+255),w,b
 41458   013E12  1159               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 41459   013E14  115A               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 41460   013E16  115B               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 41461   013E18  A4D8               	btfss	status,2,c
 41462   013E1A  EF11  F09F         	goto	u28411
 41463   013E1E  EF13  F09F         	goto	u28410
 41464   013E22                     u28411:
 41465   013E22  EFA0  F09F         	goto	l21267
 41466   013E26                     u28410:
 41467   013E26                     
 41468                           ; BSR set to: 6
 41469                           ;../fatfs/ff.c: 1588:    ncl = scl;
 41470   013E26  C654  F658         	movff	create_chain@scl,create_chain@ncl
 41471   013E2A  C655  F659         	movff	create_chain@scl+1,create_chain@ncl+1
 41472   013E2E  C656  F65A         	movff	create_chain@scl+2,create_chain@ncl+2
 41473   013E32  C657  F65B         	movff	create_chain@scl+3,create_chain@ncl+3
 41474   013E36                     l21239:
 41475                           
 41476                           ; BSR set to: 6
 41477                           ;../fatfs/ff.c: 1590:     ncl++;
 41478   013E36  0E01               	movlw	1
 41479   013E38  2758               	addwf	create_chain@ncl& (0+255),f,b
 41480   013E3A  0E00               	movlw	0
 41481   013E3C  2359               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 41482   013E3E  235A               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 41483   013E40  235B               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 41484   013E42                     
 41485                           ; BSR set to: 6
 41486                           ;../fatfs/ff.c: 1591:     if (ncl >= fs->n_fatent) {
 41487   013E42  EE20 F018          	lfsr	2,24
 41488   013E46  515C               	movf	create_chain@fs& (0+255),w,b
 41489   013E48  26D9               	addwf	fsr2l,f,c
 41490   013E4A  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41491   013E4C  22DA               	addwfc	fsr2h,f,c
 41492   013E4E  50DE               	movf	postinc2,w,c
 41493   013E50  5D58               	subwf	create_chain@ncl& (0+255),w,b
 41494   013E52  50DE               	movf	postinc2,w,c
 41495   013E54  5959               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 41496   013E56  50DE               	movf	postinc2,w,c
 41497   013E58  595A               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 41498   013E5A  50DE               	movf	postinc2,w,c
 41499   013E5C  595B               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 41500   013E5E  A0D8               	btfss	status,0,c
 41501   013E60  EF34  F09F         	goto	u28421
 41502   013E64  EF36  F09F         	goto	u28420
 41503   013E68                     u28421:
 41504   013E68  EF4D  F09F         	goto	l21251
 41505   013E6C                     u28420:
 41506   013E6C                     
 41507                           ; BSR set to: 6
 41508                           ;../fatfs/ff.c: 1592:      ncl = 2;
 41509   013E6C  0E02               	movlw	2
 41510   013E6E  6F58               	movwf	create_chain@ncl& (0+255),b
 41511   013E70  0E00               	movlw	0
 41512   013E72  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41513   013E74  0E00               	movlw	0
 41514   013E76  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41515   013E78  0E00               	movlw	0
 41516   013E7A  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41517   013E7C                     
 41518                           ; BSR set to: 6
 41519                           ;../fatfs/ff.c: 1593:      if (ncl > scl) return 0;
 41520   013E7C  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 41521   013E7E  1156               	iorwf	(create_chain@scl+2)& (0+255),w,b
 41522   013E80  1155               	iorwf	(create_chain@scl+1)& (0+255),w,b
 41523   013E82  E107               	bnz	u28431
 41524   013E84  0E02               	movlw	2
 41525   013E86  5D54               	subwf	create_chain@scl& (0+255),w,b
 41526   013E88  B0D8               	btfsc	status,0,c
 41527   013E8A  EF49  F09F         	goto	u28431
 41528   013E8E  EF4B  F09F         	goto	u28430
 41529   013E92                     u28431:
 41530   013E92  EF4D  F09F         	goto	l21251
 41531   013E96                     u28430:
 41532   013E96  EF3E  F09E         	goto	l21203
 41533   013E9A                     l21251:
 41534                           
 41535                           ; BSR set to: 6
 41536                           ;../fatfs/ff.c: 1595:     cs = get_fat(obj, ncl);
 41537   013E9A  C645  F624         	movff	create_chain@obj,get_fat@obj
 41538   013E9E  C646  F625         	movff	create_chain@obj+1,get_fat@obj+1
 41539   013EA2  C658  F626         	movff	create_chain@ncl,get_fat@clst
 41540   013EA6  C659  F627         	movff	create_chain@ncl+1,get_fat@clst+1
 41541   013EAA  C65A  F628         	movff	create_chain@ncl+2,get_fat@clst+2
 41542   013EAE  C65B  F629         	movff	create_chain@ncl+3,get_fat@clst+3
 41543   013EB2  ECF7  F0B4         	call	_get_fat	;wreg free
 41544   013EB6  C624  F65E         	movff	?_get_fat,create_chain@cs
 41545   013EBA  C625  F65F         	movff	?_get_fat+1,create_chain@cs+1
 41546   013EBE  C626  F660         	movff	?_get_fat+2,create_chain@cs+2
 41547   013EC2  C627  F661         	movff	?_get_fat+3,create_chain@cs+3
 41548   013EC6                     
 41549                           ;../fatfs/ff.c: 1596:     if (cs == 0) break;
 41550   013EC6  0106               	movlb	6	; () banked
 41551   013EC8  515E               	movf	create_chain@cs& (0+255),w,b
 41552   013ECA  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41553   013ECC  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41554   013ECE  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 41555   013ED0  A4D8               	btfss	status,2,c
 41556   013ED2  EF6D  F09F         	goto	u28441
 41557   013ED6  EF6F  F09F         	goto	u28440
 41558   013EDA                     u28441:
 41559   013EDA  EF71  F09F         	goto	l21257
 41560   013EDE                     u28440:
 41561   013EDE  EFA0  F09F         	goto	l21267
 41562   013EE2                     l21257:
 41563                           
 41564                           ; BSR set to: 6
 41565                           ;../fatfs/ff.c: 1597:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 41566   013EE2  055E               	decf	create_chain@cs& (0+255),w,b
 41567   013EE4  115F               	iorwf	(create_chain@cs+1)& (0+255),w,b
 41568   013EE6  1160               	iorwf	(create_chain@cs+2)& (0+255),w,b
 41569   013EE8  1161               	iorwf	(create_chain@cs+3)& (0+255),w,b
 41570   013EEA  B4D8               	btfsc	status,2,c
 41571   013EEC  EF7A  F09F         	goto	u28451
 41572   013EF0  EF7C  F09F         	goto	u28450
 41573   013EF4                     u28451:
 41574   013EF4  EF04  F09E         	goto	l21195
 41575   013EF8                     u28450:
 41576   013EF8                     
 41577                           ; BSR set to: 6
 41578   013EF8  295E               	incf	create_chain@cs& (0+255),w,b
 41579   013EFA  E10A               	bnz	u28461
 41580   013EFC  295F               	incf	(create_chain@cs+1)& (0+255),w,b
 41581   013EFE  E108               	bnz	u28461
 41582   013F00  2960               	incf	(create_chain@cs+2)& (0+255),w,b
 41583   013F02  E106               	bnz	u28461
 41584   013F04  2961               	incf	(create_chain@cs+3)& (0+255),w,b
 41585   013F06  A4D8               	btfss	status,2,c
 41586   013F08  EF88  F09F         	goto	u28461
 41587   013F0C  EF8A  F09F         	goto	u28460
 41588   013F10                     u28461:
 41589   013F10  EF8C  F09F         	goto	l21261
 41590   013F14                     u28460:
 41591   013F14  EF04  F09E         	goto	l21195
 41592   013F18                     l21261:
 41593                           
 41594                           ; BSR set to: 6
 41595                           ;../fatfs/ff.c: 1598:     if (ncl == scl) return 0;
 41596   013F18  5154               	movf	create_chain@scl& (0+255),w,b
 41597   013F1A  1958               	xorwf	create_chain@ncl& (0+255),w,b
 41598   013F1C  E10D               	bnz	u28471
 41599   013F1E  5155               	movf	(create_chain@scl+1)& (0+255),w,b
 41600   013F20  1959               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 41601   013F22  E10A               	bnz	u28471
 41602   013F24  5156               	movf	(create_chain@scl+2)& (0+255),w,b
 41603   013F26  195A               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 41604   013F28  E107               	bnz	u28471
 41605   013F2A  5157               	movf	(create_chain@scl+3)& (0+255),w,b
 41606   013F2C  195B               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 41607   013F2E  A4D8               	btfss	status,2,c
 41608   013F30  EF9C  F09F         	goto	u28471
 41609   013F34  EF9E  F09F         	goto	u28470
 41610   013F38                     u28471:
 41611   013F38  EF1B  F09F         	goto	l21239
 41612   013F3C                     u28470:
 41613   013F3C  EF3E  F09E         	goto	l21203
 41614   013F40                     l21267:
 41615                           
 41616                           ; BSR set to: 6
 41617                           ;../fatfs/ff.c: 1601:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 41618   013F40  C65C  F624         	movff	create_chain@fs,put_fat@fs
 41619   013F44  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 41620   013F48  C658  F626         	movff	create_chain@ncl,put_fat@clst
 41621   013F4C  C659  F627         	movff	create_chain@ncl+1,put_fat@clst+1
 41622   013F50  C65A  F628         	movff	create_chain@ncl+2,put_fat@clst+2
 41623   013F54  C65B  F629         	movff	create_chain@ncl+3,put_fat@clst+3
 41624   013F58  0EFF               	movlw	255
 41625   013F5A  6F2A               	movwf	put_fat@val& (0+255),b
 41626   013F5C  0EFF               	movlw	255
 41627   013F5E  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 41628   013F60  0EFF               	movlw	255
 41629   013F62  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 41630   013F64  0EFF               	movlw	255
 41631   013F66  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 41632   013F68  EC54  F0A0         	call	_put_fat	;wreg free
 41633   013F6C  0106               	movlb	6	; () banked
 41634   013F6E  6F53               	movwf	create_chain@res& (0+255),b
 41635   013F70                     
 41636                           ; BSR set to: 6
 41637                           ;../fatfs/ff.c: 1602:   if (res == FR_OK && clst != 0) {
 41638   013F70  5153               	movf	create_chain@res& (0+255),w,b
 41639   013F72  A4D8               	btfss	status,2,c
 41640   013F74  EFBE  F09F         	goto	u28481
 41641   013F78  EFC0  F09F         	goto	u28480
 41642   013F7C                     u28481:
 41643   013F7C  EFE3  F09F         	goto	l21275
 41644   013F80                     u28480:
 41645   013F80                     
 41646                           ; BSR set to: 6
 41647   013F80  5147               	movf	create_chain@clst& (0+255),w,b
 41648   013F82  1148               	iorwf	(create_chain@clst+1)& (0+255),w,b
 41649   013F84  1149               	iorwf	(create_chain@clst+2)& (0+255),w,b
 41650   013F86  114A               	iorwf	(create_chain@clst+3)& (0+255),w,b
 41651   013F88  B4D8               	btfsc	status,2,c
 41652   013F8A  EFC9  F09F         	goto	u28491
 41653   013F8E  EFCB  F09F         	goto	u28490
 41654   013F92                     u28491:
 41655   013F92  EFE3  F09F         	goto	l21275
 41656   013F96                     u28490:
 41657   013F96                     
 41658                           ; BSR set to: 6
 41659                           ;../fatfs/ff.c: 1603:    res = put_fat(fs, clst, ncl);
 41660   013F96  C65C  F624         	movff	create_chain@fs,put_fat@fs
 41661   013F9A  C65D  F625         	movff	create_chain@fs+1,put_fat@fs+1
 41662   013F9E  C647  F626         	movff	create_chain@clst,put_fat@clst
 41663   013FA2  C648  F627         	movff	create_chain@clst+1,put_fat@clst+1
 41664   013FA6  C649  F628         	movff	create_chain@clst+2,put_fat@clst+2
 41665   013FAA  C64A  F629         	movff	create_chain@clst+3,put_fat@clst+3
 41666   013FAE  C658  F62A         	movff	create_chain@ncl,put_fat@val
 41667   013FB2  C659  F62B         	movff	create_chain@ncl+1,put_fat@val+1
 41668   013FB6  C65A  F62C         	movff	create_chain@ncl+2,put_fat@val+2
 41669   013FBA  C65B  F62D         	movff	create_chain@ncl+3,put_fat@val+3
 41670   013FBE  EC54  F0A0         	call	_put_fat	;wreg free
 41671   013FC2  0106               	movlb	6	; () banked
 41672   013FC4  6F53               	movwf	create_chain@res& (0+255),b
 41673   013FC6                     l21275:
 41674                           
 41675                           ; BSR set to: 6
 41676                           ;../fatfs/ff.c: 1605:  };../fatfs/ff.c: 1607:  if (res == FR_OK) {
 41677   013FC6  5153               	movf	create_chain@res& (0+255),w,b
 41678   013FC8  A4D8               	btfss	status,2,c
 41679   013FCA  EFE9  F09F         	goto	u28501
 41680   013FCE  EFEB  F09F         	goto	u28500
 41681   013FD2                     u28501:
 41682   013FD2  EF35  F0A0         	goto	l21283
 41683   013FD6                     u28500:
 41684   013FD6                     
 41685                           ; BSR set to: 6
 41686                           ;../fatfs/ff.c: 1608:   fs->last_clst = ncl;
 41687   013FD6  EE20 F00C          	lfsr	2,12
 41688   013FDA  515C               	movf	create_chain@fs& (0+255),w,b
 41689   013FDC  26D9               	addwf	fsr2l,f,c
 41690   013FDE  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41691   013FE0  22DA               	addwfc	fsr2h,f,c
 41692   013FE2  C658  F4DE         	movff	create_chain@ncl,postinc2
 41693   013FE6  C659  F4DE         	movff	create_chain@ncl+1,postinc2
 41694   013FEA  C65A  F4DE         	movff	create_chain@ncl+2,postinc2
 41695   013FEE  C65B  F4DE         	movff	create_chain@ncl+3,postinc2
 41696   013FF2                     
 41697                           ; BSR set to: 6
 41698                           ;../fatfs/ff.c: 1609:   if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 41699   013FF2  EE20 F010          	lfsr	2,16
 41700   013FF6  515C               	movf	create_chain@fs& (0+255),w,b
 41701   013FF8  26D9               	addwf	fsr2l,f,c
 41702   013FFA  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41703   013FFC  22DA               	addwfc	fsr2h,f,c
 41704   013FFE  EE10 F018          	lfsr	1,24
 41705   014002  515C               	movf	create_chain@fs& (0+255),w,b
 41706   014004  26E1               	addwf	fsr1l,f,c
 41707   014006  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41708   014008  22E2               	addwfc	fsr1h,f,c
 41709   01400A  0EFE               	movlw	254
 41710   01400C  24E6               	addwf	postinc1,w,c
 41711   01400E  6F4F               	movwf	(??_create_chain+4)& (0+255),b
 41712   014010  0EFF               	movlw	255
 41713   014012  20E6               	addwfc	postinc1,w,c
 41714   014014  6F50               	movwf	(??_create_chain+5)& (0+255),b
 41715   014016  0EFF               	movlw	255
 41716   014018  20E6               	addwfc	postinc1,w,c
 41717   01401A  6F51               	movwf	(??_create_chain+6)& (0+255),b
 41718   01401C  0EFF               	movlw	255
 41719   01401E  20E6               	addwfc	postinc1,w,c
 41720   014020  6F52               	movwf	(??_create_chain+7)& (0+255),b
 41721   014022  50DE               	movf	postinc2,w,c
 41722   014024  5D4F               	subwf	(??_create_chain+4)& (0+255),w,b
 41723   014026  50DE               	movf	postinc2,w,c
 41724   014028  5950               	subwfb	(??_create_chain+5)& (0+255),w,b
 41725   01402A  50DE               	movf	postinc2,w,c
 41726   01402C  5951               	subwfb	(??_create_chain+6)& (0+255),w,b
 41727   01402E  50DE               	movf	postinc2,w,c
 41728   014030  5952               	subwfb	(??_create_chain+7)& (0+255),w,b
 41729   014032  A0D8               	btfss	status,0,c
 41730   014034  EF1E  F0A0         	goto	u28511
 41731   014038  EF20  F0A0         	goto	u28510
 41732   01403C                     u28511:
 41733   01403C  EF2B  F0A0         	goto	l323
 41734   014040                     u28510:
 41735   014040                     
 41736                           ; BSR set to: 6
 41737   014040  EE20 F010          	lfsr	2,16
 41738   014044  515C               	movf	create_chain@fs& (0+255),w,b
 41739   014046  26D9               	addwf	fsr2l,f,c
 41740   014048  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41741   01404A  22DA               	addwfc	fsr2h,f,c
 41742   01404C  06DE               	decf	postinc2,f,c
 41743   01404E  0E00               	movlw	0
 41744   014050  5ADE               	subwfb	postinc2,f,c
 41745   014052  5ADE               	subwfb	postinc2,f,c
 41746   014054  5ADE               	subwfb	postinc2,f,c
 41747   014056                     l323:
 41748                           
 41749                           ; BSR set to: 6
 41750                           ;../fatfs/ff.c: 1610:   fs->fsi_flag |= 1;
 41751   014056  EE20 F005          	lfsr	2,5
 41752   01405A  515C               	movf	create_chain@fs& (0+255),w,b
 41753   01405C  26D9               	addwf	fsr2l,f,c
 41754   01405E  515D               	movf	(create_chain@fs+1)& (0+255),w,b
 41755   014060  22DA               	addwfc	fsr2h,f,c
 41756   014062  0E00               	movlw	0
 41757   014064  80DB               	bsf	plusw2,0,c
 41758                           
 41759                           ;../fatfs/ff.c: 1611:  } else {
 41760   014066  EF4B  F0A0         	goto	l324
 41761   01406A                     l21283:
 41762                           
 41763                           ; BSR set to: 6
 41764                           ;../fatfs/ff.c: 1612:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 41765   01406A  0553               	decf	create_chain@res& (0+255),w,b
 41766   01406C  B4D8               	btfsc	status,2,c
 41767   01406E  EF3B  F0A0         	goto	u28521
 41768   014072  EF3D  F0A0         	goto	u28520
 41769   014076                     u28521:
 41770   014076  EF47  F0A0         	goto	l326
 41771   01407A                     u28520:
 41772   01407A                     
 41773                           ; BSR set to: 6
 41774   01407A  0E01               	movlw	1
 41775   01407C  6F58               	movwf	create_chain@ncl& (0+255),b
 41776   01407E  0E00               	movlw	0
 41777   014080  6F59               	movwf	(create_chain@ncl+1)& (0+255),b
 41778   014082  0E00               	movlw	0
 41779   014084  6F5A               	movwf	(create_chain@ncl+2)& (0+255),b
 41780   014086  0E00               	movlw	0
 41781   014088  6F5B               	movwf	(create_chain@ncl+3)& (0+255),b
 41782   01408A  EF4B  F0A0         	goto	l324
 41783   01408E                     l326:
 41784                           
 41785                           ; BSR set to: 6
 41786   01408E  6958               	setf	create_chain@ncl& (0+255),b
 41787   014090  6959               	setf	(create_chain@ncl+1)& (0+255),b
 41788   014092  695A               	setf	(create_chain@ncl+2)& (0+255),b
 41789   014094  695B               	setf	(create_chain@ncl+3)& (0+255),b
 41790   014096                     l324:
 41791                           
 41792                           ; BSR set to: 6
 41793                           ;../fatfs/ff.c: 1615:  return ncl;
 41794   014096  C658  F645         	movff	create_chain@ncl,?_create_chain
 41795   01409A  C659  F646         	movff	create_chain@ncl+1,?_create_chain+1
 41796   01409E  C65A  F647         	movff	create_chain@ncl+2,?_create_chain+2
 41797   0140A2  C65B  F648         	movff	create_chain@ncl+3,?_create_chain+3
 41798   0140A6                     l300:
 41799                           
 41800                           ; BSR set to: 6
 41801   0140A6  0012               	return		;funcret
 41802   0140A8                     __end_of_create_chain:
 41803                           	callstack 0
 41804                           
 41805 ;; *************** function _put_fat *****************
 41806 ;; Defined at:
 41807 ;;		line 1240 in file "../fatfs/ff.c"
 41808 ;; Parameters:    Size  Location     Type
 41809 ;;  fs              2   36[BANK6 ] PTR struct .
 41810 ;;		 -> fs(564), NULL(0), 
 41811 ;;  clst            4   38[BANK6 ] unsigned long 
 41812 ;;  val             4   42[BANK6 ] unsigned long 
 41813 ;; Auto vars:     Size  Location     Type
 41814 ;;  bc              2   66[BANK6 ] unsigned int 
 41815 ;;  p               2   64[BANK6 ] PTR unsigned char 
 41816 ;;		 -> fs$win(512), fs(564), NULL(0), 
 41817 ;;  res             1   68[BANK6 ] enum E597
 41818 ;; Return value:  Size  Location     Type
 41819 ;;                  1    wreg      enum E597
 41820 ;; Registers used:
 41821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 41822 ;; Tracked objects:
 41823 ;;		On entry : 0/0
 41824 ;;		On exit  : 0/0
 41825 ;;		Unchanged: 0/0
 41826 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41827 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41828 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41829 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41830 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41831 ;;Total ram usage:       33 bytes
 41832 ;; Hardware stack levels used: 1
 41833 ;; Hardware stack levels required when called: 14
 41834 ;; This function calls:
 41835 ;;		_ld_dword
 41836 ;;		_move_window
 41837 ;;		_st_dword
 41838 ;;		_st_word
 41839 ;; This function is called by:
 41840 ;;		_remove_chain
 41841 ;;		_create_chain
 41842 ;; This function uses a non-reentrant model
 41843 ;;
 41844                           
 41845                           	psect	text107
 41846   0140A8                     __ptext107:
 41847                           	callstack 0
 41848   0140A8                     _put_fat:
 41849                           	callstack 104
 41850   0140A8                     
 41851                           ;../fatfs/ff.c: 1241:  FATFS* fs,;../fatfs/ff.c: 1242:  DWORD clst,;../fatfs/ff.c: 1243:
      +                            DWORD val;../fatfs/ff.c: 1245: {;../fatfs/ff.c: 1246:  UINT bc;;../fatfs/ff.c: 1247:  
      +                          BYTE *p;;../fatfs/ff.c: 1248:  FRESULT res = FR_INT_ERR;
 41852   0140A8  0E02               	movlw	2
 41853   0140AA  0106               	movlb	6	; () banked
 41854   0140AC  6F44               	movwf	put_fat@res& (0+255),b
 41855   0140AE                     
 41856                           ; BSR set to: 6
 41857                           ;../fatfs/ff.c: 1251:  if (clst >= 2 && clst < fs->n_fatent) {
 41858   0140AE  5129               	movf	(put_fat@clst+3)& (0+255),w,b
 41859   0140B0  1128               	iorwf	(put_fat@clst+2)& (0+255),w,b
 41860   0140B2  1127               	iorwf	(put_fat@clst+1)& (0+255),w,b
 41861   0140B4  E109               	bnz	u28150
 41862   0140B6  0E02               	movlw	2
 41863   0140B8  5D26               	subwf	put_fat@clst& (0+255),w,b
 41864   0140BA  A0D8               	btfss	status,0,c
 41865   0140BC  EF62  F0A0         	goto	u28151
 41866   0140C0  EF64  F0A0         	goto	u28150
 41867   0140C4                     u28151:
 41868   0140C4  EFC8  F0A2         	goto	l21169
 41869   0140C8                     u28150:
 41870   0140C8                     
 41871                           ; BSR set to: 6
 41872   0140C8  EE20 F018          	lfsr	2,24
 41873   0140CC  5124               	movf	put_fat@fs& (0+255),w,b
 41874   0140CE  26D9               	addwf	fsr2l,f,c
 41875   0140D0  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 41876   0140D2  22DA               	addwfc	fsr2h,f,c
 41877   0140D4  50DE               	movf	postinc2,w,c
 41878   0140D6  5D26               	subwf	put_fat@clst& (0+255),w,b
 41879   0140D8  50DE               	movf	postinc2,w,c
 41880   0140DA  5927               	subwfb	(put_fat@clst+1)& (0+255),w,b
 41881   0140DC  50DE               	movf	postinc2,w,c
 41882   0140DE  5928               	subwfb	(put_fat@clst+2)& (0+255),w,b
 41883   0140E0  50DE               	movf	postinc2,w,c
 41884   0140E2  5929               	subwfb	(put_fat@clst+3)& (0+255),w,b
 41885   0140E4  B0D8               	btfsc	status,0,c
 41886   0140E6  EF77  F0A0         	goto	u28161
 41887   0140EA  EF79  F0A0         	goto	u28160
 41888   0140EE                     u28161:
 41889   0140EE  EFC8  F0A2         	goto	l21169
 41890   0140F2                     u28160:
 41891   0140F2  EFB5  F0A2         	goto	l21167
 41892   0140F6                     l252:
 41893                           
 41894                           ; BSR set to: 6
 41895                           ;../fatfs/ff.c: 1254:    bc = (UINT)clst; bc += bc / 2;
 41896   0140F6  C626  F642         	movff	put_fat@clst,put_fat@bc
 41897   0140FA  C627  F643         	movff	put_fat@clst+1,put_fat@bc+1
 41898   0140FE                     
 41899                           ; BSR set to: 6
 41900   0140FE  90D8               	bcf	status,0,c
 41901   014100  3143               	rrcf	(put_fat@bc+1)& (0+255),w,b
 41902   014102  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 41903   014104  3142               	rrcf	put_fat@bc& (0+255),w,b
 41904   014106  6F2E               	movwf	??_put_fat& (0+255),b
 41905   014108  512E               	movf	??_put_fat& (0+255),w,b
 41906   01410A  2742               	addwf	put_fat@bc& (0+255),f,b
 41907   01410C  512F               	movf	(??_put_fat+1)& (0+255),w,b
 41908   01410E  2343               	addwfc	(put_fat@bc+1)& (0+255),f,b
 41909   014110                     
 41910                           ; BSR set to: 6
 41911                           ;../fatfs/ff.c: 1255:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 41912   014110  C624  F61A         	movff	put_fat@fs,move_window@fs
 41913   014114  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 41914   014118  EE20 F024          	lfsr	2,36
 41915   01411C  5124               	movf	put_fat@fs& (0+255),w,b
 41916   01411E  26D9               	addwf	fsr2l,f,c
 41917   014120  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 41918   014122  22DA               	addwfc	fsr2h,f,c
 41919   014124  C4DE F62E          	movff	postinc2,??_put_fat
 41920   014128  C4DE F62F          	movff	postinc2,??_put_fat+1
 41921   01412C  C4DE F630          	movff	postinc2,??_put_fat+2
 41922   014130  C4DE F631          	movff	postinc2,??_put_fat+3
 41923   014134  C642  F632         	movff	put_fat@bc,??_put_fat+4
 41924   014138  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 41925   01413C  0E09               	movlw	9
 41926   01413E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 41927   014140                     u28175:
 41928   014140  90D8               	bcf	status,0,c
 41929   014142  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 41930   014144  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 41931   014146  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 41932   014148  EFA0  F0A0         	goto	u28175
 41933   01414C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 41934   01414E  252E               	addwf	??_put_fat& (0+255),w,b
 41935   014150  6F1C               	movwf	move_window@sect& (0+255),b
 41936   014152  5133               	movf	(??_put_fat+5)& (0+255),w,b
 41937   014154  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 41938   014156  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 41939   014158  0E00               	movlw	0
 41940   01415A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 41941   01415C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 41942   01415E  0E00               	movlw	0
 41943   014160  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 41944   014162  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 41945   014164  ECAB  F0EF         	call	_move_window	;wreg free
 41946   014168  0106               	movlb	6	; () banked
 41947   01416A  6F44               	movwf	put_fat@res& (0+255),b
 41948   01416C                     
 41949                           ; BSR set to: 6
 41950                           ;../fatfs/ff.c: 1256:    if (res != FR_OK) break;
 41951   01416C  5144               	movf	put_fat@res& (0+255),w,b
 41952   01416E  B4D8               	btfsc	status,2,c
 41953   014170  EFBC  F0A0         	goto	u28181
 41954   014174  EFBE  F0A0         	goto	u28180
 41955   014178                     u28181:
 41956   014178  EFC0  F0A0         	goto	l21113
 41957   01417C                     u28180:
 41958   01417C  EFC8  F0A2         	goto	l21169
 41959   014180                     l21113:
 41960                           
 41961                           ; BSR set to: 6
 41962                           ;../fatfs/ff.c: 1257:    p = fs->win + bc++ % ((UINT)512);
 41963   014180  0EFF               	movlw	255
 41964   014182  1542               	andwf	put_fat@bc& (0+255),w,b
 41965   014184  6F2E               	movwf	??_put_fat& (0+255),b
 41966   014186  0E01               	movlw	1
 41967   014188  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 41968   01418A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 41969   01418C  512E               	movf	??_put_fat& (0+255),w,b
 41970   01418E  2524               	addwf	put_fat@fs& (0+255),w,b
 41971   014190  6F30               	movwf	(??_put_fat+2)& (0+255),b
 41972   014192  512F               	movf	(??_put_fat+1)& (0+255),w,b
 41973   014194  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 41974   014196  6F31               	movwf	(??_put_fat+3)& (0+255),b
 41975   014198  0E34               	movlw	52
 41976   01419A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 41977   01419C  6F40               	movwf	put_fat@p& (0+255),b
 41978   01419E  0E00               	movlw	0
 41979   0141A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 41980   0141A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 41981   0141A4                     
 41982                           ; BSR set to: 6
 41983   0141A4  4B42               	infsnz	put_fat@bc& (0+255),f,b
 41984   0141A6  2B43               	incf	(put_fat@bc+1)& (0+255),f,b
 41985   0141A8                     
 41986                           ; BSR set to: 6
 41987                           ;../fatfs/ff.c: 1258:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 41988   0141A8  B126               	btfsc	put_fat@clst& (0+255),0,b
 41989   0141AA  EFD9  F0A0         	goto	u28191
 41990   0141AE  EFDB  F0A0         	goto	u28190
 41991   0141B2                     u28191:
 41992   0141B2  EFE0  F0A0         	goto	l21121
 41993   0141B6                     u28190:
 41994   0141B6                     
 41995                           ; BSR set to: 6
 41996   0141B6  C62A  F63C         	movff	put_fat@val,_put_fat$465
 41997   0141BA  6B3D               	clrf	(_put_fat$465+1)& (0+255),b
 41998   0141BC  EFFA  F0A0         	goto	l21123
 41999   0141C0                     l21121:
 42000                           
 42001                           ; BSR set to: 6
 42002   0141C0  512A               	movf	put_fat@val& (0+255),w,b
 42003   0141C2  6F2E               	movwf	??_put_fat& (0+255),b
 42004   0141C4  6B2F               	clrf	(??_put_fat+1)& (0+255),b
 42005   0141C6  3B2E               	swapf	??_put_fat& (0+255),f,b
 42006   0141C8  3B2F               	swapf	(??_put_fat+1)& (0+255),f,b
 42007   0141CA  0EF0               	movlw	240
 42008   0141CC  172F               	andwf	(??_put_fat+1)& (0+255),f,b
 42009   0141CE  512E               	movf	??_put_fat& (0+255),w,b
 42010   0141D0  0B0F               	andlw	15
 42011   0141D2  132F               	iorwf	(??_put_fat+1)& (0+255),f,b
 42012   0141D4  0EF0               	movlw	240
 42013   0141D6  172E               	andwf	??_put_fat& (0+255),f,b
 42014   0141D8  C640  F4D9         	movff	put_fat@p,fsr2l
 42015   0141DC  C641  F4DA         	movff	put_fat@p+1,fsr2h
 42016   0141E0  50DF               	movf	indf2,w,c
 42017   0141E2  0B0F               	andlw	15
 42018   0141E4  6F30               	movwf	(??_put_fat+2)& (0+255),b
 42019   0141E6  6B31               	clrf	(??_put_fat+3)& (0+255),b
 42020   0141E8  512E               	movf	??_put_fat& (0+255),w,b
 42021   0141EA  1130               	iorwf	(??_put_fat+2)& (0+255),w,b
 42022   0141EC  6F3C               	movwf	_put_fat$465& (0+255),b
 42023   0141EE  512F               	movf	(??_put_fat+1)& (0+255),w,b
 42024   0141F0  1131               	iorwf	(??_put_fat+3)& (0+255),w,b
 42025   0141F2  6F3D               	movwf	(_put_fat$465+1)& (0+255),b
 42026   0141F4                     l21123:
 42027                           
 42028                           ; BSR set to: 6
 42029   0141F4  C640  F4D9         	movff	put_fat@p,fsr2l
 42030   0141F8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 42031   0141FC  C63C  F4DF         	movff	_put_fat$465,indf2
 42032   014200                     
 42033                           ; BSR set to: 6
 42034                           ;../fatfs/ff.c: 1259:    fs->wflag = 1;
 42035   014200  EE20 F004          	lfsr	2,4
 42036   014204  5124               	movf	put_fat@fs& (0+255),w,b
 42037   014206  26D9               	addwf	fsr2l,f,c
 42038   014208  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42039   01420A  22DA               	addwfc	fsr2h,f,c
 42040   01420C  0E01               	movlw	1
 42041   01420E  6EDF               	movwf	indf2,c
 42042   014210                     
 42043                           ; BSR set to: 6
 42044                           ;../fatfs/ff.c: 1260:    res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
 42045   014210  C624  F61A         	movff	put_fat@fs,move_window@fs
 42046   014214  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 42047   014218  EE20 F024          	lfsr	2,36
 42048   01421C  5124               	movf	put_fat@fs& (0+255),w,b
 42049   01421E  26D9               	addwf	fsr2l,f,c
 42050   014220  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42051   014222  22DA               	addwfc	fsr2h,f,c
 42052   014224  C4DE F62E          	movff	postinc2,??_put_fat
 42053   014228  C4DE F62F          	movff	postinc2,??_put_fat+1
 42054   01422C  C4DE F630          	movff	postinc2,??_put_fat+2
 42055   014230  C4DE F631          	movff	postinc2,??_put_fat+3
 42056   014234  C642  F632         	movff	put_fat@bc,??_put_fat+4
 42057   014238  C643  F633         	movff	put_fat@bc+1,??_put_fat+5
 42058   01423C  0E09               	movlw	9
 42059   01423E  6F34               	movwf	(??_put_fat+6)& (0+255),b
 42060   014240                     u28205:
 42061   014240  90D8               	bcf	status,0,c
 42062   014242  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 42063   014244  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 42064   014246  2F34               	decfsz	(??_put_fat+6)& (0+255),f,b
 42065   014248  EF20  F0A1         	goto	u28205
 42066   01424C  5132               	movf	(??_put_fat+4)& (0+255),w,b
 42067   01424E  252E               	addwf	??_put_fat& (0+255),w,b
 42068   014250  6F1C               	movwf	move_window@sect& (0+255),b
 42069   014252  5133               	movf	(??_put_fat+5)& (0+255),w,b
 42070   014254  212F               	addwfc	(??_put_fat+1)& (0+255),w,b
 42071   014256  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42072   014258  0E00               	movlw	0
 42073   01425A  2130               	addwfc	(??_put_fat+2)& (0+255),w,b
 42074   01425C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42075   01425E  0E00               	movlw	0
 42076   014260  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 42077   014262  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42078   014264  ECAB  F0EF         	call	_move_window	;wreg free
 42079   014268  0106               	movlb	6	; () banked
 42080   01426A  6F44               	movwf	put_fat@res& (0+255),b
 42081   01426C                     
 42082                           ; BSR set to: 6
 42083                           ;../fatfs/ff.c: 1261:    if (res != FR_OK) break;
 42084   01426C  5144               	movf	put_fat@res& (0+255),w,b
 42085   01426E  B4D8               	btfsc	status,2,c
 42086   014270  EF3C  F0A1         	goto	u28211
 42087   014274  EF3E  F0A1         	goto	u28210
 42088   014278                     u28211:
 42089   014278  EF40  F0A1         	goto	l21133
 42090   01427C                     u28210:
 42091   01427C  EFC8  F0A2         	goto	l21169
 42092   014280                     l21133:
 42093                           
 42094                           ; BSR set to: 6
 42095                           ;../fatfs/ff.c: 1262:    p = fs->win + bc % ((UINT)512);
 42096   014280  0EFF               	movlw	255
 42097   014282  1542               	andwf	put_fat@bc& (0+255),w,b
 42098   014284  6F2E               	movwf	??_put_fat& (0+255),b
 42099   014286  0E01               	movlw	1
 42100   014288  1543               	andwf	(put_fat@bc+1)& (0+255),w,b
 42101   01428A  6F2F               	movwf	(??_put_fat+1)& (0+255),b
 42102   01428C  512E               	movf	??_put_fat& (0+255),w,b
 42103   01428E  2524               	addwf	put_fat@fs& (0+255),w,b
 42104   014290  6F30               	movwf	(??_put_fat+2)& (0+255),b
 42105   014292  512F               	movf	(??_put_fat+1)& (0+255),w,b
 42106   014294  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 42107   014296  6F31               	movwf	(??_put_fat+3)& (0+255),b
 42108   014298  0E34               	movlw	52
 42109   01429A  2530               	addwf	(??_put_fat+2)& (0+255),w,b
 42110   01429C  6F40               	movwf	put_fat@p& (0+255),b
 42111   01429E  0E00               	movlw	0
 42112   0142A0  2131               	addwfc	(??_put_fat+3)& (0+255),w,b
 42113   0142A2  6F41               	movwf	(put_fat@p+1)& (0+255),b
 42114   0142A4                     
 42115                           ; BSR set to: 6
 42116                           ;../fatfs/ff.c: 1263:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val
      +                           >> 8) & 0x0F));
 42117   0142A4  B126               	btfsc	put_fat@clst& (0+255),0,b
 42118   0142A6  EF57  F0A1         	goto	u28221
 42119   0142AA  EF59  F0A1         	goto	u28220
 42120   0142AE                     u28221:
 42121   0142AE  EF77  F0A1         	goto	l21139
 42122   0142B2                     u28220:
 42123   0142B2                     
 42124                           ; BSR set to: 6
 42125   0142B2  C62A  F62E         	movff	put_fat@val,??_put_fat
 42126   0142B6  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 42127   0142BA  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 42128   0142BE  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 42129   0142C2  C62F  F62E         	movff	??_put_fat+1,??_put_fat
 42130   0142C6  C630  F62F         	movff	??_put_fat+2,??_put_fat+1
 42131   0142CA  C631  F630         	movff	??_put_fat+3,??_put_fat+2
 42132   0142CE  6B31               	clrf	(??_put_fat+3)& (0+255),b
 42133   0142D0  0E0F               	movlw	15
 42134   0142D2  172E               	andwf	??_put_fat& (0+255),f,b
 42135   0142D4  C640  F4D9         	movff	put_fat@p,fsr2l
 42136   0142D8  C641  F4DA         	movff	put_fat@p+1,fsr2h
 42137   0142DC  50DF               	movf	indf2,w,c
 42138   0142DE  0BF0               	andlw	240
 42139   0142E0  112E               	iorwf	??_put_fat& (0+255),w,b
 42140   0142E2  6F32               	movwf	(??_put_fat+4)& (0+255),b
 42141   0142E4  5132               	movf	(??_put_fat+4)& (0+255),w,b
 42142   0142E6  6F3E               	movwf	_put_fat$466& (0+255),b
 42143   0142E8  6B3F               	clrf	(_put_fat$466+1)& (0+255),b
 42144   0142EA  EF8D  F0A1         	goto	l21141
 42145   0142EE                     l21139:
 42146                           
 42147                           ; BSR set to: 6
 42148   0142EE  C62A  F62E         	movff	put_fat@val,??_put_fat
 42149   0142F2  C62B  F62F         	movff	put_fat@val+1,??_put_fat+1
 42150   0142F6  C62C  F630         	movff	put_fat@val+2,??_put_fat+2
 42151   0142FA  C62D  F631         	movff	put_fat@val+3,??_put_fat+3
 42152   0142FE  0E05               	movlw	5
 42153   014300  EF87  F0A1         	goto	u28230
 42154   014304                     u28235:
 42155   014304  90D8               	bcf	status,0,c
 42156   014306  3331               	rrcf	(??_put_fat+3)& (0+255),f,b
 42157   014308  3330               	rrcf	(??_put_fat+2)& (0+255),f,b
 42158   01430A  332F               	rrcf	(??_put_fat+1)& (0+255),f,b
 42159   01430C  332E               	rrcf	??_put_fat& (0+255),f,b
 42160   01430E                     u28230:
 42161   01430E  2EE8               	decfsz	wreg,f,c
 42162   014310  EF82  F0A1         	goto	u28235
 42163   014314  512E               	movf	??_put_fat& (0+255),w,b
 42164   014316  6F3E               	movwf	_put_fat$466& (0+255),b
 42165   014318  6B3F               	clrf	(_put_fat$466+1)& (0+255),b
 42166   01431A                     l21141:
 42167                           
 42168                           ; BSR set to: 6
 42169   01431A  C640  F4D9         	movff	put_fat@p,fsr2l
 42170   01431E  C641  F4DA         	movff	put_fat@p+1,fsr2h
 42171   014322  C63E  F4DF         	movff	_put_fat$466,indf2
 42172                           
 42173                           ;../fatfs/ff.c: 1264:    fs->wflag = 1;
 42174   014326  EE20 F004          	lfsr	2,4
 42175   01432A  5124               	movf	put_fat@fs& (0+255),w,b
 42176   01432C  26D9               	addwf	fsr2l,f,c
 42177   01432E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42178   014330  22DA               	addwfc	fsr2h,f,c
 42179   014332  0E01               	movlw	1
 42180   014334  6EDF               	movwf	indf2,c
 42181                           
 42182                           ;../fatfs/ff.c: 1265:    break;
 42183   014336  EFC8  F0A2         	goto	l21169
 42184   01433A                     l21143:
 42185                           
 42186                           ; BSR set to: 6
 42187                           ;../fatfs/ff.c: 1268:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)))
      +                          ;
 42188   01433A  C624  F61A         	movff	put_fat@fs,move_window@fs
 42189   01433E  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 42190   014342  EE20 F024          	lfsr	2,36
 42191   014346  5124               	movf	put_fat@fs& (0+255),w,b
 42192   014348  26D9               	addwf	fsr2l,f,c
 42193   01434A  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42194   01434C  22DA               	addwfc	fsr2h,f,c
 42195   01434E  C4DE F62E          	movff	postinc2,??_put_fat
 42196   014352  C4DE F62F          	movff	postinc2,??_put_fat+1
 42197   014356  C4DE F630          	movff	postinc2,??_put_fat+2
 42198   01435A  C4DE F631          	movff	postinc2,??_put_fat+3
 42199   01435E  C626  F632         	movff	put_fat@clst,??_put_fat+4
 42200   014362  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 42201   014366  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 42202   01436A  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 42203   01436E  C633  F632         	movff	??_put_fat+5,??_put_fat+4
 42204   014372  C634  F633         	movff	??_put_fat+6,??_put_fat+5
 42205   014376  C635  F634         	movff	??_put_fat+7,??_put_fat+6
 42206   01437A  6B35               	clrf	(??_put_fat+7)& (0+255),b
 42207   01437C  512E               	movf	??_put_fat& (0+255),w,b
 42208   01437E  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 42209   014380  6F1C               	movwf	move_window@sect& (0+255),b
 42210   014382  512F               	movf	(??_put_fat+1)& (0+255),w,b
 42211   014384  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 42212   014386  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42213   014388  5130               	movf	(??_put_fat+2)& (0+255),w,b
 42214   01438A  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 42215   01438C  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42216   01438E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 42217   014390  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 42218   014392  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42219   014394  ECAB  F0EF         	call	_move_window	;wreg free
 42220   014398  0106               	movlb	6	; () banked
 42221   01439A  6F44               	movwf	put_fat@res& (0+255),b
 42222   01439C                     
 42223                           ; BSR set to: 6
 42224                           ;../fatfs/ff.c: 1269:    if (res != FR_OK) break;
 42225   01439C  5144               	movf	put_fat@res& (0+255),w,b
 42226   01439E  B4D8               	btfsc	status,2,c
 42227   0143A0  EFD4  F0A1         	goto	u28241
 42228   0143A4  EFD6  F0A1         	goto	u28240
 42229   0143A8                     u28241:
 42230   0143A8  EFD8  F0A1         	goto	l21149
 42231   0143AC                     u28240:
 42232   0143AC  EFC8  F0A2         	goto	l21169
 42233   0143B0                     l21149:
 42234                           
 42235                           ; BSR set to: 6
 42236                           ;../fatfs/ff.c: 1270:    st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
 42237   0143B0  C626  F62E         	movff	put_fat@clst,??_put_fat
 42238   0143B4  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 42239   0143B8  90D8               	bcf	status,0,c
 42240   0143BA  372E               	rlcf	??_put_fat& (0+255),f,b
 42241   0143BC  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 42242   0143BE  0EFF               	movlw	255
 42243   0143C0  152E               	andwf	??_put_fat& (0+255),w,b
 42244   0143C2  6F30               	movwf	(??_put_fat+2)& (0+255),b
 42245   0143C4  0E01               	movlw	1
 42246   0143C6  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 42247   0143C8  6F31               	movwf	(??_put_fat+3)& (0+255),b
 42248   0143CA  5130               	movf	(??_put_fat+2)& (0+255),w,b
 42249   0143CC  2524               	addwf	put_fat@fs& (0+255),w,b
 42250   0143CE  6F32               	movwf	(??_put_fat+4)& (0+255),b
 42251   0143D0  5131               	movf	(??_put_fat+3)& (0+255),w,b
 42252   0143D2  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 42253   0143D4  6F33               	movwf	(??_put_fat+5)& (0+255),b
 42254   0143D6  0E34               	movlw	52
 42255   0143D8  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 42256   0143DA  6E04               	movwf	st_word@ptr^(0+1280),c
 42257   0143DC  0E00               	movlw	0
 42258   0143DE  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 42259   0143E0  6E05               	movwf	(st_word@ptr+1)^(0+1280),c
 42260   0143E2  C62A  F506         	movff	put_fat@val,st_word@val
 42261   0143E6  C62B  F507         	movff	put_fat@val+1,st_word@val+1
 42262   0143EA  ECC6  F0FF         	call	_st_word	;wreg free
 42263   0143EE                     
 42264                           ;../fatfs/ff.c: 1271:    fs->wflag = 1;
 42265   0143EE  0106               	movlb	6	; () banked
 42266   0143F0  EE20 F004          	lfsr	2,4
 42267   0143F4  5124               	movf	put_fat@fs& (0+255),w,b
 42268   0143F6  26D9               	addwf	fsr2l,f,c
 42269   0143F8  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42270   0143FA  22DA               	addwfc	fsr2h,f,c
 42271   0143FC  0E01               	movlw	1
 42272   0143FE  6EDF               	movwf	indf2,c
 42273                           
 42274                           ;../fatfs/ff.c: 1272:    break;
 42275   014400  EFC8  F0A2         	goto	l21169
 42276   014404                     l21153:
 42277                           
 42278                           ; BSR set to: 6
 42279                           ;../fatfs/ff.c: 1278:    res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)))
      +                          ;
 42280   014404  C624  F61A         	movff	put_fat@fs,move_window@fs
 42281   014408  C625  F61B         	movff	put_fat@fs+1,move_window@fs+1
 42282   01440C  EE20 F024          	lfsr	2,36
 42283   014410  5124               	movf	put_fat@fs& (0+255),w,b
 42284   014412  26D9               	addwf	fsr2l,f,c
 42285   014414  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42286   014416  22DA               	addwfc	fsr2h,f,c
 42287   014418  C4DE F62E          	movff	postinc2,??_put_fat
 42288   01441C  C4DE F62F          	movff	postinc2,??_put_fat+1
 42289   014420  C4DE F630          	movff	postinc2,??_put_fat+2
 42290   014424  C4DE F631          	movff	postinc2,??_put_fat+3
 42291   014428  C626  F632         	movff	put_fat@clst,??_put_fat+4
 42292   01442C  C627  F633         	movff	put_fat@clst+1,??_put_fat+5
 42293   014430  C628  F634         	movff	put_fat@clst+2,??_put_fat+6
 42294   014434  C629  F635         	movff	put_fat@clst+3,??_put_fat+7
 42295   014438  0E08               	movlw	8
 42296   01443A  EF24  F0A2         	goto	u28250
 42297   01443E                     u28255:
 42298   01443E  90D8               	bcf	status,0,c
 42299   014440  3335               	rrcf	(??_put_fat+7)& (0+255),f,b
 42300   014442  3334               	rrcf	(??_put_fat+6)& (0+255),f,b
 42301   014444  3333               	rrcf	(??_put_fat+5)& (0+255),f,b
 42302   014446  3332               	rrcf	(??_put_fat+4)& (0+255),f,b
 42303   014448                     u28250:
 42304   014448  2EE8               	decfsz	wreg,f,c
 42305   01444A  EF1F  F0A2         	goto	u28255
 42306   01444E  512E               	movf	??_put_fat& (0+255),w,b
 42307   014450  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 42308   014452  6F1C               	movwf	move_window@sect& (0+255),b
 42309   014454  512F               	movf	(??_put_fat+1)& (0+255),w,b
 42310   014456  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 42311   014458  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 42312   01445A  5130               	movf	(??_put_fat+2)& (0+255),w,b
 42313   01445C  2134               	addwfc	(??_put_fat+6)& (0+255),w,b
 42314   01445E  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 42315   014460  5131               	movf	(??_put_fat+3)& (0+255),w,b
 42316   014462  2135               	addwfc	(??_put_fat+7)& (0+255),w,b
 42317   014464  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 42318   014466  ECAB  F0EF         	call	_move_window	;wreg free
 42319   01446A  0106               	movlb	6	; () banked
 42320   01446C  6F44               	movwf	put_fat@res& (0+255),b
 42321   01446E                     
 42322                           ; BSR set to: 6
 42323                           ;../fatfs/ff.c: 1279:    if (res != FR_OK) break;
 42324   01446E  5144               	movf	put_fat@res& (0+255),w,b
 42325   014470  B4D8               	btfsc	status,2,c
 42326   014472  EF3D  F0A2         	goto	u28261
 42327   014476  EF3F  F0A2         	goto	u28260
 42328   01447A                     u28261:
 42329   01447A  EF41  F0A2         	goto	l21161
 42330   01447E                     u28260:
 42331   01447E  EFC8  F0A2         	goto	l21169
 42332   014482                     l21161:
 42333                           
 42334                           ; BSR set to: 6
 42335                           ;../fatfs/ff.c: 1281:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UI
      +                          NT)512)) & 0xF0000000);
 42336   014482  C626  F62E         	movff	put_fat@clst,??_put_fat
 42337   014486  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 42338   01448A  90D8               	bcf	status,0,c
 42339   01448C  372E               	rlcf	??_put_fat& (0+255),f,b
 42340   01448E  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 42341   014490  90D8               	bcf	status,0,c
 42342   014492  372E               	rlcf	??_put_fat& (0+255),f,b
 42343   014494  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 42344   014496  0EFF               	movlw	255
 42345   014498  152E               	andwf	??_put_fat& (0+255),w,b
 42346   01449A  6F30               	movwf	(??_put_fat+2)& (0+255),b
 42347   01449C  0E01               	movlw	1
 42348   01449E  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 42349   0144A0  6F31               	movwf	(??_put_fat+3)& (0+255),b
 42350   0144A2  5130               	movf	(??_put_fat+2)& (0+255),w,b
 42351   0144A4  2524               	addwf	put_fat@fs& (0+255),w,b
 42352   0144A6  6F32               	movwf	(??_put_fat+4)& (0+255),b
 42353   0144A8  5131               	movf	(??_put_fat+3)& (0+255),w,b
 42354   0144AA  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 42355   0144AC  6F33               	movwf	(??_put_fat+5)& (0+255),b
 42356   0144AE  0E34               	movlw	52
 42357   0144B0  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 42358   0144B2  6E04               	movwf	ld_dword@ptr^(0+1280),c
 42359   0144B4  0E00               	movlw	0
 42360   0144B6  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 42361   0144B8  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 42362   0144BA  ECC7  F0F2         	call	_ld_dword	;wreg free
 42363   0144BE  0E00               	movlw	0
 42364   0144C0  1404               	andwf	?_ld_dword^(0+1280),w,c
 42365   0144C2  0106               	movlb	6	; () banked
 42366   0144C4  6F34               	movwf	(??_put_fat+6)& (0+255),b
 42367   0144C6  0E00               	movlw	0
 42368   0144C8  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 42369   0144CA  6F35               	movwf	(??_put_fat+7)& (0+255),b
 42370   0144CC  0E00               	movlw	0
 42371   0144CE  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 42372   0144D0  6F36               	movwf	(??_put_fat+8)& (0+255),b
 42373   0144D2  0EF0               	movlw	240
 42374   0144D4  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 42375   0144D6  6F37               	movwf	(??_put_fat+9)& (0+255),b
 42376   0144D8  0EFF               	movlw	255
 42377   0144DA  152A               	andwf	put_fat@val& (0+255),w,b
 42378   0144DC  6F38               	movwf	(??_put_fat+10)& (0+255),b
 42379   0144DE  0EFF               	movlw	255
 42380   0144E0  152B               	andwf	(put_fat@val+1)& (0+255),w,b
 42381   0144E2  6F39               	movwf	(??_put_fat+11)& (0+255),b
 42382   0144E4  0EFF               	movlw	255
 42383   0144E6  152C               	andwf	(put_fat@val+2)& (0+255),w,b
 42384   0144E8  6F3A               	movwf	(??_put_fat+12)& (0+255),b
 42385   0144EA  0E0F               	movlw	15
 42386   0144EC  152D               	andwf	(put_fat@val+3)& (0+255),w,b
 42387   0144EE  6F3B               	movwf	(??_put_fat+13)& (0+255),b
 42388   0144F0  5134               	movf	(??_put_fat+6)& (0+255),w,b
 42389   0144F2  1138               	iorwf	(??_put_fat+10)& (0+255),w,b
 42390   0144F4  6F2A               	movwf	put_fat@val& (0+255),b
 42391   0144F6  5135               	movf	(??_put_fat+7)& (0+255),w,b
 42392   0144F8  1139               	iorwf	(??_put_fat+11)& (0+255),w,b
 42393   0144FA  6F2B               	movwf	(put_fat@val+1)& (0+255),b
 42394   0144FC  5136               	movf	(??_put_fat+8)& (0+255),w,b
 42395   0144FE  113A               	iorwf	(??_put_fat+12)& (0+255),w,b
 42396   014500  6F2C               	movwf	(put_fat@val+2)& (0+255),b
 42397   014502  5137               	movf	(??_put_fat+9)& (0+255),w,b
 42398   014504  113B               	iorwf	(??_put_fat+13)& (0+255),w,b
 42399   014506  6F2D               	movwf	(put_fat@val+3)& (0+255),b
 42400   014508                     
 42401                           ; BSR set to: 6
 42402                           ;../fatfs/ff.c: 1283:    st_dword(fs->win + clst * 4 % ((UINT)512), val);
 42403   014508  C626  F62E         	movff	put_fat@clst,??_put_fat
 42404   01450C  C627  F62F         	movff	put_fat@clst+1,??_put_fat+1
 42405   014510  90D8               	bcf	status,0,c
 42406   014512  372E               	rlcf	??_put_fat& (0+255),f,b
 42407   014514  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 42408   014516  90D8               	bcf	status,0,c
 42409   014518  372E               	rlcf	??_put_fat& (0+255),f,b
 42410   01451A  372F               	rlcf	(??_put_fat+1)& (0+255),f,b
 42411   01451C  0EFF               	movlw	255
 42412   01451E  152E               	andwf	??_put_fat& (0+255),w,b
 42413   014520  6F30               	movwf	(??_put_fat+2)& (0+255),b
 42414   014522  0E01               	movlw	1
 42415   014524  152F               	andwf	(??_put_fat+1)& (0+255),w,b
 42416   014526  6F31               	movwf	(??_put_fat+3)& (0+255),b
 42417   014528  5130               	movf	(??_put_fat+2)& (0+255),w,b
 42418   01452A  2524               	addwf	put_fat@fs& (0+255),w,b
 42419   01452C  6F32               	movwf	(??_put_fat+4)& (0+255),b
 42420   01452E  5131               	movf	(??_put_fat+3)& (0+255),w,b
 42421   014530  2125               	addwfc	(put_fat@fs+1)& (0+255),w,b
 42422   014532  6F33               	movwf	(??_put_fat+5)& (0+255),b
 42423   014534  0E34               	movlw	52
 42424   014536  2532               	addwf	(??_put_fat+4)& (0+255),w,b
 42425   014538  6E04               	movwf	st_dword@ptr^(0+1280),c
 42426   01453A  0E00               	movlw	0
 42427   01453C  2133               	addwfc	(??_put_fat+5)& (0+255),w,b
 42428   01453E  6E05               	movwf	(st_dword@ptr+1)^(0+1280),c
 42429   014540  C62A  F506         	movff	put_fat@val,st_dword@val
 42430   014544  C62B  F507         	movff	put_fat@val+1,st_dword@val+1
 42431   014548  C62C  F508         	movff	put_fat@val+2,st_dword@val+2
 42432   01454C  C62D  F509         	movff	put_fat@val+3,st_dword@val+3
 42433   014550  ECDD  F0FA         	call	_st_dword	;wreg free
 42434   014554                     
 42435                           ;../fatfs/ff.c: 1284:    fs->wflag = 1;
 42436   014554  0106               	movlb	6	; () banked
 42437   014556  EE20 F004          	lfsr	2,4
 42438   01455A  5124               	movf	put_fat@fs& (0+255),w,b
 42439   01455C  26D9               	addwf	fsr2l,f,c
 42440   01455E  5125               	movf	(put_fat@fs+1)& (0+255),w,b
 42441   014560  22DA               	addwfc	fsr2h,f,c
 42442   014562  0E01               	movlw	1
 42443   014564  6EDF               	movwf	indf2,c
 42444                           
 42445                           ;../fatfs/ff.c: 1285:    break;
 42446   014566  EFC8  F0A2         	goto	l21169
 42447   01456A                     l21167:
 42448                           
 42449                           ; BSR set to: 6
 42450   01456A  C624  F4D9         	movff	put_fat@fs,fsr2l
 42451   01456E  C625  F4DA         	movff	put_fat@fs+1,fsr2h
 42452   014572  50DF               	movf	indf2,w,c
 42453                           
 42454                           ; Switch size 1, requested type "simple"
 42455                           ; Number of cases is 3, Range of values is 1 to 3
 42456                           ; switch strategies available:
 42457                           ; Name         Instructions Cycles
 42458                           ; simple_byte           10     6 (average)
 42459                           ;	Chosen strategy is simple_byte
 42460   014574  0A01               	xorlw	1	; case 1
 42461   014576  B4D8               	btfsc	status,2,c
 42462   014578  EF7B  F0A0         	goto	l252
 42463   01457C  0A03               	xorlw	3	; case 2
 42464   01457E  B4D8               	btfsc	status,2,c
 42465   014580  EF9D  F0A1         	goto	l21143
 42466   014584  0A01               	xorlw	1	; case 3
 42467   014586  B4D8               	btfsc	status,2,c
 42468   014588  EF02  F0A2         	goto	l21153
 42469   01458C  EFC8  F0A2         	goto	l21169
 42470   014590                     l21169:
 42471                           
 42472                           ; BSR set to: 6
 42473                           ;../fatfs/ff.c: 1288:  return res;
 42474   014590  5144               	movf	put_fat@res& (0+255),w,b
 42475   014592                     
 42476                           ; BSR set to: 6
 42477   014592  0012               	return		;funcret
 42478   014594                     __end_of_put_fat:
 42479                           	callstack 0
 42480                           
 42481 ;; *************** function _st_word *****************
 42482 ;; Defined at:
 42483 ;;		line 657 in file "../fatfs/ff.c"
 42484 ;; Parameters:    Size  Location     Type
 42485 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 42486 ;;		 -> fs$win(512), fs(564), NULL(0), 
 42487 ;;  val             2    5[COMRAM] unsigned short 
 42488 ;; Auto vars:     Size  Location     Type
 42489 ;;		None
 42490 ;; Return value:  Size  Location     Type
 42491 ;;                  1    wreg      void 
 42492 ;; Registers used:
 42493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42494 ;; Tracked objects:
 42495 ;;		On entry : 0/0
 42496 ;;		On exit  : 0/0
 42497 ;;		Unchanged: 0/0
 42498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42503 ;;Total ram usage:        4 bytes
 42504 ;; Hardware stack levels used: 1
 42505 ;; Hardware stack levels required when called: 1
 42506 ;; This function calls:
 42507 ;;		Nothing
 42508 ;; This function is called by:
 42509 ;;		_sync_fs
 42510 ;;		_put_fat
 42511 ;;		_st_clust
 42512 ;;		_f_sync
 42513 ;; This function uses a non-reentrant model
 42514 ;;
 42515                           
 42516                           	psect	text108
 42517   01FF8C                     __ptext108:
 42518                           	callstack 0
 42519   01FF8C                     _st_word:
 42520                           	callstack 116
 42521   01FF8C                     
 42522                           ;../fatfs/ff.c: 657: static void st_word (BYTE* ptr, WORD val);../fatfs/ff.c: 658: {;../
      +                          fatfs/ff.c: 659:  *ptr++ = (BYTE)val; val >>= 8;
 42523   01FF8C  C504  F4D9         	movff	st_word@ptr,fsr2l
 42524   01FF90  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 42525   01FF94  C506  F4DF         	movff	st_word@val,indf2
 42526   01FF98  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 42527   01FF9A  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 42528   01FF9C  5007               	movf	(st_word@val+1)^(0+1280),w,c
 42529   01FF9E  6E06               	movwf	st_word@val^(0+1280),c
 42530   01FFA0  6A07               	clrf	(st_word@val+1)^(0+1280),c
 42531   01FFA2                     
 42532                           ;../fatfs/ff.c: 660:  *ptr++ = (BYTE)val;
 42533   01FFA2  C504  F4D9         	movff	st_word@ptr,fsr2l
 42534   01FFA6  C505  F4DA         	movff	st_word@ptr+1,fsr2h
 42535   01FFAA  C506  F4DF         	movff	st_word@val,indf2
 42536   01FFAE  4A04               	infsnz	st_word@ptr^(0+1280),f,c
 42537   01FFB0  2A05               	incf	(st_word@ptr+1)^(0+1280),f,c
 42538   01FFB2  0012               	return		;funcret
 42539   01FFB4                     __end_of_st_word:
 42540                           	callstack 0
 42541                           
 42542 ;; *************** function _st_dword *****************
 42543 ;; Defined at:
 42544 ;;		line 663 in file "../fatfs/ff.c"
 42545 ;; Parameters:    Size  Location     Type
 42546 ;;  ptr             2    3[COMRAM] PTR unsigned char 
 42547 ;;		 -> fs$win(512), fs(564), NULL(0), 
 42548 ;;  val             4    5[COMRAM] unsigned long 
 42549 ;; Auto vars:     Size  Location     Type
 42550 ;;		None
 42551 ;; Return value:  Size  Location     Type
 42552 ;;                  1    wreg      void 
 42553 ;; Registers used:
 42554 ;;		fsr2l, fsr2h, status,2, status,0
 42555 ;; Tracked objects:
 42556 ;;		On entry : 0/0
 42557 ;;		On exit  : 0/0
 42558 ;;		Unchanged: 0/0
 42559 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42560 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42563 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42564 ;;Total ram usage:        6 bytes
 42565 ;; Hardware stack levels used: 1
 42566 ;; Hardware stack levels required when called: 1
 42567 ;; This function calls:
 42568 ;;		Nothing
 42569 ;; This function is called by:
 42570 ;;		_sync_fs
 42571 ;;		_put_fat
 42572 ;;		_f_open
 42573 ;;		_f_sync
 42574 ;;		_f_mkdir
 42575 ;; This function uses a non-reentrant model
 42576 ;;
 42577                           
 42578                           	psect	text109
 42579   01F5BA                     __ptext109:
 42580                           	callstack 0
 42581   01F5BA                     _st_dword:
 42582                           	callstack 116
 42583   01F5BA                     
 42584                           ;../fatfs/ff.c: 663: static void st_dword (BYTE* ptr, DWORD val);../fatfs/ff.c: 664: {;.
      +                          ./fatfs/ff.c: 665:  *ptr++ = (BYTE)val; val >>= 8;
 42585   01F5BA  C504  F4D9         	movff	st_dword@ptr,fsr2l
 42586   01F5BE  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 42587   01F5C2  C506  F4DF         	movff	st_dword@val,indf2
 42588   01F5C6  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 42589   01F5C8  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 42590   01F5CA  C507  F506         	movff	st_dword@val+1,st_dword@val
 42591   01F5CE  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 42592   01F5D2  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 42593   01F5D6  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 42594   01F5D8                     
 42595                           ;../fatfs/ff.c: 666:  *ptr++ = (BYTE)val; val >>= 8;
 42596   01F5D8  C504  F4D9         	movff	st_dword@ptr,fsr2l
 42597   01F5DC  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 42598   01F5E0  C506  F4DF         	movff	st_dword@val,indf2
 42599   01F5E4  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 42600   01F5E6  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 42601   01F5E8  C507  F506         	movff	st_dword@val+1,st_dword@val
 42602   01F5EC  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 42603   01F5F0  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 42604   01F5F4  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 42605   01F5F6                     
 42606                           ;../fatfs/ff.c: 667:  *ptr++ = (BYTE)val; val >>= 8;
 42607   01F5F6  C504  F4D9         	movff	st_dword@ptr,fsr2l
 42608   01F5FA  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 42609   01F5FE  C506  F4DF         	movff	st_dword@val,indf2
 42610   01F602  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 42611   01F604  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 42612   01F606  C507  F506         	movff	st_dword@val+1,st_dword@val
 42613   01F60A  C508  F507         	movff	st_dword@val+2,st_dword@val+1
 42614   01F60E  C509  F508         	movff	st_dword@val+3,st_dword@val+2
 42615   01F612  6A09               	clrf	(st_dword@val+3)^(0+1280),c
 42616   01F614                     
 42617                           ;../fatfs/ff.c: 668:  *ptr++ = (BYTE)val;
 42618   01F614  C504  F4D9         	movff	st_dword@ptr,fsr2l
 42619   01F618  C505  F4DA         	movff	st_dword@ptr+1,fsr2h
 42620   01F61C  C506  F4DF         	movff	st_dword@val,indf2
 42621   01F620  4A04               	infsnz	st_dword@ptr^(0+1280),f,c
 42622   01F622  2A05               	incf	(st_dword@ptr+1)^(0+1280),f,c
 42623   01F624  0012               	return		;funcret
 42624   01F626                     __end_of_st_dword:
 42625                           	callstack 0
 42626                           
 42627 ;; *************** function ___lldiv *****************
 42628 ;; Defined at:
 42629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
 42630 ;; Parameters:    Size  Location     Type
 42631 ;;  dividend        4    3[COMRAM] unsigned long 
 42632 ;;  divisor         4    7[COMRAM] unsigned long 
 42633 ;; Auto vars:     Size  Location     Type
 42634 ;;  quotient        4   11[COMRAM] unsigned long 
 42635 ;;  counter         1   15[COMRAM] unsigned char 
 42636 ;; Return value:  Size  Location     Type
 42637 ;;                  4    3[COMRAM] unsigned long 
 42638 ;; Registers used:
 42639 ;;		wreg, status,2, status,0
 42640 ;; Tracked objects:
 42641 ;;		On entry : 0/0
 42642 ;;		On exit  : 0/0
 42643 ;;		Unchanged: 0/0
 42644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42645 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42646 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42648 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42649 ;;Total ram usage:       13 bytes
 42650 ;; Hardware stack levels used: 1
 42651 ;; Hardware stack levels required when called: 1
 42652 ;; This function calls:
 42653 ;;		Nothing
 42654 ;; This function is called by:
 42655 ;;		_mount_volume
 42656 ;;		_f_lseek
 42657 ;; This function uses a non-reentrant model
 42658 ;;
 42659                           
 42660                           	psect	text110
 42661   01EAFC                     __ptext110:
 42662                           	callstack 0
 42663   01EAFC                     ___lldiv:
 42664                           	callstack 118
 42665   01EAFC  0E00               	movlw	0
 42666   01EAFE  6E0C               	movwf	___lldiv@quotient^(0+1280),c
 42667   01EB00  0E00               	movlw	0
 42668   01EB02  6E0D               	movwf	(___lldiv@quotient+1)^(0+1280),c
 42669   01EB04  0E00               	movlw	0
 42670   01EB06  6E0E               	movwf	(___lldiv@quotient+2)^(0+1280),c
 42671   01EB08  0E00               	movlw	0
 42672   01EB0A  6E0F               	movwf	(___lldiv@quotient+3)^(0+1280),c
 42673   01EB0C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 42674   01EB0E  1009               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 42675   01EB10  100A               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 42676   01EB12  100B               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 42677   01EB14  B4D8               	btfsc	status,2,c
 42678   01EB16  EF8F  F0F5         	goto	u30221
 42679   01EB1A  EF91  F0F5         	goto	u30220
 42680   01EB1E                     u30221:
 42681   01EB1E  EFC7  F0F5         	goto	l2572
 42682   01EB22                     u30220:
 42683   01EB22  0E01               	movlw	1
 42684   01EB24  6E10               	movwf	___lldiv@counter^(0+1280),c
 42685   01EB26  EF9B  F0F5         	goto	l22119
 42686   01EB2A                     l22117:
 42687   01EB2A  90D8               	bcf	status,0,c
 42688   01EB2C  3608               	rlcf	___lldiv@divisor^(0+1280),f,c
 42689   01EB2E  3609               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 42690   01EB30  360A               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 42691   01EB32  360B               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 42692   01EB34  2A10               	incf	___lldiv@counter^(0+1280),f,c
 42693   01EB36                     l22119:
 42694   01EB36  AE0B               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 42695   01EB38  EFA0  F0F5         	goto	u30231
 42696   01EB3C  EFA2  F0F5         	goto	u30230
 42697   01EB40                     u30231:
 42698   01EB40  EF95  F0F5         	goto	l22117
 42699   01EB44                     u30230:
 42700   01EB44                     l22121:
 42701   01EB44  90D8               	bcf	status,0,c
 42702   01EB46  360C               	rlcf	___lldiv@quotient^(0+1280),f,c
 42703   01EB48  360D               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 42704   01EB4A  360E               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 42705   01EB4C  360F               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 42706   01EB4E  5008               	movf	___lldiv@divisor^(0+1280),w,c
 42707   01EB50  5C04               	subwf	___lldiv@dividend^(0+1280),w,c
 42708   01EB52  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 42709   01EB54  5805               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 42710   01EB56  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 42711   01EB58  5806               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 42712   01EB5A  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 42713   01EB5C  5807               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 42714   01EB5E  A0D8               	btfss	status,0,c
 42715   01EB60  EFB4  F0F5         	goto	u30241
 42716   01EB64  EFB6  F0F5         	goto	u30240
 42717   01EB68                     u30241:
 42718   01EB68  EFBF  F0F5         	goto	l22129
 42719   01EB6C                     u30240:
 42720   01EB6C  5008               	movf	___lldiv@divisor^(0+1280),w,c
 42721   01EB6E  5E04               	subwf	___lldiv@dividend^(0+1280),f,c
 42722   01EB70  5009               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 42723   01EB72  5A05               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 42724   01EB74  500A               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 42725   01EB76  5A06               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 42726   01EB78  500B               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 42727   01EB7A  5A07               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 42728   01EB7C  800C               	bsf	___lldiv@quotient^(0+1280),0,c
 42729   01EB7E                     l22129:
 42730   01EB7E  90D8               	bcf	status,0,c
 42731   01EB80  320B               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 42732   01EB82  320A               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 42733   01EB84  3209               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 42734   01EB86  3208               	rrcf	___lldiv@divisor^(0+1280),f,c
 42735   01EB88  2E10               	decfsz	___lldiv@counter^(0+1280),f,c
 42736   01EB8A  EFA2  F0F5         	goto	l22121
 42737   01EB8E                     l2572:
 42738   01EB8E  C50C  F504         	movff	___lldiv@quotient,?___lldiv
 42739   01EB92  C50D  F505         	movff	___lldiv@quotient+1,?___lldiv+1
 42740   01EB96  C50E  F506         	movff	___lldiv@quotient+2,?___lldiv+2
 42741   01EB9A  C50F  F507         	movff	___lldiv@quotient+3,?___lldiv+3
 42742   01EB9E  0012               	return		;funcret
 42743   01EBA0                     __end_of___lldiv:
 42744                           	callstack 0
 42745                           
 42746 ;; *************** function _f_read *****************
 42747 ;; Defined at:
 42748 ;;		line 3916 in file "../fatfs/ff.c"
 42749 ;; Parameters:    Size  Location     Type
 42750 ;;  fp              2   62[BANK6 ] PTR struct .
 42751 ;;		 -> in_fl(546), rom_fl(546), 
 42752 ;;  buff            2   64[BANK6 ] PTR void 
 42753 ;;		 -> cin_file(512), tmp_buf(512), disk_buf(128), f_gets@s(4), 
 42754 ;;  btr             2   66[BANK6 ] unsigned int 
 42755 ;;  br              2   68[BANK6 ] PTR unsigned int 
 42756 ;;		 -> see_file@br(2), fin_cnt(2), load_program@br(2), read_sector@n(2), 
 42757 ;;		 -> f_gets@rc(2), 
 42758 ;; Auto vars:     Size  Location     Type
 42759 ;;  sect            4   99[BANK6 ] unsigned long 
 42760 ;;  clst            4   87[BANK6 ] unsigned long 
 42761 ;;  remain          4   82[BANK6 ] unsigned long 
 42762 ;;  fs              2  103[BANK6 ] PTR struct .
 42763 ;;		 -> fs(564), NULL(0), 
 42764 ;;  rcnt            2   97[BANK6 ] unsigned int 
 42765 ;;  cc              2   95[BANK6 ] unsigned int 
 42766 ;;  csect           2   93[BANK6 ] unsigned int 
 42767 ;;  rbuff           2   91[BANK6 ] PTR unsigned char 
 42768 ;;		 -> cin_file(512), tmp_buf(512), disk_buf(128), f_gets@s(4), 
 42769 ;;  res             1   86[BANK6 ] enum E597
 42770 ;; Return value:  Size  Location     Type
 42771 ;;                  1    wreg      enum E597
 42772 ;; Registers used:
 42773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 42774 ;; Tracked objects:
 42775 ;;		On entry : 0/0
 42776 ;;		On exit  : 0/0
 42777 ;;		Unchanged: 0/0
 42778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42779 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42780 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42781 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42782 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42783 ;;Total ram usage:       43 bytes
 42784 ;; Hardware stack levels used: 1
 42785 ;; Hardware stack levels required when called: 15
 42786 ;; This function calls:
 42787 ;;		_clst2sect
 42788 ;;		_disk_read
 42789 ;;		_disk_write
 42790 ;;		_get_fat
 42791 ;;		_memcpy
 42792 ;;		_validate
 42793 ;; This function is called by:
 42794 ;;		_f_gets
 42795 ;;		_read_sector
 42796 ;;		_load_program
 42797 ;;		_see_file
 42798 ;;		_in_file
 42799 ;;		_str_inf
 42800 ;; This function uses a non-reentrant model
 42801 ;;
 42802                           
 42803                           	psect	text111
 42804   012D36                     __ptext111:
 42805                           	callstack 0
 42806   012D36                     _f_read:
 42807                           	callstack 105
 42808   012D36                     
 42809                           ;../fatfs/ff.c: 3917:  FIL* fp,;../fatfs/ff.c: 3918:  void* buff,;../fatfs/ff.c: 3919:  
      +                          UINT btr,;../fatfs/ff.c: 3920:  UINT* br;../fatfs/ff.c: 3922: {;../fatfs/ff.c: 3923:  FR
      +                          ESULT res;;../fatfs/ff.c: 3924:  FATFS *fs;;../fatfs/ff.c: 3925:  DWORD clst;;../fatfs/f
      +                          f.c: 3926:  LBA_t sect;;../fatfs/ff.c: 3927:  FSIZE_t remain;;../fatfs/ff.c: 3928:  UINT
      +                           rcnt, cc, csect;;../fatfs/ff.c: 3929:  BYTE *rbuff = (BYTE*)buff;
 42810   012D36  C640  F65B         	movff	f_read@buff,f_read@rbuff
 42811   012D3A  C641  F65C         	movff	f_read@buff+1,f_read@rbuff+1
 42812   012D3E                     
 42813                           ;../fatfs/ff.c: 3932:  *br = 0;
 42814   012D3E  C644  F4D9         	movff	f_read@br,fsr2l
 42815   012D42  C645  F4DA         	movff	f_read@br+1,fsr2h
 42816   012D46  6ADE               	clrf	postinc2,c
 42817   012D48  6ADD               	clrf	postdec2,c
 42818   012D4A                     
 42819                           ;../fatfs/ff.c: 3933:  res = validate(&fp->obj, &fs);
 42820   012D4A  C63E  F5BE         	movff	f_read@fp,validate@obj
 42821   012D4E  C63F  F5BF         	movff	f_read@fp+1,validate@obj+1
 42822   012D52  0E67               	movlw	low f_read@fs
 42823   012D54  0105               	movlb	5	; () banked
 42824   012D56  6FC0               	movwf	validate@rfs& (0+255),b
 42825   012D58  0E06               	movlw	high f_read@fs
 42826   012D5A  6FC1               	movwf	(validate@rfs+1)& (0+255),b
 42827   012D5C  ECA3  F0E9         	call	_validate	;wreg free
 42828   012D60  0106               	movlb	6	; () banked
 42829   012D62  6F56               	movwf	f_read@res& (0+255),b
 42830   012D64                     
 42831                           ; BSR set to: 6
 42832                           ;../fatfs/ff.c: 3934:  if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res
      +                          ;
 42833   012D64  5156               	movf	f_read@res& (0+255),w,b
 42834   012D66  A4D8               	btfss	status,2,c
 42835   012D68  EFB8  F096         	goto	u31341
 42836   012D6C  EFBA  F096         	goto	u31340
 42837   012D70                     u31341:
 42838   012D70  EFCA  F096         	goto	l22729
 42839   012D74                     u31340:
 42840   012D74                     
 42841                           ; BSR set to: 6
 42842   012D74  EE20 F00F          	lfsr	2,15
 42843   012D78  513E               	movf	f_read@fp& (0+255),w,b
 42844   012D7A  26D9               	addwf	fsr2l,f,c
 42845   012D7C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42846   012D7E  22DA               	addwfc	fsr2h,f,c
 42847   012D80  50DF               	movf	indf2,w,c
 42848   012D82  6F56               	movwf	f_read@res& (0+255),b
 42849   012D84  5156               	movf	f_read@res& (0+255),w,b
 42850   012D86  B4D8               	btfsc	status,2,c
 42851   012D88  EFC8  F096         	goto	u31351
 42852   012D8C  EFCA  F096         	goto	u31350
 42853   012D90                     u31351:
 42854   012D90  EFCD  F096         	goto	l22733
 42855   012D94                     u31350:
 42856   012D94                     l22729:
 42857                           
 42858                           ; BSR set to: 6
 42859   012D94  5156               	movf	f_read@res& (0+255),w,b
 42860   012D96  EF24  F09A         	goto	l672
 42861   012D9A                     l22733:
 42862                           
 42863                           ; BSR set to: 6
 42864                           ;../fatfs/ff.c: 3935:  if (!(fp->flag & 0x01)) return FR_DENIED;
 42865   012D9A  EE20 F00E          	lfsr	2,14
 42866   012D9E  513E               	movf	f_read@fp& (0+255),w,b
 42867   012DA0  26D9               	addwf	fsr2l,f,c
 42868   012DA2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42869   012DA4  22DA               	addwfc	fsr2h,f,c
 42870   012DA6  B0DF               	btfsc	indf2,0,c
 42871   012DA8  EFD8  F096         	goto	u31361
 42872   012DAC  EFDA  F096         	goto	u31360
 42873   012DB0                     u31361:
 42874   012DB0  EFDD  F096         	goto	l22739
 42875   012DB4                     u31360:
 42876   012DB4                     
 42877                           ; BSR set to: 6
 42878   012DB4  0E07               	movlw	7
 42879   012DB6  EF24  F09A         	goto	l672
 42880   012DBA                     l22739:
 42881                           
 42882                           ; BSR set to: 6
 42883                           ;../fatfs/ff.c: 3936:  remain = fp->obj.objsize - fp->fptr;
 42884   012DBA  EE20 F010          	lfsr	2,16
 42885   012DBE  513E               	movf	f_read@fp& (0+255),w,b
 42886   012DC0  26D9               	addwf	fsr2l,f,c
 42887   012DC2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42888   012DC4  22DA               	addwfc	fsr2h,f,c
 42889   012DC6  C4DE F646          	movff	postinc2,??_f_read
 42890   012DCA  C4DE F647          	movff	postinc2,??_f_read+1
 42891   012DCE  C4DE F648          	movff	postinc2,??_f_read+2
 42892   012DD2  C4DE F649          	movff	postinc2,??_f_read+3
 42893   012DD6  EE20 F00A          	lfsr	2,10
 42894   012DDA  513E               	movf	f_read@fp& (0+255),w,b
 42895   012DDC  26D9               	addwf	fsr2l,f,c
 42896   012DDE  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42897   012DE0  22DA               	addwfc	fsr2h,f,c
 42898   012DE2  C4DE F64A          	movff	postinc2,??_f_read+4
 42899   012DE6  C4DE F64B          	movff	postinc2,??_f_read+5
 42900   012DEA  C4DE F64C          	movff	postinc2,??_f_read+6
 42901   012DEE  C4DE F64D          	movff	postinc2,??_f_read+7
 42902   012DF2  5146               	movf	??_f_read& (0+255),w,b
 42903   012DF4  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 42904   012DF6  6F52               	movwf	f_read@remain& (0+255),b
 42905   012DF8  5147               	movf	(??_f_read+1)& (0+255),w,b
 42906   012DFA  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 42907   012DFC  6F53               	movwf	(f_read@remain+1)& (0+255),b
 42908   012DFE  5148               	movf	(??_f_read+2)& (0+255),w,b
 42909   012E00  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 42910   012E02  6F54               	movwf	(f_read@remain+2)& (0+255),b
 42911   012E04  5149               	movf	(??_f_read+3)& (0+255),w,b
 42912   012E06  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 42913   012E08  6F55               	movwf	(f_read@remain+3)& (0+255),b
 42914   012E0A                     
 42915                           ; BSR set to: 6
 42916                           ;../fatfs/ff.c: 3937:  if (btr > remain) btr = (UINT)remain;
 42917   012E0A  5142               	movf	f_read@btr& (0+255),w,b
 42918   012E0C  6F46               	movwf	??_f_read& (0+255),b
 42919   012E0E  5143               	movf	(f_read@btr+1)& (0+255),w,b
 42920   012E10  6F47               	movwf	(??_f_read+1)& (0+255),b
 42921   012E12  6B48               	clrf	(??_f_read+2)& (0+255),b
 42922   012E14  6B49               	clrf	(??_f_read+3)& (0+255),b
 42923   012E16  5146               	movf	??_f_read& (0+255),w,b
 42924   012E18  5D52               	subwf	f_read@remain& (0+255),w,b
 42925   012E1A  5147               	movf	(??_f_read+1)& (0+255),w,b
 42926   012E1C  5953               	subwfb	(f_read@remain+1)& (0+255),w,b
 42927   012E1E  5148               	movf	(??_f_read+2)& (0+255),w,b
 42928   012E20  5954               	subwfb	(f_read@remain+2)& (0+255),w,b
 42929   012E22  5149               	movf	(??_f_read+3)& (0+255),w,b
 42930   012E24  5955               	subwfb	(f_read@remain+3)& (0+255),w,b
 42931   012E26  B0D8               	btfsc	status,0,c
 42932   012E28  EF18  F097         	goto	u31371
 42933   012E2C  EF1A  F097         	goto	u31370
 42934   012E30                     u31371:
 42935   012E30  EF1E  F097         	goto	l22745
 42936   012E34                     u31370:
 42937   012E34                     
 42938                           ; BSR set to: 6
 42939   012E34  C652  F642         	movff	f_read@remain,f_read@btr
 42940   012E38  C653  F643         	movff	f_read@remain+1,f_read@btr+1
 42941   012E3C                     l22745:
 42942                           
 42943                           ; BSR set to: 6
 42944                           ;../fatfs/ff.c: 3939:  for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fpt
      +                          r += rcnt) {
 42945   012E3C  5142               	movf	f_read@btr& (0+255),w,b
 42946   012E3E  1143               	iorwf	(f_read@btr+1)& (0+255),w,b
 42947   012E40  A4D8               	btfss	status,2,c
 42948   012E42  EF25  F097         	goto	u31381
 42949   012E46  EF27  F097         	goto	u31380
 42950   012E4A                     u31381:
 42951   012E4A  EF29  F097         	goto	l22749
 42952   012E4E                     u31380:
 42953   012E4E  EF23  F09A         	goto	l22855
 42954   012E52                     l22749:
 42955                           
 42956                           ; BSR set to: 6
 42957                           ;../fatfs/ff.c: 3940:   if (fp->fptr % ((UINT)512) == 0) {
 42958   012E52  EE20 F010          	lfsr	2,16
 42959   012E56  513E               	movf	f_read@fp& (0+255),w,b
 42960   012E58  26D9               	addwf	fsr2l,f,c
 42961   012E5A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42962   012E5C  22DA               	addwfc	fsr2h,f,c
 42963   012E5E  0EFF               	movlw	255
 42964   012E60  14DE               	andwf	postinc2,w,c
 42965   012E62  6F46               	movwf	??_f_read& (0+255),b
 42966   012E64  0E01               	movlw	1
 42967   012E66  14DE               	andwf	postinc2,w,c
 42968   012E68  6F47               	movwf	(??_f_read+1)& (0+255),b
 42969   012E6A  0E00               	movlw	0
 42970   012E6C  14DE               	andwf	postinc2,w,c
 42971   012E6E  6F48               	movwf	(??_f_read+2)& (0+255),b
 42972   012E70  0E00               	movlw	0
 42973   012E72  14DE               	andwf	postinc2,w,c
 42974   012E74  6F49               	movwf	(??_f_read+3)& (0+255),b
 42975   012E76  5146               	movf	??_f_read& (0+255),w,b
 42976   012E78  1147               	iorwf	(??_f_read+1)& (0+255),w,b
 42977   012E7A  1148               	iorwf	(??_f_read+2)& (0+255),w,b
 42978   012E7C  1149               	iorwf	(??_f_read+3)& (0+255),w,b
 42979   012E7E  A4D8               	btfss	status,2,c
 42980   012E80  EF44  F097         	goto	u31391
 42981   012E84  EF46  F097         	goto	u31390
 42982   012E88                     u31391:
 42983   012E88  EFB6  F099         	goto	l677
 42984   012E8C                     u31390:
 42985   012E8C                     
 42986                           ; BSR set to: 6
 42987                           ;../fatfs/ff.c: 3941:    csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
 42988   012E8C  EE20 F010          	lfsr	2,16
 42989   012E90  513E               	movf	f_read@fp& (0+255),w,b
 42990   012E92  26D9               	addwf	fsr2l,f,c
 42991   012E94  513F               	movf	(f_read@fp+1)& (0+255),w,b
 42992   012E96  22DA               	addwfc	fsr2h,f,c
 42993   012E98  C4DE F646          	movff	postinc2,??_f_read
 42994   012E9C  C4DE F647          	movff	postinc2,??_f_read+1
 42995   012EA0  C4DE F648          	movff	postinc2,??_f_read+2
 42996   012EA4  C4DE F649          	movff	postinc2,??_f_read+3
 42997   012EA8  0E0A               	movlw	10
 42998   012EAA  EF5C  F097         	goto	u31400
 42999   012EAE                     u31405:
 43000   012EAE  90D8               	bcf	status,0,c
 43001   012EB0  3349               	rrcf	(??_f_read+3)& (0+255),f,b
 43002   012EB2  3348               	rrcf	(??_f_read+2)& (0+255),f,b
 43003   012EB4  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 43004   012EB6  3346               	rrcf	??_f_read& (0+255),f,b
 43005   012EB8                     u31400:
 43006   012EB8  2EE8               	decfsz	wreg,f,c
 43007   012EBA  EF57  F097         	goto	u31405
 43008   012EBE  EE20 F00A          	lfsr	2,10
 43009   012EC2  5167               	movf	f_read@fs& (0+255),w,b
 43010   012EC4  26D9               	addwf	fsr2l,f,c
 43011   012EC6  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43012   012EC8  22DA               	addwfc	fsr2h,f,c
 43013   012ECA  C4DE F64A          	movff	postinc2,??_f_read+4
 43014   012ECE  C4DD F64B          	movff	postdec2,??_f_read+5
 43015   012ED2  0EFF               	movlw	255
 43016   012ED4  254A               	addwf	(??_f_read+4)& (0+255),w,b
 43017   012ED6  6F4C               	movwf	(??_f_read+6)& (0+255),b
 43018   012ED8  0EFF               	movlw	255
 43019   012EDA  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 43020   012EDC  6F4D               	movwf	(??_f_read+7)& (0+255),b
 43021   012EDE  5146               	movf	??_f_read& (0+255),w,b
 43022   012EE0  154C               	andwf	(??_f_read+6)& (0+255),w,b
 43023   012EE2  6F5D               	movwf	f_read@csect& (0+255),b
 43024   012EE4  5147               	movf	(??_f_read+1)& (0+255),w,b
 43025   012EE6  154D               	andwf	(??_f_read+7)& (0+255),w,b
 43026   012EE8  6F5E               	movwf	(f_read@csect+1)& (0+255),b
 43027   012EEA                     
 43028                           ; BSR set to: 6
 43029                           ;../fatfs/ff.c: 3942:    if (csect == 0) {
 43030   012EEA  515D               	movf	f_read@csect& (0+255),w,b
 43031   012EEC  115E               	iorwf	(f_read@csect+1)& (0+255),w,b
 43032   012EEE  A4D8               	btfss	status,2,c
 43033   012EF0  EF7C  F097         	goto	u31411
 43034   012EF4  EF7E  F097         	goto	u31410
 43035   012EF8                     u31411:
 43036   012EF8  EFFB  F097         	goto	l22779
 43037   012EFC                     u31410:
 43038   012EFC                     
 43039                           ; BSR set to: 6
 43040                           ;../fatfs/ff.c: 3943:     if (fp->fptr == 0) {
 43041   012EFC  EE20 F010          	lfsr	2,16
 43042   012F00  513E               	movf	f_read@fp& (0+255),w,b
 43043   012F02  26D9               	addwf	fsr2l,f,c
 43044   012F04  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43045   012F06  22DA               	addwfc	fsr2h,f,c
 43046   012F08  50DE               	movf	postinc2,w,c
 43047   012F0A  10DE               	iorwf	postinc2,w,c
 43048   012F0C  10DE               	iorwf	postinc2,w,c
 43049   012F0E  10DE               	iorwf	postinc2,w,c
 43050   012F10  A4D8               	btfss	status,2,c
 43051   012F12  EF8D  F097         	goto	u31421
 43052   012F16  EF8F  F097         	goto	u31420
 43053   012F1A                     u31421:
 43054   012F1A  EF9F  F097         	goto	l22759
 43055   012F1E                     u31420:
 43056   012F1E                     
 43057                           ; BSR set to: 6
 43058                           ;../fatfs/ff.c: 3944:      clst = fp->obj.sclust;
 43059   012F1E  EE20 F006          	lfsr	2,6
 43060   012F22  513E               	movf	f_read@fp& (0+255),w,b
 43061   012F24  26D9               	addwf	fsr2l,f,c
 43062   012F26  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43063   012F28  22DA               	addwfc	fsr2h,f,c
 43064   012F2A  C4DE F657          	movff	postinc2,f_read@clst
 43065   012F2E  C4DE F658          	movff	postinc2,f_read@clst+1
 43066   012F32  C4DE F659          	movff	postinc2,f_read@clst+2
 43067   012F36  C4DE F65A          	movff	postinc2,f_read@clst+3
 43068                           
 43069                           ;../fatfs/ff.c: 3945:     } else {
 43070   012F3A  EFBB  F097         	goto	l22761
 43071   012F3E                     l22759:
 43072                           
 43073                           ; BSR set to: 6
 43074                           ;../fatfs/ff.c: 3951:      {;../fatfs/ff.c: 3952:       clst = get_fat(&fp->obj, fp->clu
      +                          st);
 43075   012F3E  C63E  F624         	movff	f_read@fp,get_fat@obj
 43076   012F42  C63F  F625         	movff	f_read@fp+1,get_fat@obj+1
 43077   012F46  EE20 F014          	lfsr	2,20
 43078   012F4A  513E               	movf	f_read@fp& (0+255),w,b
 43079   012F4C  26D9               	addwf	fsr2l,f,c
 43080   012F4E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43081   012F50  22DA               	addwfc	fsr2h,f,c
 43082   012F52  C4DE F626          	movff	postinc2,get_fat@clst
 43083   012F56  C4DE F627          	movff	postinc2,get_fat@clst+1
 43084   012F5A  C4DE F628          	movff	postinc2,get_fat@clst+2
 43085   012F5E  C4DE F629          	movff	postinc2,get_fat@clst+3
 43086   012F62  ECF7  F0B4         	call	_get_fat	;wreg free
 43087   012F66  C624  F657         	movff	?_get_fat,f_read@clst
 43088   012F6A  C625  F658         	movff	?_get_fat+1,f_read@clst+1
 43089   012F6E  C626  F659         	movff	?_get_fat+2,f_read@clst+2
 43090   012F72  C627  F65A         	movff	?_get_fat+3,f_read@clst+3
 43091   012F76                     l22761:
 43092                           
 43093                           ;../fatfs/ff.c: 3955:     if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 43094   012F76  0106               	movlb	6	; () banked
 43095   012F78  515A               	movf	(f_read@clst+3)& (0+255),w,b
 43096   012F7A  1159               	iorwf	(f_read@clst+2)& (0+255),w,b
 43097   012F7C  1158               	iorwf	(f_read@clst+1)& (0+255),w,b
 43098   012F7E  E107               	bnz	u31431
 43099   012F80  0E02               	movlw	2
 43100   012F82  5D57               	subwf	f_read@clst& (0+255),w,b
 43101   012F84  B0D8               	btfsc	status,0,c
 43102   012F86  EFC7  F097         	goto	u31431
 43103   012F8A  EFC9  F097         	goto	u31430
 43104   012F8E                     u31431:
 43105   012F8E  EFD4  F097         	goto	l22769
 43106   012F92                     u31430:
 43107   012F92                     
 43108                           ; BSR set to: 6
 43109   012F92  EE20 F00F          	lfsr	2,15
 43110   012F96  513E               	movf	f_read@fp& (0+255),w,b
 43111   012F98  26D9               	addwf	fsr2l,f,c
 43112   012F9A  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43113   012F9C  22DA               	addwfc	fsr2h,f,c
 43114   012F9E  0E02               	movlw	2
 43115   012FA0  6EDF               	movwf	indf2,c
 43116   012FA2                     l22765:
 43117                           
 43118                           ; BSR set to: 6
 43119   012FA2  0E02               	movlw	2
 43120   012FA4  EF24  F09A         	goto	l672
 43121   012FA8                     l22769:
 43122                           
 43123                           ; BSR set to: 6
 43124                           ;../fatfs/ff.c: 3956:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); retur
      +                          n FR_DISK_ERR; };
 43125   012FA8  2957               	incf	f_read@clst& (0+255),w,b
 43126   012FAA  E10A               	bnz	u31441
 43127   012FAC  2958               	incf	(f_read@clst+1)& (0+255),w,b
 43128   012FAE  E108               	bnz	u31441
 43129   012FB0  2959               	incf	(f_read@clst+2)& (0+255),w,b
 43130   012FB2  E106               	bnz	u31441
 43131   012FB4  295A               	incf	(f_read@clst+3)& (0+255),w,b
 43132   012FB6  A4D8               	btfss	status,2,c
 43133   012FB8  EFE0  F097         	goto	u31441
 43134   012FBC  EFE2  F097         	goto	u31440
 43135   012FC0                     u31441:
 43136   012FC0  EFED  F097         	goto	l22777
 43137   012FC4                     u31440:
 43138   012FC4                     
 43139                           ; BSR set to: 6
 43140   012FC4  EE20 F00F          	lfsr	2,15
 43141   012FC8  513E               	movf	f_read@fp& (0+255),w,b
 43142   012FCA  26D9               	addwf	fsr2l,f,c
 43143   012FCC  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43144   012FCE  22DA               	addwfc	fsr2h,f,c
 43145   012FD0  0E01               	movlw	1
 43146   012FD2  6EDF               	movwf	indf2,c
 43147   012FD4                     l22773:
 43148                           
 43149                           ; BSR set to: 6
 43150   012FD4  0E01               	movlw	1
 43151   012FD6  EF24  F09A         	goto	l672
 43152   012FDA                     l22777:
 43153                           
 43154                           ; BSR set to: 6
 43155                           ;../fatfs/ff.c: 3957:     fp->clust = clst;
 43156   012FDA  EE20 F014          	lfsr	2,20
 43157   012FDE  513E               	movf	f_read@fp& (0+255),w,b
 43158   012FE0  26D9               	addwf	fsr2l,f,c
 43159   012FE2  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43160   012FE4  22DA               	addwfc	fsr2h,f,c
 43161   012FE6  C657  F4DE         	movff	f_read@clst,postinc2
 43162   012FEA  C658  F4DE         	movff	f_read@clst+1,postinc2
 43163   012FEE  C659  F4DE         	movff	f_read@clst+2,postinc2
 43164   012FF2  C65A  F4DE         	movff	f_read@clst+3,postinc2
 43165   012FF6                     l22779:
 43166                           
 43167                           ; BSR set to: 6
 43168                           ;../fatfs/ff.c: 3959:    sect = clst2sect(fs, fp->clust);
 43169   012FF6  C667  F510         	movff	f_read@fs,clst2sect@fs
 43170   012FFA  C668  F511         	movff	f_read@fs+1,clst2sect@fs+1
 43171   012FFE  EE20 F014          	lfsr	2,20
 43172   013002  513E               	movf	f_read@fp& (0+255),w,b
 43173   013004  26D9               	addwf	fsr2l,f,c
 43174   013006  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43175   013008  22DA               	addwfc	fsr2h,f,c
 43176   01300A  C4DE F512          	movff	postinc2,clst2sect@clst
 43177   01300E  C4DE F513          	movff	postinc2,clst2sect@clst+1
 43178   013012  C4DE F514          	movff	postinc2,clst2sect@clst+2
 43179   013016  C4DE F515          	movff	postinc2,clst2sect@clst+3
 43180   01301A  EC7A  F0F0         	call	_clst2sect	;wreg free
 43181   01301E  C510  F663         	movff	?_clst2sect,f_read@sect
 43182   013022  C511  F664         	movff	?_clst2sect+1,f_read@sect+1
 43183   013026  C512  F665         	movff	?_clst2sect+2,f_read@sect+2
 43184   01302A  C513  F666         	movff	?_clst2sect+3,f_read@sect+3
 43185   01302E                     
 43186                           ;../fatfs/ff.c: 3960:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ER
      +                          R; };
 43187   01302E  0106               	movlb	6	; () banked
 43188   013030  5163               	movf	f_read@sect& (0+255),w,b
 43189   013032  1164               	iorwf	(f_read@sect+1)& (0+255),w,b
 43190   013034  1165               	iorwf	(f_read@sect+2)& (0+255),w,b
 43191   013036  1166               	iorwf	(f_read@sect+3)& (0+255),w,b
 43192   013038  A4D8               	btfss	status,2,c
 43193   01303A  EF21  F098         	goto	u31451
 43194   01303E  EF23  F098         	goto	u31450
 43195   013042                     u31451:
 43196   013042  EF2D  F098         	goto	l22789
 43197   013046                     u31450:
 43198   013046                     
 43199                           ; BSR set to: 6
 43200   013046  EE20 F00F          	lfsr	2,15
 43201   01304A  513E               	movf	f_read@fp& (0+255),w,b
 43202   01304C  26D9               	addwf	fsr2l,f,c
 43203   01304E  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43204   013050  22DA               	addwfc	fsr2h,f,c
 43205   013052  0E02               	movlw	2
 43206   013054  6EDF               	movwf	indf2,c
 43207   013056  EFD1  F097         	goto	l22765
 43208   01305A                     l22789:
 43209                           
 43210                           ; BSR set to: 6
 43211                           ;../fatfs/ff.c: 3961:    sect += csect;
 43212   01305A  515D               	movf	f_read@csect& (0+255),w,b
 43213   01305C  2763               	addwf	f_read@sect& (0+255),f,b
 43214   01305E  515E               	movf	(f_read@csect+1)& (0+255),w,b
 43215   013060  2364               	addwfc	(f_read@sect+1)& (0+255),f,b
 43216   013062  0E00               	movlw	0
 43217   013064  2365               	addwfc	(f_read@sect+2)& (0+255),f,b
 43218   013066  0E00               	movlw	0
 43219   013068  2366               	addwfc	(f_read@sect+3)& (0+255),f,b
 43220   01306A                     
 43221                           ; BSR set to: 6
 43222                           ;../fatfs/ff.c: 3962:    cc = btr / ((UINT)512);
 43223   01306A  C642  F646         	movff	f_read@btr,??_f_read
 43224   01306E  C643  F647         	movff	f_read@btr+1,??_f_read+1
 43225   013072  0E09               	movlw	9
 43226   013074  6F48               	movwf	(??_f_read+2)& (0+255),b
 43227   013076                     u31465:
 43228   013076  90D8               	bcf	status,0,c
 43229   013078  3347               	rrcf	(??_f_read+1)& (0+255),f,b
 43230   01307A  3346               	rrcf	??_f_read& (0+255),f,b
 43231   01307C  2F48               	decfsz	(??_f_read+2)& (0+255),f,b
 43232   01307E  EF3B  F098         	goto	u31465
 43233   013082  C646  F65F         	movff	??_f_read,f_read@cc
 43234   013086  C647  F660         	movff	??_f_read+1,f_read@cc+1
 43235   01308A                     
 43236                           ; BSR set to: 6
 43237                           ;../fatfs/ff.c: 3963:    if (cc > 0) {
 43238   01308A  515F               	movf	f_read@cc& (0+255),w,b
 43239   01308C  1160               	iorwf	(f_read@cc+1)& (0+255),w,b
 43240   01308E  B4D8               	btfsc	status,2,c
 43241   013090  EF4C  F098         	goto	u31471
 43242   013094  EF4E  F098         	goto	u31470
 43243   013098                     u31471:
 43244   013098  EF17  F099         	goto	l22815
 43245   01309C                     u31470:
 43246   01309C                     
 43247                           ; BSR set to: 6
 43248                           ;../fatfs/ff.c: 3964:     if (csect + cc > fs->csize) {
 43249   01309C  515F               	movf	f_read@cc& (0+255),w,b
 43250   01309E  255D               	addwf	f_read@csect& (0+255),w,b
 43251   0130A0  6F46               	movwf	??_f_read& (0+255),b
 43252   0130A2  5160               	movf	(f_read@cc+1)& (0+255),w,b
 43253   0130A4  215E               	addwfc	(f_read@csect+1)& (0+255),w,b
 43254   0130A6  6F47               	movwf	(??_f_read+1)& (0+255),b
 43255   0130A8  EE20 F00A          	lfsr	2,10
 43256   0130AC  5167               	movf	f_read@fs& (0+255),w,b
 43257   0130AE  26D9               	addwf	fsr2l,f,c
 43258   0130B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43259   0130B2  22DA               	addwfc	fsr2h,f,c
 43260   0130B4  5146               	movf	??_f_read& (0+255),w,b
 43261   0130B6  5CDE               	subwf	postinc2,w,c
 43262   0130B8  5147               	movf	(??_f_read+1)& (0+255),w,b
 43263   0130BA  58DE               	subwfb	postinc2,w,c
 43264   0130BC  B0D8               	btfsc	status,0,c
 43265   0130BE  EF63  F098         	goto	u31481
 43266   0130C2  EF65  F098         	goto	u31480
 43267   0130C6                     u31481:
 43268   0130C6  EF75  F098         	goto	l22799
 43269   0130CA                     u31480:
 43270   0130CA                     
 43271                           ; BSR set to: 6
 43272                           ;../fatfs/ff.c: 3965:      cc = fs->csize - csect;
 43273   0130CA  EE20 F00A          	lfsr	2,10
 43274   0130CE  5167               	movf	f_read@fs& (0+255),w,b
 43275   0130D0  26D9               	addwf	fsr2l,f,c
 43276   0130D2  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43277   0130D4  22DA               	addwfc	fsr2h,f,c
 43278   0130D6  C4DE F646          	movff	postinc2,??_f_read
 43279   0130DA  C4DD F647          	movff	postdec2,??_f_read+1
 43280   0130DE  515D               	movf	f_read@csect& (0+255),w,b
 43281   0130E0  5D46               	subwf	??_f_read& (0+255),w,b
 43282   0130E2  6F5F               	movwf	f_read@cc& (0+255),b
 43283   0130E4  515E               	movf	(f_read@csect+1)& (0+255),w,b
 43284   0130E6  5947               	subwfb	(??_f_read+1)& (0+255),w,b
 43285   0130E8  6F60               	movwf	(f_read@cc+1)& (0+255),b
 43286   0130EA                     l22799:
 43287                           
 43288                           ; BSR set to: 6
 43289                           ;../fatfs/ff.c: 3967:     if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err 
      +                          = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 43290   0130EA  C65B  F600         	movff	f_read@rbuff,disk_read@buff
 43291   0130EE  C65C  F601         	movff	f_read@rbuff+1,disk_read@buff+1
 43292   0130F2  C663  F602         	movff	f_read@sect,disk_read@sector
 43293   0130F6  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 43294   0130FA  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 43295   0130FE  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 43296   013102  C65F  F606         	movff	f_read@cc,disk_read@count
 43297   013106  C660  F607         	movff	f_read@cc+1,disk_read@count+1
 43298   01310A  EE20 F001          	lfsr	2,1
 43299   01310E  5167               	movf	f_read@fs& (0+255),w,b
 43300   013110  26D9               	addwf	fsr2l,f,c
 43301   013112  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43302   013114  22DA               	addwfc	fsr2h,f,c
 43303   013116  50DF               	movf	indf2,w,c
 43304   013118  ECD5  F0F3         	call	_disk_read
 43305   01311C  0900               	iorlw	0
 43306   01311E  B4D8               	btfsc	status,2,c
 43307   013120  EF94  F098         	goto	u31491
 43308   013124  EF96  F098         	goto	u31490
 43309   013128                     u31491:
 43310   013128  EFA1  F098         	goto	l22807
 43311   01312C                     u31490:
 43312   01312C  0106               	movlb	6	; () banked
 43313   01312E  EE20 F00F          	lfsr	2,15
 43314   013132  513E               	movf	f_read@fp& (0+255),w,b
 43315   013134  26D9               	addwf	fsr2l,f,c
 43316   013136  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43317   013138  22DA               	addwfc	fsr2h,f,c
 43318   01313A  0E01               	movlw	1
 43319   01313C  6EDF               	movwf	indf2,c
 43320   01313E  EFEA  F097         	goto	l22773
 43321   013142                     l22807:
 43322                           
 43323                           ;../fatfs/ff.c: 3974:     if ((fp->flag & 0x80) && fp->sect - sect < cc) {
 43324   013142  0106               	movlb	6	; () banked
 43325   013144  EE20 F00E          	lfsr	2,14
 43326   013148  513E               	movf	f_read@fp& (0+255),w,b
 43327   01314A  26D9               	addwf	fsr2l,f,c
 43328   01314C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43329   01314E  22DA               	addwfc	fsr2h,f,c
 43330   013150  AEDF               	btfss	indf2,7,c
 43331   013152  EFAD  F098         	goto	u31501
 43332   013156  EFAF  F098         	goto	u31500
 43333   01315A                     u31501:
 43334   01315A  EF05  F099         	goto	l22813
 43335   01315E                     u31500:
 43336   01315E                     
 43337                           ; BSR set to: 6
 43338   01315E  515F               	movf	f_read@cc& (0+255),w,b
 43339   013160  6F46               	movwf	??_f_read& (0+255),b
 43340   013162  5160               	movf	(f_read@cc+1)& (0+255),w,b
 43341   013164  6F47               	movwf	(??_f_read+1)& (0+255),b
 43342   013166  6B48               	clrf	(??_f_read+2)& (0+255),b
 43343   013168  6B49               	clrf	(??_f_read+3)& (0+255),b
 43344   01316A  EE20 F018          	lfsr	2,24
 43345   01316E  513E               	movf	f_read@fp& (0+255),w,b
 43346   013170  26D9               	addwf	fsr2l,f,c
 43347   013172  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43348   013174  22DA               	addwfc	fsr2h,f,c
 43349   013176  C4DE F64A          	movff	postinc2,??_f_read+4
 43350   01317A  C4DE F64B          	movff	postinc2,??_f_read+5
 43351   01317E  C4DE F64C          	movff	postinc2,??_f_read+6
 43352   013182  C4DE F64D          	movff	postinc2,??_f_read+7
 43353   013186  5163               	movf	f_read@sect& (0+255),w,b
 43354   013188  5D4A               	subwf	(??_f_read+4)& (0+255),w,b
 43355   01318A  6F4E               	movwf	(??_f_read+8)& (0+255),b
 43356   01318C  5164               	movf	(f_read@sect+1)& (0+255),w,b
 43357   01318E  594B               	subwfb	(??_f_read+5)& (0+255),w,b
 43358   013190  6F4F               	movwf	(??_f_read+9)& (0+255),b
 43359   013192  5165               	movf	(f_read@sect+2)& (0+255),w,b
 43360   013194  594C               	subwfb	(??_f_read+6)& (0+255),w,b
 43361   013196  6F50               	movwf	(??_f_read+10)& (0+255),b
 43362   013198  5166               	movf	(f_read@sect+3)& (0+255),w,b
 43363   01319A  594D               	subwfb	(??_f_read+7)& (0+255),w,b
 43364   01319C  6F51               	movwf	(??_f_read+11)& (0+255),b
 43365   01319E  5146               	movf	??_f_read& (0+255),w,b
 43366   0131A0  5D4E               	subwf	(??_f_read+8)& (0+255),w,b
 43367   0131A2  5147               	movf	(??_f_read+1)& (0+255),w,b
 43368   0131A4  594F               	subwfb	(??_f_read+9)& (0+255),w,b
 43369   0131A6  5148               	movf	(??_f_read+2)& (0+255),w,b
 43370   0131A8  5950               	subwfb	(??_f_read+10)& (0+255),w,b
 43371   0131AA  5149               	movf	(??_f_read+3)& (0+255),w,b
 43372   0131AC  5951               	subwfb	(??_f_read+11)& (0+255),w,b
 43373   0131AE  B0D8               	btfsc	status,0,c
 43374   0131B0  EFDC  F098         	goto	u31511
 43375   0131B4  EFDE  F098         	goto	u31510
 43376   0131B8                     u31511:
 43377   0131B8  EF05  F099         	goto	l22813
 43378   0131BC                     u31510:
 43379   0131BC                     
 43380                           ; BSR set to: 6
 43381                           ;../fatfs/ff.c: 3975:      memcpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((
      +                          UINT)512));
 43382   0131BC  EE20 F018          	lfsr	2,24
 43383   0131C0  513E               	movf	f_read@fp& (0+255),w,b
 43384   0131C2  26D9               	addwf	fsr2l,f,c
 43385   0131C4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43386   0131C6  22DA               	addwfc	fsr2h,f,c
 43387   0131C8  C4DE F646          	movff	postinc2,??_f_read
 43388   0131CC  C4DD F647          	movff	postdec2,??_f_read+1
 43389   0131D0  5163               	movf	f_read@sect& (0+255),w,b
 43390   0131D2  5F46               	subwf	??_f_read& (0+255),f,b
 43391   0131D4  5164               	movf	(f_read@sect+1)& (0+255),w,b
 43392   0131D6  5B47               	subwfb	(??_f_read+1)& (0+255),f,b
 43393   0131D8  0E09               	movlw	9
 43394   0131DA                     u31525:
 43395   0131DA  90D8               	bcf	status,0,c
 43396   0131DC  3746               	rlcf	??_f_read& (0+255),f,b
 43397   0131DE  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 43398   0131E0  2EE8               	decfsz	wreg,f,c
 43399   0131E2  EFED  F098         	goto	u31525
 43400   0131E6  5146               	movf	??_f_read& (0+255),w,b
 43401   0131E8  255B               	addwf	f_read@rbuff& (0+255),w,b
 43402   0131EA  6E04               	movwf	memcpy@d1^(0+1280),c
 43403   0131EC  5147               	movf	(??_f_read+1)& (0+255),w,b
 43404   0131EE  215C               	addwfc	(f_read@rbuff+1)& (0+255),w,b
 43405   0131F0  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 43406   0131F2  0E22               	movlw	34
 43407   0131F4  253E               	addwf	f_read@fp& (0+255),w,b
 43408   0131F6  6E06               	movwf	memcpy@s1^(0+1280),c
 43409   0131F8  0E00               	movlw	0
 43410   0131FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 43411   0131FC  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 43412   0131FE  0E02               	movlw	2
 43413   013200  6E09               	movwf	(memcpy@n+1)^(0+1280),c
 43414   013202  0E00               	movlw	0
 43415   013204  6E08               	movwf	memcpy@n^(0+1280),c
 43416   013206  EC00  F0FD         	call	_memcpy	;wreg free
 43417   01320A                     l22813:
 43418                           
 43419                           ;../fatfs/ff.c: 3979:     rcnt = ((UINT)512) * cc;
 43420   01320A  C65F  F646         	movff	f_read@cc,??_f_read
 43421   01320E  C660  F647         	movff	f_read@cc+1,??_f_read+1
 43422   013212  0E09               	movlw	9
 43423   013214                     u31535:
 43424   013214  90D8               	bcf	status,0,c
 43425   013216  0106               	movlb	6	; () banked
 43426   013218  3746               	rlcf	??_f_read& (0+255),f,b
 43427   01321A  3747               	rlcf	(??_f_read+1)& (0+255),f,b
 43428   01321C  2EE8               	decfsz	wreg,f,c
 43429   01321E  EF0A  F099         	goto	u31535
 43430   013222  C646  F661         	movff	??_f_read,f_read@rcnt
 43431   013226  C647  F662         	movff	??_f_read+1,f_read@rcnt+1
 43432                           
 43433                           ;../fatfs/ff.c: 3980:     continue;
 43434   01322A  EF03  F09A         	goto	l22845
 43435   01322E                     l22815:
 43436                           
 43437                           ; BSR set to: 6
 43438                           ;../fatfs/ff.c: 3983:    if (fp->sect != sect) {
 43439   01322E  EE20 F018          	lfsr	2,24
 43440   013232  513E               	movf	f_read@fp& (0+255),w,b
 43441   013234  26D9               	addwf	fsr2l,f,c
 43442   013236  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43443   013238  22DA               	addwfc	fsr2h,f,c
 43444   01323A  5163               	movf	f_read@sect& (0+255),w,b
 43445   01323C  18DE               	xorwf	postinc2,w,c
 43446   01323E  E10F               	bnz	u31540
 43447   013240  5164               	movf	(f_read@sect+1)& (0+255),w,b
 43448   013242  18DE               	xorwf	postinc2,w,c
 43449   013244  E10C               	bnz	u31540
 43450   013246  5165               	movf	(f_read@sect+2)& (0+255),w,b
 43451   013248  18DE               	xorwf	postinc2,w,c
 43452   01324A  E109               	bnz	u31540
 43453   01324C  5166               	movf	(f_read@sect+3)& (0+255),w,b
 43454   01324E  18DE               	xorwf	postinc2,w,c
 43455   013250  B4D8               	btfsc	status,2,c
 43456   013252  EF2D  F099         	goto	u31541
 43457   013256  EF2F  F099         	goto	u31540
 43458   01325A                     u31541:
 43459   01325A  EFA7  F099         	goto	l22837
 43460   01325E                     u31540:
 43461   01325E                     
 43462                           ; BSR set to: 6
 43463                           ;../fatfs/ff.c: 3985:     if (fp->flag & 0x80) {
 43464   01325E  EE20 F00E          	lfsr	2,14
 43465   013262  513E               	movf	f_read@fp& (0+255),w,b
 43466   013264  26D9               	addwf	fsr2l,f,c
 43467   013266  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43468   013268  22DA               	addwfc	fsr2h,f,c
 43469   01326A  AEDF               	btfss	indf2,7,c
 43470   01326C  EF3A  F099         	goto	u31551
 43471   013270  EF3C  F099         	goto	u31550
 43472   013274                     u31551:
 43473   013274  EF79  F099         	goto	l22829
 43474   013278                     u31550:
 43475   013278                     
 43476                           ; BSR set to: 6
 43477                           ;../fatfs/ff.c: 3986:      if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { f
      +                          p->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 43478   013278  0E22               	movlw	34
 43479   01327A  253E               	addwf	f_read@fp& (0+255),w,b
 43480   01327C  6F00               	movwf	disk_write@buff& (0+255),b
 43481   01327E  0E00               	movlw	0
 43482   013280  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 43483   013282  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 43484   013284  EE20 F018          	lfsr	2,24
 43485   013288  513E               	movf	f_read@fp& (0+255),w,b
 43486   01328A  26D9               	addwf	fsr2l,f,c
 43487   01328C  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43488   01328E  22DA               	addwfc	fsr2h,f,c
 43489   013290  C4DE F602          	movff	postinc2,disk_write@sector
 43490   013294  C4DE F603          	movff	postinc2,disk_write@sector+1
 43491   013298  C4DE F604          	movff	postinc2,disk_write@sector+2
 43492   01329C  C4DE F605          	movff	postinc2,disk_write@sector+3
 43493   0132A0  0E00               	movlw	0
 43494   0132A2  6F07               	movwf	(disk_write@count+1)& (0+255),b
 43495   0132A4  0E01               	movlw	1
 43496   0132A6  6F06               	movwf	disk_write@count& (0+255),b
 43497   0132A8  EE20 F001          	lfsr	2,1
 43498   0132AC  5167               	movf	f_read@fs& (0+255),w,b
 43499   0132AE  26D9               	addwf	fsr2l,f,c
 43500   0132B0  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43501   0132B2  22DA               	addwfc	fsr2h,f,c
 43502   0132B4  50DF               	movf	indf2,w,c
 43503   0132B6  EC7E  F0F3         	call	_disk_write
 43504   0132BA  0900               	iorlw	0
 43505   0132BC  B4D8               	btfsc	status,2,c
 43506   0132BE  EF63  F099         	goto	u31561
 43507   0132C2  EF65  F099         	goto	u31560
 43508   0132C6                     u31561:
 43509   0132C6  EF70  F099         	goto	l22827
 43510   0132CA                     u31560:
 43511   0132CA  0106               	movlb	6	; () banked
 43512   0132CC  EE20 F00F          	lfsr	2,15
 43513   0132D0  513E               	movf	f_read@fp& (0+255),w,b
 43514   0132D2  26D9               	addwf	fsr2l,f,c
 43515   0132D4  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43516   0132D6  22DA               	addwfc	fsr2h,f,c
 43517   0132D8  0E01               	movlw	1
 43518   0132DA  6EDF               	movwf	indf2,c
 43519   0132DC  EFEA  F097         	goto	l22773
 43520   0132E0                     l22827:
 43521                           
 43522                           ;../fatfs/ff.c: 3987:      fp->flag &= (BYTE)~0x80;
 43523   0132E0  0106               	movlb	6	; () banked
 43524   0132E2  EE20 F00E          	lfsr	2,14
 43525   0132E6  513E               	movf	f_read@fp& (0+255),w,b
 43526   0132E8  26D9               	addwf	fsr2l,f,c
 43527   0132EA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43528   0132EC  22DA               	addwfc	fsr2h,f,c
 43529   0132EE  0E7F               	movlw	127
 43530   0132F0  16DF               	andwf	indf2,f,c
 43531   0132F2                     l22829:
 43532                           
 43533                           ; BSR set to: 6
 43534                           ;../fatfs/ff.c: 3990:     if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err
      +                           = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 43535   0132F2  0E22               	movlw	34
 43536   0132F4  253E               	addwf	f_read@fp& (0+255),w,b
 43537   0132F6  6F00               	movwf	disk_read@buff& (0+255),b
 43538   0132F8  0E00               	movlw	0
 43539   0132FA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 43540   0132FC  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 43541   0132FE  C663  F602         	movff	f_read@sect,disk_read@sector
 43542   013302  C664  F603         	movff	f_read@sect+1,disk_read@sector+1
 43543   013306  C665  F604         	movff	f_read@sect+2,disk_read@sector+2
 43544   01330A  C666  F605         	movff	f_read@sect+3,disk_read@sector+3
 43545   01330E  0E00               	movlw	0
 43546   013310  6F07               	movwf	(disk_read@count+1)& (0+255),b
 43547   013312  0E01               	movlw	1
 43548   013314  6F06               	movwf	disk_read@count& (0+255),b
 43549   013316  EE20 F001          	lfsr	2,1
 43550   01331A  5167               	movf	f_read@fs& (0+255),w,b
 43551   01331C  26D9               	addwf	fsr2l,f,c
 43552   01331E  5168               	movf	(f_read@fs+1)& (0+255),w,b
 43553   013320  22DA               	addwfc	fsr2h,f,c
 43554   013322  50DF               	movf	indf2,w,c
 43555   013324  ECD5  F0F3         	call	_disk_read
 43556   013328  0900               	iorlw	0
 43557   01332A  B4D8               	btfsc	status,2,c
 43558   01332C  EF9A  F099         	goto	u31571
 43559   013330  EF9C  F099         	goto	u31570
 43560   013334                     u31571:
 43561   013334  EFA7  F099         	goto	l22837
 43562   013338                     u31570:
 43563   013338  0106               	movlb	6	; () banked
 43564   01333A  EE20 F00F          	lfsr	2,15
 43565   01333E  513E               	movf	f_read@fp& (0+255),w,b
 43566   013340  26D9               	addwf	fsr2l,f,c
 43567   013342  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43568   013344  22DA               	addwfc	fsr2h,f,c
 43569   013346  0E01               	movlw	1
 43570   013348  6EDF               	movwf	indf2,c
 43571   01334A  EFEA  F097         	goto	l22773
 43572   01334E                     l22837:
 43573                           
 43574                           ;../fatfs/ff.c: 3993:    fp->sect = sect;
 43575   01334E  0106               	movlb	6	; () banked
 43576   013350  EE20 F018          	lfsr	2,24
 43577   013354  513E               	movf	f_read@fp& (0+255),w,b
 43578   013356  26D9               	addwf	fsr2l,f,c
 43579   013358  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43580   01335A  22DA               	addwfc	fsr2h,f,c
 43581   01335C  C663  F4DE         	movff	f_read@sect,postinc2
 43582   013360  C664  F4DE         	movff	f_read@sect+1,postinc2
 43583   013364  C665  F4DE         	movff	f_read@sect+2,postinc2
 43584   013368  C666  F4DE         	movff	f_read@sect+3,postinc2
 43585   01336C                     l677:
 43586                           
 43587                           ; BSR set to: 6
 43588                           ;../fatfs/ff.c: 3995:   rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
 43589   01336C  EE20 F010          	lfsr	2,16
 43590   013370  513E               	movf	f_read@fp& (0+255),w,b
 43591   013372  26D9               	addwf	fsr2l,f,c
 43592   013374  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43593   013376  22DA               	addwfc	fsr2h,f,c
 43594   013378  C4DE F646          	movff	postinc2,??_f_read
 43595   01337C  C4DD F647          	movff	postdec2,??_f_read+1
 43596   013380  0EFF               	movlw	255
 43597   013382  1546               	andwf	??_f_read& (0+255),w,b
 43598   013384  6F48               	movwf	(??_f_read+2)& (0+255),b
 43599   013386  0E01               	movlw	1
 43600   013388  1547               	andwf	(??_f_read+1)& (0+255),w,b
 43601   01338A  6F49               	movwf	(??_f_read+3)& (0+255),b
 43602   01338C  5148               	movf	(??_f_read+2)& (0+255),w,b
 43603   01338E  0800               	sublw	0
 43604   013390  6F61               	movwf	f_read@rcnt& (0+255),b
 43605   013392  5149               	movf	(??_f_read+3)& (0+255),w,b
 43606   013394  A0D8               	btfss	status,0,c
 43607   013396  2AE8               	incf	wreg,f,c
 43608   013398  0802               	sublw	2
 43609   01339A  6F62               	movwf	(f_read@rcnt+1)& (0+255),b
 43610   01339C                     
 43611                           ; BSR set to: 6
 43612                           ;../fatfs/ff.c: 3996:   if (rcnt > btr) rcnt = btr;
 43613   01339C  5161               	movf	f_read@rcnt& (0+255),w,b
 43614   01339E  5D42               	subwf	f_read@btr& (0+255),w,b
 43615   0133A0  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 43616   0133A2  5943               	subwfb	(f_read@btr+1)& (0+255),w,b
 43617   0133A4  B0D8               	btfsc	status,0,c
 43618   0133A6  EFD7  F099         	goto	u31581
 43619   0133AA  EFD9  F099         	goto	u31580
 43620   0133AE                     u31581:
 43621   0133AE  EFDD  F099         	goto	l22843
 43622   0133B2                     u31580:
 43623   0133B2                     
 43624                           ; BSR set to: 6
 43625   0133B2  C642  F661         	movff	f_read@btr,f_read@rcnt
 43626   0133B6  C643  F662         	movff	f_read@btr+1,f_read@rcnt+1
 43627   0133BA                     l22843:
 43628                           
 43629                           ; BSR set to: 6
 43630                           ;../fatfs/ff.c: 4001:   memcpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
 43631   0133BA  C65B  F504         	movff	f_read@rbuff,memcpy@d1
 43632   0133BE  C65C  F505         	movff	f_read@rbuff+1,memcpy@d1+1
 43633   0133C2  EE20 F010          	lfsr	2,16
 43634   0133C6  513E               	movf	f_read@fp& (0+255),w,b
 43635   0133C8  26D9               	addwf	fsr2l,f,c
 43636   0133CA  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43637   0133CC  22DA               	addwfc	fsr2h,f,c
 43638   0133CE  C4DE F646          	movff	postinc2,??_f_read
 43639   0133D2  C4DD F647          	movff	postdec2,??_f_read+1
 43640   0133D6  0EFF               	movlw	255
 43641   0133D8  1546               	andwf	??_f_read& (0+255),w,b
 43642   0133DA  6F48               	movwf	(??_f_read+2)& (0+255),b
 43643   0133DC  0E01               	movlw	1
 43644   0133DE  1547               	andwf	(??_f_read+1)& (0+255),w,b
 43645   0133E0  6F49               	movwf	(??_f_read+3)& (0+255),b
 43646   0133E2  5148               	movf	(??_f_read+2)& (0+255),w,b
 43647   0133E4  253E               	addwf	f_read@fp& (0+255),w,b
 43648   0133E6  6F4A               	movwf	(??_f_read+4)& (0+255),b
 43649   0133E8  5149               	movf	(??_f_read+3)& (0+255),w,b
 43650   0133EA  213F               	addwfc	(f_read@fp+1)& (0+255),w,b
 43651   0133EC  6F4B               	movwf	(??_f_read+5)& (0+255),b
 43652   0133EE  0E22               	movlw	34
 43653   0133F0  254A               	addwf	(??_f_read+4)& (0+255),w,b
 43654   0133F2  6E06               	movwf	memcpy@s1^(0+1280),c
 43655   0133F4  0E00               	movlw	0
 43656   0133F6  214B               	addwfc	(??_f_read+5)& (0+255),w,b
 43657   0133F8  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 43658   0133FA  C661  F508         	movff	f_read@rcnt,memcpy@n
 43659   0133FE  C662  F509         	movff	f_read@rcnt+1,memcpy@n+1
 43660   013402  EC00  F0FD         	call	_memcpy	;wreg free
 43661   013406                     l22845:
 43662   013406  0106               	movlb	6	; () banked
 43663   013408  5161               	movf	f_read@rcnt& (0+255),w,b
 43664   01340A  5F42               	subwf	f_read@btr& (0+255),f,b
 43665   01340C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 43666   01340E  5B43               	subwfb	(f_read@btr+1)& (0+255),f,b
 43667   013410                     
 43668                           ; BSR set to: 6
 43669   013410  C644  F4D9         	movff	f_read@br,fsr2l
 43670   013414  C645  F4DA         	movff	f_read@br+1,fsr2h
 43671   013418  5161               	movf	f_read@rcnt& (0+255),w,b
 43672   01341A  26DE               	addwf	postinc2,f,c
 43673   01341C  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 43674   01341E  22DD               	addwfc	postdec2,f,c
 43675   013420                     
 43676                           ; BSR set to: 6
 43677   013420  5161               	movf	f_read@rcnt& (0+255),w,b
 43678   013422  275B               	addwf	f_read@rbuff& (0+255),f,b
 43679   013424  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 43680   013426  235C               	addwfc	(f_read@rbuff+1)& (0+255),f,b
 43681   013428                     
 43682                           ; BSR set to: 6
 43683   013428  EE20 F010          	lfsr	2,16
 43684   01342C  513E               	movf	f_read@fp& (0+255),w,b
 43685   01342E  26D9               	addwf	fsr2l,f,c
 43686   013430  513F               	movf	(f_read@fp+1)& (0+255),w,b
 43687   013432  22DA               	addwfc	fsr2h,f,c
 43688   013434  5161               	movf	f_read@rcnt& (0+255),w,b
 43689   013436  26DE               	addwf	postinc2,f,c
 43690   013438  5162               	movf	(f_read@rcnt+1)& (0+255),w,b
 43691   01343A  22DE               	addwfc	postinc2,f,c
 43692   01343C  0E00               	movlw	0
 43693   01343E  22DE               	addwfc	postinc2,f,c
 43694   013440  22DE               	addwfc	postinc2,f,c
 43695   013442  EF1E  F097         	goto	l22745
 43696   013446                     l22855:
 43697                           
 43698                           ; BSR set to: 6
 43699                           ;../fatfs/ff.c: 4005:  return FR_OK;
 43700   013446  0E00               	movlw	0
 43701   013448                     l672:
 43702                           
 43703                           ; BSR set to: 6
 43704   013448  0012               	return		;funcret
 43705   01344A                     __end_of_f_read:
 43706                           	callstack 0
 43707                           
 43708 ;; *************** function _validate *****************
 43709 ;; Defined at:
 43710 ;;		line 3615 in file "../fatfs/ff.c"
 43711 ;; Parameters:    Size  Location     Type
 43712 ;;  obj             2   94[BANK5 ] PTR struct .
 43713 ;;		 -> in_fl(546), scan_files1@dir(40), scan_files@dir(40), rom_fl(546), 
 43714 ;;		 -> pb$fp(2), 
 43715 ;;  rfs             2   96[BANK5 ] PTR PTR struct .
 43716 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 43717 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 43718 ;; Auto vars:     Size  Location     Type
 43719 ;;  res             1  104[BANK5 ] enum E597
 43720 ;; Return value:  Size  Location     Type
 43721 ;;                  1    wreg      enum E597
 43722 ;; Registers used:
 43723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 43724 ;; Tracked objects:
 43725 ;;		On entry : 0/0
 43726 ;;		On exit  : 0/0
 43727 ;;		Unchanged: 0/0
 43728 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43730 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43731 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43732 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43733 ;;Total ram usage:       11 bytes
 43734 ;; Hardware stack levels used: 1
 43735 ;; Hardware stack levels required when called: 10
 43736 ;; This function calls:
 43737 ;;		_disk_status
 43738 ;; This function is called by:
 43739 ;;		_f_read
 43740 ;;		_f_write
 43741 ;;		_f_sync
 43742 ;;		_f_close
 43743 ;;		_f_lseek
 43744 ;;		_f_closedir
 43745 ;;		_f_readdir
 43746 ;;		_f_truncate
 43747 ;; This function uses a non-reentrant model
 43748 ;;
 43749                           
 43750                           	psect	text112
 43751   01D346                     __ptext112:
 43752                           	callstack 0
 43753   01D346                     _validate:
 43754                           	callstack 109
 43755   01D346                     
 43756                           ;../fatfs/ff.c: 3616:  FFOBJID* obj,;../fatfs/ff.c: 3617:  FATFS** rfs;../fatfs/ff.c: 36
      +                          19: {;../fatfs/ff.c: 3620:  FRESULT res = FR_INVALID_OBJECT;
 43757   01D346  0E09               	movlw	9
 43758   01D348  0105               	movlb	5	; () banked
 43759   01D34A  6FC8               	movwf	validate@res& (0+255),b
 43760   01D34C                     
 43761                           ; BSR set to: 5
 43762                           ;../fatfs/ff.c: 3623:  if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id)
      +                           {
 43763   01D34C  51BE               	movf	validate@obj& (0+255),w,b
 43764   01D34E  11BF               	iorwf	(validate@obj+1)& (0+255),w,b
 43765   01D350  B4D8               	btfsc	status,2,c
 43766   01D352  EFAD  F0E9         	goto	u30161
 43767   01D356  EFAF  F0E9         	goto	u30160
 43768   01D35A                     u30161:
 43769   01D35A  EF03  F0EA         	goto	l22101
 43770   01D35E                     u30160:
 43771   01D35E                     
 43772                           ; BSR set to: 5
 43773   01D35E  C5BE  F4D9         	movff	validate@obj,fsr2l
 43774   01D362  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 43775   01D366  50DE               	movf	postinc2,w,c
 43776   01D368  10DE               	iorwf	postinc2,w,c
 43777   01D36A  B4D8               	btfsc	status,2,c
 43778   01D36C  EFBA  F0E9         	goto	u30171
 43779   01D370  EFBC  F0E9         	goto	u30170
 43780   01D374                     u30171:
 43781   01D374  EF03  F0EA         	goto	l22101
 43782   01D378                     u30170:
 43783   01D378                     
 43784                           ; BSR set to: 5
 43785   01D378  C5BE  F4D9         	movff	validate@obj,fsr2l
 43786   01D37C  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 43787   01D380  C4DE F5C2          	movff	postinc2,??_validate
 43788   01D384  C4DD F5C3          	movff	postdec2,??_validate+1
 43789   01D388  C5C2  F4D9         	movff	??_validate,fsr2l
 43790   01D38C  C5C3  F4DA         	movff	??_validate+1,fsr2h
 43791   01D390  50DF               	movf	indf2,w,c
 43792   01D392  B4D8               	btfsc	status,2,c
 43793   01D394  EFCE  F0E9         	goto	u30181
 43794   01D398  EFD0  F0E9         	goto	u30180
 43795   01D39C                     u30181:
 43796   01D39C  EF03  F0EA         	goto	l22101
 43797   01D3A0                     u30180:
 43798   01D3A0                     
 43799                           ; BSR set to: 5
 43800   01D3A0  C5BE  F4D9         	movff	validate@obj,fsr2l
 43801   01D3A4  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 43802   01D3A8  EE10 F006          	lfsr	1,6
 43803   01D3AC  50DE               	movf	postinc2,w,c
 43804   01D3AE  26E1               	addwf	fsr1l,f,c
 43805   01D3B0  50DD               	movf	postdec2,w,c
 43806   01D3B2  22E2               	addwfc	fsr1h,f,c
 43807   01D3B4  EE20 F002          	lfsr	2,2
 43808   01D3B8  51BE               	movf	validate@obj& (0+255),w,b
 43809   01D3BA  26D9               	addwf	fsr2l,f,c
 43810   01D3BC  51BF               	movf	(validate@obj+1)& (0+255),w,b
 43811   01D3BE  22DA               	addwfc	fsr2h,f,c
 43812   01D3C0  50E6               	movf	postinc1,w,c
 43813   01D3C2  18DE               	xorwf	postinc2,w,c
 43814   01D3C4  E107               	bnz	u30191
 43815   01D3C6  50E6               	movf	postinc1,w,c
 43816   01D3C8  18DE               	xorwf	postinc2,w,c
 43817   01D3CA  A4D8               	btfss	status,2,c
 43818   01D3CC  EFEA  F0E9         	goto	u30191
 43819   01D3D0  EFEC  F0E9         	goto	u30190
 43820   01D3D4                     u30191:
 43821   01D3D4  EF03  F0EA         	goto	l22101
 43822   01D3D8                     u30190:
 43823   01D3D8                     
 43824                           ; BSR set to: 5
 43825                           ;../fatfs/ff.c: 3635:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 43826   01D3D8  C5BE  F4D9         	movff	validate@obj,fsr2l
 43827   01D3DC  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 43828   01D3E0  EE10 F001          	lfsr	1,1
 43829   01D3E4  50DE               	movf	postinc2,w,c
 43830   01D3E6  26E1               	addwf	fsr1l,f,c
 43831   01D3E8  50DD               	movf	postdec2,w,c
 43832   01D3EA  22E2               	addwfc	fsr1h,f,c
 43833   01D3EC  50E7               	movf	indf1,w,c
 43834   01D3EE  EC42  F0FE         	call	_disk_status
 43835   01D3F2  0105               	movlb	5	; () banked
 43836   01D3F4  6FC2               	movwf	??_validate& (0+255),b
 43837   01D3F6  B1C2               	btfsc	??_validate& (0+255),0,b
 43838   01D3F8  EF00  F0EA         	goto	u30201
 43839   01D3FC  EF02  F0EA         	goto	u30200
 43840   01D400                     u30201:
 43841   01D400  EF03  F0EA         	goto	l22101
 43842   01D404                     u30200:
 43843   01D404                     
 43844                           ; BSR set to: 5
 43845                           ;../fatfs/ff.c: 3636:    res = FR_OK;
 43846   01D404  6BC8               	clrf	validate@res& (0+255),b
 43847   01D406                     l22101:
 43848                           
 43849                           ; BSR set to: 5
 43850                           ;../fatfs/ff.c: 3640:  *rfs = (res == FR_OK) ? obj->fs : 0;
 43851   01D406  51C8               	movf	validate@res& (0+255),w,b
 43852   01D408  B4D8               	btfsc	status,2,c
 43853   01D40A  EF09  F0EA         	goto	u30211
 43854   01D40E  EF0B  F0EA         	goto	u30210
 43855   01D412                     u30211:
 43856   01D412  EF11  F0EA         	goto	l22105
 43857   01D416                     u30210:
 43858   01D416                     
 43859                           ; BSR set to: 5
 43860   01D416  0E00               	movlw	0
 43861   01D418  6FC6               	movwf	_validate$1173& (0+255),b
 43862   01D41A  0E00               	movlw	0
 43863   01D41C  6FC7               	movwf	(_validate$1173+1)& (0+255),b
 43864   01D41E  EF19  F0EA         	goto	l616
 43865   01D422                     l22105:
 43866                           
 43867                           ; BSR set to: 5
 43868   01D422  C5BE  F4D9         	movff	validate@obj,fsr2l
 43869   01D426  C5BF  F4DA         	movff	validate@obj+1,fsr2h
 43870   01D42A  C4DE F5C6          	movff	postinc2,_validate$1173
 43871   01D42E  C4DD F5C7          	movff	postdec2,_validate$1173+1
 43872   01D432                     l616:
 43873                           
 43874                           ; BSR set to: 5
 43875   01D432  C5C0  F4D9         	movff	validate@rfs,fsr2l
 43876   01D436  C5C1  F4DA         	movff	validate@rfs+1,fsr2h
 43877   01D43A  C5C6  F4DE         	movff	_validate$1173,postinc2
 43878   01D43E  C5C7  F4DD         	movff	_validate$1173+1,postdec2
 43879   01D442                     
 43880                           ; BSR set to: 5
 43881                           ;../fatfs/ff.c: 3641:  return res;
 43882   01D442  51C8               	movf	validate@res& (0+255),w,b
 43883   01D444                     
 43884                           ; BSR set to: 5
 43885   01D444  0012               	return		;funcret
 43886   01D446                     __end_of_validate:
 43887                           	callstack 0
 43888                           
 43889 ;; *************** function _disk_status *****************
 43890 ;; Defined at:
 43891 ;;		line 98 in file "../drivers/diskio.c"
 43892 ;; Parameters:    Size  Location     Type
 43893 ;;  pdrv            1    wreg     unsigned char 
 43894 ;; Auto vars:     Size  Location     Type
 43895 ;;  pdrv            1   93[BANK5 ] unsigned char 
 43896 ;; Return value:  Size  Location     Type
 43897 ;;                  1    wreg      unsigned char 
 43898 ;; Registers used:
 43899 ;;		wreg, status,2, status,0
 43900 ;; Tracked objects:
 43901 ;;		On entry : 0/0
 43902 ;;		On exit  : 0/0
 43903 ;;		Unchanged: 0/0
 43904 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43909 ;;Total ram usage:        1 bytes
 43910 ;; Hardware stack levels used: 1
 43911 ;; Hardware stack levels required when called: 9
 43912 ;; This function calls:
 43913 ;;		_printf
 43914 ;; This function is called by:
 43915 ;;		_mount_volume
 43916 ;;		_validate
 43917 ;; This function uses a non-reentrant model
 43918 ;;
 43919                           
 43920                           	psect	text113
 43921   01FC84                     __ptext113:
 43922                           	callstack 0
 43923   01FC84                     _disk_status:
 43924                           	callstack 109
 43925                           
 43926                           ; BSR set to: 5
 43927                           ;incstack = 0
 43928                           ;disk_status@pdrv stored from wreg
 43929   01FC84  0105               	movlb	5	; () banked
 43930   01FC86  6FBD               	movwf	disk_status@pdrv& (0+255),b
 43931   01FC88                     
 43932                           ;../drivers/diskio.c: 98: DSTATUS disk_status(BYTE pdrv);../drivers/diskio.c: 99: {;../d
      +                          rivers/diskio.c: 100:     if (pdrv != 0) {
 43933   01FC88  0105               	movlb	5	; () banked
 43934   01FC8A  51BD               	movf	disk_status@pdrv& (0+255),w,b
 43935   01FC8C  B4D8               	btfsc	status,2,c
 43936   01FC8E  EF4B  F0FE         	goto	u28691
 43937   01FC92  EF4D  F0FE         	goto	u28690
 43938   01FC96                     u28691:
 43939   01FC96  EF50  F0FE         	goto	l21365
 43940   01FC9A                     u28690:
 43941   01FC9A                     l21361:
 43942                           
 43943                           ;../drivers/diskio.c: 102:         return 0x02;
 43944   01FC9A  0E02               	movlw	2
 43945   01FC9C  EF62  F0FE         	goto	l56
 43946   01FCA0                     l21365:
 43947                           
 43948                           ; BSR set to: 5
 43949                           ;../drivers/diskio.c: 104:     if (start_lba == 0xffffffff) {
 43950   01FCA0  0107               	movlb	7	; () banked
 43951   01FCA2  29EE               	incf	_start_lba& (0+255),w,b
 43952   01FCA4  E10A               	bnz	u28701
 43953   01FCA6  29EF               	incf	(_start_lba+1)& (0+255),w,b
 43954   01FCA8  E108               	bnz	u28701
 43955   01FCAA  29F0               	incf	(_start_lba+2)& (0+255),w,b
 43956   01FCAC  E106               	bnz	u28701
 43957   01FCAE  29F1               	incf	(_start_lba+3)& (0+255),w,b
 43958   01FCB0  A4D8               	btfss	status,2,c
 43959   01FCB2  EF5D  F0FE         	goto	u28701
 43960   01FCB6  EF5F  F0FE         	goto	u28700
 43961   01FCBA                     u28701:
 43962   01FCBA  EF61  F0FE         	goto	l21373
 43963   01FCBE                     u28700:
 43964   01FCBE  EF4D  F0FE         	goto	l21361
 43965   01FCC2                     l21373:
 43966                           
 43967                           ; BSR set to: 7
 43968                           ;../drivers/diskio.c: 108:     return 0;
 43969   01FCC2  0E00               	movlw	0
 43970   01FCC4                     l56:
 43971   01FCC4  0012               	return		;funcret
 43972   01FCC6                     __end_of_disk_status:
 43973                           	callstack 0
 43974                           
 43975 ;; *************** function _get_fat *****************
 43976 ;; Defined at:
 43977 ;;		line 1162 in file "../fatfs/ff.c"
 43978 ;; Parameters:    Size  Location     Type
 43979 ;;  obj             2   36[BANK6 ] PTR struct .
 43980 ;;		 -> in_fl(546), scan_files1@dir(40), scan_files@dir(40), rom_fl(546), 
 43981 ;;		 -> pb$fp(2), f_rename@djn(40), f_rename@djo(40), f_mkdir@sobj(14), 
 43982 ;;		 -> f_mkdir@dj(40), f_unlink@sdj(40), f_unlink@dj(40), f_getfree@obj(14), 
 43983 ;;		 -> f_stat@dj(40), f_getcwd@dj(40), f_chdir@dj(40), f_open@dj(40), 
 43984 ;;  clst            4   38[BANK6 ] unsigned long 
 43985 ;; Auto vars:     Size  Location     Type
 43986 ;;  val             4   54[BANK6 ] unsigned long 
 43987 ;;  fs              2   60[BANK6 ] PTR struct .
 43988 ;;		 -> fs(564), NULL(0), 
 43989 ;;  bc              2   58[BANK6 ] unsigned int 
 43990 ;;  wc              2   52[BANK6 ] unsigned int 
 43991 ;; Return value:  Size  Location     Type
 43992 ;;                  4   36[BANK6 ] unsigned long 
 43993 ;; Registers used:
 43994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 43995 ;; Tracked objects:
 43996 ;;		On entry : 0/0
 43997 ;;		On exit  : 0/0
 43998 ;;		Unchanged: 0/0
 43999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44000 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44001 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44002 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44003 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44004 ;;Total ram usage:       26 bytes
 44005 ;; Hardware stack levels used: 1
 44006 ;; Hardware stack levels required when called: 14
 44007 ;; This function calls:
 44008 ;;		_ld_dword
 44009 ;;		_ld_word
 44010 ;;		_move_window
 44011 ;; This function is called by:
 44012 ;;		_remove_chain
 44013 ;;		_create_chain
 44014 ;;		_dir_sdi
 44015 ;;		_dir_next
 44016 ;;		_f_open
 44017 ;;		_f_read
 44018 ;;		_f_lseek
 44019 ;;		_f_getfree
 44020 ;;		_f_truncate
 44021 ;; This function uses a non-reentrant model
 44022 ;;
 44023                           
 44024                           	psect	text114
 44025   0169EE                     __ptext114:
 44026                           	callstack 0
 44027   0169EE                     _get_fat:
 44028                           	callstack 105
 44029   0169EE                     
 44030                           ;../fatfs/ff.c: 1163:  FFOBJID* obj,;../fatfs/ff.c: 1164:  DWORD clst;../fatfs/ff.c: 116
      +                          6: {;../fatfs/ff.c: 1167:  UINT wc, bc;;../fatfs/ff.c: 1168:  DWORD val;;../fatfs/ff.c: 
      +                          1169:  FATFS *fs = obj->fs;
 44031   0169EE  C624  F4D9         	movff	get_fat@obj,fsr2l
 44032   0169F2  C625  F4DA         	movff	get_fat@obj+1,fsr2h
 44033   0169F6  C4DE F63C          	movff	postinc2,get_fat@fs
 44034   0169FA  C4DD F63D          	movff	postdec2,get_fat@fs+1
 44035   0169FE                     
 44036                           ;../fatfs/ff.c: 1172:  if (clst < 2 || clst >= fs->n_fatent) {
 44037   0169FE  0106               	movlb	6	; () banked
 44038   016A00  5129               	movf	(get_fat@clst+3)& (0+255),w,b
 44039   016A02  1128               	iorwf	(get_fat@clst+2)& (0+255),w,b
 44040   016A04  1127               	iorwf	(get_fat@clst+1)& (0+255),w,b
 44041   016A06  E109               	bnz	u28040
 44042   016A08  0E02               	movlw	2
 44043   016A0A  5D26               	subwf	get_fat@clst& (0+255),w,b
 44044   016A0C  A0D8               	btfss	status,0,c
 44045   016A0E  EF0B  F0B5         	goto	u28041
 44046   016A12  EF0D  F0B5         	goto	u28040
 44047   016A16                     u28041:
 44048   016A16  EF22  F0B5         	goto	l21055
 44049   016A1A                     u28040:
 44050   016A1A                     
 44051                           ; BSR set to: 6
 44052   016A1A  EE20 F018          	lfsr	2,24
 44053   016A1E  513C               	movf	get_fat@fs& (0+255),w,b
 44054   016A20  26D9               	addwf	fsr2l,f,c
 44055   016A22  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 44056   016A24  22DA               	addwfc	fsr2h,f,c
 44057   016A26  50DE               	movf	postinc2,w,c
 44058   016A28  5D26               	subwf	get_fat@clst& (0+255),w,b
 44059   016A2A  50DE               	movf	postinc2,w,c
 44060   016A2C  5927               	subwfb	(get_fat@clst+1)& (0+255),w,b
 44061   016A2E  50DE               	movf	postinc2,w,c
 44062   016A30  5928               	subwfb	(get_fat@clst+2)& (0+255),w,b
 44063   016A32  50DE               	movf	postinc2,w,c
 44064   016A34  5929               	subwfb	(get_fat@clst+3)& (0+255),w,b
 44065   016A36  A0D8               	btfss	status,0,c
 44066   016A38  EF20  F0B5         	goto	u28051
 44067   016A3C  EF22  F0B5         	goto	u28050
 44068   016A40                     u28051:
 44069   016A40  EF2C  F0B5         	goto	l229
 44070   016A44                     u28050:
 44071   016A44                     l21055:
 44072                           
 44073                           ; BSR set to: 6
 44074                           ;../fatfs/ff.c: 1173:   val = 1;
 44075   016A44  0E01               	movlw	1
 44076   016A46  6F36               	movwf	get_fat@val& (0+255),b
 44077   016A48  0E00               	movlw	0
 44078   016A4A  6F37               	movwf	(get_fat@val+1)& (0+255),b
 44079   016A4C  0E00               	movlw	0
 44080   016A4E  6F38               	movwf	(get_fat@val+2)& (0+255),b
 44081   016A50  0E00               	movlw	0
 44082   016A52  6F39               	movwf	(get_fat@val+3)& (0+255),b
 44083                           
 44084                           ;../fatfs/ff.c: 1175:  } else {
 44085   016A54  EFE4  F0B6         	goto	l232
 44086   016A58                     l229:
 44087                           
 44088                           ; BSR set to: 6
 44089                           ;../fatfs/ff.c: 1176:   val = 0xFFFFFFFF;
 44090   016A58  6936               	setf	get_fat@val& (0+255),b
 44091   016A5A  6937               	setf	(get_fat@val+1)& (0+255),b
 44092   016A5C  6938               	setf	(get_fat@val+2)& (0+255),b
 44093   016A5E  6939               	setf	(get_fat@val+3)& (0+255),b
 44094                           
 44095                           ;../fatfs/ff.c: 1178:   switch (fs->fs_type) {
 44096   016A60  EFD1  F0B6         	goto	l21095
 44097   016A64                     l234:
 44098                           
 44099                           ; BSR set to: 6
 44100                           ;../fatfs/ff.c: 1180:    bc = (UINT)clst; bc += bc / 2;
 44101   016A64  C626  F63A         	movff	get_fat@clst,get_fat@bc
 44102   016A68  C627  F63B         	movff	get_fat@clst+1,get_fat@bc+1
 44103   016A6C                     
 44104                           ; BSR set to: 6
 44105   016A6C  90D8               	bcf	status,0,c
 44106   016A6E  313B               	rrcf	(get_fat@bc+1)& (0+255),w,b
 44107   016A70  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 44108   016A72  313A               	rrcf	get_fat@bc& (0+255),w,b
 44109   016A74  6F2A               	movwf	??_get_fat& (0+255),b
 44110   016A76  512A               	movf	??_get_fat& (0+255),w,b
 44111   016A78  273A               	addwf	get_fat@bc& (0+255),f,b
 44112   016A7A  512B               	movf	(??_get_fat+1)& (0+255),w,b
 44113   016A7C  233B               	addwfc	(get_fat@bc+1)& (0+255),f,b
 44114   016A7E                     
 44115                           ; BSR set to: 6
 44116                           ;../fatfs/ff.c: 1181:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 44117   016A7E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 44118   016A82  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 44119   016A86  EE20 F024          	lfsr	2,36
 44120   016A8A  513C               	movf	get_fat@fs& (0+255),w,b
 44121   016A8C  26D9               	addwf	fsr2l,f,c
 44122   016A8E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 44123   016A90  22DA               	addwfc	fsr2h,f,c
 44124   016A92  C4DE F62A          	movff	postinc2,??_get_fat
 44125   016A96  C4DE F62B          	movff	postinc2,??_get_fat+1
 44126   016A9A  C4DE F62C          	movff	postinc2,??_get_fat+2
 44127   016A9E  C4DE F62D          	movff	postinc2,??_get_fat+3
 44128   016AA2  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 44129   016AA6  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 44130   016AAA  0E09               	movlw	9
 44131   016AAC  6F30               	movwf	(??_get_fat+6)& (0+255),b
 44132   016AAE                     u28065:
 44133   016AAE  90D8               	bcf	status,0,c
 44134   016AB0  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 44135   016AB2  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 44136   016AB4  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 44137   016AB6  EF57  F0B5         	goto	u28065
 44138   016ABA  512E               	movf	(??_get_fat+4)& (0+255),w,b
 44139   016ABC  252A               	addwf	??_get_fat& (0+255),w,b
 44140   016ABE  6F1C               	movwf	move_window@sect& (0+255),b
 44141   016AC0  512F               	movf	(??_get_fat+5)& (0+255),w,b
 44142   016AC2  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 44143   016AC4  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 44144   016AC6  0E00               	movlw	0
 44145   016AC8  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 44146   016ACA  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 44147   016ACC  0E00               	movlw	0
 44148   016ACE  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 44149   016AD0  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 44150   016AD2  ECAB  F0EF         	call	_move_window	;wreg free
 44151   016AD6  0900               	iorlw	0
 44152   016AD8  B4D8               	btfsc	status,2,c
 44153   016ADA  EF71  F0B5         	goto	u28071
 44154   016ADE  EF73  F0B5         	goto	u28070
 44155   016AE2                     u28071:
 44156   016AE2  EF75  F0B5         	goto	l21063
 44157   016AE6                     u28070:
 44158   016AE6  EFE4  F0B6         	goto	l232
 44159   016AEA                     l21063:
 44160                           
 44161                           ;../fatfs/ff.c: 1182:    wc = fs->win[bc++ % ((UINT)512)];
 44162   016AEA  0EFF               	movlw	255
 44163   016AEC  0106               	movlb	6	; () banked
 44164   016AEE  153A               	andwf	get_fat@bc& (0+255),w,b
 44165   016AF0  6F2A               	movwf	??_get_fat& (0+255),b
 44166   016AF2  0E01               	movlw	1
 44167   016AF4  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 44168   016AF6  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 44169   016AF8  512A               	movf	??_get_fat& (0+255),w,b
 44170   016AFA  253C               	addwf	get_fat@fs& (0+255),w,b
 44171   016AFC  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 44172   016AFE  512B               	movf	(??_get_fat+1)& (0+255),w,b
 44173   016B00  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 44174   016B02  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 44175   016B04  0E34               	movlw	52
 44176   016B06  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 44177   016B08  6ED9               	movwf	fsr2l,c
 44178   016B0A  0E00               	movlw	0
 44179   016B0C  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 44180   016B0E  6EDA               	movwf	fsr2h,c
 44181   016B10  50DF               	movf	indf2,w,c
 44182   016B12  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 44183   016B14  512E               	movf	(??_get_fat+4)& (0+255),w,b
 44184   016B16  6F34               	movwf	get_fat@wc& (0+255),b
 44185   016B18  6B35               	clrf	(get_fat@wc+1)& (0+255),b
 44186   016B1A                     
 44187                           ; BSR set to: 6
 44188   016B1A  4B3A               	infsnz	get_fat@bc& (0+255),f,b
 44189   016B1C  2B3B               	incf	(get_fat@bc+1)& (0+255),f,b
 44190   016B1E                     
 44191                           ; BSR set to: 6
 44192                           ;../fatfs/ff.c: 1183:    if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK)
      +                           break;
 44193   016B1E  C63C  F61A         	movff	get_fat@fs,move_window@fs
 44194   016B22  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 44195   016B26  EE20 F024          	lfsr	2,36
 44196   016B2A  513C               	movf	get_fat@fs& (0+255),w,b
 44197   016B2C  26D9               	addwf	fsr2l,f,c
 44198   016B2E  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 44199   016B30  22DA               	addwfc	fsr2h,f,c
 44200   016B32  C4DE F62A          	movff	postinc2,??_get_fat
 44201   016B36  C4DE F62B          	movff	postinc2,??_get_fat+1
 44202   016B3A  C4DE F62C          	movff	postinc2,??_get_fat+2
 44203   016B3E  C4DE F62D          	movff	postinc2,??_get_fat+3
 44204   016B42  C63A  F62E         	movff	get_fat@bc,??_get_fat+4
 44205   016B46  C63B  F62F         	movff	get_fat@bc+1,??_get_fat+5
 44206   016B4A  0E09               	movlw	9
 44207   016B4C  6F30               	movwf	(??_get_fat+6)& (0+255),b
 44208   016B4E                     u28085:
 44209   016B4E  90D8               	bcf	status,0,c
 44210   016B50  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 44211   016B52  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 44212   016B54  2F30               	decfsz	(??_get_fat+6)& (0+255),f,b
 44213   016B56  EFA7  F0B5         	goto	u28085
 44214   016B5A  512E               	movf	(??_get_fat+4)& (0+255),w,b
 44215   016B5C  252A               	addwf	??_get_fat& (0+255),w,b
 44216   016B5E  6F1C               	movwf	move_window@sect& (0+255),b
 44217   016B60  512F               	movf	(??_get_fat+5)& (0+255),w,b
 44218   016B62  212B               	addwfc	(??_get_fat+1)& (0+255),w,b
 44219   016B64  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 44220   016B66  0E00               	movlw	0
 44221   016B68  212C               	addwfc	(??_get_fat+2)& (0+255),w,b
 44222   016B6A  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 44223   016B6C  0E00               	movlw	0
 44224   016B6E  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 44225   016B70  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 44226   016B72  ECAB  F0EF         	call	_move_window	;wreg free
 44227   016B76  0900               	iorlw	0
 44228   016B78  B4D8               	btfsc	status,2,c
 44229   016B7A  EFC1  F0B5         	goto	u28091
 44230   016B7E  EFC3  F0B5         	goto	u28090
 44231   016B82                     u28091:
 44232   016B82  EFC5  F0B5         	goto	l21071
 44233   016B86                     u28090:
 44234   016B86  EFE4  F0B6         	goto	l232
 44235   016B8A                     l21071:
 44236                           
 44237                           ;../fatfs/ff.c: 1184:    wc |= fs->win[bc % ((UINT)512)] << 8;
 44238   016B8A  0EFF               	movlw	255
 44239   016B8C  0106               	movlb	6	; () banked
 44240   016B8E  153A               	andwf	get_fat@bc& (0+255),w,b
 44241   016B90  6F2A               	movwf	??_get_fat& (0+255),b
 44242   016B92  0E01               	movlw	1
 44243   016B94  153B               	andwf	(get_fat@bc+1)& (0+255),w,b
 44244   016B96  6F2B               	movwf	(??_get_fat+1)& (0+255),b
 44245   016B98  512A               	movf	??_get_fat& (0+255),w,b
 44246   016B9A  253C               	addwf	get_fat@fs& (0+255),w,b
 44247   016B9C  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 44248   016B9E  512B               	movf	(??_get_fat+1)& (0+255),w,b
 44249   016BA0  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 44250   016BA2  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 44251   016BA4  0E34               	movlw	52
 44252   016BA6  252C               	addwf	(??_get_fat+2)& (0+255),w,b
 44253   016BA8  6ED9               	movwf	fsr2l,c
 44254   016BAA  0E00               	movlw	0
 44255   016BAC  212D               	addwfc	(??_get_fat+3)& (0+255),w,b
 44256   016BAE  6EDA               	movwf	fsr2h,c
 44257   016BB0  50DF               	movf	indf2,w,c
 44258   016BB2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 44259   016BB4  512E               	movf	(??_get_fat+4)& (0+255),w,b
 44260   016BB6  6F30               	movwf	(??_get_fat+6)& (0+255),b
 44261   016BB8  6B2F               	clrf	(??_get_fat+5)& (0+255),b
 44262   016BBA  512F               	movf	(??_get_fat+5)& (0+255),w,b
 44263   016BBC  1334               	iorwf	get_fat@wc& (0+255),f,b
 44264   016BBE  5130               	movf	(??_get_fat+6)& (0+255),w,b
 44265   016BC0  1335               	iorwf	(get_fat@wc+1)& (0+255),f,b
 44266   016BC2                     
 44267                           ; BSR set to: 6
 44268                           ;../fatfs/ff.c: 1185:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 44269   016BC2  B126               	btfsc	get_fat@clst& (0+255),0,b
 44270   016BC4  EFE6  F0B5         	goto	u28101
 44271   016BC8  EFE8  F0B5         	goto	u28100
 44272   016BCC                     u28101:
 44273   016BCC  EFF0  F0B5         	goto	l21077
 44274   016BD0                     u28100:
 44275   016BD0                     
 44276                           ; BSR set to: 6
 44277   016BD0  0EFF               	movlw	255
 44278   016BD2  1534               	andwf	get_fat@wc& (0+255),w,b
 44279   016BD4  6F32               	movwf	_get_fat$435& (0+255),b
 44280   016BD6  0E0F               	movlw	15
 44281   016BD8  1535               	andwf	(get_fat@wc+1)& (0+255),w,b
 44282   016BDA  6F33               	movwf	(_get_fat$435+1)& (0+255),b
 44283   016BDC  EF00  F0B6         	goto	l21079
 44284   016BE0                     l21077:
 44285                           
 44286                           ; BSR set to: 6
 44287   016BE0  C634  F62A         	movff	get_fat@wc,??_get_fat
 44288   016BE4  C635  F62B         	movff	get_fat@wc+1,??_get_fat+1
 44289   016BE8  0E04               	movlw	4
 44290   016BEA  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 44291   016BEC                     u28115:
 44292   016BEC  90D8               	bcf	status,0,c
 44293   016BEE  332B               	rrcf	(??_get_fat+1)& (0+255),f,b
 44294   016BF0  332A               	rrcf	??_get_fat& (0+255),f,b
 44295   016BF2  2F2C               	decfsz	(??_get_fat+2)& (0+255),f,b
 44296   016BF4  EFF6  F0B5         	goto	u28115
 44297   016BF8  C62A  F632         	movff	??_get_fat,_get_fat$435
 44298   016BFC  C62B  F633         	movff	??_get_fat+1,_get_fat$435+1
 44299   016C00                     l21079:
 44300                           
 44301                           ; BSR set to: 6
 44302   016C00  C632  F636         	movff	_get_fat$435,get_fat@val
 44303   016C04  C633  F637         	movff	_get_fat$435+1,get_fat@val+1
 44304   016C08  6B38               	clrf	(get_fat@val+2)& (0+255),b
 44305   016C0A  6B39               	clrf	(get_fat@val+3)& (0+255),b
 44306                           
 44307                           ;../fatfs/ff.c: 1186:    break;
 44308   016C0C  EFE4  F0B6         	goto	l232
 44309   016C10                     l21081:
 44310                           
 44311                           ; BSR set to: 6
 44312                           ;../fatfs/ff.c: 1189:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) !
      +                          = FR_OK) break;
 44313   016C10  C63C  F61A         	movff	get_fat@fs,move_window@fs
 44314   016C14  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 44315   016C18  EE20 F024          	lfsr	2,36
 44316   016C1C  513C               	movf	get_fat@fs& (0+255),w,b
 44317   016C1E  26D9               	addwf	fsr2l,f,c
 44318   016C20  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 44319   016C22  22DA               	addwfc	fsr2h,f,c
 44320   016C24  C4DE F62A          	movff	postinc2,??_get_fat
 44321   016C28  C4DE F62B          	movff	postinc2,??_get_fat+1
 44322   016C2C  C4DE F62C          	movff	postinc2,??_get_fat+2
 44323   016C30  C4DE F62D          	movff	postinc2,??_get_fat+3
 44324   016C34  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 44325   016C38  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 44326   016C3C  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 44327   016C40  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 44328   016C44  C62F  F62E         	movff	??_get_fat+5,??_get_fat+4
 44329   016C48  C630  F62F         	movff	??_get_fat+6,??_get_fat+5
 44330   016C4C  C631  F630         	movff	??_get_fat+7,??_get_fat+6
 44331   016C50  6B31               	clrf	(??_get_fat+7)& (0+255),b
 44332   016C52  512A               	movf	??_get_fat& (0+255),w,b
 44333   016C54  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 44334   016C56  6F1C               	movwf	move_window@sect& (0+255),b
 44335   016C58  512B               	movf	(??_get_fat+1)& (0+255),w,b
 44336   016C5A  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 44337   016C5C  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 44338   016C5E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 44339   016C60  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 44340   016C62  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 44341   016C64  512D               	movf	(??_get_fat+3)& (0+255),w,b
 44342   016C66  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 44343   016C68  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 44344   016C6A  ECAB  F0EF         	call	_move_window	;wreg free
 44345   016C6E  0900               	iorlw	0
 44346   016C70  B4D8               	btfsc	status,2,c
 44347   016C72  EF3D  F0B6         	goto	u28121
 44348   016C76  EF3F  F0B6         	goto	u28120
 44349   016C7A                     u28121:
 44350   016C7A  EF41  F0B6         	goto	l21085
 44351   016C7E                     u28120:
 44352   016C7E  EFE4  F0B6         	goto	l232
 44353   016C82                     l21085:
 44354                           
 44355                           ;../fatfs/ff.c: 1190:    val = ld_word(fs->win + clst * 2 % ((UINT)512));
 44356   016C82  C626  F62A         	movff	get_fat@clst,??_get_fat
 44357   016C86  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 44358   016C8A  90D8               	bcf	status,0,c
 44359   016C8C  0106               	movlb	6	; () banked
 44360   016C8E  372A               	rlcf	??_get_fat& (0+255),f,b
 44361   016C90  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 44362   016C92  0EFF               	movlw	255
 44363   016C94  152A               	andwf	??_get_fat& (0+255),w,b
 44364   016C96  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 44365   016C98  0E01               	movlw	1
 44366   016C9A  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 44367   016C9C  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 44368   016C9E  512C               	movf	(??_get_fat+2)& (0+255),w,b
 44369   016CA0  253C               	addwf	get_fat@fs& (0+255),w,b
 44370   016CA2  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 44371   016CA4  512D               	movf	(??_get_fat+3)& (0+255),w,b
 44372   016CA6  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 44373   016CA8  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 44374   016CAA  0E34               	movlw	52
 44375   016CAC  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 44376   016CAE  6E04               	movwf	ld_word@ptr^(0+1280),c
 44377   016CB0  0E00               	movlw	0
 44378   016CB2  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 44379   016CB4  6E05               	movwf	(ld_word@ptr+1)^(0+1280),c
 44380   016CB6  EC4C  F0FF         	call	_ld_word	;wreg free
 44381   016CBA  C504  F636         	movff	?_ld_word,get_fat@val
 44382   016CBE  C505  F637         	movff	?_ld_word+1,get_fat@val+1
 44383   016CC2  0106               	movlb	6	; () banked
 44384   016CC4  6B38               	clrf	(get_fat@val+2)& (0+255),b
 44385   016CC6  6B39               	clrf	(get_fat@val+3)& (0+255),b
 44386                           
 44387                           ;../fatfs/ff.c: 1191:    break;
 44388   016CC8  EFE4  F0B6         	goto	l232
 44389   016CCC                     l21087:
 44390                           
 44391                           ; BSR set to: 6
 44392                           ;../fatfs/ff.c: 1194:    if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) !
      +                          = FR_OK) break;
 44393   016CCC  C63C  F61A         	movff	get_fat@fs,move_window@fs
 44394   016CD0  C63D  F61B         	movff	get_fat@fs+1,move_window@fs+1
 44395   016CD4  EE20 F024          	lfsr	2,36
 44396   016CD8  513C               	movf	get_fat@fs& (0+255),w,b
 44397   016CDA  26D9               	addwf	fsr2l,f,c
 44398   016CDC  513D               	movf	(get_fat@fs+1)& (0+255),w,b
 44399   016CDE  22DA               	addwfc	fsr2h,f,c
 44400   016CE0  C4DE F62A          	movff	postinc2,??_get_fat
 44401   016CE4  C4DE F62B          	movff	postinc2,??_get_fat+1
 44402   016CE8  C4DE F62C          	movff	postinc2,??_get_fat+2
 44403   016CEC  C4DE F62D          	movff	postinc2,??_get_fat+3
 44404   016CF0  C626  F62E         	movff	get_fat@clst,??_get_fat+4
 44405   016CF4  C627  F62F         	movff	get_fat@clst+1,??_get_fat+5
 44406   016CF8  C628  F630         	movff	get_fat@clst+2,??_get_fat+6
 44407   016CFC  C629  F631         	movff	get_fat@clst+3,??_get_fat+7
 44408   016D00  0E08               	movlw	8
 44409   016D02  EF88  F0B6         	goto	u28130
 44410   016D06                     u28135:
 44411   016D06  90D8               	bcf	status,0,c
 44412   016D08  3331               	rrcf	(??_get_fat+7)& (0+255),f,b
 44413   016D0A  3330               	rrcf	(??_get_fat+6)& (0+255),f,b
 44414   016D0C  332F               	rrcf	(??_get_fat+5)& (0+255),f,b
 44415   016D0E  332E               	rrcf	(??_get_fat+4)& (0+255),f,b
 44416   016D10                     u28130:
 44417   016D10  2EE8               	decfsz	wreg,f,c
 44418   016D12  EF83  F0B6         	goto	u28135
 44419   016D16  512A               	movf	??_get_fat& (0+255),w,b
 44420   016D18  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 44421   016D1A  6F1C               	movwf	move_window@sect& (0+255),b
 44422   016D1C  512B               	movf	(??_get_fat+1)& (0+255),w,b
 44423   016D1E  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 44424   016D20  6F1D               	movwf	(move_window@sect+1)& (0+255),b
 44425   016D22  512C               	movf	(??_get_fat+2)& (0+255),w,b
 44426   016D24  2130               	addwfc	(??_get_fat+6)& (0+255),w,b
 44427   016D26  6F1E               	movwf	(move_window@sect+2)& (0+255),b
 44428   016D28  512D               	movf	(??_get_fat+3)& (0+255),w,b
 44429   016D2A  2131               	addwfc	(??_get_fat+7)& (0+255),w,b
 44430   016D2C  6F1F               	movwf	(move_window@sect+3)& (0+255),b
 44431   016D2E  ECAB  F0EF         	call	_move_window	;wreg free
 44432   016D32  0900               	iorlw	0
 44433   016D34  B4D8               	btfsc	status,2,c
 44434   016D36  EF9F  F0B6         	goto	u28141
 44435   016D3A  EFA1  F0B6         	goto	u28140
 44436   016D3E                     u28141:
 44437   016D3E  EFA3  F0B6         	goto	l21091
 44438   016D42                     u28140:
 44439   016D42  EFE4  F0B6         	goto	l232
 44440   016D46                     l21091:
 44441                           
 44442                           ;../fatfs/ff.c: 1195:    val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
 44443   016D46  C626  F62A         	movff	get_fat@clst,??_get_fat
 44444   016D4A  C627  F62B         	movff	get_fat@clst+1,??_get_fat+1
 44445   016D4E  0106               	movlb	6	; () banked
 44446   016D50  90D8               	bcf	status,0,c
 44447   016D52  372A               	rlcf	??_get_fat& (0+255),f,b
 44448   016D54  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 44449   016D56  90D8               	bcf	status,0,c
 44450   016D58  372A               	rlcf	??_get_fat& (0+255),f,b
 44451   016D5A  372B               	rlcf	(??_get_fat+1)& (0+255),f,b
 44452   016D5C  0EFF               	movlw	255
 44453   016D5E  152A               	andwf	??_get_fat& (0+255),w,b
 44454   016D60  6F2C               	movwf	(??_get_fat+2)& (0+255),b
 44455   016D62  0E01               	movlw	1
 44456   016D64  152B               	andwf	(??_get_fat+1)& (0+255),w,b
 44457   016D66  6F2D               	movwf	(??_get_fat+3)& (0+255),b
 44458   016D68  512C               	movf	(??_get_fat+2)& (0+255),w,b
 44459   016D6A  253C               	addwf	get_fat@fs& (0+255),w,b
 44460   016D6C  6F2E               	movwf	(??_get_fat+4)& (0+255),b
 44461   016D6E  512D               	movf	(??_get_fat+3)& (0+255),w,b
 44462   016D70  213D               	addwfc	(get_fat@fs+1)& (0+255),w,b
 44463   016D72  6F2F               	movwf	(??_get_fat+5)& (0+255),b
 44464   016D74  0E34               	movlw	52
 44465   016D76  252E               	addwf	(??_get_fat+4)& (0+255),w,b
 44466   016D78  6E04               	movwf	ld_dword@ptr^(0+1280),c
 44467   016D7A  0E00               	movlw	0
 44468   016D7C  212F               	addwfc	(??_get_fat+5)& (0+255),w,b
 44469   016D7E  6E05               	movwf	(ld_dword@ptr+1)^(0+1280),c
 44470   016D80  ECC7  F0F2         	call	_ld_dword	;wreg free
 44471   016D84  0EFF               	movlw	255
 44472   016D86  1404               	andwf	?_ld_dword^(0+1280),w,c
 44473   016D88  0106               	movlb	6	; () banked
 44474   016D8A  6F36               	movwf	get_fat@val& (0+255),b
 44475   016D8C  0EFF               	movlw	255
 44476   016D8E  1405               	andwf	(?_ld_dword+1)^(0+1280),w,c
 44477   016D90  6F37               	movwf	(get_fat@val+1)& (0+255),b
 44478   016D92  0EFF               	movlw	255
 44479   016D94  1406               	andwf	(?_ld_dword+2)^(0+1280),w,c
 44480   016D96  6F38               	movwf	(get_fat@val+2)& (0+255),b
 44481   016D98  0E0F               	movlw	15
 44482   016D9A  1407               	andwf	(?_ld_dword+3)^(0+1280),w,c
 44483   016D9C  6F39               	movwf	(get_fat@val+3)& (0+255),b
 44484                           
 44485                           ;../fatfs/ff.c: 1196:    break;
 44486   016D9E  EFE4  F0B6         	goto	l232
 44487   016DA2                     l21095:
 44488                           
 44489                           ; BSR set to: 6
 44490   016DA2  C63C  F4D9         	movff	get_fat@fs,fsr2l
 44491   016DA6  C63D  F4DA         	movff	get_fat@fs+1,fsr2h
 44492   016DAA  50DF               	movf	indf2,w,c
 44493                           
 44494                           ; Switch size 1, requested type "simple"
 44495                           ; Number of cases is 3, Range of values is 1 to 3
 44496                           ; switch strategies available:
 44497                           ; Name         Instructions Cycles
 44498                           ; simple_byte           10     6 (average)
 44499                           ;	Chosen strategy is simple_byte
 44500   016DAC  0A01               	xorlw	1	; case 1
 44501   016DAE  B4D8               	btfsc	status,2,c
 44502   016DB0  EF32  F0B5         	goto	l234
 44503   016DB4  0A03               	xorlw	3	; case 2
 44504   016DB6  B4D8               	btfsc	status,2,c
 44505   016DB8  EF08  F0B6         	goto	l21081
 44506   016DBC  0A01               	xorlw	1	; case 3
 44507   016DBE  B4D8               	btfsc	status,2,c
 44508   016DC0  EF66  F0B6         	goto	l21087
 44509   016DC4  EF22  F0B5         	goto	l21055
 44510   016DC8                     l232:
 44511                           
 44512                           ;../fatfs/ff.c: 1229:  return val;
 44513   016DC8  C636  F624         	movff	get_fat@val,?_get_fat
 44514   016DCC  C637  F625         	movff	get_fat@val+1,?_get_fat+1
 44515   016DD0  C638  F626         	movff	get_fat@val+2,?_get_fat+2
 44516   016DD4  C639  F627         	movff	get_fat@val+3,?_get_fat+3
 44517   016DD8  0012               	return		;funcret
 44518   016DDA                     __end_of_get_fat:
 44519                           	callstack 0
 44520                           
 44521 ;; *************** function _move_window *****************
 44522 ;; Defined at:
 44523 ;;		line 1078 in file "../fatfs/ff.c"
 44524 ;; Parameters:    Size  Location     Type
 44525 ;;  fs              2   26[BANK6 ] PTR struct .
 44526 ;;		 -> fs(564), NULL(0), 
 44527 ;;  sect            4   28[BANK6 ] unsigned long 
 44528 ;; Auto vars:     Size  Location     Type
 44529 ;;  res             1  158[BANK5 ] enum E597
 44530 ;; Return value:  Size  Location     Type
 44531 ;;                  1    wreg      enum E597
 44532 ;; Registers used:
 44533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 44534 ;; Tracked objects:
 44535 ;;		On entry : 0/0
 44536 ;;		On exit  : 0/0
 44537 ;;		Unchanged: 0/0
 44538 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44539 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44541 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44542 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44543 ;;Total ram usage:       11 bytes
 44544 ;; Hardware stack levels used: 1
 44545 ;; Hardware stack levels required when called: 13
 44546 ;; This function calls:
 44547 ;;		_disk_read
 44548 ;;		_sync_window
 44549 ;; This function is called by:
 44550 ;;		_get_fat
 44551 ;;		_put_fat
 44552 ;;		_dir_alloc
 44553 ;;		_dir_read
 44554 ;;		_dir_find
 44555 ;;		_dir_register
 44556 ;;		_check_fs
 44557 ;;		_mount_volume
 44558 ;;		_f_open
 44559 ;;		_f_sync
 44560 ;;		_f_getcwd
 44561 ;;		_dir_remove
 44562 ;;		_f_getfree
 44563 ;;		_f_rename
 44564 ;; This function uses a non-reentrant model
 44565 ;;
 44566                           
 44567                           	psect	text115
 44568   01DF56                     __ptext115:
 44569                           	callstack 0
 44570   01DF56                     _move_window:
 44571                           	callstack 105
 44572   01DF56                     
 44573                           ;../fatfs/ff.c: 1079:  FATFS* fs,;../fatfs/ff.c: 1080:  LBA_t sect;../fatfs/ff.c: 1082: 
      +                          {;../fatfs/ff.c: 1083:  FRESULT res = FR_OK;
 44574   01DF56  0105               	movlb	5	; () banked
 44575   01DF58  6BFE               	clrf	move_window@res& (0+255),b
 44576   01DF5A                     
 44577                           ; BSR set to: 5
 44578                           ;../fatfs/ff.c: 1086:  if (sect != fs->winsect) {
 44579   01DF5A  0106               	movlb	6	; () banked
 44580   01DF5C  EE20 F030          	lfsr	2,48
 44581   01DF60  511A               	movf	move_window@fs& (0+255),w,b
 44582   01DF62  26D9               	addwf	fsr2l,f,c
 44583   01DF64  511B               	movf	(move_window@fs+1)& (0+255),w,b
 44584   01DF66  22DA               	addwfc	fsr2h,f,c
 44585   01DF68  511C               	movf	move_window@sect& (0+255),w,b
 44586   01DF6A  18DE               	xorwf	postinc2,w,c
 44587   01DF6C  E10F               	bnz	u27970
 44588   01DF6E  511D               	movf	(move_window@sect+1)& (0+255),w,b
 44589   01DF70  18DE               	xorwf	postinc2,w,c
 44590   01DF72  E10C               	bnz	u27970
 44591   01DF74  511E               	movf	(move_window@sect+2)& (0+255),w,b
 44592   01DF76  18DE               	xorwf	postinc2,w,c
 44593   01DF78  E109               	bnz	u27970
 44594   01DF7A  511F               	movf	(move_window@sect+3)& (0+255),w,b
 44595   01DF7C  18DE               	xorwf	postinc2,w,c
 44596   01DF7E  B4D8               	btfsc	status,2,c
 44597   01DF80  EFC4  F0EF         	goto	u27971
 44598   01DF84  EFC6  F0EF         	goto	u27970
 44599   01DF88                     u27971:
 44600   01DF88  EF11  F0F0         	goto	l21015
 44601   01DF8C                     u27970:
 44602   01DF8C                     
 44603                           ; BSR set to: 6
 44604                           ;../fatfs/ff.c: 1088:   res = sync_window(fs);
 44605   01DF8C  C61A  F608         	movff	move_window@fs,sync_window@fs
 44606   01DF90  C61B  F609         	movff	move_window@fs+1,sync_window@fs+1
 44607   01DF94  EC26  F0DB         	call	_sync_window	;wreg free
 44608   01DF98  0105               	movlb	5	; () banked
 44609   01DF9A  6FFE               	movwf	move_window@res& (0+255),b
 44610   01DF9C                     
 44611                           ; BSR set to: 5
 44612                           ;../fatfs/ff.c: 1090:   if (res == FR_OK) {
 44613   01DF9C  51FE               	movf	move_window@res& (0+255),w,b
 44614   01DF9E  A4D8               	btfss	status,2,c
 44615   01DFA0  EFD4  F0EF         	goto	u27981
 44616   01DFA4  EFD6  F0EF         	goto	u27980
 44617   01DFA8                     u27981:
 44618   01DFA8  EF11  F0F0         	goto	l21015
 44619   01DFAC                     u27980:
 44620   01DFAC                     
 44621                           ; BSR set to: 5
 44622                           ;../fatfs/ff.c: 1091:    if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
 44623   01DFAC  0E34               	movlw	52
 44624   01DFAE  0106               	movlb	6	; () banked
 44625   01DFB0  251A               	addwf	move_window@fs& (0+255),w,b
 44626   01DFB2  6F00               	movwf	disk_read@buff& (0+255),b
 44627   01DFB4  0E00               	movlw	0
 44628   01DFB6  211B               	addwfc	(move_window@fs+1)& (0+255),w,b
 44629   01DFB8  6F01               	movwf	(disk_read@buff+1)& (0+255),b
 44630   01DFBA  C61C  F602         	movff	move_window@sect,disk_read@sector
 44631   01DFBE  C61D  F603         	movff	move_window@sect+1,disk_read@sector+1
 44632   01DFC2  C61E  F604         	movff	move_window@sect+2,disk_read@sector+2
 44633   01DFC6  C61F  F605         	movff	move_window@sect+3,disk_read@sector+3
 44634   01DFCA  0E00               	movlw	0
 44635   01DFCC  6F07               	movwf	(disk_read@count+1)& (0+255),b
 44636   01DFCE  0E01               	movlw	1
 44637   01DFD0  6F06               	movwf	disk_read@count& (0+255),b
 44638   01DFD2  EE20 F001          	lfsr	2,1
 44639   01DFD6  511A               	movf	move_window@fs& (0+255),w,b
 44640   01DFD8  26D9               	addwf	fsr2l,f,c
 44641   01DFDA  511B               	movf	(move_window@fs+1)& (0+255),w,b
 44642   01DFDC  22DA               	addwfc	fsr2h,f,c
 44643   01DFDE  50DF               	movf	indf2,w,c
 44644   01DFE0  ECD5  F0F3         	call	_disk_read
 44645   01DFE4  0900               	iorlw	0
 44646   01DFE6  B4D8               	btfsc	status,2,c
 44647   01DFE8  EFF8  F0EF         	goto	u27991
 44648   01DFEC  EFFA  F0EF         	goto	u27990
 44649   01DFF0                     u27991:
 44650   01DFF0  EF02  F0F0         	goto	l21013
 44651   01DFF4                     u27990:
 44652   01DFF4                     
 44653                           ;../fatfs/ff.c: 1092:     sect = (LBA_t)0 - 1;
 44654   01DFF4  0106               	movlb	6	; () banked
 44655   01DFF6  691C               	setf	move_window@sect& (0+255),b
 44656   01DFF8  691D               	setf	(move_window@sect+1)& (0+255),b
 44657   01DFFA  691E               	setf	(move_window@sect+2)& (0+255),b
 44658   01DFFC  691F               	setf	(move_window@sect+3)& (0+255),b
 44659   01DFFE                     
 44660                           ; BSR set to: 6
 44661                           ;../fatfs/ff.c: 1093:     res = FR_DISK_ERR;
 44662   01DFFE  0E01               	movlw	1
 44663   01E000  0105               	movlb	5	; () banked
 44664   01E002  6FFE               	movwf	move_window@res& (0+255),b
 44665   01E004                     l21013:
 44666                           
 44667                           ;../fatfs/ff.c: 1095:    fs->winsect = sect;
 44668   01E004  0106               	movlb	6	; () banked
 44669   01E006  EE20 F030          	lfsr	2,48
 44670   01E00A  511A               	movf	move_window@fs& (0+255),w,b
 44671   01E00C  26D9               	addwf	fsr2l,f,c
 44672   01E00E  511B               	movf	(move_window@fs+1)& (0+255),w,b
 44673   01E010  22DA               	addwfc	fsr2h,f,c
 44674   01E012  C61C  F4DE         	movff	move_window@sect,postinc2
 44675   01E016  C61D  F4DE         	movff	move_window@sect+1,postinc2
 44676   01E01A  C61E  F4DE         	movff	move_window@sect+2,postinc2
 44677   01E01E  C61F  F4DE         	movff	move_window@sect+3,postinc2
 44678   01E022                     l21015:
 44679                           
 44680                           ;../fatfs/ff.c: 1098:  return res;
 44681   01E022  0105               	movlb	5	; () banked
 44682   01E024  51FE               	movf	move_window@res& (0+255),w,b
 44683   01E026                     
 44684                           ; BSR set to: 5
 44685   01E026  0012               	return		;funcret
 44686   01E028                     __end_of_move_window:
 44687                           	callstack 0
 44688                           
 44689 ;; *************** function _sync_window *****************
 44690 ;; Defined at:
 44691 ;;		line 1056 in file "../fatfs/ff.c"
 44692 ;; Parameters:    Size  Location     Type
 44693 ;;  fs              2    8[BANK6 ] PTR struct .
 44694 ;;		 -> fs(564), NULL(0), 
 44695 ;; Auto vars:     Size  Location     Type
 44696 ;;  res             1  156[BANK5 ] enum E597
 44697 ;; Return value:  Size  Location     Type
 44698 ;;                  1    wreg      enum E597
 44699 ;; Registers used:
 44700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 44701 ;; Tracked objects:
 44702 ;;		On entry : 0/0
 44703 ;;		On exit  : 0/0
 44704 ;;		Unchanged: 0/0
 44705 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44706 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44708 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44709 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44710 ;;Total ram usage:       19 bytes
 44711 ;; Hardware stack levels used: 1
 44712 ;; Hardware stack levels required when called: 12
 44713 ;; This function calls:
 44714 ;;		_disk_write
 44715 ;; This function is called by:
 44716 ;;		_move_window
 44717 ;;		_sync_fs
 44718 ;;		_dir_clear
 44719 ;; This function uses a non-reentrant model
 44720 ;;
 44721                           
 44722                           	psect	text116
 44723   01B64C                     __ptext116:
 44724                           	callstack 0
 44725   01B64C                     _sync_window:
 44726                           	callstack 105
 44727   01B64C                     
 44728                           ;../fatfs/ff.c: 1057:  FATFS* fs;../fatfs/ff.c: 1059: {;../fatfs/ff.c: 1060:  FRESULT re
      +                          s = FR_OK;
 44729   01B64C  0105               	movlb	5	; () banked
 44730   01B64E  6BFC               	clrf	sync_window@res& (0+255),b
 44731   01B650                     
 44732                           ; BSR set to: 5
 44733                           ;../fatfs/ff.c: 1063:  if (fs->wflag) {
 44734   01B650  0106               	movlb	6	; () banked
 44735   01B652  EE20 F004          	lfsr	2,4
 44736   01B656  5108               	movf	sync_window@fs& (0+255),w,b
 44737   01B658  26D9               	addwf	fsr2l,f,c
 44738   01B65A  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44739   01B65C  22DA               	addwfc	fsr2h,f,c
 44740   01B65E  50DF               	movf	indf2,w,c
 44741   01B660  B4D8               	btfsc	status,2,c
 44742   01B662  EF35  F0DB         	goto	u27931
 44743   01B666  EF37  F0DB         	goto	u27930
 44744   01B66A                     u27931:
 44745   01B66A  EFF4  F0DB         	goto	l205
 44746   01B66E                     u27930:
 44747   01B66E                     
 44748                           ; BSR set to: 6
 44749                           ;../fatfs/ff.c: 1064:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
 44750   01B66E  0E34               	movlw	52
 44751   01B670  2508               	addwf	sync_window@fs& (0+255),w,b
 44752   01B672  6F00               	movwf	disk_write@buff& (0+255),b
 44753   01B674  0E00               	movlw	0
 44754   01B676  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 44755   01B678  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 44756   01B67A  EE20 F030          	lfsr	2,48
 44757   01B67E  5108               	movf	sync_window@fs& (0+255),w,b
 44758   01B680  26D9               	addwf	fsr2l,f,c
 44759   01B682  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44760   01B684  22DA               	addwfc	fsr2h,f,c
 44761   01B686  C4DE F602          	movff	postinc2,disk_write@sector
 44762   01B68A  C4DE F603          	movff	postinc2,disk_write@sector+1
 44763   01B68E  C4DE F604          	movff	postinc2,disk_write@sector+2
 44764   01B692  C4DE F605          	movff	postinc2,disk_write@sector+3
 44765   01B696  0E00               	movlw	0
 44766   01B698  6F07               	movwf	(disk_write@count+1)& (0+255),b
 44767   01B69A  0E01               	movlw	1
 44768   01B69C  6F06               	movwf	disk_write@count& (0+255),b
 44769   01B69E  EE20 F001          	lfsr	2,1
 44770   01B6A2  5108               	movf	sync_window@fs& (0+255),w,b
 44771   01B6A4  26D9               	addwf	fsr2l,f,c
 44772   01B6A6  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44773   01B6A8  22DA               	addwfc	fsr2h,f,c
 44774   01B6AA  50DF               	movf	indf2,w,c
 44775   01B6AC  EC7E  F0F3         	call	_disk_write
 44776   01B6B0  0900               	iorlw	0
 44777   01B6B2  A4D8               	btfss	status,2,c
 44778   01B6B4  EF5E  F0DB         	goto	u27941
 44779   01B6B8  EF60  F0DB         	goto	u27940
 44780   01B6BC                     u27941:
 44781   01B6BC  EFF1  F0DB         	goto	l20955
 44782   01B6C0                     u27940:
 44783   01B6C0                     
 44784                           ;../fatfs/ff.c: 1065:    fs->wflag = 0;
 44785   01B6C0  0106               	movlb	6	; () banked
 44786   01B6C2  EE20 F004          	lfsr	2,4
 44787   01B6C6  5108               	movf	sync_window@fs& (0+255),w,b
 44788   01B6C8  26D9               	addwf	fsr2l,f,c
 44789   01B6CA  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44790   01B6CC  22DA               	addwfc	fsr2h,f,c
 44791   01B6CE  6ADF               	clrf	indf2,c
 44792   01B6D0                     
 44793                           ; BSR set to: 6
 44794                           ;../fatfs/ff.c: 1066:    if (fs->winsect - fs->fatbase < fs->fsize) {
 44795   01B6D0  EE20 F01C          	lfsr	2,28
 44796   01B6D4  5108               	movf	sync_window@fs& (0+255),w,b
 44797   01B6D6  26D9               	addwf	fsr2l,f,c
 44798   01B6D8  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44799   01B6DA  22DA               	addwfc	fsr2h,f,c
 44800   01B6DC  EE10 F024          	lfsr	1,36
 44801   01B6E0  5108               	movf	sync_window@fs& (0+255),w,b
 44802   01B6E2  26E1               	addwf	fsr1l,f,c
 44803   01B6E4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44804   01B6E6  22E2               	addwfc	fsr1h,f,c
 44805   01B6E8  C4E6 F60E          	movff	postinc1,??_sync_window+4
 44806   01B6EC  C4E6 F60F          	movff	postinc1,??_sync_window+5
 44807   01B6F0  C4E6 F610          	movff	postinc1,??_sync_window+6
 44808   01B6F4  C4E6 F611          	movff	postinc1,??_sync_window+7
 44809   01B6F8  EE10 F030          	lfsr	1,48
 44810   01B6FC  5108               	movf	sync_window@fs& (0+255),w,b
 44811   01B6FE  26E1               	addwf	fsr1l,f,c
 44812   01B700  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44813   01B702  22E2               	addwfc	fsr1h,f,c
 44814   01B704  C4E6 F612          	movff	postinc1,??_sync_window+8
 44815   01B708  C4E6 F613          	movff	postinc1,??_sync_window+9
 44816   01B70C  C4E6 F614          	movff	postinc1,??_sync_window+10
 44817   01B710  C4E6 F615          	movff	postinc1,??_sync_window+11
 44818   01B714  510E               	movf	(??_sync_window+4)& (0+255),w,b
 44819   01B716  5D12               	subwf	(??_sync_window+8)& (0+255),w,b
 44820   01B718  6F16               	movwf	(??_sync_window+12)& (0+255),b
 44821   01B71A  510F               	movf	(??_sync_window+5)& (0+255),w,b
 44822   01B71C  5913               	subwfb	(??_sync_window+9)& (0+255),w,b
 44823   01B71E  6F17               	movwf	(??_sync_window+13)& (0+255),b
 44824   01B720  5110               	movf	(??_sync_window+6)& (0+255),w,b
 44825   01B722  5914               	subwfb	(??_sync_window+10)& (0+255),w,b
 44826   01B724  6F18               	movwf	(??_sync_window+14)& (0+255),b
 44827   01B726  5111               	movf	(??_sync_window+7)& (0+255),w,b
 44828   01B728  5915               	subwfb	(??_sync_window+11)& (0+255),w,b
 44829   01B72A  6F19               	movwf	(??_sync_window+15)& (0+255),b
 44830   01B72C  50DE               	movf	postinc2,w,c
 44831   01B72E  5D16               	subwf	(??_sync_window+12)& (0+255),w,b
 44832   01B730  50DE               	movf	postinc2,w,c
 44833   01B732  5917               	subwfb	(??_sync_window+13)& (0+255),w,b
 44834   01B734  50DE               	movf	postinc2,w,c
 44835   01B736  5918               	subwfb	(??_sync_window+14)& (0+255),w,b
 44836   01B738  50DE               	movf	postinc2,w,c
 44837   01B73A  5919               	subwfb	(??_sync_window+15)& (0+255),w,b
 44838   01B73C  B0D8               	btfsc	status,0,c
 44839   01B73E  EFA3  F0DB         	goto	u27951
 44840   01B742  EFA5  F0DB         	goto	u27950
 44841   01B746                     u27951:
 44842   01B746  EFF4  F0DB         	goto	l205
 44843   01B74A                     u27950:
 44844   01B74A                     
 44845                           ; BSR set to: 6
 44846                           ;../fatfs/ff.c: 1067:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect
      +                           + fs->fsize, 1);
 44847   01B74A  EE20 F003          	lfsr	2,3
 44848   01B74E  5108               	movf	sync_window@fs& (0+255),w,b
 44849   01B750  26D9               	addwf	fsr2l,f,c
 44850   01B752  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44851   01B754  22DA               	addwfc	fsr2h,f,c
 44852   01B756  0E02               	movlw	2
 44853   01B758  18DE               	xorwf	postinc2,w,c
 44854   01B75A  A4D8               	btfss	status,2,c
 44855   01B75C  EFB2  F0DB         	goto	u27961
 44856   01B760  EFB4  F0DB         	goto	u27960
 44857   01B764                     u27961:
 44858   01B764  EFF4  F0DB         	goto	l205
 44859   01B768                     u27960:
 44860   01B768                     
 44861                           ; BSR set to: 6
 44862   01B768  0E34               	movlw	52
 44863   01B76A  2508               	addwf	sync_window@fs& (0+255),w,b
 44864   01B76C  6F00               	movwf	disk_write@buff& (0+255),b
 44865   01B76E  0E00               	movlw	0
 44866   01B770  2109               	addwfc	(sync_window@fs+1)& (0+255),w,b
 44867   01B772  6F01               	movwf	(disk_write@buff+1)& (0+255),b
 44868   01B774  EE20 F01C          	lfsr	2,28
 44869   01B778  5108               	movf	sync_window@fs& (0+255),w,b
 44870   01B77A  26D9               	addwf	fsr2l,f,c
 44871   01B77C  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44872   01B77E  22DA               	addwfc	fsr2h,f,c
 44873   01B780  C4DE F60A          	movff	postinc2,??_sync_window
 44874   01B784  C4DE F60B          	movff	postinc2,??_sync_window+1
 44875   01B788  C4DE F60C          	movff	postinc2,??_sync_window+2
 44876   01B78C  C4DE F60D          	movff	postinc2,??_sync_window+3
 44877   01B790  EE20 F030          	lfsr	2,48
 44878   01B794  5108               	movf	sync_window@fs& (0+255),w,b
 44879   01B796  26D9               	addwf	fsr2l,f,c
 44880   01B798  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44881   01B79A  22DA               	addwfc	fsr2h,f,c
 44882   01B79C  C4DE F60E          	movff	postinc2,??_sync_window+4
 44883   01B7A0  C4DE F60F          	movff	postinc2,??_sync_window+5
 44884   01B7A4  C4DE F610          	movff	postinc2,??_sync_window+6
 44885   01B7A8  C4DE F611          	movff	postinc2,??_sync_window+7
 44886   01B7AC  510A               	movf	??_sync_window& (0+255),w,b
 44887   01B7AE  250E               	addwf	(??_sync_window+4)& (0+255),w,b
 44888   01B7B0  6F02               	movwf	disk_write@sector& (0+255),b
 44889   01B7B2  510B               	movf	(??_sync_window+1)& (0+255),w,b
 44890   01B7B4  210F               	addwfc	(??_sync_window+5)& (0+255),w,b
 44891   01B7B6  6F03               	movwf	(disk_write@sector+1)& (0+255),b
 44892   01B7B8  510C               	movf	(??_sync_window+2)& (0+255),w,b
 44893   01B7BA  2110               	addwfc	(??_sync_window+6)& (0+255),w,b
 44894   01B7BC  6F04               	movwf	(disk_write@sector+2)& (0+255),b
 44895   01B7BE  510D               	movf	(??_sync_window+3)& (0+255),w,b
 44896   01B7C0  2111               	addwfc	(??_sync_window+7)& (0+255),w,b
 44897   01B7C2  6F05               	movwf	(disk_write@sector+3)& (0+255),b
 44898   01B7C4  0E00               	movlw	0
 44899   01B7C6  6F07               	movwf	(disk_write@count+1)& (0+255),b
 44900   01B7C8  0E01               	movlw	1
 44901   01B7CA  6F06               	movwf	disk_write@count& (0+255),b
 44902   01B7CC  EE20 F001          	lfsr	2,1
 44903   01B7D0  5108               	movf	sync_window@fs& (0+255),w,b
 44904   01B7D2  26D9               	addwf	fsr2l,f,c
 44905   01B7D4  5109               	movf	(sync_window@fs+1)& (0+255),w,b
 44906   01B7D6  22DA               	addwfc	fsr2h,f,c
 44907   01B7D8  50DF               	movf	indf2,w,c
 44908   01B7DA  EC7E  F0F3         	call	_disk_write
 44909   01B7DE  EFF4  F0DB         	goto	l205
 44910   01B7E2                     l20955:
 44911                           
 44912                           ;../fatfs/ff.c: 1070:    res = FR_DISK_ERR;
 44913   01B7E2  0E01               	movlw	1
 44914   01B7E4  0105               	movlb	5	; () banked
 44915   01B7E6  6FFC               	movwf	sync_window@res& (0+255),b
 44916   01B7E8                     l205:
 44917                           
 44918                           ;../fatfs/ff.c: 1073:  return res;
 44919   01B7E8  0105               	movlb	5	; () banked
 44920   01B7EA  51FC               	movf	sync_window@res& (0+255),w,b
 44921   01B7EC                     
 44922                           ; BSR set to: 5
 44923   01B7EC  0012               	return		;funcret
 44924   01B7EE                     __end_of_sync_window:
 44925                           	callstack 0
 44926                           
 44927 ;; *************** function _disk_write *****************
 44928 ;; Defined at:
 44929 ;;		line 130 in file "../drivers/diskio.c"
 44930 ;; Parameters:    Size  Location     Type
 44931 ;;  pdrv            1    wreg     unsigned char 
 44932 ;;  buff            2    0[BANK6 ] PTR const unsigned char 
 44933 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 44934 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 44935 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), NULL(0), 
 44936 ;;  sector          4    2[BANK6 ] unsigned long 
 44937 ;;  count           2    6[BANK6 ] unsigned int 
 44938 ;; Auto vars:     Size  Location     Type
 44939 ;;  pdrv            1  153[BANK5 ] unsigned char 
 44940 ;;  i               2  154[BANK5 ] int 
 44941 ;; Return value:  Size  Location     Type
 44942 ;;                  1    wreg      enum E23355
 44943 ;; Registers used:
 44944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44945 ;; Tracked objects:
 44946 ;;		On entry : 0/0
 44947 ;;		On exit  : 0/0
 44948 ;;		Unchanged: 0/0
 44949 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44950 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44951 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44953 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44954 ;;Total ram usage:       11 bytes
 44955 ;; Hardware stack levels used: 1
 44956 ;; Hardware stack levels required when called: 11
 44957 ;; This function calls:
 44958 ;;		_SDCard_write512
 44959 ;;		_printf
 44960 ;;		_util_addrdump
 44961 ;; This function is called by:
 44962 ;;		_sync_window
 44963 ;;		_sync_fs
 44964 ;;		_dir_clear
 44965 ;;		_f_read
 44966 ;;		_f_write
 44967 ;;		_f_sync
 44968 ;;		_f_lseek
 44969 ;;		_f_truncate
 44970 ;; This function uses a non-reentrant model
 44971 ;;
 44972                           
 44973                           	psect	text117
 44974   01E6FC                     __ptext117:
 44975                           	callstack 0
 44976   01E6FC                     _disk_write:
 44977                           	callstack 105
 44978   01E6FC                     
 44979                           ;../drivers/diskio.c: 134:     for (int i = 0; i < count; i++) {
 44980   01E6FC  0E00               	movlw	0
 44981   01E6FE  0105               	movlb	5	; () banked
 44982   01E700  6FFB               	movwf	(disk_write@i+1)& (0+255),b
 44983   01E702  0E00               	movlw	0
 44984   01E704  6FFA               	movwf	disk_write@i& (0+255),b
 44985   01E706  EFC4  F0F3         	goto	l20907
 44986   01E70A                     l20889:
 44987                           
 44988                           ; BSR set to: 5
 44989                           ;../drivers/diskio.c: 135:         if (SDCard_write512(start_lba + sector, 0, buff, 512)
      +                           != 0) {
 44990   01E70A  0106               	movlb	6	; () banked
 44991   01E70C  5102               	movf	disk_write@sector& (0+255),w,b
 44992   01E70E  0107               	movlb	7	; () banked
 44993   01E710  25EE               	addwf	_start_lba& (0+255),w,b
 44994   01E712  0105               	movlb	5	; () banked
 44995   01E714  6FDE               	movwf	SDCard_write512@addr& (0+255),b
 44996   01E716  0106               	movlb	6	; () banked
 44997   01E718  5103               	movf	(disk_write@sector+1)& (0+255),w,b
 44998   01E71A  0107               	movlb	7	; () banked
 44999   01E71C  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 45000   01E71E  0105               	movlb	5	; () banked
 45001   01E720  6FDF               	movwf	(SDCard_write512@addr+1)& (0+255),b
 45002   01E722  0106               	movlb	6	; () banked
 45003   01E724  5104               	movf	(disk_write@sector+2)& (0+255),w,b
 45004   01E726  0107               	movlb	7	; () banked
 45005   01E728  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 45006   01E72A  0105               	movlb	5	; () banked
 45007   01E72C  6FE0               	movwf	(SDCard_write512@addr+2)& (0+255),b
 45008   01E72E  0106               	movlb	6	; () banked
 45009   01E730  5105               	movf	(disk_write@sector+3)& (0+255),w,b
 45010   01E732  0107               	movlb	7	; () banked
 45011   01E734  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 45012   01E736  0105               	movlb	5	; () banked
 45013   01E738  6FE1               	movwf	(SDCard_write512@addr+3)& (0+255),b
 45014   01E73A  0E00               	movlw	0
 45015   01E73C  6FE3               	movwf	(SDCard_write512@offs+1)& (0+255),b
 45016   01E73E  0E00               	movlw	0
 45017   01E740  6FE2               	movwf	SDCard_write512@offs& (0+255),b
 45018   01E742  C600  F5E4         	movff	disk_write@buff,SDCard_write512@buf
 45019   01E746  C601  F5E5         	movff	disk_write@buff+1,SDCard_write512@buf+1
 45020   01E74A  0E02               	movlw	2
 45021   01E74C  6FE7               	movwf	(SDCard_write512@count+1)& (0+255),b
 45022   01E74E  0E00               	movlw	0
 45023   01E750  6FE6               	movwf	SDCard_write512@count& (0+255),b
 45024   01E752  EC73  F0C1         	call	_SDCard_write512	;wreg free
 45025   01E756  0105               	movlb	5	; () banked
 45026   01E758  51DE               	movf	?_SDCard_write512& (0+255),w,b
 45027   01E75A  11DF               	iorwf	(?_SDCard_write512+1)& (0+255),w,b
 45028   01E75C  B4D8               	btfsc	status,2,c
 45029   01E75E  EFB3  F0F3         	goto	u27891
 45030   01E762  EFB5  F0F3         	goto	u27890
 45031   01E766                     u27891:
 45032   01E766  EFB8  F0F3         	goto	l20901
 45033   01E76A                     u27890:
 45034   01E76A                     
 45035                           ; BSR set to: 5
 45036                           ;../drivers/diskio.c: 137:             return RES_ERROR;
 45037   01E76A  0E01               	movlw	1
 45038   01E76C  EFD4  F0F3         	goto	l86
 45039   01E770                     l20901:
 45040                           
 45041                           ; BSR set to: 5
 45042                           ;../drivers/diskio.c: 142:         sector++;
 45043   01E770  0E01               	movlw	1
 45044   01E772  0106               	movlb	6	; () banked
 45045   01E774  2702               	addwf	disk_write@sector& (0+255),f,b
 45046   01E776  0E00               	movlw	0
 45047   01E778  2303               	addwfc	(disk_write@sector+1)& (0+255),f,b
 45048   01E77A  2304               	addwfc	(disk_write@sector+2)& (0+255),f,b
 45049   01E77C  2305               	addwfc	(disk_write@sector+3)& (0+255),f,b
 45050   01E77E                     
 45051                           ; BSR set to: 6
 45052                           ;../drivers/diskio.c: 143:         buff += 512;
 45053   01E77E  0E02               	movlw	2
 45054   01E780  2701               	addwf	(disk_write@buff+1)& (0+255),f,b
 45055   01E782                     
 45056                           ; BSR set to: 6
 45057                           ;../drivers/diskio.c: 144:     }
 45058   01E782  0105               	movlb	5	; () banked
 45059   01E784  4BFA               	infsnz	disk_write@i& (0+255),f,b
 45060   01E786  2BFB               	incf	(disk_write@i+1)& (0+255),f,b
 45061   01E788                     l20907:
 45062                           
 45063                           ; BSR set to: 5
 45064   01E788  0106               	movlb	6	; () banked
 45065   01E78A  5106               	movf	disk_write@count& (0+255),w,b
 45066   01E78C  0105               	movlb	5	; () banked
 45067   01E78E  5DFA               	subwf	disk_write@i& (0+255),w,b
 45068   01E790  0106               	movlb	6	; () banked
 45069   01E792  5107               	movf	(disk_write@count+1)& (0+255),w,b
 45070   01E794  0105               	movlb	5	; () banked
 45071   01E796  59FB               	subwfb	(disk_write@i+1)& (0+255),w,b
 45072   01E798  A0D8               	btfss	status,0,c
 45073   01E79A  EFD1  F0F3         	goto	u27901
 45074   01E79E  EFD3  F0F3         	goto	u27900
 45075   01E7A2                     u27901:
 45076   01E7A2  EF85  F0F3         	goto	l20889
 45077   01E7A6                     u27900:
 45078   01E7A6                     
 45079                           ; BSR set to: 5
 45080                           ;../drivers/diskio.c: 146:     return RES_OK;
 45081   01E7A6  0E00               	movlw	0
 45082   01E7A8                     l86:
 45083                           
 45084                           ; BSR set to: 5
 45085   01E7A8  0012               	return		;funcret
 45086   01E7AA                     __end_of_disk_write:
 45087                           	callstack 0
 45088                           
 45089 ;; *************** function _SDCard_write512 *****************
 45090 ;; Defined at:
 45091 ;;		line 237 in file "../src/boards/../../drivers/SDCard.c"
 45092 ;; Parameters:    Size  Location     Type
 45093 ;;  addr            4  126[BANK5 ] unsigned long 
 45094 ;;  offs            2  130[BANK5 ] unsigned int 
 45095 ;;  buf             2  132[BANK5 ] PTR const void 
 45096 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 45097 ;;		 -> in_fl(546), fs(564), rom_fl(546), disk_buf(128), 
 45098 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), NULL(0), 
 45099 ;;  count           2  134[BANK5 ] unsigned int 
 45100 ;; Auto vars:     Size  Location     Type
 45101 ;;  i               2  142[BANK5 ] unsigned int 
 45102 ;;  i               2  140[BANK5 ] int 
 45103 ;;  spi             2  150[BANK5 ] PTR struct SPI
 45104 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 45105 ;;  crc             2  148[BANK5 ] unsigned short 
 45106 ;;  result          2  146[BANK5 ] int 
 45107 ;;  retry           2  144[BANK5 ] int 
 45108 ;;  response        1  152[BANK5 ] unsigned char 
 45109 ;; Return value:  Size  Location     Type
 45110 ;;                  2  126[BANK5 ] int 
 45111 ;; Registers used:
 45112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45113 ;; Tracked objects:
 45114 ;;		On entry : 0/0
 45115 ;;		On exit  : 0/0
 45116 ;;		Unchanged: 0/0
 45117 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45118 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45119 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45120 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45121 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45122 ;;Total ram usage:       27 bytes
 45123 ;; Hardware stack levels used: 1
 45124 ;; Hardware stack levels required when called: 10
 45125 ;; This function calls:
 45126 ;;		_SDCard_end_transaction
 45127 ;;		_SPI_SD_dummy_clocks
 45128 ;;		_SPI_SD_send
 45129 ;;		___SDCard_command_r1
 45130 ;;		___SDCard_crc16
 45131 ;;		___SDCard_wait_response
 45132 ;;		_printf
 45133 ;;		_util_addrdump
 45134 ;; This function is called by:
 45135 ;;		_disk_write
 45136 ;; This function uses a non-reentrant model
 45137 ;;
 45138                           
 45139                           	psect	text118
 45140   0182E6                     __ptext118:
 45141                           	callstack 0
 45142   0182E6                     _SDCard_write512:
 45143                           	callstack 105
 45144   0182E6                     
 45145                           ;../src/boards/../../drivers/SDCard.c: 237: int SDCard_write512(uint32_t addr, unsigned 
      +                          int offs, const void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 238
      +                          : {;../src/boards/../../drivers/SDCard.c: 239:     struct SPI *spi = ctx_.spi;
 45146   0182E6  C7A8  F5F6         	movff	_ctx_,SDCard_write512@spi
 45147   0182EA  C7A9  F5F7         	movff	_ctx_+1,SDCard_write512@spi+1
 45148   0182EE                     
 45149                           ;../src/boards/../../drivers/SDCard.c: 240:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 241:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 242:     uint
      +                          16_t crc;;../src/boards/../../drivers/SDCard.c: 243:     int retry = 5;
 45150   0182EE  0E00               	movlw	0
 45151   0182F0  0105               	movlb	5	; () banked
 45152   0182F2  6FF1               	movwf	(SDCard_write512@retry+1)& (0+255),b
 45153   0182F4  0E05               	movlw	5
 45154   0182F6  6FF0               	movwf	SDCard_write512@retry& (0+255),b
 45155   0182F8                     
 45156                           ; BSR set to: 5
 45157                           ;../src/boards/../../drivers/SDCard.c: 250:     crc = 0;
 45158   0182F8  0E00               	movlw	0
 45159   0182FA  6FF5               	movwf	(SDCard_write512@crc+1)& (0+255),b
 45160   0182FC  0E00               	movlw	0
 45161   0182FE  6FF4               	movwf	SDCard_write512@crc& (0+255),b
 45162   018300                     
 45163                           ; BSR set to: 5
 45164                           ;../src/boards/../../drivers/SDCard.c: 251:     response = 0xff;
 45165   018300  69F8               	setf	SDCard_write512@response& (0+255),b
 45166   018302                     
 45167                           ; BSR set to: 5
 45168                           ;../src/boards/../../drivers/SDCard.c: 252:     for (int i = 0; i < offs; i++) {
 45169   018302  0E00               	movlw	0
 45170   018304  6FED               	movwf	(SDCard_write512@i+1)& (0+255),b
 45171   018306  0E00               	movlw	0
 45172   018308  6FEC               	movwf	SDCard_write512@i& (0+255),b
 45173   01830A  EF9C  F0C1         	goto	l20723
 45174   01830E                     l20719:
 45175                           
 45176                           ; BSR set to: 5
 45177                           ;../src/boards/../../drivers/SDCard.c: 253:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 45178   01830E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 45179   018312  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 45180   018316  0EF8               	movlw	low SDCard_write512@response
 45181   018318  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 45182   01831A  0E05               	movlw	high SDCard_write512@response
 45183   01831C  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 45184   01831E  0E00               	movlw	0
 45185   018320  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 45186   018322  0E01               	movlw	1
 45187   018324  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 45188   018326  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 45189   01832A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 45190   01832E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 45191   018332                     
 45192                           ;../src/boards/../../drivers/SDCard.c: 254:     }
 45193   018332  0105               	movlb	5	; () banked
 45194   018334  4BEC               	infsnz	SDCard_write512@i& (0+255),f,b
 45195   018336  2BED               	incf	(SDCard_write512@i+1)& (0+255),f,b
 45196   018338                     l20723:
 45197                           
 45198                           ; BSR set to: 5
 45199   018338  51E2               	movf	SDCard_write512@offs& (0+255),w,b
 45200   01833A  5DEC               	subwf	SDCard_write512@i& (0+255),w,b
 45201   01833C  51E3               	movf	(SDCard_write512@offs+1)& (0+255),w,b
 45202   01833E  59ED               	subwfb	(SDCard_write512@i+1)& (0+255),w,b
 45203   018340  A0D8               	btfss	status,0,c
 45204   018342  EFA5  F0C1         	goto	u27681
 45205   018346  EFA7  F0C1         	goto	u27680
 45206   01834A                     u27681:
 45207   01834A  EF87  F0C1         	goto	l20719
 45208   01834E                     u27680:
 45209   01834E                     
 45210                           ; BSR set to: 5
 45211                           ;../src/boards/../../drivers/SDCard.c: 255:     crc = __SDCard_crc16(crc, buf, count);
 45212   01834E  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 45213   018352  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 45214   018356  C5E4  F506         	movff	SDCard_write512@buf,___SDCard_crc16@buf
 45215   01835A  C5E5  F507         	movff	SDCard_write512@buf+1,___SDCard_crc16@buf+1
 45216   01835E  C5E6  F508         	movff	SDCard_write512@count,___SDCard_crc16@count
 45217   018362  C5E7  F509         	movff	SDCard_write512@count+1,___SDCard_crc16@count+1
 45218   018366  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 45219   01836A  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 45220   01836E  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 45221   018372                     
 45222                           ;../src/boards/../../drivers/SDCard.c: 256:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 45223   018372  0E00               	movlw	0
 45224   018374  0105               	movlb	5	; () banked
 45225   018376  6FEF               	movwf	(SDCard_write512@i_4084+1)& (0+255),b
 45226   018378  0E00               	movlw	0
 45227   01837A  6FEE               	movwf	SDCard_write512@i_4084& (0+255),b
 45228   01837C  EFD5  F0C1         	goto	l20733
 45229   018380                     l20729:
 45230                           
 45231                           ; BSR set to: 5
 45232                           ;../src/boards/../../drivers/SDCard.c: 257:         crc = __SDCard_crc16(crc, &response,
      +                           1);
 45233   018380  C5F4  F504         	movff	SDCard_write512@crc,___SDCard_crc16@crc
 45234   018384  C5F5  F505         	movff	SDCard_write512@crc+1,___SDCard_crc16@crc+1
 45235   018388  0EF8               	movlw	low SDCard_write512@response
 45236   01838A  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 45237   01838C  0E05               	movlw	high SDCard_write512@response
 45238   01838E  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 45239   018390  0E00               	movlw	0
 45240   018392  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 45241   018394  0E01               	movlw	1
 45242   018396  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 45243   018398  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 45244   01839C  C504  F5F4         	movff	?___SDCard_crc16,SDCard_write512@crc
 45245   0183A0  C505  F5F5         	movff	?___SDCard_crc16+1,SDCard_write512@crc+1
 45246   0183A4                     
 45247                           ;../src/boards/../../drivers/SDCard.c: 258:     }
 45248   0183A4  0105               	movlb	5	; () banked
 45249   0183A6  4BEE               	infsnz	SDCard_write512@i_4084& (0+255),f,b
 45250   0183A8  2BEF               	incf	(SDCard_write512@i_4084+1)& (0+255),f,b
 45251   0183AA                     l20733:
 45252                           
 45253                           ; BSR set to: 5
 45254   0183AA  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 45255   0183AE  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 45256   0183B2  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 45257   0183B4  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 45258   0183B6  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 45259   0183B8  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 45260   0183BA  51E6               	movf	SDCard_write512@count& (0+255),w,b
 45261   0183BC  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 45262   0183BE  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 45263   0183C0  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 45264   0183C2  0E00               	movlw	0
 45265   0183C4  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 45266   0183C6  6FEA               	movwf	(??_SDCard_write512+2)& (0+255),b
 45267   0183C8  0E02               	movlw	2
 45268   0183CA  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 45269   0183CC  6FEB               	movwf	(??_SDCard_write512+3)& (0+255),b
 45270   0183CE  51EA               	movf	(??_SDCard_write512+2)& (0+255),w,b
 45271   0183D0  5DEE               	subwf	SDCard_write512@i_4084& (0+255),w,b
 45272   0183D2  51EB               	movf	(??_SDCard_write512+3)& (0+255),w,b
 45273   0183D4  59EF               	subwfb	(SDCard_write512@i_4084+1)& (0+255),w,b
 45274   0183D6  A0D8               	btfss	status,0,c
 45275   0183D8  EFF0  F0C1         	goto	u27691
 45276   0183DC  EFF2  F0C1         	goto	u27690
 45277   0183E0                     u27691:
 45278   0183E0  EFC0  F0C1         	goto	l20729
 45279   0183E4                     u27690:
 45280   0183E4                     l20735:
 45281                           
 45282                           ;../src/boards/../../drivers/SDCard.c: 261:     result = __SDCard_command_r1(24, addr, &
      +                          response);
 45283   0183E4  C5DE  F51B         	movff	SDCard_write512@addr,___SDCard_command_r1@argument
 45284   0183E8  C5DF  F51C         	movff	SDCard_write512@addr+1,___SDCard_command_r1@argument+1
 45285   0183EC  C5E0  F51D         	movff	SDCard_write512@addr+2,___SDCard_command_r1@argument+2
 45286   0183F0  C5E1  F51E         	movff	SDCard_write512@addr+3,___SDCard_command_r1@argument+3
 45287   0183F4  0EF8               	movlw	low SDCard_write512@response
 45288   0183F6  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 45289   0183F8  0E05               	movlw	high SDCard_write512@response
 45290   0183FA  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 45291   0183FC  0E18               	movlw	24
 45292   0183FE  EC23  F0F3         	call	___SDCard_command_r1
 45293   018402  C51B  F5F2         	movff	?___SDCard_command_r1,SDCard_write512@result
 45294   018406  C51C  F5F3         	movff	?___SDCard_command_r1+1,SDCard_write512@result+1
 45295   01840A                     
 45296                           ;../src/boards/../../drivers/SDCard.c: 262:     if (result != 0) {
 45297   01840A  0105               	movlb	5	; () banked
 45298   01840C  51F2               	movf	SDCard_write512@result& (0+255),w,b
 45299   01840E  11F3               	iorwf	(SDCard_write512@result+1)& (0+255),w,b
 45300   018410  B4D8               	btfsc	status,2,c
 45301   018412  EF0D  F0C2         	goto	u27701
 45302   018416  EF0F  F0C2         	goto	u27700
 45303   01841A                     u27701:
 45304   01841A  EF11  F0C2         	goto	l20741
 45305   01841E                     u27700:
 45306   01841E  EFE4  F0C2         	goto	l20795
 45307   018422                     l20741:
 45308                           
 45309                           ; BSR set to: 5
 45310                           ;../src/boards/../../drivers/SDCard.c: 265:     if (response != 0) {
 45311   018422  51F8               	movf	SDCard_write512@response& (0+255),w,b
 45312   018424  B4D8               	btfsc	status,2,c
 45313   018426  EF17  F0C2         	goto	u27711
 45314   01842A  EF19  F0C2         	goto	u27710
 45315   01842E                     u27711:
 45316   01842E  EF1F  F0C2         	goto	l20745
 45317   018432                     u27710:
 45318   018432                     l20743:
 45319                           
 45320                           ; BSR set to: 5
 45321                           ;../src/boards/../../drivers/SDCard.c: 266:         result = 3;
 45322   018432  0E00               	movlw	0
 45323   018434  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 45324   018436  0E03               	movlw	3
 45325   018438  6FF2               	movwf	SDCard_write512@result& (0+255),b
 45326                           
 45327                           ;../src/boards/../../drivers/SDCard.c: 267:         goto done;
 45328   01843A  EFE4  F0C2         	goto	l20795
 45329   01843E                     l20745:
 45330                           
 45331                           ; BSR set to: 5
 45332                           ;../src/boards/../../drivers/SDCard.c: 270:     response = 0xfe;
 45333   01843E  0EFE               	movlw	254
 45334   018440  6FF8               	movwf	SDCard_write512@response& (0+255),b
 45335   018442                     
 45336                           ; BSR set to: 5
 45337                           ;../src/boards/../../drivers/SDCard.c: 271:     SPI_SD_send(spi, &response, 1);
 45338   018442  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 45339   018446  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 45340   01844A  0EF8               	movlw	low SDCard_write512@response
 45341   01844C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 45342   01844E  0E05               	movlw	high SDCard_write512@response
 45343   018450  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 45344   018452  0E00               	movlw	0
 45345   018454  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 45346   018456  0E01               	movlw	1
 45347   018458  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 45348   01845A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 45349   01845E                     
 45350                           ;../src/boards/../../drivers/SDCard.c: 272:     SPI_SD_dummy_clocks(spi, offs);
 45351   01845E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 45352   018462  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 45353   018466  C5E2  F510         	movff	SDCard_write512@offs,SPI_SD_dummy_clocks@clocks
 45354   01846A  C5E3  F511         	movff	SDCard_write512@offs+1,SPI_SD_dummy_clocks@clocks+1
 45355   01846E  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 45356   018472                     
 45357                           ;../src/boards/../../drivers/SDCard.c: 273:     SPI_SD_send(spi, buf, count);
 45358   018472  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 45359   018476  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 45360   01847A  C5E4  F506         	movff	SDCard_write512@buf,SPI_SD_send@buf
 45361   01847E  C5E5  F507         	movff	SDCard_write512@buf+1,SPI_SD_send@buf+1
 45362   018482  C5E6  F508         	movff	SDCard_write512@count,SPI_SD_send@count
 45363   018486  C5E7  F509         	movff	SDCard_write512@count+1,SPI_SD_send@count+1
 45364   01848A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 45365   01848E                     
 45366                           ;../src/boards/../../drivers/SDCard.c: 274:     SPI_SD_dummy_clocks(spi, 512 - offs - co
      +                          unt);
 45367   01848E  C5F6  F50E         	movff	SDCard_write512@spi,SPI_SD_dummy_clocks@ctx_
 45368   018492  C5F7  F50F         	movff	SDCard_write512@spi+1,SPI_SD_dummy_clocks@ctx_+1
 45369   018496  C5E2  F5E8         	movff	SDCard_write512@offs,??_SDCard_write512
 45370   01849A  C5E3  F5E9         	movff	SDCard_write512@offs+1,??_SDCard_write512+1
 45371   01849E  0105               	movlb	5	; () banked
 45372   0184A0  1FE8               	comf	??_SDCard_write512& (0+255),f,b
 45373   0184A2  1FE9               	comf	(??_SDCard_write512+1)& (0+255),f,b
 45374   0184A4  4BE8               	infsnz	??_SDCard_write512& (0+255),f,b
 45375   0184A6  2BE9               	incf	(??_SDCard_write512+1)& (0+255),f,b
 45376   0184A8  51E6               	movf	SDCard_write512@count& (0+255),w,b
 45377   0184AA  5FE8               	subwf	??_SDCard_write512& (0+255),f,b
 45378   0184AC  51E7               	movf	(SDCard_write512@count+1)& (0+255),w,b
 45379   0184AE  5BE9               	subwfb	(??_SDCard_write512+1)& (0+255),f,b
 45380   0184B0  0E00               	movlw	0
 45381   0184B2  25E8               	addwf	??_SDCard_write512& (0+255),w,b
 45382   0184B4  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 45383   0184B6  0E02               	movlw	2
 45384   0184B8  21E9               	addwfc	(??_SDCard_write512+1)& (0+255),w,b
 45385   0184BA  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 45386   0184BC  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 45387                           
 45388                           ;../src/boards/../../drivers/SDCard.c: 275:     response = (crc >> 8) & 0xff;
 45389   0184C0  0105               	movlb	5	; () banked
 45390   0184C2  51F5               	movf	(SDCard_write512@crc+1)& (0+255),w,b
 45391   0184C4  6FF8               	movwf	SDCard_write512@response& (0+255),b
 45392   0184C6                     
 45393                           ; BSR set to: 5
 45394                           ;../src/boards/../../drivers/SDCard.c: 276:     SPI_SD_send(spi, &response, 1);
 45395   0184C6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 45396   0184CA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 45397   0184CE  0EF8               	movlw	low SDCard_write512@response
 45398   0184D0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 45399   0184D2  0E05               	movlw	high SDCard_write512@response
 45400   0184D4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 45401   0184D6  0E00               	movlw	0
 45402   0184D8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 45403   0184DA  0E01               	movlw	1
 45404   0184DC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 45405   0184DE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 45406   0184E2                     
 45407                           ;../src/boards/../../drivers/SDCard.c: 277:     response = crc & 0xff;
 45408   0184E2  C5F4  F5F8         	movff	SDCard_write512@crc,SDCard_write512@response
 45409   0184E6                     
 45410                           ;../src/boards/../../drivers/SDCard.c: 278:     SPI_SD_send(spi, &response, 1);
 45411   0184E6  C5F6  F504         	movff	SDCard_write512@spi,SPI_SD_send@ctx_
 45412   0184EA  C5F7  F505         	movff	SDCard_write512@spi+1,SPI_SD_send@ctx_+1
 45413   0184EE  0EF8               	movlw	low SDCard_write512@response
 45414   0184F0  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 45415   0184F2  0E05               	movlw	high SDCard_write512@response
 45416   0184F4  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 45417   0184F6  0E00               	movlw	0
 45418   0184F8  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 45419   0184FA  0E01               	movlw	1
 45420   0184FC  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 45421   0184FE  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 45422   018502                     
 45423                           ;../src/boards/../../drivers/SDCard.c: 280:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 45424   018502  0E0B               	movlw	11
 45425   018504  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 45426   018506  0EB8               	movlw	184
 45427   018508  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 45428   01850A  0EFF               	movlw	255
 45429   01850C  ECDC  F0FD         	call	___SDCard_wait_response
 45430   018510  0105               	movlb	5	; () banked
 45431   018512  6FF8               	movwf	SDCard_write512@response& (0+255),b
 45432   018514                     
 45433                           ; BSR set to: 5
 45434                           ;../src/boards/../../drivers/SDCard.c: 281:     if (response == 0xff) {
 45435   018514  29F8               	incf	SDCard_write512@response& (0+255),w,b
 45436   018516  A4D8               	btfss	status,2,c
 45437   018518  EF90  F0C2         	goto	u27721
 45438   01851C  EF92  F0C2         	goto	u27720
 45439   018520                     u27721:
 45440   018520  EF98  F0C2         	goto	l20769
 45441   018524                     u27720:
 45442   018524                     l20767:
 45443                           
 45444                           ; BSR set to: 5
 45445                           ;../src/boards/../../drivers/SDCard.c: 283:         result = 1;
 45446   018524  0E00               	movlw	0
 45447   018526  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 45448   018528  0E01               	movlw	1
 45449   01852A  6FF2               	movwf	SDCard_write512@result& (0+255),b
 45450                           
 45451                           ;../src/boards/../../drivers/SDCard.c: 284:         goto done;
 45452   01852C  EFE4  F0C2         	goto	l20795
 45453   018530                     l20769:
 45454                           
 45455                           ; BSR set to: 5
 45456                           ;../src/boards/../../drivers/SDCard.c: 286:     if ((response & 0x1f) != 0x05) {
 45457   018530  51F8               	movf	SDCard_write512@response& (0+255),w,b
 45458   018532  0B1F               	andlw	31
 45459   018534  0A05               	xorlw	5
 45460   018536  B4D8               	btfsc	status,2,c
 45461   018538  EFA0  F0C2         	goto	u27731
 45462   01853C  EFA2  F0C2         	goto	u27730
 45463   018540                     u27731:
 45464   018540  EFCD  F0C2         	goto	l20785
 45465   018544                     u27730:
 45466   018544                     
 45467                           ; BSR set to: 5
 45468                           ;../src/boards/../../drivers/SDCard.c: 288:         if ((response & 0x1f) == 0x0b) {
 45469   018544  51F8               	movf	SDCard_write512@response& (0+255),w,b
 45470   018546  0B1F               	andlw	31
 45471   018548  0A0B               	xorlw	11
 45472   01854A  A4D8               	btfss	status,2,c
 45473   01854C  EFAA  F0C2         	goto	u27741
 45474   018550  EFAC  F0C2         	goto	u27740
 45475   018554                     u27741:
 45476   018554  EF19  F0C2         	goto	l20743
 45477   018558                     u27740:
 45478   018558                     
 45479                           ; BSR set to: 5
 45480                           ;../src/boards/../../drivers/SDCard.c: 290:             if (--retry < 1) {
 45481   018558  07F0               	decf	SDCard_write512@retry& (0+255),f,b
 45482   01855A  A0D8               	btfss	status,0,c
 45483   01855C  07F1               	decf	(SDCard_write512@retry+1)& (0+255),f,b
 45484   01855E  BFF1               	btfsc	(SDCard_write512@retry+1)& (0+255),7,b
 45485   018560  EFBC  F0C2         	goto	u27750
 45486   018564  51F1               	movf	(SDCard_write512@retry+1)& (0+255),w,b
 45487   018566  E106               	bnz	u27751
 45488   018568  05F0               	decf	SDCard_write512@retry& (0+255),w,b
 45489   01856A  B0D8               	btfsc	status,0,c
 45490   01856C  EFBA  F0C2         	goto	u27751
 45491   018570  EFBC  F0C2         	goto	u27750
 45492   018574                     u27751:
 45493   018574  EFC2  F0C2         	goto	l20781
 45494   018578                     u27750:
 45495   018578                     
 45496                           ; BSR set to: 5
 45497                           ;../src/boards/../../drivers/SDCard.c: 291:                 result = 4;
 45498   018578  0E00               	movlw	0
 45499   01857A  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 45500   01857C  0E04               	movlw	4
 45501   01857E  6FF2               	movwf	SDCard_write512@result& (0+255),b
 45502                           
 45503                           ;../src/boards/../../drivers/SDCard.c: 292:                 goto done;
 45504   018580  EFE4  F0C2         	goto	l20795
 45505   018584                     l20781:
 45506                           
 45507                           ; BSR set to: 5
 45508                           ;../src/boards/../../drivers/SDCard.c: 294:             __SDCard_wait_response(0xff, 300
      +                          00);
 45509   018584  0E75               	movlw	117
 45510   018586  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 45511   018588  0E30               	movlw	48
 45512   01858A  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 45513   01858C  0EFF               	movlw	255
 45514   01858E  ECDC  F0FD         	call	___SDCard_wait_response
 45515                           
 45516                           ;../src/boards/../../drivers/SDCard.c: 295:             SDCard_end_transaction();
 45517   018592  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 45518                           
 45519                           ;../src/boards/../../drivers/SDCard.c: 296:             goto retry;
 45520   018596  EFF2  F0C1         	goto	l20735
 45521   01859A                     l20785:
 45522                           
 45523                           ; BSR set to: 5
 45524                           ;../src/boards/../../drivers/SDCard.c: 302:     response = __SDCard_wait_response(0x00, 
      +                          30000);
 45525   01859A  0E75               	movlw	117
 45526   01859C  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 45527   01859E  0E30               	movlw	48
 45528   0185A0  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 45529   0185A2  0E00               	movlw	0
 45530   0185A4  ECDC  F0FD         	call	___SDCard_wait_response
 45531   0185A8  0105               	movlb	5	; () banked
 45532   0185AA  6FF8               	movwf	SDCard_write512@response& (0+255),b
 45533   0185AC                     
 45534                           ; BSR set to: 5
 45535                           ;../src/boards/../../drivers/SDCard.c: 303:     if (response == 0x00) {
 45536   0185AC  51F8               	movf	SDCard_write512@response& (0+255),w,b
 45537   0185AE  A4D8               	btfss	status,2,c
 45538   0185B0  EFDC  F0C2         	goto	u27761
 45539   0185B4  EFDE  F0C2         	goto	u27760
 45540   0185B8                     u27761:
 45541   0185B8  EFE0  F0C2         	goto	l20793
 45542   0185BC                     u27760:
 45543   0185BC  EF92  F0C2         	goto	l20767
 45544   0185C0                     l20793:
 45545                           
 45546                           ; BSR set to: 5
 45547                           ;../src/boards/../../drivers/SDCard.c: 309:     result = 0;
 45548   0185C0  0E00               	movlw	0
 45549   0185C2  6FF3               	movwf	(SDCard_write512@result+1)& (0+255),b
 45550   0185C4  0E00               	movlw	0
 45551   0185C6  6FF2               	movwf	SDCard_write512@result& (0+255),b
 45552   0185C8                     l20795:
 45553                           
 45554                           ; BSR set to: 5
 45555                           ;../src/boards/../../drivers/SDCard.c: 312:     SDCard_end_transaction();
 45556   0185C8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 45557   0185CC                     
 45558                           ;../src/boards/../../drivers/SDCard.c: 313:     return result;
 45559   0185CC  C5F2  F5DE         	movff	SDCard_write512@result,?_SDCard_write512
 45560   0185D0  C5F3  F5DF         	movff	SDCard_write512@result+1,?_SDCard_write512+1
 45561   0185D4  0012               	return		;funcret
 45562   0185D6                     __end_of_SDCard_write512:
 45563                           	callstack 0
 45564                           
 45565 ;; *************** function _disk_read *****************
 45566 ;; Defined at:
 45567 ;;		line 111 in file "../drivers/diskio.c"
 45568 ;; Parameters:    Size  Location     Type
 45569 ;;  pdrv            1    wreg     unsigned char 
 45570 ;;  buff            2    0[BANK6 ] PTR unsigned char 
 45571 ;;		 -> cin_file(512), in_fl(546), fs(564), rom_fl(546), 
 45572 ;;		 -> tmp_buf(512), disk_buf(128), pb$fp(2), f_gets@s(4), 
 45573 ;;		 -> NULL(0), 
 45574 ;;  sector          4    2[BANK6 ] unsigned long 
 45575 ;;  count           2    6[BANK6 ] unsigned int 
 45576 ;; Auto vars:     Size  Location     Type
 45577 ;;  pdrv            1  155[BANK5 ] unsigned char 
 45578 ;;  i               2  156[BANK5 ] int 
 45579 ;; Return value:  Size  Location     Type
 45580 ;;                  1    wreg      enum E23355
 45581 ;; Registers used:
 45582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45583 ;; Tracked objects:
 45584 ;;		On entry : 0/0
 45585 ;;		On exit  : 0/0
 45586 ;;		Unchanged: 0/0
 45587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45588 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45591 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45592 ;;Total ram usage:       11 bytes
 45593 ;; Hardware stack levels used: 1
 45594 ;; Hardware stack levels required when called: 11
 45595 ;; This function calls:
 45596 ;;		_SDCard_read512
 45597 ;;		_printf
 45598 ;;		_util_addrdump
 45599 ;; This function is called by:
 45600 ;;		_move_window
 45601 ;;		_f_open
 45602 ;;		_f_read
 45603 ;;		_f_write
 45604 ;;		_f_lseek
 45605 ;; This function uses a non-reentrant model
 45606 ;;
 45607                           
 45608                           	psect	text119
 45609   01E7AA                     __ptext119:
 45610                           	callstack 0
 45611   01E7AA                     _disk_read:
 45612                           	callstack 106
 45613   01E7AA                     
 45614                           ;../drivers/diskio.c: 115:     for (int i = 0; i < count; i++) {
 45615   01E7AA  0E00               	movlw	0
 45616   01E7AC  0105               	movlb	5	; () banked
 45617   01E7AE  6FFD               	movwf	(disk_read@i+1)& (0+255),b
 45618   01E7B0  0E00               	movlw	0
 45619   01E7B2  6FFC               	movwf	disk_read@i& (0+255),b
 45620   01E7B4  EF1B  F0F4         	goto	l20935
 45621   01E7B8                     l20917:
 45622                           
 45623                           ; BSR set to: 5
 45624                           ;../drivers/diskio.c: 116:         if (SDCard_read512(start_lba + sector, 0, buff, 512) 
      +                          != 0) {
 45625   01E7B8  0106               	movlb	6	; () banked
 45626   01E7BA  5102               	movf	disk_read@sector& (0+255),w,b
 45627   01E7BC  0107               	movlb	7	; () banked
 45628   01E7BE  25EE               	addwf	_start_lba& (0+255),w,b
 45629   01E7C0  0105               	movlb	5	; () banked
 45630   01E7C2  6FDE               	movwf	SDCard_read512@addr& (0+255),b
 45631   01E7C4  0106               	movlb	6	; () banked
 45632   01E7C6  5103               	movf	(disk_read@sector+1)& (0+255),w,b
 45633   01E7C8  0107               	movlb	7	; () banked
 45634   01E7CA  21EF               	addwfc	(_start_lba+1)& (0+255),w,b
 45635   01E7CC  0105               	movlb	5	; () banked
 45636   01E7CE  6FDF               	movwf	(SDCard_read512@addr+1)& (0+255),b
 45637   01E7D0  0106               	movlb	6	; () banked
 45638   01E7D2  5104               	movf	(disk_read@sector+2)& (0+255),w,b
 45639   01E7D4  0107               	movlb	7	; () banked
 45640   01E7D6  21F0               	addwfc	(_start_lba+2)& (0+255),w,b
 45641   01E7D8  0105               	movlb	5	; () banked
 45642   01E7DA  6FE0               	movwf	(SDCard_read512@addr+2)& (0+255),b
 45643   01E7DC  0106               	movlb	6	; () banked
 45644   01E7DE  5105               	movf	(disk_read@sector+3)& (0+255),w,b
 45645   01E7E0  0107               	movlb	7	; () banked
 45646   01E7E2  21F1               	addwfc	(_start_lba+3)& (0+255),w,b
 45647   01E7E4  0105               	movlb	5	; () banked
 45648   01E7E6  6FE1               	movwf	(SDCard_read512@addr+3)& (0+255),b
 45649   01E7E8  0E00               	movlw	0
 45650   01E7EA  6FE3               	movwf	(SDCard_read512@offs+1)& (0+255),b
 45651   01E7EC  0E00               	movlw	0
 45652   01E7EE  6FE2               	movwf	SDCard_read512@offs& (0+255),b
 45653   01E7F0  C600  F5E4         	movff	disk_read@buff,SDCard_read512@buf
 45654   01E7F4  C601  F5E5         	movff	disk_read@buff+1,SDCard_read512@buf+1
 45655   01E7F8  0E02               	movlw	2
 45656   01E7FA  6FE7               	movwf	(SDCard_read512@count+1)& (0+255),b
 45657   01E7FC  0E00               	movlw	0
 45658   01E7FE  6FE6               	movwf	SDCard_read512@count& (0+255),b
 45659   01E800  EC2B  F0C7         	call	_SDCard_read512	;wreg free
 45660   01E804  0105               	movlb	5	; () banked
 45661   01E806  51DE               	movf	?_SDCard_read512& (0+255),w,b
 45662   01E808  11DF               	iorwf	(?_SDCard_read512+1)& (0+255),w,b
 45663   01E80A  B4D8               	btfsc	status,2,c
 45664   01E80C  EF0A  F0F4         	goto	u27911
 45665   01E810  EF0C  F0F4         	goto	u27910
 45666   01E814                     u27911:
 45667   01E814  EF0F  F0F4         	goto	l20929
 45668   01E818                     u27910:
 45669   01E818                     
 45670                           ; BSR set to: 5
 45671                           ;../drivers/diskio.c: 118:             return RES_ERROR;
 45672   01E818  0E01               	movlw	1
 45673   01E81A  EF2B  F0F4         	goto	l72
 45674   01E81E                     l20929:
 45675                           
 45676                           ; BSR set to: 5
 45677                           ;../drivers/diskio.c: 123:         sector++;
 45678   01E81E  0E01               	movlw	1
 45679   01E820  0106               	movlb	6	; () banked
 45680   01E822  2702               	addwf	disk_read@sector& (0+255),f,b
 45681   01E824  0E00               	movlw	0
 45682   01E826  2303               	addwfc	(disk_read@sector+1)& (0+255),f,b
 45683   01E828  2304               	addwfc	(disk_read@sector+2)& (0+255),f,b
 45684   01E82A  2305               	addwfc	(disk_read@sector+3)& (0+255),f,b
 45685   01E82C                     
 45686                           ; BSR set to: 6
 45687                           ;../drivers/diskio.c: 124:         buff += 512;
 45688   01E82C  0E02               	movlw	2
 45689   01E82E  2701               	addwf	(disk_read@buff+1)& (0+255),f,b
 45690   01E830                     
 45691                           ; BSR set to: 6
 45692                           ;../drivers/diskio.c: 125:     }
 45693   01E830  0105               	movlb	5	; () banked
 45694   01E832  4BFC               	infsnz	disk_read@i& (0+255),f,b
 45695   01E834  2BFD               	incf	(disk_read@i+1)& (0+255),f,b
 45696   01E836                     l20935:
 45697                           
 45698                           ; BSR set to: 5
 45699   01E836  0106               	movlb	6	; () banked
 45700   01E838  5106               	movf	disk_read@count& (0+255),w,b
 45701   01E83A  0105               	movlb	5	; () banked
 45702   01E83C  5DFC               	subwf	disk_read@i& (0+255),w,b
 45703   01E83E  0106               	movlb	6	; () banked
 45704   01E840  5107               	movf	(disk_read@count+1)& (0+255),w,b
 45705   01E842  0105               	movlb	5	; () banked
 45706   01E844  59FD               	subwfb	(disk_read@i+1)& (0+255),w,b
 45707   01E846  A0D8               	btfss	status,0,c
 45708   01E848  EF28  F0F4         	goto	u27921
 45709   01E84C  EF2A  F0F4         	goto	u27920
 45710   01E850                     u27921:
 45711   01E850  EFDC  F0F3         	goto	l20917
 45712   01E854                     u27920:
 45713   01E854                     
 45714                           ; BSR set to: 5
 45715                           ;../drivers/diskio.c: 127:     return RES_OK;
 45716   01E854  0E00               	movlw	0
 45717   01E856                     l72:
 45718                           
 45719                           ; BSR set to: 5
 45720   01E856  0012               	return		;funcret
 45721   01E858                     __end_of_disk_read:
 45722                           	callstack 0
 45723                           
 45724 ;; *************** function _SDCard_read512 *****************
 45725 ;; Defined at:
 45726 ;;		line 169 in file "../src/boards/../../drivers/SDCard.c"
 45727 ;; Parameters:    Size  Location     Type
 45728 ;;  addr            4  126[BANK5 ] unsigned long 
 45729 ;;  offs            2  130[BANK5 ] unsigned int 
 45730 ;;  buf             2  132[BANK5 ] PTR void 
 45731 ;;		 -> cin_file(512), in_fl(546), fs(564), rom_fl(546), 
 45732 ;;		 -> tmp_buf(512), disk_buf(128), pb$fp(2), f_gets@s(4), 
 45733 ;;		 -> NULL(0), disk_initialize@buf(128), 
 45734 ;;  count           2  134[BANK5 ] unsigned int 
 45735 ;; Auto vars:     Size  Location     Type
 45736 ;;  i               2  142[BANK5 ] unsigned int 
 45737 ;;  i               2  140[BANK5 ] int 
 45738 ;;  crc             2  152[BANK5 ] unsigned short 
 45739 ;;  spi             2  150[BANK5 ] PTR struct SPI
 45740 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 45741 ;;  result          2  148[BANK5 ] int 
 45742 ;;  resp_crc        2  146[BANK5 ] unsigned short 
 45743 ;;  retry           2  144[BANK5 ] int 
 45744 ;;  response        1  154[BANK5 ] unsigned char 
 45745 ;; Return value:  Size  Location     Type
 45746 ;;                  2  126[BANK5 ] int 
 45747 ;; Registers used:
 45748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45749 ;; Tracked objects:
 45750 ;;		On entry : 0/0
 45751 ;;		On exit  : 0/0
 45752 ;;		Unchanged: 0/0
 45753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45754 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45755 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45757 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45758 ;;Total ram usage:       29 bytes
 45759 ;; Hardware stack levels used: 1
 45760 ;; Hardware stack levels required when called: 10
 45761 ;; This function calls:
 45762 ;;		_SDCard_end_transaction
 45763 ;;		_SPI_SD_receive
 45764 ;;		_SPI_SD_receive_byte
 45765 ;;		___SDCard_command_r1
 45766 ;;		___SDCard_crc16
 45767 ;;		___SDCard_wait_response
 45768 ;;		_printf
 45769 ;;		_util_addrdump
 45770 ;; This function is called by:
 45771 ;;		_disk_initialize
 45772 ;;		_disk_read
 45773 ;; This function uses a non-reentrant model
 45774 ;;
 45775                           
 45776                           	psect	text120
 45777   018E56                     __ptext120:
 45778                           	callstack 0
 45779   018E56                     _SDCard_read512:
 45780                           	callstack 106
 45781   018E56                     
 45782                           ;../src/boards/../../drivers/SDCard.c: 169: int SDCard_read512(uint32_t addr, unsigned i
      +                          nt offs, void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 170: {;../
      +                          src/boards/../../drivers/SDCard.c: 171:     struct SPI *spi = ctx_.spi;
 45783   018E56  C7A8  F5F6         	movff	_ctx_,SDCard_read512@spi
 45784   018E5A  C7A9  F5F7         	movff	_ctx_+1,SDCard_read512@spi+1
 45785   018E5E                     
 45786                           ;../src/boards/../../drivers/SDCard.c: 172:     int result;;../src/boards/../../drivers/
      +                          SDCard.c: 173:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 174:     uint
      +                          16_t crc, resp_crc;;../src/boards/../../drivers/SDCard.c: 175:     int retry = 5;
 45787   018E5E  0E00               	movlw	0
 45788   018E60  0105               	movlb	5	; () banked
 45789   018E62  6FF1               	movwf	(SDCard_read512@retry+1)& (0+255),b
 45790   018E64  0E05               	movlw	5
 45791   018E66  6FF0               	movwf	SDCard_read512@retry& (0+255),b
 45792   018E68                     l20807:
 45793                           
 45794                           ;../src/boards/../../drivers/SDCard.c: 180:     result = __SDCard_command_r1(17, addr, &
      +                          response);
 45795   018E68  C5DE  F51B         	movff	SDCard_read512@addr,___SDCard_command_r1@argument
 45796   018E6C  C5DF  F51C         	movff	SDCard_read512@addr+1,___SDCard_command_r1@argument+1
 45797   018E70  C5E0  F51D         	movff	SDCard_read512@addr+2,___SDCard_command_r1@argument+2
 45798   018E74  C5E1  F51E         	movff	SDCard_read512@addr+3,___SDCard_command_r1@argument+3
 45799   018E78  0EFA               	movlw	low SDCard_read512@response
 45800   018E7A  6E1F               	movwf	___SDCard_command_r1@r1^(0+1280),c
 45801   018E7C  0E05               	movlw	high SDCard_read512@response
 45802   018E7E  6E20               	movwf	(___SDCard_command_r1@r1+1)^(0+1280),c
 45803   018E80  0E11               	movlw	17
 45804   018E82  EC23  F0F3         	call	___SDCard_command_r1
 45805   018E86  C51B  F5F4         	movff	?___SDCard_command_r1,SDCard_read512@result
 45806   018E8A  C51C  F5F5         	movff	?___SDCard_command_r1+1,SDCard_read512@result+1
 45807   018E8E                     
 45808                           ;../src/boards/../../drivers/SDCard.c: 181:     if (result != 0) {
 45809   018E8E  0105               	movlb	5	; () banked
 45810   018E90  51F4               	movf	SDCard_read512@result& (0+255),w,b
 45811   018E92  11F5               	iorwf	(SDCard_read512@result+1)& (0+255),w,b
 45812   018E94  B4D8               	btfsc	status,2,c
 45813   018E96  EF4F  F0C7         	goto	u27771
 45814   018E9A  EF51  F0C7         	goto	u27770
 45815   018E9E                     u27771:
 45816   018E9E  EF53  F0C7         	goto	l20813
 45817   018EA2                     u27770:
 45818   018EA2  EF75  F0C8         	goto	l20879
 45819   018EA6                     l20813:
 45820                           
 45821                           ; BSR set to: 5
 45822                           ;../src/boards/../../drivers/SDCard.c: 184:     if (response != 0) {
 45823   018EA6  51FA               	movf	SDCard_read512@response& (0+255),w,b
 45824   018EA8  B4D8               	btfsc	status,2,c
 45825   018EAA  EF59  F0C7         	goto	u27781
 45826   018EAE  EF5B  F0C7         	goto	u27780
 45827   018EB2                     u27781:
 45828   018EB2  EF61  F0C7         	goto	l20817
 45829   018EB6                     u27780:
 45830   018EB6                     l20815:
 45831                           
 45832                           ; BSR set to: 5
 45833                           ;../src/boards/../../drivers/SDCard.c: 185:         result = 3;
 45834   018EB6  0E00               	movlw	0
 45835   018EB8  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 45836   018EBA  0E03               	movlw	3
 45837   018EBC  6FF4               	movwf	SDCard_read512@result& (0+255),b
 45838                           
 45839                           ;../src/boards/../../drivers/SDCard.c: 186:         goto done;
 45840   018EBE  EF75  F0C8         	goto	l20879
 45841   018EC2                     l20817:
 45842                           
 45843                           ; BSR set to: 5
 45844                           ;../src/boards/../../drivers/SDCard.c: 189:     response = __SDCard_wait_response(0xff, 
      +                          3000);
 45845   018EC2  0E0B               	movlw	11
 45846   018EC4  6E16               	movwf	(___SDCard_wait_response@attempts+1)^(0+1280),c
 45847   018EC6  0EB8               	movlw	184
 45848   018EC8  6E15               	movwf	___SDCard_wait_response@attempts^(0+1280),c
 45849   018ECA  0EFF               	movlw	255
 45850   018ECC  ECDC  F0FD         	call	___SDCard_wait_response
 45851   018ED0  0105               	movlb	5	; () banked
 45852   018ED2  6FFA               	movwf	SDCard_read512@response& (0+255),b
 45853   018ED4                     
 45854                           ; BSR set to: 5
 45855                           ;../src/boards/../../drivers/SDCard.c: 190:     if (response == 0xff) {
 45856   018ED4  29FA               	incf	SDCard_read512@response& (0+255),w,b
 45857   018ED6  A4D8               	btfss	status,2,c
 45858   018ED8  EF70  F0C7         	goto	u27791
 45859   018EDC  EF72  F0C7         	goto	u27790
 45860   018EE0                     u27791:
 45861   018EE0  EF78  F0C7         	goto	l20823
 45862   018EE4                     u27790:
 45863   018EE4                     
 45864                           ; BSR set to: 5
 45865                           ;../src/boards/../../drivers/SDCard.c: 191:         result = 1;
 45866   018EE4  0E00               	movlw	0
 45867   018EE6  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 45868   018EE8  0E01               	movlw	1
 45869   018EEA  6FF4               	movwf	SDCard_read512@result& (0+255),b
 45870                           
 45871                           ;../src/boards/../../drivers/SDCard.c: 192:         goto done;
 45872   018EEC  EF75  F0C8         	goto	l20879
 45873   018EF0                     l20823:
 45874                           
 45875                           ; BSR set to: 5
 45876                           ;../src/boards/../../drivers/SDCard.c: 194:     if (response != 0xfe) {
 45877   018EF0  0EFE               	movlw	254
 45878   018EF2  19FA               	xorwf	SDCard_read512@response& (0+255),w,b
 45879   018EF4  B4D8               	btfsc	status,2,c
 45880   018EF6  EF7F  F0C7         	goto	u27801
 45881   018EFA  EF81  F0C7         	goto	u27800
 45882   018EFE                     u27801:
 45883   018EFE  EF83  F0C7         	goto	l20827
 45884   018F02                     u27800:
 45885   018F02  EF5B  F0C7         	goto	l20815
 45886   018F06                     l20827:
 45887                           
 45888                           ; BSR set to: 5
 45889                           ;../src/boards/../../drivers/SDCard.c: 199:     crc = 0;
 45890   018F06  0E00               	movlw	0
 45891   018F08  6FF9               	movwf	(SDCard_read512@crc+1)& (0+255),b
 45892   018F0A  0E00               	movlw	0
 45893   018F0C  6FF8               	movwf	SDCard_read512@crc& (0+255),b
 45894                           
 45895                           ;../src/boards/../../drivers/SDCard.c: 200:     for (int i = 0; i < offs; i++) {
 45896   018F0E  0E00               	movlw	0
 45897   018F10  6FED               	movwf	(SDCard_read512@i+1)& (0+255),b
 45898   018F12  0E00               	movlw	0
 45899   018F14  6FEC               	movwf	SDCard_read512@i& (0+255),b
 45900   018F16  EFB2  F0C7         	goto	l20837
 45901   018F1A                     l20829:
 45902                           
 45903                           ; BSR set to: 5
 45904                           ;../src/boards/../../drivers/SDCard.c: 201:         response = SPI_SD_receive_byte(spi);
 45905   018F1A  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 45906   018F1E  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 45907   018F22  EC87  F000         	call	_SPI_SD_receive_byte	;wreg free
 45908   018F26  0105               	movlb	5	; () banked
 45909   018F28  6FFA               	movwf	SDCard_read512@response& (0+255),b
 45910   018F2A                     
 45911                           ; BSR set to: 5
 45912                           ;../src/boards/../../drivers/SDCard.c: 202:         if (ctx_.calc_read_crc)
 45913   018F2A  0107               	movlb	7	; () banked
 45914   018F2C  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 45915   018F2E  EF9B  F0C7         	goto	u27811
 45916   018F32  EF9D  F0C7         	goto	u27810
 45917   018F36                     u27811:
 45918   018F36  EFAF  F0C7         	goto	l20835
 45919   018F3A                     u27810:
 45920   018F3A                     
 45921                           ; BSR set to: 7
 45922                           ;../src/boards/../../drivers/SDCard.c: 203:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 45923   018F3A  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 45924   018F3E  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 45925   018F42  0EFA               	movlw	low SDCard_read512@response
 45926   018F44  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 45927   018F46  0E05               	movlw	high SDCard_read512@response
 45928   018F48  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 45929   018F4A  0E00               	movlw	0
 45930   018F4C  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 45931   018F4E  0E01               	movlw	1
 45932   018F50  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 45933   018F52  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 45934   018F56  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 45935   018F5A  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 45936   018F5E                     l20835:
 45937                           
 45938                           ;../src/boards/../../drivers/SDCard.c: 204:     }
 45939   018F5E  0105               	movlb	5	; () banked
 45940   018F60  4BEC               	infsnz	SDCard_read512@i& (0+255),f,b
 45941   018F62  2BED               	incf	(SDCard_read512@i+1)& (0+255),f,b
 45942   018F64                     l20837:
 45943                           
 45944                           ; BSR set to: 5
 45945   018F64  51E2               	movf	SDCard_read512@offs& (0+255),w,b
 45946   018F66  5DEC               	subwf	SDCard_read512@i& (0+255),w,b
 45947   018F68  51E3               	movf	(SDCard_read512@offs+1)& (0+255),w,b
 45948   018F6A  59ED               	subwfb	(SDCard_read512@i+1)& (0+255),w,b
 45949   018F6C  A0D8               	btfss	status,0,c
 45950   018F6E  EFBB  F0C7         	goto	u27821
 45951   018F72  EFBD  F0C7         	goto	u27820
 45952   018F76                     u27821:
 45953   018F76  EF8D  F0C7         	goto	l20829
 45954   018F7A                     u27820:
 45955   018F7A                     
 45956                           ; BSR set to: 5
 45957                           ;../src/boards/../../drivers/SDCard.c: 205:     SPI_SD_receive(spi, buf, count);
 45958   018F7A  C5F6  F504         	movff	SDCard_read512@spi,SPI_SD_receive@ctx_
 45959   018F7E  C5F7  F505         	movff	SDCard_read512@spi+1,SPI_SD_receive@ctx_+1
 45960   018F82  C5E4  F506         	movff	SDCard_read512@buf,SPI_SD_receive@buf
 45961   018F86  C5E5  F507         	movff	SDCard_read512@buf+1,SPI_SD_receive@buf+1
 45962   018F8A  C5E6  F508         	movff	SDCard_read512@count,SPI_SD_receive@count
 45963   018F8E  C5E7  F509         	movff	SDCard_read512@count+1,SPI_SD_receive@count+1
 45964   018F92  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 45965   018F96                     
 45966                           ;../src/boards/../../drivers/SDCard.c: 206:     if (ctx_.calc_read_crc)
 45967   018F96  0107               	movlb	7	; () banked
 45968   018F98  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 45969   018F9A  EFD1  F0C7         	goto	u27831
 45970   018F9E  EFD3  F0C7         	goto	u27830
 45971   018FA2                     u27831:
 45972   018FA2  EFE5  F0C7         	goto	l20845
 45973   018FA6                     u27830:
 45974   018FA6                     
 45975                           ; BSR set to: 7
 45976                           ;../src/boards/../../drivers/SDCard.c: 207:         crc = __SDCard_crc16(crc, buf, count
      +                          );
 45977   018FA6  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 45978   018FAA  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 45979   018FAE  C5E4  F506         	movff	SDCard_read512@buf,___SDCard_crc16@buf
 45980   018FB2  C5E5  F507         	movff	SDCard_read512@buf+1,___SDCard_crc16@buf+1
 45981   018FB6  C5E6  F508         	movff	SDCard_read512@count,___SDCard_crc16@count
 45982   018FBA  C5E7  F509         	movff	SDCard_read512@count+1,___SDCard_crc16@count+1
 45983   018FBE  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 45984   018FC2  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 45985   018FC6  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 45986   018FCA                     l20845:
 45987                           
 45988                           ;../src/boards/../../drivers/SDCard.c: 208:     for (unsigned int i = 0; i < 512 - offs 
      +                          - count; i++) {
 45989   018FCA  0E00               	movlw	0
 45990   018FCC  0105               	movlb	5	; () banked
 45991   018FCE  6FEF               	movwf	(SDCard_read512@i_4067+1)& (0+255),b
 45992   018FD0  0E00               	movlw	0
 45993   018FD2  6FEE               	movwf	SDCard_read512@i_4067& (0+255),b
 45994   018FD4  EF11  F0C8         	goto	l20855
 45995   018FD8                     l20847:
 45996                           
 45997                           ; BSR set to: 5
 45998                           ;../src/boards/../../drivers/SDCard.c: 209:         response = SPI_SD_receive_byte(spi);
 45999   018FD8  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 46000   018FDC  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 46001   018FE0  EC87  F000         	call	_SPI_SD_receive_byte	;wreg free
 46002   018FE4  0105               	movlb	5	; () banked
 46003   018FE6  6FFA               	movwf	SDCard_read512@response& (0+255),b
 46004   018FE8                     
 46005                           ; BSR set to: 5
 46006                           ;../src/boards/../../drivers/SDCard.c: 210:         if (ctx_.calc_read_crc)
 46007   018FE8  0107               	movlb	7	; () banked
 46008   018FEA  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 46009   018FEC  EFFA  F0C7         	goto	u27841
 46010   018FF0  EFFC  F0C7         	goto	u27840
 46011   018FF4                     u27841:
 46012   018FF4  EF0E  F0C8         	goto	l20853
 46013   018FF8                     u27840:
 46014   018FF8                     
 46015                           ; BSR set to: 7
 46016                           ;../src/boards/../../drivers/SDCard.c: 211:             crc = __SDCard_crc16(crc, &respo
      +                          nse, 1);
 46017   018FF8  C5F8  F504         	movff	SDCard_read512@crc,___SDCard_crc16@crc
 46018   018FFC  C5F9  F505         	movff	SDCard_read512@crc+1,___SDCard_crc16@crc+1
 46019   019000  0EFA               	movlw	low SDCard_read512@response
 46020   019002  6E06               	movwf	___SDCard_crc16@buf^(0+1280),c
 46021   019004  0E05               	movlw	high SDCard_read512@response
 46022   019006  6E07               	movwf	(___SDCard_crc16@buf+1)^(0+1280),c
 46023   019008  0E00               	movlw	0
 46024   01900A  6E09               	movwf	(___SDCard_crc16@count+1)^(0+1280),c
 46025   01900C  0E01               	movlw	1
 46026   01900E  6E08               	movwf	___SDCard_crc16@count^(0+1280),c
 46027   019010  ECAA  F0F1         	call	___SDCard_crc16	;wreg free
 46028   019014  C504  F5F8         	movff	?___SDCard_crc16,SDCard_read512@crc
 46029   019018  C505  F5F9         	movff	?___SDCard_crc16+1,SDCard_read512@crc+1
 46030   01901C                     l20853:
 46031                           
 46032                           ;../src/boards/../../drivers/SDCard.c: 212:     }
 46033   01901C  0105               	movlb	5	; () banked
 46034   01901E  4BEE               	infsnz	SDCard_read512@i_4067& (0+255),f,b
 46035   019020  2BEF               	incf	(SDCard_read512@i_4067+1)& (0+255),f,b
 46036   019022                     l20855:
 46037                           
 46038                           ; BSR set to: 5
 46039   019022  C5E2  F5E8         	movff	SDCard_read512@offs,??_SDCard_read512
 46040   019026  C5E3  F5E9         	movff	SDCard_read512@offs+1,??_SDCard_read512+1
 46041   01902A  1FE8               	comf	??_SDCard_read512& (0+255),f,b
 46042   01902C  1FE9               	comf	(??_SDCard_read512+1)& (0+255),f,b
 46043   01902E  4BE8               	infsnz	??_SDCard_read512& (0+255),f,b
 46044   019030  2BE9               	incf	(??_SDCard_read512+1)& (0+255),f,b
 46045   019032  51E6               	movf	SDCard_read512@count& (0+255),w,b
 46046   019034  5FE8               	subwf	??_SDCard_read512& (0+255),f,b
 46047   019036  51E7               	movf	(SDCard_read512@count+1)& (0+255),w,b
 46048   019038  5BE9               	subwfb	(??_SDCard_read512+1)& (0+255),f,b
 46049   01903A  0E00               	movlw	0
 46050   01903C  25E8               	addwf	??_SDCard_read512& (0+255),w,b
 46051   01903E  6FEA               	movwf	(??_SDCard_read512+2)& (0+255),b
 46052   019040  0E02               	movlw	2
 46053   019042  21E9               	addwfc	(??_SDCard_read512+1)& (0+255),w,b
 46054   019044  6FEB               	movwf	(??_SDCard_read512+3)& (0+255),b
 46055   019046  51EA               	movf	(??_SDCard_read512+2)& (0+255),w,b
 46056   019048  5DEE               	subwf	SDCard_read512@i_4067& (0+255),w,b
 46057   01904A  51EB               	movf	(??_SDCard_read512+3)& (0+255),w,b
 46058   01904C  59EF               	subwfb	(SDCard_read512@i_4067+1)& (0+255),w,b
 46059   01904E  A0D8               	btfss	status,0,c
 46060   019050  EF2C  F0C8         	goto	u27851
 46061   019054  EF2E  F0C8         	goto	u27850
 46062   019058                     u27851:
 46063   019058  EFEC  F0C7         	goto	l20847
 46064   01905C                     u27850:
 46065   01905C                     
 46066                           ; BSR set to: 5
 46067                           ;../src/boards/../../drivers/SDCard.c: 217:     resp_crc = (uint16_t)SPI_SD_receive_byte
      +                          (spi) << 8;
 46068   01905C  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 46069   019060  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 46070   019064  EC87  F000         	call	_SPI_SD_receive_byte	;wreg free
 46071   019068  0105               	movlb	5	; () banked
 46072   01906A  6FF3               	movwf	(SDCard_read512@resp_crc+1)& (0+255),b
 46073   01906C  6BF2               	clrf	SDCard_read512@resp_crc& (0+255),b
 46074   01906E                     
 46075                           ; BSR set to: 5
 46076                           ;../src/boards/../../drivers/SDCard.c: 218:     resp_crc |= SPI_SD_receive_byte(spi);
 46077   01906E  C5F6  F512         	movff	SDCard_read512@spi,SPI_SD_receive_byte@ctx_
 46078   019072  C5F7  F513         	movff	SDCard_read512@spi+1,SPI_SD_receive_byte@ctx_+1
 46079   019076  EC87  F000         	call	_SPI_SD_receive_byte	;wreg free
 46080   01907A  0105               	movlb	5	; () banked
 46081   01907C  6FE8               	movwf	??_SDCard_read512& (0+255),b
 46082   01907E  51E8               	movf	??_SDCard_read512& (0+255),w,b
 46083   019080  13F2               	iorwf	SDCard_read512@resp_crc& (0+255),f,b
 46084   019082                     
 46085                           ; BSR set to: 5
 46086                           ;../src/boards/../../drivers/SDCard.c: 219:     if (ctx_.calc_read_crc && resp_crc != cr
      +                          c) {
 46087   019082  0107               	movlb	7	; () banked
 46088   019084  A1AC               	btfss	(_ctx_+4)& (0+255),0,b
 46089   019086  EF47  F0C8         	goto	u27861
 46090   01908A  EF49  F0C8         	goto	u27860
 46091   01908E                     u27861:
 46092   01908E  EF70  F0C8         	goto	l20877
 46093   019092                     u27860:
 46094   019092                     
 46095                           ; BSR set to: 7
 46096   019092  0105               	movlb	5	; () banked
 46097   019094  51F8               	movf	SDCard_read512@crc& (0+255),w,b
 46098   019096  19F2               	xorwf	SDCard_read512@resp_crc& (0+255),w,b
 46099   019098  E109               	bnz	u27870
 46100   01909A  51F9               	movf	(SDCard_read512@crc+1)& (0+255),w,b
 46101   01909C  19F3               	xorwf	(SDCard_read512@resp_crc+1)& (0+255),w,b
 46102   01909E  B4D8               	btfsc	status,2,c
 46103   0190A0  EF54  F0C8         	goto	u27871
 46104   0190A4  EF56  F0C8         	goto	u27870
 46105   0190A8                     u27871:
 46106   0190A8  EF70  F0C8         	goto	l20877
 46107   0190AC                     u27870:
 46108   0190AC                     
 46109                           ; BSR set to: 5
 46110                           ;../src/boards/../../drivers/SDCard.c: 222:         if (--retry < 1) {
 46111   0190AC  07F0               	decf	SDCard_read512@retry& (0+255),f,b
 46112   0190AE  A0D8               	btfss	status,0,c
 46113   0190B0  07F1               	decf	(SDCard_read512@retry+1)& (0+255),f,b
 46114   0190B2  BFF1               	btfsc	(SDCard_read512@retry+1)& (0+255),7,b
 46115   0190B4  EF66  F0C8         	goto	u27880
 46116   0190B8  51F1               	movf	(SDCard_read512@retry+1)& (0+255),w,b
 46117   0190BA  E106               	bnz	u27881
 46118   0190BC  05F0               	decf	SDCard_read512@retry& (0+255),w,b
 46119   0190BE  B0D8               	btfsc	status,0,c
 46120   0190C0  EF64  F0C8         	goto	u27881
 46121   0190C4  EF66  F0C8         	goto	u27880
 46122   0190C8                     u27881:
 46123   0190C8  EF6C  F0C8         	goto	l20875
 46124   0190CC                     u27880:
 46125   0190CC                     
 46126                           ; BSR set to: 5
 46127                           ;../src/boards/../../drivers/SDCard.c: 223:             result = 4;
 46128   0190CC  0E00               	movlw	0
 46129   0190CE  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 46130   0190D0  0E04               	movlw	4
 46131   0190D2  6FF4               	movwf	SDCard_read512@result& (0+255),b
 46132                           
 46133                           ;../src/boards/../../drivers/SDCard.c: 224:             goto done;
 46134   0190D4  EF75  F0C8         	goto	l20879
 46135   0190D8                     l20875:
 46136                           
 46137                           ; BSR set to: 5
 46138                           ;../src/boards/../../drivers/SDCard.c: 226:         SDCard_end_transaction();
 46139   0190D8  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 46140                           
 46141                           ;../src/boards/../../drivers/SDCard.c: 227:         goto retry;
 46142   0190DC  EF34  F0C7         	goto	l20807
 46143   0190E0                     l20877:
 46144                           
 46145                           ;../src/boards/../../drivers/SDCard.c: 230:     result = 0;
 46146   0190E0  0E00               	movlw	0
 46147   0190E2  0105               	movlb	5	; () banked
 46148   0190E4  6FF5               	movwf	(SDCard_read512@result+1)& (0+255),b
 46149   0190E6  0E00               	movlw	0
 46150   0190E8  6FF4               	movwf	SDCard_read512@result& (0+255),b
 46151   0190EA                     l20879:
 46152                           
 46153                           ; BSR set to: 5
 46154                           ;../src/boards/../../drivers/SDCard.c: 233:     SDCard_end_transaction();
 46155   0190EA  ECB1  F0FF         	call	_SDCard_end_transaction	;wreg free
 46156   0190EE                     
 46157                           ;../src/boards/../../drivers/SDCard.c: 234:     return result;
 46158   0190EE  C5F4  F5DE         	movff	SDCard_read512@result,?_SDCard_read512
 46159   0190F2  C5F5  F5DF         	movff	SDCard_read512@result+1,?_SDCard_read512+1
 46160   0190F6  0012               	return		;funcret
 46161   0190F8                     __end_of_SDCard_read512:
 46162                           	callstack 0
 46163                           
 46164 ;; *************** function _util_addrdump *****************
 46165 ;; Defined at:
 46166 ;;		line 57 in file "../drivers/utils.c"
 46167 ;; Parameters:    Size  Location     Type
 46168 ;;  header          2   93[BANK5 ] PTR const unsigned char 
 46169 ;;		 -> STR_195(5), STR_192(5), STR_133(5), STR_44(5), 
 46170 ;;		 -> STR_43(5), STR_16(6), STR_13(6), 
 46171 ;;  addr_offs       4   95[BANK5 ] unsigned long 
 46172 ;;  addr            2   99[BANK5 ] PTR const void 
 46173 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 46174 ;;		 -> cin_file(512), in_fl(546), fs(564), rom_fl(546), 
 46175 ;;		 -> tmp_buf(512), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 46176 ;;		 -> f_putc@pb(70), pb$fp(2), f_gets@s(4), NULL(0), 
 46177 ;;		 -> disk_initialize@buf(128), 
 46178 ;;  size            2  101[BANK5 ] unsigned int 
 46179 ;; Auto vars:     Size  Location     Type
 46180 ;;  i               2  124[BANK5 ] unsigned int 
 46181 ;;  chars          17  105[BANK5 ] unsigned char [17]
 46182 ;;  buf             2  122[BANK5 ] PTR const unsigned char 
 46183 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 46184 ;;		 -> cin_file(512), in_fl(546), fs(564), rom_fl(546), 
 46185 ;;		 -> tmp_buf(512), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 46186 ;;		 -> f_putc@pb(70), pb$fp(2), f_gets@s(4), NULL(0), 
 46187 ;;		 -> disk_initialize@buf(128), 
 46188 ;; Return value:  Size  Location     Type
 46189 ;;                  1    wreg      void 
 46190 ;; Registers used:
 46191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46192 ;; Tracked objects:
 46193 ;;		On entry : 0/0
 46194 ;;		On exit  : 0/0
 46195 ;;		Unchanged: 0/0
 46196 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46197 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46198 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46200 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46201 ;;Total ram usage:       33 bytes
 46202 ;; Hardware stack levels used: 1
 46203 ;; Hardware stack levels required when called: 9
 46204 ;; This function calls:
 46205 ;;		_printf
 46206 ;; This function is called by:
 46207 ;;		_disk_read
 46208 ;;		_disk_write
 46209 ;;		_mem_init
 46210 ;;		_mem_dump
 46211 ;;		_SDCard_read512
 46212 ;;		_SDCard_write512
 46213 ;; This function uses a non-reentrant model
 46214 ;;
 46215                           
 46216                           	psect	text121
 46217   01C294                     __ptext121:
 46218                           	callstack 0
 46219   01C294                     _util_addrdump:
 46220                           	callstack 106
 46221   01C294                     
 46222                           ;../drivers/utils.c: 57: void util_addrdump(const char *header, uint32_t addr_offs, cons
      +                          t void *addr, unsigned int size);../drivers/utils.c: 58: {;../drivers/utils.c: 59:     c
      +                          har chars[17];;../drivers/utils.c: 60:     const uint8_t *buf = addr;
 46223   01C294  C5C3  F5DA         	movff	util_addrdump@addr,util_addrdump@buf
 46224   01C298  C5C4  F5DB         	movff	util_addrdump@addr+1,util_addrdump@buf+1
 46225                           
 46226                           ;../drivers/utils.c: 61:     size = ((size + 15) & ~0xfU);
 46227   01C29C  0E0F               	movlw	15
 46228   01C29E  0105               	movlb	5	; () banked
 46229   01C2A0  25C5               	addwf	util_addrdump@size& (0+255),w,b
 46230   01C2A2  6FC7               	movwf	??_util_addrdump& (0+255),b
 46231   01C2A4  0E00               	movlw	0
 46232   01C2A6  21C6               	addwfc	(util_addrdump@size+1)& (0+255),w,b
 46233   01C2A8  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 46234   01C2AA  0EF0               	movlw	240
 46235   01C2AC  15C7               	andwf	??_util_addrdump& (0+255),w,b
 46236   01C2AE  6FC5               	movwf	util_addrdump@size& (0+255),b
 46237   01C2B0  0EFF               	movlw	255
 46238   01C2B2  15C8               	andwf	(??_util_addrdump+1)& (0+255),w,b
 46239   01C2B4  6FC6               	movwf	(util_addrdump@size+1)& (0+255),b
 46240   01C2B6                     
 46241                           ; BSR set to: 5
 46242                           ;../drivers/utils.c: 62:     for (unsigned int i = 0; i < size; i++) {
 46243   01C2B6  0E00               	movlw	0
 46244   01C2B8  6FDD               	movwf	(util_addrdump@i+1)& (0+255),b
 46245   01C2BA  0E00               	movlw	0
 46246   01C2BC  6FDC               	movwf	util_addrdump@i& (0+255),b
 46247   01C2BE  EFF7  F0E1         	goto	l20645
 46248   01C2C2                     l20625:
 46249                           
 46250                           ; BSR set to: 5
 46251                           ;../drivers/utils.c: 63:         if ((i % 16) == 0)
 46252   01C2C2  0E0F               	movlw	15
 46253   01C2C4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 46254   01C2C6  6FC7               	movwf	??_util_addrdump& (0+255),b
 46255   01C2C8  0E00               	movlw	0
 46256   01C2CA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 46257   01C2CC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 46258   01C2CE  51C7               	movf	??_util_addrdump& (0+255),w,b
 46259   01C2D0  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 46260   01C2D2  A4D8               	btfss	status,2,c
 46261   01C2D4  EF6E  F0E1         	goto	u27581
 46262   01C2D8  EF70  F0E1         	goto	u27580
 46263   01C2DC                     u27581:
 46264   01C2DC  EF86  F0E1         	goto	l119
 46265   01C2E0                     u27580:
 46266   01C2E0                     
 46267                           ; BSR set to: 5
 46268                           ;../drivers/utils.c: 64:             printf("%s%06lx:", header, addr_offs + i);
 46269   01C2E0  0E27               	movlw	low STR_22
 46270   01C2E2  6FAD               	movwf	printf@fmt& (0+255),b
 46271   01C2E4  0EFF               	movlw	high STR_22
 46272   01C2E6  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 46273   01C2E8  C5BD  F5AF         	movff	util_addrdump@header,?_printf+2
 46274   01C2EC  C5BE  F5B0         	movff	util_addrdump@header+1,?_printf+3
 46275   01C2F0  51DC               	movf	util_addrdump@i& (0+255),w,b
 46276   01C2F2  25BF               	addwf	util_addrdump@addr_offs& (0+255),w,b
 46277   01C2F4  6FB1               	movwf	(?_printf+4)& (0+255),b
 46278   01C2F6  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 46279   01C2F8  21C0               	addwfc	(util_addrdump@addr_offs+1)& (0+255),w,b
 46280   01C2FA  6FB2               	movwf	(?_printf+5)& (0+255),b
 46281   01C2FC  0E00               	movlw	0
 46282   01C2FE  21C1               	addwfc	(util_addrdump@addr_offs+2)& (0+255),w,b
 46283   01C300  6FB3               	movwf	(?_printf+6)& (0+255),b
 46284   01C302  0E00               	movlw	0
 46285   01C304  21C2               	addwfc	(util_addrdump@addr_offs+3)& (0+255),w,b
 46286   01C306  6FB4               	movwf	(?_printf+7)& (0+255),b
 46287   01C308  ECDA  F0FF         	call	_printf	;wreg free
 46288   01C30C                     l119:
 46289                           
 46290                           ;../drivers/utils.c: 65:         printf(" %02x", buf[i]);
 46291   01C30C  0E97               	movlw	low STR_20
 46292   01C30E  0105               	movlb	5	; () banked
 46293   01C310  6FAD               	movwf	printf@fmt& (0+255),b
 46294   01C312  0EFF               	movlw	high STR_20
 46295   01C314  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 46296   01C316  51DC               	movf	util_addrdump@i& (0+255),w,b
 46297   01C318  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 46298   01C31A  6ED9               	movwf	fsr2l,c
 46299   01C31C  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 46300   01C31E  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 46301   01C320  6EDA               	movwf	fsr2h,c
 46302   01C322  50DF               	movf	indf2,w,c
 46303   01C324  6FC7               	movwf	??_util_addrdump& (0+255),b
 46304   01C326  51C7               	movf	??_util_addrdump& (0+255),w,b
 46305   01C328  6FAF               	movwf	(?_printf+2)& (0+255),b
 46306   01C32A  6BB0               	clrf	(?_printf+3)& (0+255),b
 46307   01C32C  ECDA  F0FF         	call	_printf	;wreg free
 46308   01C330                     
 46309                           ;../drivers/utils.c: 66:         if (0x20 <= buf[i] && buf[i] <= 0x7e) {
 46310   01C330  0105               	movlb	5	; () banked
 46311   01C332  51DC               	movf	util_addrdump@i& (0+255),w,b
 46312   01C334  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 46313   01C336  6ED9               	movwf	fsr2l,c
 46314   01C338  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 46315   01C33A  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 46316   01C33C  6EDA               	movwf	fsr2h,c
 46317   01C33E  0E1F               	movlw	31
 46318   01C340  64DF               	cpfsgt	indf2,c
 46319   01C342  EFA5  F0E1         	goto	u27591
 46320   01C346  EFA7  F0E1         	goto	u27590
 46321   01C34A                     u27591:
 46322   01C34A  EFCB  F0E1         	goto	l20635
 46323   01C34E                     u27590:
 46324   01C34E                     
 46325                           ; BSR set to: 5
 46326   01C34E  51DC               	movf	util_addrdump@i& (0+255),w,b
 46327   01C350  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 46328   01C352  6ED9               	movwf	fsr2l,c
 46329   01C354  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 46330   01C356  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 46331   01C358  6EDA               	movwf	fsr2h,c
 46332   01C35A  0E7F               	movlw	127
 46333   01C35C  60DF               	cpfslt	indf2,c
 46334   01C35E  EFB3  F0E1         	goto	u27601
 46335   01C362  EFB5  F0E1         	goto	u27600
 46336   01C366                     u27601:
 46337   01C366  EFCB  F0E1         	goto	l20635
 46338   01C36A                     u27600:
 46339   01C36A                     
 46340                           ; BSR set to: 5
 46341                           ;../drivers/utils.c: 67:             chars[i % 16] = buf[i];
 46342   01C36A  51DC               	movf	util_addrdump@i& (0+255),w,b
 46343   01C36C  25DA               	addwf	util_addrdump@buf& (0+255),w,b
 46344   01C36E  6ED9               	movwf	fsr2l,c
 46345   01C370  51DD               	movf	(util_addrdump@i+1)& (0+255),w,b
 46346   01C372  21DB               	addwfc	(util_addrdump@buf+1)& (0+255),w,b
 46347   01C374  6EDA               	movwf	fsr2h,c
 46348   01C376  0E0F               	movlw	15
 46349   01C378  15DC               	andwf	util_addrdump@i& (0+255),w,b
 46350   01C37A  6FC7               	movwf	??_util_addrdump& (0+255),b
 46351   01C37C  0E00               	movlw	0
 46352   01C37E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 46353   01C380  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 46354   01C382  0EC9               	movlw	low util_addrdump@chars
 46355   01C384  25C7               	addwf	??_util_addrdump& (0+255),w,b
 46356   01C386  6EE1               	movwf	fsr1l,c
 46357   01C388  0E05               	movlw	high util_addrdump@chars
 46358   01C38A  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 46359   01C38C  6EE2               	movwf	fsr1h,c
 46360   01C38E  C4DF F4E7          	movff	indf2,indf1
 46361                           
 46362                           ;../drivers/utils.c: 68:         } else {
 46363   01C392  EFD9  F0E1         	goto	l20637
 46364   01C396                     l20635:
 46365                           
 46366                           ; BSR set to: 5
 46367                           ;../drivers/utils.c: 69:             chars[i % 16] = '.';
 46368   01C396  0E0F               	movlw	15
 46369   01C398  15DC               	andwf	util_addrdump@i& (0+255),w,b
 46370   01C39A  6FC7               	movwf	??_util_addrdump& (0+255),b
 46371   01C39C  0E00               	movlw	0
 46372   01C39E  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 46373   01C3A0  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 46374   01C3A2  0EC9               	movlw	low util_addrdump@chars
 46375   01C3A4  25C7               	addwf	??_util_addrdump& (0+255),w,b
 46376   01C3A6  6ED9               	movwf	fsr2l,c
 46377   01C3A8  0E05               	movlw	high util_addrdump@chars
 46378   01C3AA  21C8               	addwfc	(??_util_addrdump+1)& (0+255),w,b
 46379   01C3AC  6EDA               	movwf	fsr2h,c
 46380   01C3AE  0E2E               	movlw	46
 46381   01C3B0  6EDF               	movwf	indf2,c
 46382   01C3B2                     l20637:
 46383                           
 46384                           ; BSR set to: 5
 46385                           ;../drivers/utils.c: 71:         if ((i % 16) == 15) {
 46386   01C3B2  0E0F               	movlw	15
 46387   01C3B4  15DC               	andwf	util_addrdump@i& (0+255),w,b
 46388   01C3B6  6FC7               	movwf	??_util_addrdump& (0+255),b
 46389   01C3B8  0E00               	movlw	0
 46390   01C3BA  15DD               	andwf	(util_addrdump@i+1)& (0+255),w,b
 46391   01C3BC  6FC8               	movwf	(??_util_addrdump+1)& (0+255),b
 46392   01C3BE  0E0F               	movlw	15
 46393   01C3C0  19C7               	xorwf	??_util_addrdump& (0+255),w,b
 46394   01C3C2  11C8               	iorwf	(??_util_addrdump+1)& (0+255),w,b
 46395   01C3C4  A4D8               	btfss	status,2,c
 46396   01C3C6  EFE7  F0E1         	goto	u27611
 46397   01C3CA  EFE9  F0E1         	goto	u27610
 46398   01C3CE                     u27611:
 46399   01C3CE  EFF4  F0E1         	goto	l20643
 46400   01C3D2                     u27610:
 46401   01C3D2                     
 46402                           ; BSR set to: 5
 46403                           ;../drivers/utils.c: 72:             chars[16] = '\0';
 46404   01C3D2  6BD9               	clrf	(util_addrdump@chars+16)& (0+255),b
 46405   01C3D4                     
 46406                           ; BSR set to: 5
 46407                           ;../drivers/utils.c: 73:             printf(" %s\n\r", chars);
 46408   01C3D4  0E66               	movlw	low (STR_74+8)
 46409   01C3D6  6FAD               	movwf	printf@fmt& (0+255),b
 46410   01C3D8  0EFE               	movlw	high (STR_74+8)
 46411   01C3DA  6FAE               	movwf	(printf@fmt+1)& (0+255),b
 46412   01C3DC  0EC9               	movlw	low util_addrdump@chars
 46413   01C3DE  6FAF               	movwf	(?_printf+2)& (0+255),b
 46414   01C3E0  0E05               	movlw	high util_addrdump@chars
 46415   01C3E2  6FB0               	movwf	(?_printf+3)& (0+255),b
 46416   01C3E4  ECDA  F0FF         	call	_printf	;wreg free
 46417   01C3E8                     l20643:
 46418                           
 46419                           ;../drivers/utils.c: 75:     }
 46420   01C3E8  0105               	movlb	5	; () banked
 46421   01C3EA  4BDC               	infsnz	util_addrdump@i& (0+255),f,b
 46422   01C3EC  2BDD               	incf	(util_addrdump@i+1)& (0+255),f,b
 46423   01C3EE                     l20645:
 46424                           
 46425                           ; BSR set to: 5
 46426   01C3EE  51C5               	movf	util_addrdump@size& (0+255),w,b
 46427   01C3F0  5DDC               	subwf	util_addrdump@i& (0+255),w,b
 46428   01C3F2  51C6               	movf	(util_addrdump@size+1)& (0+255),w,b
 46429   01C3F4  59DD               	subwfb	(util_addrdump@i+1)& (0+255),w,b
 46430   01C3F6  A0D8               	btfss	status,0,c
 46431   01C3F8  EF00  F0E2         	goto	u27621
 46432   01C3FC  EF02  F0E2         	goto	u27620
 46433   01C400                     u27621:
 46434   01C400  EF61  F0E1         	goto	l20625
 46435   01C404                     u27620:
 46436   01C404                     
 46437                           ; BSR set to: 5
 46438   01C404  0012               	return		;funcret
 46439   01C406                     __end_of_util_addrdump:
 46440                           	callstack 0
 46441                           
 46442 ;; *************** function _printf *****************
 46443 ;; Defined at:
 46444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 46445 ;; Parameters:    Size  Location     Type
 46446 ;;  fmt             2   77[BANK5 ] PTR const unsigned char 
 46447 ;;		 -> STR_199(47), STR_198(42), STR_197(35), STR_196(50), 
 46448 ;;		 -> STR_194(50), STR_193(55), STR_191(50), STR_190(36), 
 46449 ;;		 -> STR_189(34), STR_188(18), STR_187(41), STR_186(38), 
 46450 ;;		 -> STR_185(43), STR_184(36), STR_183(46), STR_182(35), 
 46451 ;;		 -> STR_181(27), STR_180(25), STR_179(45), STR_178(19), 
 46452 ;;		 -> STR_177(25), STR_176(28), STR_174(45), STR_172(38), 
 46453 ;;		 -> STR_171(14), STR_170(21), STR_169(3), STR_168(26), 
 46454 ;;		 -> STR_167(3), STR_166(19), STR_165(22), STR_164(19), 
 46455 ;;		 -> STR_163(22), STR_162(27), STR_161(15), STR_160(3), 
 46456 ;;		 -> STR_159(38), STR_158(17), STR_157(17), STR_156(26), 
 46457 ;;		 -> STR_155(22), STR_154(26), STR_153(20), STR_152(18), 
 46458 ;;		 -> STR_151(19), STR_150(16), STR_149(19), STR_148(16), 
 46459 ;;		 -> STR_147(33), STR_146(34), STR_145(17), STR_144(17), 
 46460 ;;		 -> STR_143(22), STR_142(26), STR_141(20), STR_140(10), 
 46461 ;;		 -> STR_139(14), STR_138(13), STR_137(29), STR_136(31), 
 46462 ;;		 -> STR_135(29), STR_134(21), STR_132(3), STR_127(13), 
 46463 ;;		 -> STR_126(10), STR_125(19), STR_124(8), STR_123(9), 
 46464 ;;		 -> STR_122(11), STR_121(11), STR_120(16), STR_119(23), 
 46465 ;;		 -> STR_118(41), STR_117(24), STR_116(41), STR_115(48), 
 46466 ;;		 -> STR_114(56), STR_113(32), STR_112(54), STR_111(31), 
 46467 ;;		 -> STR_110(34), STR_109(22), STR_107(20), STR_106(20), 
 46468 ;;		 -> STR_105(3), STR_104(8), STR_103(8), STR_102(3), 
 46469 ;;		 -> STR_101(12), STR_100(10), STR_99(9), STR_98(20), 
 46470 ;;		 -> STR_97(20), STR_96(15), STR_95(12), STR_94(10), 
 46471 ;;		 -> STR_93(9), STR_92(3), STR_91(19), STR_90(14), 
 46472 ;;		 -> STR_89(23), STR_88(25), STR_87(12), STR_86(27), 
 46473 ;;		 -> STR_84(19), STR_83(39), STR_81(25), STR_80(24), 
 46474 ;;		 -> STR_79(19), STR_78(36), STR_77(40), STR_76(26), 
 46475 ;;		 -> STR_75(5), STR_74(14), STR_73(14), STR_72(23), 
 46476 ;;		 -> STR_71(23), STR_70(22), STR_46(35), STR_45(23), 
 46477 ;;		 -> STR_42(26), STR_41(25), STR_39(31), STR_38(21), 
 46478 ;;		 -> STR_37(32), STR_35(22), STR_25(24), STR_24(6), 
 46479 ;;		 -> STR_23(6), STR_22(9), STR_21(6), STR_20(6), 
 46480 ;;		 -> STR_19(8), STR_18(50), STR_17(44), STR_15(29), 
 46481 ;;		 -> STR_14(44), STR_12(28), STR_11(44), STR_10(18), 
 46482 ;;		 -> STR_9(23), STR_8(33), STR_7(21), STR_6(19), 
 46483 ;;		 -> STR_4(26), STR_3(39), STR_2(23), STR_1(25), 
 46484 ;; Auto vars:     Size  Location     Type
 46485 ;;  ap              2   91[BANK5 ] PTR void [1]
 46486 ;;		 -> ?_printf(2), ?_sprintf(2), 
 46487 ;;  ret             2    0        int 
 46488 ;; Return value:  Size  Location     Type
 46489 ;;                  2   77[BANK5 ] int 
 46490 ;; Registers used:
 46491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46492 ;; Tracked objects:
 46493 ;;		On entry : 0/0
 46494 ;;		On exit  : 0/0
 46495 ;;		Unchanged: 0/0
 46496 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46497 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46500 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46501 ;;Total ram usage:       16 bytes
 46502 ;; Hardware stack levels used: 1
 46503 ;; Hardware stack levels required when called: 8
 46504 ;; This function calls:
 46505 ;;		_vfprintf
 46506 ;; This function is called by:
 46507 ;;		_disk_initialize
 46508 ;;		_disk_status
 46509 ;;		_disk_read
 46510 ;;		_disk_write
 46511 ;;		_disk_ioctl
 46512 ;;		_util_hexdump
 46513 ;;		_util_addrdump
 46514 ;;		_util_hexdump_sum
 46515 ;;		_seek_disk
 46516 ;;		_write_sector
 46517 ;;		_read_sector
 46518 ;;		_mem_init
 46519 ;;		_main
 46520 ;;		_setup_monitor
 46521 ;;		_load_program
 46522 ;;		_disk_init
 46523 ;;		_load_config
 46524 ;;		_get_line
 46525 ;;		_scan_files
 46526 ;;		_scan_files1
 46527 ;;		_prt_reload
 46528 ;;		_boot_file
 46529 ;;		_print_reg
 46530 ;;		_print_com
 46531 ;;		_mon_prog
 46532 ;;		_see_file
 46533 ;;		_flash_apl
 46534 ;;		_in_file
 46535 ;;		_str_inf
 46536 ;;		_wait_for_programmer
 46537 ;;		_reset_cpu
 46538 ;;		_setup_sd
 46539 ;;		_SPI_SD_configure
 46540 ;;		_SDCard_init
 46541 ;;		_SDCard_read512
 46542 ;;		_SDCard_write512
 46543 ;; This function uses a non-reentrant model
 46544 ;;
 46545                           
 46546                           	psect	text122
 46547   01FFB4                     __ptext122:
 46548                           	callstack 0
 46549   01FFB4                     _printf:
 46550                           	callstack 111
 46551   01FFB4  0EAF               	movlw	low (?_printf+2)
 46552   01FFB6  0105               	movlb	5	; () banked
 46553   01FFB8  6FBB               	movwf	printf@ap& (0+255),b
 46554   01FFBA  0E05               	movlw	high (?_printf+2)
 46555   01FFBC  6FBC               	movwf	(printf@ap+1)& (0+255),b
 46556   01FFBE                     
 46557                           ; BSR set to: 5
 46558   01FFBE  0E00               	movlw	0
 46559   01FFC0  6FA5               	movwf	vfprintf@fp& (0+255),b
 46560   01FFC2  0E00               	movlw	0
 46561   01FFC4  6FA6               	movwf	(vfprintf@fp+1)& (0+255),b
 46562   01FFC6  C5AD  F5A7         	movff	printf@fmt,vfprintf@fmt
 46563   01FFCA  C5AE  F5A8         	movff	printf@fmt+1,vfprintf@fmt+1
 46564   01FFCE  0EBB               	movlw	low printf@ap
 46565   01FFD0  6FA9               	movwf	vfprintf@ap& (0+255),b
 46566   01FFD2  0E05               	movlw	high printf@ap
 46567   01FFD4  6FAA               	movwf	(vfprintf@ap+1)& (0+255),b
 46568   01FFD6  EC07  F0FC         	call	_vfprintf	;wreg free
 46569   01FFDA  0012               	return		;funcret
 46570   01FFDC                     __end_of_printf:
 46571                           	callstack 0
 46572                           
 46573 ;; *************** function _vfprintf *****************
 46574 ;; Defined at:
 46575 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46576 ;; Parameters:    Size  Location     Type
 46577 ;;  fp              2   69[BANK5 ] PTR struct _IO_FILE
 46578 ;;		 -> sprintf@f(11), NULL(0), 
 46579 ;;  fmt             2   71[BANK5 ] PTR const unsigned char 
 46580 ;;		 -> STR_199(47), STR_198(42), STR_197(35), STR_196(50), 
 46581 ;;		 -> STR_194(50), STR_193(55), STR_191(50), STR_190(36), 
 46582 ;;		 -> STR_189(34), STR_188(18), STR_187(41), STR_186(38), 
 46583 ;;		 -> STR_185(43), STR_184(36), STR_183(46), STR_182(35), 
 46584 ;;		 -> STR_181(27), STR_180(25), STR_179(45), STR_178(19), 
 46585 ;;		 -> STR_177(25), STR_176(28), STR_174(45), STR_172(38), 
 46586 ;;		 -> STR_171(14), STR_170(21), STR_169(3), STR_168(26), 
 46587 ;;		 -> STR_167(3), STR_166(19), STR_165(22), STR_164(19), 
 46588 ;;		 -> STR_163(22), STR_162(27), STR_161(15), STR_160(3), 
 46589 ;;		 -> STR_159(38), STR_158(17), STR_157(17), STR_156(26), 
 46590 ;;		 -> STR_155(22), STR_154(26), STR_153(20), STR_152(18), 
 46591 ;;		 -> STR_151(19), STR_150(16), STR_149(19), STR_148(16), 
 46592 ;;		 -> STR_147(33), STR_146(34), STR_145(17), STR_144(17), 
 46593 ;;		 -> STR_143(22), STR_142(26), STR_141(20), STR_140(10), 
 46594 ;;		 -> STR_139(14), STR_138(13), STR_137(29), STR_136(31), 
 46595 ;;		 -> STR_135(29), STR_134(21), STR_132(3), STR_127(13), 
 46596 ;;		 -> STR_126(10), STR_125(19), STR_124(8), STR_123(9), 
 46597 ;;		 -> STR_122(11), STR_121(11), STR_120(16), STR_119(23), 
 46598 ;;		 -> STR_118(41), STR_117(24), STR_116(41), STR_115(48), 
 46599 ;;		 -> STR_114(56), STR_113(32), STR_112(54), STR_111(31), 
 46600 ;;		 -> STR_110(34), STR_109(22), STR_108(3), STR_107(20), 
 46601 ;;		 -> STR_106(20), STR_105(3), STR_104(8), STR_103(8), 
 46602 ;;		 -> STR_102(3), STR_101(12), STR_100(10), STR_99(9), 
 46603 ;;		 -> STR_98(20), STR_97(20), STR_96(15), STR_95(12), 
 46604 ;;		 -> STR_94(10), STR_93(9), STR_92(3), STR_91(19), 
 46605 ;;		 -> STR_90(14), STR_89(23), STR_88(25), STR_87(12), 
 46606 ;;		 -> STR_86(27), STR_84(19), STR_83(39), STR_82(3), 
 46607 ;;		 -> STR_81(25), STR_80(24), STR_79(19), STR_78(36), 
 46608 ;;		 -> STR_77(40), STR_76(26), STR_75(5), STR_74(14), 
 46609 ;;		 -> STR_73(14), STR_72(23), STR_71(23), STR_70(22), 
 46610 ;;		 -> STR_46(35), STR_45(23), STR_42(26), STR_41(25), 
 46611 ;;		 -> STR_39(31), STR_38(21), STR_37(32), STR_35(22), 
 46612 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 46613 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 46614 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 46615 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 46616 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 46617 ;;		 -> STR_2(23), STR_1(25), 
 46618 ;;  ap              2   73[BANK5 ] PTR PTR void 
 46619 ;;		 -> printf@ap(2), sprintf@ap(2), 
 46620 ;; Auto vars:     Size  Location     Type
 46621 ;;  cfmt            2   75[BANK5 ] PTR unsigned char 
 46622 ;;		 -> STR_199(47), STR_198(42), STR_197(35), STR_196(50), 
 46623 ;;		 -> STR_194(50), STR_193(55), STR_191(50), STR_190(36), 
 46624 ;;		 -> STR_189(34), STR_188(18), STR_187(41), STR_186(38), 
 46625 ;;		 -> STR_185(43), STR_184(36), STR_183(46), STR_182(35), 
 46626 ;;		 -> STR_181(27), STR_180(25), STR_179(45), STR_178(19), 
 46627 ;;		 -> STR_177(25), STR_176(28), STR_174(45), STR_172(38), 
 46628 ;;		 -> STR_171(14), STR_170(21), STR_169(3), STR_168(26), 
 46629 ;;		 -> STR_167(3), STR_166(19), STR_165(22), STR_164(19), 
 46630 ;;		 -> STR_163(22), STR_162(27), STR_161(15), STR_160(3), 
 46631 ;;		 -> STR_159(38), STR_158(17), STR_157(17), STR_156(26), 
 46632 ;;		 -> STR_155(22), STR_154(26), STR_153(20), STR_152(18), 
 46633 ;;		 -> STR_151(19), STR_150(16), STR_149(19), STR_148(16), 
 46634 ;;		 -> STR_147(33), STR_146(34), STR_145(17), STR_144(17), 
 46635 ;;		 -> STR_143(22), STR_142(26), STR_141(20), STR_140(10), 
 46636 ;;		 -> STR_139(14), STR_138(13), STR_137(29), STR_136(31), 
 46637 ;;		 -> STR_135(29), STR_134(21), STR_132(3), STR_127(13), 
 46638 ;;		 -> STR_126(10), STR_125(19), STR_124(8), STR_123(9), 
 46639 ;;		 -> STR_122(11), STR_121(11), STR_120(16), STR_119(23), 
 46640 ;;		 -> STR_118(41), STR_117(24), STR_116(41), STR_115(48), 
 46641 ;;		 -> STR_114(56), STR_113(32), STR_112(54), STR_111(31), 
 46642 ;;		 -> STR_110(34), STR_109(22), STR_108(3), STR_107(20), 
 46643 ;;		 -> STR_106(20), STR_105(3), STR_104(8), STR_103(8), 
 46644 ;;		 -> STR_102(3), STR_101(12), STR_100(10), STR_99(9), 
 46645 ;;		 -> STR_98(20), STR_97(20), STR_96(15), STR_95(12), 
 46646 ;;		 -> STR_94(10), STR_93(9), STR_92(3), STR_91(19), 
 46647 ;;		 -> STR_90(14), STR_89(23), STR_88(25), STR_87(12), 
 46648 ;;		 -> STR_86(27), STR_84(19), STR_83(39), STR_82(3), 
 46649 ;;		 -> STR_81(25), STR_80(24), STR_79(19), STR_78(36), 
 46650 ;;		 -> STR_77(40), STR_76(26), STR_75(5), STR_74(14), 
 46651 ;;		 -> STR_73(14), STR_72(23), STR_71(23), STR_70(22), 
 46652 ;;		 -> STR_46(35), STR_45(23), STR_42(26), STR_41(25), 
 46653 ;;		 -> STR_39(31), STR_38(21), STR_37(32), STR_35(22), 
 46654 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 46655 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 46656 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 46657 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 46658 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 46659 ;;		 -> STR_2(23), STR_1(25), 
 46660 ;; Return value:  Size  Location     Type
 46661 ;;                  2   69[BANK5 ] int 
 46662 ;; Registers used:
 46663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46664 ;; Tracked objects:
 46665 ;;		On entry : 0/0
 46666 ;;		On exit  : 0/0
 46667 ;;		Unchanged: 0/0
 46668 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46669 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46672 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46673 ;;Total ram usage:        8 bytes
 46674 ;; Hardware stack levels used: 1
 46675 ;; Hardware stack levels required when called: 7
 46676 ;; This function calls:
 46677 ;;		_vfpfcnvrt
 46678 ;; This function is called by:
 46679 ;;		_sprintf
 46680 ;;		_printf
 46681 ;; This function uses a non-reentrant model
 46682 ;;
 46683                           
 46684                           	psect	text123
 46685   01F80E                     __ptext123:
 46686                           	callstack 0
 46687   01F80E                     _vfprintf:
 46688                           	callstack 111
 46689   01F80E                     
 46690                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 46691   01F80E  C5A7  F5AB         	movff	vfprintf@fmt,vfprintf@cfmt
 46692   01F812  C5A8  F5AC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 46693                           
 46694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 46695   01F816  EF1C  F0FC         	goto	l20549
 46696   01F81A                     l20547:
 46697                           
 46698                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 46699   01F81A  C5A5  F593         	movff	vfprintf@fp,vfpfcnvrt@fp
 46700   01F81E  C5A6  F594         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 46701   01F822  0EAB               	movlw	low vfprintf@cfmt
 46702   01F824  0105               	movlb	5	; () banked
 46703   01F826  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
 46704   01F828  0E05               	movlw	high vfprintf@cfmt
 46705   01F82A  6F96               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 46706   01F82C  C5A9  F597         	movff	vfprintf@ap,vfpfcnvrt@ap
 46707   01F830  C5AA  F598         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 46708   01F834  EC25  F09A         	call	_vfpfcnvrt	;wreg free
 46709   01F838                     l20549:
 46710                           
 46711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 46712   01F838  C5AB  F4F6         	movff	vfprintf@cfmt,tblptrl
 46713   01F83C  C5AC  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 46714   01F840                     	if	0	;tblptru may be non-zero
 46715   01F840                     	endif
 46716   01F840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46717   01F840  0E00               	movlw	low (__mediumconst shr (0+16))
 46718   01F842  6EF8               	movwf	tblptru,c
 46719   01F844                     	endif
 46720   01F844  0008               	tblrd		*
 46721   01F846  50F5               	movf	tablat,w,c
 46722   01F848  0900               	iorlw	0
 46723   01F84A  A4D8               	btfss	status,2,c
 46724   01F84C  EF2A  F0FC         	goto	u27511
 46725   01F850  EF2C  F0FC         	goto	u27510
 46726   01F854                     u27511:
 46727   01F854  EF0D  F0FC         	goto	l20547
 46728   01F858                     u27510:
 46729   01F858                     
 46730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 46731   01F858  0E00               	movlw	0
 46732   01F85A  0105               	movlb	5	; () banked
 46733   01F85C  6FA6               	movwf	(?_vfprintf+1)& (0+255),b
 46734   01F85E  0E00               	movlw	0
 46735   01F860  6FA5               	movwf	?_vfprintf& (0+255),b
 46736   01F862                     
 46737                           ; BSR set to: 5
 46738   01F862  0012               	return		;funcret
 46739   01F864                     __end_of_vfprintf:
 46740                           	callstack 0
 46741                           
 46742 ;; *************** function _vfpfcnvrt *****************
 46743 ;; Defined at:
 46744 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 46745 ;; Parameters:    Size  Location     Type
 46746 ;;  fp              2   51[BANK5 ] PTR struct _IO_FILE
 46747 ;;		 -> sprintf@f(11), NULL(0), 
 46748 ;;  fmt             2   53[BANK5 ] PTR PTR unsigned char 
 46749 ;;		 -> vfprintf@cfmt(2), 
 46750 ;;  ap              2   55[BANK5 ] PTR PTR void 
 46751 ;;		 -> printf@ap(2), sprintf@ap(2), 
 46752 ;; Auto vars:     Size  Location     Type
 46753 ;;  convarg         4   62[BANK5 ] struct .
 46754 ;;  cp              2   67[BANK5 ] PTR unsigned char 
 46755 ;;		 -> STR_199(47), STR_198(42), STR_197(35), STR_196(50), 
 46756 ;;		 -> STR_194(50), STR_193(55), STR_191(50), STR_190(36), 
 46757 ;;		 -> STR_189(34), STR_188(18), STR_187(41), STR_186(38), 
 46758 ;;		 -> STR_185(43), STR_184(36), STR_183(46), STR_182(35), 
 46759 ;;		 -> STR_181(27), STR_180(25), STR_179(45), STR_178(19), 
 46760 ;;		 -> STR_177(25), STR_176(28), STR_174(45), STR_172(38), 
 46761 ;;		 -> STR_171(14), STR_170(21), STR_169(3), STR_168(26), 
 46762 ;;		 -> STR_167(3), STR_166(19), STR_165(22), STR_164(19), 
 46763 ;;		 -> STR_163(22), STR_162(27), STR_161(15), STR_160(3), 
 46764 ;;		 -> STR_159(38), STR_158(17), STR_157(17), STR_156(26), 
 46765 ;;		 -> STR_155(22), STR_154(26), STR_153(20), STR_152(18), 
 46766 ;;		 -> STR_151(19), STR_150(16), STR_149(19), STR_148(16), 
 46767 ;;		 -> STR_147(33), STR_146(34), STR_145(17), STR_144(17), 
 46768 ;;		 -> STR_143(22), STR_142(26), STR_141(20), STR_140(10), 
 46769 ;;		 -> STR_139(14), STR_138(13), STR_137(29), STR_136(31), 
 46770 ;;		 -> STR_135(29), STR_134(21), STR_132(3), STR_127(13), 
 46771 ;;		 -> STR_126(10), STR_125(19), STR_124(8), STR_123(9), 
 46772 ;;		 -> STR_122(11), STR_121(11), STR_120(16), STR_119(23), 
 46773 ;;		 -> STR_118(41), STR_117(24), STR_116(41), STR_115(48), 
 46774 ;;		 -> STR_114(56), STR_113(32), STR_112(54), STR_111(31), 
 46775 ;;		 -> STR_110(34), STR_109(22), STR_108(3), STR_107(20), 
 46776 ;;		 -> STR_106(20), STR_105(3), STR_104(8), STR_103(8), 
 46777 ;;		 -> STR_102(3), STR_101(12), STR_100(10), STR_99(9), 
 46778 ;;		 -> STR_98(20), STR_97(20), STR_96(15), STR_95(12), 
 46779 ;;		 -> STR_94(10), STR_93(9), STR_92(3), STR_91(19), 
 46780 ;;		 -> STR_90(14), STR_89(23), STR_88(25), STR_87(12), 
 46781 ;;		 -> STR_86(27), STR_84(19), STR_83(39), STR_82(3), 
 46782 ;;		 -> STR_81(25), STR_80(24), STR_79(19), STR_78(36), 
 46783 ;;		 -> STR_77(40), STR_76(26), STR_75(5), STR_74(14), 
 46784 ;;		 -> STR_73(14), STR_72(23), STR_71(23), STR_70(22), 
 46785 ;;		 -> STR_46(35), STR_45(23), STR_42(26), STR_41(25), 
 46786 ;;		 -> STR_39(31), STR_38(21), STR_37(32), STR_35(22), 
 46787 ;;		 -> STR_25(24), STR_24(6), STR_23(6), STR_22(9), 
 46788 ;;		 -> STR_21(6), STR_20(6), STR_19(8), STR_18(50), 
 46789 ;;		 -> STR_17(44), STR_15(29), STR_14(44), STR_12(28), 
 46790 ;;		 -> STR_11(44), STR_10(18), STR_9(23), STR_8(33), 
 46791 ;;		 -> STR_7(21), STR_6(19), STR_4(26), STR_3(39), 
 46792 ;;		 -> STR_2(23), STR_1(25), 
 46793 ;;  c               1   66[BANK5 ] unsigned char 
 46794 ;;  done            1   61[BANK5 ] _Bool 
 46795 ;; Return value:  Size  Location     Type
 46796 ;;                  1    wreg      void 
 46797 ;; Registers used:
 46798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46799 ;; Tracked objects:
 46800 ;;		On entry : 0/0
 46801 ;;		On exit  : 0/0
 46802 ;;		Unchanged: 0/0
 46803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46804 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46805 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46807 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46808 ;;Total ram usage:       18 bytes
 46809 ;; Hardware stack levels used: 1
 46810 ;; Hardware stack levels required when called: 6
 46811 ;; This function calls:
 46812 ;;		_dtoa
 46813 ;;		_efgtoa
 46814 ;;		_fputc
 46815 ;;		_read_prec_or_width
 46816 ;;		_stoa
 46817 ;;		_xtoa
 46818 ;; This function is called by:
 46819 ;;		_vfprintf
 46820 ;; This function uses a non-reentrant model
 46821 ;;
 46822                           
 46823                           	psect	text124
 46824   01344A                     __ptext124:
 46825                           	callstack 0
 46826   01344A                     _vfpfcnvrt:
 46827                           	callstack 111
 46828   01344A                     
 46829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 46830   01344A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46831   01344E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46832   013452  C4DE F4F6          	movff	postinc2,tblptrl
 46833   013456  C4DD F4F7          	movff	postdec2,tblptrh
 46834   01345A                     	if	0	;tblptru may be non-zero
 46835   01345A                     	endif
 46836   01345A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46837   01345A  0E00               	movlw	low (__mediumconst shr (0+16))
 46838   01345C  6EF8               	movwf	tblptru,c
 46839   01345E                     	endif
 46840   01345E  0008               	tblrd		*
 46841   013460  50F5               	movf	tablat,w,c
 46842   013462  0A25               	xorlw	37
 46843   013464  A4D8               	btfss	status,2,c
 46844   013466  EF37  F09A         	goto	u27291
 46845   01346A  EF39  F09A         	goto	u27290
 46846   01346E                     u27291:
 46847   01346E  EF65  F09D         	goto	l20483
 46848   013472                     u27290:
 46849   013472                     
 46850                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 46851   013472  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46852   013476  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46853   01347A  2ADE               	incf	postinc2,f,c
 46854   01347C  0E00               	movlw	0
 46855   01347E  22DD               	addwfc	postdec2,f,c
 46856   013480                     
 46857                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 46858   013480  0E00               	movlw	0
 46859   013482  0107               	movlb	7	; () banked
 46860   013484  6FB2               	movwf	(_width+1)& (0+255),b
 46861   013486  0E00               	movlw	0
 46862   013488  6FB1               	movwf	_width& (0+255),b
 46863   01348A  C7B1  F55C         	movff	_width,_flags
 46864   01348E                     
 46865                           ; BSR set to: 7
 46866                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 46867   01348E  685A               	setf	_prec^(0+1280),c
 46868   013490  685B               	setf	(_prec+1)^(0+1280),c
 46869   013492                     
 46870                           ; BSR set to: 7
 46871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 46872   013492  0105               	movlb	5	; () banked
 46873   013494  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 46874                           
 46875                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 46876   013496  EF6D  F09A         	goto	l20359
 46877   01349A                     l20349:
 46878                           
 46879                           ; BSR set to: 5
 46880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 46881   01349A  825C               	bsf	_flags^(0+1280),1,c
 46882   01349C                     
 46883                           ; BSR set to: 5
 46884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 46885   01349C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46886   0134A0  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46887   0134A4  2ADE               	incf	postinc2,f,c
 46888   0134A6  0E00               	movlw	0
 46889   0134A8  22DD               	addwfc	postdec2,f,c
 46890                           
 46891                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 46892   0134AA  EF6D  F09A         	goto	l20359
 46893   0134AE                     l20353:
 46894                           
 46895                           ; BSR set to: 5
 46896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 46897   0134AE  0E01               	movlw	1
 46898   0134B0  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 46899                           
 46900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 46901   0134B2  EF6D  F09A         	goto	l20359
 46902   0134B6                     l20357:
 46903                           
 46904                           ; BSR set to: 5
 46905   0134B6  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46906   0134BA  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46907   0134BE  C4DE F4F6          	movff	postinc2,tblptrl
 46908   0134C2  C4DD F4F7          	movff	postdec2,tblptrh
 46909   0134C6                     	if	0	;tblptru may be non-zero
 46910   0134C6                     	endif
 46911   0134C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46912   0134C6  0E00               	movlw	low (__mediumconst shr (0+16))
 46913   0134C8  6EF8               	movwf	tblptru,c
 46914   0134CA                     	endif
 46915   0134CA  0008               	tblrd		*
 46916   0134CC  50F5               	movf	tablat,w,c
 46917                           
 46918                           ; Switch size 1, requested type "simple"
 46919                           ; Number of cases is 1, Range of values is 48 to 48
 46920                           ; switch strategies available:
 46921                           ; Name         Instructions Cycles
 46922                           ; simple_byte            4     3 (average)
 46923                           ;	Chosen strategy is simple_byte
 46924   0134CE  0A30               	xorlw	48	; case 48
 46925   0134D0  B4D8               	btfsc	status,2,c
 46926   0134D2  EF4D  F09A         	goto	l20349
 46927   0134D6  EF57  F09A         	goto	l20353
 46928   0134DA                     l20359:
 46929                           
 46930                           ; BSR set to: 5
 46931                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 46932   0134DA  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 46933   0134DC  B4D8               	btfsc	status,2,c
 46934   0134DE  EF73  F09A         	goto	u27301
 46935   0134E2  EF75  F09A         	goto	u27300
 46936   0134E6                     u27301:
 46937   0134E6  EF5B  F09A         	goto	l20357
 46938   0134EA                     u27300:
 46939   0134EA                     
 46940                           ; BSR set to: 5
 46941                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 46942   0134EA  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 46943   0134EE  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 46944   0134F2  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 46945   0134F6  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 46946   0134FA  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 46947   0134FE  C504  F7B1         	movff	?_read_prec_or_width,_width
 46948   013502  C505  F7B2         	movff	?_read_prec_or_width+1,_width+1
 46949   013506                     
 46950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 46951   013506  0107               	movlb	7	; () banked
 46952   013508  BFB2               	btfsc	(_width+1)& (0+255),7,b
 46953   01350A  EF8B  F09A         	goto	u27310
 46954   01350E  EF89  F09A         	goto	u27311
 46955   013512                     u27311:
 46956   013512  EF90  F09A         	goto	l20367
 46957   013516                     u27310:
 46958   013516                     
 46959                           ; BSR set to: 7
 46960                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 46961   013516  805C               	bsf	_flags^(0+1280),0,c
 46962                           
 46963                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 46964   013518  6DB1               	negf	_width& (0+255),b
 46965   01351A  1FB2               	comf	(_width+1)& (0+255),f,b
 46966   01351C  B0D8               	btfsc	status,0,c
 46967   01351E  2BB2               	incf	(_width+1)& (0+255),f,b
 46968   013520                     l20367:
 46969                           
 46970                           ; BSR set to: 7
 46971                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 46972   013520  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46973   013524  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46974   013528  C4DE F4F6          	movff	postinc2,tblptrl
 46975   01352C  C4DD F4F7          	movff	postdec2,tblptrh
 46976   013530                     	if	0	;tblptru may be non-zero
 46977   013530                     	endif
 46978   013530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46979   013530  0E00               	movlw	low (__mediumconst shr (0+16))
 46980   013532  6EF8               	movwf	tblptru,c
 46981   013534                     	endif
 46982   013534  0008               	tblrd		*
 46983   013536  50F5               	movf	tablat,w,c
 46984   013538  0A2E               	xorlw	46
 46985   01353A  A4D8               	btfss	status,2,c
 46986   01353C  EFA2  F09A         	goto	u27321
 46987   013540  EFA4  F09A         	goto	u27320
 46988   013544                     u27321:
 46989   013544  EFB9  F09A         	goto	l20373
 46990   013548                     u27320:
 46991   013548                     
 46992                           ; BSR set to: 7
 46993                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 46994   013548  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 46995   01354C  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 46996   013550  2ADE               	incf	postinc2,f,c
 46997   013552  0E00               	movlw	0
 46998   013554  22DD               	addwfc	postdec2,f,c
 46999   013556                     
 47000                           ; BSR set to: 7
 47001                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 47002   013556  C595  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 47003   01355A  C596  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 47004   01355E  C597  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 47005   013562  C598  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 47006   013566  EC14  F0F0         	call	_read_prec_or_width	;wreg free
 47007   01356A  C504  F55A         	movff	?_read_prec_or_width,_prec
 47008   01356E  C505  F55B         	movff	?_read_prec_or_width+1,_prec+1
 47009   013572                     l20373:
 47010                           
 47011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 47012   013572  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47013   013576  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47014   01357A  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 47015   01357E  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 47016   013582                     
 47017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 47018   013582  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47019   013586  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47020   01358A                     	if	0	;tblptru may be non-zero
 47021   01358A                     	endif
 47022   01358A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47023   01358A  0E00               	movlw	low (__mediumconst shr (0+16))
 47024   01358C  6EF8               	movwf	tblptru,c
 47025   01358E                     	endif
 47026   01358E  0008               	tblrd		*
 47027   013590  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 47028                           
 47029                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 47030   013594  EFD7  F09A         	goto	l20383
 47031   013598                     l20377:
 47032                           
 47033                           ; BSR set to: 5
 47034                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1309:     cp++;
 47035   013598  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 47036   01359A  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 47037                           
 47038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1316:     break;
 47039   01359C  EFEF  F09A         	goto	l20385
 47040   0135A0                     l3501:
 47041   0135A0                     l20379:
 47042                           
 47043                           ; BSR set to: 5
 47044                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 47045   0135A0  0E69               	movlw	105
 47046   0135A2  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 47047                           
 47048                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1351:     break;
 47049   0135A4  EFEF  F09A         	goto	l20385
 47050   0135A8                     l3503:
 47051                           
 47052                           ; BSR set to: 5
 47053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 47054   0135A8  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 47055                           
 47056                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1354:     break;
 47057   0135AA  EFEF  F09A         	goto	l20385
 47058   0135AE                     l20383:
 47059   0135AE  0105               	movlb	5	; () banked
 47060   0135B0  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 47061                           
 47062                           ; Switch size 1, requested type "simple"
 47063                           ; Number of cases is 5, Range of values is 88 to 120
 47064                           ; switch strategies available:
 47065                           ; Name         Instructions Cycles
 47066                           ; simple_byte           16     9 (average)
 47067                           ;	Chosen strategy is simple_byte
 47068   0135B2  0A58               	xorlw	88	; case 88
 47069   0135B4  B4D8               	btfsc	status,2,c
 47070   0135B6  EFD0  F09A         	goto	l20379
 47071   0135BA  0A3C               	xorlw	60	; case 100
 47072   0135BC  B4D8               	btfsc	status,2,c
 47073   0135BE  EFD0  F09A         	goto	l20379
 47074   0135C2  0A0D               	xorlw	13	; case 105
 47075   0135C4  B4D8               	btfsc	status,2,c
 47076   0135C6  EFD0  F09A         	goto	l3501
 47077   0135CA  0A05               	xorlw	5	; case 108
 47078   0135CC  B4D8               	btfsc	status,2,c
 47079   0135CE  EFCC  F09A         	goto	l20377
 47080   0135D2  0A14               	xorlw	20	; case 120
 47081   0135D4  B4D8               	btfsc	status,2,c
 47082   0135D6  EFD0  F09A         	goto	l20379
 47083   0135DA  EFD4  F09A         	goto	l3503
 47084   0135DE                     l20385:
 47085                           
 47086                           ; BSR set to: 5
 47087                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 47088   0135DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47089   0135E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47090   0135E6                     	if	0	;tblptru may be non-zero
 47091   0135E6                     	endif
 47092   0135E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47093   0135E6  0E00               	movlw	low (__mediumconst shr (0+16))
 47094   0135E8  6EF8               	movwf	tblptru,c
 47095   0135EA                     	endif
 47096   0135EA  0008               	tblrd		*
 47097   0135EC  50F5               	movf	tablat,w,c
 47098   0135EE  0A64               	xorlw	100
 47099   0135F0  B4D8               	btfsc	status,2,c
 47100   0135F2  EFFD  F09A         	goto	u27331
 47101   0135F6  EFFF  F09A         	goto	u27330
 47102   0135FA                     u27331:
 47103   0135FA  EF46  F09B         	goto	l20395
 47104   0135FE                     u27330:
 47105   0135FE                     
 47106                           ; BSR set to: 5
 47107   0135FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47108   013602  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47109   013606                     	if	0	;tblptru may be non-zero
 47110   013606                     	endif
 47111   013606                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47112   013606  0E00               	movlw	low (__mediumconst shr (0+16))
 47113   013608  6EF8               	movwf	tblptru,c
 47114   01360A                     	endif
 47115   01360A  0008               	tblrd		*
 47116   01360C  50F5               	movf	tablat,w,c
 47117   01360E  0A69               	xorlw	105
 47118   013610  A4D8               	btfss	status,2,c
 47119   013612  EF0D  F09B         	goto	u27341
 47120   013616  EF0F  F09B         	goto	u27340
 47121   01361A                     u27341:
 47122   01361A  EF6F  F09B         	goto	l20403
 47123   01361E                     u27340:
 47124   01361E  EF46  F09B         	goto	l20395
 47125   013622                     l20389:
 47126                           
 47127                           ; BSR set to: 5
 47128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 47129   013622  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47130   013626  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47131   01362A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47132   01362E  0E02               	movlw	2
 47133   013630  26DE               	addwf	postinc2,f,c
 47134   013632  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47135   013636  0E00               	movlw	0
 47136   013638  22DD               	addwfc	postdec2,f,c
 47137   01363A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47138   01363E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47139   013642  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 47140   013646  C4DD F59F          	movff	postdec2,vfpfcnvrt@convarg+1
 47141   01364A  0E00               	movlw	0
 47142   01364C  BF9F               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 47143   01364E  0EFF               	movlw	-1
 47144   013650  6FA0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 47145   013652  6FA1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 47146                           
 47147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1366:      break;
 47148   013654  EF51  F09B         	goto	l20397
 47149   013658                     l20391:
 47150                           
 47151                           ; BSR set to: 5
 47152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
 47153   013658  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47154   01365C  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47155   013660  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47156   013664  0E04               	movlw	4
 47157   013666  26DE               	addwf	postinc2,f,c
 47158   013668  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47159   01366C  0E00               	movlw	0
 47160   01366E  22DD               	addwfc	postdec2,f,c
 47161   013670  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47162   013674  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47163   013678  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 47164   01367C  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 47165   013680  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 47166   013684  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 47167                           
 47168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1380:      break;
 47169   013688  EF51  F09B         	goto	l20397
 47170   01368C                     l20395:
 47171                           
 47172                           ; BSR set to: 5
 47173   01368C  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 47174                           
 47175                           ; Switch size 1, requested type "simple"
 47176                           ; Number of cases is 2, Range of values is 105 to 108
 47177                           ; switch strategies available:
 47178                           ; Name         Instructions Cycles
 47179                           ; simple_byte            7     4 (average)
 47180                           ;	Chosen strategy is simple_byte
 47181   01368E  0A69               	xorlw	105	; case 105
 47182   013690  B4D8               	btfsc	status,2,c
 47183   013692  EF11  F09B         	goto	l20389
 47184   013696  0A05               	xorlw	5	; case 108
 47185   013698  B4D8               	btfsc	status,2,c
 47186   01369A  EF2C  F09B         	goto	l20391
 47187   01369E  EF51  F09B         	goto	l20397
 47188   0136A2                     l20397:
 47189                           
 47190                           ; BSR set to: 5
 47191                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 47192   0136A2  0E01               	movlw	1
 47193   0136A4  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 47194   0136A6  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 47195   0136A8  0E00               	movlw	0
 47196   0136AA  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 47197   0136AC  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 47198   0136AE  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47199   0136B2  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47200   0136B6  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 47201   0136BA  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 47202   0136BE                     
 47203                           ; BSR set to: 5
 47204                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 47205   0136BE  C593  F51E         	movff	vfpfcnvrt@fp,dtoa@fp
 47206   0136C2  C594  F51F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 47207   0136C6  C59E  F520         	movff	vfpfcnvrt@convarg,dtoa@d
 47208   0136CA  C59F  F521         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 47209   0136CE  C5A0  F522         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 47210   0136D2  C5A1  F523         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 47211   0136D6  EC81  F0D3         	call	_dtoa	;wreg free
 47212   0136DA  EF7B  F09D         	goto	l3511
 47213   0136DE                     l20403:
 47214                           
 47215                           ; BSR set to: 5
 47216   0136DE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47217   0136E2  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47218   0136E6                     	if	0	;tblptru may be non-zero
 47219   0136E6                     	endif
 47220   0136E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47221   0136E6  0E00               	movlw	low (__mediumconst shr (0+16))
 47222   0136E8  6EF8               	movwf	tblptru,c
 47223   0136EA                     	endif
 47224   0136EA  0008               	tblrd		*
 47225   0136EC  50F5               	movf	tablat,w,c
 47226   0136EE  0A78               	xorlw	120
 47227   0136F0  B4D8               	btfsc	status,2,c
 47228   0136F2  EF7D  F09B         	goto	u27351
 47229   0136F6  EF7F  F09B         	goto	u27350
 47230   0136FA                     u27351:
 47231   0136FA  EFC7  F09B         	goto	l20413
 47232   0136FE                     u27350:
 47233   0136FE                     
 47234                           ; BSR set to: 5
 47235   0136FE  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47236   013702  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47237   013706                     	if	0	;tblptru may be non-zero
 47238   013706                     	endif
 47239   013706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47240   013706  0E00               	movlw	low (__mediumconst shr (0+16))
 47241   013708  6EF8               	movwf	tblptru,c
 47242   01370A                     	endif
 47243   01370A  0008               	tblrd		*
 47244   01370C  50F5               	movf	tablat,w,c
 47245   01370E  0A58               	xorlw	88
 47246   013710  A4D8               	btfss	status,2,c
 47247   013712  EF8D  F09B         	goto	u27361
 47248   013716  EF8F  F09B         	goto	u27360
 47249   01371A                     u27361:
 47250   01371A  EF0D  F09C         	goto	l3512
 47251   01371E                     u27360:
 47252   01371E  EFC7  F09B         	goto	l20413
 47253   013722                     l20407:
 47254                           
 47255                           ; BSR set to: 5
 47256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 47257   013722  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47258   013726  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47259   01372A  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47260   01372E  0E02               	movlw	2
 47261   013730  26DE               	addwf	postinc2,f,c
 47262   013732  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47263   013736  0E00               	movlw	0
 47264   013738  22DD               	addwfc	postdec2,f,c
 47265   01373A  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47266   01373E  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47267   013742  C4DE F59B          	movff	postinc2,??_vfpfcnvrt+2
 47268   013746  C4DD F59C          	movff	postdec2,??_vfpfcnvrt+3
 47269   01374A  C59B  F59E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
 47270   01374E  C59C  F59F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
 47271   013752  6BA0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
 47272   013754  6BA1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
 47273                           
 47274                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1457:      break;
 47275   013756  EFD2  F09B         	goto	l20415
 47276   01375A                     l20409:
 47277                           
 47278                           ; BSR set to: 5
 47279                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
 47280   01375A  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47281   01375E  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47282   013762  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47283   013766  0E04               	movlw	4
 47284   013768  26DE               	addwf	postinc2,f,c
 47285   01376A  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47286   01376E  0E00               	movlw	0
 47287   013770  22DD               	addwfc	postdec2,f,c
 47288   013772  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47289   013776  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47290   01377A  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 47291   01377E  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 47292   013782  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 47293   013786  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 47294                           
 47295                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1471:      break;
 47296   01378A  EFD2  F09B         	goto	l20415
 47297   01378E                     l20413:
 47298                           
 47299                           ; BSR set to: 5
 47300   01378E  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 47301                           
 47302                           ; Switch size 1, requested type "simple"
 47303                           ; Number of cases is 2, Range of values is 105 to 108
 47304                           ; switch strategies available:
 47305                           ; Name         Instructions Cycles
 47306                           ; simple_byte            7     4 (average)
 47307                           ;	Chosen strategy is simple_byte
 47308   013790  0A69               	xorlw	105	; case 105
 47309   013792  B4D8               	btfsc	status,2,c
 47310   013794  EF91  F09B         	goto	l20407
 47311   013798  0A05               	xorlw	5	; case 108
 47312   01379A  B4D8               	btfsc	status,2,c
 47313   01379C  EFAD  F09B         	goto	l20409
 47314   0137A0  EFD2  F09B         	goto	l20415
 47315   0137A4                     l20415:
 47316                           
 47317                           ; BSR set to: 5
 47318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 47319   0137A4  0E01               	movlw	1
 47320   0137A6  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 47321   0137A8  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 47322   0137AA  0E00               	movlw	0
 47323   0137AC  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 47324   0137AE  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 47325   0137B0  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47326   0137B4  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47327   0137B8  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 47328   0137BC  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 47329                           
 47330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 47331   0137C0  EFFB  F09B         	goto	l20423
 47332   0137C4                     l20417:
 47333                           
 47334                           ; BSR set to: 5
 47335                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint,*cp);;	Return value of _vfpfcnvrt is never used
 47336   0137C4  C593  F51E         	movff	vfpfcnvrt@fp,xtoa@fp
 47337   0137C8  C594  F51F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 47338   0137CC  C59E  F520         	movff	vfpfcnvrt@convarg,xtoa@d
 47339   0137D0  C59F  F521         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 47340   0137D4  C5A0  F522         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
 47341   0137D8  C5A1  F523         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
 47342   0137DC  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47343   0137E0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47344   0137E4                     	if	0	;tblptru may be non-zero
 47345   0137E4                     	endif
 47346   0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47347   0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 47348   0137E6  6EF8               	movwf	tblptru,c
 47349   0137E8                     	endif
 47350   0137E8  0008               	tblrd		*
 47351   0137EA  C4F5 F524          	movff	tablat,xtoa@x
 47352   0137EE  EC8F  F0DD         	call	_xtoa	;wreg free
 47353   0137F2  EF7B  F09D         	goto	l3511
 47354   0137F6                     l20423:
 47355                           
 47356                           ; BSR set to: 5
 47357   0137F6  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47358   0137FA  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47359   0137FE                     	if	0	;tblptru may be non-zero
 47360   0137FE                     	endif
 47361   0137FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47362   0137FE  0E00               	movlw	low (__mediumconst shr (0+16))
 47363   013800  6EF8               	movwf	tblptru,c
 47364   013802                     	endif
 47365   013802  0008               	tblrd		*
 47366   013804  50F5               	movf	tablat,w,c
 47367                           
 47368                           ; Switch size 1, requested type "simple"
 47369                           ; Number of cases is 2, Range of values is 88 to 120
 47370                           ; switch strategies available:
 47371                           ; Name         Instructions Cycles
 47372                           ; simple_byte            7     4 (average)
 47373                           ;	Chosen strategy is simple_byte
 47374   013806  0A58               	xorlw	88	; case 88
 47375   013808  B4D8               	btfsc	status,2,c
 47376   01380A  EFE2  F09B         	goto	l20417
 47377   01380E  0A20               	xorlw	32	; case 120
 47378   013810  B4D8               	btfsc	status,2,c
 47379   013812  EFE2  F09B         	goto	l20417
 47380   013816  EF0D  F09C         	goto	l3512
 47381   01381A                     l3512:
 47382                           
 47383                           ; BSR set to: 5
 47384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 47385   01381A  6B9D               	clrf	vfpfcnvrt@done& (0+255),b
 47386   01381C                     
 47387                           ; BSR set to: 5
 47388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 47389   01381C  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47390   013820  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47391   013824  C4DE F4F6          	movff	postinc2,tblptrl
 47392   013828  C4DD F4F7          	movff	postdec2,tblptrh
 47393   01382C                     	if	0	;tblptru may be non-zero
 47394   01382C                     	endif
 47395   01382C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47396   01382C  0E00               	movlw	low (__mediumconst shr (0+16))
 47397   01382E  6EF8               	movwf	tblptru,c
 47398   013830                     	endif
 47399   013830  0008               	tblrd		*
 47400   013832  50F5               	movf	tablat,w,c
 47401   013834  0A73               	xorlw	115
 47402   013836  A4D8               	btfss	status,2,c
 47403   013838  EF20  F09C         	goto	u27371
 47404   01383C  EF22  F09C         	goto	u27370
 47405   013840                     u27371:
 47406   013840  EF2D  F09C         	goto	l20431
 47407   013844                     u27370:
 47408   013844                     
 47409                           ; BSR set to: 5
 47410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 47411   013844  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47412   013848  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47413   01384C  2ADE               	incf	postinc2,f,c
 47414   01384E  0E00               	movlw	0
 47415   013850  22DD               	addwfc	postdec2,f,c
 47416   013852                     l20429:
 47417                           
 47418                           ; BSR set to: 5
 47419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 47420   013852  0E01               	movlw	1
 47421   013854  6F9D               	movwf	vfpfcnvrt@done& (0+255),b
 47422                           
 47423                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 47424   013856  EF83  F09C         	goto	l20441
 47425   01385A                     l20431:
 47426                           
 47427                           ; BSR set to: 5
 47428   01385A  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47429   01385E  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47430   013862  C4DE F4F6          	movff	postinc2,tblptrl
 47431   013866  C4DD F4F7          	movff	postdec2,tblptrh
 47432   01386A                     	if	0	;tblptru may be non-zero
 47433   01386A                     	endif
 47434   01386A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47435   01386A  0E00               	movlw	low (__mediumconst shr (0+16))
 47436   01386C  6EF8               	movwf	tblptru,c
 47437   01386E                     	endif
 47438   01386E  0008               	tblrd		*
 47439   013870  50F5               	movf	tablat,w,c
 47440   013872  0A6C               	xorlw	108
 47441   013874  A4D8               	btfss	status,2,c
 47442   013876  EF3F  F09C         	goto	u27381
 47443   01387A  EF41  F09C         	goto	u27380
 47444   01387E                     u27381:
 47445   01387E  EF83  F09C         	goto	l20441
 47446   013882                     u27380:
 47447   013882                     
 47448                           ; BSR set to: 5
 47449   013882  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47450   013886  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47451   01388A  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 47452   01388E  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 47453   013892  0E01               	movlw	1
 47454   013894  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 47455   013896  0E00               	movlw	0
 47456   013898  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 47457   01389A  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 47458   01389E  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 47459   0138A2                     	if	0	;tblptru may be non-zero
 47460   0138A2                     	endif
 47461   0138A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47462   0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 47463   0138A4  6EF8               	movwf	tblptru,c
 47464   0138A6                     	endif
 47465   0138A6  0008               	tblrd		*
 47466   0138A8  50F5               	movf	tablat,w,c
 47467   0138AA  0A6C               	xorlw	108
 47468   0138AC  A4D8               	btfss	status,2,c
 47469   0138AE  EF5B  F09C         	goto	u27391
 47470   0138B2  EF5D  F09C         	goto	u27390
 47471   0138B6                     u27391:
 47472   0138B6  EF83  F09C         	goto	l20441
 47473   0138BA                     u27390:
 47474   0138BA                     
 47475                           ; BSR set to: 5
 47476   0138BA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47477   0138BE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47478   0138C2  C4DE F599          	movff	postinc2,??_vfpfcnvrt
 47479   0138C6  C4DD F59A          	movff	postdec2,??_vfpfcnvrt+1
 47480   0138CA  0E02               	movlw	2
 47481   0138CC  2799               	addwf	??_vfpfcnvrt& (0+255),f,b
 47482   0138CE  0E00               	movlw	0
 47483   0138D0  239A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 47484   0138D2  C599  F4F6         	movff	??_vfpfcnvrt,tblptrl
 47485   0138D6  C59A  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 47486   0138DA                     	if	0	;tblptru may be non-zero
 47487   0138DA                     	endif
 47488   0138DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47489   0138DA  0E00               	movlw	low (__mediumconst shr (0+16))
 47490   0138DC  6EF8               	movwf	tblptru,c
 47491   0138DE                     	endif
 47492   0138DE  0008               	tblrd		*
 47493   0138E0  50F5               	movf	tablat,w,c
 47494   0138E2  0A73               	xorlw	115
 47495   0138E4  A4D8               	btfss	status,2,c
 47496   0138E6  EF77  F09C         	goto	u27401
 47497   0138EA  EF79  F09C         	goto	u27400
 47498   0138EE                     u27401:
 47499   0138EE  EF83  F09C         	goto	l20441
 47500   0138F2                     u27400:
 47501   0138F2                     
 47502                           ; BSR set to: 5
 47503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 47504   0138F2  0E03               	movlw	3
 47505   0138F4  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47506   0138F8  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47507   0138FC  26DE               	addwf	postinc2,f,c
 47508   0138FE  0E00               	movlw	0
 47509   013900  22DD               	addwfc	postdec2,f,c
 47510   013902  EF29  F09C         	goto	l20429
 47511   013906                     l20441:
 47512                           
 47513                           ; BSR set to: 5
 47514                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 47515   013906  519D               	movf	vfpfcnvrt@done& (0+255),w,b
 47516   013908  B4D8               	btfsc	status,2,c
 47517   01390A  EF89  F09C         	goto	u27411
 47518   01390E  EF8B  F09C         	goto	u27410
 47519   013912                     u27411:
 47520   013912  EFA7  F09C         	goto	l20447
 47521   013916                     u27410:
 47522   013916                     
 47523                           ; BSR set to: 5
 47524                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 47525   013916  C593  F50E         	movff	vfpfcnvrt@fp,stoa@fp
 47526   01391A  C594  F50F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 47527   01391E  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47528   013922  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47529   013926  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47530   01392A  0E02               	movlw	2
 47531   01392C  26DE               	addwf	postinc2,f,c
 47532   01392E  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47533   013932  0E00               	movlw	0
 47534   013934  22DD               	addwfc	postdec2,f,c
 47535   013936  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47536   01393A  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47537   01393E  C4DE F510          	movff	postinc2,stoa@s
 47538   013942  C4DD F511          	movff	postdec2,stoa@s+1
 47539   013946  ECF7  F0DB         	call	_stoa	;wreg free
 47540   01394A  EF7B  F09D         	goto	l3511
 47541   01394E                     l20447:
 47542                           
 47543                           ; BSR set to: 5
 47544                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 47545   01394E  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47546   013952  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47547   013956  C4DE F5A3          	movff	postinc2,vfpfcnvrt@cp
 47548   01395A  C4DD F5A4          	movff	postdec2,vfpfcnvrt@cp+1
 47549   01395E                     
 47550                           ; BSR set to: 5
 47551                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 47552   01395E  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47553   013962  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47554   013966                     	if	0	;tblptru may be non-zero
 47555   013966                     	endif
 47556   013966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47557   013966  0E00               	movlw	low (__mediumconst shr (0+16))
 47558   013968  6EF8               	movwf	tblptru,c
 47559   01396A                     	endif
 47560   01396A  0008               	tblrd		*
 47561   01396C  C4F5 F5A2          	movff	tablat,vfpfcnvrt@c
 47562                           
 47563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 47564   013970  EFC5  F09C         	goto	l20457
 47565   013974                     l20451:
 47566                           
 47567                           ; BSR set to: 5
 47568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 47569   013974  4BA3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 47570   013976  2BA4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 47571                           
 47572                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
 47573   013978  EFD4  F09C         	goto	l20459
 47574   01397C                     l20453:
 47575                           
 47576                           ; BSR set to: 5
 47577                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 47578   01397C  0E6C               	movlw	108
 47579   01397E  6FA2               	movwf	vfpfcnvrt@c& (0+255),b
 47580                           
 47581                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
 47582   013980  EFD4  F09C         	goto	l20459
 47583   013984                     l3532:
 47584                           
 47585                           ; BSR set to: 5
 47586                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 47587   013984  6BA2               	clrf	vfpfcnvrt@c& (0+255),b
 47588                           
 47589                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
 47590   013986  EFD4  F09C         	goto	l20459
 47591   01398A                     l20457:
 47592                           
 47593                           ; BSR set to: 5
 47594   01398A  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 47595                           
 47596                           ; Switch size 1, requested type "simple"
 47597                           ; Number of cases is 3, Range of values is 76 to 108
 47598                           ; switch strategies available:
 47599                           ; Name         Instructions Cycles
 47600                           ; simple_byte           10     6 (average)
 47601                           ;	Chosen strategy is simple_byte
 47602   01398C  0A4C               	xorlw	76	; case 76
 47603   01398E  B4D8               	btfsc	status,2,c
 47604   013990  EFBA  F09C         	goto	l20451
 47605   013994  0A2A               	xorlw	42	; case 102
 47606   013996  B4D8               	btfsc	status,2,c
 47607   013998  EFBE  F09C         	goto	l20453
 47608   01399C  0A0A               	xorlw	10	; case 108
 47609   01399E  B4D8               	btfsc	status,2,c
 47610   0139A0  EFBA  F09C         	goto	l20451
 47611   0139A4  EFC2  F09C         	goto	l3532
 47612   0139A8                     l20459:
 47613                           
 47614                           ; BSR set to: 5
 47615   0139A8  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47616   0139AC  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47617   0139B0                     	if	0	;tblptru may be non-zero
 47618   0139B0                     	endif
 47619   0139B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47620   0139B0  0E00               	movlw	low (__mediumconst shr (0+16))
 47621   0139B2  6EF8               	movwf	tblptru,c
 47622   0139B4                     	endif
 47623   0139B4  0008               	tblrd		*
 47624   0139B6  50F5               	movf	tablat,w,c
 47625   0139B8  0A66               	xorlw	102
 47626   0139BA  A4D8               	btfss	status,2,c
 47627   0139BC  EFE2  F09C         	goto	u27421
 47628   0139C0  EFE4  F09C         	goto	u27420
 47629   0139C4                     u27421:
 47630   0139C4  EF5C  F09D         	goto	l20479
 47631   0139C8                     u27420:
 47632   0139C8  EF1A  F09D         	goto	l20467
 47633   0139CC                     l20461:
 47634                           
 47635                           ; BSR set to: 5
 47636                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 47637   0139CC  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47638   0139D0  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47639   0139D4  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47640   0139D8  0E04               	movlw	4
 47641   0139DA  26DE               	addwf	postinc2,f,c
 47642   0139DC  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47643   0139E0  0E00               	movlw	0
 47644   0139E2  22DD               	addwfc	postdec2,f,c
 47645   0139E4  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47646   0139E8  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47647   0139EC  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 47648   0139F0  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 47649   0139F4  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 47650   0139F8  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 47651                           
 47652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
 47653   0139FC  EF25  F09D         	goto	l20469
 47654   013A00                     l20463:
 47655                           
 47656                           ; BSR set to: 5
 47657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 47658   013A00  C597  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 47659   013A04  C598  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 47660   013A08  C4DF F599          	movff	indf2,??_vfpfcnvrt
 47661   013A0C  0E04               	movlw	4
 47662   013A0E  26DE               	addwf	postinc2,f,c
 47663   013A10  C4DF F59A          	movff	indf2,??_vfpfcnvrt+1
 47664   013A14  0E00               	movlw	0
 47665   013A16  22DD               	addwfc	postdec2,f,c
 47666   013A18  C599  F4D9         	movff	??_vfpfcnvrt,fsr2l
 47667   013A1C  C59A  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 47668   013A20  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg
 47669   013A24  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+1
 47670   013A28  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+2
 47671   013A2C  C4DE F5A1          	movff	postinc2,vfpfcnvrt@convarg+3
 47672                           
 47673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
 47674   013A30  EF25  F09D         	goto	l20469
 47675   013A34                     l20467:
 47676                           
 47677                           ; BSR set to: 5
 47678   013A34  51A2               	movf	vfpfcnvrt@c& (0+255),w,b
 47679                           
 47680                           ; Switch size 1, requested type "simple"
 47681                           ; Number of cases is 2, Range of values is 76 to 108
 47682                           ; switch strategies available:
 47683                           ; Name         Instructions Cycles
 47684                           ; simple_byte            7     4 (average)
 47685                           ;	Chosen strategy is simple_byte
 47686   013A36  0A4C               	xorlw	76	; case 76
 47687   013A38  B4D8               	btfsc	status,2,c
 47688   013A3A  EF00  F09D         	goto	l20463
 47689   013A3E  0A20               	xorlw	32	; case 108
 47690   013A40  B4D8               	btfsc	status,2,c
 47691   013A42  EFE6  F09C         	goto	l20461
 47692   013A46  EF25  F09D         	goto	l20469
 47693   013A4A                     l20469:
 47694                           
 47695                           ; BSR set to: 5
 47696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 47697   013A4A  0E01               	movlw	1
 47698   013A4C  25A3               	addwf	vfpfcnvrt@cp& (0+255),w,b
 47699   013A4E  6F99               	movwf	??_vfpfcnvrt& (0+255),b
 47700   013A50  0E00               	movlw	0
 47701   013A52  21A4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 47702   013A54  6F9A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 47703   013A56  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47704   013A5A  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47705   013A5E  C599  F4DE         	movff	??_vfpfcnvrt,postinc2
 47706   013A62  C59A  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 47707                           
 47708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 47709   013A66  EF4E  F09D         	goto	l20477
 47710   013A6A                     l20471:
 47711                           
 47712                           ; BSR set to: 5
 47713                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 47714   013A6A  C593  F560         	movff	vfpfcnvrt@fp,efgtoa@fp
 47715   013A6E  C594  F561         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 47716   013A72  C59E  F562         	movff	vfpfcnvrt@convarg,efgtoa@f
 47717   013A76  C59F  F563         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 47718   013A7A  C5A0  F564         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 47719   013A7E  C5A1  F565         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 47720   013A82  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47721   013A86  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47722   013A8A                     	if	0	;tblptru may be non-zero
 47723   013A8A                     	endif
 47724   013A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47725   013A8A  0E00               	movlw	low (__mediumconst shr (0+16))
 47726   013A8C  6EF8               	movwf	tblptru,c
 47727   013A8E                     	endif
 47728   013A8E  0008               	tblrd		*
 47729   013A90  C4F5 F566          	movff	tablat,efgtoa@c
 47730   013A94  EC6C  F085         	call	_efgtoa	;wreg free
 47731   013A98  EF7B  F09D         	goto	l3511
 47732   013A9C                     l20477:
 47733                           
 47734                           ; BSR set to: 5
 47735   013A9C  C5A3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 47736   013AA0  C5A4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 47737   013AA4                     	if	0	;tblptru may be non-zero
 47738   013AA4                     	endif
 47739   013AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47740   013AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 47741   013AA6  6EF8               	movwf	tblptru,c
 47742   013AA8                     	endif
 47743   013AA8  0008               	tblrd		*
 47744   013AAA  50F5               	movf	tablat,w,c
 47745                           
 47746                           ; Switch size 1, requested type "simple"
 47747                           ; Number of cases is 1, Range of values is 102 to 102
 47748                           ; switch strategies available:
 47749                           ; Name         Instructions Cycles
 47750                           ; simple_byte            4     3 (average)
 47751                           ;	Chosen strategy is simple_byte
 47752   013AAC  0A66               	xorlw	102	; case 102
 47753   013AAE  B4D8               	btfsc	status,2,c
 47754   013AB0  EF35  F09D         	goto	l20471
 47755   013AB4  EF5C  F09D         	goto	l20479
 47756   013AB8                     l20479:
 47757                           
 47758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 47759   013AB8  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47760   013ABC  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47761   013AC0  2ADE               	incf	postinc2,f,c
 47762   013AC2  0E00               	movlw	0
 47763   013AC4  22DD               	addwfc	postdec2,f,c
 47764   013AC6  EF7B  F09D         	goto	l3511
 47765   013ACA                     l20483:
 47766                           
 47767                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 47768   013ACA  C595  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 47769   013ACE  C596  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 47770   013AD2  C4DE F4F6          	movff	postinc2,tblptrl
 47771   013AD6  C4DD F4F7          	movff	postdec2,tblptrh
 47772   013ADA                     	if	0	;tblptru may be non-zero
 47773   013ADA                     	endif
 47774   013ADA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47775   013ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 47776   013ADC  6EF8               	movwf	tblptru,c
 47777   013ADE                     	endif
 47778   013ADE  0008               	tblrd		*
 47779   013AE0  50F5               	movf	tablat,w,c
 47780   013AE2  6E05               	movwf	fputc@c^(0+1280),c
 47781   013AE4  6A06               	clrf	(fputc@c+1)^(0+1280),c
 47782   013AE6  C593  F507         	movff	vfpfcnvrt@fp,fputc@fp
 47783   013AEA  C594  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 47784   013AEE  EC45  F0F1         	call	_fputc	;wreg free
 47785   013AF2  EF5C  F09D         	goto	l20479
 47786   013AF6                     l3511:
 47787   013AF6  0012               	return		;funcret
 47788   013AF8                     __end_of_vfpfcnvrt:
 47789                           	callstack 0
 47790                           
 47791 ;; *************** function _xtoa *****************
 47792 ;; Defined at:
 47793 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 47794 ;; Parameters:    Size  Location     Type
 47795 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 47796 ;;		 -> sprintf@f(11), NULL(0), 
 47797 ;;  d               4   31[COMRAM] unsigned long 
 47798 ;;  x               1   35[COMRAM] unsigned char 
 47799 ;; Auto vars:     Size  Location     Type
 47800 ;;  i               2   48[COMRAM] int 
 47801 ;;  w               2   45[COMRAM] int 
 47802 ;;  p               2   43[COMRAM] int 
 47803 ;;  c               1   47[COMRAM] unsigned char 
 47804 ;;  a               1   40[COMRAM] unsigned char 
 47805 ;; Return value:  Size  Location     Type
 47806 ;;                  1    wreg      void 
 47807 ;; Registers used:
 47808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 47809 ;; Tracked objects:
 47810 ;;		On entry : 0/0
 47811 ;;		On exit  : 0/0
 47812 ;;		Unchanged: 0/0
 47813 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47814 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47815 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47817 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47818 ;;Total ram usage:       21 bytes
 47819 ;; Hardware stack levels used: 1
 47820 ;; Hardware stack levels required when called: 5
 47821 ;; This function calls:
 47822 ;;		_pad
 47823 ;; This function is called by:
 47824 ;;		_vfpfcnvrt
 47825 ;; This function uses a non-reentrant model
 47826 ;;
 47827                           
 47828                           	psect	text125
 47829   01BB1E                     __ptext125:
 47830                           	callstack 0
 47831   01BB1E                     _xtoa:
 47832                           	callstack 111
 47833   01BB1E                     
 47834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1052: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d, char x);C:\Program Files\Microchip\xc8\v2.50\pic\sources\
      +                          c99\common\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\do
      +                          prnt.c: 1061:  char a;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprn
      +                          t.c: 1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dop
      +                          rnt.c: 1065:  int p;
 47835   01BB1E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 47836   01BB20  EF94  F0DD         	goto	u26941
 47837   01BB24  EF96  F0DD         	goto	u26940
 47838   01BB28                     u26941:
 47839   01BB28  EF97  F0DD         	goto	l20157
 47840   01BB2C                     u26940:
 47841   01BB2C                     
 47842                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
 47843   01BB2C  925C               	bcf	_flags^(0+1280),1,c
 47844   01BB2E                     l20157:
 47845                           
 47846                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
 47847   01BB2E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 47848   01BB30  EF9E  F0DD         	goto	u26950
 47849   01BB34  EF9C  F0DD         	goto	u26951
 47850   01BB38                     u26951:
 47851   01BB38  EFA4  F0DD         	goto	l3459
 47852   01BB3C                     u26950:
 47853   01BB3C  0E00               	movlw	0
 47854   01BB3E  6E2D               	movwf	(xtoa@p+1)^(0+1280),c
 47855   01BB40  0E01               	movlw	1
 47856   01BB42  6E2C               	movwf	xtoa@p^(0+1280),c
 47857   01BB44  EFA8  F0DD         	goto	l3461
 47858   01BB48                     l3459:
 47859   01BB48  C55A  F52C         	movff	_prec,xtoa@p
 47860   01BB4C  C55B  F52D         	movff	_prec+1,xtoa@p+1
 47861   01BB50                     l3461:
 47862                           
 47863                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 47864   01BB50  C7B1  F52E         	movff	_width,xtoa@w
 47865   01BB54  C7B2  F52F         	movff	_width+1,xtoa@w+1
 47866   01BB58                     
 47867                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
 47868   01BB58  0E78               	movlw	120
 47869   01BB5A  1824               	xorwf	xtoa@x^(0+1280),w,c
 47870   01BB5C  B4D8               	btfsc	status,2,c
 47871   01BB5E  EFB3  F0DD         	goto	u26961
 47872   01BB62  EFB5  F0DD         	goto	u26960
 47873   01BB66                     u26961:
 47874   01BB66  EFBB  F0DD         	goto	l20165
 47875   01BB6A                     u26960:
 47876   01BB6A  0E00               	movlw	0
 47877   01BB6C  6E2B               	movwf	(_xtoa$4743+1)^(0+1280),c
 47878   01BB6E  0E41               	movlw	65
 47879   01BB70  6E2A               	movwf	_xtoa$4743^(0+1280),c
 47880   01BB72  EFBF  F0DD         	goto	l20167
 47881   01BB76                     l20165:
 47882   01BB76  0E00               	movlw	0
 47883   01BB78  6E2B               	movwf	(_xtoa$4743+1)^(0+1280),c
 47884   01BB7A  0E61               	movlw	97
 47885   01BB7C  6E2A               	movwf	_xtoa$4743^(0+1280),c
 47886   01BB7E                     l20167:
 47887   01BB7E  C52A  F529         	movff	_xtoa$4743,xtoa@a
 47888                           
 47889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 47890   01BB82  0E00               	movlw	0
 47891   01BB84  6E32               	movwf	(xtoa@i+1)^(0+1280),c
 47892   01BB86  0E4F               	movlw	79
 47893   01BB88  6E31               	movwf	xtoa@i^(0+1280),c
 47894   01BB8A                     
 47895                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 47896   01BB8A  0108               	movlb	8	; () banked
 47897   01BB8C  6B77               	clrf	(_dbuf+79)& (0+255),b
 47898                           
 47899                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 47900   01BB8E  EF07  F0DE         	goto	l20189
 47901   01BB92                     l20171:
 47902                           
 47903                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 47904   01BB92  0631               	decf	xtoa@i^(0+1280),f,c
 47905   01BB94  A0D8               	btfss	status,0,c
 47906   01BB96  0632               	decf	(xtoa@i+1)^(0+1280),f,c
 47907   01BB98                     
 47908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 47909   01BB98  5020               	movf	xtoa@d^(0+1280),w,c
 47910   01BB9A  0B0F               	andlw	15
 47911   01BB9C  6E30               	movwf	xtoa@c^(0+1280),c
 47912   01BB9E                     
 47913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 47914   01BB9E  0E0A               	movlw	10
 47915   01BBA0  6030               	cpfslt	xtoa@c^(0+1280),c
 47916   01BBA2  EFD5  F0DD         	goto	u26971
 47917   01BBA6  EFD7  F0DD         	goto	u26970
 47918   01BBAA                     u26971:
 47919   01BBAA  EFDB  F0DD         	goto	l20179
 47920   01BBAE                     u26970:
 47921   01BBAE                     
 47922                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 47923   01BBAE  0E30               	movlw	48
 47924   01BBB0  2630               	addwf	xtoa@c^(0+1280),f,c
 47925                           
 47926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 47927   01BBB2  EFDE  F0DD         	goto	l20181
 47928   01BBB6                     l20179:
 47929                           
 47930                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
 47931   01BBB6  5029               	movf	xtoa@a^(0+1280),w,c
 47932   01BBB8  0FF6               	addlw	246
 47933   01BBBA  2630               	addwf	xtoa@c^(0+1280),f,c
 47934   01BBBC                     l20181:
 47935                           
 47936                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 47937   01BBBC  0E28               	movlw	low _dbuf
 47938   01BBBE  2431               	addwf	xtoa@i^(0+1280),w,c
 47939   01BBC0  6ED9               	movwf	fsr2l,c
 47940   01BBC2  0E08               	movlw	high _dbuf
 47941   01BBC4  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 47942   01BBC6  6EDA               	movwf	fsr2h,c
 47943   01BBC8  C530  F4DF         	movff	xtoa@c,indf2
 47944   01BBCC                     
 47945                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 47946   01BBCC  062C               	decf	xtoa@p^(0+1280),f,c
 47947   01BBCE  A0D8               	btfss	status,0,c
 47948   01BBD0  062D               	decf	(xtoa@p+1)^(0+1280),f,c
 47949   01BBD2                     
 47950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 47951   01BBD2  062E               	decf	xtoa@w^(0+1280),f,c
 47952   01BBD4  A0D8               	btfss	status,0,c
 47953   01BBD6  062F               	decf	(xtoa@w+1)^(0+1280),f,c
 47954   01BBD8                     
 47955                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 47956   01BBD8  C520  F525         	movff	xtoa@d,??_xtoa
 47957   01BBDC  C521  F526         	movff	xtoa@d+1,??_xtoa+1
 47958   01BBE0  C522  F527         	movff	xtoa@d+2,??_xtoa+2
 47959   01BBE4  C523  F528         	movff	xtoa@d+3,??_xtoa+3
 47960   01BBE8  0E05               	movlw	5
 47961   01BBEA  EFFC  F0DD         	goto	u26980
 47962   01BBEE                     u26985:
 47963   01BBEE  90D8               	bcf	status,0,c
 47964   01BBF0  3228               	rrcf	(??_xtoa+3)^(0+1280),f,c
 47965   01BBF2  3227               	rrcf	(??_xtoa+2)^(0+1280),f,c
 47966   01BBF4  3226               	rrcf	(??_xtoa+1)^(0+1280),f,c
 47967   01BBF6  3225               	rrcf	??_xtoa^(0+1280),f,c
 47968   01BBF8                     u26980:
 47969   01BBF8  2EE8               	decfsz	wreg,f,c
 47970   01BBFA  EFF7  F0DD         	goto	u26985
 47971   01BBFE  C525  F520         	movff	??_xtoa,xtoa@d
 47972   01BC02  C526  F521         	movff	??_xtoa+1,xtoa@d+1
 47973   01BC06  C527  F522         	movff	??_xtoa+2,xtoa@d+2
 47974   01BC0A  C528  F523         	movff	??_xtoa+3,xtoa@d+3
 47975   01BC0E                     l20189:
 47976                           
 47977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 47978   01BC0E  BE32               	btfsc	(xtoa@i+1)^(0+1280),7,c
 47979   01BC10  EF13  F0DE         	goto	u26991
 47980   01BC14  5032               	movf	(xtoa@i+1)^(0+1280),w,c
 47981   01BC16  E109               	bnz	u26990
 47982   01BC18  0E02               	movlw	2
 47983   01BC1A  5C31               	subwf	xtoa@i^(0+1280),w,c
 47984   01BC1C  A0D8               	btfss	status,0,c
 47985   01BC1E  EF13  F0DE         	goto	u26991
 47986   01BC22  EF15  F0DE         	goto	u26990
 47987   01BC26                     u26991:
 47988   01BC26  EF41  F0DE         	goto	l20199
 47989   01BC2A                     u26990:
 47990   01BC2A  5020               	movf	xtoa@d^(0+1280),w,c
 47991   01BC2C  1021               	iorwf	(xtoa@d+1)^(0+1280),w,c
 47992   01BC2E  1022               	iorwf	(xtoa@d+2)^(0+1280),w,c
 47993   01BC30  1023               	iorwf	(xtoa@d+3)^(0+1280),w,c
 47994   01BC32  A4D8               	btfss	status,2,c
 47995   01BC34  EF1E  F0DE         	goto	u27001
 47996   01BC38  EF20  F0DE         	goto	u27000
 47997   01BC3C                     u27001:
 47998   01BC3C  EFC9  F0DD         	goto	l20171
 47999   01BC40                     u27000:
 48000   01BC40  BE2D               	btfsc	(xtoa@p+1)^(0+1280),7,c
 48001   01BC42  EF2D  F0DE         	goto	u27010
 48002   01BC46  502D               	movf	(xtoa@p+1)^(0+1280),w,c
 48003   01BC48  E106               	bnz	u27011
 48004   01BC4A  042C               	decf	xtoa@p^(0+1280),w,c
 48005   01BC4C  B0D8               	btfsc	status,0,c
 48006   01BC4E  EF2B  F0DE         	goto	u27011
 48007   01BC52  EF2D  F0DE         	goto	u27010
 48008   01BC56                     u27011:
 48009   01BC56  EFC9  F0DD         	goto	l20171
 48010   01BC5A                     u27010:
 48011   01BC5A  BE2F               	btfsc	(xtoa@w+1)^(0+1280),7,c
 48012   01BC5C  EF38  F0DE         	goto	u27021
 48013   01BC60  502F               	movf	(xtoa@w+1)^(0+1280),w,c
 48014   01BC62  E108               	bnz	u27020
 48015   01BC64  042E               	decf	xtoa@w^(0+1280),w,c
 48016   01BC66  A0D8               	btfss	status,0,c
 48017   01BC68  EF38  F0DE         	goto	u27021
 48018   01BC6C  EF3A  F0DE         	goto	u27020
 48019   01BC70                     u27021:
 48020   01BC70  EF41  F0DE         	goto	l20199
 48021   01BC74                     u27020:
 48022   01BC74  B25C               	btfsc	_flags^(0+1280),1,c
 48023   01BC76  EF3F  F0DE         	goto	u27031
 48024   01BC7A  EF41  F0DE         	goto	u27030
 48025   01BC7E                     u27031:
 48026   01BC7E  EFC9  F0DD         	goto	l20171
 48027   01BC82                     u27030:
 48028   01BC82                     l20199:
 48029                           
 48030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 48031   01BC82  C51E  F515         	movff	xtoa@fp,pad@fp
 48032   01BC86  C51F  F516         	movff	xtoa@fp+1,pad@fp+1
 48033   01BC8A  0E28               	movlw	low _dbuf
 48034   01BC8C  2431               	addwf	xtoa@i^(0+1280),w,c
 48035   01BC8E  6E17               	movwf	pad@buf^(0+1280),c
 48036   01BC90  0E08               	movlw	high _dbuf
 48037   01BC92  2032               	addwfc	(xtoa@i+1)^(0+1280),w,c
 48038   01BC94  6E18               	movwf	(pad@buf+1)^(0+1280),c
 48039   01BC96  C52E  F519         	movff	xtoa@w,pad@p
 48040   01BC9A  C52F  F51A         	movff	xtoa@w+1,pad@p+1
 48041   01BC9E  EC1F  F0F6         	call	_pad	;wreg free
 48042   01BCA2  0012               	return		;funcret
 48043   01BCA4                     __end_of_xtoa:
 48044                           	callstack 0
 48045                           
 48046 ;; *************** function _stoa *****************
 48047 ;; Defined at:
 48048 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 48049 ;; Parameters:    Size  Location     Type
 48050 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 48051 ;;		 -> sprintf@f(11), NULL(0), 
 48052 ;;  s               2   15[COMRAM] PTR unsigned char 
 48053 ;;		 -> tmp_buf$REGDP(2), tmp_buf$REGDB(1), tmp_buf$REGPB(1), tmp_buf$REGPSR(1), 
 48054 ;;		 -> tmp_buf$REGPC(2), tmp_buf$REGSP(2), tmp_buf$REGY(2), tmp_buf$REGX(2), 
 48055 ;;		 -> tmp_buf$REGA(2), tmp_buf$picif_p(4), tmp_buf$op2(1), tmp_buf$op1(1), 
 48056 ;;		 -> tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), tmp_buf$cstart_addr(2), tmp_buf$load_p(4), 
 48057 ;;		 -> tmp_buf$mezID(8), rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), 
 48058 ;;		 -> in_fl$sect(4), rom_fl$dir_sect(4), in_fl$dir_sect(4), sdj$sect(4), 
 48059 ;;		 -> djo$sect(4), djn$sect(4), dir$sect(4), pb$idx(2), 
 48060 ;;		 -> fs$win(512), fs$winsect(4), fs$fatbase(4), fs$volbase(4), 
 48061 ;;		 -> fs$csize(2), fs$pdrv(1), ?_printf(2), ?_sprintf(2), 
 48062 ;;		 -> STR_195(5), STR_192(5), STR_175(17), STR_173(17), 
 48063 ;;		 -> in_fl$obj$fs$objsize(4), in_fl(546), STR_133(5), fin_name(13), 
 48064 ;;		 -> scan_files@fno(22), rom_fl$obj$fs$objsize(4), rom_fl(546), line_buf(81), 
 48065 ;;		 -> binv(42), STR_54(8), clk_fs(4), STR_53(8), 
 48066 ;;		 -> STR_52(11), STR_51(11), STR_50(11), STR_49(11), 
 48067 ;;		 -> STR_48(43), STR_44(5), STR_43(5), tmp_buf(512), 
 48068 ;;		 -> STR_40(6), STR_36(6), f_printf@pb(70), f_puts@pb(70), 
 48069 ;;		 -> f_putc@pb(70), pb$fp(2), fno$fname(13), f_getcwd@fno(22), 
 48070 ;;		 -> dj$sect(4), STR_28(15), NULL(0), STR_26(1), 
 48071 ;;		 -> util_addrdump@chars(17), util_hexdump@chars(17), STR_16(6), STR_13(6), 
 48072 ;;		 -> STR_5(1), disk_initialize@buf(128), 
 48073 ;; Auto vars:     Size  Location     Type
 48074 ;;  l               2   25[COMRAM] int 
 48075 ;;  cp              2   23[COMRAM] PTR unsigned char 
 48076 ;;		 -> tmp_buf$REGDP(2), tmp_buf$REGDB(1), tmp_buf$REGPB(1), tmp_buf$REGPSR(1), 
 48077 ;;		 -> tmp_buf$REGPC(2), tmp_buf$REGSP(2), tmp_buf$REGY(2), tmp_buf$REGX(2), 
 48078 ;;		 -> tmp_buf$REGA(2), tmp_buf$picif_p(4), tmp_buf$op2(1), tmp_buf$op1(1), 
 48079 ;;		 -> tmp_buf$direct_page(2), tmp_buf$wstart_addr(2), tmp_buf$cstart_addr(2), tmp_buf$load_p(4), 
 48080 ;;		 -> tmp_buf$mezID(8), rom_fl$buf(512), in_fl$buf(512), rom_fl$sect(4), 
 48081 ;;		 -> in_fl$sect(4), rom_fl$dir_sect(4), in_fl$dir_sect(4), sdj$sect(4), 
 48082 ;;		 -> djo$sect(4), djn$sect(4), dir$sect(4), pb$idx(2), 
 48083 ;;		 -> fs$win(512), fs$winsect(4), fs$fatbase(4), fs$volbase(4), 
 48084 ;;		 -> fs$csize(2), fs$pdrv(1), ?_printf(2), STR_206(7), 
 48085 ;;		 -> ?_sprintf(2), STR_195(5), STR_192(5), STR_175(17), 
 48086 ;;		 -> STR_173(17), in_fl$obj$fs$objsize(4), in_fl(546), STR_133(5), 
 48087 ;;		 -> fin_name(13), scan_files@fno(22), rom_fl$obj$fs$objsize(4), rom_fl(546), 
 48088 ;;		 -> line_buf(81), binv(42), STR_54(8), clk_fs(4), 
 48089 ;;		 -> STR_53(8), STR_52(11), STR_51(11), STR_50(11), 
 48090 ;;		 -> STR_49(11), STR_48(43), STR_44(5), STR_43(5), 
 48091 ;;		 -> tmp_buf(512), STR_40(6), STR_36(6), f_printf@pb(70), 
 48092 ;;		 -> f_puts@pb(70), f_putc@pb(70), pb$fp(2), fno$fname(13), 
 48093 ;;		 -> f_getcwd@fno(22), dj$sect(4), STR_28(15), NULL(0), 
 48094 ;;		 -> STR_26(1), util_addrdump@chars(17), util_hexdump@chars(17), STR_16(6), 
 48095 ;;		 -> STR_13(6), STR_5(1), disk_initialize@buf(128), 
 48096 ;;  w               2   21[COMRAM] int 
 48097 ;;  p               2   19[COMRAM] int 
 48098 ;; Return value:  Size  Location     Type
 48099 ;;                  1    wreg      void 
 48100 ;; Registers used:
 48101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 48102 ;; Tracked objects:
 48103 ;;		On entry : 0/0
 48104 ;;		On exit  : 0/0
 48105 ;;		Unchanged: 0/0
 48106 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48108 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48110 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48111 ;;Total ram usage:       14 bytes
 48112 ;; Hardware stack levels used: 1
 48113 ;; Hardware stack levels required when called: 3
 48114 ;; This function calls:
 48115 ;;		_fputc
 48116 ;; This function is called by:
 48117 ;;		_vfpfcnvrt
 48118 ;; This function uses a non-reentrant model
 48119 ;;
 48120                           
 48121                           	psect	text126
 48122   01B7EE                     __ptext126:
 48123                           	callstack 0
 48124   01B7EE                     _stoa:
 48125                           	callstack 113
 48126   01B7EE                     
 48127                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 48128   01B7EE  C510  F518         	movff	stoa@s,stoa@cp
 48129   01B7F2  C511  F519         	movff	stoa@s+1,stoa@cp+1
 48130                           
 48131                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 48132   01B7F6  5018               	movf	stoa@cp^(0+1280),w,c
 48133   01B7F8  1019               	iorwf	(stoa@cp+1)^(0+1280),w,c
 48134   01B7FA  A4D8               	btfss	status,2,c
 48135   01B7FC  EF02  F0DC         	goto	u26831
 48136   01B800  EF04  F0DC         	goto	u26830
 48137   01B804                     u26831:
 48138   01B804  EF08  F0DC         	goto	l20119
 48139   01B808                     u26830:
 48140   01B808                     
 48141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 48142   01B808  0E70               	movlw	low STR_206
 48143   01B80A  6E18               	movwf	stoa@cp^(0+1280),c
 48144   01B80C  0EFF               	movlw	high STR_206
 48145   01B80E  6E19               	movwf	(stoa@cp+1)^(0+1280),c
 48146   01B810                     l20119:
 48147                           
 48148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 48149   01B810  0E00               	movlw	0
 48150   01B812  6E1B               	movwf	(stoa@l+1)^(0+1280),c
 48151   01B814  0E00               	movlw	0
 48152   01B816  6E1A               	movwf	stoa@l^(0+1280),c
 48153   01B818  EF10  F0DC         	goto	l20123
 48154   01B81C                     l20121:
 48155   01B81C  4A1A               	infsnz	stoa@l^(0+1280),f,c
 48156   01B81E  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 48157   01B820                     l20123:
 48158   01B820  501A               	movf	stoa@l^(0+1280),w,c
 48159   01B822  2418               	addwf	stoa@cp^(0+1280),w,c
 48160   01B824  6E12               	movwf	??_stoa^(0+1280),c
 48161   01B826  501B               	movf	(stoa@l+1)^(0+1280),w,c
 48162   01B828  2019               	addwfc	(stoa@cp+1)^(0+1280),w,c
 48163   01B82A  6E13               	movwf	(??_stoa+1)^(0+1280),c
 48164   01B82C  C512  F4F6         	movff	??_stoa,tblptrl
 48165   01B830  C513  F4F7         	movff	??_stoa+1,tblptrh
 48166   01B834  0E00               	movlw	low (__mediumconst shr (0+16))
 48167   01B836  6EF8               	movwf	tblptru,c
 48168   01B838  0E3F               	movlw	(high __ramtop+-1)
 48169   01B83A  64F7               	cpfsgt	tblptrh,c
 48170   01B83C  D003               	bra	u26847
 48171   01B83E  0008               	tblrd		*
 48172   01B840  50F5               	movf	tablat,w,c
 48173   01B842  D005               	bra	u26840
 48174   01B844                     u26847:
 48175   01B844  C4F6 F4E9          	movff	tblptrl,fsr0l
 48176   01B848  C4F7 F4EA          	movff	tblptrh,fsr0h
 48177   01B84C  50EF               	movf	indf0,w,c
 48178   01B84E                     u26840:
 48179   01B84E  0900               	iorlw	0
 48180   01B850  A4D8               	btfss	status,2,c
 48181   01B852  EF2D  F0DC         	goto	u26851
 48182   01B856  EF2F  F0DC         	goto	u26850
 48183   01B85A                     u26851:
 48184   01B85A  EF0E  F0DC         	goto	l20121
 48185   01B85E                     u26850:
 48186   01B85E                     
 48187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 48188   01B85E  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 48189   01B860  EF34  F0DC         	goto	u26861
 48190   01B864  EF36  F0DC         	goto	u26860
 48191   01B868                     u26861:
 48192   01B868  EF49  F0DC         	goto	l3442
 48193   01B86C                     u26860:
 48194   01B86C  501A               	movf	stoa@l^(0+1280),w,c
 48195   01B86E  5C5A               	subwf	_prec^(0+1280),w,c
 48196   01B870  505B               	movf	(_prec+1)^(0+1280),w,c
 48197   01B872  0A80               	xorlw	128
 48198   01B874  6E12               	movwf	??_stoa^(0+1280),c
 48199   01B876  501B               	movf	(stoa@l+1)^(0+1280),w,c
 48200   01B878  0A80               	xorlw	128
 48201   01B87A  5812               	subwfb	??_stoa^(0+1280),w,c
 48202   01B87C  B0D8               	btfsc	status,0,c
 48203   01B87E  EF43  F0DC         	goto	u26871
 48204   01B882  EF45  F0DC         	goto	u26870
 48205   01B886                     u26871:
 48206   01B886  EF49  F0DC         	goto	l3442
 48207   01B88A                     u26870:
 48208   01B88A                     
 48209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 48210   01B88A  C55A  F51A         	movff	_prec,stoa@l
 48211   01B88E  C55B  F51B         	movff	_prec+1,stoa@l+1
 48212   01B892                     l3442:
 48213                           
 48214                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 48215   01B892  C51A  F514         	movff	stoa@l,stoa@p
 48216   01B896  C51B  F515         	movff	stoa@l+1,stoa@p+1
 48217                           
 48218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 48219   01B89A  C7B1  F516         	movff	_width,stoa@w
 48220   01B89E  C7B2  F517         	movff	_width+1,stoa@w+1
 48221                           
 48222                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 48223   01B8A2  B05C               	btfsc	_flags^(0+1280),0,c
 48224   01B8A4  EF56  F0DC         	goto	u26881
 48225   01B8A8  EF58  F0DC         	goto	u26880
 48226   01B8AC                     u26881:
 48227   01B8AC  EF94  F0DC         	goto	l20143
 48228   01B8B0                     u26880:
 48229   01B8B0  EF66  F0DC         	goto	l20137
 48230   01B8B4                     l20133:
 48231                           
 48232                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 48233   01B8B4  0E00               	movlw	0
 48234   01B8B6  6E06               	movwf	(fputc@c+1)^(0+1280),c
 48235   01B8B8  0E20               	movlw	32
 48236   01B8BA  6E05               	movwf	fputc@c^(0+1280),c
 48237   01B8BC  C50E  F507         	movff	stoa@fp,fputc@fp
 48238   01B8C0  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 48239   01B8C4  EC45  F0F1         	call	_fputc	;wreg free
 48240   01B8C8                     
 48241                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 48242   01B8C8  4A1A               	infsnz	stoa@l^(0+1280),f,c
 48243   01B8CA  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 48244   01B8CC                     l20137:
 48245                           
 48246                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 48247   01B8CC  5016               	movf	stoa@w^(0+1280),w,c
 48248   01B8CE  5C1A               	subwf	stoa@l^(0+1280),w,c
 48249   01B8D0  501B               	movf	(stoa@l+1)^(0+1280),w,c
 48250   01B8D2  0A80               	xorlw	128
 48251   01B8D4  6E12               	movwf	??_stoa^(0+1280),c
 48252   01B8D6  5017               	movf	(stoa@w+1)^(0+1280),w,c
 48253   01B8D8  0A80               	xorlw	128
 48254   01B8DA  5812               	subwfb	??_stoa^(0+1280),w,c
 48255   01B8DC  A0D8               	btfss	status,0,c
 48256   01B8DE  EF73  F0DC         	goto	u26891
 48257   01B8E2  EF75  F0DC         	goto	u26890
 48258   01B8E6                     u26891:
 48259   01B8E6  EF5A  F0DC         	goto	l20133
 48260   01B8EA                     u26890:
 48261   01B8EA  EF94  F0DC         	goto	l20143
 48262   01B8EE                     l20139:
 48263                           
 48264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 48265   01B8EE  C518  F4F6         	movff	stoa@cp,tblptrl
 48266   01B8F2  C519  F4F7         	movff	stoa@cp+1,tblptrh
 48267   01B8F6  0E00               	movlw	low (__mediumconst shr (0+16))
 48268   01B8F8  6EF8               	movwf	tblptru,c
 48269   01B8FA  0E3F               	movlw	(high __ramtop+-1)
 48270   01B8FC  64F7               	cpfsgt	tblptrh,c
 48271   01B8FE  D003               	bra	u26907
 48272   01B900  0008               	tblrd		*
 48273   01B902  50F5               	movf	tablat,w,c
 48274   01B904  D005               	bra	u26900
 48275   01B906                     u26907:
 48276   01B906  C4F6 F4E9          	movff	tblptrl,fsr0l
 48277   01B90A  C4F7 F4EA          	movff	tblptrh,fsr0h
 48278   01B90E  50EF               	movf	indf0,w,c
 48279   01B910                     u26900:
 48280   01B910  6E12               	movwf	??_stoa^(0+1280),c
 48281   01B912  5012               	movf	??_stoa^(0+1280),w,c
 48282   01B914  6E05               	movwf	fputc@c^(0+1280),c
 48283   01B916  6A06               	clrf	(fputc@c+1)^(0+1280),c
 48284   01B918  C50E  F507         	movff	stoa@fp,fputc@fp
 48285   01B91C  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 48286   01B920  EC45  F0F1         	call	_fputc	;wreg free
 48287   01B924                     
 48288                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 48289   01B924  4A18               	infsnz	stoa@cp^(0+1280),f,c
 48290   01B926  2A19               	incf	(stoa@cp+1)^(0+1280),f,c
 48291   01B928                     l20143:
 48292                           
 48293                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 48294   01B928  0614               	decf	stoa@p^(0+1280),f,c
 48295   01B92A  A0D8               	btfss	status,0,c
 48296   01B92C  0615               	decf	(stoa@p+1)^(0+1280),f,c
 48297   01B92E  2814               	incf	stoa@p^(0+1280),w,c
 48298   01B930  E106               	bnz	u26911
 48299   01B932  2815               	incf	(stoa@p+1)^(0+1280),w,c
 48300   01B934  A4D8               	btfss	status,2,c
 48301   01B936  EF9F  F0DC         	goto	u26911
 48302   01B93A  EFA1  F0DC         	goto	u26910
 48303   01B93E                     u26911:
 48304   01B93E  EF77  F0DC         	goto	l20139
 48305   01B942                     u26910:
 48306   01B942                     
 48307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 48308   01B942  A05C               	btfss	_flags^(0+1280),0,c
 48309   01B944  EFA6  F0DC         	goto	u26921
 48310   01B948  EFA8  F0DC         	goto	u26920
 48311   01B94C                     u26921:
 48312   01B94C  EFC5  F0DC         	goto	l3454
 48313   01B950                     u26920:
 48314   01B950  EFB6  F0DC         	goto	l20151
 48315   01B954                     l20147:
 48316                           
 48317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 48318   01B954  0E00               	movlw	0
 48319   01B956  6E06               	movwf	(fputc@c+1)^(0+1280),c
 48320   01B958  0E20               	movlw	32
 48321   01B95A  6E05               	movwf	fputc@c^(0+1280),c
 48322   01B95C  C50E  F507         	movff	stoa@fp,fputc@fp
 48323   01B960  C50F  F508         	movff	stoa@fp+1,fputc@fp+1
 48324   01B964  EC45  F0F1         	call	_fputc	;wreg free
 48325   01B968                     
 48326                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 48327   01B968  4A1A               	infsnz	stoa@l^(0+1280),f,c
 48328   01B96A  2A1B               	incf	(stoa@l+1)^(0+1280),f,c
 48329   01B96C                     l20151:
 48330                           
 48331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 48332   01B96C  5016               	movf	stoa@w^(0+1280),w,c
 48333   01B96E  5C1A               	subwf	stoa@l^(0+1280),w,c
 48334   01B970  501B               	movf	(stoa@l+1)^(0+1280),w,c
 48335   01B972  0A80               	xorlw	128
 48336   01B974  6E12               	movwf	??_stoa^(0+1280),c
 48337   01B976  5017               	movf	(stoa@w+1)^(0+1280),w,c
 48338   01B978  0A80               	xorlw	128
 48339   01B97A  5812               	subwfb	??_stoa^(0+1280),w,c
 48340   01B97C  A0D8               	btfss	status,0,c
 48341   01B97E  EFC3  F0DC         	goto	u26931
 48342   01B982  EFC5  F0DC         	goto	u26930
 48343   01B986                     u26931:
 48344   01B986  EFAA  F0DC         	goto	l20147
 48345   01B98A                     u26930:
 48346   01B98A                     l3454:
 48347   01B98A  0012               	return		;funcret
 48348   01B98C                     __end_of_stoa:
 48349                           	callstack 0
 48350                           
 48351 ;; *************** function _read_prec_or_width *****************
 48352 ;; Defined at:
 48353 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 48354 ;; Parameters:    Size  Location     Type
 48355 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 48356 ;;		 -> vfprintf@cfmt(2), 
 48357 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 48358 ;;		 -> printf@ap(2), sprintf@ap(2), 
 48359 ;; Auto vars:     Size  Location     Type
 48360 ;;  c               1    9[COMRAM] unsigned char 
 48361 ;;  n               2   10[COMRAM] int 
 48362 ;; Return value:  Size  Location     Type
 48363 ;;                  2    3[COMRAM] int 
 48364 ;; Registers used:
 48365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48366 ;; Tracked objects:
 48367 ;;		On entry : 0/0
 48368 ;;		On exit  : 0/0
 48369 ;;		Unchanged: 0/0
 48370 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48374 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48375 ;;Total ram usage:        9 bytes
 48376 ;; Hardware stack levels used: 1
 48377 ;; Hardware stack levels required when called: 1
 48378 ;; This function calls:
 48379 ;;		Nothing
 48380 ;; This function is called by:
 48381 ;;		_vfpfcnvrt
 48382 ;; This function uses a non-reentrant model
 48383 ;;
 48384                           
 48385                           	psect	text127
 48386   01E028                     __ptext127:
 48387                           	callstack 0
 48388   01E028                     _read_prec_or_width:
 48389                           	callstack 115
 48390   01E028                     
 48391                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 48392   01E028  0E00               	movlw	0
 48393   01E02A  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 48394   01E02C  0E00               	movlw	0
 48395   01E02E  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 48396   01E030                     
 48397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 48398   01E030  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 48399   01E034  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 48400   01E038  C4DE F4F6          	movff	postinc2,tblptrl
 48401   01E03C  C4DD F4F7          	movff	postdec2,tblptrh
 48402   01E040                     	if	0	;tblptru may be non-zero
 48403   01E040                     	endif
 48404   01E040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48405   01E040  0E00               	movlw	low (__mediumconst shr (0+16))
 48406   01E042  6EF8               	movwf	tblptru,c
 48407   01E044                     	endif
 48408   01E044  0008               	tblrd		*
 48409   01E046  50F5               	movf	tablat,w,c
 48410   01E048  0A2A               	xorlw	42
 48411   01E04A  A4D8               	btfss	status,2,c
 48412   01E04C  EF2A  F0F0         	goto	u27041
 48413   01E050  EF2C  F0F0         	goto	u27040
 48414   01E054                     u27041:
 48415   01E054  EF5F  F0F0         	goto	l20213
 48416   01E058                     u27040:
 48417   01E058                     
 48418                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 48419   01E058  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 48420   01E05C  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 48421   01E060  2ADE               	incf	postinc2,f,c
 48422   01E062  0E00               	movlw	0
 48423   01E064  22DD               	addwfc	postdec2,f,c
 48424                           
 48425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 48426   01E066  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 48427   01E06A  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 48428   01E06E  C4DF F508          	movff	indf2,??_read_prec_or_width
 48429   01E072  0E02               	movlw	2
 48430   01E074  26DE               	addwf	postinc2,f,c
 48431   01E076  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 48432   01E07A  0E00               	movlw	0
 48433   01E07C  22DD               	addwfc	postdec2,f,c
 48434   01E07E  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 48435   01E082  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 48436   01E086  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 48437   01E08A  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 48438                           
 48439                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 48440   01E08E  EF75  F0F0         	goto	l3479
 48441   01E092                     l20209:
 48442                           
 48443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 48444   01E092  0E0A               	movlw	10
 48445   01E094  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 48446   01E096  C4F3 F508          	movff	prodl,??_read_prec_or_width
 48447   01E09A  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 48448   01E09E  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 48449   01E0A0  50F3               	movf	prodl,w,c
 48450   01E0A2  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 48451   01E0A4  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 48452   01E0A6  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 48453   01E0A8  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 48454   01E0AA  0E00               	movlw	0
 48455   01E0AC  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 48456   01E0AE  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 48457   01E0B0                     
 48458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 48459   01E0B0  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 48460   01E0B4  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 48461   01E0B8  2ADE               	incf	postinc2,f,c
 48462   01E0BA  0E00               	movlw	0
 48463   01E0BC  22DD               	addwfc	postdec2,f,c
 48464   01E0BE                     l20213:
 48465                           
 48466                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 48467   01E0BE  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 48468   01E0C2  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 48469   01E0C6  C4DE F4F6          	movff	postinc2,tblptrl
 48470   01E0CA  C4DD F4F7          	movff	postdec2,tblptrh
 48471   01E0CE                     	if	0	;tblptru may be non-zero
 48472   01E0CE                     	endif
 48473   01E0CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48474   01E0CE  0E00               	movlw	low (__mediumconst shr (0+16))
 48475   01E0D0  6EF8               	movwf	tblptru,c
 48476   01E0D2                     	endif
 48477   01E0D2  0008               	tblrd		*
 48478   01E0D4  50F5               	movf	tablat,w,c
 48479   01E0D6  0FD0               	addlw	208
 48480   01E0D8  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 48481   01E0DA  0E09               	movlw	9
 48482   01E0DC  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 48483   01E0DE  EF73  F0F0         	goto	u27051
 48484   01E0E2  EF75  F0F0         	goto	u27050
 48485   01E0E6                     u27051:
 48486   01E0E6  EF49  F0F0         	goto	l20209
 48487   01E0EA                     u27050:
 48488   01E0EA                     l3479:
 48489                           
 48490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 48491   01E0EA  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 48492   01E0EE  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 48493   01E0F2  0012               	return		;funcret
 48494   01E0F4                     __end_of_read_prec_or_width:
 48495                           	callstack 0
 48496                           
 48497 ;; *************** function _efgtoa *****************
 48498 ;; Defined at:
 48499 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 48500 ;; Parameters:    Size  Location     Type
 48501 ;;  fp              2    0[BANK5 ] PTR struct _IO_FILE
 48502 ;;		 -> sprintf@f(11), NULL(0), 
 48503 ;;  f               4    2[BANK5 ] PTR struct _IO_FILE
 48504 ;;  c               1    6[BANK5 ] unsigned char 
 48505 ;; Auto vars:     Size  Location     Type
 48506 ;;  u               4   47[BANK5 ] struct flui
 48507 ;;  g               4   41[BANK5 ] struct flui
 48508 ;;  l               4   34[BANK5 ] struct flui
 48509 ;;  h               4   30[BANK5 ] struct flui
 48510 ;;  ou              4   24[BANK5 ] struct flui
 48511 ;;  n               2   45[BANK5 ] int 
 48512 ;;  i               2   38[BANK5 ] int 
 48513 ;;  w               2   28[BANK5 ] int 
 48514 ;;  e               2   22[BANK5 ] int 
 48515 ;;  m               2   20[BANK5 ] int 
 48516 ;;  d               2   18[BANK5 ] int 
 48517 ;;  t               2   11[BANK5 ] int 
 48518 ;;  p               2    9[BANK5 ] int 
 48519 ;;  ne              2    7[BANK5 ] int 
 48520 ;;  sign            1   40[BANK5 ] unsigned char 
 48521 ;;  nmode           1   17[BANK5 ] unsigned char 
 48522 ;;  mode            1   16[BANK5 ] unsigned char 
 48523 ;;  pp              1   15[BANK5 ] unsigned char 
 48524 ;;  esign           1    0        unsigned char 
 48525 ;; Return value:  Size  Location     Type
 48526 ;;                  1    wreg      void 
 48527 ;; Registers used:
 48528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48529 ;; Tracked objects:
 48530 ;;		On entry : 0/0
 48531 ;;		On exit  : 0/0
 48532 ;;		Unchanged: 0/0
 48533 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48534 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48535 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48537 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48538 ;;Total ram usage:       53 bytes
 48539 ;; Hardware stack levels used: 1
 48540 ;; Hardware stack levels required when called: 5
 48541 ;; This function calls:
 48542 ;;		___fladd
 48543 ;;		___fldiv
 48544 ;;		___fleq
 48545 ;;		___flge
 48546 ;;		___flmul
 48547 ;;		___flneg
 48548 ;;		___flsub
 48549 ;;		___fltol
 48550 ;;		___fpclassifyf
 48551 ;;		_floorf
 48552 ;;		_labs
 48553 ;;		_memcpy
 48554 ;;		_pad
 48555 ;;		_strcpy
 48556 ;; This function is called by:
 48557 ;;		_vfpfcnvrt
 48558 ;; This function uses a non-reentrant model
 48559 ;;
 48560                           
 48561                           	psect	text128
 48562   010AD8                     __ptext128:
 48563                           	callstack 0
 48564   010AD8                     _efgtoa:
 48565                           	callstack 111
 48566   010AD8                     
 48567                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 48568   010AD8  0105               	movlb	5	; () banked
 48569   010ADA  6B88               	clrf	efgtoa@sign& (0+255),b
 48570                           
 48571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 48572   010ADC  C562  F589         	movff	efgtoa@f,efgtoa@g
 48573   010AE0  C563  F58A         	movff	efgtoa@f+1,efgtoa@g+1
 48574   010AE4  C564  F58B         	movff	efgtoa@f+2,efgtoa@g+2
 48575   010AE8  C565  F58C         	movff	efgtoa@f+3,efgtoa@g+3
 48576   010AEC                     
 48577                           ; BSR set to: 5
 48578                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 48579   010AEC  BF8C               	btfsc	(efgtoa@g+3)& (0+255),7,b
 48580   010AEE  EF7D  F085         	goto	u26480
 48581   010AF2  EF7B  F085         	goto	u26481
 48582   010AF6                     u26481:
 48583   010AF6  EF91  F085         	goto	l19891
 48584   010AFA                     u26480:
 48585   010AFA                     
 48586                           ; BSR set to: 5
 48587                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 48588   010AFA  0E01               	movlw	1
 48589   010AFC  6F88               	movwf	efgtoa@sign& (0+255),b
 48590   010AFE                     
 48591                           ; BSR set to: 5
 48592                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 48593   010AFE  C589  F504         	movff	efgtoa@g,___flneg@f1
 48594   010B02  C58A  F505         	movff	efgtoa@g+1,___flneg@f1+1
 48595   010B06  C58B  F506         	movff	efgtoa@g+2,___flneg@f1+2
 48596   010B0A  C58C  F507         	movff	efgtoa@g+3,___flneg@f1+3
 48597   010B0E  EC30  F0FF         	call	___flneg	;wreg free
 48598   010B12  C504  F589         	movff	?___flneg,efgtoa@g
 48599   010B16  C505  F58A         	movff	?___flneg+1,efgtoa@g+1
 48600   010B1A  C506  F58B         	movff	?___flneg+2,efgtoa@g+2
 48601   010B1E  C507  F58C         	movff	?___flneg+3,efgtoa@g+3
 48602   010B22                     l19891:
 48603                           
 48604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 48605   010B22  0E00               	movlw	0
 48606   010B24  0105               	movlb	5	; () banked
 48607   010B26  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 48608   010B28  0E00               	movlw	0
 48609   010B2A  6F8D               	movwf	efgtoa@n& (0+255),b
 48610   010B2C                     
 48611                           ; BSR set to: 5
 48612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 48613   010B2C  C7B1  F57C         	movff	_width,efgtoa@w
 48614   010B30  C7B2  F57D         	movff	_width+1,efgtoa@w+1
 48615   010B34                     
 48616                           ; BSR set to: 5
 48617                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
 48618   010B34  5188               	movf	efgtoa@sign& (0+255),w,b
 48619   010B36  B4D8               	btfsc	status,2,c
 48620   010B38  EFA0  F085         	goto	u26491
 48621   010B3C  EFA2  F085         	goto	u26490
 48622   010B40                     u26491:
 48623   010B40  EFB6  F085         	goto	l19905
 48624   010B44                     u26490:
 48625   010B44                     
 48626                           ; BSR set to: 5
 48627                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 48628   010B44  5188               	movf	efgtoa@sign& (0+255),w,b
 48629   010B46  A4D8               	btfss	status,2,c
 48630   010B48  EFA8  F085         	goto	u26501
 48631   010B4C  EFAA  F085         	goto	u26500
 48632   010B50                     u26501:
 48633   010B50  EFB0  F085         	goto	l19901
 48634   010B54                     u26500:
 48635   010B54                     
 48636                           ; BSR set to: 5
 48637   010B54  0E00               	movlw	0
 48638   010B56  6F6E               	movwf	(_efgtoa$4721+1)& (0+255),b
 48639   010B58  0E2B               	movlw	43
 48640   010B5A  6F6D               	movwf	_efgtoa$4721& (0+255),b
 48641   010B5C  EFB4  F085         	goto	l19903
 48642   010B60                     l19901:
 48643                           
 48644                           ; BSR set to: 5
 48645   010B60  0E00               	movlw	0
 48646   010B62  6F6E               	movwf	(_efgtoa$4721+1)& (0+255),b
 48647   010B64  0E2D               	movlw	45
 48648   010B66  6F6D               	movwf	_efgtoa$4721& (0+255),b
 48649   010B68                     l19903:
 48650                           
 48651                           ; BSR set to: 5
 48652   010B68  C56D  F588         	movff	_efgtoa$4721,efgtoa@sign
 48653   010B6C                     l19905:
 48654                           
 48655                           ; BSR set to: 5
 48656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 48657   010B6C  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 48658   010B70  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 48659   010B74  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 48660   010B78  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 48661   010B7C  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 48662   010B80  0404               	decf	?___fpclassifyf^(0+1280),w,c
 48663   010B82  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 48664   010B84  A4D8               	btfss	status,2,c
 48665   010B86  EFC7  F085         	goto	u26511
 48666   010B8A  EFC9  F085         	goto	u26510
 48667   010B8E                     u26511:
 48668   010B8E  EFFC  F085         	goto	l19923
 48669   010B92                     u26510:
 48670   010B92                     
 48671                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 48672   010B92  0105               	movlb	5	; () banked
 48673   010B94  5188               	movf	efgtoa@sign& (0+255),w,b
 48674   010B96  B4D8               	btfsc	status,2,c
 48675   010B98  EFD0  F085         	goto	u26521
 48676   010B9C  EFD2  F085         	goto	u26520
 48677   010BA0                     u26521:
 48678   010BA0  EFDB  F085         	goto	l19915
 48679   010BA4                     u26520:
 48680   010BA4                     
 48681                           ; BSR set to: 5
 48682                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 48683   010BA4  C588  F828         	movff	efgtoa@sign,_dbuf
 48684   010BA8                     
 48685                           ; BSR set to: 5
 48686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
 48687   010BA8  077C               	decf	efgtoa@w& (0+255),f,b
 48688   010BAA  A0D8               	btfss	status,0,c
 48689   010BAC  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 48690   010BAE                     
 48691                           ; BSR set to: 5
 48692                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 48693   010BAE  0E00               	movlw	0
 48694   010BB0  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 48695   010BB2  0E01               	movlw	1
 48696   010BB4  6F8D               	movwf	efgtoa@n& (0+255),b
 48697   010BB6                     l19915:
 48698                           
 48699                           ; BSR set to: 5
 48700                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 48701   010BB6  0E28               	movlw	low _dbuf
 48702   010BB8  258D               	addwf	efgtoa@n& (0+255),w,b
 48703   010BBA  6E04               	movwf	strcpy@dest^(0+1280),c
 48704   010BBC  0E08               	movlw	high _dbuf
 48705   010BBE  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48706   010BC0  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 48707   010BC2  0ED5               	movlw	low STR_200
 48708   010BC4  6E06               	movwf	strcpy@src^(0+1280),c
 48709   010BC6  0EFF               	movlw	high STR_200
 48710   010BC8  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 48711   010BCA  ECBE  F0FE         	call	_strcpy	;wreg free
 48712   010BCE                     l19917:
 48713                           
 48714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 48715   010BCE  0105               	movlb	5	; () banked
 48716   010BD0  0EFD               	movlw	253
 48717   010BD2  277C               	addwf	efgtoa@w& (0+255),f,b
 48718   010BD4  0EFF               	movlw	255
 48719   010BD6  237D               	addwfc	(efgtoa@w+1)& (0+255),f,b
 48720   010BD8                     
 48721                           ; BSR set to: 5
 48722                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 48723   010BD8  C560  F515         	movff	efgtoa@fp,pad@fp
 48724   010BDC  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 48725   010BE0  0E28               	movlw	low _dbuf
 48726   010BE2  6E17               	movwf	pad@buf^(0+1280),c
 48727   010BE4  0E08               	movlw	high _dbuf
 48728   010BE6  6E18               	movwf	(pad@buf+1)^(0+1280),c
 48729   010BE8  C57C  F519         	movff	efgtoa@w,pad@p
 48730   010BEC  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 48731   010BF0  EC1F  F0F6         	call	_pad	;wreg free
 48732   010BF4  EF9B  F08A         	goto	l3387
 48733   010BF8                     l19923:
 48734                           
 48735                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 48736   010BF8  C589  F504         	movff	efgtoa@g,___fpclassifyf@x
 48737   010BFC  C58A  F505         	movff	efgtoa@g+1,___fpclassifyf@x+1
 48738   010C00  C58B  F506         	movff	efgtoa@g+2,___fpclassifyf@x+2
 48739   010C04  C58C  F507         	movff	efgtoa@g+3,___fpclassifyf@x+3
 48740   010C08  ECA2  F0EA         	call	___fpclassifyf	;wreg free
 48741   010C0C  5004               	movf	?___fpclassifyf^(0+1280),w,c
 48742   010C0E  1005               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 48743   010C10  A4D8               	btfss	status,2,c
 48744   010C12  EF0D  F086         	goto	u26531
 48745   010C16  EF0F  F086         	goto	u26530
 48746   010C1A                     u26531:
 48747   010C1A  EF2F  F086         	goto	l19941
 48748   010C1E                     u26530:
 48749   010C1E                     
 48750                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 48751   010C1E  0105               	movlb	5	; () banked
 48752   010C20  5188               	movf	efgtoa@sign& (0+255),w,b
 48753   010C22  B4D8               	btfsc	status,2,c
 48754   010C24  EF16  F086         	goto	u26541
 48755   010C28  EF18  F086         	goto	u26540
 48756   010C2C                     u26541:
 48757   010C2C  EF21  F086         	goto	l19933
 48758   010C30                     u26540:
 48759   010C30                     
 48760                           ; BSR set to: 5
 48761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 48762   010C30  C588  F828         	movff	efgtoa@sign,_dbuf
 48763   010C34                     
 48764                           ; BSR set to: 5
 48765                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
 48766   010C34  077C               	decf	efgtoa@w& (0+255),f,b
 48767   010C36  A0D8               	btfss	status,0,c
 48768   010C38  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 48769   010C3A                     
 48770                           ; BSR set to: 5
 48771                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 48772   010C3A  0E00               	movlw	0
 48773   010C3C  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 48774   010C3E  0E01               	movlw	1
 48775   010C40  6F8D               	movwf	efgtoa@n& (0+255),b
 48776   010C42                     l19933:
 48777                           
 48778                           ; BSR set to: 5
 48779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 48780   010C42  0E28               	movlw	low _dbuf
 48781   010C44  258D               	addwf	efgtoa@n& (0+255),w,b
 48782   010C46  6E04               	movwf	strcpy@dest^(0+1280),c
 48783   010C48  0E08               	movlw	high _dbuf
 48784   010C4A  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 48785   010C4C  6E05               	movwf	(strcpy@dest+1)^(0+1280),c
 48786   010C4E  0ED9               	movlw	low STR_203
 48787   010C50  6E06               	movwf	strcpy@src^(0+1280),c
 48788   010C52  0EFF               	movlw	high STR_203
 48789   010C54  6E07               	movwf	(strcpy@src+1)^(0+1280),c
 48790   010C56  ECBE  F0FE         	call	_strcpy	;wreg free
 48791   010C5A  EFE7  F085         	goto	l19917
 48792   010C5E                     l19941:
 48793                           
 48794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 48795   010C5E  0E00               	movlw	0
 48796   010C60  0105               	movlb	5	; () banked
 48797   010C62  6F8F               	movwf	efgtoa@u& (0+255),b
 48798   010C64  0E00               	movlw	0
 48799   010C66  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 48800   010C68  0E80               	movlw	128
 48801   010C6A  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 48802   010C6C  0E3F               	movlw	63
 48803   010C6E  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 48804                           
 48805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 48806   010C70  0E00               	movlw	0
 48807   010C72  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 48808   010C74  0E00               	movlw	0
 48809   010C76  6F76               	movwf	efgtoa@e& (0+255),b
 48810   010C78                     
 48811                           ; BSR set to: 5
 48812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 48813   010C78  C589  F504         	movff	efgtoa@g,___fleq@ff1
 48814   010C7C  C58A  F505         	movff	efgtoa@g+1,___fleq@ff1+1
 48815   010C80  C58B  F506         	movff	efgtoa@g+2,___fleq@ff1+2
 48816   010C84  C58C  F507         	movff	efgtoa@g+3,___fleq@ff1+3
 48817   010C88  0E00               	movlw	0
 48818   010C8A  6E08               	movwf	___fleq@ff2^(0+1280),c
 48819   010C8C  0E00               	movlw	0
 48820   010C8E  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 48821   010C90  0E00               	movlw	0
 48822   010C92  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 48823   010C94  0E00               	movlw	0
 48824   010C96  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 48825   010C98  EC81  F0F4         	call	___fleq	;wreg free
 48826   010C9C  B0D8               	btfsc	status,0,c
 48827   010C9E  EF53  F086         	goto	u26551
 48828   010CA2  EF55  F086         	goto	u26550
 48829   010CA6                     u26551:
 48830   010CA6  EF34  F087         	goto	l3390
 48831   010CAA                     u26550:
 48832   010CAA  EF62  F086         	goto	l19949
 48833   010CAE                     l3392:
 48834                           
 48835                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 48836   010CAE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 48837   010CB2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 48838   010CB6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 48839   010CBA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 48840   010CBE                     
 48841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
 48842   010CBE  0105               	movlb	5	; () banked
 48843   010CC0  4B76               	infsnz	efgtoa@e& (0+255),f,b
 48844   010CC2  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 48845   010CC4                     l19949:
 48846                           
 48847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 48848   010CC4  C58F  F512         	movff	efgtoa@u,___flmul@b
 48849   010CC8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 48850   010CCC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 48851   010CD0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 48852   010CD4  0E00               	movlw	0
 48853   010CD6  6E16               	movwf	___flmul@a^(0+1280),c
 48854   010CD8  0E00               	movlw	0
 48855   010CDA  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 48856   010CDC  0E20               	movlw	32
 48857   010CDE  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 48858   010CE0  0E41               	movlw	65
 48859   010CE2  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 48860   010CE4  ECE4  F0B2         	call	___flmul	;wreg free
 48861   010CE8  C512  F578         	movff	?___flmul,efgtoa@ou
 48862   010CEC  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 48863   010CF0  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 48864   010CF4  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 48865   010CF8  0105               	movlb	5	; () banked
 48866   010CFA  5178               	movf	efgtoa@ou& (0+255),w,b
 48867   010CFC  5D89               	subwf	efgtoa@g& (0+255),w,b
 48868   010CFE  6E04               	movwf	labs@a^(0+1280),c
 48869   010D00  5179               	movf	(efgtoa@ou+1)& (0+255),w,b
 48870   010D02  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 48871   010D04  6E05               	movwf	(labs@a+1)^(0+1280),c
 48872   010D06  517A               	movf	(efgtoa@ou+2)& (0+255),w,b
 48873   010D08  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 48874   010D0A  6E06               	movwf	(labs@a+2)^(0+1280),c
 48875   010D0C  517B               	movf	(efgtoa@ou+3)& (0+255),w,b
 48876   010D0E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 48877   010D10  6E07               	movwf	(labs@a+3)^(0+1280),c
 48878   010D12  EC32  F0FC         	call	_labs	;wreg free
 48879   010D16  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 48880   010D18  EF99  F086         	goto	u26561
 48881   010D1C  5007               	movf	(?_labs+3)^(0+1280),w,c
 48882   010D1E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 48883   010D20  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 48884   010D22  E109               	bnz	u26560
 48885   010D24  0E02               	movlw	2
 48886   010D26  5C04               	subwf	?_labs^(0+1280),w,c
 48887   010D28  A0D8               	btfss	status,0,c
 48888   010D2A  EF99  F086         	goto	u26561
 48889   010D2E  EF9B  F086         	goto	u26560
 48890   010D32                     u26561:
 48891   010D32  EF57  F086         	goto	l3392
 48892   010D36                     u26560:
 48893   010D36  C578  F52B         	movff	efgtoa@ou,___flge@ff1
 48894   010D3A  C579  F52C         	movff	efgtoa@ou+1,___flge@ff1+1
 48895   010D3E  C57A  F52D         	movff	efgtoa@ou+2,___flge@ff1+2
 48896   010D42  C57B  F52E         	movff	efgtoa@ou+3,___flge@ff1+3
 48897   010D46  C589  F52F         	movff	efgtoa@g,___flge@ff2
 48898   010D4A  C58A  F530         	movff	efgtoa@g+1,___flge@ff2+1
 48899   010D4E  C58B  F531         	movff	efgtoa@g+2,___flge@ff2+2
 48900   010D52  C58C  F532         	movff	efgtoa@g+3,___flge@ff2+3
 48901   010D56  EC21  F0E9         	call	___flge	;wreg free
 48902   010D5A  A0D8               	btfss	status,0,c
 48903   010D5C  EFB2  F086         	goto	u26571
 48904   010D60  EFB4  F086         	goto	u26570
 48905   010D64                     u26571:
 48906   010D64  EF57  F086         	goto	l3392
 48907   010D68                     u26570:
 48908   010D68                     
 48909                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 48910   010D68  0105               	movlb	5	; () banked
 48911   010D6A  518F               	movf	efgtoa@u& (0+255),w,b
 48912   010D6C  5D89               	subwf	efgtoa@g& (0+255),w,b
 48913   010D6E  6E04               	movwf	labs@a^(0+1280),c
 48914   010D70  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 48915   010D72  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 48916   010D74  6E05               	movwf	(labs@a+1)^(0+1280),c
 48917   010D76  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 48918   010D78  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 48919   010D7A  6E06               	movwf	(labs@a+2)^(0+1280),c
 48920   010D7C  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 48921   010D7E  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 48922   010D80  6E07               	movwf	(labs@a+3)^(0+1280),c
 48923   010D82  EC32  F0FC         	call	_labs	;wreg free
 48924   010D86  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 48925   010D88  EFD3  F086         	goto	u26580
 48926   010D8C  5007               	movf	(?_labs+3)^(0+1280),w,c
 48927   010D8E  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 48928   010D90  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 48929   010D92  E107               	bnz	u26581
 48930   010D94  0E02               	movlw	2
 48931   010D96  5C04               	subwf	?_labs^(0+1280),w,c
 48932   010D98  B0D8               	btfsc	status,0,c
 48933   010D9A  EFD1  F086         	goto	u26581
 48934   010D9E  EFD3  F086         	goto	u26580
 48935   010DA2                     u26581:
 48936   010DA2  EF1B  F087         	goto	l19967
 48937   010DA6                     u26580:
 48938   010DA6                     l19957:
 48939                           
 48940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
 48941   010DA6  C58F  F589         	movff	efgtoa@u,efgtoa@g
 48942   010DAA  C590  F58A         	movff	efgtoa@u+1,efgtoa@g+1
 48943   010DAE  C591  F58B         	movff	efgtoa@u+2,efgtoa@g+2
 48944   010DB2  C592  F58C         	movff	efgtoa@u+3,efgtoa@g+3
 48945                           
 48946                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
 48947   010DB6  EF34  F087         	goto	l3390
 48948   010DBA                     l19959:
 48949                           
 48950                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 48951   010DBA  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 48952   010DBE  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 48953   010DC2  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 48954   010DC6  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 48955   010DCA  0E00               	movlw	0
 48956   010DCC  6E2F               	movwf	___fldiv@a^(0+1280),c
 48957   010DCE  0E00               	movlw	0
 48958   010DD0  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 48959   010DD2  0E20               	movlw	32
 48960   010DD4  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 48961   010DD6  0E41               	movlw	65
 48962   010DD8  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 48963   010DDA  ECAA  F0BA         	call	___fldiv	;wreg free
 48964   010DDE  C52B  F58F         	movff	?___fldiv,efgtoa@u
 48965   010DE2  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 48966   010DE6  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 48967   010DEA  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 48968   010DEE                     
 48969                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
 48970   010DEE  0105               	movlb	5	; () banked
 48971   010DF0  0776               	decf	efgtoa@e& (0+255),f,b
 48972   010DF2  A0D8               	btfss	status,0,c
 48973   010DF4  0777               	decf	(efgtoa@e+1)& (0+255),f,b
 48974   010DF6                     
 48975                           ; BSR set to: 5
 48976                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 48977   010DF6  518F               	movf	efgtoa@u& (0+255),w,b
 48978   010DF8  5D89               	subwf	efgtoa@g& (0+255),w,b
 48979   010DFA  6E04               	movwf	labs@a^(0+1280),c
 48980   010DFC  5190               	movf	(efgtoa@u+1)& (0+255),w,b
 48981   010DFE  598A               	subwfb	(efgtoa@g+1)& (0+255),w,b
 48982   010E00  6E05               	movwf	(labs@a+1)^(0+1280),c
 48983   010E02  5191               	movf	(efgtoa@u+2)& (0+255),w,b
 48984   010E04  598B               	subwfb	(efgtoa@g+2)& (0+255),w,b
 48985   010E06  6E06               	movwf	(labs@a+2)^(0+1280),c
 48986   010E08  5192               	movf	(efgtoa@u+3)& (0+255),w,b
 48987   010E0A  598C               	subwfb	(efgtoa@g+3)& (0+255),w,b
 48988   010E0C  6E07               	movwf	(labs@a+3)^(0+1280),c
 48989   010E0E  EC32  F0FC         	call	_labs	;wreg free
 48990   010E12  BE07               	btfsc	(?_labs+3)^(0+1280),7,c
 48991   010E14  EF19  F087         	goto	u26590
 48992   010E18  5007               	movf	(?_labs+3)^(0+1280),w,c
 48993   010E1A  1006               	iorwf	(?_labs+2)^(0+1280),w,c
 48994   010E1C  1005               	iorwf	(?_labs+1)^(0+1280),w,c
 48995   010E1E  E107               	bnz	u26591
 48996   010E20  0E02               	movlw	2
 48997   010E22  5C04               	subwf	?_labs^(0+1280),w,c
 48998   010E24  B0D8               	btfsc	status,0,c
 48999   010E26  EF17  F087         	goto	u26591
 49000   010E2A  EF19  F087         	goto	u26590
 49001   010E2E                     u26591:
 49002   010E2E  EF1B  F087         	goto	l19967
 49003   010E32                     u26590:
 49004   010E32  EFD3  F086         	goto	l19957
 49005   010E36                     l19967:
 49006                           
 49007                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 49008   010E36  C589  F52B         	movff	efgtoa@g,___flge@ff1
 49009   010E3A  C58A  F52C         	movff	efgtoa@g+1,___flge@ff1+1
 49010   010E3E  C58B  F52D         	movff	efgtoa@g+2,___flge@ff1+2
 49011   010E42  C58C  F52E         	movff	efgtoa@g+3,___flge@ff1+3
 49012   010E46  C58F  F52F         	movff	efgtoa@u,___flge@ff2
 49013   010E4A  C590  F530         	movff	efgtoa@u+1,___flge@ff2+1
 49014   010E4E  C591  F531         	movff	efgtoa@u+2,___flge@ff2+2
 49015   010E52  C592  F532         	movff	efgtoa@u+3,___flge@ff2+3
 49016   010E56  EC21  F0E9         	call	___flge	;wreg free
 49017   010E5A  A0D8               	btfss	status,0,c
 49018   010E5C  EF32  F087         	goto	u26601
 49019   010E60  EF34  F087         	goto	u26600
 49020   010E64                     u26601:
 49021   010E64  EFDD  F086         	goto	l19959
 49022   010E68                     u26600:
 49023   010E68                     l3390:
 49024                           
 49025                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 49026   010E68  C566  F570         	movff	efgtoa@c,efgtoa@mode
 49027                           
 49028                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 49029   010E6C  C570  F571         	movff	efgtoa@mode,efgtoa@nmode
 49030   010E70                     
 49031                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 49032   010E70  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 49033   010E72  EF3D  F087         	goto	u26611
 49034   010E76  EF3F  F087         	goto	u26610
 49035   010E7A                     u26611:
 49036   010E7A  EF45  F087         	goto	l19973
 49037   010E7E                     u26610:
 49038   010E7E  C55A  F569         	movff	_prec,efgtoa@p
 49039   010E82  C55B  F56A         	movff	_prec+1,efgtoa@p+1
 49040   010E86  EF4A  F087         	goto	l19975
 49041   010E8A                     l19973:
 49042   010E8A  0E00               	movlw	0
 49043   010E8C  0105               	movlb	5	; () banked
 49044   010E8E  6F6A               	movwf	(efgtoa@p+1)& (0+255),b
 49045   010E90  0E06               	movlw	6
 49046   010E92  6F69               	movwf	efgtoa@p& (0+255),b
 49047   010E94                     l19975:
 49048                           
 49049                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
 49050   010E94  C569  F574         	movff	efgtoa@p,efgtoa@m
 49051   010E98  C56A  F575         	movff	efgtoa@p+1,efgtoa@m+1
 49052   010E9C                     
 49053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
 49054   010E9C  0105               	movlb	5	; () banked
 49055   010E9E  4B74               	infsnz	efgtoa@m& (0+255),f,b
 49056   010EA0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 49057   010EA2                     
 49058                           ; BSR set to: 5
 49059                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 49060   010EA2  0E66               	movlw	102
 49061   010EA4  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 49062   010EA6  A4D8               	btfss	status,2,c
 49063   010EA8  EF58  F087         	goto	u26621
 49064   010EAC  EF5A  F087         	goto	u26620
 49065   010EB0                     u26621:
 49066   010EB0  EF7A  F087         	goto	l19989
 49067   010EB4                     u26620:
 49068   010EB4                     
 49069                           ; BSR set to: 5
 49070                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 49071   010EB4  BF77               	btfsc	(efgtoa@e+1)& (0+255),7,b
 49072   010EB6  EF61  F087         	goto	u26630
 49073   010EBA  EF5F  F087         	goto	u26631
 49074   010EBE                     u26631:
 49075   010EBE  EF6D  F087         	goto	l19985
 49076   010EC2                     u26630:
 49077   010EC2                     
 49078                           ; BSR set to: 5
 49079                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 49080   010EC2  0E00               	movlw	0
 49081   010EC4  6F8F               	movwf	efgtoa@u& (0+255),b
 49082   010EC6  0E00               	movlw	0
 49083   010EC8  6F90               	movwf	(efgtoa@u+1)& (0+255),b
 49084   010ECA  0E80               	movlw	128
 49085   010ECC  6F91               	movwf	(efgtoa@u+2)& (0+255),b
 49086   010ECE  0E3F               	movlw	63
 49087   010ED0  6F92               	movwf	(efgtoa@u+3)& (0+255),b
 49088                           
 49089                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 49090   010ED2  0E00               	movlw	0
 49091   010ED4  6F77               	movwf	(efgtoa@e+1)& (0+255),b
 49092   010ED6  0E00               	movlw	0
 49093   010ED8  6F76               	movwf	efgtoa@e& (0+255),b
 49094   010EDA                     l19985:
 49095                           
 49096                           ; BSR set to: 5
 49097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 49098   010EDA  0E67               	movlw	103
 49099   010EDC  1970               	xorwf	efgtoa@mode& (0+255),w,b
 49100   010EDE  B4D8               	btfsc	status,2,c
 49101   010EE0  EF74  F087         	goto	u26641
 49102   010EE4  EF76  F087         	goto	u26640
 49103   010EE8                     u26641:
 49104   010EE8  EF7A  F087         	goto	l19989
 49105   010EEC                     u26640:
 49106   010EEC                     
 49107                           ; BSR set to: 5
 49108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 49109   010EEC  5176               	movf	efgtoa@e& (0+255),w,b
 49110   010EEE  2774               	addwf	efgtoa@m& (0+255),f,b
 49111   010EF0  5177               	movf	(efgtoa@e+1)& (0+255),w,b
 49112   010EF2  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
 49113   010EF4                     l19989:
 49114                           
 49115                           ; BSR set to: 5
 49116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 49117   010EF4  0E00               	movlw	0
 49118   010EF6  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 49119   010EF8  0E00               	movlw	0
 49120   010EFA  6F86               	movwf	efgtoa@i& (0+255),b
 49121   010EFC                     
 49122                           ; BSR set to: 5
 49123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 49124   010EFC  C589  F57E         	movff	efgtoa@g,efgtoa@h
 49125   010F00  C58A  F57F         	movff	efgtoa@g+1,efgtoa@h+1
 49126   010F04  C58B  F580         	movff	efgtoa@g+2,efgtoa@h+2
 49127   010F08  C58C  F581         	movff	efgtoa@g+3,efgtoa@h+3
 49128   010F0C                     
 49129                           ; BSR set to: 5
 49130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 49131   010F0C  C58F  F578         	movff	efgtoa@u,efgtoa@ou
 49132   010F10  C590  F579         	movff	efgtoa@u+1,efgtoa@ou+1
 49133   010F14  C591  F57A         	movff	efgtoa@u+2,efgtoa@ou+2
 49134   010F18  C592  F57B         	movff	efgtoa@u+3,efgtoa@ou+3
 49135                           
 49136                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 49137   010F1C  EF0B  F088         	goto	l20003
 49138   010F20                     l19995:
 49139                           
 49140                           ; BSR set to: 5
 49141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 49142   010F20  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 49143   010F24  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 49144   010F28  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 49145   010F2C  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 49146   010F30  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 49147   010F34  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 49148   010F38  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 49149   010F3C  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 49150   010F40  ECAA  F0BA         	call	___fldiv	;wreg free
 49151   010F44  C52B  F544         	movff	?___fldiv,floorf@x
 49152   010F48  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 49153   010F4C  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 49154   010F50  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 49155   010F54  EC82  F0D0         	call	_floorf	;wreg free
 49156   010F58  C544  F582         	movff	?_floorf,efgtoa@l
 49157   010F5C  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 49158   010F60  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 49159   010F64  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 49160                           
 49161                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 49162   010F68  C582  F504         	movff	efgtoa@l,___fltol@f1
 49163   010F6C  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 49164   010F70  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 49165   010F74  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 49166   010F78  EC1C  F0E8         	call	___fltol	;wreg free
 49167   010F7C  C504  F572         	movff	?___fltol,efgtoa@d
 49168   010F80  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 49169   010F84                     
 49170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 49171   010F84  C57E  F52B         	movff	efgtoa@h,___flsub@b
 49172   010F88  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 49173   010F8C  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 49174   010F90  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 49175   010F94  C582  F516         	movff	efgtoa@l,___flmul@a
 49176   010F98  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 49177   010F9C  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 49178   010FA0  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 49179   010FA4  C58F  F512         	movff	efgtoa@u,___flmul@b
 49180   010FA8  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 49181   010FAC  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 49182   010FB0  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 49183   010FB4  ECE4  F0B2         	call	___flmul	;wreg free
 49184   010FB8  C512  F52F         	movff	?___flmul,___flsub@a
 49185   010FBC  C513  F530         	movff	?___flmul+1,___flsub@a+1
 49186   010FC0  C514  F531         	movff	?___flmul+2,___flsub@a+2
 49187   010FC4  C515  F532         	movff	?___flmul+3,___flsub@a+3
 49188   010FC8  ECB9  F0FD         	call	___flsub	;wreg free
 49189   010FCC  C52B  F57E         	movff	?___flsub,efgtoa@h
 49190   010FD0  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 49191   010FD4  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 49192   010FD8  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 49193   010FDC                     
 49194                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 49195   010FDC  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 49196   010FE0  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 49197   010FE4  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 49198   010FE8  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 49199   010FEC  0E00               	movlw	0
 49200   010FEE  6E2F               	movwf	___fldiv@a^(0+1280),c
 49201   010FF0  0E00               	movlw	0
 49202   010FF2  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 49203   010FF4  0E20               	movlw	32
 49204   010FF6  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 49205   010FF8  0E41               	movlw	65
 49206   010FFA  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 49207   010FFC  ECAA  F0BA         	call	___fldiv	;wreg free
 49208   011000  C52B  F58F         	movff	?___fldiv,efgtoa@u
 49209   011004  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 49210   011008  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 49211   01100C  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 49212   011010                     
 49213                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
 49214   011010  0105               	movlb	5	; () banked
 49215   011012  4B86               	infsnz	efgtoa@i& (0+255),f,b
 49216   011014  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 49217   011016                     l20003:
 49218                           
 49219                           ; BSR set to: 5
 49220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 49221   011016  5174               	movf	efgtoa@m& (0+255),w,b
 49222   011018  5D86               	subwf	efgtoa@i& (0+255),w,b
 49223   01101A  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49224   01101C  0A80               	xorlw	128
 49225   01101E  6E58               	movwf	??_efgtoa^(0+1280),c
 49226   011020  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 49227   011022  0A80               	xorlw	128
 49228   011024  5858               	subwfb	??_efgtoa^(0+1280),w,c
 49229   011026  A0D8               	btfss	status,0,c
 49230   011028  EF18  F088         	goto	u26651
 49231   01102C  EF1A  F088         	goto	u26650
 49232   011030                     u26651:
 49233   011030  EF90  F087         	goto	l19995
 49234   011034                     u26650:
 49235   011034                     
 49236                           ; BSR set to: 5
 49237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 49238   011034  C58F  F512         	movff	efgtoa@u,___flmul@b
 49239   011038  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 49240   01103C  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 49241   011040  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 49242   011044  0E00               	movlw	0
 49243   011046  6E16               	movwf	___flmul@a^(0+1280),c
 49244   011048  0E00               	movlw	0
 49245   01104A  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49246   01104C  0EA0               	movlw	160
 49247   01104E  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49248   011050  0E40               	movlw	64
 49249   011052  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49250   011054  ECE4  F0B2         	call	___flmul	;wreg free
 49251   011058  C512  F582         	movff	?___flmul,efgtoa@l
 49252   01105C  C513  F583         	movff	?___flmul+1,efgtoa@l+1
 49253   011060  C514  F584         	movff	?___flmul+2,efgtoa@l+2
 49254   011064  C515  F585         	movff	?___flmul+3,efgtoa@l+3
 49255   011068                     
 49256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 49257   011068  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 49258   01106C  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 49259   011070  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 49260   011074  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 49261   011078  C582  F52F         	movff	efgtoa@l,___flge@ff2
 49262   01107C  C583  F530         	movff	efgtoa@l+1,___flge@ff2+1
 49263   011080  C584  F531         	movff	efgtoa@l+2,___flge@ff2+2
 49264   011084  C585  F532         	movff	efgtoa@l+3,___flge@ff2+3
 49265   011088  EC21  F0E9         	call	___flge	;wreg free
 49266   01108C  B0D8               	btfsc	status,0,c
 49267   01108E  EF4B  F088         	goto	u26661
 49268   011092  EF4D  F088         	goto	u26660
 49269   011096                     u26661:
 49270   011096  EF58  F088         	goto	l20011
 49271   01109A                     u26660:
 49272   01109A                     
 49273                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 49274   01109A  0E00               	movlw	0
 49275   01109C  0105               	movlb	5	; () banked
 49276   01109E  6F82               	movwf	efgtoa@l& (0+255),b
 49277   0110A0  0E00               	movlw	0
 49278   0110A2  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 49279   0110A4  0E00               	movlw	0
 49280   0110A6  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 49281   0110A8  0E00               	movlw	0
 49282   0110AA  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 49283                           
 49284                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
 49285   0110AC  EF81  F088         	goto	l20017
 49286   0110B0                     l20011:
 49287                           
 49288                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 49289   0110B0  C57E  F504         	movff	efgtoa@h,___fleq@ff1
 49290   0110B4  C57F  F505         	movff	efgtoa@h+1,___fleq@ff1+1
 49291   0110B8  C580  F506         	movff	efgtoa@h+2,___fleq@ff1+2
 49292   0110BC  C581  F507         	movff	efgtoa@h+3,___fleq@ff1+3
 49293   0110C0  C582  F508         	movff	efgtoa@l,___fleq@ff2
 49294   0110C4  C583  F509         	movff	efgtoa@l+1,___fleq@ff2+1
 49295   0110C8  C584  F50A         	movff	efgtoa@l+2,___fleq@ff2+2
 49296   0110CC  C585  F50B         	movff	efgtoa@l+3,___fleq@ff2+3
 49297   0110D0  EC81  F0F4         	call	___fleq	;wreg free
 49298   0110D4  A0D8               	btfss	status,0,c
 49299   0110D6  EF6F  F088         	goto	u26671
 49300   0110DA  EF71  F088         	goto	u26670
 49301   0110DE                     u26671:
 49302   0110DE  EF81  F088         	goto	l20017
 49303   0110E2                     u26670:
 49304   0110E2  0105               	movlb	5	; () banked
 49305   0110E4  B172               	btfsc	efgtoa@d& (0+255),0,b
 49306   0110E6  EF77  F088         	goto	u26681
 49307   0110EA  EF79  F088         	goto	u26680
 49308   0110EE                     u26681:
 49309   0110EE  EF81  F088         	goto	l20017
 49310   0110F2                     u26680:
 49311   0110F2                     
 49312                           ; BSR set to: 5
 49313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 49314   0110F2  0E00               	movlw	0
 49315   0110F4  6F82               	movwf	efgtoa@l& (0+255),b
 49316   0110F6  0E00               	movlw	0
 49317   0110F8  6F83               	movwf	(efgtoa@l+1)& (0+255),b
 49318   0110FA  0E00               	movlw	0
 49319   0110FC  6F84               	movwf	(efgtoa@l+2)& (0+255),b
 49320   0110FE  0E00               	movlw	0
 49321   011100  6F85               	movwf	(efgtoa@l+3)& (0+255),b
 49322   011102                     l20017:
 49323                           
 49324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 49325   011102  C589  F504         	movff	efgtoa@g,___fladd@b
 49326   011106  C58A  F505         	movff	efgtoa@g+1,___fladd@b+1
 49327   01110A  C58B  F506         	movff	efgtoa@g+2,___fladd@b+2
 49328   01110E  C58C  F507         	movff	efgtoa@g+3,___fladd@b+3
 49329   011112  C582  F508         	movff	efgtoa@l,___fladd@a
 49330   011116  C583  F509         	movff	efgtoa@l+1,___fladd@a+1
 49331   01111A  C584  F50A         	movff	efgtoa@l+2,___fladd@a+2
 49332   01111E  C585  F50B         	movff	efgtoa@l+3,___fladd@a+3
 49333   011122  EC38  F0A5         	call	___fladd	;wreg free
 49334   011126  C504  F57E         	movff	?___fladd,efgtoa@h
 49335   01112A  C505  F57F         	movff	?___fladd+1,efgtoa@h+1
 49336   01112E  C506  F580         	movff	?___fladd+2,efgtoa@h+2
 49337   011132  C507  F581         	movff	?___fladd+3,efgtoa@h+3
 49338   011136                     
 49339                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 49340   011136  C57E  F52B         	movff	efgtoa@h,___flge@ff1
 49341   01113A  C57F  F52C         	movff	efgtoa@h+1,___flge@ff1+1
 49342   01113E  C580  F52D         	movff	efgtoa@h+2,___flge@ff1+2
 49343   011142  C581  F52E         	movff	efgtoa@h+3,___flge@ff1+3
 49344   011146  0E00               	movlw	0
 49345   011148  6E16               	movwf	___flmul@a^(0+1280),c
 49346   01114A  0E00               	movlw	0
 49347   01114C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49348   01114E  0E20               	movlw	32
 49349   011150  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49350   011152  0E41               	movlw	65
 49351   011154  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49352   011156  C578  F512         	movff	efgtoa@ou,___flmul@b
 49353   01115A  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 49354   01115E  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 49355   011162  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 49356   011166  ECE4  F0B2         	call	___flmul	;wreg free
 49357   01116A  C512  F52F         	movff	?___flmul,___flge@ff2
 49358   01116E  C513  F530         	movff	?___flmul+1,___flge@ff2+1
 49359   011172  C514  F531         	movff	?___flmul+2,___flge@ff2+2
 49360   011176  C515  F532         	movff	?___flmul+3,___flge@ff2+3
 49361   01117A  EC21  F0E9         	call	___flge	;wreg free
 49362   01117E  A0D8               	btfss	status,0,c
 49363   011180  EFC4  F088         	goto	u26691
 49364   011184  EFC6  F088         	goto	u26690
 49365   011188                     u26691:
 49366   011188  EFEF  F088         	goto	l20029
 49367   01118C                     u26690:
 49368   01118C                     
 49369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
 49370   01118C  0105               	movlb	5	; () banked
 49371   01118E  4B76               	infsnz	efgtoa@e& (0+255),f,b
 49372   011190  2B77               	incf	(efgtoa@e+1)& (0+255),f,b
 49373   011192                     
 49374                           ; BSR set to: 5
 49375                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 49376   011192  C578  F512         	movff	efgtoa@ou,___flmul@b
 49377   011196  C579  F513         	movff	efgtoa@ou+1,___flmul@b+1
 49378   01119A  C57A  F514         	movff	efgtoa@ou+2,___flmul@b+2
 49379   01119E  C57B  F515         	movff	efgtoa@ou+3,___flmul@b+3
 49380   0111A2  0E00               	movlw	0
 49381   0111A4  6E16               	movwf	___flmul@a^(0+1280),c
 49382   0111A6  0E00               	movlw	0
 49383   0111A8  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 49384   0111AA  0E20               	movlw	32
 49385   0111AC  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 49386   0111AE  0E41               	movlw	65
 49387   0111B0  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 49388   0111B2  ECE4  F0B2         	call	___flmul	;wreg free
 49389   0111B6  C512  F578         	movff	?___flmul,efgtoa@ou
 49390   0111BA  C513  F579         	movff	?___flmul+1,efgtoa@ou+1
 49391   0111BE  C514  F57A         	movff	?___flmul+2,efgtoa@ou+2
 49392   0111C2  C515  F57B         	movff	?___flmul+3,efgtoa@ou+3
 49393   0111C6                     
 49394                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 49395   0111C6  0E66               	movlw	102
 49396   0111C8  0105               	movlb	5	; () banked
 49397   0111CA  1971               	xorwf	efgtoa@nmode& (0+255),w,b
 49398   0111CC  A4D8               	btfss	status,2,c
 49399   0111CE  EFEB  F088         	goto	u26701
 49400   0111D2  EFED  F088         	goto	u26700
 49401   0111D6                     u26701:
 49402   0111D6  EFEF  F088         	goto	l20029
 49403   0111DA                     u26700:
 49404   0111DA                     
 49405                           ; BSR set to: 5
 49406                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
 49407   0111DA  4B74               	infsnz	efgtoa@m& (0+255),f,b
 49408   0111DC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
 49409   0111DE                     l20029:
 49410                           
 49411                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 49412   0111DE  C578  F58F         	movff	efgtoa@ou,efgtoa@u
 49413   0111E2  C579  F590         	movff	efgtoa@ou+1,efgtoa@u+1
 49414   0111E6  C57A  F591         	movff	efgtoa@ou+2,efgtoa@u+2
 49415   0111EA  C57B  F592         	movff	efgtoa@ou+3,efgtoa@u+3
 49416   0111EE                     
 49417                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 49418   0111EE  C576  F567         	movff	efgtoa@e,efgtoa@ne
 49419   0111F2  C577  F568         	movff	efgtoa@e+1,efgtoa@ne+1
 49420   0111F6                     
 49421                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 49422   0111F6  0105               	movlb	5	; () banked
 49423   0111F8  6B6F               	clrf	efgtoa@pp& (0+255),b
 49424   0111FA                     
 49425                           ; BSR set to: 5
 49426                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 49427   0111FA  0E00               	movlw	0
 49428   0111FC  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
 49429   0111FE  0E00               	movlw	0
 49430   011200  6F6B               	movwf	efgtoa@t& (0+255),b
 49431   011202                     
 49432                           ; BSR set to: 5
 49433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 49434   011202  0E00               	movlw	0
 49435   011204  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 49436   011206  0E00               	movlw	0
 49437   011208  6F86               	movwf	efgtoa@i& (0+255),b
 49438                           
 49439                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 49440   01120A  EFEC  F089         	goto	l20079
 49441   01120E                     l20039:
 49442                           
 49443                           ; BSR set to: 5
 49444                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 49445   01120E  C57E  F52B         	movff	efgtoa@h,___fldiv@b
 49446   011212  C57F  F52C         	movff	efgtoa@h+1,___fldiv@b+1
 49447   011216  C580  F52D         	movff	efgtoa@h+2,___fldiv@b+2
 49448   01121A  C581  F52E         	movff	efgtoa@h+3,___fldiv@b+3
 49449   01121E  C58F  F52F         	movff	efgtoa@u,___fldiv@a
 49450   011222  C590  F530         	movff	efgtoa@u+1,___fldiv@a+1
 49451   011226  C591  F531         	movff	efgtoa@u+2,___fldiv@a+2
 49452   01122A  C592  F532         	movff	efgtoa@u+3,___fldiv@a+3
 49453   01122E  ECAA  F0BA         	call	___fldiv	;wreg free
 49454   011232  C52B  F544         	movff	?___fldiv,floorf@x
 49455   011236  C52C  F545         	movff	?___fldiv+1,floorf@x+1
 49456   01123A  C52D  F546         	movff	?___fldiv+2,floorf@x+2
 49457   01123E  C52E  F547         	movff	?___fldiv+3,floorf@x+3
 49458   011242  EC82  F0D0         	call	_floorf	;wreg free
 49459   011246  C544  F582         	movff	?_floorf,efgtoa@l
 49460   01124A  C545  F583         	movff	?_floorf+1,efgtoa@l+1
 49461   01124E  C546  F584         	movff	?_floorf+2,efgtoa@l+2
 49462   011252  C547  F585         	movff	?_floorf+3,efgtoa@l+3
 49463                           
 49464                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 49465   011256  C582  F504         	movff	efgtoa@l,___fltol@f1
 49466   01125A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 49467   01125E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 49468   011262  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 49469   011266  EC1C  F0E8         	call	___fltol	;wreg free
 49470   01126A  BE05               	btfsc	(?___fltol+1)^(0+1280),7,c
 49471   01126C  EF43  F089         	goto	u26710
 49472   011270  5005               	movf	(?___fltol+1)^(0+1280),w,c
 49473   011272  E107               	bnz	u26711
 49474   011274  0E0A               	movlw	10
 49475   011276  5C04               	subwf	?___fltol^(0+1280),w,c
 49476   011278  B0D8               	btfsc	status,0,c
 49477   01127A  EF41  F089         	goto	u26711
 49478   01127E  EF43  F089         	goto	u26710
 49479   011282                     u26711:
 49480   011282  EF53  F089         	goto	l20043
 49481   011286                     u26710:
 49482   011286  C582  F504         	movff	efgtoa@l,___fltol@f1
 49483   01128A  C583  F505         	movff	efgtoa@l+1,___fltol@f1+1
 49484   01128E  C584  F506         	movff	efgtoa@l+2,___fltol@f1+2
 49485   011292  C585  F507         	movff	efgtoa@l+3,___fltol@f1+3
 49486   011296  EC1C  F0E8         	call	___fltol	;wreg free
 49487   01129A  C504  F572         	movff	?___fltol,efgtoa@d
 49488   01129E  C505  F573         	movff	?___fltol+1,efgtoa@d+1
 49489   0112A2  EF58  F089         	goto	l3420
 49490   0112A6                     l20043:
 49491   0112A6  0E00               	movlw	0
 49492   0112A8  0105               	movlb	5	; () banked
 49493   0112AA  6F73               	movwf	(efgtoa@d+1)& (0+255),b
 49494   0112AC  0E09               	movlw	9
 49495   0112AE  6F72               	movwf	efgtoa@d& (0+255),b
 49496   0112B0                     l3420:
 49497                           
 49498                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 49499   0112B0  0105               	movlb	5	; () banked
 49500   0112B2  516F               	movf	efgtoa@pp& (0+255),w,b
 49501   0112B4  A4D8               	btfss	status,2,c
 49502   0112B6  EF5F  F089         	goto	u26721
 49503   0112BA  EF61  F089         	goto	u26720
 49504   0112BE                     u26721:
 49505   0112BE  EF89  F089         	goto	l20063
 49506   0112C2                     u26720:
 49507   0112C2                     
 49508                           ; BSR set to: 5
 49509   0112C2  BF68               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 49510   0112C4  EF68  F089         	goto	u26730
 49511   0112C8  EF66  F089         	goto	u26731
 49512   0112CC                     u26731:
 49513   0112CC  EF89  F089         	goto	l20063
 49514   0112D0                     u26730:
 49515   0112D0                     
 49516                           ; BSR set to: 5
 49517                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 49518   0112D0  0E28               	movlw	low _dbuf
 49519   0112D2  258D               	addwf	efgtoa@n& (0+255),w,b
 49520   0112D4  6ED9               	movwf	fsr2l,c
 49521   0112D6  0E08               	movlw	high _dbuf
 49522   0112D8  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49523   0112DA  6EDA               	movwf	fsr2h,c
 49524   0112DC  0E2E               	movlw	46
 49525   0112DE  6EDF               	movwf	indf2,c
 49526   0112E0                     
 49527                           ; BSR set to: 5
 49528   0112E0  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 49529   0112E2  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 49530   0112E4                     
 49531                           ; BSR set to: 5
 49532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 49533   0112E4  077C               	decf	efgtoa@w& (0+255),f,b
 49534   0112E6  A0D8               	btfss	status,0,c
 49535   0112E8  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 49536   0112EA                     
 49537                           ; BSR set to: 5
 49538                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 49539   0112EA  0E01               	movlw	1
 49540   0112EC  6F6F               	movwf	efgtoa@pp& (0+255),b
 49541   0112EE  EF89  F089         	goto	l20063
 49542   0112F2                     l20055:
 49543                           
 49544                           ; BSR set to: 5
 49545                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 49546   0112F2  0E28               	movlw	low _dbuf
 49547   0112F4  258D               	addwf	efgtoa@n& (0+255),w,b
 49548   0112F6  6ED9               	movwf	fsr2l,c
 49549   0112F8  0E08               	movlw	high _dbuf
 49550   0112FA  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49551   0112FC  6EDA               	movwf	fsr2h,c
 49552   0112FE  0E30               	movlw	48
 49553   011300  6EDF               	movwf	indf2,c
 49554   011302                     
 49555                           ; BSR set to: 5
 49556   011302  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 49557   011304  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 49558   011306                     
 49559                           ; BSR set to: 5
 49560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 49561   011306  077C               	decf	efgtoa@w& (0+255),f,b
 49562   011308  A0D8               	btfss	status,0,c
 49563   01130A  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 49564   01130C                     
 49565                           ; BSR set to: 5
 49566                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 49567   01130C  076B               	decf	efgtoa@t& (0+255),f,b
 49568   01130E  A0D8               	btfss	status,0,c
 49569   011310  076C               	decf	(efgtoa@t+1)& (0+255),f,b
 49570   011312                     l20063:
 49571                           
 49572                           ; BSR set to: 5
 49573                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 49574   011312  516B               	movf	efgtoa@t& (0+255),w,b
 49575   011314  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
 49576   011316  A4D8               	btfss	status,2,c
 49577   011318  EF90  F089         	goto	u26741
 49578   01131C  EF92  F089         	goto	u26740
 49579   011320                     u26741:
 49580   011320  EF79  F089         	goto	l20055
 49581   011324                     u26740:
 49582   011324                     
 49583                           ; BSR set to: 5
 49584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 49585   011324  0E28               	movlw	low _dbuf
 49586   011326  258D               	addwf	efgtoa@n& (0+255),w,b
 49587   011328  6ED9               	movwf	fsr2l,c
 49588   01132A  0E08               	movlw	high _dbuf
 49589   01132C  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49590   01132E  6EDA               	movwf	fsr2h,c
 49591   011330  5172               	movf	efgtoa@d& (0+255),w,b
 49592   011332  0F30               	addlw	48
 49593   011334  6EDF               	movwf	indf2,c
 49594   011336                     
 49595                           ; BSR set to: 5
 49596   011336  4B8D               	infsnz	efgtoa@n& (0+255),f,b
 49597   011338  2B8E               	incf	(efgtoa@n+1)& (0+255),f,b
 49598   01133A                     
 49599                           ; BSR set to: 5
 49600                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 49601   01133A  077C               	decf	efgtoa@w& (0+255),f,b
 49602   01133C  A0D8               	btfss	status,0,c
 49603   01133E  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 49604   011340                     
 49605                           ; BSR set to: 5
 49606                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 49607   011340  C57E  F52B         	movff	efgtoa@h,___flsub@b
 49608   011344  C57F  F52C         	movff	efgtoa@h+1,___flsub@b+1
 49609   011348  C580  F52D         	movff	efgtoa@h+2,___flsub@b+2
 49610   01134C  C581  F52E         	movff	efgtoa@h+3,___flsub@b+3
 49611   011350  C582  F516         	movff	efgtoa@l,___flmul@a
 49612   011354  C583  F517         	movff	efgtoa@l+1,___flmul@a+1
 49613   011358  C584  F518         	movff	efgtoa@l+2,___flmul@a+2
 49614   01135C  C585  F519         	movff	efgtoa@l+3,___flmul@a+3
 49615   011360  C58F  F512         	movff	efgtoa@u,___flmul@b
 49616   011364  C590  F513         	movff	efgtoa@u+1,___flmul@b+1
 49617   011368  C591  F514         	movff	efgtoa@u+2,___flmul@b+2
 49618   01136C  C592  F515         	movff	efgtoa@u+3,___flmul@b+3
 49619   011370  ECE4  F0B2         	call	___flmul	;wreg free
 49620   011374  C512  F52F         	movff	?___flmul,___flsub@a
 49621   011378  C513  F530         	movff	?___flmul+1,___flsub@a+1
 49622   01137C  C514  F531         	movff	?___flmul+2,___flsub@a+2
 49623   011380  C515  F532         	movff	?___flmul+3,___flsub@a+3
 49624   011384  ECB9  F0FD         	call	___flsub	;wreg free
 49625   011388  C52B  F57E         	movff	?___flsub,efgtoa@h
 49626   01138C  C52C  F57F         	movff	?___flsub+1,efgtoa@h+1
 49627   011390  C52D  F580         	movff	?___flsub+2,efgtoa@h+2
 49628   011394  C52E  F581         	movff	?___flsub+3,efgtoa@h+3
 49629   011398                     
 49630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 49631   011398  C58F  F52B         	movff	efgtoa@u,___fldiv@b
 49632   01139C  C590  F52C         	movff	efgtoa@u+1,___fldiv@b+1
 49633   0113A0  C591  F52D         	movff	efgtoa@u+2,___fldiv@b+2
 49634   0113A4  C592  F52E         	movff	efgtoa@u+3,___fldiv@b+3
 49635   0113A8  0E00               	movlw	0
 49636   0113AA  6E2F               	movwf	___fldiv@a^(0+1280),c
 49637   0113AC  0E00               	movlw	0
 49638   0113AE  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 49639   0113B0  0E20               	movlw	32
 49640   0113B2  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 49641   0113B4  0E41               	movlw	65
 49642   0113B6  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 49643   0113B8  ECAA  F0BA         	call	___fldiv	;wreg free
 49644   0113BC  C52B  F58F         	movff	?___fldiv,efgtoa@u
 49645   0113C0  C52C  F590         	movff	?___fldiv+1,efgtoa@u+1
 49646   0113C4  C52D  F591         	movff	?___fldiv+2,efgtoa@u+2
 49647   0113C8  C52E  F592         	movff	?___fldiv+3,efgtoa@u+3
 49648   0113CC                     
 49649                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 49650   0113CC  0105               	movlb	5	; () banked
 49651   0113CE  0767               	decf	efgtoa@ne& (0+255),f,b
 49652   0113D0  A0D8               	btfss	status,0,c
 49653   0113D2  0768               	decf	(efgtoa@ne+1)& (0+255),f,b
 49654   0113D4                     
 49655                           ; BSR set to: 5
 49656                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
 49657   0113D4  4B86               	infsnz	efgtoa@i& (0+255),f,b
 49658   0113D6  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 49659   0113D8                     l20079:
 49660                           
 49661                           ; BSR set to: 5
 49662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 49663   0113D8  5174               	movf	efgtoa@m& (0+255),w,b
 49664   0113DA  5D86               	subwf	efgtoa@i& (0+255),w,b
 49665   0113DC  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49666   0113DE  0A80               	xorlw	128
 49667   0113E0  6E58               	movwf	??_efgtoa^(0+1280),c
 49668   0113E2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
 49669   0113E4  0A80               	xorlw	128
 49670   0113E6  5858               	subwfb	??_efgtoa^(0+1280),w,c
 49671   0113E8  B0D8               	btfsc	status,0,c
 49672   0113EA  EFF9  F089         	goto	u26751
 49673   0113EE  EFFB  F089         	goto	u26750
 49674   0113F2                     u26751:
 49675   0113F2  EF09  F08A         	goto	l20083
 49676   0113F6                     u26750:
 49677   0113F6                     
 49678                           ; BSR set to: 5
 49679   0113F6  BF8E               	btfsc	(efgtoa@n+1)& (0+255),7,b
 49680   0113F8  EF07  F08A         	goto	u26761
 49681   0113FC  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 49682   0113FE  E109               	bnz	u26760
 49683   011400  0E4B               	movlw	75
 49684   011402  5D8D               	subwf	efgtoa@n& (0+255),w,b
 49685   011404  A0D8               	btfss	status,0,c
 49686   011406  EF07  F08A         	goto	u26761
 49687   01140A  EF09  F08A         	goto	u26760
 49688   01140E                     u26761:
 49689   01140E  EF07  F089         	goto	l20039
 49690   011412                     u26760:
 49691   011412                     l20083:
 49692                           
 49693                           ; BSR set to: 5
 49694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 49695   011412  0E00               	movlw	0
 49696   011414  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 49697   011416  0E4F               	movlw	79
 49698   011418  6F86               	movwf	efgtoa@i& (0+255),b
 49699   01141A                     
 49700                           ; BSR set to: 5
 49701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 49702   01141A  0E28               	movlw	low _dbuf
 49703   01141C  2586               	addwf	efgtoa@i& (0+255),w,b
 49704   01141E  6ED9               	movwf	fsr2l,c
 49705   011420  0E08               	movlw	high _dbuf
 49706   011422  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 49707   011424  6EDA               	movwf	fsr2h,c
 49708   011426  6ADF               	clrf	indf2,c
 49709   011428                     
 49710                           ; BSR set to: 5
 49711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 49712   011428  0E28               	movlw	low _dbuf
 49713   01142A  6E58               	movwf	??_efgtoa^(0+1280),c
 49714   01142C  0E08               	movlw	high _dbuf
 49715   01142E  6E59               	movwf	(??_efgtoa+1)^(0+1280),c
 49716   011430  518D               	movf	efgtoa@n& (0+255),w,b
 49717   011432  5E58               	subwf	??_efgtoa^(0+1280),f,c
 49718   011434  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 49719   011436  5A59               	subwfb	(??_efgtoa+1)^(0+1280),f,c
 49720   011438  5186               	movf	efgtoa@i& (0+255),w,b
 49721   01143A  2458               	addwf	??_efgtoa^(0+1280),w,c
 49722   01143C  6E04               	movwf	memcpy@d1^(0+1280),c
 49723   01143E  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49724   011440  2059               	addwfc	(??_efgtoa+1)^(0+1280),w,c
 49725   011442  6E05               	movwf	(memcpy@d1+1)^(0+1280),c
 49726   011444  0E28               	movlw	low _dbuf
 49727   011446  6E06               	movwf	memcpy@s1^(0+1280),c
 49728   011448  0E08               	movlw	high _dbuf
 49729   01144A  6E07               	movwf	(memcpy@s1+1)^(0+1280),c
 49730   01144C  C58D  F508         	movff	efgtoa@n,memcpy@n
 49731   011450  C58E  F509         	movff	efgtoa@n+1,memcpy@n+1
 49732   011454  EC00  F0FD         	call	_memcpy	;wreg free
 49733   011458                     
 49734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 49735   011458  0105               	movlb	5	; () banked
 49736   01145A  518D               	movf	efgtoa@n& (0+255),w,b
 49737   01145C  5D86               	subwf	efgtoa@i& (0+255),w,b
 49738   01145E  6F8D               	movwf	efgtoa@n& (0+255),b
 49739   011460  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 49740   011462  5987               	subwfb	(efgtoa@i+1)& (0+255),w,b
 49741   011464  6F8E               	movwf	(efgtoa@n+1)& (0+255),b
 49742   011466                     
 49743                           ; BSR set to: 5
 49744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 49745   011466  5188               	movf	efgtoa@sign& (0+255),w,b
 49746   011468  A4D8               	btfss	status,2,c
 49747   01146A  EF39  F08A         	goto	u26771
 49748   01146E  EF3C  F08A         	goto	u26770
 49749   011472                     u26771:
 49750   011472  0E01               	movlw	1
 49751   011474  EF3D  F08A         	goto	u26780
 49752   011478                     u26770:
 49753   011478  0E00               	movlw	0
 49754   01147A                     u26780:
 49755   01147A  6F86               	movwf	efgtoa@i& (0+255),b
 49756   01147C  6B87               	clrf	(efgtoa@i+1)& (0+255),b
 49757   01147E                     
 49758                           ; BSR set to: 5
 49759                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 49760   01147E  A25C               	btfss	_flags^(0+1280),1,c
 49761   011480  EF44  F08A         	goto	u26791
 49762   011484  EF46  F08A         	goto	u26790
 49763   011488                     u26791:
 49764   011488  EF74  F08A         	goto	l20105
 49765   01148C                     u26790:
 49766   01148C  EF56  F08A         	goto	l20101
 49767   011490                     l20097:
 49768                           
 49769                           ; BSR set to: 5
 49770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 49771   011490  078D               	decf	efgtoa@n& (0+255),f,b
 49772   011492  A0D8               	btfss	status,0,c
 49773   011494  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 49774   011496  0E28               	movlw	low _dbuf
 49775   011498  258D               	addwf	efgtoa@n& (0+255),w,b
 49776   01149A  6ED9               	movwf	fsr2l,c
 49777   01149C  0E08               	movlw	high _dbuf
 49778   01149E  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49779   0114A0  6EDA               	movwf	fsr2h,c
 49780   0114A2  0E30               	movlw	48
 49781   0114A4  6EDF               	movwf	indf2,c
 49782   0114A6                     
 49783                           ; BSR set to: 5
 49784                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 856:    w--;
 49785   0114A6  077C               	decf	efgtoa@w& (0+255),f,b
 49786   0114A8  A0D8               	btfss	status,0,c
 49787   0114AA  077D               	decf	(efgtoa@w+1)& (0+255),f,b
 49788   0114AC                     l20101:
 49789                           
 49790                           ; BSR set to: 5
 49791                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 49792   0114AC  517C               	movf	efgtoa@w& (0+255),w,b
 49793   0114AE  5D86               	subwf	efgtoa@i& (0+255),w,b
 49794   0114B0  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49795   0114B2  0A80               	xorlw	128
 49796   0114B4  6E58               	movwf	??_efgtoa^(0+1280),c
 49797   0114B6  517D               	movf	(efgtoa@w+1)& (0+255),w,b
 49798   0114B8  0A80               	xorlw	128
 49799   0114BA  5858               	subwfb	??_efgtoa^(0+1280),w,c
 49800   0114BC  B0D8               	btfsc	status,0,c
 49801   0114BE  EF63  F08A         	goto	u26801
 49802   0114C2  EF65  F08A         	goto	u26800
 49803   0114C6                     u26801:
 49804   0114C6  EF74  F08A         	goto	l20105
 49805   0114CA                     u26800:
 49806   0114CA                     
 49807                           ; BSR set to: 5
 49808   0114CA  518D               	movf	efgtoa@n& (0+255),w,b
 49809   0114CC  5D86               	subwf	efgtoa@i& (0+255),w,b
 49810   0114CE  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49811   0114D0  0A80               	xorlw	128
 49812   0114D2  6E58               	movwf	??_efgtoa^(0+1280),c
 49813   0114D4  518E               	movf	(efgtoa@n+1)& (0+255),w,b
 49814   0114D6  0A80               	xorlw	128
 49815   0114D8  5858               	subwfb	??_efgtoa^(0+1280),w,c
 49816   0114DA  A0D8               	btfss	status,0,c
 49817   0114DC  EF72  F08A         	goto	u26811
 49818   0114E0  EF74  F08A         	goto	u26810
 49819   0114E4                     u26811:
 49820   0114E4  EF48  F08A         	goto	l20097
 49821   0114E8                     u26810:
 49822   0114E8                     l20105:
 49823                           
 49824                           ; BSR set to: 5
 49825                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 49826   0114E8  5188               	movf	efgtoa@sign& (0+255),w,b
 49827   0114EA  B4D8               	btfsc	status,2,c
 49828   0114EC  EF7A  F08A         	goto	u26821
 49829   0114F0  EF7C  F08A         	goto	u26820
 49830   0114F4                     u26821:
 49831   0114F4  EF87  F08A         	goto	l20109
 49832   0114F8                     u26820:
 49833   0114F8                     
 49834                           ; BSR set to: 5
 49835                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 49836   0114F8  078D               	decf	efgtoa@n& (0+255),f,b
 49837   0114FA  A0D8               	btfss	status,0,c
 49838   0114FC  078E               	decf	(efgtoa@n+1)& (0+255),f,b
 49839   0114FE  0E28               	movlw	low _dbuf
 49840   011500  258D               	addwf	efgtoa@n& (0+255),w,b
 49841   011502  6ED9               	movwf	fsr2l,c
 49842   011504  0E08               	movlw	high _dbuf
 49843   011506  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49844   011508  6EDA               	movwf	fsr2h,c
 49845   01150A  C588  F4DF         	movff	efgtoa@sign,indf2
 49846   01150E                     l20109:
 49847                           
 49848                           ; BSR set to: 5
 49849                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 49850   01150E  5186               	movf	efgtoa@i& (0+255),w,b
 49851   011510  5F7C               	subwf	efgtoa@w& (0+255),f,b
 49852   011512  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 49853   011514  5B7D               	subwfb	(efgtoa@w+1)& (0+255),f,b
 49854   011516                     
 49855                           ; BSR set to: 5
 49856                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 49857   011516  C560  F515         	movff	efgtoa@fp,pad@fp
 49858   01151A  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
 49859   01151E  0E28               	movlw	low _dbuf
 49860   011520  258D               	addwf	efgtoa@n& (0+255),w,b
 49861   011522  6E17               	movwf	pad@buf^(0+1280),c
 49862   011524  0E08               	movlw	high _dbuf
 49863   011526  218E               	addwfc	(efgtoa@n+1)& (0+255),w,b
 49864   011528  6E18               	movwf	(pad@buf+1)^(0+1280),c
 49865   01152A  C57C  F519         	movff	efgtoa@w,pad@p
 49866   01152E  C57D  F51A         	movff	efgtoa@w+1,pad@p+1
 49867   011532  EC1F  F0F6         	call	_pad	;wreg free
 49868   011536                     l3387:
 49869   011536  0012               	return		;funcret
 49870   011538                     __end_of_efgtoa:
 49871                           	callstack 0
 49872                           
 49873 ;; *************** function _strcpy *****************
 49874 ;; Defined at:
 49875 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
 49876 ;; Parameters:    Size  Location     Type
 49877 ;;  dest            2    3[COMRAM] PTR unsigned char 
 49878 ;;		 -> dbuf(80), 
 49879 ;;  src             2    5[COMRAM] PTR const unsigned char 
 49880 ;;		 -> STR_203(4), STR_200(4), 
 49881 ;; Auto vars:     Size  Location     Type
 49882 ;;  d               2    7[COMRAM] PTR unsigned char 
 49883 ;;		 -> dbuf(80), 
 49884 ;; Return value:  Size  Location     Type
 49885 ;;                  2    3[COMRAM] PTR unsigned char 
 49886 ;; Registers used:
 49887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49888 ;; Tracked objects:
 49889 ;;		On entry : 0/0
 49890 ;;		On exit  : 0/0
 49891 ;;		Unchanged: 0/0
 49892 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49897 ;;Total ram usage:        6 bytes
 49898 ;; Hardware stack levels used: 1
 49899 ;; Hardware stack levels required when called: 1
 49900 ;; This function calls:
 49901 ;;		Nothing
 49902 ;; This function is called by:
 49903 ;;		_efgtoa
 49904 ;; This function uses a non-reentrant model
 49905 ;;
 49906                           
 49907                           	psect	text129
 49908   01FD7C                     __ptext129:
 49909                           	callstack 0
 49910   01FD7C                     _strcpy:
 49911                           	callstack 114
 49912   01FD7C  C504  F508         	movff	strcpy@dest,strcpy@d
 49913   01FD80  C505  F509         	movff	strcpy@dest+1,strcpy@d+1
 49914   01FD84                     l19793:
 49915   01FD84  C506  F4F6         	movff	strcpy@src,tblptrl
 49916   01FD88  C507  F4F7         	movff	strcpy@src+1,tblptrh
 49917   01FD8C  4A06               	infsnz	strcpy@src^(0+1280),f,c
 49918   01FD8E  2A07               	incf	(strcpy@src+1)^(0+1280),f,c
 49919   01FD90                     	if	0	;tblptru may be non-zero
 49920   01FD90                     	endif
 49921   01FD90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 49922   01FD90  0E00               	movlw	low (__mediumconst shr (0+16))
 49923   01FD92  6EF8               	movwf	tblptru,c
 49924   01FD94                     	endif
 49925   01FD94  C508  F4D9         	movff	strcpy@d,fsr2l
 49926   01FD98  C509  F4DA         	movff	strcpy@d+1,fsr2h
 49927   01FD9C  4A08               	infsnz	strcpy@d^(0+1280),f,c
 49928   01FD9E  2A09               	incf	(strcpy@d+1)^(0+1280),f,c
 49929   01FDA0  0008               	tblrd		*
 49930   01FDA2  C4F5 F4DF          	movff	tablat,indf2
 49931   01FDA6  50DF               	movf	indf2,w,c
 49932   01FDA8  A4D8               	btfss	status,2,c
 49933   01FDAA  EFD9  F0FE         	goto	u26241
 49934   01FDAE  EFDB  F0FE         	goto	u26240
 49935   01FDB2                     u26241:
 49936   01FDB2  EFC2  F0FE         	goto	l19793
 49937   01FDB6                     u26240:
 49938   01FDB6  0012               	return		;funcret
 49939   01FDB8                     __end_of_strcpy:
 49940                           	callstack 0
 49941                           
 49942 ;; *************** function _memcpy *****************
 49943 ;; Defined at:
 49944 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
 49945 ;; Parameters:    Size  Location     Type
 49946 ;;  d1              2    3[COMRAM] PTR void 
 49947 ;;		 -> fs$win(512), dbuf(80), cin_file(512), fs(564), 
 49948 ;;		 -> tmp_buf(512), disk_buf(128), pb$fp(2), f_gets@s(4), 
 49949 ;;		 -> f_rename@djn(40), f_rename@buf(32), NULL(0), 
 49950 ;;  s1              2    5[COMRAM] PTR const void 
 49951 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), pb$buf(64), 
 49952 ;;		 -> fs$win(512), dbuf(80), in_fl(546), fs(564), 
 49953 ;;		 -> rom_fl(546), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 49954 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 49955 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), NULL(0), 
 49956 ;;  n               2    7[COMRAM] unsigned int 
 49957 ;; Auto vars:     Size  Location     Type
 49958 ;;  s               2   12[COMRAM] PTR const unsigned char 
 49959 ;;		 -> rom_fl$buf(512), in_fl$buf(512), djn$fn(12), pb$buf(64), 
 49960 ;;		 -> fs$win(512), dbuf(80), in_fl(546), fs(564), 
 49961 ;;		 -> rom_fl(546), disk_buf(128), f_printf@pb(70), f_puts@pb(70), 
 49962 ;;		 -> f_putc@pb(70), f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), 
 49963 ;;		 -> f_mkdir@dj(40), dj$fn(12), f_open@dj(40), NULL(0), 
 49964 ;;  d               2   10[COMRAM] PTR unsigned char 
 49965 ;;		 -> fs$win(512), dbuf(80), cin_file(512), fs(564), 
 49966 ;;		 -> tmp_buf(512), disk_buf(128), pb$fp(2), f_gets@s(4), 
 49967 ;;		 -> f_rename@djn(40), f_rename@buf(32), NULL(0), 
 49968 ;;  tmp             1    9[COMRAM] unsigned char 
 49969 ;; Return value:  Size  Location     Type
 49970 ;;                  2    3[COMRAM] PTR void 
 49971 ;; Registers used:
 49972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49973 ;; Tracked objects:
 49974 ;;		On entry : 0/0
 49975 ;;		On exit  : 0/0
 49976 ;;		Unchanged: 0/0
 49977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49979 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49981 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49982 ;;Total ram usage:       11 bytes
 49983 ;; Hardware stack levels used: 1
 49984 ;; Hardware stack levels required when called: 1
 49985 ;; This function calls:
 49986 ;;		Nothing
 49987 ;; This function is called by:
 49988 ;;		_dir_register
 49989 ;;		_f_read
 49990 ;;		_f_write
 49991 ;;		_efgtoa
 49992 ;;		_f_mkdir
 49993 ;;		_f_rename
 49994 ;; This function uses a non-reentrant model
 49995 ;;
 49996                           
 49997                           	psect	text130
 49998   01FA00                     __ptext130:
 49999                           	callstack 0
 50000   01FA00                     _memcpy:
 50001                           	callstack 114
 50002   01FA00  C506  F50D         	movff	memcpy@s1,memcpy@s
 50003   01FA04  C507  F50E         	movff	memcpy@s1+1,memcpy@s+1
 50004   01FA08  C504  F50B         	movff	memcpy@d1,memcpy@d
 50005   01FA0C  C505  F50C         	movff	memcpy@d1+1,memcpy@d+1
 50006   01FA10  EF1A  F0FD         	goto	l19307
 50007   01FA14                     l19299:
 50008   01FA14  C50D  F4D9         	movff	memcpy@s,fsr2l
 50009   01FA18  C50E  F4DA         	movff	memcpy@s+1,fsr2h
 50010   01FA1C  50DF               	movf	indf2,w,c
 50011   01FA1E  6E0A               	movwf	memcpy@tmp^(0+1280),c
 50012   01FA20  4A0D               	infsnz	memcpy@s^(0+1280),f,c
 50013   01FA22  2A0E               	incf	(memcpy@s+1)^(0+1280),f,c
 50014   01FA24  C50B  F4D9         	movff	memcpy@d,fsr2l
 50015   01FA28  C50C  F4DA         	movff	memcpy@d+1,fsr2h
 50016   01FA2C  C50A  F4DF         	movff	memcpy@tmp,indf2
 50017   01FA30  4A0B               	infsnz	memcpy@d^(0+1280),f,c
 50018   01FA32  2A0C               	incf	(memcpy@d+1)^(0+1280),f,c
 50019   01FA34                     l19307:
 50020   01FA34  0608               	decf	memcpy@n^(0+1280),f,c
 50021   01FA36  A0D8               	btfss	status,0,c
 50022   01FA38  0609               	decf	(memcpy@n+1)^(0+1280),f,c
 50023   01FA3A  2808               	incf	memcpy@n^(0+1280),w,c
 50024   01FA3C  E106               	bnz	u25411
 50025   01FA3E  2809               	incf	(memcpy@n+1)^(0+1280),w,c
 50026   01FA40  A4D8               	btfss	status,2,c
 50027   01FA42  EF25  F0FD         	goto	u25411
 50028   01FA46  EF27  F0FD         	goto	u25410
 50029   01FA4A                     u25411:
 50030   01FA4A  EF0A  F0FD         	goto	l19299
 50031   01FA4E                     u25410:
 50032   01FA4E  0012               	return		;funcret
 50033   01FA50                     __end_of_memcpy:
 50034                           	callstack 0
 50035                           
 50036 ;; *************** function _labs *****************
 50037 ;; Defined at:
 50038 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
 50039 ;; Parameters:    Size  Location     Type
 50040 ;;  a               4    3[COMRAM] long 
 50041 ;; Auto vars:     Size  Location     Type
 50042 ;;		None
 50043 ;; Return value:  Size  Location     Type
 50044 ;;                  4    3[COMRAM] long 
 50045 ;; Registers used:
 50046 ;;		wreg, status,2, status,0
 50047 ;; Tracked objects:
 50048 ;;		On entry : 0/0
 50049 ;;		On exit  : 0/0
 50050 ;;		Unchanged: 0/0
 50051 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50056 ;;Total ram usage:        8 bytes
 50057 ;; Hardware stack levels used: 1
 50058 ;; Hardware stack levels required when called: 1
 50059 ;; This function calls:
 50060 ;;		Nothing
 50061 ;; This function is called by:
 50062 ;;		_efgtoa
 50063 ;; This function uses a non-reentrant model
 50064 ;;
 50065                           
 50066                           	psect	text131
 50067   01F864                     __ptext131:
 50068                           	callstack 0
 50069   01F864                     _labs:
 50070                           	callstack 114
 50071   01F864  BE07               	btfsc	(labs@a+3)^(0+1280),7,c
 50072   01F866  EF37  F0FC         	goto	u26251
 50073   01F86A  EF39  F0FC         	goto	u26250
 50074   01F86E                     u26251:
 50075   01F86E  EF43  F0FC         	goto	l19799
 50076   01F872                     u26250:
 50077   01F872  C504  F504         	movff	labs@a,?_labs
 50078   01F876  C505  F505         	movff	labs@a+1,?_labs+1
 50079   01F87A  C506  F506         	movff	labs@a+2,?_labs+2
 50080   01F87E  C507  F507         	movff	labs@a+3,?_labs+3
 50081   01F882  EF5C  F0FC         	goto	l3575
 50082   01F886                     l19799:
 50083   01F886  C504  F508         	movff	labs@a,??_labs
 50084   01F88A  C505  F509         	movff	labs@a+1,??_labs+1
 50085   01F88E  C506  F50A         	movff	labs@a+2,??_labs+2
 50086   01F892  C507  F50B         	movff	labs@a+3,??_labs+3
 50087   01F896  1E08               	comf	??_labs^(0+1280),f,c
 50088   01F898  1E09               	comf	(??_labs+1)^(0+1280),f,c
 50089   01F89A  1E0A               	comf	(??_labs+2)^(0+1280),f,c
 50090   01F89C  1E0B               	comf	(??_labs+3)^(0+1280),f,c
 50091   01F89E  2A08               	incf	??_labs^(0+1280),f,c
 50092   01F8A0  0E00               	movlw	0
 50093   01F8A2  2209               	addwfc	(??_labs+1)^(0+1280),f,c
 50094   01F8A4  220A               	addwfc	(??_labs+2)^(0+1280),f,c
 50095   01F8A6  220B               	addwfc	(??_labs+3)^(0+1280),f,c
 50096   01F8A8  C508  F504         	movff	??_labs,?_labs
 50097   01F8AC  C509  F505         	movff	??_labs+1,?_labs+1
 50098   01F8B0  C50A  F506         	movff	??_labs+2,?_labs+2
 50099   01F8B4  C50B  F507         	movff	??_labs+3,?_labs+3
 50100   01F8B8                     l3575:
 50101   01F8B8  0012               	return		;funcret
 50102   01F8BA                     __end_of_labs:
 50103                           	callstack 0
 50104                           
 50105 ;; *************** function _floorf *****************
 50106 ;; Defined at:
 50107 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
 50108 ;; Parameters:    Size  Location     Type
 50109 ;;  x               4   67[COMRAM] float 
 50110 ;; Auto vars:     Size  Location     Type
 50111 ;;  u               4   83[COMRAM] struct .
 50112 ;;  m               4   77[COMRAM] unsigned long 
 50113 ;;  e               2   81[COMRAM] int 
 50114 ;; Return value:  Size  Location     Type
 50115 ;;                  4   67[COMRAM] float 
 50116 ;; Registers used:
 50117 ;;		wreg, status,2, status,0
 50118 ;; Tracked objects:
 50119 ;;		On entry : 0/0
 50120 ;;		On exit  : 0/0
 50121 ;;		Unchanged: 0/0
 50122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50124 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50125 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50126 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50127 ;;Total ram usage:       20 bytes
 50128 ;; Hardware stack levels used: 1
 50129 ;; Hardware stack levels required when called: 1
 50130 ;; This function calls:
 50131 ;;		Nothing
 50132 ;; This function is called by:
 50133 ;;		_efgtoa
 50134 ;; This function uses a non-reentrant model
 50135 ;;
 50136                           
 50137                           	psect	text132
 50138   01A104                     __ptext132:
 50139                           	callstack 0
 50140   01A104                     _floorf:
 50141                           	callstack 114
 50142   01A104  C81C  F554         	movff	floorf@F521,floorf@u
 50143   01A108  C81D  F555         	movff	floorf@F521+1,floorf@u+1
 50144   01A10C  C81E  F556         	movff	floorf@F521+2,floorf@u+2
 50145   01A110  C81F  F557         	movff	floorf@F521+3,floorf@u+3
 50146   01A114  C544  F554         	movff	floorf@x,floorf@u
 50147   01A118  C545  F555         	movff	floorf@x+1,floorf@u+1
 50148   01A11C  C546  F556         	movff	floorf@x+2,floorf@u+2
 50149   01A120  C547  F557         	movff	floorf@x+3,floorf@u+3
 50150   01A124  0E81               	movlw	129
 50151   01A126  6E48               	movwf	??_floorf^(0+1280),c
 50152   01A128  0EFF               	movlw	255
 50153   01A12A  6E49               	movwf	(??_floorf+1)^(0+1280),c
 50154   01A12C  C554  F54A         	movff	floorf@u,??_floorf+2
 50155   01A130  C555  F54B         	movff	floorf@u+1,??_floorf+3
 50156   01A134  C556  F54C         	movff	floorf@u+2,??_floorf+4
 50157   01A138  C557  F54D         	movff	floorf@u+3,??_floorf+5
 50158   01A13C  0E18               	movlw	24
 50159   01A13E  EFA6  F0D0         	goto	u26260
 50160   01A142                     u26265:
 50161   01A142  90D8               	bcf	status,0,c
 50162   01A144  324D               	rrcf	(??_floorf+5)^(0+1280),f,c
 50163   01A146  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 50164   01A148  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 50165   01A14A  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 50166   01A14C                     u26260:
 50167   01A14C  2EE8               	decfsz	wreg,f,c
 50168   01A14E  EFA1  F0D0         	goto	u26265
 50169   01A152  504A               	movf	(??_floorf+2)^(0+1280),w,c
 50170   01A154  2448               	addwf	??_floorf^(0+1280),w,c
 50171   01A156  6E52               	movwf	floorf@e^(0+1280),c
 50172   01A158  0E00               	movlw	0
 50173   01A15A  2049               	addwfc	(??_floorf+1)^(0+1280),w,c
 50174   01A15C  6E53               	movwf	(floorf@e+1)^(0+1280),c
 50175   01A15E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 50176   01A160  EFBB  F0D0         	goto	u26271
 50177   01A164  5053               	movf	(floorf@e+1)^(0+1280),w,c
 50178   01A166  E109               	bnz	u26270
 50179   01A168  0E17               	movlw	23
 50180   01A16A  5C52               	subwf	floorf@e^(0+1280),w,c
 50181   01A16C  A0D8               	btfss	status,0,c
 50182   01A16E  EFBB  F0D0         	goto	u26271
 50183   01A172  EFBD  F0D0         	goto	u26270
 50184   01A176                     u26271:
 50185   01A176  EFC7  F0D0         	goto	l19809
 50186   01A17A                     u26270:
 50187   01A17A                     l19807:
 50188   01A17A  C544  F544         	movff	floorf@x,?_floorf
 50189   01A17E  C545  F545         	movff	floorf@x+1,?_floorf+1
 50190   01A182  C546  F546         	movff	floorf@x+2,?_floorf+2
 50191   01A186  C547  F547         	movff	floorf@x+3,?_floorf+3
 50192   01A18A  EF8A  F0D1         	goto	l3561
 50193   01A18E                     l19809:
 50194   01A18E  BE53               	btfsc	(floorf@e+1)^(0+1280),7,c
 50195   01A190  EFCC  F0D0         	goto	u26281
 50196   01A194  EFCE  F0D0         	goto	u26280
 50197   01A198                     u26281:
 50198   01A198  EF3E  F0D1         	goto	l19819
 50199   01A19C                     u26280:
 50200   01A19C  C552  F548         	movff	floorf@e,??_floorf
 50201   01A1A0  0EFF               	movlw	255
 50202   01A1A2  6E49               	movwf	(??_floorf+1)^(0+1280),c
 50203   01A1A4  0EFF               	movlw	255
 50204   01A1A6  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 50205   01A1A8  0E7F               	movlw	127
 50206   01A1AA  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 50207   01A1AC  0E00               	movlw	0
 50208   01A1AE  6E4C               	movwf	(??_floorf+4)^(0+1280),c
 50209   01A1B0                     u26295:
 50210   01A1B0  6648               	tstfsz	??_floorf^(0+1280),c
 50211   01A1B2  EFDD  F0D0         	goto	u26296
 50212   01A1B6  EFE5  F0D0         	goto	u26297
 50213   01A1BA                     u26296:
 50214   01A1BA  344C               	rlcf	(??_floorf+4)^(0+1280),w,c
 50215   01A1BC  324C               	rrcf	(??_floorf+4)^(0+1280),f,c
 50216   01A1BE  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 50217   01A1C0  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 50218   01A1C2  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 50219   01A1C4  2E48               	decfsz	??_floorf^(0+1280),f,c
 50220   01A1C6  EFD8  F0D0         	goto	u26295
 50221   01A1CA                     u26297:
 50222   01A1CA  C549  F54E         	movff	??_floorf+1,floorf@m
 50223   01A1CE  C54A  F54F         	movff	??_floorf+2,floorf@m+1
 50224   01A1D2  C54B  F550         	movff	??_floorf+3,floorf@m+2
 50225   01A1D6  C54C  F551         	movff	??_floorf+4,floorf@m+3
 50226   01A1DA  504E               	movf	floorf@m^(0+1280),w,c
 50227   01A1DC  1454               	andwf	floorf@u^(0+1280),w,c
 50228   01A1DE  6E48               	movwf	??_floorf^(0+1280),c
 50229   01A1E0  504F               	movf	(floorf@m+1)^(0+1280),w,c
 50230   01A1E2  1455               	andwf	(floorf@u+1)^(0+1280),w,c
 50231   01A1E4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 50232   01A1E6  5050               	movf	(floorf@m+2)^(0+1280),w,c
 50233   01A1E8  1456               	andwf	(floorf@u+2)^(0+1280),w,c
 50234   01A1EA  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 50235   01A1EC  5051               	movf	(floorf@m+3)^(0+1280),w,c
 50236   01A1EE  1457               	andwf	(floorf@u+3)^(0+1280),w,c
 50237   01A1F0  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 50238   01A1F2  5048               	movf	??_floorf^(0+1280),w,c
 50239   01A1F4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 50240   01A1F6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 50241   01A1F8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 50242   01A1FA  A4D8               	btfss	status,2,c
 50243   01A1FC  EF02  F0D1         	goto	u26301
 50244   01A200  EF04  F0D1         	goto	u26300
 50245   01A204                     u26301:
 50246   01A204  EF06  F0D1         	goto	l19815
 50247   01A208                     u26300:
 50248   01A208  EFBD  F0D0         	goto	l19807
 50249   01A20C                     l19815:
 50250   01A20C  C554  F548         	movff	floorf@u,??_floorf
 50251   01A210  C555  F549         	movff	floorf@u+1,??_floorf+1
 50252   01A214  C556  F54A         	movff	floorf@u+2,??_floorf+2
 50253   01A218  C557  F54B         	movff	floorf@u+3,??_floorf+3
 50254   01A21C  0E20               	movlw	32
 50255   01A21E  EF16  F0D1         	goto	u26310
 50256   01A222                     u26315:
 50257   01A222  90D8               	bcf	status,0,c
 50258   01A224  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 50259   01A226  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 50260   01A228  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 50261   01A22A  3248               	rrcf	??_floorf^(0+1280),f,c
 50262   01A22C                     u26310:
 50263   01A22C  2EE8               	decfsz	wreg,f,c
 50264   01A22E  EF11  F0D1         	goto	u26315
 50265   01A232  5048               	movf	??_floorf^(0+1280),w,c
 50266   01A234  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 50267   01A236  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 50268   01A238  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 50269   01A23A  B4D8               	btfsc	status,2,c
 50270   01A23C  EF22  F0D1         	goto	u26321
 50271   01A240  EF24  F0D1         	goto	u26320
 50272   01A244                     u26321:
 50273   01A244  EF2C  F0D1         	goto	l3564
 50274   01A248                     u26320:
 50275   01A248  504E               	movf	floorf@m^(0+1280),w,c
 50276   01A24A  2654               	addwf	floorf@u^(0+1280),f,c
 50277   01A24C  504F               	movf	(floorf@m+1)^(0+1280),w,c
 50278   01A24E  2255               	addwfc	(floorf@u+1)^(0+1280),f,c
 50279   01A250  5050               	movf	(floorf@m+2)^(0+1280),w,c
 50280   01A252  2256               	addwfc	(floorf@u+2)^(0+1280),f,c
 50281   01A254  5051               	movf	(floorf@m+3)^(0+1280),w,c
 50282   01A256  2257               	addwfc	(floorf@u+3)^(0+1280),f,c
 50283   01A258                     l3564:
 50284   01A258  1C4E               	comf	floorf@m^(0+1280),w,c
 50285   01A25A  6E48               	movwf	??_floorf^(0+1280),c
 50286   01A25C  1C4F               	comf	(floorf@m+1)^(0+1280),w,c
 50287   01A25E  6E49               	movwf	(??_floorf+1)^(0+1280),c
 50288   01A260  1C50               	comf	(floorf@m+2)^(0+1280),w,c
 50289   01A262  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 50290   01A264  1C51               	comf	(floorf@m+3)^(0+1280),w,c
 50291   01A266  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 50292   01A268  5048               	movf	??_floorf^(0+1280),w,c
 50293   01A26A  1654               	andwf	floorf@u^(0+1280),f,c
 50294   01A26C  5049               	movf	(??_floorf+1)^(0+1280),w,c
 50295   01A26E  1655               	andwf	(floorf@u+1)^(0+1280),f,c
 50296   01A270  504A               	movf	(??_floorf+2)^(0+1280),w,c
 50297   01A272  1656               	andwf	(floorf@u+2)^(0+1280),f,c
 50298   01A274  504B               	movf	(??_floorf+3)^(0+1280),w,c
 50299   01A276  1657               	andwf	(floorf@u+3)^(0+1280),f,c
 50300   01A278  EF82  F0D1         	goto	l19827
 50301   01A27C                     l19819:
 50302   01A27C  C554  F548         	movff	floorf@u,??_floorf
 50303   01A280  C555  F549         	movff	floorf@u+1,??_floorf+1
 50304   01A284  C556  F54A         	movff	floorf@u+2,??_floorf+2
 50305   01A288  C557  F54B         	movff	floorf@u+3,??_floorf+3
 50306   01A28C  0E20               	movlw	32
 50307   01A28E  EF4E  F0D1         	goto	u26330
 50308   01A292                     u26335:
 50309   01A292  90D8               	bcf	status,0,c
 50310   01A294  324B               	rrcf	(??_floorf+3)^(0+1280),f,c
 50311   01A296  324A               	rrcf	(??_floorf+2)^(0+1280),f,c
 50312   01A298  3249               	rrcf	(??_floorf+1)^(0+1280),f,c
 50313   01A29A  3248               	rrcf	??_floorf^(0+1280),f,c
 50314   01A29C                     u26330:
 50315   01A29C  2EE8               	decfsz	wreg,f,c
 50316   01A29E  EF49  F0D1         	goto	u26335
 50317   01A2A2  5048               	movf	??_floorf^(0+1280),w,c
 50318   01A2A4  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 50319   01A2A6  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 50320   01A2A8  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 50321   01A2AA  A4D8               	btfss	status,2,c
 50322   01A2AC  EF5A  F0D1         	goto	u26341
 50323   01A2B0  EF5C  F0D1         	goto	u26340
 50324   01A2B4                     u26341:
 50325   01A2B4  EF66  F0D1         	goto	l19823
 50326   01A2B8                     u26340:
 50327   01A2B8  0E00               	movlw	0
 50328   01A2BA  6E54               	movwf	floorf@u^(0+1280),c
 50329   01A2BC  0E00               	movlw	0
 50330   01A2BE  6E55               	movwf	(floorf@u+1)^(0+1280),c
 50331   01A2C0  0E00               	movlw	0
 50332   01A2C2  6E56               	movwf	(floorf@u+2)^(0+1280),c
 50333   01A2C4  0E00               	movlw	0
 50334   01A2C6  6E57               	movwf	(floorf@u+3)^(0+1280),c
 50335   01A2C8  EF82  F0D1         	goto	l19827
 50336   01A2CC                     l19823:
 50337   01A2CC  90D8               	bcf	status,0,c
 50338   01A2CE  3454               	rlcf	floorf@u^(0+1280),w,c
 50339   01A2D0  6E48               	movwf	??_floorf^(0+1280),c
 50340   01A2D2  3455               	rlcf	(floorf@u+1)^(0+1280),w,c
 50341   01A2D4  6E49               	movwf	(??_floorf+1)^(0+1280),c
 50342   01A2D6  3456               	rlcf	(floorf@u+2)^(0+1280),w,c
 50343   01A2D8  6E4A               	movwf	(??_floorf+2)^(0+1280),c
 50344   01A2DA  3457               	rlcf	(floorf@u+3)^(0+1280),w,c
 50345   01A2DC  6E4B               	movwf	(??_floorf+3)^(0+1280),c
 50346   01A2DE  5048               	movf	??_floorf^(0+1280),w,c
 50347   01A2E0  1049               	iorwf	(??_floorf+1)^(0+1280),w,c
 50348   01A2E2  104A               	iorwf	(??_floorf+2)^(0+1280),w,c
 50349   01A2E4  104B               	iorwf	(??_floorf+3)^(0+1280),w,c
 50350   01A2E6  B4D8               	btfsc	status,2,c
 50351   01A2E8  EF78  F0D1         	goto	u26351
 50352   01A2EC  EF7A  F0D1         	goto	u26350
 50353   01A2F0                     u26351:
 50354   01A2F0  EF82  F0D1         	goto	l19827
 50355   01A2F4                     u26350:
 50356   01A2F4  0E00               	movlw	0
 50357   01A2F6  6E54               	movwf	floorf@u^(0+1280),c
 50358   01A2F8  0E00               	movlw	0
 50359   01A2FA  6E55               	movwf	(floorf@u+1)^(0+1280),c
 50360   01A2FC  0E80               	movlw	128
 50361   01A2FE  6E56               	movwf	(floorf@u+2)^(0+1280),c
 50362   01A300  0EBF               	movlw	191
 50363   01A302  6E57               	movwf	(floorf@u+3)^(0+1280),c
 50364   01A304                     l19827:
 50365   01A304  C554  F544         	movff	floorf@u,?_floorf
 50366   01A308  C555  F545         	movff	floorf@u+1,?_floorf+1
 50367   01A30C  C556  F546         	movff	floorf@u+2,?_floorf+2
 50368   01A310  C557  F547         	movff	floorf@u+3,?_floorf+3
 50369   01A314                     l3561:
 50370   01A314  0012               	return		;funcret
 50371   01A316                     __end_of_floorf:
 50372                           	callstack 0
 50373                           
 50374 ;; *************** function ___fpclassifyf *****************
 50375 ;; Defined at:
 50376 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
 50377 ;; Parameters:    Size  Location     Type
 50378 ;;  x               4    3[COMRAM] float 
 50379 ;; Auto vars:     Size  Location     Type
 50380 ;;  u               4   13[COMRAM] struct .
 50381 ;;  e               2   11[COMRAM] int 
 50382 ;; Return value:  Size  Location     Type
 50383 ;;                  2    3[COMRAM] int 
 50384 ;; Registers used:
 50385 ;;		wreg, status,2, status,0
 50386 ;; Tracked objects:
 50387 ;;		On entry : 0/0
 50388 ;;		On exit  : 0/0
 50389 ;;		Unchanged: 0/0
 50390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50392 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50394 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50395 ;;Total ram usage:       14 bytes
 50396 ;; Hardware stack levels used: 1
 50397 ;; Hardware stack levels required when called: 1
 50398 ;; This function calls:
 50399 ;;		Nothing
 50400 ;; This function is called by:
 50401 ;;		_efgtoa
 50402 ;;		_ftoa
 50403 ;; This function uses a non-reentrant model
 50404 ;;
 50405                           
 50406                           	psect	text133
 50407   01D544                     __ptext133:
 50408                           	callstack 0
 50409   01D544                     ___fpclassifyf:
 50410                           	callstack 114
 50411   01D544  C820  F50E         	movff	___fpclassifyf@F465,___fpclassifyf@u
 50412   01D548  C821  F50F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 50413   01D54C  C822  F510         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 50414   01D550  C823  F511         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 50415   01D554  C504  F50E         	movff	___fpclassifyf@x,___fpclassifyf@u
 50416   01D558  C505  F50F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 50417   01D55C  C506  F510         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 50418   01D560  C507  F511         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 50419   01D564  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 50420   01D568  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 50421   01D56C  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 50422   01D570  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 50423   01D574  0E18               	movlw	24
 50424   01D576  EFC2  F0EA         	goto	u25420
 50425   01D57A                     u25425:
 50426   01D57A  90D8               	bcf	status,0,c
 50427   01D57C  320B               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 50428   01D57E  320A               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 50429   01D580  3209               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 50430   01D582  3208               	rrcf	??___fpclassifyf^(0+1280),f,c
 50431   01D584                     u25420:
 50432   01D584  2EE8               	decfsz	wreg,f,c
 50433   01D586  EFBD  F0EA         	goto	u25425
 50434   01D58A  5008               	movf	??___fpclassifyf^(0+1280),w,c
 50435   01D58C  6E0C               	movwf	___fpclassifyf@e^(0+1280),c
 50436   01D58E  6A0D               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 50437   01D590  500C               	movf	___fpclassifyf@e^(0+1280),w,c
 50438   01D592  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 50439   01D594  A4D8               	btfss	status,2,c
 50440   01D596  EFCF  F0EA         	goto	u25431
 50441   01D59A  EFD1  F0EA         	goto	u25430
 50442   01D59E                     u25431:
 50443   01D59E  EFF1  F0EA         	goto	l19321
 50444   01D5A2                     u25430:
 50445   01D5A2  90D8               	bcf	status,0,c
 50446   01D5A4  340E               	rlcf	___fpclassifyf@u^(0+1280),w,c
 50447   01D5A6  6E08               	movwf	??___fpclassifyf^(0+1280),c
 50448   01D5A8  340F               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 50449   01D5AA  6E09               	movwf	(??___fpclassifyf+1)^(0+1280),c
 50450   01D5AC  3410               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 50451   01D5AE  6E0A               	movwf	(??___fpclassifyf+2)^(0+1280),c
 50452   01D5B0  3411               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 50453   01D5B2  6E0B               	movwf	(??___fpclassifyf+3)^(0+1280),c
 50454   01D5B4  5008               	movf	??___fpclassifyf^(0+1280),w,c
 50455   01D5B6  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 50456   01D5B8  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 50457   01D5BA  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 50458   01D5BC  A4D8               	btfss	status,2,c
 50459   01D5BE  EFE3  F0EA         	goto	u25441
 50460   01D5C2  EFE5  F0EA         	goto	u25440
 50461   01D5C6                     u25441:
 50462   01D5C6  EFEB  F0EA         	goto	l19317
 50463   01D5CA                     u25440:
 50464   01D5CA  0E00               	movlw	0
 50465   01D5CC  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 50466   01D5CE  0E02               	movlw	2
 50467   01D5D0  6E04               	movwf	?___fpclassifyf^(0+1280),c
 50468   01D5D2  EF20  F0EB         	goto	l3226
 50469   01D5D6                     l19317:
 50470   01D5D6  0E00               	movlw	0
 50471   01D5D8  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 50472   01D5DA  0E03               	movlw	3
 50473   01D5DC  6E04               	movwf	?___fpclassifyf^(0+1280),c
 50474   01D5DE  EF20  F0EB         	goto	l3226
 50475   01D5E2                     l19321:
 50476   01D5E2  280C               	incf	___fpclassifyf@e^(0+1280),w,c
 50477   01D5E4  100D               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 50478   01D5E6  A4D8               	btfss	status,2,c
 50479   01D5E8  EFF8  F0EA         	goto	u25451
 50480   01D5EC  EFFA  F0EA         	goto	u25450
 50481   01D5F0                     u25451:
 50482   01D5F0  EF1C  F0EB         	goto	l19327
 50483   01D5F4                     u25450:
 50484   01D5F4  C50E  F508         	movff	___fpclassifyf@u,??___fpclassifyf
 50485   01D5F8  C50F  F509         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 50486   01D5FC  C510  F50A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 50487   01D600  C511  F50B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 50488   01D604  0E09               	movlw	9
 50489   01D606                     u25465:
 50490   01D606  90D8               	bcf	status,0,c
 50491   01D608  3608               	rlcf	??___fpclassifyf^(0+1280),f,c
 50492   01D60A  3609               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 50493   01D60C  360A               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 50494   01D60E  360B               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 50495   01D610  2EE8               	decfsz	wreg,f,c
 50496   01D612  EF03  F0EB         	goto	u25465
 50497   01D616  5008               	movf	??___fpclassifyf^(0+1280),w,c
 50498   01D618  1009               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 50499   01D61A  100A               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 50500   01D61C  100B               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 50501   01D61E  B4D8               	btfsc	status,2,c
 50502   01D620  EF14  F0EB         	goto	u25471
 50503   01D624  EF17  F0EB         	goto	u25470
 50504   01D628                     u25471:
 50505   01D628  0E01               	movlw	1
 50506   01D62A  EF18  F0EB         	goto	u25480
 50507   01D62E                     u25470:
 50508   01D62E  0E00               	movlw	0
 50509   01D630                     u25480:
 50510   01D630  6E04               	movwf	?___fpclassifyf^(0+1280),c
 50511   01D632  6A05               	clrf	(?___fpclassifyf+1)^(0+1280),c
 50512   01D634  EF20  F0EB         	goto	l3226
 50513   01D638                     l19327:
 50514   01D638  0E00               	movlw	0
 50515   01D63A  6E05               	movwf	(?___fpclassifyf+1)^(0+1280),c
 50516   01D63C  0E04               	movlw	4
 50517   01D63E  6E04               	movwf	?___fpclassifyf^(0+1280),c
 50518   01D640                     l3226:
 50519   01D640  0012               	return		;funcret
 50520   01D642                     __end_of___fpclassifyf:
 50521                           	callstack 0
 50522                           
 50523 ;; *************** function ___fltol *****************
 50524 ;; Defined at:
 50525 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 50526 ;; Parameters:    Size  Location     Type
 50527 ;;  f1              4    3[COMRAM] int 
 50528 ;; Auto vars:     Size  Location     Type
 50529 ;;  exp1            1   12[COMRAM] unsigned char 
 50530 ;;  sign1           1   11[COMRAM] unsigned char 
 50531 ;; Return value:  Size  Location     Type
 50532 ;;                  4    3[COMRAM] long 
 50533 ;; Registers used:
 50534 ;;		wreg, status,2, status,0
 50535 ;; Tracked objects:
 50536 ;;		On entry : 0/0
 50537 ;;		On exit  : 0/0
 50538 ;;		Unchanged: 0/0
 50539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50543 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50544 ;;Total ram usage:       10 bytes
 50545 ;; Hardware stack levels used: 1
 50546 ;; Hardware stack levels required when called: 1
 50547 ;; This function calls:
 50548 ;;		Nothing
 50549 ;; This function is called by:
 50550 ;;		_efgtoa
 50551 ;;		_ftoa
 50552 ;; This function uses a non-reentrant model
 50553 ;;
 50554                           
 50555                           	psect	text134
 50556   01D038                     __ptext134:
 50557                           	callstack 0
 50558   01D038                     ___fltol:
 50559                           	callstack 114
 50560   01D038  3406               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 50561   01D03A  3407               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 50562   01D03C  6E0D               	movwf	___fltol@exp1^(0+1280),c
 50563   01D03E  500D               	movf	___fltol@exp1^(0+1280),w,c
 50564   01D040  A4D8               	btfss	status,2,c
 50565   01D042  EF25  F0E8         	goto	u26121
 50566   01D046  EF27  F0E8         	goto	u26120
 50567   01D04A                     u26121:
 50568   01D04A  EF31  F0E8         	goto	l19733
 50569   01D04E                     u26120:
 50570   01D04E                     l19729:
 50571   01D04E  0E00               	movlw	0
 50572   01D050  6E04               	movwf	?___fltol^(0+1280),c
 50573   01D052  0E00               	movlw	0
 50574   01D054  6E05               	movwf	(?___fltol+1)^(0+1280),c
 50575   01D056  0E00               	movlw	0
 50576   01D058  6E06               	movwf	(?___fltol+2)^(0+1280),c
 50577   01D05A  0E00               	movlw	0
 50578   01D05C  6E07               	movwf	(?___fltol+3)^(0+1280),c
 50579   01D05E  EF9E  F0E8         	goto	l2842
 50580   01D062                     l19733:
 50581   01D062  C504  F508         	movff	___fltol@f1,??___fltol
 50582   01D066  C505  F509         	movff	___fltol@f1+1,??___fltol+1
 50583   01D06A  C506  F50A         	movff	___fltol@f1+2,??___fltol+2
 50584   01D06E  C507  F50B         	movff	___fltol@f1+3,??___fltol+3
 50585   01D072  0E20               	movlw	32
 50586   01D074  EF41  F0E8         	goto	u26130
 50587   01D078                     u26135:
 50588   01D078  90D8               	bcf	status,0,c
 50589   01D07A  320B               	rrcf	(??___fltol+3)^(0+1280),f,c
 50590   01D07C  320A               	rrcf	(??___fltol+2)^(0+1280),f,c
 50591   01D07E  3209               	rrcf	(??___fltol+1)^(0+1280),f,c
 50592   01D080  3208               	rrcf	??___fltol^(0+1280),f,c
 50593   01D082                     u26130:
 50594   01D082  2EE8               	decfsz	wreg,f,c
 50595   01D084  EF3C  F0E8         	goto	u26135
 50596   01D088  5008               	movf	??___fltol^(0+1280),w,c
 50597   01D08A  6E0C               	movwf	___fltol@sign1^(0+1280),c
 50598   01D08C  8E06               	bsf	(___fltol@f1+2)^(0+1280),7,c
 50599   01D08E  0EFF               	movlw	255
 50600   01D090  1604               	andwf	___fltol@f1^(0+1280),f,c
 50601   01D092  0EFF               	movlw	255
 50602   01D094  1605               	andwf	(___fltol@f1+1)^(0+1280),f,c
 50603   01D096  0EFF               	movlw	255
 50604   01D098  1606               	andwf	(___fltol@f1+2)^(0+1280),f,c
 50605   01D09A  0E00               	movlw	0
 50606   01D09C  1607               	andwf	(___fltol@f1+3)^(0+1280),f,c
 50607   01D09E  0E96               	movlw	150
 50608   01D0A0  5E0D               	subwf	___fltol@exp1^(0+1280),f,c
 50609   01D0A2  BE0D               	btfsc	___fltol@exp1^(0+1280),7,c
 50610   01D0A4  EF58  F0E8         	goto	u26140
 50611   01D0A8  EF56  F0E8         	goto	u26141
 50612   01D0AC                     u26141:
 50613   01D0AC  EF6E  F0E8         	goto	l19753
 50614   01D0B0                     u26140:
 50615   01D0B0  500D               	movf	___fltol@exp1^(0+1280),w,c
 50616   01D0B2  0A80               	xorlw	128
 50617   01D0B4  0F97               	addlw	151
 50618   01D0B6  B0D8               	btfsc	status,0,c
 50619   01D0B8  EF60  F0E8         	goto	u26151
 50620   01D0BC  EF62  F0E8         	goto	u26150
 50621   01D0C0                     u26151:
 50622   01D0C0  EF64  F0E8         	goto	l19749
 50623   01D0C4                     u26150:
 50624   01D0C4  EF27  F0E8         	goto	l19729
 50625   01D0C8                     l19749:
 50626   01D0C8  90D8               	bcf	status,0,c
 50627   01D0CA  3207               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 50628   01D0CC  3206               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 50629   01D0CE  3205               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 50630   01D0D0  3204               	rrcf	___fltol@f1^(0+1280),f,c
 50631   01D0D2  3E0D               	incfsz	___fltol@exp1^(0+1280),f,c
 50632   01D0D4  EF64  F0E8         	goto	l19749
 50633   01D0D8  EF86  F0E8         	goto	l19763
 50634   01D0DC                     l19753:
 50635   01D0DC  0E1F               	movlw	31
 50636   01D0DE  640D               	cpfsgt	___fltol@exp1^(0+1280),c
 50637   01D0E0  EF74  F0E8         	goto	u26161
 50638   01D0E4  EF76  F0E8         	goto	u26160
 50639   01D0E8                     u26161:
 50640   01D0E8  EF7E  F0E8         	goto	l19761
 50641   01D0EC                     u26160:
 50642   01D0EC  EF27  F0E8         	goto	l19729
 50643   01D0F0                     l19759:
 50644   01D0F0  90D8               	bcf	status,0,c
 50645   01D0F2  3604               	rlcf	___fltol@f1^(0+1280),f,c
 50646   01D0F4  3605               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 50647   01D0F6  3606               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 50648   01D0F8  3607               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 50649   01D0FA  060D               	decf	___fltol@exp1^(0+1280),f,c
 50650   01D0FC                     l19761:
 50651   01D0FC  500D               	movf	___fltol@exp1^(0+1280),w,c
 50652   01D0FE  A4D8               	btfss	status,2,c
 50653   01D100  EF84  F0E8         	goto	u26171
 50654   01D104  EF86  F0E8         	goto	u26170
 50655   01D108                     u26171:
 50656   01D108  EF78  F0E8         	goto	l19759
 50657   01D10C                     u26170:
 50658   01D10C                     l19763:
 50659   01D10C  500C               	movf	___fltol@sign1^(0+1280),w,c
 50660   01D10E  B4D8               	btfsc	status,2,c
 50661   01D110  EF8C  F0E8         	goto	u26181
 50662   01D114  EF8E  F0E8         	goto	u26180
 50663   01D118                     u26181:
 50664   01D118  EF96  F0E8         	goto	l19767
 50665   01D11C                     u26180:
 50666   01D11C  1E07               	comf	(___fltol@f1+3)^(0+1280),f,c
 50667   01D11E  1E06               	comf	(___fltol@f1+2)^(0+1280),f,c
 50668   01D120  1E05               	comf	(___fltol@f1+1)^(0+1280),f,c
 50669   01D122  6C04               	negf	___fltol@f1^(0+1280),c
 50670   01D124  0E00               	movlw	0
 50671   01D126  2205               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 50672   01D128  2206               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 50673   01D12A  2207               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 50674   01D12C                     l19767:
 50675   01D12C  C504  F504         	movff	___fltol@f1,?___fltol
 50676   01D130  C505  F505         	movff	___fltol@f1+1,?___fltol+1
 50677   01D134  C506  F506         	movff	___fltol@f1+2,?___fltol+2
 50678   01D138  C507  F507         	movff	___fltol@f1+3,?___fltol+3
 50679   01D13C                     l2842:
 50680   01D13C  0012               	return		;funcret
 50681   01D13E                     __end_of___fltol:
 50682                           	callstack 0
 50683                           
 50684 ;; *************** function ___flsub *****************
 50685 ;; Defined at:
 50686 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 50687 ;; Parameters:    Size  Location     Type
 50688 ;;  b               4   42[COMRAM] long 
 50689 ;;  a               4   46[COMRAM] long 
 50690 ;; Auto vars:     Size  Location     Type
 50691 ;;		None
 50692 ;; Return value:  Size  Location     Type
 50693 ;;                  4   42[COMRAM] long 
 50694 ;; Registers used:
 50695 ;;		wreg, status,2, status,0, cstack
 50696 ;; Tracked objects:
 50697 ;;		On entry : 0/0
 50698 ;;		On exit  : 0/0
 50699 ;;		Unchanged: 0/0
 50700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50705 ;;Total ram usage:        8 bytes
 50706 ;; Hardware stack levels used: 1
 50707 ;; Hardware stack levels required when called: 2
 50708 ;; This function calls:
 50709 ;;		___fladd
 50710 ;; This function is called by:
 50711 ;;		_efgtoa
 50712 ;;		_ftoa
 50713 ;; This function uses a non-reentrant model
 50714 ;;
 50715                           
 50716                           	psect	text135
 50717   01FB72                     __ptext135:
 50718                           	callstack 0
 50719   01FB72                     ___flsub:
 50720                           	callstack 113
 50721   01FB72  0E00               	movlw	0
 50722   01FB74  1A2F               	xorwf	___flsub@a^(0+1280),f,c
 50723   01FB76  0E00               	movlw	0
 50724   01FB78  1A30               	xorwf	(___flsub@a+1)^(0+1280),f,c
 50725   01FB7A  0E00               	movlw	0
 50726   01FB7C  1A31               	xorwf	(___flsub@a+2)^(0+1280),f,c
 50727   01FB7E  0E80               	movlw	128
 50728   01FB80  1A32               	xorwf	(___flsub@a+3)^(0+1280),f,c
 50729   01FB82  C52B  F504         	movff	___flsub@b,___fladd@b
 50730   01FB86  C52C  F505         	movff	___flsub@b+1,___fladd@b+1
 50731   01FB8A  C52D  F506         	movff	___flsub@b+2,___fladd@b+2
 50732   01FB8E  C52E  F507         	movff	___flsub@b+3,___fladd@b+3
 50733   01FB92  C52F  F508         	movff	___flsub@a,___fladd@a
 50734   01FB96  C530  F509         	movff	___flsub@a+1,___fladd@a+1
 50735   01FB9A  C531  F50A         	movff	___flsub@a+2,___fladd@a+2
 50736   01FB9E  C532  F50B         	movff	___flsub@a+3,___fladd@a+3
 50737   01FBA2  EC38  F0A5         	call	___fladd	;wreg free
 50738   01FBA6  C504  F52B         	movff	?___fladd,?___flsub
 50739   01FBAA  C505  F52C         	movff	?___fladd+1,?___flsub+1
 50740   01FBAE  C506  F52D         	movff	?___fladd+2,?___flsub+2
 50741   01FBB2  C507  F52E         	movff	?___fladd+3,?___flsub+3
 50742   01FBB6  0012               	return		;funcret
 50743   01FBB8                     __end_of___flsub:
 50744                           	callstack 0
 50745                           
 50746 ;; *************** function ___fladd *****************
 50747 ;; Defined at:
 50748 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 50749 ;; Parameters:    Size  Location     Type
 50750 ;;  b               4    3[COMRAM] long 
 50751 ;;  a               4    7[COMRAM] long 
 50752 ;; Auto vars:     Size  Location     Type
 50753 ;;  grs             1   18[COMRAM] unsigned char 
 50754 ;;  bexp            1   17[COMRAM] unsigned char 
 50755 ;;  aexp            1   16[COMRAM] unsigned char 
 50756 ;;  signs           1   15[COMRAM] unsigned char 
 50757 ;; Return value:  Size  Location     Type
 50758 ;;                  4    3[COMRAM] unsigned char 
 50759 ;; Registers used:
 50760 ;;		wreg, status,2, status,0
 50761 ;; Tracked objects:
 50762 ;;		On entry : 0/0
 50763 ;;		On exit  : 0/0
 50764 ;;		Unchanged: 0/0
 50765 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50767 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50769 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50770 ;;Total ram usage:       16 bytes
 50771 ;; Hardware stack levels used: 1
 50772 ;; Hardware stack levels required when called: 1
 50773 ;; This function calls:
 50774 ;;		Nothing
 50775 ;; This function is called by:
 50776 ;;		___flsub
 50777 ;;		_efgtoa
 50778 ;;		_ftoa
 50779 ;; This function uses a non-reentrant model
 50780 ;;
 50781                           
 50782                           	psect	text136
 50783   014A70                     __ptext136:
 50784                           	callstack 0
 50785   014A70                     ___fladd:
 50786                           	callstack 113
 50787   014A70  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 50788   014A72  0B80               	andlw	128
 50789   014A74  6E10               	movwf	___fladd@signs^(0+1280),c
 50790   014A76  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 50791   014A78  2407               	addwf	(___fladd@b+3)^(0+1280),w,c
 50792   014A7A  6E12               	movwf	___fladd@bexp^(0+1280),c
 50793   014A7C  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 50794   014A7E  EF43  F0A5         	goto	u25011
 50795   014A82  EF45  F0A5         	goto	u25010
 50796   014A86                     u25011:
 50797   014A86  EF46  F0A5         	goto	l19101
 50798   014A8A                     u25010:
 50799   014A8A  8012               	bsf	___fladd@bexp^(0+1280),0,c
 50800   014A8C                     l19101:
 50801   014A8C  5012               	movf	___fladd@bexp^(0+1280),w,c
 50802   014A8E  B4D8               	btfsc	status,2,c
 50803   014A90  EF4C  F0A5         	goto	u25021
 50804   014A94  EF4E  F0A5         	goto	u25020
 50805   014A98                     u25021:
 50806   014A98  EF62  F0A5         	goto	l19111
 50807   014A9C                     u25020:
 50808   014A9C  2812               	incf	___fladd@bexp^(0+1280),w,c
 50809   014A9E  A4D8               	btfss	status,2,c
 50810   014AA0  EF54  F0A5         	goto	u25031
 50811   014AA4  EF56  F0A5         	goto	u25030
 50812   014AA8                     u25031:
 50813   014AA8  EF5E  F0A5         	goto	l19107
 50814   014AAC                     u25030:
 50815   014AAC  0E00               	movlw	0
 50816   014AAE  6E04               	movwf	___fladd@b^(0+1280),c
 50817   014AB0  0E00               	movlw	0
 50818   014AB2  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 50819   014AB4  0E00               	movlw	0
 50820   014AB6  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 50821   014AB8  0E00               	movlw	0
 50822   014ABA  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 50823   014ABC                     l19107:
 50824   014ABC  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 50825   014ABE  6A07               	clrf	(___fladd@b+3)^(0+1280),c
 50826   014AC0  EF6A  F0A5         	goto	l19113
 50827   014AC4                     l19111:
 50828   014AC4  0E00               	movlw	0
 50829   014AC6  6E04               	movwf	___fladd@b^(0+1280),c
 50830   014AC8  0E00               	movlw	0
 50831   014ACA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 50832   014ACC  0E00               	movlw	0
 50833   014ACE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 50834   014AD0  0E00               	movlw	0
 50835   014AD2  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 50836   014AD4                     l19113:
 50837   014AD4  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 50838   014AD6  0B80               	andlw	128
 50839   014AD8  6E11               	movwf	___fladd@aexp^(0+1280),c
 50840   014ADA  5010               	movf	___fladd@signs^(0+1280),w,c
 50841   014ADC  1811               	xorwf	___fladd@aexp^(0+1280),w,c
 50842   014ADE  B4D8               	btfsc	status,2,c
 50843   014AE0  EF74  F0A5         	goto	u25041
 50844   014AE4  EF76  F0A5         	goto	u25040
 50845   014AE8                     u25041:
 50846   014AE8  EF77  F0A5         	goto	l19119
 50847   014AEC                     u25040:
 50848   014AEC  8C10               	bsf	___fladd@signs^(0+1280),6,c
 50849   014AEE                     l19119:
 50850   014AEE  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 50851   014AF0  240B               	addwf	(___fladd@a+3)^(0+1280),w,c
 50852   014AF2  6E11               	movwf	___fladd@aexp^(0+1280),c
 50853   014AF4  AE0A               	btfss	(___fladd@a+2)^(0+1280),7,c
 50854   014AF6  EF7F  F0A5         	goto	u25051
 50855   014AFA  EF81  F0A5         	goto	u25050
 50856   014AFE                     u25051:
 50857   014AFE  EF82  F0A5         	goto	l19125
 50858   014B02                     u25050:
 50859   014B02  8011               	bsf	___fladd@aexp^(0+1280),0,c
 50860   014B04                     l19125:
 50861   014B04  5011               	movf	___fladd@aexp^(0+1280),w,c
 50862   014B06  B4D8               	btfsc	status,2,c
 50863   014B08  EF88  F0A5         	goto	u25061
 50864   014B0C  EF8A  F0A5         	goto	u25060
 50865   014B10                     u25061:
 50866   014B10  EF9E  F0A5         	goto	l19135
 50867   014B14                     u25060:
 50868   014B14  2811               	incf	___fladd@aexp^(0+1280),w,c
 50869   014B16  A4D8               	btfss	status,2,c
 50870   014B18  EF90  F0A5         	goto	u25071
 50871   014B1C  EF92  F0A5         	goto	u25070
 50872   014B20                     u25071:
 50873   014B20  EF9A  F0A5         	goto	l19131
 50874   014B24                     u25070:
 50875   014B24  0E00               	movlw	0
 50876   014B26  6E08               	movwf	___fladd@a^(0+1280),c
 50877   014B28  0E00               	movlw	0
 50878   014B2A  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 50879   014B2C  0E00               	movlw	0
 50880   014B2E  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 50881   014B30  0E00               	movlw	0
 50882   014B32  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 50883   014B34                     l19131:
 50884   014B34  8E0A               	bsf	(___fladd@a+2)^(0+1280),7,c
 50885   014B36  6A0B               	clrf	(___fladd@a+3)^(0+1280),c
 50886   014B38  EFA6  F0A5         	goto	l19137
 50887   014B3C                     l19135:
 50888   014B3C  0E00               	movlw	0
 50889   014B3E  6E08               	movwf	___fladd@a^(0+1280),c
 50890   014B40  0E00               	movlw	0
 50891   014B42  6E09               	movwf	(___fladd@a+1)^(0+1280),c
 50892   014B44  0E00               	movlw	0
 50893   014B46  6E0A               	movwf	(___fladd@a+2)^(0+1280),c
 50894   014B48  0E00               	movlw	0
 50895   014B4A  6E0B               	movwf	(___fladd@a+3)^(0+1280),c
 50896   014B4C                     l19137:
 50897   014B4C  5012               	movf	___fladd@bexp^(0+1280),w,c
 50898   014B4E  5C11               	subwf	___fladd@aexp^(0+1280),w,c
 50899   014B50  B0D8               	btfsc	status,0,c
 50900   014B52  EFAD  F0A5         	goto	u25081
 50901   014B56  EFAF  F0A5         	goto	u25080
 50902   014B5A                     u25081:
 50903   014B5A  EFD6  F0A5         	goto	l19173
 50904   014B5E                     u25080:
 50905   014B5E  AC10               	btfss	___fladd@signs^(0+1280),6,c
 50906   014B60  EFB4  F0A5         	goto	u25091
 50907   014B64  EFB6  F0A5         	goto	u25090
 50908   014B68                     u25091:
 50909   014B68  EFB8  F0A5         	goto	l19143
 50910   014B6C                     u25090:
 50911   014B6C  0E80               	movlw	128
 50912   014B6E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 50913   014B70                     l19143:
 50914   014B70  C512  F513         	movff	___fladd@bexp,___fladd@grs
 50915   014B74  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 50916   014B78  C513  F511         	movff	___fladd@grs,___fladd@aexp
 50917   014B7C  C504  F513         	movff	___fladd@b,___fladd@grs
 50918   014B80  C508  F504         	movff	___fladd@a,___fladd@b
 50919   014B84  C513  F508         	movff	___fladd@grs,___fladd@a
 50920   014B88  C505  F513         	movff	___fladd@b+1,___fladd@grs
 50921   014B8C  C509  F505         	movff	___fladd@a+1,___fladd@b+1
 50922   014B90  C513  F509         	movff	___fladd@grs,___fladd@a+1
 50923   014B94  C506  F513         	movff	___fladd@b+2,___fladd@grs
 50924   014B98  C50A  F506         	movff	___fladd@a+2,___fladd@b+2
 50925   014B9C  C513  F50A         	movff	___fladd@grs,___fladd@a+2
 50926   014BA0  C507  F513         	movff	___fladd@b+3,___fladd@grs
 50927   014BA4  C50B  F507         	movff	___fladd@a+3,___fladd@b+3
 50928   014BA8  C513  F50B         	movff	___fladd@grs,___fladd@a+3
 50929   014BAC                     l19173:
 50930   014BAC  6A13               	clrf	___fladd@grs^(0+1280),c
 50931   014BAE  5012               	movf	___fladd@bexp^(0+1280),w,c
 50932   014BB0  C511  F50C         	movff	___fladd@aexp,??___fladd
 50933   014BB4  6A0D               	clrf	(??___fladd+1)^(0+1280),c
 50934   014BB6  5E0C               	subwf	??___fladd^(0+1280),f,c
 50935   014BB8  0E00               	movlw	0
 50936   014BBA  5A0D               	subwfb	(??___fladd+1)^(0+1280),f,c
 50937   014BBC  BE0D               	btfsc	(??___fladd+1)^(0+1280),7,c
 50938   014BBE  EFEA  F0A5         	goto	u25101
 50939   014BC2  500D               	movf	(??___fladd+1)^(0+1280),w,c
 50940   014BC4  E109               	bnz	u25100
 50941   014BC6  0E1A               	movlw	26
 50942   014BC8  5C0C               	subwf	??___fladd^(0+1280),w,c
 50943   014BCA  A0D8               	btfss	status,0,c
 50944   014BCC  EFEA  F0A5         	goto	u25101
 50945   014BD0  EFEC  F0A5         	goto	u25100
 50946   014BD4                     u25101:
 50947   014BD4  EF23  F0A6         	goto	l3074
 50948   014BD8                     u25100:
 50949   014BD8  5004               	movf	___fladd@b^(0+1280),w,c
 50950   014BDA  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 50951   014BDC  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 50952   014BDE  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 50953   014BE0  A4D8               	btfss	status,2,c
 50954   014BE2  EFF5  F0A5         	goto	u25111
 50955   014BE6  EFF8  F0A5         	goto	u25110
 50956   014BEA                     u25111:
 50957   014BEA  0E01               	movlw	1
 50958   014BEC  EFF9  F0A5         	goto	u25120
 50959   014BF0                     u25110:
 50960   014BF0  0E00               	movlw	0
 50961   014BF2                     u25120:
 50962   014BF2  6E13               	movwf	___fladd@grs^(0+1280),c
 50963   014BF4  0E00               	movlw	0
 50964   014BF6  6E04               	movwf	___fladd@b^(0+1280),c
 50965   014BF8  0E00               	movlw	0
 50966   014BFA  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 50967   014BFC  0E00               	movlw	0
 50968   014BFE  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 50969   014C00  0E00               	movlw	0
 50970   014C02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 50971   014C04  C511  F512         	movff	___fladd@aexp,___fladd@bexp
 50972   014C08  EF2C  F0A6         	goto	l3073
 50973   014C0C                     l3075:
 50974   014C0C  A013               	btfss	___fladd@grs^(0+1280),0,c
 50975   014C0E  EF0B  F0A6         	goto	u25131
 50976   014C12  EF0D  F0A6         	goto	u25130
 50977   014C16                     u25131:
 50978   014C16  EF13  F0A6         	goto	l19183
 50979   014C1A                     u25130:
 50980   014C1A  90D8               	bcf	status,0,c
 50981   014C1C  3013               	rrcf	___fladd@grs^(0+1280),w,c
 50982   014C1E  0901               	iorlw	1
 50983   014C20  6E13               	movwf	___fladd@grs^(0+1280),c
 50984   014C22  EF15  F0A6         	goto	l19185
 50985   014C26                     l19183:
 50986   014C26  90D8               	bcf	status,0,c
 50987   014C28  3213               	rrcf	___fladd@grs^(0+1280),f,c
 50988   014C2A                     l19185:
 50989   014C2A  A004               	btfss	___fladd@b^(0+1280),0,c
 50990   014C2C  EF1A  F0A6         	goto	u25141
 50991   014C30  EF1C  F0A6         	goto	u25140
 50992   014C34                     u25141:
 50993   014C34  EF1D  F0A6         	goto	l19189
 50994   014C38                     u25140:
 50995   014C38  8E13               	bsf	___fladd@grs^(0+1280),7,c
 50996   014C3A                     l19189:
 50997   014C3A  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 50998   014C3C  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 50999   014C3E  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 51000   014C40  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 51001   014C42  3204               	rrcf	___fladd@b^(0+1280),f,c
 51002   014C44  2A12               	incf	___fladd@bexp^(0+1280),f,c
 51003   014C46                     l3074:
 51004   014C46  5011               	movf	___fladd@aexp^(0+1280),w,c
 51005   014C48  5C12               	subwf	___fladd@bexp^(0+1280),w,c
 51006   014C4A  A0D8               	btfss	status,0,c
 51007   014C4C  EF2A  F0A6         	goto	u25151
 51008   014C50  EF2C  F0A6         	goto	u25150
 51009   014C54                     u25151:
 51010   014C54  EF06  F0A6         	goto	l3075
 51011   014C58                     u25150:
 51012   014C58                     l3073:
 51013   014C58  BC10               	btfsc	___fladd@signs^(0+1280),6,c
 51014   014C5A  EF31  F0A6         	goto	u25161
 51015   014C5E  EF33  F0A6         	goto	u25160
 51016   014C62                     u25161:
 51017   014C62  EF73  F0A6         	goto	l19217
 51018   014C66                     u25160:
 51019   014C66  5012               	movf	___fladd@bexp^(0+1280),w,c
 51020   014C68  A4D8               	btfss	status,2,c
 51021   014C6A  EF39  F0A6         	goto	u25171
 51022   014C6E  EF3B  F0A6         	goto	u25170
 51023   014C72                     u25171:
 51024   014C72  EF45  F0A6         	goto	l19199
 51025   014C76                     u25170:
 51026   014C76  0E00               	movlw	0
 51027   014C78  6E04               	movwf	?___fladd^(0+1280),c
 51028   014C7A  0E00               	movlw	0
 51029   014C7C  6E05               	movwf	(?___fladd+1)^(0+1280),c
 51030   014C7E  0E00               	movlw	0
 51031   014C80  6E06               	movwf	(?___fladd+2)^(0+1280),c
 51032   014C82  0E00               	movlw	0
 51033   014C84  6E07               	movwf	(?___fladd+3)^(0+1280),c
 51034   014C86  EF92  F0A7         	goto	l3082
 51035   014C8A                     l19199:
 51036   014C8A  5008               	movf	___fladd@a^(0+1280),w,c
 51037   014C8C  2604               	addwf	___fladd@b^(0+1280),f,c
 51038   014C8E  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 51039   014C90  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 51040   014C92  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 51041   014C94  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 51042   014C96  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 51043   014C98  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 51044   014C9A  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 51045   014C9C  EF52  F0A6         	goto	u25181
 51046   014CA0  EF54  F0A6         	goto	u25180
 51047   014CA4                     u25181:
 51048   014CA4  EF00  F0A7         	goto	l3087
 51049   014CA8                     u25180:
 51050   014CA8  A013               	btfss	___fladd@grs^(0+1280),0,c
 51051   014CAA  EF59  F0A6         	goto	u25191
 51052   014CAE  EF5B  F0A6         	goto	u25190
 51053   014CB2                     u25191:
 51054   014CB2  EF61  F0A6         	goto	l19207
 51055   014CB6                     u25190:
 51056   014CB6  90D8               	bcf	status,0,c
 51057   014CB8  3013               	rrcf	___fladd@grs^(0+1280),w,c
 51058   014CBA  0901               	iorlw	1
 51059   014CBC  6E13               	movwf	___fladd@grs^(0+1280),c
 51060   014CBE  EF63  F0A6         	goto	l19209
 51061   014CC2                     l19207:
 51062   014CC2  90D8               	bcf	status,0,c
 51063   014CC4  3213               	rrcf	___fladd@grs^(0+1280),f,c
 51064   014CC6                     l19209:
 51065   014CC6  A004               	btfss	___fladd@b^(0+1280),0,c
 51066   014CC8  EF68  F0A6         	goto	u25201
 51067   014CCC  EF6A  F0A6         	goto	u25200
 51068   014CD0                     u25201:
 51069   014CD0  EF6B  F0A6         	goto	l19213
 51070   014CD4                     u25200:
 51071   014CD4  8E13               	bsf	___fladd@grs^(0+1280),7,c
 51072   014CD6                     l19213:
 51073   014CD6  3407               	rlcf	(___fladd@b+3)^(0+1280),w,c
 51074   014CD8  3207               	rrcf	(___fladd@b+3)^(0+1280),f,c
 51075   014CDA  3206               	rrcf	(___fladd@b+2)^(0+1280),f,c
 51076   014CDC  3205               	rrcf	(___fladd@b+1)^(0+1280),f,c
 51077   014CDE  3204               	rrcf	___fladd@b^(0+1280),f,c
 51078   014CE0  2A12               	incf	___fladd@bexp^(0+1280),f,c
 51079   014CE2  EF00  F0A7         	goto	l3087
 51080   014CE6                     l19217:
 51081   014CE6  5008               	movf	___fladd@a^(0+1280),w,c
 51082   014CE8  5C04               	subwf	___fladd@b^(0+1280),w,c
 51083   014CEA  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 51084   014CEC  5805               	subwfb	(___fladd@b+1)^(0+1280),w,c
 51085   014CEE  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 51086   014CF0  5806               	subwfb	(___fladd@b+2)^(0+1280),w,c
 51087   014CF2  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 51088   014CF4  0A80               	xorlw	128
 51089   014CF6  6E0C               	movwf	??___fladd^(0+1280),c
 51090   014CF8  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 51091   014CFA  0A80               	xorlw	128
 51092   014CFC  580C               	subwfb	??___fladd^(0+1280),w,c
 51093   014CFE  B0D8               	btfsc	status,0,c
 51094   014D00  EF84  F0A6         	goto	u25211
 51095   014D04  EF86  F0A6         	goto	u25210
 51096   014D08                     u25211:
 51097   014D08  EFB1  F0A6         	goto	l19227
 51098   014D0C                     u25210:
 51099   014D0C  5004               	movf	___fladd@b^(0+1280),w,c
 51100   014D0E  5C08               	subwf	___fladd@a^(0+1280),w,c
 51101   014D10  6E0C               	movwf	??___fladd^(0+1280),c
 51102   014D12  5005               	movf	(___fladd@b+1)^(0+1280),w,c
 51103   014D14  5809               	subwfb	(___fladd@a+1)^(0+1280),w,c
 51104   014D16  6E0D               	movwf	(??___fladd+1)^(0+1280),c
 51105   014D18  5006               	movf	(___fladd@b+2)^(0+1280),w,c
 51106   014D1A  580A               	subwfb	(___fladd@a+2)^(0+1280),w,c
 51107   014D1C  6E0E               	movwf	(??___fladd+2)^(0+1280),c
 51108   014D1E  5007               	movf	(___fladd@b+3)^(0+1280),w,c
 51109   014D20  580B               	subwfb	(___fladd@a+3)^(0+1280),w,c
 51110   014D22  6E0F               	movwf	(??___fladd+3)^(0+1280),c
 51111   014D24  0EFF               	movlw	255
 51112   014D26  240C               	addwf	??___fladd^(0+1280),w,c
 51113   014D28  6E04               	movwf	___fladd@b^(0+1280),c
 51114   014D2A  0EFF               	movlw	255
 51115   014D2C  200D               	addwfc	(??___fladd+1)^(0+1280),w,c
 51116   014D2E  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 51117   014D30  0EFF               	movlw	255
 51118   014D32  200E               	addwfc	(??___fladd+2)^(0+1280),w,c
 51119   014D34  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 51120   014D36  0EFF               	movlw	255
 51121   014D38  200F               	addwfc	(??___fladd+3)^(0+1280),w,c
 51122   014D3A  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 51123   014D3C  0E80               	movlw	128
 51124   014D3E  1A10               	xorwf	___fladd@signs^(0+1280),f,c
 51125   014D40  6C13               	negf	___fladd@grs^(0+1280),c
 51126   014D42  5013               	movf	___fladd@grs^(0+1280),w,c
 51127   014D44  A4D8               	btfss	status,2,c
 51128   014D46  EFA7  F0A6         	goto	u25221
 51129   014D4A  EFA9  F0A6         	goto	u25220
 51130   014D4E                     u25221:
 51131   014D4E  EFB9  F0A6         	goto	l3090
 51132   014D52                     u25220:
 51133   014D52  0E01               	movlw	1
 51134   014D54  2604               	addwf	___fladd@b^(0+1280),f,c
 51135   014D56  0E00               	movlw	0
 51136   014D58  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 51137   014D5A  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 51138   014D5C  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 51139   014D5E  EFB9  F0A6         	goto	l3090
 51140   014D62                     l19227:
 51141   014D62  5008               	movf	___fladd@a^(0+1280),w,c
 51142   014D64  5E04               	subwf	___fladd@b^(0+1280),f,c
 51143   014D66  5009               	movf	(___fladd@a+1)^(0+1280),w,c
 51144   014D68  5A05               	subwfb	(___fladd@b+1)^(0+1280),f,c
 51145   014D6A  500A               	movf	(___fladd@a+2)^(0+1280),w,c
 51146   014D6C  5A06               	subwfb	(___fladd@b+2)^(0+1280),f,c
 51147   014D6E  500B               	movf	(___fladd@a+3)^(0+1280),w,c
 51148   014D70  5A07               	subwfb	(___fladd@b+3)^(0+1280),f,c
 51149   014D72                     l3090:
 51150   014D72  5004               	movf	___fladd@b^(0+1280),w,c
 51151   014D74  1005               	iorwf	(___fladd@b+1)^(0+1280),w,c
 51152   014D76  1006               	iorwf	(___fladd@b+2)^(0+1280),w,c
 51153   014D78  1007               	iorwf	(___fladd@b+3)^(0+1280),w,c
 51154   014D7A  A4D8               	btfss	status,2,c
 51155   014D7C  EFC2  F0A6         	goto	u25231
 51156   014D80  EFC4  F0A6         	goto	u25230
 51157   014D84                     u25231:
 51158   014D84  EFF9  F0A6         	goto	l19251
 51159   014D88                     u25230:
 51160   014D88  5013               	movf	___fladd@grs^(0+1280),w,c
 51161   014D8A  A4D8               	btfss	status,2,c
 51162   014D8C  EFCA  F0A6         	goto	u25241
 51163   014D90  EFCC  F0A6         	goto	u25240
 51164   014D94                     u25241:
 51165   014D94  EFF9  F0A6         	goto	l19251
 51166   014D98                     u25240:
 51167   014D98  0E00               	movlw	0
 51168   014D9A  6E04               	movwf	?___fladd^(0+1280),c
 51169   014D9C  0E00               	movlw	0
 51170   014D9E  6E05               	movwf	(?___fladd+1)^(0+1280),c
 51171   014DA0  0E00               	movlw	0
 51172   014DA2  6E06               	movwf	(?___fladd+2)^(0+1280),c
 51173   014DA4  0E00               	movlw	0
 51174   014DA6  6E07               	movwf	(?___fladd+3)^(0+1280),c
 51175   014DA8  EF92  F0A7         	goto	l3082
 51176   014DAC                     l19235:
 51177   014DAC  90D8               	bcf	status,0,c
 51178   014DAE  3604               	rlcf	___fladd@b^(0+1280),f,c
 51179   014DB0  3605               	rlcf	(___fladd@b+1)^(0+1280),f,c
 51180   014DB2  3606               	rlcf	(___fladd@b+2)^(0+1280),f,c
 51181   014DB4  3607               	rlcf	(___fladd@b+3)^(0+1280),f,c
 51182   014DB6  AE13               	btfss	___fladd@grs^(0+1280),7,c
 51183   014DB8  EFE0  F0A6         	goto	u25251
 51184   014DBC  EFE2  F0A6         	goto	u25250
 51185   014DC0                     u25251:
 51186   014DC0  EFE3  F0A6         	goto	l19241
 51187   014DC4                     u25250:
 51188   014DC4  8004               	bsf	___fladd@b^(0+1280),0,c
 51189   014DC6                     l19241:
 51190   014DC6  A013               	btfss	___fladd@grs^(0+1280),0,c
 51191   014DC8  EFE8  F0A6         	goto	u25261
 51192   014DCC  EFEA  F0A6         	goto	u25260
 51193   014DD0                     u25261:
 51194   014DD0  EFEE  F0A6         	goto	l19245
 51195   014DD4                     u25260:
 51196   014DD4  80D8               	bsf	status,0,c
 51197   014DD6  3613               	rlcf	___fladd@grs^(0+1280),f,c
 51198   014DD8  EFF0  F0A6         	goto	l19247
 51199   014DDC                     l19245:
 51200   014DDC  90D8               	bcf	status,0,c
 51201   014DDE  3613               	rlcf	___fladd@grs^(0+1280),f,c
 51202   014DE0                     l19247:
 51203   014DE0  5012               	movf	___fladd@bexp^(0+1280),w,c
 51204   014DE2  B4D8               	btfsc	status,2,c
 51205   014DE4  EFF6  F0A6         	goto	u25271
 51206   014DE8  EFF8  F0A6         	goto	u25270
 51207   014DEC                     u25271:
 51208   014DEC  EFF9  F0A6         	goto	l19251
 51209   014DF0                     u25270:
 51210   014DF0  0612               	decf	___fladd@bexp^(0+1280),f,c
 51211   014DF2                     l19251:
 51212   014DF2  AE06               	btfss	(___fladd@b+2)^(0+1280),7,c
 51213   014DF4  EFFE  F0A6         	goto	u25281
 51214   014DF8  EF00  F0A7         	goto	u25280
 51215   014DFC                     u25281:
 51216   014DFC  EFD6  F0A6         	goto	l19235
 51217   014E00                     u25280:
 51218   014E00                     l3087:
 51219   014E00  6A11               	clrf	___fladd@aexp^(0+1280),c
 51220   014E02  AE13               	btfss	___fladd@grs^(0+1280),7,c
 51221   014E04  EF06  F0A7         	goto	u25291
 51222   014E08  EF08  F0A7         	goto	u25290
 51223   014E0C                     u25291:
 51224   014E0C  EF20  F0A7         	goto	l3099
 51225   014E10                     u25290:
 51226   014E10  C513  F50C         	movff	___fladd@grs,??___fladd
 51227   014E14  0E7F               	movlw	127
 51228   014E16  160C               	andwf	??___fladd^(0+1280),f,c
 51229   014E18  B4D8               	btfsc	status,2,c
 51230   014E1A  EF11  F0A7         	goto	u25301
 51231   014E1E  EF13  F0A7         	goto	u25300
 51232   014E22                     u25301:
 51233   014E22  EF17  F0A7         	goto	l3100
 51234   014E26                     u25300:
 51235   014E26                     l19255:
 51236   014E26  0E01               	movlw	1
 51237   014E28  6E11               	movwf	___fladd@aexp^(0+1280),c
 51238   014E2A  EF20  F0A7         	goto	l3099
 51239   014E2E                     l3100:
 51240   014E2E  A004               	btfss	___fladd@b^(0+1280),0,c
 51241   014E30  EF1C  F0A7         	goto	u25311
 51242   014E34  EF1E  F0A7         	goto	u25310
 51243   014E38                     u25311:
 51244   014E38  EF20  F0A7         	goto	l3099
 51245   014E3C                     u25310:
 51246   014E3C  EF13  F0A7         	goto	l19255
 51247   014E40                     l3099:
 51248   014E40  5011               	movf	___fladd@aexp^(0+1280),w,c
 51249   014E42  B4D8               	btfsc	status,2,c
 51250   014E44  EF26  F0A7         	goto	u25321
 51251   014E48  EF28  F0A7         	goto	u25320
 51252   014E4C                     u25321:
 51253   014E4C  EF53  F0A7         	goto	l19267
 51254   014E50                     u25320:
 51255   014E50  0E01               	movlw	1
 51256   014E52  2604               	addwf	___fladd@b^(0+1280),f,c
 51257   014E54  0E00               	movlw	0
 51258   014E56  2205               	addwfc	(___fladd@b+1)^(0+1280),f,c
 51259   014E58  2206               	addwfc	(___fladd@b+2)^(0+1280),f,c
 51260   014E5A  2207               	addwfc	(___fladd@b+3)^(0+1280),f,c
 51261   014E5C  A007               	btfss	(___fladd@b+3)^(0+1280),0,c
 51262   014E5E  EF33  F0A7         	goto	u25331
 51263   014E62  EF35  F0A7         	goto	u25330
 51264   014E66                     u25331:
 51265   014E66  EF53  F0A7         	goto	l19267
 51266   014E6A                     u25330:
 51267   014E6A  C504  F50C         	movff	___fladd@b,??___fladd
 51268   014E6E  C505  F50D         	movff	___fladd@b+1,??___fladd+1
 51269   014E72  C506  F50E         	movff	___fladd@b+2,??___fladd+2
 51270   014E76  C507  F50F         	movff	___fladd@b+3,??___fladd+3
 51271   014E7A  340F               	rlcf	(??___fladd+3)^(0+1280),w,c
 51272   014E7C  320F               	rrcf	(??___fladd+3)^(0+1280),f,c
 51273   014E7E  320E               	rrcf	(??___fladd+2)^(0+1280),f,c
 51274   014E80  320D               	rrcf	(??___fladd+1)^(0+1280),f,c
 51275   014E82  320C               	rrcf	??___fladd^(0+1280),f,c
 51276   014E84  C50C  F504         	movff	??___fladd,___fladd@b
 51277   014E88  C50D  F505         	movff	??___fladd+1,___fladd@b+1
 51278   014E8C  C50E  F506         	movff	??___fladd+2,___fladd@b+2
 51279   014E90  C50F  F507         	movff	??___fladd+3,___fladd@b+3
 51280   014E94  2812               	incf	___fladd@bexp^(0+1280),w,c
 51281   014E96  B4D8               	btfsc	status,2,c
 51282   014E98  EF50  F0A7         	goto	u25341
 51283   014E9C  EF52  F0A7         	goto	u25340
 51284   014EA0                     u25341:
 51285   014EA0  EF53  F0A7         	goto	l19267
 51286   014EA4                     u25340:
 51287   014EA4  2A12               	incf	___fladd@bexp^(0+1280),f,c
 51288   014EA6                     l19267:
 51289   014EA6  2812               	incf	___fladd@bexp^(0+1280),w,c
 51290   014EA8  B4D8               	btfsc	status,2,c
 51291   014EAA  EF59  F0A7         	goto	u25351
 51292   014EAE  EF5B  F0A7         	goto	u25350
 51293   014EB2                     u25351:
 51294   014EB2  EF63  F0A7         	goto	l19271
 51295   014EB6                     u25350:
 51296   014EB6  5012               	movf	___fladd@bexp^(0+1280),w,c
 51297   014EB8  A4D8               	btfss	status,2,c
 51298   014EBA  EF61  F0A7         	goto	u25361
 51299   014EBE  EF63  F0A7         	goto	u25360
 51300   014EC2                     u25361:
 51301   014EC2  EF74  F0A7         	goto	l3106
 51302   014EC6                     u25360:
 51303   014EC6                     l19271:
 51304   014EC6  0E00               	movlw	0
 51305   014EC8  6E04               	movwf	___fladd@b^(0+1280),c
 51306   014ECA  0E00               	movlw	0
 51307   014ECC  6E05               	movwf	(___fladd@b+1)^(0+1280),c
 51308   014ECE  0E00               	movlw	0
 51309   014ED0  6E06               	movwf	(___fladd@b+2)^(0+1280),c
 51310   014ED2  0E00               	movlw	0
 51311   014ED4  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 51312   014ED6  5012               	movf	___fladd@bexp^(0+1280),w,c
 51313   014ED8  A4D8               	btfss	status,2,c
 51314   014EDA  EF71  F0A7         	goto	u25371
 51315   014EDE  EF73  F0A7         	goto	u25370
 51316   014EE2                     u25371:
 51317   014EE2  EF74  F0A7         	goto	l3106
 51318   014EE6                     u25370:
 51319   014EE6  6A10               	clrf	___fladd@signs^(0+1280),c
 51320   014EE8                     l3106:
 51321   014EE8  A012               	btfss	___fladd@bexp^(0+1280),0,c
 51322   014EEA  EF79  F0A7         	goto	u25381
 51323   014EEE  EF7B  F0A7         	goto	u25380
 51324   014EF2                     u25381:
 51325   014EF2  EF7E  F0A7         	goto	l19277
 51326   014EF6                     u25380:
 51327   014EF6  8E06               	bsf	(___fladd@b+2)^(0+1280),7,c
 51328   014EF8  EF7F  F0A7         	goto	l19279
 51329   014EFC                     l19277:
 51330   014EFC  9E06               	bcf	(___fladd@b+2)^(0+1280),7,c
 51331   014EFE                     l19279:
 51332   014EFE  90D8               	bcf	status,0,c
 51333   014F00  3012               	rrcf	___fladd@bexp^(0+1280),w,c
 51334   014F02  6E07               	movwf	(___fladd@b+3)^(0+1280),c
 51335   014F04  AE10               	btfss	___fladd@signs^(0+1280),7,c
 51336   014F06  EF87  F0A7         	goto	u25391
 51337   014F0A  EF89  F0A7         	goto	u25390
 51338   014F0E                     u25391:
 51339   014F0E  EF8A  F0A7         	goto	l19285
 51340   014F12                     u25390:
 51341   014F12  8E07               	bsf	(___fladd@b+3)^(0+1280),7,c
 51342   014F14                     l19285:
 51343   014F14  C504  F504         	movff	___fladd@b,?___fladd
 51344   014F18  C505  F505         	movff	___fladd@b+1,?___fladd+1
 51345   014F1C  C506  F506         	movff	___fladd@b+2,?___fladd+2
 51346   014F20  C507  F507         	movff	___fladd@b+3,?___fladd+3
 51347   014F24                     l3082:
 51348   014F24  0012               	return		;funcret
 51349   014F26                     __end_of___fladd:
 51350                           	callstack 0
 51351                           
 51352 ;; *************** function ___flneg *****************
 51353 ;; Defined at:
 51354 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
 51355 ;; Parameters:    Size  Location     Type
 51356 ;;  f1              4    3[COMRAM] unsigned char 
 51357 ;; Auto vars:     Size  Location     Type
 51358 ;;		None
 51359 ;; Return value:  Size  Location     Type
 51360 ;;                  4    3[COMRAM] unsigned char 
 51361 ;; Registers used:
 51362 ;;		wreg, status,2, status,0
 51363 ;; Tracked objects:
 51364 ;;		On entry : 0/0
 51365 ;;		On exit  : 0/0
 51366 ;;		Unchanged: 0/0
 51367 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51372 ;;Total ram usage:        4 bytes
 51373 ;; Hardware stack levels used: 1
 51374 ;; Hardware stack levels required when called: 1
 51375 ;; This function calls:
 51376 ;;		Nothing
 51377 ;; This function is called by:
 51378 ;;		_efgtoa
 51379 ;; This function uses a non-reentrant model
 51380 ;;
 51381                           
 51382                           	psect	text137
 51383   01FE60                     __ptext137:
 51384                           	callstack 0
 51385   01FE60                     ___flneg:
 51386                           	callstack 114
 51387   01FE60  5004               	movf	___flneg@f1^(0+1280),w,c
 51388   01FE62  1005               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 51389   01FE64  1006               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 51390   01FE66  1007               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 51391   01FE68  B4D8               	btfsc	status,2,c
 51392   01FE6A  EF39  F0FF         	goto	u26111
 51393   01FE6E  EF3B  F0FF         	goto	u26110
 51394   01FE72                     u26111:
 51395   01FE72  EF43  F0FF         	goto	l19723
 51396   01FE76                     u26110:
 51397   01FE76  0E00               	movlw	0
 51398   01FE78  1A04               	xorwf	___flneg@f1^(0+1280),f,c
 51399   01FE7A  0E00               	movlw	0
 51400   01FE7C  1A05               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 51401   01FE7E  0E00               	movlw	0
 51402   01FE80  1A06               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 51403   01FE82  0E80               	movlw	128
 51404   01FE84  1A07               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 51405   01FE86                     l19723:
 51406   01FE86  C504  F504         	movff	___flneg@f1,?___flneg
 51407   01FE8A  C505  F505         	movff	___flneg@f1+1,?___flneg+1
 51408   01FE8E  C506  F506         	movff	___flneg@f1+2,?___flneg+2
 51409   01FE92  C507  F507         	movff	___flneg@f1+3,?___flneg+3
 51410   01FE96  0012               	return		;funcret
 51411   01FE98                     __end_of___flneg:
 51412                           	callstack 0
 51413                           
 51414 ;; *************** function ___flmul *****************
 51415 ;; Defined at:
 51416 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 51417 ;; Parameters:    Size  Location     Type
 51418 ;;  b               4   17[COMRAM] unsigned char 
 51419 ;;  a               4   21[COMRAM] unsigned char 
 51420 ;; Auto vars:     Size  Location     Type
 51421 ;;  prod            4   36[COMRAM] struct .
 51422 ;;  grs             4   31[COMRAM] unsigned long 
 51423 ;;  temp            2   40[COMRAM] struct .
 51424 ;;  bexp            1   35[COMRAM] unsigned char 
 51425 ;;  aexp            1   30[COMRAM] unsigned char 
 51426 ;;  sign            1   29[COMRAM] unsigned char 
 51427 ;; Return value:  Size  Location     Type
 51428 ;;                  4   17[COMRAM] unsigned char 
 51429 ;; Registers used:
 51430 ;;		wreg, status,2, status,0, prodl, prodh
 51431 ;; Tracked objects:
 51432 ;;		On entry : 0/0
 51433 ;;		On exit  : 0/0
 51434 ;;		Unchanged: 0/0
 51435 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51436 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51437 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51439 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51440 ;;Total ram usage:       25 bytes
 51441 ;; Hardware stack levels used: 1
 51442 ;; Hardware stack levels required when called: 1
 51443 ;; This function calls:
 51444 ;;		Nothing
 51445 ;; This function is called by:
 51446 ;;		_main
 51447 ;;		_efgtoa
 51448 ;;		_ilog10
 51449 ;;		_i10x
 51450 ;;		_ftoa
 51451 ;; This function uses a non-reentrant model
 51452 ;;
 51453                           
 51454                           	psect	text138
 51455   0165C8                     __ptext138:
 51456                           	callstack 0
 51457   0165C8                     ___flmul:
 51458                           	callstack 114
 51459   0165C8  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 51460   0165CA  0B80               	andlw	128
 51461   0165CC  6E1E               	movwf	___flmul@sign^(0+1280),c
 51462   0165CE  5015               	movf	(___flmul@b+3)^(0+1280),w,c
 51463   0165D0  2415               	addwf	(___flmul@b+3)^(0+1280),w,c
 51464   0165D2  6E24               	movwf	___flmul@bexp^(0+1280),c
 51465   0165D4  AE14               	btfss	(___flmul@b+2)^(0+1280),7,c
 51466   0165D6  EFEF  F0B2         	goto	u25841
 51467   0165DA  EFF1  F0B2         	goto	u25840
 51468   0165DE                     u25841:
 51469   0165DE  EFF2  F0B2         	goto	l19553
 51470   0165E2                     u25840:
 51471   0165E2  8024               	bsf	___flmul@bexp^(0+1280),0,c
 51472   0165E4                     l19553:
 51473   0165E4  5024               	movf	___flmul@bexp^(0+1280),w,c
 51474   0165E6  B4D8               	btfsc	status,2,c
 51475   0165E8  EFF8  F0B2         	goto	u25851
 51476   0165EC  EFFA  F0B2         	goto	u25850
 51477   0165F0                     u25851:
 51478   0165F0  EF0D  F0B3         	goto	l19561
 51479   0165F4                     u25850:
 51480   0165F4  2824               	incf	___flmul@bexp^(0+1280),w,c
 51481   0165F6  A4D8               	btfss	status,2,c
 51482   0165F8  EF00  F0B3         	goto	u25861
 51483   0165FC  EF02  F0B3         	goto	u25860
 51484   016600                     u25861:
 51485   016600  EF0A  F0B3         	goto	l19559
 51486   016604                     u25860:
 51487   016604  0E00               	movlw	0
 51488   016606  6E12               	movwf	___flmul@b^(0+1280),c
 51489   016608  0E00               	movlw	0
 51490   01660A  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 51491   01660C  0E00               	movlw	0
 51492   01660E  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 51493   016610  0E00               	movlw	0
 51494   016612  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 51495   016614                     l19559:
 51496   016614  8E14               	bsf	(___flmul@b+2)^(0+1280),7,c
 51497   016616  EF15  F0B3         	goto	l19563
 51498   01661A                     l19561:
 51499   01661A  0E00               	movlw	0
 51500   01661C  6E12               	movwf	___flmul@b^(0+1280),c
 51501   01661E  0E00               	movlw	0
 51502   016620  6E13               	movwf	(___flmul@b+1)^(0+1280),c
 51503   016622  0E00               	movlw	0
 51504   016624  6E14               	movwf	(___flmul@b+2)^(0+1280),c
 51505   016626  0E00               	movlw	0
 51506   016628  6E15               	movwf	(___flmul@b+3)^(0+1280),c
 51507   01662A                     l19563:
 51508   01662A  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 51509   01662C  0B80               	andlw	128
 51510   01662E  1A1E               	xorwf	___flmul@sign^(0+1280),f,c
 51511   016630  5019               	movf	(___flmul@a+3)^(0+1280),w,c
 51512   016632  2419               	addwf	(___flmul@a+3)^(0+1280),w,c
 51513   016634  6E1F               	movwf	___flmul@aexp^(0+1280),c
 51514   016636  AE18               	btfss	(___flmul@a+2)^(0+1280),7,c
 51515   016638  EF20  F0B3         	goto	u25871
 51516   01663C  EF22  F0B3         	goto	u25870
 51517   016640                     u25871:
 51518   016640  EF23  F0B3         	goto	l19571
 51519   016644                     u25870:
 51520   016644  801F               	bsf	___flmul@aexp^(0+1280),0,c
 51521   016646                     l19571:
 51522   016646  501F               	movf	___flmul@aexp^(0+1280),w,c
 51523   016648  B4D8               	btfsc	status,2,c
 51524   01664A  EF29  F0B3         	goto	u25881
 51525   01664E  EF2B  F0B3         	goto	u25880
 51526   016652                     u25881:
 51527   016652  EF3E  F0B3         	goto	l19579
 51528   016656                     u25880:
 51529   016656  281F               	incf	___flmul@aexp^(0+1280),w,c
 51530   016658  A4D8               	btfss	status,2,c
 51531   01665A  EF31  F0B3         	goto	u25891
 51532   01665E  EF33  F0B3         	goto	u25890
 51533   016662                     u25891:
 51534   016662  EF3B  F0B3         	goto	l19577
 51535   016666                     u25890:
 51536   016666  0E00               	movlw	0
 51537   016668  6E16               	movwf	___flmul@a^(0+1280),c
 51538   01666A  0E00               	movlw	0
 51539   01666C  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 51540   01666E  0E00               	movlw	0
 51541   016670  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 51542   016672  0E00               	movlw	0
 51543   016674  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 51544   016676                     l19577:
 51545   016676  8E18               	bsf	(___flmul@a+2)^(0+1280),7,c
 51546   016678  EF46  F0B3         	goto	l3159
 51547   01667C                     l19579:
 51548   01667C  0E00               	movlw	0
 51549   01667E  6E16               	movwf	___flmul@a^(0+1280),c
 51550   016680  0E00               	movlw	0
 51551   016682  6E17               	movwf	(___flmul@a+1)^(0+1280),c
 51552   016684  0E00               	movlw	0
 51553   016686  6E18               	movwf	(___flmul@a+2)^(0+1280),c
 51554   016688  0E00               	movlw	0
 51555   01668A  6E19               	movwf	(___flmul@a+3)^(0+1280),c
 51556   01668C                     l3159:
 51557   01668C  501F               	movf	___flmul@aexp^(0+1280),w,c
 51558   01668E  B4D8               	btfsc	status,2,c
 51559   016690  EF4C  F0B3         	goto	u25901
 51560   016694  EF4E  F0B3         	goto	u25900
 51561   016698                     u25901:
 51562   016698  EF56  F0B3         	goto	l19583
 51563   01669C                     u25900:
 51564   01669C  5024               	movf	___flmul@bexp^(0+1280),w,c
 51565   01669E  A4D8               	btfss	status,2,c
 51566   0166A0  EF54  F0B3         	goto	u25911
 51567   0166A4  EF56  F0B3         	goto	u25910
 51568   0166A8                     u25911:
 51569   0166A8  EF60  F0B3         	goto	l19587
 51570   0166AC                     u25910:
 51571   0166AC                     l19583:
 51572   0166AC  0E00               	movlw	0
 51573   0166AE  6E12               	movwf	?___flmul^(0+1280),c
 51574   0166B0  0E00               	movlw	0
 51575   0166B2  6E13               	movwf	(?___flmul+1)^(0+1280),c
 51576   0166B4  0E00               	movlw	0
 51577   0166B6  6E14               	movwf	(?___flmul+2)^(0+1280),c
 51578   0166B8  0E00               	movlw	0
 51579   0166BA  6E15               	movwf	(?___flmul+3)^(0+1280),c
 51580   0166BC  EFF6  F0B4         	goto	l3163
 51581   0166C0                     l19587:
 51582   0166C0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 51583   0166C2  0212               	mulwf	___flmul@b^(0+1280),c
 51584   0166C4  C4F3 F529          	movff	prodl,___flmul@temp
 51585   0166C8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51586   0166CC  5029               	movf	___flmul@temp^(0+1280),w,c
 51587   0166CE  6E20               	movwf	___flmul@grs^(0+1280),c
 51588   0166D0  6A21               	clrf	(___flmul@grs+1)^(0+1280),c
 51589   0166D2  6A22               	clrf	(___flmul@grs+2)^(0+1280),c
 51590   0166D4  6A23               	clrf	(___flmul@grs+3)^(0+1280),c
 51591   0166D6  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51592   0166D8  6E25               	movwf	___flmul@prod^(0+1280),c
 51593   0166DA  6A26               	clrf	(___flmul@prod+1)^(0+1280),c
 51594   0166DC  6A27               	clrf	(___flmul@prod+2)^(0+1280),c
 51595   0166DE  6A28               	clrf	(___flmul@prod+3)^(0+1280),c
 51596   0166E0  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 51597   0166E2  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 51598   0166E4  C4F3 F529          	movff	prodl,___flmul@temp
 51599   0166E8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51600   0166EC  5029               	movf	___flmul@temp^(0+1280),w,c
 51601   0166EE  2620               	addwf	___flmul@grs^(0+1280),f,c
 51602   0166F0  0E00               	movlw	0
 51603   0166F2  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 51604   0166F4  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 51605   0166F6  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 51606   0166F8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51607   0166FA  2625               	addwf	___flmul@prod^(0+1280),f,c
 51608   0166FC  0E00               	movlw	0
 51609   0166FE  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51610   016700  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51611   016702  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51612   016704  5016               	movf	___flmul@a^(0+1280),w,c
 51613   016706  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 51614   016708  C4F3 F529          	movff	prodl,___flmul@temp
 51615   01670C  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51616   016710  5029               	movf	___flmul@temp^(0+1280),w,c
 51617   016712  2620               	addwf	___flmul@grs^(0+1280),f,c
 51618   016714  0E00               	movlw	0
 51619   016716  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 51620   016718  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 51621   01671A  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 51622   01671C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51623   01671E  2625               	addwf	___flmul@prod^(0+1280),f,c
 51624   016720  0E00               	movlw	0
 51625   016722  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51626   016724  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51627   016726  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51628   016728  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 51629   01672C  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 51630   016730  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 51631   016734  6A20               	clrf	___flmul@grs^(0+1280),c
 51632   016736  5016               	movf	___flmul@a^(0+1280),w,c
 51633   016738  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 51634   01673A  C4F3 F529          	movff	prodl,___flmul@temp
 51635   01673E  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51636   016742  5029               	movf	___flmul@temp^(0+1280),w,c
 51637   016744  2620               	addwf	___flmul@grs^(0+1280),f,c
 51638   016746  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51639   016748  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 51640   01674A  0E00               	movlw	0
 51641   01674C  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 51642   01674E  0E00               	movlw	0
 51643   016750  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 51644   016752  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 51645   016754  0212               	mulwf	___flmul@b^(0+1280),c
 51646   016756  C4F3 F529          	movff	prodl,___flmul@temp
 51647   01675A  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51648   01675E  5029               	movf	___flmul@temp^(0+1280),w,c
 51649   016760  2620               	addwf	___flmul@grs^(0+1280),f,c
 51650   016762  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51651   016764  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 51652   016766  0E00               	movlw	0
 51653   016768  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 51654   01676A  0E00               	movlw	0
 51655   01676C  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 51656   01676E  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 51657   016772  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 51658   016776  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 51659   01677A  6A20               	clrf	___flmul@grs^(0+1280),c
 51660   01677C  5016               	movf	___flmul@a^(0+1280),w,c
 51661   01677E  0212               	mulwf	___flmul@b^(0+1280),c
 51662   016780  C4F3 F529          	movff	prodl,___flmul@temp
 51663   016784  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51664   016788  5029               	movf	___flmul@temp^(0+1280),w,c
 51665   01678A  2620               	addwf	___flmul@grs^(0+1280),f,c
 51666   01678C  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51667   01678E  2221               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 51668   016790  0E00               	movlw	0
 51669   016792  2222               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 51670   016794  0E00               	movlw	0
 51671   016796  2223               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 51672   016798  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 51673   01679A  0213               	mulwf	(___flmul@b+1)^(0+1280),c
 51674   01679C  C4F3 F529          	movff	prodl,___flmul@temp
 51675   0167A0  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51676   0167A4  5029               	movf	___flmul@temp^(0+1280),w,c
 51677   0167A6  2625               	addwf	___flmul@prod^(0+1280),f,c
 51678   0167A8  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51679   0167AA  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51680   0167AC  0E00               	movlw	0
 51681   0167AE  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51682   0167B0  0E00               	movlw	0
 51683   0167B2  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51684   0167B4  5017               	movf	(___flmul@a+1)^(0+1280),w,c
 51685   0167B6  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 51686   0167B8  C4F3 F529          	movff	prodl,___flmul@temp
 51687   0167BC  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51688   0167C0  5029               	movf	___flmul@temp^(0+1280),w,c
 51689   0167C2  2625               	addwf	___flmul@prod^(0+1280),f,c
 51690   0167C4  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51691   0167C6  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51692   0167C8  0E00               	movlw	0
 51693   0167CA  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51694   0167CC  0E00               	movlw	0
 51695   0167CE  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51696   0167D0  5018               	movf	(___flmul@a+2)^(0+1280),w,c
 51697   0167D2  0214               	mulwf	(___flmul@b+2)^(0+1280),c
 51698   0167D4  C4F3 F529          	movff	prodl,___flmul@temp
 51699   0167D8  C4F4 F52A          	movff	prodh,___flmul@temp+1
 51700   0167DC  5029               	movf	___flmul@temp^(0+1280),w,c
 51701   0167DE  6E1A               	movwf	??___flmul^(0+1280),c
 51702   0167E0  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51703   0167E2  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 51704   0167E4  6A1C               	clrf	(??___flmul+2)^(0+1280),c
 51705   0167E6  6A1D               	clrf	(??___flmul+3)^(0+1280),c
 51706   0167E8  C51C  F51D         	movff	??___flmul+2,??___flmul+3
 51707   0167EC  C51B  F51C         	movff	??___flmul+1,??___flmul+2
 51708   0167F0  C51A  F51B         	movff	??___flmul,??___flmul+1
 51709   0167F4  6A1A               	clrf	??___flmul^(0+1280),c
 51710   0167F6  501A               	movf	??___flmul^(0+1280),w,c
 51711   0167F8  2625               	addwf	___flmul@prod^(0+1280),f,c
 51712   0167FA  501B               	movf	(??___flmul+1)^(0+1280),w,c
 51713   0167FC  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51714   0167FE  501C               	movf	(??___flmul+2)^(0+1280),w,c
 51715   016800  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51716   016802  501D               	movf	(??___flmul+3)^(0+1280),w,c
 51717   016804  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51718   016806  C520  F51A         	movff	___flmul@grs,??___flmul
 51719   01680A  C521  F51B         	movff	___flmul@grs+1,??___flmul+1
 51720   01680E  C522  F51C         	movff	___flmul@grs+2,??___flmul+2
 51721   016812  C523  F51D         	movff	___flmul@grs+3,??___flmul+3
 51722   016816  0E19               	movlw	25
 51723   016818  EF13  F0B4         	goto	u25920
 51724   01681C                     u25925:
 51725   01681C  90D8               	bcf	status,0,c
 51726   01681E  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 51727   016820  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 51728   016822  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 51729   016824  321A               	rrcf	??___flmul^(0+1280),f,c
 51730   016826                     u25920:
 51731   016826  2EE8               	decfsz	wreg,f,c
 51732   016828  EF0E  F0B4         	goto	u25925
 51733   01682C  501A               	movf	??___flmul^(0+1280),w,c
 51734   01682E  2625               	addwf	___flmul@prod^(0+1280),f,c
 51735   016830  501B               	movf	(??___flmul+1)^(0+1280),w,c
 51736   016832  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51737   016834  501C               	movf	(??___flmul+2)^(0+1280),w,c
 51738   016836  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51739   016838  501D               	movf	(??___flmul+3)^(0+1280),w,c
 51740   01683A  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51741   01683C  C522  F523         	movff	___flmul@grs+2,___flmul@grs+3
 51742   016840  C521  F522         	movff	___flmul@grs+1,___flmul@grs+2
 51743   016844  C520  F521         	movff	___flmul@grs,___flmul@grs+1
 51744   016848  6A20               	clrf	___flmul@grs^(0+1280),c
 51745   01684A  501F               	movf	___flmul@aexp^(0+1280),w,c
 51746   01684C  C524  F51A         	movff	___flmul@bexp,??___flmul
 51747   016850  6A1B               	clrf	(??___flmul+1)^(0+1280),c
 51748   016852  261A               	addwf	??___flmul^(0+1280),f,c
 51749   016854  0E00               	movlw	0
 51750   016856  221B               	addwfc	(??___flmul+1)^(0+1280),f,c
 51751   016858  0E82               	movlw	130
 51752   01685A  241A               	addwf	??___flmul^(0+1280),w,c
 51753   01685C  6E29               	movwf	___flmul@temp^(0+1280),c
 51754   01685E  0EFF               	movlw	255
 51755   016860  201B               	addwfc	(??___flmul+1)^(0+1280),w,c
 51756   016862  6E2A               	movwf	(___flmul@temp+1)^(0+1280),c
 51757   016864  EF49  F0B4         	goto	l19635
 51758   016868                     l19629:
 51759   016868  90D8               	bcf	status,0,c
 51760   01686A  3625               	rlcf	___flmul@prod^(0+1280),f,c
 51761   01686C  3626               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 51762   01686E  3627               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 51763   016870  3628               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 51764   016872  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 51765   016874  EF3E  F0B4         	goto	u25931
 51766   016878  EF40  F0B4         	goto	u25930
 51767   01687C                     u25931:
 51768   01687C  EF41  F0B4         	goto	l3166
 51769   016880                     u25930:
 51770   016880  8025               	bsf	___flmul@prod^(0+1280),0,c
 51771   016882                     l3166:
 51772   016882  90D8               	bcf	status,0,c
 51773   016884  3620               	rlcf	___flmul@grs^(0+1280),f,c
 51774   016886  3621               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 51775   016888  3622               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 51776   01688A  3623               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 51777   01688C  0629               	decf	___flmul@temp^(0+1280),f,c
 51778   01688E  A0D8               	btfss	status,0,c
 51779   016890  062A               	decf	(___flmul@temp+1)^(0+1280),f,c
 51780   016892                     l19635:
 51781   016892  AE27               	btfss	(___flmul@prod+2)^(0+1280),7,c
 51782   016894  EF4E  F0B4         	goto	u25941
 51783   016898  EF50  F0B4         	goto	u25940
 51784   01689C                     u25941:
 51785   01689C  EF34  F0B4         	goto	l19629
 51786   0168A0                     u25940:
 51787   0168A0  6A1F               	clrf	___flmul@aexp^(0+1280),c
 51788   0168A2  AE23               	btfss	(___flmul@grs+3)^(0+1280),7,c
 51789   0168A4  EF56  F0B4         	goto	u25951
 51790   0168A8  EF58  F0B4         	goto	u25950
 51791   0168AC                     u25951:
 51792   0168AC  EF7C  F0B4         	goto	l3168
 51793   0168B0                     u25950:
 51794   0168B0  0EFF               	movlw	255
 51795   0168B2  1420               	andwf	___flmul@grs^(0+1280),w,c
 51796   0168B4  6E1A               	movwf	??___flmul^(0+1280),c
 51797   0168B6  0EFF               	movlw	255
 51798   0168B8  1421               	andwf	(___flmul@grs+1)^(0+1280),w,c
 51799   0168BA  6E1B               	movwf	(??___flmul+1)^(0+1280),c
 51800   0168BC  0EFF               	movlw	255
 51801   0168BE  1422               	andwf	(___flmul@grs+2)^(0+1280),w,c
 51802   0168C0  6E1C               	movwf	(??___flmul+2)^(0+1280),c
 51803   0168C2  0E7F               	movlw	127
 51804   0168C4  1423               	andwf	(___flmul@grs+3)^(0+1280),w,c
 51805   0168C6  6E1D               	movwf	(??___flmul+3)^(0+1280),c
 51806   0168C8  501A               	movf	??___flmul^(0+1280),w,c
 51807   0168CA  101B               	iorwf	(??___flmul+1)^(0+1280),w,c
 51808   0168CC  101C               	iorwf	(??___flmul+2)^(0+1280),w,c
 51809   0168CE  101D               	iorwf	(??___flmul+3)^(0+1280),w,c
 51810   0168D0  B4D8               	btfsc	status,2,c
 51811   0168D2  EF6D  F0B4         	goto	u25961
 51812   0168D6  EF6F  F0B4         	goto	u25960
 51813   0168DA                     u25961:
 51814   0168DA  EF73  F0B4         	goto	l3169
 51815   0168DE                     u25960:
 51816   0168DE                     l19639:
 51817   0168DE  0E01               	movlw	1
 51818   0168E0  6E1F               	movwf	___flmul@aexp^(0+1280),c
 51819   0168E2  EF7C  F0B4         	goto	l3168
 51820   0168E6                     l3169:
 51821   0168E6  A025               	btfss	___flmul@prod^(0+1280),0,c
 51822   0168E8  EF78  F0B4         	goto	u25971
 51823   0168EC  EF7A  F0B4         	goto	u25970
 51824   0168F0                     u25971:
 51825   0168F0  EF7C  F0B4         	goto	l3168
 51826   0168F4                     u25970:
 51827   0168F4  EF6F  F0B4         	goto	l19639
 51828   0168F8                     l3168:
 51829   0168F8  501F               	movf	___flmul@aexp^(0+1280),w,c
 51830   0168FA  B4D8               	btfsc	status,2,c
 51831   0168FC  EF82  F0B4         	goto	u25981
 51832   016900  EF84  F0B4         	goto	u25980
 51833   016904                     u25981:
 51834   016904  EFA8  F0B4         	goto	l19651
 51835   016908                     u25980:
 51836   016908  0E01               	movlw	1
 51837   01690A  2625               	addwf	___flmul@prod^(0+1280),f,c
 51838   01690C  0E00               	movlw	0
 51839   01690E  2226               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 51840   016910  2227               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 51841   016912  2228               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 51842   016914  A028               	btfss	(___flmul@prod+3)^(0+1280),0,c
 51843   016916  EF8F  F0B4         	goto	u25991
 51844   01691A  EF91  F0B4         	goto	u25990
 51845   01691E                     u25991:
 51846   01691E  EFA8  F0B4         	goto	l19651
 51847   016922                     u25990:
 51848   016922  C525  F51A         	movff	___flmul@prod,??___flmul
 51849   016926  C526  F51B         	movff	___flmul@prod+1,??___flmul+1
 51850   01692A  C527  F51C         	movff	___flmul@prod+2,??___flmul+2
 51851   01692E  C528  F51D         	movff	___flmul@prod+3,??___flmul+3
 51852   016932  341D               	rlcf	(??___flmul+3)^(0+1280),w,c
 51853   016934  321D               	rrcf	(??___flmul+3)^(0+1280),f,c
 51854   016936  321C               	rrcf	(??___flmul+2)^(0+1280),f,c
 51855   016938  321B               	rrcf	(??___flmul+1)^(0+1280),f,c
 51856   01693A  321A               	rrcf	??___flmul^(0+1280),f,c
 51857   01693C  C51A  F525         	movff	??___flmul,___flmul@prod
 51858   016940  C51B  F526         	movff	??___flmul+1,___flmul@prod+1
 51859   016944  C51C  F527         	movff	??___flmul+2,___flmul@prod+2
 51860   016948  C51D  F528         	movff	??___flmul+3,___flmul@prod+3
 51861   01694C  4A29               	infsnz	___flmul@temp^(0+1280),f,c
 51862   01694E  2A2A               	incf	(___flmul@temp+1)^(0+1280),f,c
 51863   016950                     l19651:
 51864   016950  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 51865   016952  EFB3  F0B4         	goto	u26001
 51866   016956  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51867   016958  E108               	bnz	u26000
 51868   01695A  2829               	incf	___flmul@temp^(0+1280),w,c
 51869   01695C  A0D8               	btfss	status,0,c
 51870   01695E  EFB3  F0B4         	goto	u26001
 51871   016962  EFB5  F0B4         	goto	u26000
 51872   016966                     u26001:
 51873   016966  EFBF  F0B4         	goto	l19655
 51874   01696A                     u26000:
 51875   01696A  0E00               	movlw	0
 51876   01696C  6E25               	movwf	___flmul@prod^(0+1280),c
 51877   01696E  0E00               	movlw	0
 51878   016970  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 51879   016972  0E80               	movlw	128
 51880   016974  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 51881   016976  0E7F               	movlw	127
 51882   016978  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 51883   01697A  EFEC  F0B4         	goto	l19669
 51884   01697E                     l19655:
 51885   01697E  BE2A               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 51886   016980  EFCC  F0B4         	goto	u26010
 51887   016984  502A               	movf	(___flmul@temp+1)^(0+1280),w,c
 51888   016986  E106               	bnz	u26011
 51889   016988  0429               	decf	___flmul@temp^(0+1280),w,c
 51890   01698A  B0D8               	btfsc	status,0,c
 51891   01698C  EFCA  F0B4         	goto	u26011
 51892   016990  EFCC  F0B4         	goto	u26010
 51893   016994                     u26011:
 51894   016994  EFD7  F0B4         	goto	l3176
 51895   016998                     u26010:
 51896   016998  0E00               	movlw	0
 51897   01699A  6E25               	movwf	___flmul@prod^(0+1280),c
 51898   01699C  0E00               	movlw	0
 51899   01699E  6E26               	movwf	(___flmul@prod+1)^(0+1280),c
 51900   0169A0  0E00               	movlw	0
 51901   0169A2  6E27               	movwf	(___flmul@prod+2)^(0+1280),c
 51902   0169A4  0E00               	movlw	0
 51903   0169A6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 51904   0169A8  6A1E               	clrf	___flmul@sign^(0+1280),c
 51905   0169AA  EFEC  F0B4         	goto	l19669
 51906   0169AE                     l3176:
 51907   0169AE  C529  F524         	movff	___flmul@temp,___flmul@bexp
 51908   0169B2  0EFF               	movlw	255
 51909   0169B4  1625               	andwf	___flmul@prod^(0+1280),f,c
 51910   0169B6  0EFF               	movlw	255
 51911   0169B8  1626               	andwf	(___flmul@prod+1)^(0+1280),f,c
 51912   0169BA  0E7F               	movlw	127
 51913   0169BC  1627               	andwf	(___flmul@prod+2)^(0+1280),f,c
 51914   0169BE  0E00               	movlw	0
 51915   0169C0  1628               	andwf	(___flmul@prod+3)^(0+1280),f,c
 51916   0169C2  A024               	btfss	___flmul@bexp^(0+1280),0,c
 51917   0169C4  EFE6  F0B4         	goto	u26021
 51918   0169C8  EFE8  F0B4         	goto	u26020
 51919   0169CC                     u26021:
 51920   0169CC  EFE9  F0B4         	goto	l19667
 51921   0169D0                     u26020:
 51922   0169D0  8E27               	bsf	(___flmul@prod+2)^(0+1280),7,c
 51923   0169D2                     l19667:
 51924   0169D2  90D8               	bcf	status,0,c
 51925   0169D4  3024               	rrcf	___flmul@bexp^(0+1280),w,c
 51926   0169D6  6E28               	movwf	(___flmul@prod+3)^(0+1280),c
 51927   0169D8                     l19669:
 51928   0169D8  501E               	movf	___flmul@sign^(0+1280),w,c
 51929   0169DA  1228               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 51930   0169DC  C525  F512         	movff	___flmul@prod,?___flmul
 51931   0169E0  C526  F513         	movff	___flmul@prod+1,?___flmul+1
 51932   0169E4  C527  F514         	movff	___flmul@prod+2,?___flmul+2
 51933   0169E8  C528  F515         	movff	___flmul@prod+3,?___flmul+3
 51934   0169EC                     l3163:
 51935   0169EC  0012               	return		;funcret
 51936   0169EE                     __end_of___flmul:
 51937                           	callstack 0
 51938                           
 51939 ;; *************** function ___flge *****************
 51940 ;; Defined at:
 51941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
 51942 ;; Parameters:    Size  Location     Type
 51943 ;;  ff1             4   42[COMRAM] unsigned char 
 51944 ;;  ff2             4   46[COMRAM] unsigned char 
 51945 ;; Auto vars:     Size  Location     Type
 51946 ;;		None
 51947 ;; Return value:  Size  Location     Type
 51948 ;;		None               void
 51949 ;; Registers used:
 51950 ;;		wreg, status,2, status,0
 51951 ;; Tracked objects:
 51952 ;;		On entry : 0/0
 51953 ;;		On exit  : 0/0
 51954 ;;		Unchanged: 0/0
 51955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51956 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51959 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51960 ;;Total ram usage:       12 bytes
 51961 ;; Hardware stack levels used: 1
 51962 ;; Hardware stack levels required when called: 1
 51963 ;; This function calls:
 51964 ;;		Nothing
 51965 ;; This function is called by:
 51966 ;;		_efgtoa
 51967 ;;		_ilog10
 51968 ;; This function uses a non-reentrant model
 51969 ;;
 51970                           
 51971                           	psect	text139
 51972   01D242                     __ptext139:
 51973                           	callstack 0
 51974   01D242                     ___flge:
 51975                           	callstack 114
 51976   01D242  0E00               	movlw	0
 51977   01D244  142B               	andwf	___flge@ff1^(0+1280),w,c
 51978   01D246  6E33               	movwf	??___flge^(0+1280),c
 51979   01D248  0E00               	movlw	0
 51980   01D24A  142C               	andwf	(___flge@ff1+1)^(0+1280),w,c
 51981   01D24C  6E34               	movwf	(??___flge+1)^(0+1280),c
 51982   01D24E  0E80               	movlw	128
 51983   01D250  142D               	andwf	(___flge@ff1+2)^(0+1280),w,c
 51984   01D252  6E35               	movwf	(??___flge+2)^(0+1280),c
 51985   01D254  0E7F               	movlw	127
 51986   01D256  142E               	andwf	(___flge@ff1+3)^(0+1280),w,c
 51987   01D258  6E36               	movwf	(??___flge+3)^(0+1280),c
 51988   01D25A  5033               	movf	??___flge^(0+1280),w,c
 51989   01D25C  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 51990   01D25E  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 51991   01D260  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 51992   01D262  A4D8               	btfss	status,2,c
 51993   01D264  EF36  F0E9         	goto	u26061
 51994   01D268  EF38  F0E9         	goto	u26060
 51995   01D26C                     u26061:
 51996   01D26C  EF40  F0E9         	goto	l19701
 51997   01D270                     u26060:
 51998   01D270  0E00               	movlw	0
 51999   01D272  6E2B               	movwf	___flge@ff1^(0+1280),c
 52000   01D274  0E00               	movlw	0
 52001   01D276  6E2C               	movwf	(___flge@ff1+1)^(0+1280),c
 52002   01D278  0E00               	movlw	0
 52003   01D27A  6E2D               	movwf	(___flge@ff1+2)^(0+1280),c
 52004   01D27C  0E00               	movlw	0
 52005   01D27E  6E2E               	movwf	(___flge@ff1+3)^(0+1280),c
 52006   01D280                     l19701:
 52007   01D280  0E00               	movlw	0
 52008   01D282  142F               	andwf	___flge@ff2^(0+1280),w,c
 52009   01D284  6E33               	movwf	??___flge^(0+1280),c
 52010   01D286  0E00               	movlw	0
 52011   01D288  1430               	andwf	(___flge@ff2+1)^(0+1280),w,c
 52012   01D28A  6E34               	movwf	(??___flge+1)^(0+1280),c
 52013   01D28C  0E80               	movlw	128
 52014   01D28E  1431               	andwf	(___flge@ff2+2)^(0+1280),w,c
 52015   01D290  6E35               	movwf	(??___flge+2)^(0+1280),c
 52016   01D292  0E7F               	movlw	127
 52017   01D294  1432               	andwf	(___flge@ff2+3)^(0+1280),w,c
 52018   01D296  6E36               	movwf	(??___flge+3)^(0+1280),c
 52019   01D298  5033               	movf	??___flge^(0+1280),w,c
 52020   01D29A  1034               	iorwf	(??___flge+1)^(0+1280),w,c
 52021   01D29C  1035               	iorwf	(??___flge+2)^(0+1280),w,c
 52022   01D29E  1036               	iorwf	(??___flge+3)^(0+1280),w,c
 52023   01D2A0  A4D8               	btfss	status,2,c
 52024   01D2A2  EF55  F0E9         	goto	u26071
 52025   01D2A6  EF57  F0E9         	goto	u26070
 52026   01D2AA                     u26071:
 52027   01D2AA  EF5F  F0E9         	goto	l19705
 52028   01D2AE                     u26070:
 52029   01D2AE  0E00               	movlw	0
 52030   01D2B0  6E2F               	movwf	___flge@ff2^(0+1280),c
 52031   01D2B2  0E00               	movlw	0
 52032   01D2B4  6E30               	movwf	(___flge@ff2+1)^(0+1280),c
 52033   01D2B6  0E00               	movlw	0
 52034   01D2B8  6E31               	movwf	(___flge@ff2+2)^(0+1280),c
 52035   01D2BA  0E00               	movlw	0
 52036   01D2BC  6E32               	movwf	(___flge@ff2+3)^(0+1280),c
 52037   01D2BE                     l19705:
 52038   01D2BE  AE2E               	btfss	(___flge@ff1+3)^(0+1280),7,c
 52039   01D2C0  EF64  F0E9         	goto	u26081
 52040   01D2C4  EF66  F0E9         	goto	u26080
 52041   01D2C8                     u26081:
 52042   01D2C8  EF6F  F0E9         	goto	l19709
 52043   01D2CC                     u26080:
 52044   01D2CC  6C2B               	negf	___flge@ff1^(0+1280),c
 52045   01D2CE  1E2C               	comf	(___flge@ff1+1)^(0+1280),f,c
 52046   01D2D0  B0D8               	btfsc	status,0,c
 52047   01D2D2  2A2C               	incf	(___flge@ff1+1)^(0+1280),f,c
 52048   01D2D4  1E2D               	comf	(___flge@ff1+2)^(0+1280),f,c
 52049   01D2D6  B0D8               	btfsc	status,0,c
 52050   01D2D8  2A2D               	incf	(___flge@ff1+2)^(0+1280),f,c
 52051   01D2DA  0E80               	movlw	128
 52052   01D2DC  562E               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 52053   01D2DE                     l19709:
 52054   01D2DE  AE32               	btfss	(___flge@ff2+3)^(0+1280),7,c
 52055   01D2E0  EF74  F0E9         	goto	u26091
 52056   01D2E4  EF76  F0E9         	goto	u26090
 52057   01D2E8                     u26091:
 52058   01D2E8  EF7F  F0E9         	goto	l2810
 52059   01D2EC                     u26090:
 52060   01D2EC  6C2F               	negf	___flge@ff2^(0+1280),c
 52061   01D2EE  1E30               	comf	(___flge@ff2+1)^(0+1280),f,c
 52062   01D2F0  B0D8               	btfsc	status,0,c
 52063   01D2F2  2A30               	incf	(___flge@ff2+1)^(0+1280),f,c
 52064   01D2F4  1E31               	comf	(___flge@ff2+2)^(0+1280),f,c
 52065   01D2F6  B0D8               	btfsc	status,0,c
 52066   01D2F8  2A31               	incf	(___flge@ff2+2)^(0+1280),f,c
 52067   01D2FA  0E80               	movlw	128
 52068   01D2FC  5632               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 52069   01D2FE                     l2810:
 52070   01D2FE  0E00               	movlw	0
 52071   01D300  1A2B               	xorwf	___flge@ff1^(0+1280),f,c
 52072   01D302  0E00               	movlw	0
 52073   01D304  1A2C               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 52074   01D306  0E00               	movlw	0
 52075   01D308  1A2D               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 52076   01D30A  0E80               	movlw	128
 52077   01D30C  1A2E               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 52078   01D30E  0E00               	movlw	0
 52079   01D310  1A2F               	xorwf	___flge@ff2^(0+1280),f,c
 52080   01D312  0E00               	movlw	0
 52081   01D314  1A30               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 52082   01D316  0E00               	movlw	0
 52083   01D318  1A31               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 52084   01D31A  0E80               	movlw	128
 52085   01D31C  1A32               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 52086   01D31E  502F               	movf	___flge@ff2^(0+1280),w,c
 52087   01D320  5C2B               	subwf	___flge@ff1^(0+1280),w,c
 52088   01D322  5030               	movf	(___flge@ff2+1)^(0+1280),w,c
 52089   01D324  582C               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 52090   01D326  5031               	movf	(___flge@ff2+2)^(0+1280),w,c
 52091   01D328  582D               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 52092   01D32A  5032               	movf	(___flge@ff2+3)^(0+1280),w,c
 52093   01D32C  582E               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 52094   01D32E  B0D8               	btfsc	status,0,c
 52095   01D330  EF9C  F0E9         	goto	u26101
 52096   01D334  EF9E  F0E9         	goto	u26100
 52097   01D338                     u26101:
 52098   01D338  EFA1  F0E9         	goto	l19715
 52099   01D33C                     u26100:
 52100   01D33C  90D8               	bcf	status,0,c
 52101   01D33E  EFA2  F0E9         	goto	l2815
 52102   01D342                     l19715:
 52103   01D342  80D8               	bsf	status,0,c
 52104   01D344                     l2815:
 52105   01D344  0012               	return		;funcret
 52106   01D346                     __end_of___flge:
 52107                           	callstack 0
 52108                           
 52109 ;; *************** function ___fleq *****************
 52110 ;; Defined at:
 52111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
 52112 ;; Parameters:    Size  Location     Type
 52113 ;;  ff1             4    3[COMRAM] unsigned char 
 52114 ;;  ff2             4    7[COMRAM] unsigned char 
 52115 ;; Auto vars:     Size  Location     Type
 52116 ;;		None
 52117 ;; Return value:  Size  Location     Type
 52118 ;;		None               void
 52119 ;; Registers used:
 52120 ;;		wreg, status,2, status,0
 52121 ;; Tracked objects:
 52122 ;;		On entry : 0/0
 52123 ;;		On exit  : 0/0
 52124 ;;		Unchanged: 0/0
 52125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 52126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52129 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52130 ;;Total ram usage:       12 bytes
 52131 ;; Hardware stack levels used: 1
 52132 ;; Hardware stack levels required when called: 1
 52133 ;; This function calls:
 52134 ;;		Nothing
 52135 ;; This function is called by:
 52136 ;;		_efgtoa
 52137 ;;		_ftoa
 52138 ;; This function uses a non-reentrant model
 52139 ;;
 52140                           
 52141                           	psect	text140
 52142   01E902                     __ptext140:
 52143                           	callstack 0
 52144   01E902                     ___fleq:
 52145                           	callstack 114
 52146   01E902  0E00               	movlw	0
 52147   01E904  1404               	andwf	___fleq@ff1^(0+1280),w,c
 52148   01E906  6E0C               	movwf	??___fleq^(0+1280),c
 52149   01E908  0E00               	movlw	0
 52150   01E90A  1405               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 52151   01E90C  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 52152   01E90E  0E80               	movlw	128
 52153   01E910  1406               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 52154   01E912  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 52155   01E914  0E7F               	movlw	127
 52156   01E916  1407               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 52157   01E918  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 52158   01E91A  500C               	movf	??___fleq^(0+1280),w,c
 52159   01E91C  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 52160   01E91E  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 52161   01E920  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 52162   01E922  A4D8               	btfss	status,2,c
 52163   01E924  EF96  F0F4         	goto	u26031
 52164   01E928  EF98  F0F4         	goto	u26030
 52165   01E92C                     u26031:
 52166   01E92C  EFA0  F0F4         	goto	l19685
 52167   01E930                     u26030:
 52168   01E930  0E00               	movlw	0
 52169   01E932  6E04               	movwf	___fleq@ff1^(0+1280),c
 52170   01E934  0E00               	movlw	0
 52171   01E936  6E05               	movwf	(___fleq@ff1+1)^(0+1280),c
 52172   01E938  0E00               	movlw	0
 52173   01E93A  6E06               	movwf	(___fleq@ff1+2)^(0+1280),c
 52174   01E93C  0E00               	movlw	0
 52175   01E93E  6E07               	movwf	(___fleq@ff1+3)^(0+1280),c
 52176   01E940                     l19685:
 52177   01E940  0E00               	movlw	0
 52178   01E942  1408               	andwf	___fleq@ff2^(0+1280),w,c
 52179   01E944  6E0C               	movwf	??___fleq^(0+1280),c
 52180   01E946  0E00               	movlw	0
 52181   01E948  1409               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 52182   01E94A  6E0D               	movwf	(??___fleq+1)^(0+1280),c
 52183   01E94C  0E80               	movlw	128
 52184   01E94E  140A               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 52185   01E950  6E0E               	movwf	(??___fleq+2)^(0+1280),c
 52186   01E952  0E7F               	movlw	127
 52187   01E954  140B               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 52188   01E956  6E0F               	movwf	(??___fleq+3)^(0+1280),c
 52189   01E958  500C               	movf	??___fleq^(0+1280),w,c
 52190   01E95A  100D               	iorwf	(??___fleq+1)^(0+1280),w,c
 52191   01E95C  100E               	iorwf	(??___fleq+2)^(0+1280),w,c
 52192   01E95E  100F               	iorwf	(??___fleq+3)^(0+1280),w,c
 52193   01E960  A4D8               	btfss	status,2,c
 52194   01E962  EFB5  F0F4         	goto	u26041
 52195   01E966  EFB7  F0F4         	goto	u26040
 52196   01E96A                     u26041:
 52197   01E96A  EFBF  F0F4         	goto	l19689
 52198   01E96E                     u26040:
 52199   01E96E  0E00               	movlw	0
 52200   01E970  6E08               	movwf	___fleq@ff2^(0+1280),c
 52201   01E972  0E00               	movlw	0
 52202   01E974  6E09               	movwf	(___fleq@ff2+1)^(0+1280),c
 52203   01E976  0E00               	movlw	0
 52204   01E978  6E0A               	movwf	(___fleq@ff2+2)^(0+1280),c
 52205   01E97A  0E00               	movlw	0
 52206   01E97C  6E0B               	movwf	(___fleq@ff2+3)^(0+1280),c
 52207   01E97E                     l19689:
 52208   01E97E  5008               	movf	___fleq@ff2^(0+1280),w,c
 52209   01E980  1804               	xorwf	___fleq@ff1^(0+1280),w,c
 52210   01E982  E10F               	bnz	u26050
 52211   01E984  5009               	movf	(___fleq@ff2+1)^(0+1280),w,c
 52212   01E986  1805               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 52213   01E988  E10C               	bnz	u26050
 52214   01E98A  500A               	movf	(___fleq@ff2+2)^(0+1280),w,c
 52215   01E98C  1806               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 52216   01E98E  E109               	bnz	u26050
 52217   01E990  500B               	movf	(___fleq@ff2+3)^(0+1280),w,c
 52218   01E992  1807               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 52219   01E994  B4D8               	btfsc	status,2,c
 52220   01E996  EFCF  F0F4         	goto	u26051
 52221   01E99A  EFD1  F0F4         	goto	u26050
 52222   01E99E                     u26051:
 52223   01E99E  EFD4  F0F4         	goto	l19693
 52224   01E9A2                     u26050:
 52225   01E9A2  90D8               	bcf	status,0,c
 52226   01E9A4  EFD5  F0F4         	goto	l2804
 52227   01E9A8                     l19693:
 52228   01E9A8  80D8               	bsf	status,0,c
 52229   01E9AA                     l2804:
 52230   01E9AA  0012               	return		;funcret
 52231   01E9AC                     __end_of___fleq:
 52232                           	callstack 0
 52233                           
 52234 ;; *************** function ___fldiv *****************
 52235 ;; Defined at:
 52236 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 52237 ;; Parameters:    Size  Location     Type
 52238 ;;  b               4   42[COMRAM] unsigned char 
 52239 ;;  a               4   46[COMRAM] unsigned char 
 52240 ;; Auto vars:     Size  Location     Type
 52241 ;;  grs             4   61[COMRAM] unsigned long 
 52242 ;;  rem             4   54[COMRAM] unsigned long 
 52243 ;;  new_exp         2   59[COMRAM] short 
 52244 ;;  aexp            1   66[COMRAM] unsigned char 
 52245 ;;  bexp            1   65[COMRAM] unsigned char 
 52246 ;;  sign            1   58[COMRAM] unsigned char 
 52247 ;; Return value:  Size  Location     Type
 52248 ;;                  4   42[COMRAM] unsigned char 
 52249 ;; Registers used:
 52250 ;;		wreg, status,2, status,0
 52251 ;; Tracked objects:
 52252 ;;		On entry : 0/0
 52253 ;;		On exit  : 0/0
 52254 ;;		Unchanged: 0/0
 52255 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 52256 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52257 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52259 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52260 ;;Total ram usage:       25 bytes
 52261 ;; Hardware stack levels used: 1
 52262 ;; Hardware stack levels required when called: 1
 52263 ;; This function calls:
 52264 ;;		Nothing
 52265 ;; This function is called by:
 52266 ;;		_main
 52267 ;;		_efgtoa
 52268 ;;		_ilog10
 52269 ;;		_i10x
 52270 ;;		_ftoa
 52271 ;; This function uses a non-reentrant model
 52272 ;;
 52273                           
 52274                           	psect	text141
 52275   017554                     __ptext141:
 52276                           	callstack 0
 52277   017554                     ___fldiv:
 52278                           	callstack 114
 52279   017554  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 52280   017556  0B80               	andlw	128
 52281   017558  6E3B               	movwf	___fldiv@sign^(0+1280),c
 52282   01755A  502E               	movf	(___fldiv@b+3)^(0+1280),w,c
 52283   01755C  242E               	addwf	(___fldiv@b+3)^(0+1280),w,c
 52284   01755E  6E42               	movwf	___fldiv@bexp^(0+1280),c
 52285   017560  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 52286   017562  EFB5  F0BA         	goto	u25611
 52287   017566  EFB7  F0BA         	goto	u25610
 52288   01756A                     u25611:
 52289   01756A  EFB8  F0BA         	goto	l19417
 52290   01756E                     u25610:
 52291   01756E  8042               	bsf	___fldiv@bexp^(0+1280),0,c
 52292   017570                     l19417:
 52293   017570  5042               	movf	___fldiv@bexp^(0+1280),w,c
 52294   017572  B4D8               	btfsc	status,2,c
 52295   017574  EFBE  F0BA         	goto	u25621
 52296   017578  EFC0  F0BA         	goto	u25620
 52297   01757C                     u25621:
 52298   01757C  EFD4  F0BA         	goto	l19427
 52299   017580                     u25620:
 52300   017580  2842               	incf	___fldiv@bexp^(0+1280),w,c
 52301   017582  A4D8               	btfss	status,2,c
 52302   017584  EFC6  F0BA         	goto	u25631
 52303   017588  EFC8  F0BA         	goto	u25630
 52304   01758C                     u25631:
 52305   01758C  EFD0  F0BA         	goto	l19423
 52306   017590                     u25630:
 52307   017590  0E00               	movlw	0
 52308   017592  6E2B               	movwf	___fldiv@b^(0+1280),c
 52309   017594  0E00               	movlw	0
 52310   017596  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52311   017598  0E00               	movlw	0
 52312   01759A  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52313   01759C  0E00               	movlw	0
 52314   01759E  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52315   0175A0                     l19423:
 52316   0175A0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 52317   0175A2  6A2E               	clrf	(___fldiv@b+3)^(0+1280),c
 52318   0175A4  EFDC  F0BA         	goto	l19429
 52319   0175A8                     l19427:
 52320   0175A8  0E00               	movlw	0
 52321   0175AA  6E2B               	movwf	___fldiv@b^(0+1280),c
 52322   0175AC  0E00               	movlw	0
 52323   0175AE  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52324   0175B0  0E00               	movlw	0
 52325   0175B2  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52326   0175B4  0E00               	movlw	0
 52327   0175B6  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52328   0175B8                     l19429:
 52329   0175B8  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 52330   0175BA  0B80               	andlw	128
 52331   0175BC  1A3B               	xorwf	___fldiv@sign^(0+1280),f,c
 52332   0175BE  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 52333   0175C0  2432               	addwf	(___fldiv@a+3)^(0+1280),w,c
 52334   0175C2  6E43               	movwf	___fldiv@aexp^(0+1280),c
 52335   0175C4  AE31               	btfss	(___fldiv@a+2)^(0+1280),7,c
 52336   0175C6  EFE7  F0BA         	goto	u25641
 52337   0175CA  EFE9  F0BA         	goto	u25640
 52338   0175CE                     u25641:
 52339   0175CE  EFEA  F0BA         	goto	l19437
 52340   0175D2                     u25640:
 52341   0175D2  8043               	bsf	___fldiv@aexp^(0+1280),0,c
 52342   0175D4                     l19437:
 52343   0175D4  5043               	movf	___fldiv@aexp^(0+1280),w,c
 52344   0175D6  B4D8               	btfsc	status,2,c
 52345   0175D8  EFF0  F0BA         	goto	u25651
 52346   0175DC  EFF2  F0BA         	goto	u25650
 52347   0175E0                     u25651:
 52348   0175E0  EF06  F0BB         	goto	l19447
 52349   0175E4                     u25650:
 52350   0175E4  2843               	incf	___fldiv@aexp^(0+1280),w,c
 52351   0175E6  A4D8               	btfss	status,2,c
 52352   0175E8  EFF8  F0BA         	goto	u25661
 52353   0175EC  EFFA  F0BA         	goto	u25660
 52354   0175F0                     u25661:
 52355   0175F0  EF02  F0BB         	goto	l19443
 52356   0175F4                     u25660:
 52357   0175F4  0E00               	movlw	0
 52358   0175F6  6E2F               	movwf	___fldiv@a^(0+1280),c
 52359   0175F8  0E00               	movlw	0
 52360   0175FA  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 52361   0175FC  0E00               	movlw	0
 52362   0175FE  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 52363   017600  0E00               	movlw	0
 52364   017602  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 52365   017604                     l19443:
 52366   017604  8E31               	bsf	(___fldiv@a+2)^(0+1280),7,c
 52367   017606  6A32               	clrf	(___fldiv@a+3)^(0+1280),c
 52368   017608  EF0E  F0BB         	goto	l19449
 52369   01760C                     l19447:
 52370   01760C  0E00               	movlw	0
 52371   01760E  6E2F               	movwf	___fldiv@a^(0+1280),c
 52372   017610  0E00               	movlw	0
 52373   017612  6E30               	movwf	(___fldiv@a+1)^(0+1280),c
 52374   017614  0E00               	movlw	0
 52375   017616  6E31               	movwf	(___fldiv@a+2)^(0+1280),c
 52376   017618  0E00               	movlw	0
 52377   01761A  6E32               	movwf	(___fldiv@a+3)^(0+1280),c
 52378   01761C                     l19449:
 52379   01761C  502F               	movf	___fldiv@a^(0+1280),w,c
 52380   01761E  1030               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 52381   017620  1031               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 52382   017622  1032               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 52383   017624  A4D8               	btfss	status,2,c
 52384   017626  EF17  F0BB         	goto	u25671
 52385   01762A  EF19  F0BB         	goto	u25670
 52386   01762E                     u25671:
 52387   01762E  EF31  F0BB         	goto	l19461
 52388   017632                     u25670:
 52389   017632  0E00               	movlw	0
 52390   017634  6E2B               	movwf	___fldiv@b^(0+1280),c
 52391   017636  0E00               	movlw	0
 52392   017638  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52393   01763A  0E00               	movlw	0
 52394   01763C  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52395   01763E  0E00               	movlw	0
 52396   017640  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52397   017642  0E80               	movlw	128
 52398   017644  122D               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 52399   017646  0E7F               	movlw	127
 52400   017648  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 52401   01764A                     l19455:
 52402   01764A  503B               	movf	___fldiv@sign^(0+1280),w,c
 52403   01764C  122E               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 52404   01764E  C52B  F52B         	movff	___fldiv@b,?___fldiv
 52405   017652  C52C  F52C         	movff	___fldiv@b+1,?___fldiv+1
 52406   017656  C52D  F52D         	movff	___fldiv@b+2,?___fldiv+2
 52407   01765A  C52E  F52E         	movff	___fldiv@b+3,?___fldiv+3
 52408   01765E  EF71  F0BC         	goto	l3127
 52409   017662                     l19461:
 52410   017662  5042               	movf	___fldiv@bexp^(0+1280),w,c
 52411   017664  A4D8               	btfss	status,2,c
 52412   017666  EF37  F0BB         	goto	u25681
 52413   01766A  EF39  F0BB         	goto	u25680
 52414   01766E                     u25681:
 52415   01766E  EF43  F0BB         	goto	l19469
 52416   017672                     u25680:
 52417   017672  0E00               	movlw	0
 52418   017674  6E2B               	movwf	?___fldiv^(0+1280),c
 52419   017676  0E00               	movlw	0
 52420   017678  6E2C               	movwf	(?___fldiv+1)^(0+1280),c
 52421   01767A  0E00               	movlw	0
 52422   01767C  6E2D               	movwf	(?___fldiv+2)^(0+1280),c
 52423   01767E  0E00               	movlw	0
 52424   017680  6E2E               	movwf	(?___fldiv+3)^(0+1280),c
 52425   017682  EF71  F0BC         	goto	l3127
 52426   017686                     l19469:
 52427   017686  5043               	movf	___fldiv@aexp^(0+1280),w,c
 52428   017688  C542  F533         	movff	___fldiv@bexp,??___fldiv
 52429   01768C  6A34               	clrf	(??___fldiv+1)^(0+1280),c
 52430   01768E  5E33               	subwf	??___fldiv^(0+1280),f,c
 52431   017690  0E00               	movlw	0
 52432   017692  5A34               	subwfb	(??___fldiv+1)^(0+1280),f,c
 52433   017694  0E7F               	movlw	127
 52434   017696  2433               	addwf	??___fldiv^(0+1280),w,c
 52435   017698  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 52436   01769A  0E00               	movlw	0
 52437   01769C  2034               	addwfc	(??___fldiv+1)^(0+1280),w,c
 52438   01769E  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 52439   0176A0  C52B  F537         	movff	___fldiv@b,___fldiv@rem
 52440   0176A4  C52C  F538         	movff	___fldiv@b+1,___fldiv@rem+1
 52441   0176A8  C52D  F539         	movff	___fldiv@b+2,___fldiv@rem+2
 52442   0176AC  C52E  F53A         	movff	___fldiv@b+3,___fldiv@rem+3
 52443   0176B0  0E00               	movlw	0
 52444   0176B2  6E2B               	movwf	___fldiv@b^(0+1280),c
 52445   0176B4  0E00               	movlw	0
 52446   0176B6  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52447   0176B8  0E00               	movlw	0
 52448   0176BA  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52449   0176BC  0E00               	movlw	0
 52450   0176BE  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52451   0176C0  0E00               	movlw	0
 52452   0176C2  6E3E               	movwf	___fldiv@grs^(0+1280),c
 52453   0176C4  0E00               	movlw	0
 52454   0176C6  6E3F               	movwf	(___fldiv@grs+1)^(0+1280),c
 52455   0176C8  0E00               	movlw	0
 52456   0176CA  6E40               	movwf	(___fldiv@grs+2)^(0+1280),c
 52457   0176CC  0E00               	movlw	0
 52458   0176CE  6E41               	movwf	(___fldiv@grs+3)^(0+1280),c
 52459   0176D0  6A43               	clrf	___fldiv@aexp^(0+1280),c
 52460   0176D2  EFA3  F0BB         	goto	l3129
 52461   0176D6                     l19479:
 52462   0176D6  5043               	movf	___fldiv@aexp^(0+1280),w,c
 52463   0176D8  B4D8               	btfsc	status,2,c
 52464   0176DA  EF71  F0BB         	goto	u25691
 52465   0176DE  EF73  F0BB         	goto	u25690
 52466   0176E2                     u25691:
 52467   0176E2  EF8A  F0BB         	goto	l19487
 52468   0176E6                     u25690:
 52469   0176E6  90D8               	bcf	status,0,c
 52470   0176E8  3637               	rlcf	___fldiv@rem^(0+1280),f,c
 52471   0176EA  3638               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 52472   0176EC  3639               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 52473   0176EE  363A               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 52474   0176F0  90D8               	bcf	status,0,c
 52475   0176F2  362B               	rlcf	___fldiv@b^(0+1280),f,c
 52476   0176F4  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 52477   0176F6  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 52478   0176F8  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 52479   0176FA  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 52480   0176FC  EF82  F0BB         	goto	u25701
 52481   017700  EF84  F0BB         	goto	u25700
 52482   017704                     u25701:
 52483   017704  EF85  F0BB         	goto	l3132
 52484   017708                     u25700:
 52485   017708  802B               	bsf	___fldiv@b^(0+1280),0,c
 52486   01770A                     l3132:
 52487   01770A  90D8               	bcf	status,0,c
 52488   01770C  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 52489   01770E  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 52490   017710  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 52491   017712  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 52492   017714                     l19487:
 52493   017714  502F               	movf	___fldiv@a^(0+1280),w,c
 52494   017716  5C37               	subwf	___fldiv@rem^(0+1280),w,c
 52495   017718  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 52496   01771A  5838               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 52497   01771C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 52498   01771E  5839               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 52499   017720  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 52500   017722  583A               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 52501   017724  A0D8               	btfss	status,0,c
 52502   017726  EF97  F0BB         	goto	u25711
 52503   01772A  EF99  F0BB         	goto	u25710
 52504   01772E                     u25711:
 52505   01772E  EFA2  F0BB         	goto	l19493
 52506   017732                     u25710:
 52507   017732  8C41               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 52508   017734  502F               	movf	___fldiv@a^(0+1280),w,c
 52509   017736  5E37               	subwf	___fldiv@rem^(0+1280),f,c
 52510   017738  5030               	movf	(___fldiv@a+1)^(0+1280),w,c
 52511   01773A  5A38               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 52512   01773C  5031               	movf	(___fldiv@a+2)^(0+1280),w,c
 52513   01773E  5A39               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 52514   017740  5032               	movf	(___fldiv@a+3)^(0+1280),w,c
 52515   017742  5A3A               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 52516   017744                     l19493:
 52517   017744  2A43               	incf	___fldiv@aexp^(0+1280),f,c
 52518   017746                     l3129:
 52519   017746  0E19               	movlw	25
 52520   017748  6443               	cpfsgt	___fldiv@aexp^(0+1280),c
 52521   01774A  EFA9  F0BB         	goto	u25721
 52522   01774E  EFAB  F0BB         	goto	u25720
 52523   017752                     u25721:
 52524   017752  EF6B  F0BB         	goto	l19479
 52525   017756                     u25720:
 52526   017756  5037               	movf	___fldiv@rem^(0+1280),w,c
 52527   017758  1038               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 52528   01775A  1039               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 52529   01775C  103A               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 52530   01775E  B4D8               	btfsc	status,2,c
 52531   017760  EFB4  F0BB         	goto	u25731
 52532   017764  EFB6  F0BB         	goto	u25730
 52533   017768                     u25731:
 52534   017768  EFCE  F0BB         	goto	l19505
 52535   01776C                     u25730:
 52536   01776C  803E               	bsf	___fldiv@grs^(0+1280),0,c
 52537   01776E  EFCE  F0BB         	goto	l19505
 52538   017772                     l19499:
 52539   017772  90D8               	bcf	status,0,c
 52540   017774  362B               	rlcf	___fldiv@b^(0+1280),f,c
 52541   017776  362C               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 52542   017778  362D               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 52543   01777A  362E               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 52544   01777C  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 52545   01777E  EFC3  F0BB         	goto	u25741
 52546   017782  EFC5  F0BB         	goto	u25740
 52547   017786                     u25741:
 52548   017786  EFC6  F0BB         	goto	l3138
 52549   01778A                     u25740:
 52550   01778A  802B               	bsf	___fldiv@b^(0+1280),0,c
 52551   01778C                     l3138:
 52552   01778C  90D8               	bcf	status,0,c
 52553   01778E  363E               	rlcf	___fldiv@grs^(0+1280),f,c
 52554   017790  363F               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 52555   017792  3640               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 52556   017794  3641               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 52557   017796  063C               	decf	___fldiv@new_exp^(0+1280),f,c
 52558   017798  A0D8               	btfss	status,0,c
 52559   01779A  063D               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 52560   01779C                     l19505:
 52561   01779C  AE2D               	btfss	(___fldiv@b+2)^(0+1280),7,c
 52562   01779E  EFD3  F0BB         	goto	u25751
 52563   0177A2  EFD5  F0BB         	goto	u25750
 52564   0177A6                     u25751:
 52565   0177A6  EFB9  F0BB         	goto	l19499
 52566   0177AA                     u25750:
 52567   0177AA  6A43               	clrf	___fldiv@aexp^(0+1280),c
 52568   0177AC  AE41               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 52569   0177AE  EFDB  F0BB         	goto	u25761
 52570   0177B2  EFDD  F0BB         	goto	u25760
 52571   0177B6                     u25761:
 52572   0177B6  EF01  F0BC         	goto	l3140
 52573   0177BA                     u25760:
 52574   0177BA  0EFF               	movlw	255
 52575   0177BC  143E               	andwf	___fldiv@grs^(0+1280),w,c
 52576   0177BE  6E33               	movwf	??___fldiv^(0+1280),c
 52577   0177C0  0EFF               	movlw	255
 52578   0177C2  143F               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 52579   0177C4  6E34               	movwf	(??___fldiv+1)^(0+1280),c
 52580   0177C6  0EFF               	movlw	255
 52581   0177C8  1440               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 52582   0177CA  6E35               	movwf	(??___fldiv+2)^(0+1280),c
 52583   0177CC  0E7F               	movlw	127
 52584   0177CE  1441               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 52585   0177D0  6E36               	movwf	(??___fldiv+3)^(0+1280),c
 52586   0177D2  5033               	movf	??___fldiv^(0+1280),w,c
 52587   0177D4  1034               	iorwf	(??___fldiv+1)^(0+1280),w,c
 52588   0177D6  1035               	iorwf	(??___fldiv+2)^(0+1280),w,c
 52589   0177D8  1036               	iorwf	(??___fldiv+3)^(0+1280),w,c
 52590   0177DA  B4D8               	btfsc	status,2,c
 52591   0177DC  EFF2  F0BB         	goto	u25771
 52592   0177E0  EFF4  F0BB         	goto	u25770
 52593   0177E4                     u25771:
 52594   0177E4  EFF8  F0BB         	goto	l3141
 52595   0177E8                     u25770:
 52596   0177E8                     l19509:
 52597   0177E8  0E01               	movlw	1
 52598   0177EA  6E43               	movwf	___fldiv@aexp^(0+1280),c
 52599   0177EC  EF01  F0BC         	goto	l3140
 52600   0177F0                     l3141:
 52601   0177F0  A02B               	btfss	___fldiv@b^(0+1280),0,c
 52602   0177F2  EFFD  F0BB         	goto	u25781
 52603   0177F6  EFFF  F0BB         	goto	u25780
 52604   0177FA                     u25781:
 52605   0177FA  EF01  F0BC         	goto	l3140
 52606   0177FE                     u25780:
 52607   0177FE  EFF4  F0BB         	goto	l19509
 52608   017802                     l3140:
 52609   017802  5043               	movf	___fldiv@aexp^(0+1280),w,c
 52610   017804  B4D8               	btfsc	status,2,c
 52611   017806  EF07  F0BC         	goto	u25791
 52612   01780A  EF09  F0BC         	goto	u25790
 52613   01780E                     u25791:
 52614   01780E  EF2D  F0BC         	goto	l19521
 52615   017812                     u25790:
 52616   017812  0E01               	movlw	1
 52617   017814  262B               	addwf	___fldiv@b^(0+1280),f,c
 52618   017816  0E00               	movlw	0
 52619   017818  222C               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 52620   01781A  222D               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 52621   01781C  222E               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 52622   01781E  A02E               	btfss	(___fldiv@b+3)^(0+1280),0,c
 52623   017820  EF14  F0BC         	goto	u25801
 52624   017824  EF16  F0BC         	goto	u25800
 52625   017828                     u25801:
 52626   017828  EF2D  F0BC         	goto	l19521
 52627   01782C                     u25800:
 52628   01782C  C52B  F533         	movff	___fldiv@b,??___fldiv
 52629   017830  C52C  F534         	movff	___fldiv@b+1,??___fldiv+1
 52630   017834  C52D  F535         	movff	___fldiv@b+2,??___fldiv+2
 52631   017838  C52E  F536         	movff	___fldiv@b+3,??___fldiv+3
 52632   01783C  3436               	rlcf	(??___fldiv+3)^(0+1280),w,c
 52633   01783E  3236               	rrcf	(??___fldiv+3)^(0+1280),f,c
 52634   017840  3235               	rrcf	(??___fldiv+2)^(0+1280),f,c
 52635   017842  3234               	rrcf	(??___fldiv+1)^(0+1280),f,c
 52636   017844  3233               	rrcf	??___fldiv^(0+1280),f,c
 52637   017846  C533  F52B         	movff	??___fldiv,___fldiv@b
 52638   01784A  C534  F52C         	movff	??___fldiv+1,___fldiv@b+1
 52639   01784E  C535  F52D         	movff	??___fldiv+2,___fldiv@b+2
 52640   017852  C536  F52E         	movff	??___fldiv+3,___fldiv@b+3
 52641   017856  4A3C               	infsnz	___fldiv@new_exp^(0+1280),f,c
 52642   017858  2A3D               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 52643   01785A                     l19521:
 52644   01785A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 52645   01785C  EF38  F0BC         	goto	u25811
 52646   017860  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 52647   017862  E108               	bnz	u25810
 52648   017864  283C               	incf	___fldiv@new_exp^(0+1280),w,c
 52649   017866  A0D8               	btfss	status,0,c
 52650   017868  EF38  F0BC         	goto	u25811
 52651   01786C  EF3A  F0BC         	goto	u25810
 52652   017870                     u25811:
 52653   017870  EF45  F0BC         	goto	l19525
 52654   017874                     u25810:
 52655   017874  0E00               	movlw	0
 52656   017876  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 52657   017878  683C               	setf	___fldiv@new_exp^(0+1280),c
 52658   01787A  0E00               	movlw	0
 52659   01787C  6E2B               	movwf	___fldiv@b^(0+1280),c
 52660   01787E  0E00               	movlw	0
 52661   017880  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52662   017882  0E00               	movlw	0
 52663   017884  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52664   017886  0E00               	movlw	0
 52665   017888  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52666   01788A                     l19525:
 52667   01788A  BE3D               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 52668   01788C  EF52  F0BC         	goto	u25820
 52669   017890  503D               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 52670   017892  E106               	bnz	u25821
 52671   017894  043C               	decf	___fldiv@new_exp^(0+1280),w,c
 52672   017896  B0D8               	btfsc	status,0,c
 52673   017898  EF50  F0BC         	goto	u25821
 52674   01789C  EF52  F0BC         	goto	u25820
 52675   0178A0                     u25821:
 52676   0178A0  EF5F  F0BC         	goto	l19531
 52677   0178A4                     u25820:
 52678   0178A4  0E00               	movlw	0
 52679   0178A6  6E3D               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 52680   0178A8  0E00               	movlw	0
 52681   0178AA  6E3C               	movwf	___fldiv@new_exp^(0+1280),c
 52682   0178AC  0E00               	movlw	0
 52683   0178AE  6E2B               	movwf	___fldiv@b^(0+1280),c
 52684   0178B0  0E00               	movlw	0
 52685   0178B2  6E2C               	movwf	(___fldiv@b+1)^(0+1280),c
 52686   0178B4  0E00               	movlw	0
 52687   0178B6  6E2D               	movwf	(___fldiv@b+2)^(0+1280),c
 52688   0178B8  0E00               	movlw	0
 52689   0178BA  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52690   0178BC  6A3B               	clrf	___fldiv@sign^(0+1280),c
 52691   0178BE                     l19531:
 52692   0178BE  C53C  F542         	movff	___fldiv@new_exp,___fldiv@bexp
 52693   0178C2  A042               	btfss	___fldiv@bexp^(0+1280),0,c
 52694   0178C4  EF66  F0BC         	goto	u25831
 52695   0178C8  EF68  F0BC         	goto	u25830
 52696   0178CC                     u25831:
 52697   0178CC  EF6B  F0BC         	goto	l19537
 52698   0178D0                     u25830:
 52699   0178D0  8E2D               	bsf	(___fldiv@b+2)^(0+1280),7,c
 52700   0178D2  EF6C  F0BC         	goto	l19539
 52701   0178D6                     l19537:
 52702   0178D6  9E2D               	bcf	(___fldiv@b+2)^(0+1280),7,c
 52703   0178D8                     l19539:
 52704   0178D8  90D8               	bcf	status,0,c
 52705   0178DA  3042               	rrcf	___fldiv@bexp^(0+1280),w,c
 52706   0178DC  6E2E               	movwf	(___fldiv@b+3)^(0+1280),c
 52707   0178DE  EF25  F0BB         	goto	l19455
 52708   0178E2                     l3127:
 52709   0178E2  0012               	return		;funcret
 52710   0178E4                     __end_of___fldiv:
 52711                           	callstack 0
 52712                           
 52713 ;; *************** function _dtoa *****************
 52714 ;; Defined at:
 52715 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 52716 ;; Parameters:    Size  Location     Type
 52717 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 52718 ;;		 -> sprintf@f(11), NULL(0), 
 52719 ;;  d               4   31[COMRAM] long 
 52720 ;; Auto vars:     Size  Location     Type
 52721 ;;  i               2   42[COMRAM] int 
 52722 ;;  w               2   39[COMRAM] int 
 52723 ;;  p               2   37[COMRAM] int 
 52724 ;;  s               1   41[COMRAM] unsigned char 
 52725 ;; Return value:  Size  Location     Type
 52726 ;;                  1    wreg      void 
 52727 ;; Registers used:
 52728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 52729 ;; Tracked objects:
 52730 ;;		On entry : 0/0
 52731 ;;		On exit  : 0/0
 52732 ;;		Unchanged: 0/0
 52733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 52734 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52735 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52737 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 52738 ;;Total ram usage:       15 bytes
 52739 ;; Hardware stack levels used: 1
 52740 ;; Hardware stack levels required when called: 5
 52741 ;; This function calls:
 52742 ;;		___aldiv
 52743 ;;		___almod
 52744 ;;		_abs
 52745 ;;		_pad
 52746 ;; This function is called by:
 52747 ;;		_vfpfcnvrt
 52748 ;; This function uses a non-reentrant model
 52749 ;;
 52750                           
 52751                           	psect	text142
 52752   01A702                     __ptext142:
 52753                           	callstack 0
 52754   01A702                     _dtoa:
 52755                           	callstack 111
 52756   01A702                     
 52757                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 52758   01A702  BE23               	btfsc	(dtoa@d+3)^(0+1280),7,c
 52759   01A704  EF86  F0D3         	goto	u26361
 52760   01A708  EF89  F0D3         	goto	u26360
 52761   01A70C                     u26361:
 52762   01A70C  0E01               	movlw	1
 52763   01A70E  EF8A  F0D3         	goto	u26370
 52764   01A712                     u26360:
 52765   01A712  0E00               	movlw	0
 52766   01A714                     u26370:
 52767   01A714  6E2A               	movwf	dtoa@s^(0+1280),c
 52768                           
 52769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 52770   01A716  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 52771   01A718  EF90  F0D3         	goto	u26381
 52772   01A71C  EF92  F0D3         	goto	u26380
 52773   01A720                     u26381:
 52774   01A720  EF93  F0D3         	goto	l19835
 52775   01A724                     u26380:
 52776   01A724                     
 52777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 52778   01A724  925C               	bcf	_flags^(0+1280),1,c
 52779   01A726                     l19835:
 52780                           
 52781                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 52782   01A726  BE5B               	btfsc	(_prec+1)^(0+1280),7,c
 52783   01A728  EF9A  F0D3         	goto	u26390
 52784   01A72C  EF98  F0D3         	goto	u26391
 52785   01A730                     u26391:
 52786   01A730  EFA0  F0D3         	goto	l3360
 52787   01A734                     u26390:
 52788   01A734  0E00               	movlw	0
 52789   01A736  6E27               	movwf	(dtoa@p+1)^(0+1280),c
 52790   01A738  0E01               	movlw	1
 52791   01A73A  6E26               	movwf	dtoa@p^(0+1280),c
 52792   01A73C  EFA4  F0D3         	goto	l3362
 52793   01A740                     l3360:
 52794   01A740  C55A  F526         	movff	_prec,dtoa@p
 52795   01A744  C55B  F527         	movff	_prec+1,dtoa@p+1
 52796   01A748                     l3362:
 52797                           
 52798                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 52799   01A748  C7B1  F528         	movff	_width,dtoa@w
 52800   01A74C  C7B2  F529         	movff	_width+1,dtoa@w+1
 52801   01A750                     
 52802                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 52803   01A750  502A               	movf	dtoa@s^(0+1280),w,c
 52804   01A752  B4D8               	btfsc	status,2,c
 52805   01A754  EFAE  F0D3         	goto	u26401
 52806   01A758  EFB0  F0D3         	goto	u26400
 52807   01A75C                     u26401:
 52808   01A75C  EFC7  F0D3         	goto	l3363
 52809   01A760                     u26400:
 52810   01A760                     
 52811                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 52812   01A760  0628               	decf	dtoa@w^(0+1280),f,c
 52813   01A762  A0D8               	btfss	status,0,c
 52814   01A764  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 52815   01A766                     
 52816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 52817   01A766  502A               	movf	dtoa@s^(0+1280),w,c
 52818   01A768  A4D8               	btfss	status,2,c
 52819   01A76A  EFB9  F0D3         	goto	u26411
 52820   01A76E  EFBB  F0D3         	goto	u26410
 52821   01A772                     u26411:
 52822   01A772  EFC1  F0D3         	goto	l19847
 52823   01A776                     u26410:
 52824   01A776  0E00               	movlw	0
 52825   01A778  6E25               	movwf	(_dtoa$4690+1)^(0+1280),c
 52826   01A77A  0E2B               	movlw	43
 52827   01A77C  6E24               	movwf	_dtoa$4690^(0+1280),c
 52828   01A77E  EFC5  F0D3         	goto	l19849
 52829   01A782                     l19847:
 52830   01A782  0E00               	movlw	0
 52831   01A784  6E25               	movwf	(_dtoa$4690+1)^(0+1280),c
 52832   01A786  0E2D               	movlw	45
 52833   01A788  6E24               	movwf	_dtoa$4690^(0+1280),c
 52834   01A78A                     l19849:
 52835   01A78A  C524  F52A         	movff	_dtoa$4690,dtoa@s
 52836   01A78E                     l3363:
 52837                           
 52838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 52839   01A78E  0E00               	movlw	0
 52840   01A790  6E2C               	movwf	(dtoa@i+1)^(0+1280),c
 52841   01A792  0E4F               	movlw	79
 52842   01A794  6E2B               	movwf	dtoa@i^(0+1280),c
 52843   01A796                     
 52844                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 52845   01A796  0108               	movlb	8	; () banked
 52846   01A798  6B77               	clrf	(_dbuf+79)& (0+255),b
 52847                           
 52848                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 52849   01A79A  EF13  F0D4         	goto	l19863
 52850   01A79E                     l19853:
 52851                           
 52852                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 52853   01A79E  062B               	decf	dtoa@i^(0+1280),f,c
 52854   01A7A0  A0D8               	btfss	status,0,c
 52855   01A7A2  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 52856   01A7A4                     
 52857                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 52858   01A7A4  0E28               	movlw	low _dbuf
 52859   01A7A6  242B               	addwf	dtoa@i^(0+1280),w,c
 52860   01A7A8  6ED9               	movwf	fsr2l,c
 52861   01A7AA  0E08               	movlw	high _dbuf
 52862   01A7AC  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 52863   01A7AE  6EDA               	movwf	fsr2h,c
 52864   01A7B0  C520  F504         	movff	dtoa@d,___almod@dividend
 52865   01A7B4  C521  F505         	movff	dtoa@d+1,___almod@dividend+1
 52866   01A7B8  C522  F506         	movff	dtoa@d+2,___almod@dividend+2
 52867   01A7BC  C523  F507         	movff	dtoa@d+3,___almod@dividend+3
 52868   01A7C0  0E0A               	movlw	10
 52869   01A7C2  6E08               	movwf	___almod@divisor^(0+1280),c
 52870   01A7C4  0E00               	movlw	0
 52871   01A7C6  6E09               	movwf	(___almod@divisor+1)^(0+1280),c
 52872   01A7C8  0E00               	movlw	0
 52873   01A7CA  6E0A               	movwf	(___almod@divisor+2)^(0+1280),c
 52874   01A7CC  0E00               	movlw	0
 52875   01A7CE  6E0B               	movwf	(___almod@divisor+3)^(0+1280),c
 52876   01A7D0  EC06  F0ED         	call	___almod	;wreg free
 52877   01A7D4  C504  F50E         	movff	?___almod,abs@a
 52878   01A7D8  C505  F50F         	movff	?___almod+1,abs@a+1
 52879   01A7DC  EC68  F0FF         	call	_abs	;wreg free
 52880   01A7E0  500E               	movf	?_abs^(0+1280),w,c
 52881   01A7E2  0F30               	addlw	48
 52882   01A7E4  6EDF               	movwf	indf2,c
 52883   01A7E6                     
 52884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 567:         --p;
 52885   01A7E6  0626               	decf	dtoa@p^(0+1280),f,c
 52886   01A7E8  A0D8               	btfss	status,0,c
 52887   01A7EA  0627               	decf	(dtoa@p+1)^(0+1280),f,c
 52888   01A7EC                     
 52889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 52890   01A7EC  0628               	decf	dtoa@w^(0+1280),f,c
 52891   01A7EE  A0D8               	btfss	status,0,c
 52892   01A7F0  0629               	decf	(dtoa@w+1)^(0+1280),f,c
 52893   01A7F2                     
 52894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 52895   01A7F2  C520  F504         	movff	dtoa@d,___aldiv@dividend
 52896   01A7F6  C521  F505         	movff	dtoa@d+1,___aldiv@dividend+1
 52897   01A7FA  C522  F506         	movff	dtoa@d+2,___aldiv@dividend+2
 52898   01A7FE  C523  F507         	movff	dtoa@d+3,___aldiv@dividend+3
 52899   01A802  0E0A               	movlw	10
 52900   01A804  6E08               	movwf	___aldiv@divisor^(0+1280),c
 52901   01A806  0E00               	movlw	0
 52902   01A808  6E09               	movwf	(___aldiv@divisor+1)^(0+1280),c
 52903   01A80A  0E00               	movlw	0
 52904   01A80C  6E0A               	movwf	(___aldiv@divisor+2)^(0+1280),c
 52905   01A80E  0E00               	movlw	0
 52906   01A810  6E0B               	movwf	(___aldiv@divisor+3)^(0+1280),c
 52907   01A812  EC97  F0E7         	call	___aldiv	;wreg free
 52908   01A816  C504  F520         	movff	?___aldiv,dtoa@d
 52909   01A81A  C505  F521         	movff	?___aldiv+1,dtoa@d+1
 52910   01A81E  C506  F522         	movff	?___aldiv+2,dtoa@d+2
 52911   01A822  C507  F523         	movff	?___aldiv+3,dtoa@d+3
 52912   01A826                     l19863:
 52913                           
 52914                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 52915   01A826  BE2C               	btfsc	(dtoa@i+1)^(0+1280),7,c
 52916   01A828  EF1E  F0D4         	goto	u26421
 52917   01A82C  502C               	movf	(dtoa@i+1)^(0+1280),w,c
 52918   01A82E  E108               	bnz	u26420
 52919   01A830  042B               	decf	dtoa@i^(0+1280),w,c
 52920   01A832  A0D8               	btfss	status,0,c
 52921   01A834  EF1E  F0D4         	goto	u26421
 52922   01A838  EF20  F0D4         	goto	u26420
 52923   01A83C                     u26421:
 52924   01A83C  EF4C  F0D4         	goto	l19873
 52925   01A840                     u26420:
 52926   01A840  5020               	movf	dtoa@d^(0+1280),w,c
 52927   01A842  1021               	iorwf	(dtoa@d+1)^(0+1280),w,c
 52928   01A844  1022               	iorwf	(dtoa@d+2)^(0+1280),w,c
 52929   01A846  1023               	iorwf	(dtoa@d+3)^(0+1280),w,c
 52930   01A848  A4D8               	btfss	status,2,c
 52931   01A84A  EF29  F0D4         	goto	u26431
 52932   01A84E  EF2B  F0D4         	goto	u26430
 52933   01A852                     u26431:
 52934   01A852  EFCF  F0D3         	goto	l19853
 52935   01A856                     u26430:
 52936   01A856  BE27               	btfsc	(dtoa@p+1)^(0+1280),7,c
 52937   01A858  EF38  F0D4         	goto	u26440
 52938   01A85C  5027               	movf	(dtoa@p+1)^(0+1280),w,c
 52939   01A85E  E106               	bnz	u26441
 52940   01A860  0426               	decf	dtoa@p^(0+1280),w,c
 52941   01A862  B0D8               	btfsc	status,0,c
 52942   01A864  EF36  F0D4         	goto	u26441
 52943   01A868  EF38  F0D4         	goto	u26440
 52944   01A86C                     u26441:
 52945   01A86C  EFCF  F0D3         	goto	l19853
 52946   01A870                     u26440:
 52947   01A870  BE29               	btfsc	(dtoa@w+1)^(0+1280),7,c
 52948   01A872  EF43  F0D4         	goto	u26451
 52949   01A876  5029               	movf	(dtoa@w+1)^(0+1280),w,c
 52950   01A878  E108               	bnz	u26450
 52951   01A87A  0428               	decf	dtoa@w^(0+1280),w,c
 52952   01A87C  A0D8               	btfss	status,0,c
 52953   01A87E  EF43  F0D4         	goto	u26451
 52954   01A882  EF45  F0D4         	goto	u26450
 52955   01A886                     u26451:
 52956   01A886  EF4C  F0D4         	goto	l19873
 52957   01A88A                     u26450:
 52958   01A88A  B25C               	btfsc	_flags^(0+1280),1,c
 52959   01A88C  EF4A  F0D4         	goto	u26461
 52960   01A890  EF4C  F0D4         	goto	u26460
 52961   01A894                     u26461:
 52962   01A894  EFCF  F0D3         	goto	l19853
 52963   01A898                     u26460:
 52964   01A898                     l19873:
 52965                           
 52966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 52967   01A898  502A               	movf	dtoa@s^(0+1280),w,c
 52968   01A89A  B4D8               	btfsc	status,2,c
 52969   01A89C  EF52  F0D4         	goto	u26471
 52970   01A8A0  EF54  F0D4         	goto	u26470
 52971   01A8A4                     u26471:
 52972   01A8A4  EF5F  F0D4         	goto	l19879
 52973   01A8A8                     u26470:
 52974   01A8A8                     
 52975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 52976   01A8A8  062B               	decf	dtoa@i^(0+1280),f,c
 52977   01A8AA  A0D8               	btfss	status,0,c
 52978   01A8AC  062C               	decf	(dtoa@i+1)^(0+1280),f,c
 52979   01A8AE                     
 52980                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 52981   01A8AE  0E28               	movlw	low _dbuf
 52982   01A8B0  242B               	addwf	dtoa@i^(0+1280),w,c
 52983   01A8B2  6ED9               	movwf	fsr2l,c
 52984   01A8B4  0E08               	movlw	high _dbuf
 52985   01A8B6  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 52986   01A8B8  6EDA               	movwf	fsr2h,c
 52987   01A8BA  C52A  F4DF         	movff	dtoa@s,indf2
 52988   01A8BE                     l19879:
 52989                           
 52990                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 52991   01A8BE  C51E  F515         	movff	dtoa@fp,pad@fp
 52992   01A8C2  C51F  F516         	movff	dtoa@fp+1,pad@fp+1
 52993   01A8C6  0E28               	movlw	low _dbuf
 52994   01A8C8  242B               	addwf	dtoa@i^(0+1280),w,c
 52995   01A8CA  6E17               	movwf	pad@buf^(0+1280),c
 52996   01A8CC  0E08               	movlw	high _dbuf
 52997   01A8CE  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
 52998   01A8D0  6E18               	movwf	(pad@buf+1)^(0+1280),c
 52999   01A8D2  C528  F519         	movff	dtoa@w,pad@p
 53000   01A8D6  C529  F51A         	movff	dtoa@w+1,pad@p+1
 53001   01A8DA  EC1F  F0F6         	call	_pad	;wreg free
 53002   01A8DE  0012               	return		;funcret
 53003   01A8E0                     __end_of_dtoa:
 53004                           	callstack 0
 53005                           
 53006 ;; *************** function _pad *****************
 53007 ;; Defined at:
 53008 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 53009 ;; Parameters:    Size  Location     Type
 53010 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 53011 ;;		 -> sprintf@f(11), NULL(0), 
 53012 ;;  buf             2   22[COMRAM] PTR unsigned char 
 53013 ;;		 -> dbuf(80), 
 53014 ;;  p               2   24[COMRAM] int 
 53015 ;; Auto vars:     Size  Location     Type
 53016 ;;  i               2   27[COMRAM] int 
 53017 ;; Return value:  Size  Location     Type
 53018 ;;                  1    wreg      void 
 53019 ;; Registers used:
 53020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 53021 ;; Tracked objects:
 53022 ;;		On entry : 0/0
 53023 ;;		On exit  : 0/0
 53024 ;;		Unchanged: 0/0
 53025 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53029 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53030 ;;Total ram usage:        9 bytes
 53031 ;; Hardware stack levels used: 1
 53032 ;; Hardware stack levels required when called: 4
 53033 ;; This function calls:
 53034 ;;		_fputc
 53035 ;;		_fputs
 53036 ;; This function is called by:
 53037 ;;		_dtoa
 53038 ;;		_efgtoa
 53039 ;;		_xtoa
 53040 ;; This function uses a non-reentrant model
 53041 ;;
 53042                           
 53043                           	psect	text143
 53044   01EC3E                     __ptext143:
 53045                           	callstack 0
 53046   01EC3E                     _pad:
 53047                           	callstack 111
 53048   01EC3E                     
 53049                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 53050   01EC3E  A05C               	btfss	_flags^(0+1280),0,c
 53051   01EC40  EF24  F0F6         	goto	u26191
 53052   01EC44  EF26  F0F6         	goto	u26190
 53053   01EC48                     u26191:
 53054   01EC48  EF30  F0F6         	goto	l19775
 53055   01EC4C                     u26190:
 53056   01EC4C                     
 53057                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 53058   01EC4C  C517  F50E         	movff	pad@buf,fputs@s
 53059   01EC50  C518  F50F         	movff	pad@buf+1,fputs@s+1
 53060   01EC54  C515  F510         	movff	pad@fp,fputs@fp
 53061   01EC58  C516  F511         	movff	pad@fp+1,fputs@fp+1
 53062   01EC5C  ECFF  F0FD         	call	_fputs	;wreg free
 53063   01EC60                     l19775:
 53064                           
 53065                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 53066   01EC60  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
 53067   01EC62  EF37  F0F6         	goto	u26200
 53068   01EC66  EF35  F0F6         	goto	u26201
 53069   01EC6A                     u26201:
 53070   01EC6A  EF3B  F0F6         	goto	l3350
 53071   01EC6E                     u26200:
 53072   01EC6E                     
 53073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 53074   01EC6E  0E00               	movlw	0
 53075   01EC70  6E1A               	movwf	(pad@p+1)^(0+1280),c
 53076   01EC72  0E00               	movlw	0
 53077   01EC74  6E19               	movwf	pad@p^(0+1280),c
 53078   01EC76                     l3350:
 53079                           
 53080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 53081   01EC76  0E00               	movlw	0
 53082   01EC78  6E1D               	movwf	(pad@i+1)^(0+1280),c
 53083   01EC7A  0E00               	movlw	0
 53084   01EC7C  6E1C               	movwf	pad@i^(0+1280),c
 53085                           
 53086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 53087   01EC7E  EF4D  F0F6         	goto	l19783
 53088   01EC82                     l19779:
 53089                           
 53090                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 53091   01EC82  0E00               	movlw	0
 53092   01EC84  6E06               	movwf	(fputc@c+1)^(0+1280),c
 53093   01EC86  0E20               	movlw	32
 53094   01EC88  6E05               	movwf	fputc@c^(0+1280),c
 53095   01EC8A  C515  F507         	movff	pad@fp,fputc@fp
 53096   01EC8E  C516  F508         	movff	pad@fp+1,fputc@fp+1
 53097   01EC92  EC45  F0F1         	call	_fputc	;wreg free
 53098   01EC96                     
 53099                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 53100   01EC96  4A1C               	infsnz	pad@i^(0+1280),f,c
 53101   01EC98  2A1D               	incf	(pad@i+1)^(0+1280),f,c
 53102   01EC9A                     l19783:
 53103                           
 53104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 53105   01EC9A  5019               	movf	pad@p^(0+1280),w,c
 53106   01EC9C  5C1C               	subwf	pad@i^(0+1280),w,c
 53107   01EC9E  501D               	movf	(pad@i+1)^(0+1280),w,c
 53108   01ECA0  0A80               	xorlw	128
 53109   01ECA2  6E1B               	movwf	??_pad^(0+1280),c
 53110   01ECA4  501A               	movf	(pad@p+1)^(0+1280),w,c
 53111   01ECA6  0A80               	xorlw	128
 53112   01ECA8  581B               	subwfb	??_pad^(0+1280),w,c
 53113   01ECAA  A0D8               	btfss	status,0,c
 53114   01ECAC  EF5A  F0F6         	goto	u26211
 53115   01ECB0  EF5C  F0F6         	goto	u26210
 53116   01ECB4                     u26211:
 53117   01ECB4  EF41  F0F6         	goto	l19779
 53118   01ECB8                     u26210:
 53119   01ECB8                     
 53120                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 53121   01ECB8  B05C               	btfsc	_flags^(0+1280),0,c
 53122   01ECBA  EF61  F0F6         	goto	u26221
 53123   01ECBE  EF63  F0F6         	goto	u26220
 53124   01ECC2                     u26221:
 53125   01ECC2  EF6D  F0F6         	goto	l3355
 53126   01ECC6                     u26220:
 53127   01ECC6                     
 53128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 53129   01ECC6  C517  F50E         	movff	pad@buf,fputs@s
 53130   01ECCA  C518  F50F         	movff	pad@buf+1,fputs@s+1
 53131   01ECCE  C515  F510         	movff	pad@fp,fputs@fp
 53132   01ECD2  C516  F511         	movff	pad@fp+1,fputs@fp+1
 53133   01ECD6  ECFF  F0FD         	call	_fputs	;wreg free
 53134   01ECDA                     l3355:
 53135   01ECDA  0012               	return		;funcret
 53136   01ECDC                     __end_of_pad:
 53137                           	callstack 0
 53138                           
 53139 ;; *************** function _fputs *****************
 53140 ;; Defined at:
 53141 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 53142 ;; Parameters:    Size  Location     Type
 53143 ;;  s               2   13[COMRAM] PTR const unsigned char 
 53144 ;;		 -> dbuf(80), 
 53145 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 53146 ;;		 -> sprintf@f(11), NULL(0), 
 53147 ;; Auto vars:     Size  Location     Type
 53148 ;;  i               2   18[COMRAM] int 
 53149 ;;  c               1   17[COMRAM] unsigned char 
 53150 ;; Return value:  Size  Location     Type
 53151 ;;                  2   13[COMRAM] int 
 53152 ;; Registers used:
 53153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 53154 ;; Tracked objects:
 53155 ;;		On entry : 0/0
 53156 ;;		On exit  : 0/0
 53157 ;;		Unchanged: 0/0
 53158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53160 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53162 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53163 ;;Total ram usage:        7 bytes
 53164 ;; Hardware stack levels used: 1
 53165 ;; Hardware stack levels required when called: 3
 53166 ;; This function calls:
 53167 ;;		_fputc
 53168 ;; This function is called by:
 53169 ;;		_pad
 53170 ;; This function uses a non-reentrant model
 53171 ;;
 53172                           
 53173                           	psect	text144
 53174   01FBFE                     __ptext144:
 53175                           	callstack 0
 53176   01FBFE                     _fputs:
 53177                           	callstack 111
 53178   01FBFE  0E00               	movlw	0
 53179   01FC00  6E14               	movwf	(fputs@i+1)^(0+1280),c
 53180   01FC02  0E00               	movlw	0
 53181   01FC04  6E13               	movwf	fputs@i^(0+1280),c
 53182   01FC06  EF10  F0FE         	goto	l19295
 53183   01FC0A                     l19291:
 53184   01FC0A  C512  F505         	movff	fputs@c,fputc@c
 53185   01FC0E  6A06               	clrf	(fputc@c+1)^(0+1280),c
 53186   01FC10  C510  F507         	movff	fputs@fp,fputc@fp
 53187   01FC14  C511  F508         	movff	fputs@fp+1,fputc@fp+1
 53188   01FC18  EC45  F0F1         	call	_fputc	;wreg free
 53189   01FC1C  4A13               	infsnz	fputs@i^(0+1280),f,c
 53190   01FC1E  2A14               	incf	(fputs@i+1)^(0+1280),f,c
 53191   01FC20                     l19295:
 53192   01FC20  5013               	movf	fputs@i^(0+1280),w,c
 53193   01FC22  240E               	addwf	fputs@s^(0+1280),w,c
 53194   01FC24  6ED9               	movwf	fsr2l,c
 53195   01FC26  5014               	movf	(fputs@i+1)^(0+1280),w,c
 53196   01FC28  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
 53197   01FC2A  6EDA               	movwf	fsr2h,c
 53198   01FC2C  50DF               	movf	indf2,w,c
 53199   01FC2E  6E12               	movwf	fputs@c^(0+1280),c
 53200   01FC30  5012               	movf	fputs@c^(0+1280),w,c
 53201   01FC32  A4D8               	btfss	status,2,c
 53202   01FC34  EF1E  F0FE         	goto	u25401
 53203   01FC38  EF20  F0FE         	goto	u25400
 53204   01FC3C                     u25401:
 53205   01FC3C  EF05  F0FE         	goto	l19291
 53206   01FC40                     u25400:
 53207   01FC40  0012               	return		;funcret
 53208   01FC42                     __end_of_fputs:
 53209                           	callstack 0
 53210                           
 53211 ;; *************** function _fputc *****************
 53212 ;; Defined at:
 53213 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 53214 ;; Parameters:    Size  Location     Type
 53215 ;;  c               2    4[COMRAM] int 
 53216 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 53217 ;;		 -> sprintf@f(11), NULL(0), 
 53218 ;; Auto vars:     Size  Location     Type
 53219 ;;		None
 53220 ;; Return value:  Size  Location     Type
 53221 ;;                  2    4[COMRAM] int 
 53222 ;; Registers used:
 53223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 53224 ;; Tracked objects:
 53225 ;;		On entry : 0/0
 53226 ;;		On exit  : 0/0
 53227 ;;		Unchanged: 0/0
 53228 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53231 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53233 ;;Total ram usage:        9 bytes
 53234 ;; Hardware stack levels used: 1
 53235 ;; Hardware stack levels required when called: 2
 53236 ;; This function calls:
 53237 ;;		_putch
 53238 ;; This function is called by:
 53239 ;;		_pad
 53240 ;;		_stoa
 53241 ;;		_vfpfcnvrt
 53242 ;;		_fputs
 53243 ;; This function uses a non-reentrant model
 53244 ;;
 53245                           
 53246                           	psect	text145
 53247   01E28A                     __ptext145:
 53248                           	callstack 0
 53249   01E28A                     _fputc:
 53250                           	callstack 111
 53251   01E28A  5007               	movf	fputc@fp^(0+1280),w,c
 53252   01E28C  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 53253   01E28E  B4D8               	btfsc	status,2,c
 53254   01E290  EF4C  F0F1         	goto	u24971
 53255   01E294  EF4E  F0F1         	goto	u24970
 53256   01E298                     u24971:
 53257   01E298  EF57  F0F1         	goto	l19085
 53258   01E29C                     u24970:
 53259   01E29C  5007               	movf	fputc@fp^(0+1280),w,c
 53260   01E29E  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
 53261   01E2A0  A4D8               	btfss	status,2,c
 53262   01E2A2  EF55  F0F1         	goto	u24981
 53263   01E2A6  EF57  F0F1         	goto	u24980
 53264   01E2AA                     u24981:
 53265   01E2AA  EF5C  F0F1         	goto	l19087
 53266   01E2AE                     u24980:
 53267   01E2AE                     l19085:
 53268   01E2AE  5005               	movf	fputc@c^(0+1280),w,c
 53269   01E2B0  EC07  F001         	call	_putch
 53270   01E2B4  EFA9  F0F1         	goto	l3587
 53271   01E2B8                     l19087:
 53272   01E2B8  EE20 F009          	lfsr	2,9
 53273   01E2BC  5007               	movf	fputc@fp^(0+1280),w,c
 53274   01E2BE  26D9               	addwf	fsr2l,f,c
 53275   01E2C0  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 53276   01E2C2  22DA               	addwfc	fsr2h,f,c
 53277   01E2C4  50DE               	movf	postinc2,w,c
 53278   01E2C6  10DE               	iorwf	postinc2,w,c
 53279   01E2C8  B4D8               	btfsc	status,2,c
 53280   01E2CA  EF69  F0F1         	goto	u24991
 53281   01E2CE  EF6B  F0F1         	goto	u24990
 53282   01E2D2                     u24991:
 53283   01E2D2  EF86  F0F1         	goto	l19091
 53284   01E2D6                     u24990:
 53285   01E2D6  EE20 F009          	lfsr	2,9
 53286   01E2DA  5007               	movf	fputc@fp^(0+1280),w,c
 53287   01E2DC  26D9               	addwf	fsr2l,f,c
 53288   01E2DE  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 53289   01E2E0  22DA               	addwfc	fsr2h,f,c
 53290   01E2E2  EE10 F002          	lfsr	1,2
 53291   01E2E6  5007               	movf	fputc@fp^(0+1280),w,c
 53292   01E2E8  26E1               	addwf	fsr1l,f,c
 53293   01E2EA  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 53294   01E2EC  22E2               	addwfc	fsr1h,f,c
 53295   01E2EE  50DE               	movf	postinc2,w,c
 53296   01E2F0  5CE6               	subwf	postinc1,w,c
 53297   01E2F2  50E6               	movf	postinc1,w,c
 53298   01E2F4  0A80               	xorlw	128
 53299   01E2F6  6E0D               	movwf	(??_fputc+4)^(0+1280),c
 53300   01E2F8  50DE               	movf	postinc2,w,c
 53301   01E2FA  0A80               	xorlw	128
 53302   01E2FC  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
 53303   01E2FE  B0D8               	btfsc	status,0,c
 53304   01E300  EF84  F0F1         	goto	u25001
 53305   01E304  EF86  F0F1         	goto	u25000
 53306   01E308                     u25001:
 53307   01E308  EFA9  F0F1         	goto	l3587
 53308   01E30C                     u25000:
 53309   01E30C                     l19091:
 53310   01E30C  EE20 F002          	lfsr	2,2
 53311   01E310  5007               	movf	fputc@fp^(0+1280),w,c
 53312   01E312  26D9               	addwf	fsr2l,f,c
 53313   01E314  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 53314   01E316  22DA               	addwfc	fsr2h,f,c
 53315   01E318  C4DE F509          	movff	postinc2,??_fputc
 53316   01E31C  C4DD F50A          	movff	postdec2,??_fputc+1
 53317   01E320  C507  F4D9         	movff	fputc@fp,fsr2l
 53318   01E324  C508  F4DA         	movff	fputc@fp+1,fsr2h
 53319   01E328  C4DE F50B          	movff	postinc2,??_fputc+2
 53320   01E32C  C4DD F50C          	movff	postdec2,??_fputc+3
 53321   01E330  5009               	movf	??_fputc^(0+1280),w,c
 53322   01E332  240B               	addwf	(??_fputc+2)^(0+1280),w,c
 53323   01E334  6ED9               	movwf	fsr2l,c
 53324   01E336  500A               	movf	(??_fputc+1)^(0+1280),w,c
 53325   01E338  200C               	addwfc	(??_fputc+3)^(0+1280),w,c
 53326   01E33A  6EDA               	movwf	fsr2h,c
 53327   01E33C  C505  F4DF         	movff	fputc@c,indf2
 53328   01E340  EE20 F002          	lfsr	2,2
 53329   01E344  5007               	movf	fputc@fp^(0+1280),w,c
 53330   01E346  26D9               	addwf	fsr2l,f,c
 53331   01E348  5008               	movf	(fputc@fp+1)^(0+1280),w,c
 53332   01E34A  22DA               	addwfc	fsr2h,f,c
 53333   01E34C  2ADE               	incf	postinc2,f,c
 53334   01E34E  0E00               	movlw	0
 53335   01E350  22DD               	addwfc	postdec2,f,c
 53336   01E352                     l3587:
 53337   01E352  0012               	return		;funcret
 53338   01E354                     __end_of_fputc:
 53339                           	callstack 0
 53340                           
 53341 ;; *************** function _putch *****************
 53342 ;; Defined at:
 53343 ;;		line 132 in file "../src/boards/w65_cmn.c"
 53344 ;; Parameters:    Size  Location     Type
 53345 ;;  c               1    wreg     unsigned char 
 53346 ;; Auto vars:     Size  Location     Type
 53347 ;;  c               1    3[COMRAM] unsigned char 
 53348 ;; Return value:  Size  Location     Type
 53349 ;;                  1    wreg      void 
 53350 ;; Registers used:
 53351 ;;		wreg
 53352 ;; Tracked objects:
 53353 ;;		On entry : 0/0
 53354 ;;		On exit  : 0/0
 53355 ;;		Unchanged: 0/0
 53356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53361 ;;Total ram usage:        1 bytes
 53362 ;; Hardware stack levels used: 1
 53363 ;; Hardware stack levels required when called: 1
 53364 ;; This function calls:
 53365 ;;		Nothing
 53366 ;; This function is called by:
 53367 ;;		_unimon_console
 53368 ;;		_bus_master_operation
 53369 ;;		_get_line
 53370 ;;		_fputc
 53371 ;; This function uses a non-reentrant model
 53372 ;;
 53373                           
 53374                           	psect	text146
 53375   00020E                     __ptext146:
 53376                           	callstack 0
 53377   00020E                     _putch:
 53378                           	callstack 111
 53379                           
 53380                           ;incstack = 0
 53381                           ;putch@c stored from wreg
 53382   00020E  6E04               	movwf	putch@c^(0+1280),c
 53383   000210                     l2115:
 53384   000210  A2B7               	btfss	1207,1,c	;volatile
 53385   000212  EF0D  F001         	goto	u24961
 53386   000216  EF0F  F001         	goto	u24960
 53387   00021A                     u24961:
 53388   00021A  EF08  F001         	goto	l2115
 53389   00021E                     u24960:
 53390   00021E                     
 53391                           ;../src/boards/w65_cmn.c: 134:     U3TXB = c;
 53392   00021E  C504  F2C9         	movff	putch@c,713	;volatile
 53393   000222  0012               	return		;funcret
 53394   000224                     __end_of_putch:
 53395                           	callstack 0
 53396                           
 53397 ;; *************** function _abs *****************
 53398 ;; Defined at:
 53399 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 53400 ;; Parameters:    Size  Location     Type
 53401 ;;  a               2   13[COMRAM] int 
 53402 ;; Auto vars:     Size  Location     Type
 53403 ;;		None
 53404 ;; Return value:  Size  Location     Type
 53405 ;;                  2   13[COMRAM] int 
 53406 ;; Registers used:
 53407 ;;		wreg, status,2, status,0
 53408 ;; Tracked objects:
 53409 ;;		On entry : 0/0
 53410 ;;		On exit  : 0/0
 53411 ;;		Unchanged: 0/0
 53412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53417 ;;Total ram usage:        4 bytes
 53418 ;; Hardware stack levels used: 1
 53419 ;; Hardware stack levels required when called: 1
 53420 ;; This function calls:
 53421 ;;		Nothing
 53422 ;; This function is called by:
 53423 ;;		_dtoa
 53424 ;; This function uses a non-reentrant model
 53425 ;;
 53426                           
 53427                           	psect	text147
 53428   01FED0                     __ptext147:
 53429                           	callstack 0
 53430   01FED0                     _abs:
 53431                           	callstack 114
 53432   01FED0  BE0F               	btfsc	(abs@a+1)^(0+1280),7,c
 53433   01FED2  EF6D  F0FF         	goto	u26231
 53434   01FED6  EF6F  F0FF         	goto	u26230
 53435   01FEDA                     u26231:
 53436   01FEDA  EF75  F0FF         	goto	l3552
 53437   01FEDE                     u26230:
 53438   01FEDE  C50E  F50E         	movff	abs@a,?_abs
 53439   01FEE2  C50F  F50F         	movff	abs@a+1,?_abs+1
 53440   01FEE6  EF81  F0FF         	goto	l3555
 53441   01FEEA                     l3552:
 53442   01FEEA  C50E  F510         	movff	abs@a,??_abs
 53443   01FEEE  C50F  F511         	movff	abs@a+1,??_abs+1
 53444   01FEF2  1E10               	comf	??_abs^(0+1280),f,c
 53445   01FEF4  1E11               	comf	(??_abs+1)^(0+1280),f,c
 53446   01FEF6  4A10               	infsnz	??_abs^(0+1280),f,c
 53447   01FEF8  2A11               	incf	(??_abs+1)^(0+1280),f,c
 53448   01FEFA  C510  F50E         	movff	??_abs,?_abs
 53449   01FEFE  C511  F50F         	movff	??_abs+1,?_abs+1
 53450   01FF02                     l3555:
 53451   01FF02  0012               	return		;funcret
 53452   01FF04                     __end_of_abs:
 53453                           	callstack 0
 53454                           
 53455 ;; *************** function ___almod *****************
 53456 ;; Defined at:
 53457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\almod.c"
 53458 ;; Parameters:    Size  Location     Type
 53459 ;;  dividend        4    3[COMRAM] long 
 53460 ;;  divisor         4    7[COMRAM] long 
 53461 ;; Auto vars:     Size  Location     Type
 53462 ;;  sign            1   12[COMRAM] unsigned char 
 53463 ;;  counter         1   11[COMRAM] unsigned char 
 53464 ;; Return value:  Size  Location     Type
 53465 ;;                  4    3[COMRAM] long 
 53466 ;; Registers used:
 53467 ;;		wreg, status,2, status,0
 53468 ;; Tracked objects:
 53469 ;;		On entry : 0/0
 53470 ;;		On exit  : 0/0
 53471 ;;		Unchanged: 0/0
 53472 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53476 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53477 ;;Total ram usage:       10 bytes
 53478 ;; Hardware stack levels used: 1
 53479 ;; Hardware stack levels required when called: 1
 53480 ;; This function calls:
 53481 ;;		Nothing
 53482 ;; This function is called by:
 53483 ;;		_dtoa
 53484 ;; This function uses a non-reentrant model
 53485 ;;
 53486                           
 53487                           	psect	text148
 53488   01DA0C                     __ptext148:
 53489                           	callstack 0
 53490   01DA0C                     ___almod:
 53491                           	callstack 114
 53492   01DA0C  6A0D               	clrf	___almod@sign^(0+1280),c
 53493   01DA0E  BE07               	btfsc	(___almod@dividend+3)^(0+1280),7,c
 53494   01DA10  EF0E  F0ED         	goto	u25550
 53495   01DA14  EF0C  F0ED         	goto	u25551
 53496   01DA18                     u25551:
 53497   01DA18  EF18  F0ED         	goto	l19383
 53498   01DA1C                     u25550:
 53499   01DA1C  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 53500   01DA1E  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 53501   01DA20  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 53502   01DA22  6C04               	negf	___almod@dividend^(0+1280),c
 53503   01DA24  0E00               	movlw	0
 53504   01DA26  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 53505   01DA28  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 53506   01DA2A  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 53507   01DA2C  0E01               	movlw	1
 53508   01DA2E  6E0D               	movwf	___almod@sign^(0+1280),c
 53509   01DA30                     l19383:
 53510   01DA30  BE0B               	btfsc	(___almod@divisor+3)^(0+1280),7,c
 53511   01DA32  EF1F  F0ED         	goto	u25560
 53512   01DA36  EF1D  F0ED         	goto	u25561
 53513   01DA3A                     u25561:
 53514   01DA3A  EF27  F0ED         	goto	l19387
 53515   01DA3E                     u25560:
 53516   01DA3E  1E0B               	comf	(___almod@divisor+3)^(0+1280),f,c
 53517   01DA40  1E0A               	comf	(___almod@divisor+2)^(0+1280),f,c
 53518   01DA42  1E09               	comf	(___almod@divisor+1)^(0+1280),f,c
 53519   01DA44  6C08               	negf	___almod@divisor^(0+1280),c
 53520   01DA46  0E00               	movlw	0
 53521   01DA48  2209               	addwfc	(___almod@divisor+1)^(0+1280),f,c
 53522   01DA4A  220A               	addwfc	(___almod@divisor+2)^(0+1280),f,c
 53523   01DA4C  220B               	addwfc	(___almod@divisor+3)^(0+1280),f,c
 53524   01DA4E                     l19387:
 53525   01DA4E  5008               	movf	___almod@divisor^(0+1280),w,c
 53526   01DA50  1009               	iorwf	(___almod@divisor+1)^(0+1280),w,c
 53527   01DA52  100A               	iorwf	(___almod@divisor+2)^(0+1280),w,c
 53528   01DA54  100B               	iorwf	(___almod@divisor+3)^(0+1280),w,c
 53529   01DA56  B4D8               	btfsc	status,2,c
 53530   01DA58  EF30  F0ED         	goto	u25571
 53531   01DA5C  EF32  F0ED         	goto	u25570
 53532   01DA60                     u25571:
 53533   01DA60  EF62  F0ED         	goto	l19403
 53534   01DA64                     u25570:
 53535   01DA64  0E01               	movlw	1
 53536   01DA66  6E0C               	movwf	___almod@counter^(0+1280),c
 53537   01DA68  EF3C  F0ED         	goto	l19393
 53538   01DA6C                     l19391:
 53539   01DA6C  90D8               	bcf	status,0,c
 53540   01DA6E  3608               	rlcf	___almod@divisor^(0+1280),f,c
 53541   01DA70  3609               	rlcf	(___almod@divisor+1)^(0+1280),f,c
 53542   01DA72  360A               	rlcf	(___almod@divisor+2)^(0+1280),f,c
 53543   01DA74  360B               	rlcf	(___almod@divisor+3)^(0+1280),f,c
 53544   01DA76  2A0C               	incf	___almod@counter^(0+1280),f,c
 53545   01DA78                     l19393:
 53546   01DA78  AE0B               	btfss	(___almod@divisor+3)^(0+1280),7,c
 53547   01DA7A  EF41  F0ED         	goto	u25581
 53548   01DA7E  EF43  F0ED         	goto	u25580
 53549   01DA82                     u25581:
 53550   01DA82  EF36  F0ED         	goto	l19391
 53551   01DA86                     u25580:
 53552   01DA86                     l19395:
 53553   01DA86  5008               	movf	___almod@divisor^(0+1280),w,c
 53554   01DA88  5C04               	subwf	___almod@dividend^(0+1280),w,c
 53555   01DA8A  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 53556   01DA8C  5805               	subwfb	(___almod@dividend+1)^(0+1280),w,c
 53557   01DA8E  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 53558   01DA90  5806               	subwfb	(___almod@dividend+2)^(0+1280),w,c
 53559   01DA92  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 53560   01DA94  5807               	subwfb	(___almod@dividend+3)^(0+1280),w,c
 53561   01DA96  A0D8               	btfss	status,0,c
 53562   01DA98  EF50  F0ED         	goto	u25591
 53563   01DA9C  EF52  F0ED         	goto	u25590
 53564   01DAA0                     u25591:
 53565   01DAA0  EF5A  F0ED         	goto	l19399
 53566   01DAA4                     u25590:
 53567   01DAA4  5008               	movf	___almod@divisor^(0+1280),w,c
 53568   01DAA6  5E04               	subwf	___almod@dividend^(0+1280),f,c
 53569   01DAA8  5009               	movf	(___almod@divisor+1)^(0+1280),w,c
 53570   01DAAA  5A05               	subwfb	(___almod@dividend+1)^(0+1280),f,c
 53571   01DAAC  500A               	movf	(___almod@divisor+2)^(0+1280),w,c
 53572   01DAAE  5A06               	subwfb	(___almod@dividend+2)^(0+1280),f,c
 53573   01DAB0  500B               	movf	(___almod@divisor+3)^(0+1280),w,c
 53574   01DAB2  5A07               	subwfb	(___almod@dividend+3)^(0+1280),f,c
 53575   01DAB4                     l19399:
 53576   01DAB4  90D8               	bcf	status,0,c
 53577   01DAB6  320B               	rrcf	(___almod@divisor+3)^(0+1280),f,c
 53578   01DAB8  320A               	rrcf	(___almod@divisor+2)^(0+1280),f,c
 53579   01DABA  3209               	rrcf	(___almod@divisor+1)^(0+1280),f,c
 53580   01DABC  3208               	rrcf	___almod@divisor^(0+1280),f,c
 53581   01DABE  2E0C               	decfsz	___almod@counter^(0+1280),f,c
 53582   01DAC0  EF43  F0ED         	goto	l19395
 53583   01DAC4                     l19403:
 53584   01DAC4  500D               	movf	___almod@sign^(0+1280),w,c
 53585   01DAC6  B4D8               	btfsc	status,2,c
 53586   01DAC8  EF68  F0ED         	goto	u25601
 53587   01DACC  EF6A  F0ED         	goto	u25600
 53588   01DAD0                     u25601:
 53589   01DAD0  EF72  F0ED         	goto	l19407
 53590   01DAD4                     u25600:
 53591   01DAD4  1E07               	comf	(___almod@dividend+3)^(0+1280),f,c
 53592   01DAD6  1E06               	comf	(___almod@dividend+2)^(0+1280),f,c
 53593   01DAD8  1E05               	comf	(___almod@dividend+1)^(0+1280),f,c
 53594   01DADA  6C04               	negf	___almod@dividend^(0+1280),c
 53595   01DADC  0E00               	movlw	0
 53596   01DADE  2205               	addwfc	(___almod@dividend+1)^(0+1280),f,c
 53597   01DAE0  2206               	addwfc	(___almod@dividend+2)^(0+1280),f,c
 53598   01DAE2  2207               	addwfc	(___almod@dividend+3)^(0+1280),f,c
 53599   01DAE4                     l19407:
 53600   01DAE4  C504  F504         	movff	___almod@dividend,?___almod
 53601   01DAE8  C505  F505         	movff	___almod@dividend+1,?___almod+1
 53602   01DAEC  C506  F506         	movff	___almod@dividend+2,?___almod+2
 53603   01DAF0  C507  F507         	movff	___almod@dividend+3,?___almod+3
 53604   01DAF4  0012               	return		;funcret
 53605   01DAF6                     __end_of___almod:
 53606                           	callstack 0
 53607                           
 53608 ;; *************** function ___aldiv *****************
 53609 ;; Defined at:
 53610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
 53611 ;; Parameters:    Size  Location     Type
 53612 ;;  dividend        4    3[COMRAM] long 
 53613 ;;  divisor         4    7[COMRAM] long 
 53614 ;; Auto vars:     Size  Location     Type
 53615 ;;  quotient        4   13[COMRAM] long 
 53616 ;;  sign            1   12[COMRAM] unsigned char 
 53617 ;;  counter         1   11[COMRAM] unsigned char 
 53618 ;; Return value:  Size  Location     Type
 53619 ;;                  4    3[COMRAM] long 
 53620 ;; Registers used:
 53621 ;;		wreg, status,2, status,0
 53622 ;; Tracked objects:
 53623 ;;		On entry : 0/0
 53624 ;;		On exit  : 0/0
 53625 ;;		Unchanged: 0/0
 53626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53627 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53628 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53630 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53631 ;;Total ram usage:       14 bytes
 53632 ;; Hardware stack levels used: 1
 53633 ;; Hardware stack levels required when called: 1
 53634 ;; This function calls:
 53635 ;;		Nothing
 53636 ;; This function is called by:
 53637 ;;		_dtoa
 53638 ;; This function uses a non-reentrant model
 53639 ;;
 53640                           
 53641                           	psect	text149
 53642   01CF2E                     __ptext149:
 53643                           	callstack 0
 53644   01CF2E                     ___aldiv:
 53645                           	callstack 114
 53646   01CF2E  6A0D               	clrf	___aldiv@sign^(0+1280),c
 53647   01CF30  BE0B               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
 53648   01CF32  EF9F  F0E7         	goto	u25490
 53649   01CF36  EF9D  F0E7         	goto	u25491
 53650   01CF3A                     u25491:
 53651   01CF3A  EFA9  F0E7         	goto	l19339
 53652   01CF3E                     u25490:
 53653   01CF3E  1E0B               	comf	(___aldiv@divisor+3)^(0+1280),f,c
 53654   01CF40  1E0A               	comf	(___aldiv@divisor+2)^(0+1280),f,c
 53655   01CF42  1E09               	comf	(___aldiv@divisor+1)^(0+1280),f,c
 53656   01CF44  6C08               	negf	___aldiv@divisor^(0+1280),c
 53657   01CF46  0E00               	movlw	0
 53658   01CF48  2209               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
 53659   01CF4A  220A               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
 53660   01CF4C  220B               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
 53661   01CF4E  0E01               	movlw	1
 53662   01CF50  6E0D               	movwf	___aldiv@sign^(0+1280),c
 53663   01CF52                     l19339:
 53664   01CF52  BE07               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
 53665   01CF54  EFB0  F0E7         	goto	u25500
 53666   01CF58  EFAE  F0E7         	goto	u25501
 53667   01CF5C                     u25501:
 53668   01CF5C  EFBA  F0E7         	goto	l19345
 53669   01CF60                     u25500:
 53670   01CF60  1E07               	comf	(___aldiv@dividend+3)^(0+1280),f,c
 53671   01CF62  1E06               	comf	(___aldiv@dividend+2)^(0+1280),f,c
 53672   01CF64  1E05               	comf	(___aldiv@dividend+1)^(0+1280),f,c
 53673   01CF66  6C04               	negf	___aldiv@dividend^(0+1280),c
 53674   01CF68  0E00               	movlw	0
 53675   01CF6A  2205               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
 53676   01CF6C  2206               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
 53677   01CF6E  2207               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
 53678   01CF70  0E01               	movlw	1
 53679   01CF72  1A0D               	xorwf	___aldiv@sign^(0+1280),f,c
 53680   01CF74                     l19345:
 53681   01CF74  0E00               	movlw	0
 53682   01CF76  6E0E               	movwf	___aldiv@quotient^(0+1280),c
 53683   01CF78  0E00               	movlw	0
 53684   01CF7A  6E0F               	movwf	(___aldiv@quotient+1)^(0+1280),c
 53685   01CF7C  0E00               	movlw	0
 53686   01CF7E  6E10               	movwf	(___aldiv@quotient+2)^(0+1280),c
 53687   01CF80  0E00               	movlw	0
 53688   01CF82  6E11               	movwf	(___aldiv@quotient+3)^(0+1280),c
 53689   01CF84  5008               	movf	___aldiv@divisor^(0+1280),w,c
 53690   01CF86  1009               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
 53691   01CF88  100A               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
 53692   01CF8A  100B               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
 53693   01CF8C  B4D8               	btfsc	status,2,c
 53694   01CF8E  EFCB  F0E7         	goto	u25511
 53695   01CF92  EFCD  F0E7         	goto	u25510
 53696   01CF96                     u25511:
 53697   01CF96  EF03  F0E8         	goto	l19367
 53698   01CF9A                     u25510:
 53699   01CF9A  0E01               	movlw	1
 53700   01CF9C  6E0C               	movwf	___aldiv@counter^(0+1280),c
 53701   01CF9E  EFD7  F0E7         	goto	l19353
 53702   01CFA2                     l19351:
 53703   01CFA2  90D8               	bcf	status,0,c
 53704   01CFA4  3608               	rlcf	___aldiv@divisor^(0+1280),f,c
 53705   01CFA6  3609               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
 53706   01CFA8  360A               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
 53707   01CFAA  360B               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
 53708   01CFAC  2A0C               	incf	___aldiv@counter^(0+1280),f,c
 53709   01CFAE                     l19353:
 53710   01CFAE  AE0B               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
 53711   01CFB0  EFDC  F0E7         	goto	u25521
 53712   01CFB4  EFDE  F0E7         	goto	u25520
 53713   01CFB8                     u25521:
 53714   01CFB8  EFD1  F0E7         	goto	l19351
 53715   01CFBC                     u25520:
 53716   01CFBC                     l19355:
 53717   01CFBC  90D8               	bcf	status,0,c
 53718   01CFBE  360E               	rlcf	___aldiv@quotient^(0+1280),f,c
 53719   01CFC0  360F               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
 53720   01CFC2  3610               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
 53721   01CFC4  3611               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
 53722   01CFC6  5008               	movf	___aldiv@divisor^(0+1280),w,c
 53723   01CFC8  5C04               	subwf	___aldiv@dividend^(0+1280),w,c
 53724   01CFCA  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 53725   01CFCC  5805               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
 53726   01CFCE  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 53727   01CFD0  5806               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
 53728   01CFD2  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 53729   01CFD4  5807               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
 53730   01CFD6  A0D8               	btfss	status,0,c
 53731   01CFD8  EFF0  F0E7         	goto	u25531
 53732   01CFDC  EFF2  F0E7         	goto	u25530
 53733   01CFE0                     u25531:
 53734   01CFE0  EFFB  F0E7         	goto	l19363
 53735   01CFE4                     u25530:
 53736   01CFE4  5008               	movf	___aldiv@divisor^(0+1280),w,c
 53737   01CFE6  5E04               	subwf	___aldiv@dividend^(0+1280),f,c
 53738   01CFE8  5009               	movf	(___aldiv@divisor+1)^(0+1280),w,c
 53739   01CFEA  5A05               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
 53740   01CFEC  500A               	movf	(___aldiv@divisor+2)^(0+1280),w,c
 53741   01CFEE  5A06               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
 53742   01CFF0  500B               	movf	(___aldiv@divisor+3)^(0+1280),w,c
 53743   01CFF2  5A07               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
 53744   01CFF4  800E               	bsf	___aldiv@quotient^(0+1280),0,c
 53745   01CFF6                     l19363:
 53746   01CFF6  90D8               	bcf	status,0,c
 53747   01CFF8  320B               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
 53748   01CFFA  320A               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
 53749   01CFFC  3209               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
 53750   01CFFE  3208               	rrcf	___aldiv@divisor^(0+1280),f,c
 53751   01D000  2E0C               	decfsz	___aldiv@counter^(0+1280),f,c
 53752   01D002  EFDE  F0E7         	goto	l19355
 53753   01D006                     l19367:
 53754   01D006  500D               	movf	___aldiv@sign^(0+1280),w,c
 53755   01D008  B4D8               	btfsc	status,2,c
 53756   01D00A  EF09  F0E8         	goto	u25541
 53757   01D00E  EF0B  F0E8         	goto	u25540
 53758   01D012                     u25541:
 53759   01D012  EF13  F0E8         	goto	l19371
 53760   01D016                     u25540:
 53761   01D016  1E11               	comf	(___aldiv@quotient+3)^(0+1280),f,c
 53762   01D018  1E10               	comf	(___aldiv@quotient+2)^(0+1280),f,c
 53763   01D01A  1E0F               	comf	(___aldiv@quotient+1)^(0+1280),f,c
 53764   01D01C  6C0E               	negf	___aldiv@quotient^(0+1280),c
 53765   01D01E  0E00               	movlw	0
 53766   01D020  220F               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
 53767   01D022  2210               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
 53768   01D024  2211               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
 53769   01D026                     l19371:
 53770   01D026  C50E  F504         	movff	___aldiv@quotient,?___aldiv
 53771   01D02A  C50F  F505         	movff	___aldiv@quotient+1,?___aldiv+1
 53772   01D02E  C510  F506         	movff	___aldiv@quotient+2,?___aldiv+2
 53773   01D032  C511  F507         	movff	___aldiv@quotient+3,?___aldiv+3
 53774   01D036  0012               	return		;funcret
 53775   01D038                     __end_of___aldiv:
 53776                           	callstack 0
 53777                           
 53778 ;; *************** function ___SDCard_crc16 *****************
 53779 ;; Defined at:
 53780 ;;		line 352 in file "../src/boards/../../drivers/SDCard.c"
 53781 ;; Parameters:    Size  Location     Type
 53782 ;;  crc             2    3[COMRAM] unsigned short 
 53783 ;;  buf             2    5[COMRAM] PTR const void 
 53784 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 53785 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), cin_file(512), in_fl(546), 
 53786 ;;		 -> fs(564), rom_fl(546), tmp_buf(512), disk_buf(128), 
 53787 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), pb$fp(2), 
 53788 ;;		 -> f_gets@s(4), NULL(0), disk_initialize@buf(128), 
 53789 ;;  count           2    7[COMRAM] unsigned int 
 53790 ;; Auto vars:     Size  Location     Type
 53791 ;;  p               2   14[COMRAM] PTR unsigned char 
 53792 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 53793 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), cin_file(512), in_fl(546), 
 53794 ;;		 -> fs(564), rom_fl(546), tmp_buf(512), disk_buf(128), 
 53795 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), pb$fp(2), 
 53796 ;;		 -> f_gets@s(4), NULL(0), disk_initialize@buf(128), 
 53797 ;;  endp            2   12[COMRAM] PTR unsigned char 
 53798 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 53799 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), cin_file(512), in_fl(546), 
 53800 ;;		 -> fs(564), rom_fl(546), tmp_buf(512), disk_buf(128), 
 53801 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), pb$fp(2), 
 53802 ;;		 -> f_gets@s(4), NULL(0), disk_initialize@buf(128), 
 53803 ;; Return value:  Size  Location     Type
 53804 ;;                  2    3[COMRAM] unsigned short 
 53805 ;; Registers used:
 53806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53807 ;; Tracked objects:
 53808 ;;		On entry : 0/0
 53809 ;;		On exit  : 0/0
 53810 ;;		Unchanged: 0/0
 53811 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53812 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53814 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53815 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53816 ;;Total ram usage:       13 bytes
 53817 ;; Hardware stack levels used: 1
 53818 ;; Hardware stack levels required when called: 1
 53819 ;; This function calls:
 53820 ;;		Nothing
 53821 ;; This function is called by:
 53822 ;;		_SDCard_read512
 53823 ;;		_SDCard_write512
 53824 ;; This function uses a non-reentrant model
 53825 ;;
 53826                           
 53827                           	psect	text150
 53828   01E354                     __ptext150:
 53829                           	callstack 0
 53830   01E354                     ___SDCard_crc16:
 53831                           	callstack 113
 53832   01E354                     
 53833                           ;../src/boards/../../drivers/SDCard.c: 352: uint16_t __SDCard_crc16(uint16_t crc, const 
      +                          void *buf, unsigned int count);../src/boards/../../drivers/SDCard.c: 353: {;../src/board
      +                          s/../../drivers/SDCard.c: 354:     uint8_t *p = (uint8_t*)buf;
 53834   01E354  C506  F50F         	movff	___SDCard_crc16@buf,___SDCard_crc16@p
 53835   01E358  C507  F510         	movff	___SDCard_crc16@buf+1,___SDCard_crc16@p+1
 53836                           
 53837                           ;../src/boards/../../drivers/SDCard.c: 355:     uint8_t *endp = p + count;
 53838   01E35C  5008               	movf	___SDCard_crc16@count^(0+1280),w,c
 53839   01E35E  240F               	addwf	___SDCard_crc16@p^(0+1280),w,c
 53840   01E360  6E0D               	movwf	___SDCard_crc16@endp^(0+1280),c
 53841   01E362  5009               	movf	(___SDCard_crc16@count+1)^(0+1280),w,c
 53842   01E364  2010               	addwfc	(___SDCard_crc16@p+1)^(0+1280),w,c
 53843   01E366  6E0E               	movwf	(___SDCard_crc16@endp+1)^(0+1280),c
 53844                           
 53845                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 53846   01E368  EFFC  F0F1         	goto	l20701
 53847   01E36C                     l20689:
 53848                           
 53849                           ;../src/boards/../../drivers/SDCard.c: 358:         crc = (crc >> 8)|(crc << 8);
 53850   01E36C  5004               	movf	___SDCard_crc16@crc^(0+1280),w,c
 53851   01E36E  C505  F50A         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16
 53852   01E372  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 53853   01E374  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 53854   01E376  6E04               	movwf	___SDCard_crc16@crc^(0+1280),c
 53855   01E378  C50B  F505         	movff	??___SDCard_crc16+1,___SDCard_crc16@crc+1
 53856   01E37C                     
 53857                           ;../src/boards/../../drivers/SDCard.c: 359:         crc ^= *p++;
 53858   01E37C  C50F  F4D9         	movff	___SDCard_crc16@p,fsr2l
 53859   01E380  C510  F4DA         	movff	___SDCard_crc16@p+1,fsr2h
 53860   01E384  50DF               	movf	indf2,w,c
 53861   01E386  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 53862   01E388  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 53863   01E38A  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 53864   01E38C  4A0F               	infsnz	___SDCard_crc16@p^(0+1280),f,c
 53865   01E38E  2A10               	incf	(___SDCard_crc16@p+1)^(0+1280),f,c
 53866   01E390                     
 53867                           ;../src/boards/../../drivers/SDCard.c: 360:         crc ^= ((crc & 0xff) >> 4);
 53868   01E390  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 53869   01E394  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 53870   01E398  0E04               	movlw	4
 53871   01E39A  6E0C               	movwf	(??___SDCard_crc16+2)^(0+1280),c
 53872   01E39C                     u27645:
 53873   01E39C  90D8               	bcf	status,0,c
 53874   01E39E  320B               	rrcf	(??___SDCard_crc16+1)^(0+1280),f,c
 53875   01E3A0  320A               	rrcf	??___SDCard_crc16^(0+1280),f,c
 53876   01E3A2  2E0C               	decfsz	(??___SDCard_crc16+2)^(0+1280),f,c
 53877   01E3A4  EFCE  F0F1         	goto	u27645
 53878   01E3A8  0E0F               	movlw	15
 53879   01E3AA  160A               	andwf	??___SDCard_crc16^(0+1280),f,c
 53880   01E3AC  0E00               	movlw	0
 53881   01E3AE  160B               	andwf	(??___SDCard_crc16+1)^(0+1280),f,c
 53882   01E3B0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 53883   01E3B2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 53884   01E3B4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 53885   01E3B6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 53886   01E3B8                     
 53887                           ;../src/boards/../../drivers/SDCard.c: 361:         crc ^= (crc << 12);
 53888   01E3B8  C504  F50A         	movff	___SDCard_crc16@crc,??___SDCard_crc16
 53889   01E3BC  C505  F50B         	movff	___SDCard_crc16@crc+1,??___SDCard_crc16+1
 53890   01E3C0  0E0C               	movlw	12
 53891   01E3C2                     u27655:
 53892   01E3C2  90D8               	bcf	status,0,c
 53893   01E3C4  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 53894   01E3C6  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 53895   01E3C8  2EE8               	decfsz	wreg,f,c
 53896   01E3CA  EFE1  F0F1         	goto	u27655
 53897   01E3CE  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 53898   01E3D0  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 53899   01E3D2  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 53900   01E3D4  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 53901   01E3D6                     
 53902                           ;../src/boards/../../drivers/SDCard.c: 362:         crc ^= ((crc & 0xff) << 5);
 53903   01E3D6  0EFF               	movlw	255
 53904   01E3D8  1404               	andwf	___SDCard_crc16@crc^(0+1280),w,c
 53905   01E3DA  6E0A               	movwf	??___SDCard_crc16^(0+1280),c
 53906   01E3DC  0E00               	movlw	0
 53907   01E3DE  1405               	andwf	(___SDCard_crc16@crc+1)^(0+1280),w,c
 53908   01E3E0  6E0B               	movwf	(??___SDCard_crc16+1)^(0+1280),c
 53909   01E3E2  0E05               	movlw	5
 53910   01E3E4                     u27665:
 53911   01E3E4  90D8               	bcf	status,0,c
 53912   01E3E6  360A               	rlcf	??___SDCard_crc16^(0+1280),f,c
 53913   01E3E8  360B               	rlcf	(??___SDCard_crc16+1)^(0+1280),f,c
 53914   01E3EA  2EE8               	decfsz	wreg,f,c
 53915   01E3EC  EFF2  F0F1         	goto	u27665
 53916   01E3F0  500A               	movf	??___SDCard_crc16^(0+1280),w,c
 53917   01E3F2  1A04               	xorwf	___SDCard_crc16@crc^(0+1280),f,c
 53918   01E3F4  500B               	movf	(??___SDCard_crc16+1)^(0+1280),w,c
 53919   01E3F6  1A05               	xorwf	(___SDCard_crc16@crc+1)^(0+1280),f,c
 53920   01E3F8                     l20701:
 53921                           
 53922                           ;../src/boards/../../drivers/SDCard.c: 357:     while (p < endp) {
 53923   01E3F8  500D               	movf	___SDCard_crc16@endp^(0+1280),w,c
 53924   01E3FA  5C0F               	subwf	___SDCard_crc16@p^(0+1280),w,c
 53925   01E3FC  500E               	movf	(___SDCard_crc16@endp+1)^(0+1280),w,c
 53926   01E3FE  5810               	subwfb	(___SDCard_crc16@p+1)^(0+1280),w,c
 53927   01E400  A0D8               	btfss	status,0,c
 53928   01E402  EF05  F0F2         	goto	u27671
 53929   01E406  EF07  F0F2         	goto	u27670
 53930   01E40A                     u27671:
 53931   01E40A  EFB6  F0F1         	goto	l20689
 53932   01E40E                     u27670:
 53933   01E40E                     
 53934                           ;../src/boards/../../drivers/SDCard.c: 365:     return crc;
 53935   01E40E  C504  F504         	movff	___SDCard_crc16@crc,?___SDCard_crc16
 53936   01E412  C505  F505         	movff	___SDCard_crc16@crc+1,?___SDCard_crc16+1
 53937   01E416  0012               	return		;funcret
 53938   01E418                     __end_of___SDCard_crc16:
 53939                           	callstack 0
 53940                           
 53941 ;; *************** function ___SDCard_command_r1 *****************
 53942 ;; Defined at:
 53943 ;;		line 143 in file "../src/boards/../../drivers/SDCard.c"
 53944 ;; Parameters:    Size  Location     Type
 53945 ;;  command         1    wreg     unsigned char 
 53946 ;;  argument        4   26[COMRAM] unsigned long 
 53947 ;;  r1              2   30[COMRAM] PTR unsigned char 
 53948 ;;		 -> SDCard_write512@response(1), SDCard_read512@response(1), SDCard_init@buf(5), 
 53949 ;; Auto vars:     Size  Location     Type
 53950 ;;  command         1   32[COMRAM] unsigned char 
 53951 ;;  buf             6   33[COMRAM] unsigned char [6]
 53952 ;;  spi             2   40[COMRAM] PTR struct SPI
 53953 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 53954 ;;  response        1   39[COMRAM] unsigned char 
 53955 ;; Return value:  Size  Location     Type
 53956 ;;                  2   26[COMRAM] int 
 53957 ;; Registers used:
 53958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 53959 ;; Tracked objects:
 53960 ;;		On entry : 0/0
 53961 ;;		On exit  : 0/0
 53962 ;;		Unchanged: 0/0
 53963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 53964 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53965 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53967 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 53968 ;;Total ram usage:       16 bytes
 53969 ;; Hardware stack levels used: 1
 53970 ;; Hardware stack levels required when called: 4
 53971 ;; This function calls:
 53972 ;;		_SDCard_crc
 53973 ;;		_SPI_SD_begin_transaction
 53974 ;;		_SPI_SD_dummy_clocks
 53975 ;;		_SPI_SD_send
 53976 ;;		___SDCard_wait_response
 53977 ;; This function is called by:
 53978 ;;		_SDCard_read512
 53979 ;;		_SDCard_write512
 53980 ;;		_SDCard_command
 53981 ;; This function uses a non-reentrant model
 53982 ;;
 53983                           
 53984                           	psect	text151
 53985   01E646                     __ptext151:
 53986                           	callstack 0
 53987   01E646                     ___SDCard_command_r1:
 53988                           	callstack 110
 53989                           
 53990                           ;incstack = 0
 53991                           ;___SDCard_command_r1@command stored from wreg
 53992   01E646  6E21               	movwf	___SDCard_command_r1@command^(0+1280),c
 53993   01E648                     
 53994                           ;../src/boards/../../drivers/SDCard.c: 143: static int __SDCard_command_r1(uint8_t comma
      +                          nd, uint32_t argument, uint8_t *r1);../src/boards/../../drivers/SDCard.c: 144: {;../src/
      +                          boards/../../drivers/SDCard.c: 145:     struct SPI *spi = ctx_.spi;
 53995   01E648  C7A8  F529         	movff	_ctx_,___SDCard_command_r1@spi
 53996   01E64C  C7A9  F52A         	movff	_ctx_+1,___SDCard_command_r1@spi+1
 53997   01E650                     
 53998                           ;../src/boards/../../drivers/SDCard.c: 146:     uint8_t buf[6];;../src/boards/../../driv
      +                          ers/SDCard.c: 147:     uint8_t response;;../src/boards/../../drivers/SDCard.c: 149:     
      +                          buf[0] = command | 0x40;
 53999   01E650  5021               	movf	___SDCard_command_r1@command^(0+1280),w,c
 54000   01E652  0940               	iorlw	64
 54001   01E654  6E22               	movwf	___SDCard_command_r1@buf^(0+1280),c
 54002   01E656                     
 54003                           ;../src/boards/../../drivers/SDCard.c: 150:     buf[1] = (argument >> 24) & 0xff;
 54004   01E656  C51E  F523         	movff	___SDCard_command_r1@argument+3,___SDCard_command_r1@buf+1
 54005   01E65A                     
 54006                           ;../src/boards/../../drivers/SDCard.c: 151:     buf[2] = (argument >> 16) & 0xff;
 54007   01E65A  C51D  F524         	movff	___SDCard_command_r1@argument+2,___SDCard_command_r1@buf+2
 54008   01E65E                     
 54009                           ;../src/boards/../../drivers/SDCard.c: 152:     buf[3] = (argument >> 8) & 0xff;
 54010   01E65E  C51C  F525         	movff	___SDCard_command_r1@argument+1,___SDCard_command_r1@buf+3
 54011   01E662                     
 54012                           ;../src/boards/../../drivers/SDCard.c: 153:     buf[4] = (argument >> 0) & 0xff;
 54013   01E662  C51B  F526         	movff	___SDCard_command_r1@argument,___SDCard_command_r1@buf+4
 54014   01E666                     
 54015                           ;../src/boards/../../drivers/SDCard.c: 154:     buf[5] = SDCard_crc(buf, 5) | 0x01;
 54016   01E666  0E22               	movlw	low ___SDCard_command_r1@buf
 54017   01E668  6E04               	movwf	SDCard_crc@buf^(0+1280),c
 54018   01E66A  0E05               	movlw	high ___SDCard_command_r1@buf
 54019   01E66C  6E05               	movwf	(SDCard_crc@buf+1)^(0+1280),c
 54020   01E66E  0E00               	movlw	0
 54021   01E670  6E07               	movwf	(SDCard_crc@count+1)^(0+1280),c
 54022   01E672  0E05               	movlw	5
 54023   01E674  6E06               	movwf	SDCard_crc@count^(0+1280),c
 54024   01E676  ECF9  F0F8         	call	_SDCard_crc	;wreg free
 54025   01E67A  0901               	iorlw	1
 54026   01E67C  6E27               	movwf	(___SDCard_command_r1@buf+5)^(0+1280),c
 54027   01E67E                     
 54028                           ;../src/boards/../../drivers/SDCard.c: 156:     SPI_SD_begin_transaction(spi);
 54029   01E67E  C529  F508         	movff	___SDCard_command_r1@spi,SPI_SD_begin_transaction@ctx_
 54030   01E682  C52A  F509         	movff	___SDCard_command_r1@spi+1,SPI_SD_begin_transaction@ctx_+1
 54031   01E686  EC98  F000         	call	_SPI_SD_begin_transaction	;wreg free
 54032   01E68A                     
 54033                           ;../src/boards/../../drivers/SDCard.c: 157:     SPI_SD_dummy_clocks(spi, 1);
 54034   01E68A  C529  F50E         	movff	___SDCard_command_r1@spi,SPI_SD_dummy_clocks@ctx_
 54035   01E68E  C52A  F50F         	movff	___SDCard_command_r1@spi+1,SPI_SD_dummy_clocks@ctx_+1
 54036   01E692  0E00               	movlw	0
 54037   01E694  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 54038   01E696  0E01               	movlw	1
 54039   01E698  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 54040   01E69A  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 54041   01E69E                     
 54042                           ;../src/boards/../../drivers/SDCard.c: 158:     SPI_SD_send(spi, buf, 6);
 54043   01E69E  C529  F504         	movff	___SDCard_command_r1@spi,SPI_SD_send@ctx_
 54044   01E6A2  C52A  F505         	movff	___SDCard_command_r1@spi+1,SPI_SD_send@ctx_+1
 54045   01E6A6  0E22               	movlw	low ___SDCard_command_r1@buf
 54046   01E6A8  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 54047   01E6AA  0E05               	movlw	high ___SDCard_command_r1@buf
 54048   01E6AC  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 54049   01E6AE  0E00               	movlw	0
 54050   01E6B0  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 54051   01E6B2  0E06               	movlw	6
 54052   01E6B4  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 54053   01E6B6  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 54054   01E6BA                     
 54055                           ;../src/boards/../../drivers/SDCard.c: 160:     response = __SDCard_wait_response(0xff, 
      +                          ctx_.timeout);
 54056   01E6BA  C7AA  F515         	movff	_ctx_+2,___SDCard_wait_response@attempts
 54057   01E6BE  C7AB  F516         	movff	_ctx_+3,___SDCard_wait_response@attempts+1
 54058   01E6C2  0EFF               	movlw	255
 54059   01E6C4  ECDC  F0FD         	call	___SDCard_wait_response
 54060   01E6C8  6E28               	movwf	___SDCard_command_r1@response^(0+1280),c
 54061   01E6CA                     
 54062                           ;../src/boards/../../drivers/SDCard.c: 161:     *r1 = response;
 54063   01E6CA  C51F  F4D9         	movff	___SDCard_command_r1@r1,fsr2l
 54064   01E6CE  C520  F4DA         	movff	___SDCard_command_r1@r1+1,fsr2h
 54065   01E6D2  C528  F4DF         	movff	___SDCard_command_r1@response,indf2
 54066   01E6D6                     
 54067                           ;../src/boards/../../drivers/SDCard.c: 162:     if (response == 0xff) {
 54068   01E6D6  2828               	incf	___SDCard_command_r1@response^(0+1280),w,c
 54069   01E6D8  A4D8               	btfss	status,2,c
 54070   01E6DA  EF71  F0F3         	goto	u27631
 54071   01E6DE  EF73  F0F3         	goto	u27630
 54072   01E6E2                     u27631:
 54073   01E6E2  EF79  F0F3         	goto	l20683
 54074   01E6E6                     u27630:
 54075   01E6E6                     
 54076                           ;../src/boards/../../drivers/SDCard.c: 163:         return 1;
 54077   01E6E6  0E00               	movlw	0
 54078   01E6E8  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 54079   01E6EA  0E01               	movlw	1
 54080   01E6EC  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 54081   01E6EE  EF7D  F0F3         	goto	l2462
 54082   01E6F2                     l20683:
 54083                           
 54084                           ;../src/boards/../../drivers/SDCard.c: 166:     return 0;
 54085   01E6F2  0E00               	movlw	0
 54086   01E6F4  6E1C               	movwf	(?___SDCard_command_r1+1)^(0+1280),c
 54087   01E6F6  0E00               	movlw	0
 54088   01E6F8  6E1B               	movwf	?___SDCard_command_r1^(0+1280),c
 54089   01E6FA                     l2462:
 54090   01E6FA  0012               	return		;funcret
 54091   01E6FC                     __end_of___SDCard_command_r1:
 54092                           	callstack 0
 54093                           
 54094 ;; *************** function ___SDCard_wait_response *****************
 54095 ;; Defined at:
 54096 ;;		line 133 in file "../src/boards/../../drivers/SDCard.c"
 54097 ;; Parameters:    Size  Location     Type
 54098 ;;  no_response     1    wreg     unsigned char 
 54099 ;;  attempts        2   20[COMRAM] unsigned int 
 54100 ;; Auto vars:     Size  Location     Type
 54101 ;;  no_response     1   22[COMRAM] unsigned char 
 54102 ;;  spi             2   23[COMRAM] PTR struct SPI
 54103 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54104 ;;  response        1   25[COMRAM] unsigned char 
 54105 ;; Return value:  Size  Location     Type
 54106 ;;                  1    wreg      unsigned char 
 54107 ;; Registers used:
 54108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 54109 ;; Tracked objects:
 54110 ;;		On entry : 0/0
 54111 ;;		On exit  : 0/0
 54112 ;;		Unchanged: 0/0
 54113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54117 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54118 ;;Total ram usage:        6 bytes
 54119 ;; Hardware stack levels used: 1
 54120 ;; Hardware stack levels required when called: 3
 54121 ;; This function calls:
 54122 ;;		_SPI_SD_receive_byte
 54123 ;; This function is called by:
 54124 ;;		___SDCard_command_r1
 54125 ;;		_SDCard_read512
 54126 ;;		_SDCard_write512
 54127 ;; This function uses a non-reentrant model
 54128 ;;
 54129                           
 54130                           	psect	text152
 54131   01FBB8                     __ptext152:
 54132                           	callstack 0
 54133   01FBB8                     ___SDCard_wait_response:
 54134                           	callstack 111
 54135                           
 54136                           ;incstack = 0
 54137                           ;___SDCard_wait_response@no_response stored from wreg
 54138   01FBB8  6E17               	movwf	___SDCard_wait_response@no_response^(0+1280),c
 54139   01FBBA                     
 54140                           ;../src/boards/../../drivers/SDCard.c: 133: static uint8_t __SDCard_wait_response(uint8_
      +                          t no_response, unsigned int attempts);../src/boards/../../drivers/SDCard.c: 134: {;../sr
      +                          c/boards/../../drivers/SDCard.c: 135:     struct SPI *spi = ctx_.spi;
 54141   01FBBA  C7A8  F518         	movff	_ctx_,___SDCard_wait_response@spi
 54142   01FBBE  C7A9  F519         	movff	_ctx_+1,___SDCard_wait_response@spi+1
 54143   01FBC2                     l20585:
 54144                           
 54145                           ;../src/boards/../../drivers/SDCard.c: 138:         response = SPI_SD_receive_byte(spi);
 54146   01FBC2  C518  F512         	movff	___SDCard_wait_response@spi,SPI_SD_receive_byte@ctx_
 54147   01FBC6  C519  F513         	movff	___SDCard_wait_response@spi+1,SPI_SD_receive_byte@ctx_+1
 54148   01FBCA  EC87  F000         	call	_SPI_SD_receive_byte	;wreg free
 54149   01FBCE  6E1A               	movwf	___SDCard_wait_response@response^(0+1280),c
 54150   01FBD0                     
 54151                           ;../src/boards/../../drivers/SDCard.c: 139:     } while ((response == no_response) && 0 
      +                          < --attempts);
 54152   01FBD0  5017               	movf	___SDCard_wait_response@no_response^(0+1280),w,c
 54153   01FBD2  181A               	xorwf	___SDCard_wait_response@response^(0+1280),w,c
 54154   01FBD4  A4D8               	btfss	status,2,c
 54155   01FBD6  EFEF  F0FD         	goto	u27531
 54156   01FBDA  EFF1  F0FD         	goto	u27530
 54157   01FBDE                     u27531:
 54158   01FBDE  EFFD  F0FD         	goto	l20591
 54159   01FBE2                     u27530:
 54160   01FBE2  0615               	decf	___SDCard_wait_response@attempts^(0+1280),f,c
 54161   01FBE4  A0D8               	btfss	status,0,c
 54162   01FBE6  0616               	decf	(___SDCard_wait_response@attempts+1)^(0+1280),f,c
 54163   01FBE8  5015               	movf	___SDCard_wait_response@attempts^(0+1280),w,c
 54164   01FBEA  1016               	iorwf	(___SDCard_wait_response@attempts+1)^(0+1280),w,c
 54165   01FBEC  A4D8               	btfss	status,2,c
 54166   01FBEE  EFFB  F0FD         	goto	u27541
 54167   01FBF2  EFFD  F0FD         	goto	u27540
 54168   01FBF6                     u27541:
 54169   01FBF6  EFE1  F0FD         	goto	l20585
 54170   01FBFA                     u27540:
 54171   01FBFA                     l20591:
 54172                           
 54173                           ;../src/boards/../../drivers/SDCard.c: 140:     return response;
 54174   01FBFA  501A               	movf	___SDCard_wait_response@response^(0+1280),w,c
 54175   01FBFC  0012               	return		;funcret
 54176   01FBFE                     __end_of___SDCard_wait_response:
 54177                           	callstack 0
 54178                           
 54179 ;; *************** function _SPI_SD_receive_byte *****************
 54180 ;; Defined at:
 54181 ;;		line 269 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 54182 ;; Parameters:    Size  Location     Type
 54183 ;;  ctx_            2   17[COMRAM] PTR struct SPI
 54184 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54185 ;; Auto vars:     Size  Location     Type
 54186 ;;  dummy           1   19[COMRAM] unsigned char 
 54187 ;; Return value:  Size  Location     Type
 54188 ;;                  1    wreg      unsigned char 
 54189 ;; Registers used:
 54190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 54191 ;; Tracked objects:
 54192 ;;		On entry : 0/0
 54193 ;;		On exit  : 0/0
 54194 ;;		Unchanged: 0/0
 54195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54199 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54200 ;;Total ram usage:        3 bytes
 54201 ;; Hardware stack levels used: 1
 54202 ;; Hardware stack levels required when called: 2
 54203 ;; This function calls:
 54204 ;;		_SPI_SD_receive
 54205 ;; This function is called by:
 54206 ;;		___SDCard_wait_response
 54207 ;;		_SDCard_read512
 54208 ;; This function uses a non-reentrant model
 54209 ;;
 54210                           
 54211                           	psect	text153
 54212   00010E                     __ptext153:
 54213                           	callstack 0
 54214   00010E                     _SPI_SD_receive_byte:
 54215                           	callstack 111
 54216   00010E                     
 54217                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 269: uint8_t SPI_SD_receive_byte(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 270: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 271:     uint8_t dummy = 0xff;
 54218   00010E  6814               	setf	SPI_SD_receive_byte@dummy^(0+1280),c
 54219   000110                     
 54220                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 272:     SPI_SD_receive(ctx_, &dummy, 1)
      +                          ;
 54221   000110  C512  F504         	movff	SPI_SD_receive_byte@ctx_,SPI_SD_receive@ctx_
 54222   000114  C513  F505         	movff	SPI_SD_receive_byte@ctx_+1,SPI_SD_receive@ctx_+1
 54223   000118  0E14               	movlw	low SPI_SD_receive_byte@dummy
 54224   00011A  6E06               	movwf	SPI_SD_receive@buf^(0+1280),c
 54225   00011C  0E05               	movlw	high SPI_SD_receive_byte@dummy
 54226   00011E  6E07               	movwf	(SPI_SD_receive@buf+1)^(0+1280),c
 54227   000120  0E00               	movlw	0
 54228   000122  6E09               	movwf	(SPI_SD_receive@count+1)^(0+1280),c
 54229   000124  0E01               	movlw	1
 54230   000126  6E08               	movwf	SPI_SD_receive@count^(0+1280),c
 54231   000128  ECDF  F0BF         	call	_SPI_SD_receive	;wreg free
 54232   00012C                     
 54233                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 273:     return dummy;
 54234   00012C  5014               	movf	SPI_SD_receive_byte@dummy^(0+1280),w,c
 54235   00012E  0012               	return		;funcret
 54236   000130                     __end_of_SPI_SD_receive_byte:
 54237                           	callstack 0
 54238                           
 54239 ;; *************** function _SPI_SD_receive *****************
 54240 ;; Defined at:
 54241 ;;		line 185 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 54242 ;; Parameters:    Size  Location     Type
 54243 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 54244 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54245 ;;  buf             2    5[COMRAM] PTR void 
 54246 ;;		 -> SDCard_init@buf(5), SPI_SD_receive_byte@dummy(1), cin_file(512), in_fl(546), 
 54247 ;;		 -> fs(564), rom_fl(546), tmp_buf(512), disk_buf(128), 
 54248 ;;		 -> pb$fp(2), f_gets@s(4), NULL(0), disk_initialize@buf(128), 
 54249 ;;  count           2    7[COMRAM] unsigned int 
 54250 ;; Auto vars:     Size  Location     Type
 54251 ;;  i               1   14[COMRAM] unsigned char 
 54252 ;;  i               2   12[COMRAM] int 
 54253 ;;  repeat          1   11[COMRAM] unsigned char 
 54254 ;;  p               2   15[COMRAM] PTR unsigned char 
 54255 ;;		 -> SDCard_init@buf(5), SPI_SD_receive_byte@dummy(1), cin_file(512), in_fl(546), 
 54256 ;;		 -> fs(564), rom_fl(546), tmp_buf(512), disk_buf(128), 
 54257 ;;		 -> pb$fp(2), f_gets@s(4), NULL(0), disk_initialize@buf(128), 
 54258 ;; Return value:  Size  Location     Type
 54259 ;;                  1    wreg      void 
 54260 ;; Registers used:
 54261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54262 ;; Tracked objects:
 54263 ;;		On entry : 0/0
 54264 ;;		On exit  : 0/0
 54265 ;;		Unchanged: 0/0
 54266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54267 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54268 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54270 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54271 ;;Total ram usage:       14 bytes
 54272 ;; Hardware stack levels used: 1
 54273 ;; Hardware stack levels required when called: 1
 54274 ;; This function calls:
 54275 ;;		Nothing
 54276 ;; This function is called by:
 54277 ;;		_SPI_SD_receive_byte
 54278 ;;		_SDCard_read512
 54279 ;;		_SDCard_command
 54280 ;; This function uses a non-reentrant model
 54281 ;;
 54282                           
 54283                           	psect	text154
 54284   017FBE                     __ptext154:
 54285                           	callstack 0
 54286   017FBE                     _SPI_SD_receive:
 54287                           	callstack 111
 54288   017FBE                     
 54289                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 185: void SPI_SD_receive(struct SPI *ctx
      +                          _, void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 186: {;
      +                          ../src/boards/../../drivers/pic18f57q43_spi.c: 187:     uint8_t *p = (uint8_t*)buf;
 54290   017FBE  C506  F510         	movff	SPI_SD_receive@buf,SPI_SD_receive@p
 54291   017FC2  C507  F511         	movff	SPI_SD_receive@buf+1,SPI_SD_receive@p+1
 54292                           
 54293                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 189:     if (count == 0)
 54294   017FC6  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 54295   017FC8  1009               	iorwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 54296   017FCA  A4D8               	btfss	status,2,c
 54297   017FCC  EFEA  F0BF         	goto	u27061
 54298   017FD0  EFEC  F0BF         	goto	u27060
 54299   017FD4                     u27061:
 54300   017FD4  EFEE  F0BF         	goto	l20219
 54301   017FD8                     u27060:
 54302   017FD8  EF72  F0C1         	goto	l2308
 54303   017FDC                     l20219:
 54304                           
 54305                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 192:     SPI1TCNTH = (count >> 8);
 54306   017FDC  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 54307   017FDE  0100               	movlb	0	; () banked
 54308   017FE0  6F83               	movwf	131,b	;volatile
 54309   017FE2                     
 54310                           ; BSR set to: 0
 54311                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 193:     SPI1TCNTL = (count & 0xff);
 54312   017FE2  C508  F082         	movff	SPI_SD_receive@count,130	;volatile
 54313   017FE6                     
 54314                           ; BSR set to: 0
 54315                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 195:     if ((count & 0x07) || 255 < cou
      +                          nt / 8) {
 54316   017FE6  0E07               	movlw	7
 54317   017FE8  1408               	andwf	SPI_SD_receive@count^(0+1280),w,c
 54318   017FEA  6E0A               	movwf	??_SPI_SD_receive^(0+1280),c
 54319   017FEC  0E00               	movlw	0
 54320   017FEE  1409               	andwf	(SPI_SD_receive@count+1)^(0+1280),w,c
 54321   017FF0  6E0B               	movwf	(??_SPI_SD_receive+1)^(0+1280),c
 54322   017FF2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 54323   017FF4  100B               	iorwf	(??_SPI_SD_receive+1)^(0+1280),w,c
 54324   017FF6  A4D8               	btfss	status,2,c
 54325   017FF8  EF00  F0C0         	goto	u27071
 54326   017FFC  EF02  F0C0         	goto	u27070
 54327   018000                     u27071:
 54328   018000  EF17  F0C0         	goto	l2311
 54329   018004                     u27070:
 54330   018004                     
 54331                           ; BSR set to: 0
 54332   018004  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 54333   018008  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 54334   01800C  90D8               	bcf	status,0,c
 54335   01800E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54336   018010  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54337   018012  90D8               	bcf	status,0,c
 54338   018014  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54339   018016  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54340   018018  90D8               	bcf	status,0,c
 54341   01801A  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54342   01801C  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54343   01801E  040B               	decf	(??_SPI_SD_receive+1)^(0+1280),w,c
 54344   018020  A0D8               	btfss	status,0,c
 54345   018022  EF15  F0C0         	goto	u27081
 54346   018026  EF17  F0C0         	goto	u27080
 54347   01802A                     u27081:
 54348   01802A  EF4D  F0C0         	goto	l2309
 54349   01802E                     u27080:
 54350   01802E                     l2311:
 54351                           
 54352                           ; BSR set to: 0
 54353                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 196:         SPI1TXB = 0xff;
 54354   01802E  6981               	setf	129,b	;volatile
 54355   018030                     
 54356                           ; BSR set to: 0
 54357                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 197:         for (int i = 1; i < count; 
      +                          i++) {
 54358   018030  0E00               	movlw	0
 54359   018032  6E0E               	movwf	(SPI_SD_receive@i+1)^(0+1280),c
 54360   018034  0E01               	movlw	1
 54361   018036  6E0D               	movwf	SPI_SD_receive@i^(0+1280),c
 54362   018038  EF31  F0C0         	goto	l20235
 54363   01803C                     l2313:
 54364                           
 54365                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 198:             SPI1TXB = 0xff;
 54366   01803C  0100               	movlb	0	; () banked
 54367   01803E  6981               	setf	129,b	;volatile
 54368   018040                     l2314:
 54369   018040  A0B1               	btfss	1201,0,c	;volatile
 54370   018042  EF25  F0C0         	goto	u27091
 54371   018046  EF27  F0C0         	goto	u27090
 54372   01804A                     u27091:
 54373   01804A  EF20  F0C0         	goto	l2314
 54374   01804E                     u27090:
 54375   01804E                     
 54376                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 200:             *p++ = SPI1RXB;
 54377   01804E  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54378   018052  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54379   018056  C080 F4DF          	movff	128,indf2	;volatile
 54380   01805A  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54381   01805C  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54382   01805E                     
 54383                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 201:         }
 54384   01805E  4A0D               	infsnz	SPI_SD_receive@i^(0+1280),f,c
 54385   018060  2A0E               	incf	(SPI_SD_receive@i+1)^(0+1280),f,c
 54386   018062                     l20235:
 54387   018062  5008               	movf	SPI_SD_receive@count^(0+1280),w,c
 54388   018064  5C0D               	subwf	SPI_SD_receive@i^(0+1280),w,c
 54389   018066  5009               	movf	(SPI_SD_receive@count+1)^(0+1280),w,c
 54390   018068  580E               	subwfb	(SPI_SD_receive@i+1)^(0+1280),w,c
 54391   01806A  A0D8               	btfss	status,0,c
 54392   01806C  EF3A  F0C0         	goto	u27101
 54393   018070  EF3C  F0C0         	goto	u27100
 54394   018074                     u27101:
 54395   018074  EF1E  F0C0         	goto	l2313
 54396   018078                     u27100:
 54397   018078                     l2318:
 54398   018078  A0B1               	btfss	1201,0,c	;volatile
 54399   01807A  EF41  F0C0         	goto	u27111
 54400   01807E  EF43  F0C0         	goto	u27110
 54401   018082                     u27111:
 54402   018082  EF3C  F0C0         	goto	l2318
 54403   018086                     u27110:
 54404   018086                     l20237:
 54405                           
 54406                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 203:         *p++ = SPI1RXB;
 54407   018086  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54408   01808A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54409   01808E  C080 F4DF          	movff	128,indf2	;volatile
 54410   018092  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54411   018094  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54412                           
 54413                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 204:     } else {
 54414   018096  EF72  F0C1         	goto	l2308
 54415   01809A                     l2309:
 54416                           
 54417                           ; BSR set to: 0
 54418                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 205:         SPI1TXB = 0xff;
 54419   01809A  6981               	setf	129,b	;volatile
 54420                           
 54421                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 206:         SPI1TXB = 0xff;
 54422   01809C  6981               	setf	129,b	;volatile
 54423   01809E                     l2322:
 54424   01809E  A0B1               	btfss	1201,0,c	;volatile
 54425   0180A0  EF54  F0C0         	goto	u27121
 54426   0180A4  EF56  F0C0         	goto	u27120
 54427   0180A8                     u27121:
 54428   0180A8  EF4F  F0C0         	goto	l2322
 54429   0180AC                     u27120:
 54430   0180AC                     
 54431                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 208:         *p++ = SPI1RXB;
 54432   0180AC  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54433   0180B0  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54434   0180B4  C080 F4DF          	movff	128,indf2	;volatile
 54435   0180B8  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54436   0180BA  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54437   0180BC                     
 54438                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 209:         SPI1TXB = 0xff;
 54439   0180BC  0100               	movlb	0	; () banked
 54440   0180BE  6981               	setf	129,b	;volatile
 54441   0180C0                     l2325:
 54442   0180C0  A0B1               	btfss	1201,0,c	;volatile
 54443   0180C2  EF65  F0C0         	goto	u27131
 54444   0180C6  EF67  F0C0         	goto	u27130
 54445   0180CA                     u27131:
 54446   0180CA  EF60  F0C0         	goto	l2325
 54447   0180CE                     u27130:
 54448   0180CE                     
 54449                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 211:         *p++ = SPI1RXB;
 54450   0180CE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54451   0180D2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54452   0180D6  C080 F4DF          	movff	128,indf2	;volatile
 54453   0180DA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54454   0180DC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54455   0180DE                     
 54456                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 212:         SPI1TXB = 0xff;
 54457   0180DE  0100               	movlb	0	; () banked
 54458   0180E0  6981               	setf	129,b	;volatile
 54459   0180E2                     l2328:
 54460   0180E2  A0B1               	btfss	1201,0,c	;volatile
 54461   0180E4  EF76  F0C0         	goto	u27141
 54462   0180E8  EF78  F0C0         	goto	u27140
 54463   0180EC                     u27141:
 54464   0180EC  EF71  F0C0         	goto	l2328
 54465   0180F0                     u27140:
 54466   0180F0                     
 54467                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 214:         *p++ = SPI1RXB;
 54468   0180F0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54469   0180F4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54470   0180F8  C080 F4DF          	movff	128,indf2	;volatile
 54471   0180FC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54472   0180FE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54473   018100                     
 54474                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 215:         SPI1TXB = 0xff;
 54475   018100  0100               	movlb	0	; () banked
 54476   018102  6981               	setf	129,b	;volatile
 54477   018104                     l2331:
 54478   018104  A0B1               	btfss	1201,0,c	;volatile
 54479   018106  EF87  F0C0         	goto	u27151
 54480   01810A  EF89  F0C0         	goto	u27150
 54481   01810E                     u27151:
 54482   01810E  EF82  F0C0         	goto	l2331
 54483   018112                     u27150:
 54484   018112                     
 54485                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 217:         *p++ = SPI1RXB;
 54486   018112  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54487   018116  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54488   01811A  C080 F4DF          	movff	128,indf2	;volatile
 54489   01811E  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54490   018120  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54491   018122                     
 54492                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 218:         SPI1TXB = 0xff;
 54493   018122  0100               	movlb	0	; () banked
 54494   018124  6981               	setf	129,b	;volatile
 54495   018126                     l2334:
 54496   018126  A0B1               	btfss	1201,0,c	;volatile
 54497   018128  EF98  F0C0         	goto	u27161
 54498   01812C  EF9A  F0C0         	goto	u27160
 54499   018130                     u27161:
 54500   018130  EF93  F0C0         	goto	l2334
 54501   018134                     u27160:
 54502   018134                     
 54503                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 220:         *p++ = SPI1RXB;
 54504   018134  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54505   018138  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54506   01813C  C080 F4DF          	movff	128,indf2	;volatile
 54507   018140  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54508   018142  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54509   018144                     
 54510                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 221:         SPI1TXB = 0xff;
 54511   018144  0100               	movlb	0	; () banked
 54512   018146  6981               	setf	129,b	;volatile
 54513   018148                     l2337:
 54514   018148  A0B1               	btfss	1201,0,c	;volatile
 54515   01814A  EFA9  F0C0         	goto	u27171
 54516   01814E  EFAB  F0C0         	goto	u27170
 54517   018152                     u27171:
 54518   018152  EFA4  F0C0         	goto	l2337
 54519   018156                     u27170:
 54520   018156                     
 54521                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 223:         *p++ = SPI1RXB;
 54522   018156  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54523   01815A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54524   01815E  C080 F4DF          	movff	128,indf2	;volatile
 54525   018162  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54526   018164  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54527   018166                     
 54528                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 224:         SPI1TXB = 0xff;
 54529   018166  0100               	movlb	0	; () banked
 54530   018168  6981               	setf	129,b	;volatile
 54531   01816A                     l2340:
 54532   01816A  A0B1               	btfss	1201,0,c	;volatile
 54533   01816C  EFBA  F0C0         	goto	u27181
 54534   018170  EFBC  F0C0         	goto	u27180
 54535   018174                     u27181:
 54536   018174  EFB5  F0C0         	goto	l2340
 54537   018178                     u27180:
 54538   018178                     
 54539                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 226:         *p++ = SPI1RXB;
 54540   018178  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54541   01817C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54542   018180  C080 F4DF          	movff	128,indf2	;volatile
 54543   018184  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54544   018186  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54545   018188                     
 54546                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 227:         uint8_t repeat = (uint8_t)(
      +                          count / 8);
 54547   018188  C508  F50A         	movff	SPI_SD_receive@count,??_SPI_SD_receive
 54548   01818C  C509  F50B         	movff	SPI_SD_receive@count+1,??_SPI_SD_receive+1
 54549   018190  90D8               	bcf	status,0,c
 54550   018192  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54551   018194  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54552   018196  90D8               	bcf	status,0,c
 54553   018198  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54554   01819A  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54555   01819C  90D8               	bcf	status,0,c
 54556   01819E  320B               	rrcf	(??_SPI_SD_receive+1)^(0+1280),f,c
 54557   0181A0  320A               	rrcf	??_SPI_SD_receive^(0+1280),f,c
 54558   0181A2  500A               	movf	??_SPI_SD_receive^(0+1280),w,c
 54559   0181A4  6E0C               	movwf	SPI_SD_receive@repeat^(0+1280),c
 54560   0181A6                     
 54561                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 228:         for (uint8_t i = 1; i < rep
      +                          eat; i++) {
 54562   0181A6  0E01               	movlw	1
 54563   0181A8  6E0F               	movwf	SPI_SD_receive@i_3984^(0+1280),c
 54564   0181AA  EF60  F0C1         	goto	l20333
 54565   0181AE                     l2344:
 54566                           
 54567                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 229:             SPI1TXB = 0xff;
 54568   0181AE  0100               	movlb	0	; () banked
 54569   0181B0  6981               	setf	129,b	;volatile
 54570   0181B2                     l2345:
 54571   0181B2  A0B1               	btfss	1201,0,c	;volatile
 54572   0181B4  EFDE  F0C0         	goto	u27191
 54573   0181B8  EFE0  F0C0         	goto	u27190
 54574   0181BC                     u27191:
 54575   0181BC  EFD9  F0C0         	goto	l2345
 54576   0181C0                     u27190:
 54577   0181C0                     
 54578                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 231:             *p++ = SPI1RXB;
 54579   0181C0  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54580   0181C4  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54581   0181C8  C080 F4DF          	movff	128,indf2	;volatile
 54582   0181CC  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54583   0181CE  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54584   0181D0                     
 54585                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 232:             SPI1TXB = 0xff;
 54586   0181D0  0100               	movlb	0	; () banked
 54587   0181D2  6981               	setf	129,b	;volatile
 54588   0181D4                     l2348:
 54589   0181D4  A0B1               	btfss	1201,0,c	;volatile
 54590   0181D6  EFEF  F0C0         	goto	u27201
 54591   0181DA  EFF1  F0C0         	goto	u27200
 54592   0181DE                     u27201:
 54593   0181DE  EFEA  F0C0         	goto	l2348
 54594   0181E2                     u27200:
 54595   0181E2                     
 54596                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 234:             *p++ = SPI1RXB;
 54597   0181E2  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54598   0181E6  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54599   0181EA  C080 F4DF          	movff	128,indf2	;volatile
 54600   0181EE  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54601   0181F0  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54602   0181F2                     
 54603                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 235:             SPI1TXB = 0xff;
 54604   0181F2  0100               	movlb	0	; () banked
 54605   0181F4  6981               	setf	129,b	;volatile
 54606   0181F6                     l2351:
 54607   0181F6  A0B1               	btfss	1201,0,c	;volatile
 54608   0181F8  EF00  F0C1         	goto	u27211
 54609   0181FC  EF02  F0C1         	goto	u27210
 54610   018200                     u27211:
 54611   018200  EFFB  F0C0         	goto	l2351
 54612   018204                     u27210:
 54613   018204                     
 54614                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 237:             *p++ = SPI1RXB;
 54615   018204  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54616   018208  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54617   01820C  C080 F4DF          	movff	128,indf2	;volatile
 54618   018210  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54619   018212  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54620   018214                     
 54621                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 238:             SPI1TXB = 0xff;
 54622   018214  0100               	movlb	0	; () banked
 54623   018216  6981               	setf	129,b	;volatile
 54624   018218                     l2354:
 54625   018218  A0B1               	btfss	1201,0,c	;volatile
 54626   01821A  EF11  F0C1         	goto	u27221
 54627   01821E  EF13  F0C1         	goto	u27220
 54628   018222                     u27221:
 54629   018222  EF0C  F0C1         	goto	l2354
 54630   018226                     u27220:
 54631   018226                     
 54632                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 240:             *p++ = SPI1RXB;
 54633   018226  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54634   01822A  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54635   01822E  C080 F4DF          	movff	128,indf2	;volatile
 54636   018232  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54637   018234  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54638   018236                     
 54639                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 241:             SPI1TXB = 0xff;
 54640   018236  0100               	movlb	0	; () banked
 54641   018238  6981               	setf	129,b	;volatile
 54642   01823A                     l2357:
 54643   01823A  A0B1               	btfss	1201,0,c	;volatile
 54644   01823C  EF22  F0C1         	goto	u27231
 54645   018240  EF24  F0C1         	goto	u27230
 54646   018244                     u27231:
 54647   018244  EF1D  F0C1         	goto	l2357
 54648   018248                     u27230:
 54649   018248                     
 54650                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 243:             *p++ = SPI1RXB;
 54651   018248  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54652   01824C  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54653   018250  C080 F4DF          	movff	128,indf2	;volatile
 54654   018254  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54655   018256  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54656   018258                     
 54657                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 244:             SPI1TXB = 0xff;
 54658   018258  0100               	movlb	0	; () banked
 54659   01825A  6981               	setf	129,b	;volatile
 54660   01825C                     l2360:
 54661   01825C  A0B1               	btfss	1201,0,c	;volatile
 54662   01825E  EF33  F0C1         	goto	u27241
 54663   018262  EF35  F0C1         	goto	u27240
 54664   018266                     u27241:
 54665   018266  EF2E  F0C1         	goto	l2360
 54666   01826A                     u27240:
 54667   01826A                     
 54668                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 246:             *p++ = SPI1RXB;
 54669   01826A  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54670   01826E  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54671   018272  C080 F4DF          	movff	128,indf2	;volatile
 54672   018276  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54673   018278  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54674   01827A                     
 54675                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 247:             SPI1TXB = 0xff;
 54676   01827A  0100               	movlb	0	; () banked
 54677   01827C  6981               	setf	129,b	;volatile
 54678   01827E                     l2363:
 54679   01827E  A0B1               	btfss	1201,0,c	;volatile
 54680   018280  EF44  F0C1         	goto	u27251
 54681   018284  EF46  F0C1         	goto	u27250
 54682   018288                     u27251:
 54683   018288  EF3F  F0C1         	goto	l2363
 54684   01828C                     u27250:
 54685   01828C                     
 54686                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 249:             *p++ = SPI1RXB;
 54687   01828C  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54688   018290  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54689   018294  C080 F4DF          	movff	128,indf2	;volatile
 54690   018298  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54691   01829A  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54692   01829C                     
 54693                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 250:             SPI1TXB = 0xff;
 54694   01829C  0100               	movlb	0	; () banked
 54695   01829E  6981               	setf	129,b	;volatile
 54696   0182A0                     l2366:
 54697   0182A0  A0B1               	btfss	1201,0,c	;volatile
 54698   0182A2  EF55  F0C1         	goto	u27261
 54699   0182A6  EF57  F0C1         	goto	u27260
 54700   0182AA                     u27261:
 54701   0182AA  EF50  F0C1         	goto	l2366
 54702   0182AE                     u27260:
 54703   0182AE                     
 54704                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 252:             *p++ = SPI1RXB;
 54705   0182AE  C510  F4D9         	movff	SPI_SD_receive@p,fsr2l
 54706   0182B2  C511  F4DA         	movff	SPI_SD_receive@p+1,fsr2h
 54707   0182B6  C080 F4DF          	movff	128,indf2	;volatile
 54708   0182BA  4A10               	infsnz	SPI_SD_receive@p^(0+1280),f,c
 54709   0182BC  2A11               	incf	(SPI_SD_receive@p+1)^(0+1280),f,c
 54710   0182BE                     
 54711                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 253:         }
 54712   0182BE  2A0F               	incf	SPI_SD_receive@i_3984^(0+1280),f,c
 54713   0182C0                     l20333:
 54714   0182C0  500C               	movf	SPI_SD_receive@repeat^(0+1280),w,c
 54715   0182C2  5C0F               	subwf	SPI_SD_receive@i_3984^(0+1280),w,c
 54716   0182C4  A0D8               	btfss	status,0,c
 54717   0182C6  EF67  F0C1         	goto	u27271
 54718   0182CA  EF69  F0C1         	goto	u27270
 54719   0182CE                     u27271:
 54720   0182CE  EFD7  F0C0         	goto	l2344
 54721   0182D2                     u27270:
 54722   0182D2                     l2370:
 54723   0182D2  A0B1               	btfss	1201,0,c	;volatile
 54724   0182D4  EF6E  F0C1         	goto	u27281
 54725   0182D8  EF70  F0C1         	goto	u27280
 54726   0182DC                     u27281:
 54727   0182DC  EF69  F0C1         	goto	l2370
 54728   0182E0                     u27280:
 54729   0182E0  EF43  F0C0         	goto	l20237
 54730   0182E4                     l2308:
 54731   0182E4  0012               	return		;funcret
 54732   0182E6                     __end_of_SPI_SD_receive:
 54733                           	callstack 0
 54734                           
 54735 ;; *************** function _SPI_SD_begin_transaction *****************
 54736 ;; Defined at:
 54737 ;;		line 134 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 54738 ;; Parameters:    Size  Location     Type
 54739 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 54740 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54741 ;; Auto vars:     Size  Location     Type
 54742 ;;		None
 54743 ;; Return value:  Size  Location     Type
 54744 ;;                  1    wreg      void 
 54745 ;; Registers used:
 54746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 54747 ;; Tracked objects:
 54748 ;;		On entry : 0/0
 54749 ;;		On exit  : 0/0
 54750 ;;		Unchanged: 0/0
 54751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54756 ;;Total ram usage:        2 bytes
 54757 ;; Hardware stack levels used: 1
 54758 ;; Hardware stack levels required when called: 2
 54759 ;; This function calls:
 54760 ;;		_SPI_SD_select
 54761 ;;		_acquire_bus
 54762 ;; This function is called by:
 54763 ;;		_SDCard_init
 54764 ;;		___SDCard_command_r1
 54765 ;; This function uses a non-reentrant model
 54766 ;;
 54767                           
 54768                           	psect	text155
 54769   000130                     __ptext155:
 54770                           	callstack 0
 54771   000130                     _SPI_SD_begin_transaction:
 54772                           	callstack 111
 54773   000130                     
 54774                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 134: void SPI_SD_begin_transaction(struc
      +                          t SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 135: {;../src/boards/../../d
      +                          rivers/pic18f57q43_spi.c: 136:     acquire_bus(ctx_);
 54775   000130  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,acquire_bus@ctx_
 54776   000134  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,acquire_bus@ctx_+1
 54777   000138  EC5D  F0FC         	call	_acquire_bus	;wreg free
 54778   00013C                     
 54779                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 137:     SPI_SD_select(ctx_, 1);
 54780   00013C  C508  F504         	movff	SPI_SD_begin_transaction@ctx_,SPI_SD_select@ctx_
 54781   000140  C509  F505         	movff	SPI_SD_begin_transaction@ctx_+1,SPI_SD_select@ctx_+1
 54782   000144  0E00               	movlw	0
 54783   000146  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 54784   000148  0E01               	movlw	1
 54785   00014A  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 54786   00014C  ECFB  F000         	call	_SPI_SD_select	;wreg free
 54787   000150  0012               	return		;funcret
 54788   000152                     __end_of_SPI_SD_begin_transaction:
 54789                           	callstack 0
 54790                           
 54791 ;; *************** function _SDCard_crc *****************
 54792 ;; Defined at:
 54793 ;;		line 334 in file "../src/boards/../../drivers/SDCard.c"
 54794 ;; Parameters:    Size  Location     Type
 54795 ;;  buf             2    3[COMRAM] PTR const void 
 54796 ;;		 -> __SDCard_command_r1@buf(6), 
 54797 ;;  count           2    5[COMRAM] unsigned int 
 54798 ;; Auto vars:     Size  Location     Type
 54799 ;;  i               2    9[COMRAM] int 
 54800 ;;  p               2   12[COMRAM] PTR unsigned char 
 54801 ;;		 -> __SDCard_command_r1@buf(6), 
 54802 ;;  endp            2    7[COMRAM] PTR unsigned char 
 54803 ;;		 -> __SDCard_command_r1@buf(6), 
 54804 ;;  crc             1   11[COMRAM] unsigned char 
 54805 ;; Return value:  Size  Location     Type
 54806 ;;                  1    wreg      unsigned char 
 54807 ;; Registers used:
 54808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54809 ;; Tracked objects:
 54810 ;;		On entry : 0/0
 54811 ;;		On exit  : 0/0
 54812 ;;		Unchanged: 0/0
 54813 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54815 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54817 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54818 ;;Total ram usage:       11 bytes
 54819 ;; Hardware stack levels used: 1
 54820 ;; Hardware stack levels required when called: 1
 54821 ;; This function calls:
 54822 ;;		Nothing
 54823 ;; This function is called by:
 54824 ;;		___SDCard_command_r1
 54825 ;; This function uses a non-reentrant model
 54826 ;;
 54827                           
 54828                           	psect	text156
 54829   01F1F2                     __ptext156:
 54830                           	callstack 0
 54831   01F1F2                     _SDCard_crc:
 54832                           	callstack 112
 54833   01F1F2                     
 54834                           ;../src/boards/../../drivers/SDCard.c: 334: uint8_t SDCard_crc(const void *buf, unsigned
      +                           int count);../src/boards/../../drivers/SDCard.c: 335: {;../src/boards/../../drivers/SDC
      +                          ard.c: 336:     uint8_t crc = 0;
 54835   01F1F2  6A0C               	clrf	SDCard_crc@crc^(0+1280),c
 54836   01F1F4                     
 54837                           ;../src/boards/../../drivers/SDCard.c: 337:     uint8_t *p = (uint8_t*)buf;
 54838   01F1F4  C504  F50D         	movff	SDCard_crc@buf,SDCard_crc@p
 54839   01F1F8  C505  F50E         	movff	SDCard_crc@buf+1,SDCard_crc@p+1
 54840                           
 54841                           ;../src/boards/../../drivers/SDCard.c: 338:     uint8_t *endp = p + count;
 54842   01F1FC  5006               	movf	SDCard_crc@count^(0+1280),w,c
 54843   01F1FE  240D               	addwf	SDCard_crc@p^(0+1280),w,c
 54844   01F200  6E08               	movwf	SDCard_crc@endp^(0+1280),c
 54845   01F202  5007               	movf	(SDCard_crc@count+1)^(0+1280),w,c
 54846   01F204  200E               	addwfc	(SDCard_crc@p+1)^(0+1280),w,c
 54847   01F206  6E09               	movwf	(SDCard_crc@endp+1)^(0+1280),c
 54848                           
 54849                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 54850   01F208  EF2D  F0F9         	goto	l20615
 54851   01F20C                     l20599:
 54852                           
 54853                           ;../src/boards/../../drivers/SDCard.c: 341:         crc ^= *p++;
 54854   01F20C  C50D  F4D9         	movff	SDCard_crc@p,fsr2l
 54855   01F210  C50E  F4DA         	movff	SDCard_crc@p+1,fsr2h
 54856   01F214  50DF               	movf	indf2,w,c
 54857   01F216  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 54858   01F218  4A0D               	infsnz	SDCard_crc@p^(0+1280),f,c
 54859   01F21A  2A0E               	incf	(SDCard_crc@p+1)^(0+1280),f,c
 54860   01F21C                     
 54861                           ;../src/boards/../../drivers/SDCard.c: 342:         for (int i = 0; i < 8; i++) {
 54862   01F21C  0E00               	movlw	0
 54863   01F21E  6E0B               	movwf	(SDCard_crc@i+1)^(0+1280),c
 54864   01F220  0E00               	movlw	0
 54865   01F222  6E0A               	movwf	SDCard_crc@i^(0+1280),c
 54866   01F224                     l2532:
 54867                           
 54868                           ;../src/boards/../../drivers/SDCard.c: 343:             if (crc & 0x80)
 54869   01F224  AE0C               	btfss	SDCard_crc@crc^(0+1280),7,c
 54870   01F226  EF17  F0F9         	goto	u27551
 54871   01F22A  EF19  F0F9         	goto	u27550
 54872   01F22E                     u27551:
 54873   01F22E  EF1B  F0F9         	goto	l2534
 54874   01F232                     u27550:
 54875   01F232                     
 54876                           ;../src/boards/../../drivers/SDCard.c: 344:                 crc ^= 0x89;
 54877   01F232  0E89               	movlw	137
 54878   01F234  1A0C               	xorwf	SDCard_crc@crc^(0+1280),f,c
 54879   01F236                     l2534:
 54880                           
 54881                           ;../src/boards/../../drivers/SDCard.c: 345:             crc <<= 1;
 54882   01F236  90D8               	bcf	status,0,c
 54883   01F238  360C               	rlcf	SDCard_crc@crc^(0+1280),f,c
 54884   01F23A                     
 54885                           ;../src/boards/../../drivers/SDCard.c: 346:         }
 54886   01F23A  4A0A               	infsnz	SDCard_crc@i^(0+1280),f,c
 54887   01F23C  2A0B               	incf	(SDCard_crc@i+1)^(0+1280),f,c
 54888   01F23E  BE0B               	btfsc	(SDCard_crc@i+1)^(0+1280),7,c
 54889   01F240  EF2B  F0F9         	goto	u27561
 54890   01F244  500B               	movf	(SDCard_crc@i+1)^(0+1280),w,c
 54891   01F246  E109               	bnz	u27560
 54892   01F248  0E08               	movlw	8
 54893   01F24A  5C0A               	subwf	SDCard_crc@i^(0+1280),w,c
 54894   01F24C  A0D8               	btfss	status,0,c
 54895   01F24E  EF2B  F0F9         	goto	u27561
 54896   01F252  EF2D  F0F9         	goto	u27560
 54897   01F256                     u27561:
 54898   01F256  EF12  F0F9         	goto	l2532
 54899   01F25A                     u27560:
 54900   01F25A                     l20615:
 54901                           
 54902                           ;../src/boards/../../drivers/SDCard.c: 340:     while (p < endp) {
 54903   01F25A  5008               	movf	SDCard_crc@endp^(0+1280),w,c
 54904   01F25C  5C0D               	subwf	SDCard_crc@p^(0+1280),w,c
 54905   01F25E  5009               	movf	(SDCard_crc@endp+1)^(0+1280),w,c
 54906   01F260  580E               	subwfb	(SDCard_crc@p+1)^(0+1280),w,c
 54907   01F262  A0D8               	btfss	status,0,c
 54908   01F264  EF36  F0F9         	goto	u27571
 54909   01F268  EF38  F0F9         	goto	u27570
 54910   01F26C                     u27571:
 54911   01F26C  EF06  F0F9         	goto	l20599
 54912   01F270                     u27570:
 54913   01F270                     
 54914                           ;../src/boards/../../drivers/SDCard.c: 349:     return crc;
 54915   01F270  500C               	movf	SDCard_crc@crc^(0+1280),w,c
 54916   01F272  0012               	return		;funcret
 54917   01F274                     __end_of_SDCard_crc:
 54918                           	callstack 0
 54919                           
 54920 ;; *************** function _SDCard_end_transaction *****************
 54921 ;; Defined at:
 54922 ;;		line 46 in file "../src/boards/../../drivers/SDCard.c"
 54923 ;; Parameters:    Size  Location     Type
 54924 ;;		None
 54925 ;; Auto vars:     Size  Location     Type
 54926 ;;  spi             2   20[COMRAM] PTR struct SPI
 54927 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54928 ;; Return value:  Size  Location     Type
 54929 ;;                  1    wreg      void 
 54930 ;; Registers used:
 54931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 54932 ;; Tracked objects:
 54933 ;;		On entry : 0/0
 54934 ;;		On exit  : 0/0
 54935 ;;		Unchanged: 0/0
 54936 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 54941 ;;Total ram usage:        2 bytes
 54942 ;; Hardware stack levels used: 1
 54943 ;; Hardware stack levels required when called: 3
 54944 ;; This function calls:
 54945 ;;		_SPI_SD_dummy_clocks
 54946 ;;		_SPI_SD_end_transaction
 54947 ;; This function is called by:
 54948 ;;		_SDCard_init
 54949 ;;		_SDCard_read512
 54950 ;;		_SDCard_write512
 54951 ;;		_SDCard_command
 54952 ;; This function uses a non-reentrant model
 54953 ;;
 54954                           
 54955                           	psect	text157
 54956   01FF62                     __ptext157:
 54957                           	callstack 0
 54958   01FF62                     _SDCard_end_transaction:
 54959                           	callstack 111
 54960   01FF62                     
 54961                           ;../src/boards/../../drivers/SDCard.c: 48:     struct SPI *spi = ctx_.spi;
 54962   01FF62  C7A8  F515         	movff	_ctx_,SDCard_end_transaction@spi
 54963   01FF66  C7A9  F516         	movff	_ctx_+1,SDCard_end_transaction@spi+1
 54964   01FF6A                     
 54965                           ;../src/boards/../../drivers/SDCard.c: 49:     SPI_SD_end_transaction(spi);
 54966   01FF6A  C515  F508         	movff	SDCard_end_transaction@spi,SPI_SD_end_transaction@ctx_
 54967   01FF6E  C516  F509         	movff	SDCard_end_transaction@spi+1,SPI_SD_end_transaction@ctx_+1
 54968   01FF72  ECA9  F000         	call	_SPI_SD_end_transaction	;wreg free
 54969   01FF76                     
 54970                           ;../src/boards/../../drivers/SDCard.c: 50:     SPI_SD_dummy_clocks(spi, 1);
 54971   01FF76  C515  F50E         	movff	SDCard_end_transaction@spi,SPI_SD_dummy_clocks@ctx_
 54972   01FF7A  C516  F50F         	movff	SDCard_end_transaction@spi+1,SPI_SD_dummy_clocks@ctx_+1
 54973   01FF7E  0E00               	movlw	0
 54974   01FF80  6E11               	movwf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),c
 54975   01FF82  0E01               	movlw	1
 54976   01FF84  6E10               	movwf	SPI_SD_dummy_clocks@clocks^(0+1280),c
 54977   01FF86  ECAC  F0FB         	call	_SPI_SD_dummy_clocks	;wreg free
 54978   01FF8A  0012               	return		;funcret
 54979   01FF8C                     __end_of_SDCard_end_transaction:
 54980                           	callstack 0
 54981                           
 54982 ;; *************** function _SPI_SD_end_transaction *****************
 54983 ;; Defined at:
 54984 ;;		line 140 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 54985 ;; Parameters:    Size  Location     Type
 54986 ;;  ctx_            2    7[COMRAM] PTR struct SPI
 54987 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 54988 ;; Auto vars:     Size  Location     Type
 54989 ;;		None
 54990 ;; Return value:  Size  Location     Type
 54991 ;;                  1    wreg      void 
 54992 ;; Registers used:
 54993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 54994 ;; Tracked objects:
 54995 ;;		On entry : 0/0
 54996 ;;		On exit  : 0/0
 54997 ;;		Unchanged: 0/0
 54998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 54999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55003 ;;Total ram usage:        2 bytes
 55004 ;; Hardware stack levels used: 1
 55005 ;; Hardware stack levels required when called: 2
 55006 ;; This function calls:
 55007 ;;		_SPI_SD_select
 55008 ;;		_release_bus
 55009 ;; This function is called by:
 55010 ;;		_SDCard_end_transaction
 55011 ;; This function uses a non-reentrant model
 55012 ;;
 55013                           
 55014                           	psect	text158
 55015   000152                     __ptext158:
 55016                           	callstack 0
 55017   000152                     _SPI_SD_end_transaction:
 55018                           	callstack 111
 55019   000152                     
 55020                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 140: void SPI_SD_end_transaction(struct 
      +                          SPI *ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 141: {;../src/boards/../../dri
      +                          vers/pic18f57q43_spi.c: 142:     SPI_SD_select(ctx_, 0);
 55021   000152  C508  F504         	movff	SPI_SD_end_transaction@ctx_,SPI_SD_select@ctx_
 55022   000156  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,SPI_SD_select@ctx_+1
 55023   00015A  0E00               	movlw	0
 55024   00015C  6E07               	movwf	(SPI_SD_select@select+1)^(0+1280),c
 55025   00015E  0E00               	movlw	0
 55026   000160  6E06               	movwf	SPI_SD_select@select^(0+1280),c
 55027   000162  ECFB  F000         	call	_SPI_SD_select	;wreg free
 55028   000166                     
 55029                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 143:     release_bus(ctx_);
 55030   000166  C508  F504         	movff	SPI_SD_end_transaction@ctx_,release_bus@ctx_
 55031   00016A  C509  F505         	movff	SPI_SD_end_transaction@ctx_+1,release_bus@ctx_+1
 55032   00016E  EC63  F0FE         	call	_release_bus	;wreg free
 55033   000172  0012               	return		;funcret
 55034   000174                     __end_of_SPI_SD_end_transaction:
 55035                           	callstack 0
 55036                           
 55037 ;; *************** function _SPI_SD_select *****************
 55038 ;; Defined at:
 55039 ;;		line 276 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 55040 ;; Parameters:    Size  Location     Type
 55041 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 55042 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55043 ;;  select          2    5[COMRAM] int 
 55044 ;; Auto vars:     Size  Location     Type
 55045 ;;		None
 55046 ;; Return value:  Size  Location     Type
 55047 ;;                  1    wreg      void 
 55048 ;; Registers used:
 55049 ;;		wreg, status,2, status,0
 55050 ;; Tracked objects:
 55051 ;;		On entry : 0/0
 55052 ;;		On exit  : 0/0
 55053 ;;		Unchanged: 0/0
 55054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55059 ;;Total ram usage:        4 bytes
 55060 ;; Hardware stack levels used: 1
 55061 ;; Hardware stack levels required when called: 1
 55062 ;; This function calls:
 55063 ;;		Nothing
 55064 ;; This function is called by:
 55065 ;;		_SPI_SD_begin_transaction
 55066 ;;		_SPI_SD_end_transaction
 55067 ;; This function uses a non-reentrant model
 55068 ;;
 55069                           
 55070                           	psect	text159
 55071   0001F6                     __ptext159:
 55072                           	callstack 0
 55073   0001F6                     _SPI_SD_select:
 55074                           	callstack 111
 55075   0001F6                     
 55076                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 276: void SPI_SD_select(struct SPI *ctx_
      +                          , int select);../src/boards/../../drivers/pic18f57q43_spi.c: 277: {;../src/boards/../../
      +                          drivers/pic18f57q43_spi.c: 278:     LATE2 = select ? 0 : 1;
 55077   0001F6  5006               	movf	SPI_SD_select@select^(0+1280),w,c
 55078   0001F8  1007               	iorwf	(SPI_SD_select@select+1)^(0+1280),w,c
 55079   0001FA  B4D8               	btfsc	status,2,c
 55080   0001FC  EF02  F001         	goto	u27451
 55081   000200  EF05  F001         	goto	u27450
 55082   000204                     u27451:
 55083   000204  84C2               	bsf	1218,2,c	;volatile
 55084   000206  EF06  F001         	goto	u27465
 55085   00020A                     u27450:
 55086   00020A  94C2               	bcf	1218,2,c	;volatile
 55087   00020C                     u27465:
 55088   00020C  0012               	return		;funcret
 55089   00020E                     __end_of_SPI_SD_select:
 55090                           	callstack 0
 55091                           
 55092 ;; *************** function _SPI_SD_dummy_clocks *****************
 55093 ;; Defined at:
 55094 ;;		line 259 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 55095 ;; Parameters:    Size  Location     Type
 55096 ;;  ctx_            2   13[COMRAM] PTR struct SPI
 55097 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55098 ;;  clocks          2   15[COMRAM] unsigned int 
 55099 ;; Auto vars:     Size  Location     Type
 55100 ;;  i               2   17[COMRAM] int 
 55101 ;;  dummy           1   19[COMRAM] unsigned char 
 55102 ;; Return value:  Size  Location     Type
 55103 ;;                  1    wreg      void 
 55104 ;; Registers used:
 55105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 55106 ;; Tracked objects:
 55107 ;;		On entry : 0/0
 55108 ;;		On exit  : 0/0
 55109 ;;		Unchanged: 0/0
 55110 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55112 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55115 ;;Total ram usage:        7 bytes
 55116 ;; Hardware stack levels used: 1
 55117 ;; Hardware stack levels required when called: 2
 55118 ;; This function calls:
 55119 ;;		_SPI_SD_send
 55120 ;;		_acquire_bus
 55121 ;;		_release_bus
 55122 ;; This function is called by:
 55123 ;;		_SDCard_end_transaction
 55124 ;;		_SDCard_init
 55125 ;;		___SDCard_command_r1
 55126 ;;		_SDCard_write512
 55127 ;; This function uses a non-reentrant model
 55128 ;;
 55129                           
 55130                           	psect	text160
 55131   01F758                     __ptext160:
 55132                           	callstack 0
 55133   01F758                     _SPI_SD_dummy_clocks:
 55134                           	callstack 111
 55135   01F758                     
 55136                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 259: void SPI_SD_dummy_clocks(struct SPI
      +                           *ctx_, unsigned int clocks);../src/boards/../../drivers/pic18f57q43_spi.c: 260: {;../sr
      +                          c/boards/../../drivers/pic18f57q43_spi.c: 261:     uint8_t dummy = 0xff;
 55137   01F758  6814               	setf	SPI_SD_dummy_clocks@dummy^(0+1280),c
 55138   01F75A                     
 55139                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 262:     acquire_bus(ctx_);
 55140   01F75A  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,acquire_bus@ctx_
 55141   01F75E  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,acquire_bus@ctx_+1
 55142   01F762  EC5D  F0FC         	call	_acquire_bus	;wreg free
 55143   01F766                     
 55144                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 263:     for (int i = 0; i < clocks; i++
      +                          ) {
 55145   01F766  0E00               	movlw	0
 55146   01F768  6E13               	movwf	(SPI_SD_dummy_clocks@i+1)^(0+1280),c
 55147   01F76A  0E00               	movlw	0
 55148   01F76C  6E12               	movwf	SPI_SD_dummy_clocks@i^(0+1280),c
 55149   01F76E  EFC9  F0FB         	goto	l20579
 55150   01F772                     l20575:
 55151                           
 55152                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 264:         SPI_SD_send(ctx_, &dummy, 1
      +                          );
 55153   01F772  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,SPI_SD_send@ctx_
 55154   01F776  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,SPI_SD_send@ctx_+1
 55155   01F77A  0E14               	movlw	low SPI_SD_dummy_clocks@dummy
 55156   01F77C  6E06               	movwf	SPI_SD_send@buf^(0+1280),c
 55157   01F77E  0E05               	movlw	high SPI_SD_dummy_clocks@dummy
 55158   01F780  6E07               	movwf	(SPI_SD_send@buf+1)^(0+1280),c
 55159   01F782  0E00               	movlw	0
 55160   01F784  6E09               	movwf	(SPI_SD_send@count+1)^(0+1280),c
 55161   01F786  0E01               	movlw	1
 55162   01F788  6E08               	movwf	SPI_SD_send@count^(0+1280),c
 55163   01F78A  EC56  F0F7         	call	_SPI_SD_send	;wreg free
 55164   01F78E                     
 55165                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 265:     }
 55166   01F78E  4A12               	infsnz	SPI_SD_dummy_clocks@i^(0+1280),f,c
 55167   01F790  2A13               	incf	(SPI_SD_dummy_clocks@i+1)^(0+1280),f,c
 55168   01F792                     l20579:
 55169   01F792  5010               	movf	SPI_SD_dummy_clocks@clocks^(0+1280),w,c
 55170   01F794  5C12               	subwf	SPI_SD_dummy_clocks@i^(0+1280),w,c
 55171   01F796  5011               	movf	(SPI_SD_dummy_clocks@clocks+1)^(0+1280),w,c
 55172   01F798  5813               	subwfb	(SPI_SD_dummy_clocks@i+1)^(0+1280),w,c
 55173   01F79A  A0D8               	btfss	status,0,c
 55174   01F79C  EFD2  F0FB         	goto	u27521
 55175   01F7A0  EFD4  F0FB         	goto	u27520
 55176   01F7A4                     u27521:
 55177   01F7A4  EFB9  F0FB         	goto	l20575
 55178   01F7A8                     u27520:
 55179   01F7A8                     
 55180                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 266:     release_bus(ctx_);
 55181   01F7A8  C50E  F504         	movff	SPI_SD_dummy_clocks@ctx_,release_bus@ctx_
 55182   01F7AC  C50F  F505         	movff	SPI_SD_dummy_clocks@ctx_+1,release_bus@ctx_+1
 55183   01F7B0  EC63  F0FE         	call	_release_bus	;wreg free
 55184   01F7B4  0012               	return		;funcret
 55185   01F7B6                     __end_of_SPI_SD_dummy_clocks:
 55186                           	callstack 0
 55187                           
 55188 ;; *************** function _release_bus *****************
 55189 ;; Defined at:
 55190 ;;		line 55 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 55191 ;; Parameters:    Size  Location     Type
 55192 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 55193 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55194 ;; Auto vars:     Size  Location     Type
 55195 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 55196 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55197 ;; Return value:  Size  Location     Type
 55198 ;;                  1    wreg      void 
 55199 ;; Registers used:
 55200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55201 ;; Tracked objects:
 55202 ;;		On entry : 0/0
 55203 ;;		On exit  : 0/0
 55204 ;;		Unchanged: 0/0
 55205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55210 ;;Total ram usage:        4 bytes
 55211 ;; Hardware stack levels used: 1
 55212 ;; Hardware stack levels required when called: 1
 55213 ;; This function calls:
 55214 ;;		Nothing
 55215 ;; This function is called by:
 55216 ;;		_SPI_SD_end_transaction
 55217 ;;		_SPI_SD_dummy_clocks
 55218 ;; This function uses a non-reentrant model
 55219 ;;
 55220                           
 55221                           	psect	text161
 55222   01FCC6                     __ptext161:
 55223                           	callstack 0
 55224   01FCC6                     _release_bus:
 55225                           	callstack 111
 55226   01FCC6                     
 55227                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 55: static void release_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 56: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 57:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 55228   01FCC6  C504  F506         	movff	release_bus@ctx_,release_bus@ctx
 55229   01FCCA  C505  F507         	movff	release_bus@ctx_+1,release_bus@ctx+1
 55230   01FCCE                     
 55231                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 58:     if (--ctx->bus_acquired <= 0) {
 55232   01FCCE  EE20 F002          	lfsr	2,2
 55233   01FCD2  5006               	movf	release_bus@ctx^(0+1280),w,c
 55234   01FCD4  26D9               	addwf	fsr2l,f,c
 55235   01FCD6  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 55236   01FCD8  22DA               	addwfc	fsr2h,f,c
 55237   01FCDA  06DF               	decf	indf2,f,c
 55238   01FCDC  50DF               	movf	indf2,w,c
 55239   01FCDE  A4D8               	btfss	status,2,c
 55240   01FCE0  EF74  F0FE         	goto	u27441
 55241   01FCE4  EF76  F0FE         	goto	u27440
 55242   01FCE8                     u27441:
 55243   01FCE8  EF81  F0FE         	goto	l2262
 55244   01FCEC                     u27440:
 55245   01FCEC                     
 55246                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 59:         RB1PPS = 0x00;
 55247   01FCEC  0102               	movlb	2	; () banked
 55248   01FCEE  6B0A               	clrf	10,b	;volatile
 55249                           
 55250                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 60:         RB0PPS = 0x00;
 55251   01FCF0  6B09               	clrf	9,b	;volatile
 55252   01FCF2                     
 55253                           ; BSR set to: 2
 55254                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 61:         TRISB = ctx->tris;
 55255   01FCF2  EE20 F003          	lfsr	2,3
 55256   01FCF6  5006               	movf	release_bus@ctx^(0+1280),w,c
 55257   01FCF8  26D9               	addwf	fsr2l,f,c
 55258   01FCFA  5007               	movf	(release_bus@ctx+1)^(0+1280),w,c
 55259   01FCFC  22DA               	addwfc	fsr2h,f,c
 55260   01FCFE  50DF               	movf	indf2,w,c
 55261   01FD00  6EC7               	movwf	199,c	;volatile
 55262   01FD02                     l2262:
 55263   01FD02  0012               	return		;funcret
 55264   01FD04                     __end_of_release_bus:
 55265                           	callstack 0
 55266                           
 55267 ;; *************** function _acquire_bus *****************
 55268 ;; Defined at:
 55269 ;;		line 39 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 55270 ;; Parameters:    Size  Location     Type
 55271 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 55272 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55273 ;; Auto vars:     Size  Location     Type
 55274 ;;  ctx             2    5[COMRAM] PTR struct SPI_HW
 55275 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55276 ;; Return value:  Size  Location     Type
 55277 ;;                  1    wreg      void 
 55278 ;; Registers used:
 55279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55280 ;; Tracked objects:
 55281 ;;		On entry : 0/0
 55282 ;;		On exit  : 0/0
 55283 ;;		Unchanged: 0/0
 55284 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55289 ;;Total ram usage:        4 bytes
 55290 ;; Hardware stack levels used: 1
 55291 ;; Hardware stack levels required when called: 1
 55292 ;; This function calls:
 55293 ;;		Nothing
 55294 ;; This function is called by:
 55295 ;;		_SPI_SD_begin_transaction
 55296 ;;		_SPI_SD_dummy_clocks
 55297 ;; This function uses a non-reentrant model
 55298 ;;
 55299                           
 55300                           	psect	text162
 55301   01F8BA                     __ptext162:
 55302                           	callstack 0
 55303   01F8BA                     _acquire_bus:
 55304                           	callstack 111
 55305   01F8BA                     
 55306                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 39: static void acquire_bus(struct SPI *
      +                          ctx_);../src/boards/../../drivers/pic18f57q43_spi.c: 40: {;../src/boards/../../drivers/p
      +                          ic18f57q43_spi.c: 41:     struct SPI_HW *ctx = (struct SPI_HW *)ctx_;
 55307   01F8BA  C504  F506         	movff	acquire_bus@ctx_,acquire_bus@ctx
 55308   01F8BE  C505  F507         	movff	acquire_bus@ctx_+1,acquire_bus@ctx+1
 55309   01F8C2                     
 55310                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 42:     if (ctx->bus_acquired == 0) {
 55311   01F8C2  EE20 F002          	lfsr	2,2
 55312   01F8C6  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 55313   01F8C8  26D9               	addwf	fsr2l,f,c
 55314   01F8CA  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 55315   01F8CC  22DA               	addwfc	fsr2h,f,c
 55316   01F8CE  50DF               	movf	indf2,w,c
 55317   01F8D0  A4D8               	btfss	status,2,c
 55318   01F8D2  EF6D  F0FC         	goto	u27431
 55319   01F8D6  EF6F  F0FC         	goto	u27430
 55320   01F8DA                     u27431:
 55321   01F8DA  EF7F  F0FC         	goto	l20503
 55322   01F8DE                     u27430:
 55323   01F8DE                     
 55324                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 43:         RB1PPS = 0x31;
 55325   01F8DE  0E31               	movlw	49
 55326   01F8E0  0102               	movlb	2	; () banked
 55327   01F8E2  6F0A               	movwf	10,b	;volatile
 55328                           
 55329                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 45:         RB0PPS = 0x32;
 55330   01F8E4  0E32               	movlw	50
 55331   01F8E6  6F09               	movwf	9,b	;volatile
 55332   01F8E8                     
 55333                           ; BSR set to: 2
 55334                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 47:         ctx->tris = TRISB;
 55335   01F8E8  EE20 F003          	lfsr	2,3
 55336   01F8EC  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 55337   01F8EE  26D9               	addwf	fsr2l,f,c
 55338   01F8F0  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 55339   01F8F2  22DA               	addwfc	fsr2h,f,c
 55340   01F8F4  C4C7 F4DF          	movff	1223,indf2	;volatile
 55341   01F8F8                     
 55342                           ; BSR set to: 2
 55343                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 48:         TRISB0 = 0;
 55344   01F8F8  90C7               	bcf	1223,0,c	;volatile
 55345   01F8FA                     
 55346                           ; BSR set to: 2
 55347                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 49:         TRISB1 = 0;
 55348   01F8FA  92C7               	bcf	1223,1,c	;volatile
 55349   01F8FC                     
 55350                           ; BSR set to: 2
 55351                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 50:         TRISB2 = 1;
 55352   01F8FC  84C7               	bsf	1223,2,c	;volatile
 55353   01F8FE                     l20503:
 55354                           
 55355                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 52:     ctx->bus_acquired++;
 55356   01F8FE  EE20 F002          	lfsr	2,2
 55357   01F902  5006               	movf	acquire_bus@ctx^(0+1280),w,c
 55358   01F904  26D9               	addwf	fsr2l,f,c
 55359   01F906  5007               	movf	(acquire_bus@ctx+1)^(0+1280),w,c
 55360   01F908  22DA               	addwfc	fsr2h,f,c
 55361   01F90A  2ADF               	incf	indf2,f,c
 55362   01F90C  0012               	return		;funcret
 55363   01F90E                     __end_of_acquire_bus:
 55364                           	callstack 0
 55365                           
 55366 ;; *************** function _SPI_SD_send *****************
 55367 ;; Defined at:
 55368 ;;		line 164 in file "../src/boards/../../drivers/pic18f57q43_spi.c"
 55369 ;; Parameters:    Size  Location     Type
 55370 ;;  ctx_            2    3[COMRAM] PTR struct SPI
 55371 ;;		 -> pic18f47q43_spi_ctx(4), NULL(0), 
 55372 ;;  buf             2    5[COMRAM] PTR const void 
 55373 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 55374 ;;		 -> SDCard_write512@response(1), __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), in_fl(546), 
 55375 ;;		 -> fs(564), rom_fl(546), disk_buf(128), f_printf@pb(70), 
 55376 ;;		 -> f_puts@pb(70), f_putc@pb(70), NULL(0), 
 55377 ;;  count           2    7[COMRAM] unsigned int 
 55378 ;; Auto vars:     Size  Location     Type
 55379 ;;  i               2    9[COMRAM] int 
 55380 ;;  p               2   11[COMRAM] PTR unsigned char 
 55381 ;;		 -> rom_fl$buf(512), in_fl$buf(512), pb$buf(64), fs$win(512), 
 55382 ;;		 -> SDCard_write512@response(1), __SDCard_command_r1@buf(6), SPI_SD_dummy_clocks@dummy(1), in_fl(546), 
 55383 ;;		 -> fs(564), rom_fl(546), disk_buf(128), f_printf@pb(70), 
 55384 ;;		 -> f_puts@pb(70), f_putc@pb(70), NULL(0), 
 55385 ;;  dummy           1    0        unsigned char 
 55386 ;; Return value:  Size  Location     Type
 55387 ;;                  1    wreg      void 
 55388 ;; Registers used:
 55389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55390 ;; Tracked objects:
 55391 ;;		On entry : 0/0
 55392 ;;		On exit  : 0/0
 55393 ;;		Unchanged: 0/0
 55394 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55398 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55399 ;;Total ram usage:       10 bytes
 55400 ;; Hardware stack levels used: 1
 55401 ;; Hardware stack levels required when called: 1
 55402 ;; This function calls:
 55403 ;;		Nothing
 55404 ;; This function is called by:
 55405 ;;		_SPI_SD_dummy_clocks
 55406 ;;		___SDCard_command_r1
 55407 ;;		_SDCard_write512
 55408 ;; This function uses a non-reentrant model
 55409 ;;
 55410                           
 55411                           	psect	text163
 55412   01EEAC                     __ptext163:
 55413                           	callstack 0
 55414   01EEAC                     _SPI_SD_send:
 55415                           	callstack 112
 55416   01EEAC                     
 55417                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 164: void SPI_SD_send(struct SPI *ctx_, 
      +                          const void *buf, unsigned int count);../src/boards/../../drivers/pic18f57q43_spi.c: 165:
      +                           {;../src/boards/../../drivers/pic18f57q43_spi.c: 166:     uint8_t *p = (uint8_t*)buf;
 55418   01EEAC  C506  F50C         	movff	SPI_SD_send@buf,SPI_SD_send@p
 55419   01EEB0  C507  F50D         	movff	SPI_SD_send@buf+1,SPI_SD_send@p+1
 55420                           
 55421                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 167:     uint8_t dummy;;../src/boards/..
      +                          /../drivers/pic18f57q43_spi.c: 169:     if (count == 0)
 55422   01EEB4  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 55423   01EEB6  1009               	iorwf	(SPI_SD_send@count+1)^(0+1280),w,c
 55424   01EEB8  A4D8               	btfss	status,2,c
 55425   01EEBA  EF61  F0F7         	goto	u27471
 55426   01EEBE  EF63  F0F7         	goto	u27470
 55427   01EEC2                     u27471:
 55428   01EEC2  EF65  F0F7         	goto	l20519
 55429   01EEC6                     u27470:
 55430   01EEC6  EF9F  F0F7         	goto	l2295
 55431   01EECA                     l20519:
 55432                           
 55433                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 172:     SPI1TCNTH = (count >> 8);
 55434   01EECA  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 55435   01EECC  0100               	movlb	0	; () banked
 55436   01EECE  6F83               	movwf	131,b	;volatile
 55437   01EED0                     
 55438                           ; BSR set to: 0
 55439                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 173:     SPI1TCNTL = (count & 0xff);
 55440   01EED0  C508  F082         	movff	SPI_SD_send@count,130	;volatile
 55441   01EED4                     
 55442                           ; BSR set to: 0
 55443                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 175:     SPI1TXB = *p++;
 55444   01EED4  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 55445   01EED8  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 55446   01EEDC  50DF               	movf	indf2,w,c
 55447   01EEDE  6F81               	movwf	129,b	;volatile
 55448   01EEE0                     
 55449                           ; BSR set to: 0
 55450   01EEE0  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 55451   01EEE2  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 55452   01EEE4                     
 55453                           ; BSR set to: 0
 55454                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 176:     for (int i = 1; i < count; i++)
      +                           {
 55455   01EEE4  0E00               	movlw	0
 55456   01EEE6  6E0B               	movwf	(SPI_SD_send@i+1)^(0+1280),c
 55457   01EEE8  0E01               	movlw	1
 55458   01EEEA  6E0A               	movwf	SPI_SD_send@i^(0+1280),c
 55459   01EEEC  EF8B  F0F7         	goto	l20535
 55460   01EEF0                     l20529:
 55461                           
 55462                           ; BSR set to: 0
 55463                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 177:         SPI1TXB = *p++;
 55464   01EEF0  C50C  F4D9         	movff	SPI_SD_send@p,fsr2l
 55465   01EEF4  C50D  F4DA         	movff	SPI_SD_send@p+1,fsr2h
 55466   01EEF8  50DF               	movf	indf2,w,c
 55467   01EEFA  6F81               	movwf	129,b	;volatile
 55468   01EEFC                     
 55469                           ; BSR set to: 0
 55470   01EEFC  4A0C               	infsnz	SPI_SD_send@p^(0+1280),f,c
 55471   01EEFE  2A0D               	incf	(SPI_SD_send@p+1)^(0+1280),f,c
 55472   01EF00                     l2298:
 55473   01EF00  A0B1               	btfss	1201,0,c	;volatile
 55474   01EF02  EF85  F0F7         	goto	u27481
 55475   01EF06  EF87  F0F7         	goto	u27480
 55476   01EF0A                     u27481:
 55477   01EF0A  EF80  F0F7         	goto	l2298
 55478   01EF0E                     u27480:
 55479   01EF0E  0100               	movlb	0	; () banked
 55480   01EF10  5180               	movf	128,w,b	;volatile
 55481   01EF12                     
 55482                           ; BSR set to: 0
 55483                           ;../src/boards/../../drivers/pic18f57q43_spi.c: 180:     }
 55484   01EF12  4A0A               	infsnz	SPI_SD_send@i^(0+1280),f,c
 55485   01EF14  2A0B               	incf	(SPI_SD_send@i+1)^(0+1280),f,c
 55486   01EF16                     l20535:
 55487                           
 55488                           ; BSR set to: 0
 55489   01EF16  5008               	movf	SPI_SD_send@count^(0+1280),w,c
 55490   01EF18  5C0A               	subwf	SPI_SD_send@i^(0+1280),w,c
 55491   01EF1A  5009               	movf	(SPI_SD_send@count+1)^(0+1280),w,c
 55492   01EF1C  580B               	subwfb	(SPI_SD_send@i+1)^(0+1280),w,c
 55493   01EF1E  A0D8               	btfss	status,0,c
 55494   01EF20  EF94  F0F7         	goto	u27491
 55495   01EF24  EF96  F0F7         	goto	u27490
 55496   01EF28                     u27491:
 55497   01EF28  EF78  F0F7         	goto	l20529
 55498   01EF2C                     u27490:
 55499   01EF2C                     l2302:
 55500   01EF2C  A0B1               	btfss	1201,0,c	;volatile
 55501   01EF2E  EF9B  F0F7         	goto	u27501
 55502   01EF32  EF9D  F0F7         	goto	u27500
 55503   01EF36                     u27501:
 55504   01EF36  EF96  F0F7         	goto	l2302
 55505   01EF3A                     u27500:
 55506   01EF3A  0100               	movlb	0	; () banked
 55507   01EF3C  5180               	movf	128,w,b	;volatile
 55508   01EF3E                     l2295:
 55509   01EF3E  0012               	return		;funcret
 55510   01EF40                     __end_of_SPI_SD_send:
 55511                           	callstack 0
 55512                           
 55513 ;; *************** function _ld_word *****************
 55514 ;; Defined at:
 55515 ;;		line 619 in file "../fatfs/ff.c"
 55516 ;; Parameters:    Size  Location     Type
 55517 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 55518 ;;		 -> fs$win(512), fs(564), NULL(0), 
 55519 ;; Auto vars:     Size  Location     Type
 55520 ;;  rv              2    8[COMRAM] unsigned short 
 55521 ;; Return value:  Size  Location     Type
 55522 ;;                  2    3[COMRAM] unsigned short 
 55523 ;; Registers used:
 55524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55525 ;; Tracked objects:
 55526 ;;		On entry : 0/0
 55527 ;;		On exit  : 0/0
 55528 ;;		Unchanged: 0/0
 55529 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55532 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55534 ;;Total ram usage:        7 bytes
 55535 ;; Hardware stack levels used: 1
 55536 ;; Hardware stack levels required when called: 1
 55537 ;; This function calls:
 55538 ;;		Nothing
 55539 ;; This function is called by:
 55540 ;;		_get_fat
 55541 ;;		_ld_clust
 55542 ;;		_get_fileinfo
 55543 ;;		_check_fs
 55544 ;;		_mount_volume
 55545 ;;		_f_getfree
 55546 ;; This function uses a non-reentrant model
 55547 ;;
 55548                           
 55549                           	psect	text164
 55550   01FE98                     __ptext164:
 55551                           	callstack 0
 55552   01FE98                     _ld_word:
 55553                           	callstack 117
 55554   01FE98                     
 55555                           ;../fatfs/ff.c: 619: static WORD ld_word (const BYTE* ptr);../fatfs/ff.c: 620: {;../fatf
      +                          s/ff.c: 621:  WORD rv;;../fatfs/ff.c: 623:  rv = ptr[1];
 55556   01FE98  EE20 F001          	lfsr	2,1
 55557   01FE9C  5004               	movf	ld_word@ptr^(0+1280),w,c
 55558   01FE9E  26D9               	addwf	fsr2l,f,c
 55559   01FEA0  5005               	movf	(ld_word@ptr+1)^(0+1280),w,c
 55560   01FEA2  22DA               	addwfc	fsr2h,f,c
 55561   01FEA4  50DF               	movf	indf2,w,c
 55562   01FEA6  6E06               	movwf	??_ld_word^(0+1280),c
 55563   01FEA8  5006               	movf	??_ld_word^(0+1280),w,c
 55564   01FEAA  6E09               	movwf	ld_word@rv^(0+1280),c
 55565   01FEAC  6A0A               	clrf	(ld_word@rv+1)^(0+1280),c
 55566                           
 55567                           ;../fatfs/ff.c: 624:  rv = rv << 8 | ptr[0];
 55568   01FEAE  C504  F4D9         	movff	ld_word@ptr,fsr2l
 55569   01FEB2  C505  F4DA         	movff	ld_word@ptr+1,fsr2h
 55570   01FEB6  50DF               	movf	indf2,w,c
 55571   01FEB8  6E06               	movwf	??_ld_word^(0+1280),c
 55572   01FEBA  5009               	movf	ld_word@rv^(0+1280),w,c
 55573   01FEBC  6E07               	movwf	(??_ld_word+1)^(0+1280),c
 55574   01FEBE  5006               	movf	??_ld_word^(0+1280),w,c
 55575   01FEC0  6E09               	movwf	ld_word@rv^(0+1280),c
 55576   01FEC2  C507  F50A         	movff	??_ld_word+1,ld_word@rv+1
 55577   01FEC6                     
 55578                           ;../fatfs/ff.c: 625:  return rv;
 55579   01FEC6  C509  F504         	movff	ld_word@rv,?_ld_word
 55580   01FECA  C50A  F505         	movff	ld_word@rv+1,?_ld_word+1
 55581   01FECE  0012               	return		;funcret
 55582   01FED0                     __end_of_ld_word:
 55583                           	callstack 0
 55584                           
 55585 ;; *************** function _ld_dword *****************
 55586 ;; Defined at:
 55587 ;;		line 628 in file "../fatfs/ff.c"
 55588 ;; Parameters:    Size  Location     Type
 55589 ;;  ptr             2    3[COMRAM] PTR const unsigned char 
 55590 ;;		 -> fs$win(512), fs(564), NULL(0), 
 55591 ;; Auto vars:     Size  Location     Type
 55592 ;;  rv              4   12[COMRAM] unsigned long 
 55593 ;; Return value:  Size  Location     Type
 55594 ;;                  4    3[COMRAM] unsigned long 
 55595 ;; Registers used:
 55596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55597 ;; Tracked objects:
 55598 ;;		On entry : 0/0
 55599 ;;		On exit  : 0/0
 55600 ;;		Unchanged: 0/0
 55601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55603 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55604 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55605 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55606 ;;Total ram usage:       13 bytes
 55607 ;; Hardware stack levels used: 1
 55608 ;; Hardware stack levels required when called: 1
 55609 ;; This function calls:
 55610 ;;		Nothing
 55611 ;; This function is called by:
 55612 ;;		_get_fat
 55613 ;;		_put_fat
 55614 ;;		_get_fileinfo
 55615 ;;		_check_fs
 55616 ;;		_find_volume
 55617 ;;		_mount_volume
 55618 ;;		_f_open
 55619 ;;		_f_getfree
 55620 ;; This function uses a non-reentrant model
 55621 ;;
 55622                           
 55623                           	psect	text165
 55624   01E58E                     __ptext165:
 55625                           	callstack 0
 55626   01E58E                     _ld_dword:
 55627                           	callstack 117
 55628   01E58E                     
 55629                           ;../fatfs/ff.c: 628: static DWORD ld_dword (const BYTE* ptr);../fatfs/ff.c: 629: {;../fa
      +                          tfs/ff.c: 630:  DWORD rv;;../fatfs/ff.c: 632:  rv = ptr[3];
 55630   01E58E  EE20 F003          	lfsr	2,3
 55631   01E592  5004               	movf	ld_dword@ptr^(0+1280),w,c
 55632   01E594  26D9               	addwf	fsr2l,f,c
 55633   01E596  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 55634   01E598  22DA               	addwfc	fsr2h,f,c
 55635   01E59A  50DF               	movf	indf2,w,c
 55636   01E59C  6E08               	movwf	??_ld_dword^(0+1280),c
 55637   01E59E  5008               	movf	??_ld_dword^(0+1280),w,c
 55638   01E5A0  6E0D               	movwf	ld_dword@rv^(0+1280),c
 55639   01E5A2  6A0E               	clrf	(ld_dword@rv+1)^(0+1280),c
 55640   01E5A4  6A0F               	clrf	(ld_dword@rv+2)^(0+1280),c
 55641   01E5A6  6A10               	clrf	(ld_dword@rv+3)^(0+1280),c
 55642                           
 55643                           ;../fatfs/ff.c: 633:  rv = rv << 8 | ptr[2];
 55644   01E5A8  EE20 F002          	lfsr	2,2
 55645   01E5AC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 55646   01E5AE  26D9               	addwf	fsr2l,f,c
 55647   01E5B0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 55648   01E5B2  22DA               	addwfc	fsr2h,f,c
 55649   01E5B4  50DF               	movf	indf2,w,c
 55650   01E5B6  6E08               	movwf	??_ld_dword^(0+1280),c
 55651   01E5B8  5008               	movf	??_ld_dword^(0+1280),w,c
 55652   01E5BA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 55653   01E5BE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 55654   01E5C2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 55655   01E5C6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 55656   01E5C8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 55657   01E5CA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 55658   01E5CC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 55659   01E5CE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 55660   01E5D0  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 55661   01E5D2  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 55662   01E5D4  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 55663   01E5D6  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 55664                           
 55665                           ;../fatfs/ff.c: 634:  rv = rv << 8 | ptr[1];
 55666   01E5D8  EE20 F001          	lfsr	2,1
 55667   01E5DC  5004               	movf	ld_dword@ptr^(0+1280),w,c
 55668   01E5DE  26D9               	addwf	fsr2l,f,c
 55669   01E5E0  5005               	movf	(ld_dword@ptr+1)^(0+1280),w,c
 55670   01E5E2  22DA               	addwfc	fsr2h,f,c
 55671   01E5E4  50DF               	movf	indf2,w,c
 55672   01E5E6  6E08               	movwf	??_ld_dword^(0+1280),c
 55673   01E5E8  5008               	movf	??_ld_dword^(0+1280),w,c
 55674   01E5EA  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 55675   01E5EE  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 55676   01E5F2  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 55677   01E5F6  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 55678   01E5F8  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 55679   01E5FA  6E0D               	movwf	ld_dword@rv^(0+1280),c
 55680   01E5FC  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 55681   01E5FE  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 55682   01E600  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 55683   01E602  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 55684   01E604  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 55685   01E606  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 55686                           
 55687                           ;../fatfs/ff.c: 635:  rv = rv << 8 | ptr[0];
 55688   01E608  C504  F4D9         	movff	ld_dword@ptr,fsr2l
 55689   01E60C  C505  F4DA         	movff	ld_dword@ptr+1,fsr2h
 55690   01E610  50DF               	movf	indf2,w,c
 55691   01E612  6E08               	movwf	??_ld_dword^(0+1280),c
 55692   01E614  5008               	movf	??_ld_dword^(0+1280),w,c
 55693   01E616  C50D  F50A         	movff	ld_dword@rv,??_ld_dword+2
 55694   01E61A  C50E  F50B         	movff	ld_dword@rv+1,??_ld_dword+3
 55695   01E61E  C50F  F50C         	movff	ld_dword@rv+2,??_ld_dword+4
 55696   01E622  6A09               	clrf	(??_ld_dword+1)^(0+1280),c
 55697   01E624  1009               	iorwf	(??_ld_dword+1)^(0+1280),w,c
 55698   01E626  6E0D               	movwf	ld_dword@rv^(0+1280),c
 55699   01E628  500A               	movf	(??_ld_dword+2)^(0+1280),w,c
 55700   01E62A  6E0E               	movwf	(ld_dword@rv+1)^(0+1280),c
 55701   01E62C  500B               	movf	(??_ld_dword+3)^(0+1280),w,c
 55702   01E62E  6E0F               	movwf	(ld_dword@rv+2)^(0+1280),c
 55703   01E630  500C               	movf	(??_ld_dword+4)^(0+1280),w,c
 55704   01E632  6E10               	movwf	(ld_dword@rv+3)^(0+1280),c
 55705   01E634                     
 55706                           ;../fatfs/ff.c: 636:  return rv;
 55707   01E634  C50D  F504         	movff	ld_dword@rv,?_ld_dword
 55708   01E638  C50E  F505         	movff	ld_dword@rv+1,?_ld_dword+1
 55709   01E63C  C50F  F506         	movff	ld_dword@rv+2,?_ld_dword+2
 55710   01E640  C510  F507         	movff	ld_dword@rv+3,?_ld_dword+3
 55711   01E644  0012               	return		;funcret
 55712   01E646                     __end_of_ld_dword:
 55713                           	callstack 0
 55714                           
 55715 ;; *************** function _clst2sect *****************
 55716 ;; Defined at:
 55717 ;;		line 1145 in file "../fatfs/ff.c"
 55718 ;; Parameters:    Size  Location     Type
 55719 ;;  fs              2   15[COMRAM] PTR struct .
 55720 ;;		 -> fs(564), NULL(0), 
 55721 ;;  clst            4   17[COMRAM] unsigned long 
 55722 ;; Auto vars:     Size  Location     Type
 55723 ;;		None
 55724 ;; Return value:  Size  Location     Type
 55725 ;;                  4   15[COMRAM] unsigned long 
 55726 ;; Registers used:
 55727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 55728 ;; Tracked objects:
 55729 ;;		On entry : 0/0
 55730 ;;		On exit  : 0/0
 55731 ;;		Unchanged: 0/0
 55732 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55733 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55735 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55736 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55737 ;;Total ram usage:       12 bytes
 55738 ;; Hardware stack levels used: 1
 55739 ;; Hardware stack levels required when called: 2
 55740 ;; This function calls:
 55741 ;;		___lmul
 55742 ;; This function is called by:
 55743 ;;		_dir_clear
 55744 ;;		_dir_sdi
 55745 ;;		_dir_next
 55746 ;;		_f_open
 55747 ;;		_f_read
 55748 ;;		_f_write
 55749 ;;		_f_lseek
 55750 ;;		_f_rename
 55751 ;; This function uses a non-reentrant model
 55752 ;;
 55753                           
 55754                           	psect	text166
 55755   01E0F4                     __ptext166:
 55756                           	callstack 0
 55757   01E0F4                     _clst2sect:
 55758                           	callstack 117
 55759   01E0F4                     
 55760                           ;../fatfs/ff.c: 1146:  FATFS* fs,;../fatfs/ff.c: 1147:  DWORD clst;../fatfs/ff.c: 1149: 
      +                          {;../fatfs/ff.c: 1150:  clst -= 2;
 55761   01E0F4  0E02               	movlw	2
 55762   01E0F6  5E12               	subwf	clst2sect@clst^(0+1280),f,c
 55763   01E0F8  0E00               	movlw	0
 55764   01E0FA  5A13               	subwfb	(clst2sect@clst+1)^(0+1280),f,c
 55765   01E0FC  5A14               	subwfb	(clst2sect@clst+2)^(0+1280),f,c
 55766   01E0FE  5A15               	subwfb	(clst2sect@clst+3)^(0+1280),f,c
 55767   01E100                     
 55768                           ;../fatfs/ff.c: 1151:  if (clst >= fs->n_fatent - 2) return 0;
 55769   01E100  EE20 F018          	lfsr	2,24
 55770   01E104  5010               	movf	clst2sect@fs^(0+1280),w,c
 55771   01E106  26D9               	addwf	fsr2l,f,c
 55772   01E108  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 55773   01E10A  22DA               	addwfc	fsr2h,f,c
 55774   01E10C  0EFE               	movlw	254
 55775   01E10E  24DE               	addwf	postinc2,w,c
 55776   01E110  6E16               	movwf	??_clst2sect^(0+1280),c
 55777   01E112  0EFF               	movlw	255
 55778   01E114  20DE               	addwfc	postinc2,w,c
 55779   01E116  6E17               	movwf	(??_clst2sect+1)^(0+1280),c
 55780   01E118  0EFF               	movlw	255
 55781   01E11A  20DE               	addwfc	postinc2,w,c
 55782   01E11C  6E18               	movwf	(??_clst2sect+2)^(0+1280),c
 55783   01E11E  0EFF               	movlw	255
 55784   01E120  20DE               	addwfc	postinc2,w,c
 55785   01E122  6E19               	movwf	(??_clst2sect+3)^(0+1280),c
 55786   01E124  5016               	movf	??_clst2sect^(0+1280),w,c
 55787   01E126  5C12               	subwf	clst2sect@clst^(0+1280),w,c
 55788   01E128  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 55789   01E12A  5813               	subwfb	(clst2sect@clst+1)^(0+1280),w,c
 55790   01E12C  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 55791   01E12E  5814               	subwfb	(clst2sect@clst+2)^(0+1280),w,c
 55792   01E130  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 55793   01E132  5815               	subwfb	(clst2sect@clst+3)^(0+1280),w,c
 55794   01E134  A0D8               	btfss	status,0,c
 55795   01E136  EF9F  F0F0         	goto	u28031
 55796   01E13A  EFA1  F0F0         	goto	u28030
 55797   01E13E                     u28031:
 55798   01E13E  EFAB  F0F0         	goto	l21045
 55799   01E142                     u28030:
 55800   01E142  0E00               	movlw	0
 55801   01E144  6E10               	movwf	?_clst2sect^(0+1280),c
 55802   01E146  0E00               	movlw	0
 55803   01E148  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 55804   01E14A  0E00               	movlw	0
 55805   01E14C  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 55806   01E14E  0E00               	movlw	0
 55807   01E150  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 55808   01E152  EFDF  F0F0         	goto	l226
 55809   01E156                     l21045:
 55810                           
 55811                           ;../fatfs/ff.c: 1152:  return fs->database + (LBA_t)fs->csize * clst;
 55812   01E156  EE20 F02C          	lfsr	2,44
 55813   01E15A  5010               	movf	clst2sect@fs^(0+1280),w,c
 55814   01E15C  26D9               	addwf	fsr2l,f,c
 55815   01E15E  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 55816   01E160  22DA               	addwfc	fsr2h,f,c
 55817   01E162  C4DE F516          	movff	postinc2,??_clst2sect
 55818   01E166  C4DE F517          	movff	postinc2,??_clst2sect+1
 55819   01E16A  C4DE F518          	movff	postinc2,??_clst2sect+2
 55820   01E16E  C4DE F519          	movff	postinc2,??_clst2sect+3
 55821   01E172  EE20 F00A          	lfsr	2,10
 55822   01E176  5010               	movf	clst2sect@fs^(0+1280),w,c
 55823   01E178  26D9               	addwf	fsr2l,f,c
 55824   01E17A  5011               	movf	(clst2sect@fs+1)^(0+1280),w,c
 55825   01E17C  22DA               	addwfc	fsr2h,f,c
 55826   01E17E  C4DE F51A          	movff	postinc2,??_clst2sect+4
 55827   01E182  C4DD F51B          	movff	postdec2,??_clst2sect+5
 55828   01E186  C51A  F504         	movff	??_clst2sect+4,___lmul@multiplier
 55829   01E18A  C51B  F505         	movff	??_clst2sect+5,___lmul@multiplier+1
 55830   01E18E  6A06               	clrf	(___lmul@multiplier+2)^(0+1280),c
 55831   01E190  6A07               	clrf	(___lmul@multiplier+3)^(0+1280),c
 55832   01E192  C512  F508         	movff	clst2sect@clst,___lmul@multiplicand
 55833   01E196  C513  F509         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 55834   01E19A  C514  F50A         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 55835   01E19E  C515  F50B         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 55836   01E1A2  EC13  F0FB         	call	___lmul	;wreg free
 55837   01E1A6  5016               	movf	??_clst2sect^(0+1280),w,c
 55838   01E1A8  2404               	addwf	?___lmul^(0+1280),w,c
 55839   01E1AA  6E10               	movwf	?_clst2sect^(0+1280),c
 55840   01E1AC  5017               	movf	(??_clst2sect+1)^(0+1280),w,c
 55841   01E1AE  2005               	addwfc	(?___lmul+1)^(0+1280),w,c
 55842   01E1B0  6E11               	movwf	(?_clst2sect+1)^(0+1280),c
 55843   01E1B2  5018               	movf	(??_clst2sect+2)^(0+1280),w,c
 55844   01E1B4  2006               	addwfc	(?___lmul+2)^(0+1280),w,c
 55845   01E1B6  6E12               	movwf	(?_clst2sect+2)^(0+1280),c
 55846   01E1B8  5019               	movf	(??_clst2sect+3)^(0+1280),w,c
 55847   01E1BA  2007               	addwfc	(?___lmul+3)^(0+1280),w,c
 55848   01E1BC  6E13               	movwf	(?_clst2sect+3)^(0+1280),c
 55849   01E1BE                     l226:
 55850   01E1BE  0012               	return		;funcret
 55851   01E1C0                     __end_of_clst2sect:
 55852                           	callstack 0
 55853                           
 55854 ;; *************** function ___lmul *****************
 55855 ;; Defined at:
 55856 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
 55857 ;; Parameters:    Size  Location     Type
 55858 ;;  multiplier      4    3[COMRAM] unsigned long 
 55859 ;;  multiplicand    4    7[COMRAM] unsigned long 
 55860 ;; Auto vars:     Size  Location     Type
 55861 ;;  product         4   11[COMRAM] unsigned long 
 55862 ;; Return value:  Size  Location     Type
 55863 ;;                  4    3[COMRAM] unsigned long 
 55864 ;; Registers used:
 55865 ;;		wreg, status,2, status,0
 55866 ;; Tracked objects:
 55867 ;;		On entry : 0/0
 55868 ;;		On exit  : 0/0
 55869 ;;		Unchanged: 0/0
 55870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55871 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55872 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55874 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55875 ;;Total ram usage:       12 bytes
 55876 ;; Hardware stack levels used: 1
 55877 ;; Hardware stack levels required when called: 1
 55878 ;; This function calls:
 55879 ;;		Nothing
 55880 ;; This function is called by:
 55881 ;;		_clst2sect
 55882 ;;		_mount_volume
 55883 ;;		___strtoxl
 55884 ;; This function uses a non-reentrant model
 55885 ;;
 55886                           
 55887                           	psect	text167
 55888   01F626                     __ptext167:
 55889                           	callstack 0
 55890   01F626                     ___lmul:
 55891                           	callstack 117
 55892   01F626  0E00               	movlw	0
 55893   01F628  6E0C               	movwf	___lmul@product^(0+1280),c
 55894   01F62A  0E00               	movlw	0
 55895   01F62C  6E0D               	movwf	(___lmul@product+1)^(0+1280),c
 55896   01F62E  0E00               	movlw	0
 55897   01F630  6E0E               	movwf	(___lmul@product+2)^(0+1280),c
 55898   01F632  0E00               	movlw	0
 55899   01F634  6E0F               	movwf	(___lmul@product+3)^(0+1280),c
 55900   01F636                     l21021:
 55901   01F636  A004               	btfss	___lmul@multiplier^(0+1280),0,c
 55902   01F638  EF20  F0FB         	goto	u28001
 55903   01F63C  EF22  F0FB         	goto	u28000
 55904   01F640                     u28001:
 55905   01F640  EF2A  F0FB         	goto	l21025
 55906   01F644                     u28000:
 55907   01F644  5008               	movf	___lmul@multiplicand^(0+1280),w,c
 55908   01F646  260C               	addwf	___lmul@product^(0+1280),f,c
 55909   01F648  5009               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 55910   01F64A  220D               	addwfc	(___lmul@product+1)^(0+1280),f,c
 55911   01F64C  500A               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 55912   01F64E  220E               	addwfc	(___lmul@product+2)^(0+1280),f,c
 55913   01F650  500B               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 55914   01F652  220F               	addwfc	(___lmul@product+3)^(0+1280),f,c
 55915   01F654                     l21025:
 55916   01F654  90D8               	bcf	status,0,c
 55917   01F656  3608               	rlcf	___lmul@multiplicand^(0+1280),f,c
 55918   01F658  3609               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 55919   01F65A  360A               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 55920   01F65C  360B               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 55921   01F65E  90D8               	bcf	status,0,c
 55922   01F660  3207               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 55923   01F662  3206               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 55924   01F664  3205               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 55925   01F666  3204               	rrcf	___lmul@multiplier^(0+1280),f,c
 55926   01F668  5004               	movf	___lmul@multiplier^(0+1280),w,c
 55927   01F66A  1005               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 55928   01F66C  1006               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 55929   01F66E  1007               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 55930   01F670  A4D8               	btfss	status,2,c
 55931   01F672  EF3D  F0FB         	goto	u28011
 55932   01F676  EF3F  F0FB         	goto	u28010
 55933   01F67A                     u28011:
 55934   01F67A  EF1B  F0FB         	goto	l21021
 55935   01F67E                     u28010:
 55936   01F67E  C50C  F504         	movff	___lmul@product,?___lmul
 55937   01F682  C50D  F505         	movff	___lmul@product+1,?___lmul+1
 55938   01F686  C50E  F506         	movff	___lmul@product+2,?___lmul+2
 55939   01F68A  C50F  F507         	movff	___lmul@product+3,?___lmul+3
 55940   01F68E  0012               	return		;funcret
 55941   01F690                     __end_of___lmul:
 55942                           	callstack 0
 55943                           
 55944 ;; *************** function _dsk_err *****************
 55945 ;; Defined at:
 55946 ;;		line 138 in file "../src/io_dos.c"
 55947 ;; Parameters:    Size  Location     Type
 55948 ;;		None
 55949 ;; Auto vars:     Size  Location     Type
 55950 ;;		None
 55951 ;; Return value:  Size  Location     Type
 55952 ;;                  1    wreg      void 
 55953 ;; Registers used:
 55954 ;;		wreg, status,2
 55955 ;; Tracked objects:
 55956 ;;		On entry : 0/0
 55957 ;;		On exit  : 0/0
 55958 ;;		Unchanged: 0/0
 55959 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 55960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 55964 ;;Total ram usage:        0 bytes
 55965 ;; Hardware stack levels used: 1
 55966 ;; Hardware stack levels required when called: 1
 55967 ;; This function calls:
 55968 ;;		Nothing
 55969 ;; This function is called by:
 55970 ;;		_bus_master_operation
 55971 ;; This function uses a non-reentrant model
 55972 ;;
 55973                           
 55974                           	psect	text168
 55975   000276                     __ptext168:
 55976                           	callstack 0
 55977   000276                     _dsk_err:
 55978                           	callstack 121
 55979   000276                     
 55980                           ;../src/io_dos.c: 139:  req_tbl.UNI_CHR = 1;
 55981   000276  0E01               	movlw	1
 55982   000278  0107               	movlb	7	; () banked
 55983   00027A  6FCF               	movwf	(_req_tbl+1)& (0+255),b
 55984   00027C                     
 55985                           ; BSR set to: 7
 55986   00027C  0012               	return		;funcret
 55987   00027E                     __end_of_dsk_err:
 55988                           	callstack 0
 55989                           
 55990 ;; *************** function _bus_hold_req *****************
 55991 ;; Defined at:
 55992 ;;		line 285 in file "../src/boards/w65_bd.c"
 55993 ;; Parameters:    Size  Location     Type
 55994 ;;		None
 55995 ;; Auto vars:     Size  Location     Type
 55996 ;;		None
 55997 ;; Return value:  Size  Location     Type
 55998 ;;                  1    wreg      void 
 55999 ;; Registers used:
 56000 ;;		None
 56001 ;; Tracked objects:
 56002 ;;		On entry : 0/0
 56003 ;;		On exit  : 0/0
 56004 ;;		Unchanged: 0/0
 56005 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 56006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56010 ;;Total ram usage:        0 bytes
 56011 ;; Hardware stack levels used: 1
 56012 ;; Hardware stack levels required when called: 1
 56013 ;; This function calls:
 56014 ;;		Nothing
 56015 ;; This function is called by:
 56016 ;;		_reset_cpu
 56017 ;;		_board_event_loop
 56018 ;;		_board_event_loop1
 56019 ;; This function uses a non-reentrant model
 56020 ;;
 56021                           
 56022                           	psect	text169
 56023   000260                     __ptext169:
 56024                           	callstack 0
 56025   000260                     _bus_hold_req:
 56026                           	callstack 122
 56027   000260                     
 56028                           ;../src/boards/w65_bd.c: 287:  TRISC = 0x00;
 56029   000260  6AC8               	clrf	200,c	;volatile
 56030                           
 56031                           ;../src/boards/w65_bd.c: 288:  TRISD = 0x00;
 56032   000262  6AC9               	clrf	201,c	;volatile
 56033                           
 56034                           ;../src/boards/w65_bd.c: 290:  LATA4 = 1;
 56035   000264  88BE               	bsf	1214,4,c	;volatile
 56036                           
 56037                           ;../src/boards/w65_bd.c: 291:  TRISA4 = 0;
 56038   000266  98C6               	bcf	1222,4,c	;volatile
 56039                           
 56040                           ;../src/boards/w65_bd.c: 292:  TRISA1 = 0;
 56041   000268  92C6               	bcf	1222,1,c	;volatile
 56042   00026A  0012               	return		;funcret
 56043   00026C                     __end_of_bus_hold_req:
 56044                           	callstack 0
 56045                           
 56046 ;; *************** function ___xxtofl *****************
 56047 ;; Defined at:
 56048 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 56049 ;; Parameters:    Size  Location     Type
 56050 ;;  sign            1    wreg     unsigned char 
 56051 ;;  val             4    3[COMRAM] long 
 56052 ;; Auto vars:     Size  Location     Type
 56053 ;;  sign            1   11[COMRAM] unsigned char 
 56054 ;;  arg             4   13[COMRAM] unsigned long 
 56055 ;;  exp             1   12[COMRAM] unsigned char 
 56056 ;; Return value:  Size  Location     Type
 56057 ;;                  4    3[COMRAM] unsigned char 
 56058 ;; Registers used:
 56059 ;;		wreg, status,2, status,0
 56060 ;; Tracked objects:
 56061 ;;		On entry : 0/0
 56062 ;;		On exit  : 0/0
 56063 ;;		Unchanged: 0/0
 56064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 56065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56066 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56068 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56069 ;;Total ram usage:       14 bytes
 56070 ;; Hardware stack levels used: 1
 56071 ;; Hardware stack levels required when called: 1
 56072 ;; This function calls:
 56073 ;;		Nothing
 56074 ;; This function is called by:
 56075 ;;		_main
 56076 ;;		_ftoa
 56077 ;; This function uses a non-reentrant model
 56078 ;;
 56079                           
 56080                           	psect	text170
 56081   01AAA6                     __ptext170:
 56082                           	callstack 0
 56083   01AAA6                     ___xxtofl:
 56084                           	callstack 125
 56085                           
 56086                           ;incstack = 0
 56087                           ;___xxtofl@sign stored from wreg
 56088   01AAA6  6E0C               	movwf	___xxtofl@sign^(0+1280),c
 56089   01AAA8  500C               	movf	___xxtofl@sign^(0+1280),w,c
 56090   01AAAA  B4D8               	btfsc	status,2,c
 56091   01AAAC  EF5A  F0D5         	goto	u23291
 56092   01AAB0  EF5C  F0D5         	goto	u23290
 56093   01AAB4                     u23291:
 56094   01AAB4  EF7E  F0D5         	goto	l3200
 56095   01AAB8                     u23290:
 56096   01AAB8  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 56097   01AABA  EF63  F0D5         	goto	u23300
 56098   01AABE  EF61  F0D5         	goto	u23301
 56099   01AAC2                     u23301:
 56100   01AAC2  EF7E  F0D5         	goto	l3200
 56101   01AAC6                     u23300:
 56102   01AAC6  C504  F508         	movff	___xxtofl@val,??___xxtofl
 56103   01AACA  C505  F509         	movff	___xxtofl@val+1,??___xxtofl+1
 56104   01AACE  C506  F50A         	movff	___xxtofl@val+2,??___xxtofl+2
 56105   01AAD2  C507  F50B         	movff	___xxtofl@val+3,??___xxtofl+3
 56106   01AAD6  1E08               	comf	??___xxtofl^(0+1280),f,c
 56107   01AAD8  1E09               	comf	(??___xxtofl+1)^(0+1280),f,c
 56108   01AADA  1E0A               	comf	(??___xxtofl+2)^(0+1280),f,c
 56109   01AADC  1E0B               	comf	(??___xxtofl+3)^(0+1280),f,c
 56110   01AADE  2A08               	incf	??___xxtofl^(0+1280),f,c
 56111   01AAE0  0E00               	movlw	0
 56112   01AAE2  2209               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 56113   01AAE4  220A               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 56114   01AAE6  220B               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 56115   01AAE8  C508  F50E         	movff	??___xxtofl,___xxtofl@arg
 56116   01AAEC  C509  F50F         	movff	??___xxtofl+1,___xxtofl@arg+1
 56117   01AAF0  C50A  F510         	movff	??___xxtofl+2,___xxtofl@arg+2
 56118   01AAF4  C50B  F511         	movff	??___xxtofl+3,___xxtofl@arg+3
 56119   01AAF8  EF86  F0D5         	goto	l18103
 56120   01AAFC                     l3200:
 56121   01AAFC  C504  F50E         	movff	___xxtofl@val,___xxtofl@arg
 56122   01AB00  C505  F50F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 56123   01AB04  C506  F510         	movff	___xxtofl@val+2,___xxtofl@arg+2
 56124   01AB08  C507  F511         	movff	___xxtofl@val+3,___xxtofl@arg+3
 56125   01AB0C                     l18103:
 56126   01AB0C  5004               	movf	___xxtofl@val^(0+1280),w,c
 56127   01AB0E  1005               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 56128   01AB10  1006               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 56129   01AB12  1007               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 56130   01AB14  A4D8               	btfss	status,2,c
 56131   01AB16  EF8F  F0D5         	goto	u23311
 56132   01AB1A  EF91  F0D5         	goto	u23310
 56133   01AB1E                     u23311:
 56134   01AB1E  EF9B  F0D5         	goto	l18109
 56135   01AB22                     u23310:
 56136   01AB22  0E00               	movlw	0
 56137   01AB24  6E04               	movwf	?___xxtofl^(0+1280),c
 56138   01AB26  0E00               	movlw	0
 56139   01AB28  6E05               	movwf	(?___xxtofl+1)^(0+1280),c
 56140   01AB2A  0E00               	movlw	0
 56141   01AB2C  6E06               	movwf	(?___xxtofl+2)^(0+1280),c
 56142   01AB2E  0E00               	movlw	0
 56143   01AB30  6E07               	movwf	(?___xxtofl+3)^(0+1280),c
 56144   01AB32  EF2C  F0D6         	goto	l3203
 56145   01AB36                     l18109:
 56146   01AB36  0E96               	movlw	150
 56147   01AB38  6E0D               	movwf	___xxtofl@exp^(0+1280),c
 56148   01AB3A  EFA5  F0D5         	goto	l18113
 56149   01AB3E                     l18111:
 56150   01AB3E  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 56151   01AB40  90D8               	bcf	status,0,c
 56152   01AB42  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 56153   01AB44  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 56154   01AB46  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 56155   01AB48  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 56156   01AB4A                     l18113:
 56157   01AB4A  0E00               	movlw	0
 56158   01AB4C  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 56159   01AB4E  6E08               	movwf	??___xxtofl^(0+1280),c
 56160   01AB50  0E00               	movlw	0
 56161   01AB52  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 56162   01AB54  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 56163   01AB56  0E00               	movlw	0
 56164   01AB58  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 56165   01AB5A  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 56166   01AB5C  0EFE               	movlw	254
 56167   01AB5E  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 56168   01AB60  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 56169   01AB62  5008               	movf	??___xxtofl^(0+1280),w,c
 56170   01AB64  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 56171   01AB66  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 56172   01AB68  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 56173   01AB6A  A4D8               	btfss	status,2,c
 56174   01AB6C  EFBA  F0D5         	goto	u23321
 56175   01AB70  EFBC  F0D5         	goto	u23320
 56176   01AB74                     u23321:
 56177   01AB74  EF9F  F0D5         	goto	l18111
 56178   01AB78                     u23320:
 56179   01AB78  EFCA  F0D5         	goto	l3207
 56180   01AB7C                     l18115:
 56181   01AB7C  2A0D               	incf	___xxtofl@exp^(0+1280),f,c
 56182   01AB7E  0E01               	movlw	1
 56183   01AB80  260E               	addwf	___xxtofl@arg^(0+1280),f,c
 56184   01AB82  0E00               	movlw	0
 56185   01AB84  220F               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 56186   01AB86  2210               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 56187   01AB88  2211               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 56188   01AB8A  90D8               	bcf	status,0,c
 56189   01AB8C  3211               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 56190   01AB8E  3210               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 56191   01AB90  320F               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 56192   01AB92  320E               	rrcf	___xxtofl@arg^(0+1280),f,c
 56193   01AB94                     l3207:
 56194   01AB94  0E00               	movlw	0
 56195   01AB96  140E               	andwf	___xxtofl@arg^(0+1280),w,c
 56196   01AB98  6E08               	movwf	??___xxtofl^(0+1280),c
 56197   01AB9A  0E00               	movlw	0
 56198   01AB9C  140F               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 56199   01AB9E  6E09               	movwf	(??___xxtofl+1)^(0+1280),c
 56200   01ABA0  0E00               	movlw	0
 56201   01ABA2  1410               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 56202   01ABA4  6E0A               	movwf	(??___xxtofl+2)^(0+1280),c
 56203   01ABA6  0EFF               	movlw	255
 56204   01ABA8  1411               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 56205   01ABAA  6E0B               	movwf	(??___xxtofl+3)^(0+1280),c
 56206   01ABAC  5008               	movf	??___xxtofl^(0+1280),w,c
 56207   01ABAE  1009               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 56208   01ABB0  100A               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 56209   01ABB2  100B               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 56210   01ABB4  A4D8               	btfss	status,2,c
 56211   01ABB6  EFDF  F0D5         	goto	u23331
 56212   01ABBA  EFE1  F0D5         	goto	u23330
 56213   01ABBE                     u23331:
 56214   01ABBE  EFBE  F0D5         	goto	l18115
 56215   01ABC2                     u23330:
 56216   01ABC2  EFE9  F0D5         	goto	l18123
 56217   01ABC6                     l18121:
 56218   01ABC6  060D               	decf	___xxtofl@exp^(0+1280),f,c
 56219   01ABC8  90D8               	bcf	status,0,c
 56220   01ABCA  360E               	rlcf	___xxtofl@arg^(0+1280),f,c
 56221   01ABCC  360F               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 56222   01ABCE  3610               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 56223   01ABD0  3611               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 56224   01ABD2                     l18123:
 56225   01ABD2  BE10               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 56226   01ABD4  EFEE  F0D5         	goto	u23341
 56227   01ABD8  EFF0  F0D5         	goto	u23340
 56228   01ABDC                     u23341:
 56229   01ABDC  EFF8  F0D5         	goto	l3214
 56230   01ABE0                     u23340:
 56231   01ABE0  0E02               	movlw	2
 56232   01ABE2  600D               	cpfslt	___xxtofl@exp^(0+1280),c
 56233   01ABE4  EFF6  F0D5         	goto	u23351
 56234   01ABE8  EFF8  F0D5         	goto	u23350
 56235   01ABEC                     u23351:
 56236   01ABEC  EFE3  F0D5         	goto	l18121
 56237   01ABF0                     u23350:
 56238   01ABF0                     l3214:
 56239   01ABF0  B00D               	btfsc	___xxtofl@exp^(0+1280),0,c
 56240   01ABF2  EFFD  F0D5         	goto	u23361
 56241   01ABF6  EFFF  F0D5         	goto	u23360
 56242   01ABFA                     u23361:
 56243   01ABFA  EF00  F0D6         	goto	l18129
 56244   01ABFE                     u23360:
 56245   01ABFE  9E10               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 56246   01AC00                     l18129:
 56247   01AC00  90D8               	bcf	status,0,c
 56248   01AC02  320D               	rrcf	___xxtofl@exp^(0+1280),f,c
 56249   01AC04  C50D  F508         	movff	___xxtofl@exp,??___xxtofl
 56250   01AC08  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 56251   01AC0A  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 56252   01AC0C  6A0B               	clrf	(??___xxtofl+3)^(0+1280),c
 56253   01AC0E  C508  F50B         	movff	??___xxtofl,??___xxtofl+3
 56254   01AC12  6A0A               	clrf	(??___xxtofl+2)^(0+1280),c
 56255   01AC14  6A09               	clrf	(??___xxtofl+1)^(0+1280),c
 56256   01AC16  6A08               	clrf	??___xxtofl^(0+1280),c
 56257   01AC18  5008               	movf	??___xxtofl^(0+1280),w,c
 56258   01AC1A  120E               	iorwf	___xxtofl@arg^(0+1280),f,c
 56259   01AC1C  5009               	movf	(??___xxtofl+1)^(0+1280),w,c
 56260   01AC1E  120F               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 56261   01AC20  500A               	movf	(??___xxtofl+2)^(0+1280),w,c
 56262   01AC22  1210               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 56263   01AC24  500B               	movf	(??___xxtofl+3)^(0+1280),w,c
 56264   01AC26  1211               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 56265   01AC28  500C               	movf	___xxtofl@sign^(0+1280),w,c
 56266   01AC2A  B4D8               	btfsc	status,2,c
 56267   01AC2C  EF1A  F0D6         	goto	u23371
 56268   01AC30  EF1C  F0D6         	goto	u23370
 56269   01AC34                     u23371:
 56270   01AC34  EF24  F0D6         	goto	l18139
 56271   01AC38                     u23370:
 56272   01AC38  BE07               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 56273   01AC3A  EF23  F0D6         	goto	u23380
 56274   01AC3E  EF21  F0D6         	goto	u23381
 56275   01AC42                     u23381:
 56276   01AC42  EF24  F0D6         	goto	l18139
 56277   01AC46                     u23380:
 56278   01AC46  8E11               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 56279   01AC48                     l18139:
 56280   01AC48  C50E  F504         	movff	___xxtofl@arg,?___xxtofl
 56281   01AC4C  C50F  F505         	movff	___xxtofl@arg+1,?___xxtofl+1
 56282   01AC50  C510  F506         	movff	___xxtofl@arg+2,?___xxtofl+2
 56283   01AC54  C511  F507         	movff	___xxtofl@arg+3,?___xxtofl+3
 56284   01AC58                     l3203:
 56285   01AC58  0012               	return		;funcret
 56286   01AC5A                     __end_of___xxtofl:
 56287                           	callstack 0
 56288                           
 56289 ;; *************** function _Default_ISR *****************
 56290 ;; Defined at:
 56291 ;;		line 81 in file "../src/boards/w65_cmn.c"
 56292 ;; Parameters:    Size  Location     Type
 56293 ;;		None
 56294 ;; Auto vars:     Size  Location     Type
 56295 ;;		None
 56296 ;; Return value:  Size  Location     Type
 56297 ;;                  1    wreg      void 
 56298 ;; Registers used:
 56299 ;;		None
 56300 ;; Tracked objects:
 56301 ;;		On entry : 0/0
 56302 ;;		On exit  : 0/0
 56303 ;;		Unchanged: 0/0
 56304 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 56305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56309 ;;Total ram usage:        0 bytes
 56310 ;; Hardware stack levels used: 1
 56311 ;; This function calls:
 56312 ;;		Nothing
 56313 ;; This function is called by:
 56314 ;;		Interrupt level 2
 56315 ;; This function uses a non-reentrant model
 56316 ;;
 56317                           
 56318                           	psect	text171
 56319   000290                     __ptext171:
 56320                           	callstack 0
 56321   000290                     _Default_ISR:
 56322                           	callstack 101
 56323   000290  0011               	retfie		f
 56324   000292                     __end_of_Default_ISR:
 56325                           	callstack 0
 56326                           
 56327 ;; *************** function _TIMER0_ISR *****************
 56328 ;; Defined at:
 56329 ;;		line 86 in file "../src/boards/w65_cmn.c"
 56330 ;; Parameters:    Size  Location     Type
 56331 ;;		None
 56332 ;; Auto vars:     Size  Location     Type
 56333 ;;		None
 56334 ;; Return value:  Size  Location     Type
 56335 ;;                  1    wreg      void 
 56336 ;; Registers used:
 56337 ;;		status,2, status,0
 56338 ;; Tracked objects:
 56339 ;;		On entry : 0/0
 56340 ;;		On exit  : 0/0
 56341 ;;		Unchanged: 0/0
 56342 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 56343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56347 ;;Total ram usage:        0 bytes
 56348 ;; Hardware stack levels used: 1
 56349 ;; This function calls:
 56350 ;;		Nothing
 56351 ;; This function is called by:
 56352 ;;		Interrupt level 2
 56353 ;; This function uses a non-reentrant model
 56354 ;;
 56355                           
 56356                           	psect	text172
 56357   000280                     __ptext172:
 56358                           	callstack 0
 56359   000280                     _TIMER0_ISR:
 56360                           	callstack 101
 56361   000280                     
 56362                           ;../src/boards/w65_cmn.c: 94:  irq_flg++;
 56363   000280  0107               	movlb	7	; () banked
 56364   000282  2BC7               	incf	_irq_flg& (0+255),f,b
 56365   000284                     
 56366                           ; BSR set to: 7
 56367                           ;../src/boards/w65_cmn.c: 96:  TMR0IF =0;
 56368   000284  9EB1               	bcf	1201,7,c	;volatile
 56369   000286                     
 56370                           ; BSR set to: 7
 56371   000286  0011               	retfie		f
 56372   000288                     __end_of_TIMER0_ISR:
 56373                           	callstack 0
 56374                           
 56375 ;; *************** function _URT3Rx_ISR *****************
 56376 ;; Defined at:
 56377 ;;		line 103 in file "../src/boards/w65_cmn.c"
 56378 ;; Parameters:    Size  Location     Type
 56379 ;;		None
 56380 ;; Auto vars:     Size  Location     Type
 56381 ;;  rx_data         1    2[COMRAM] unsigned char 
 56382 ;; Return value:  Size  Location     Type
 56383 ;;                  1    wreg      void 
 56384 ;; Registers used:
 56385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56386 ;; Tracked objects:
 56387 ;;		On entry : 0/0
 56388 ;;		On exit  : 0/0
 56389 ;;		Unchanged: 0/0
 56390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 56391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 56395 ;;Total ram usage:        3 bytes
 56396 ;; Hardware stack levels used: 1
 56397 ;; This function calls:
 56398 ;;		Nothing
 56399 ;; This function is called by:
 56400 ;;		Interrupt level 2
 56401 ;; This function uses a non-reentrant model
 56402 ;;
 56403                           
 56404                           	psect	text173
 56405   01F4D8                     __ptext173:
 56406                           	callstack 0
 56407   01F4D8                     _URT3Rx_ISR:
 56408                           	callstack 101
 56409   01F4D8                     
 56410                           ;../src/boards/w65_cmn.c: 105:  unsigned char rx_data;;../src/boards/w65_cmn.c: 107:  rx
      +                          _data = U3RXB;
 56411   01F4D8  C2C7 F503          	movff	711,URT3Rx_ISR@rx_data	;volatile
 56412   01F4DC                     
 56413                           ;../src/boards/w65_cmn.c: 109:  if ( rx_data == 0x11 && fh.nmi_sw ) {
 56414   01F4DC  0E11               	movlw	17
 56415   01F4DE  1803               	xorwf	URT3Rx_ISR@rx_data^(0+1280),w,c
 56416   01F4E0  A4D8               	btfss	status,2,c
 56417   01F4E2  EF75  F0FA         	goto	i2u2474_41
 56418   01F4E6  EF77  F0FA         	goto	i2u2474_40
 56419   01F4EA                     i2u2474_41:
 56420   01F4EA  EF85  F0FA         	goto	i2l18921
 56421   01F4EE                     i2u2474_40:
 56422   01F4EE  0108               	movlb	8	; () banked
 56423   01F4F0  51C0               	movf	(_fh+30)& (0+255),w,b
 56424   01F4F2  B4D8               	btfsc	status,2,c
 56425   01F4F4  EF7E  F0FA         	goto	i2u2475_41
 56426   01F4F8  EF80  F0FA         	goto	i2u2475_40
 56427   01F4FC                     i2u2475_41:
 56428   01F4FC  EF85  F0FA         	goto	i2l18921
 56429   01F500                     i2u2475_40:
 56430   01F500                     
 56431                           ; BSR set to: 8
 56432                           ;../src/boards/w65_cmn.c: 110:   nmi_sig = 1;
 56433   01F500  0E01               	movlw	1
 56434   01F502  0107               	movlb	7	; () banked
 56435   01F504  6FCA               	movwf	_nmi_sig& (0+255),b
 56436                           
 56437                           ;../src/boards/w65_cmn.c: 111:  }
 56438   01F506  EFA5  F0FA         	goto	i2l2109
 56439   01F50A                     i2l18921:
 56440   01F50A  0107               	movlb	7	; () banked
 56441   01F50C  51C2               	movf	(_rx_cnt+1)& (0+255),w,b
 56442   01F50E  E107               	bnz	i2u2476_41
 56443   01F510  0E80               	movlw	128
 56444   01F512  5DC1               	subwf	_rx_cnt& (0+255),w,b
 56445   01F514  B0D8               	btfsc	status,0,c
 56446   01F516  EF8F  F0FA         	goto	i2u2476_41
 56447   01F51A  EF91  F0FA         	goto	i2u2476_40
 56448   01F51E                     i2u2476_41:
 56449   01F51E  EFA5  F0FA         	goto	i2l2109
 56450   01F522                     i2u2476_40:
 56451   01F522                     
 56452                           ; BSR set to: 7
 56453                           ;../src/boards/w65_cmn.c: 113:   rx_buf[rx_wp] = rx_data;
 56454   01F522  0E00               	movlw	low _rx_buf
 56455   01F524  25B9               	addwf	_rx_wp& (0+255),w,b
 56456   01F526  6ED9               	movwf	fsr2l,c
 56457   01F528  0E0B               	movlw	high _rx_buf
 56458   01F52A  21BA               	addwfc	(_rx_wp+1)& (0+255),w,b
 56459   01F52C  6EDA               	movwf	fsr2h,c
 56460   01F52E  C503  F4DF         	movff	URT3Rx_ISR@rx_data,indf2
 56461   01F532                     
 56462                           ; BSR set to: 7
 56463                           ;../src/boards/w65_cmn.c: 114:   rx_wp = (rx_wp + 1) & (128 - 1);
 56464   01F532  0E01               	movlw	1
 56465   01F534  25B9               	addwf	_rx_wp& (0+255),w,b
 56466   01F536  6E01               	movwf	??_URT3Rx_ISR^(0+1280),c
 56467   01F538  0E00               	movlw	0
 56468   01F53A  21BA               	addwfc	(_rx_wp+1)& (0+255),w,b
 56469   01F53C  6E02               	movwf	(??_URT3Rx_ISR+1)^(0+1280),c
 56470   01F53E  0E7F               	movlw	127
 56471   01F540  1401               	andwf	??_URT3Rx_ISR^(0+1280),w,c
 56472   01F542  6FB9               	movwf	_rx_wp& (0+255),b
 56473   01F544  6BBA               	clrf	(_rx_wp+1)& (0+255),b
 56474   01F546                     
 56475                           ; BSR set to: 7
 56476                           ;../src/boards/w65_cmn.c: 115:   rx_cnt++;
 56477   01F546  4BC1               	infsnz	_rx_cnt& (0+255),f,b
 56478   01F548  2BC2               	incf	(_rx_cnt+1)& (0+255),f,b
 56479   01F54A                     i2l2109:
 56480                           
 56481                           ; BSR set to: 7
 56482   01F54A  0011               	retfie		f
 56483   01F54C                     __end_of_URT3Rx_ISR:
 56484                           	callstack 0
 56485                           
 56486                           ;
 56487                           ; H/W Interrupt Vector Table @ 0x8
 56488                           ;
 56489                           
 56490                           	psect	ivt0x8
 56491   000008                     __pivt0x8:
 56492                           	callstack 0
 56493   000008                     ivt0x8_base:
 56494                           	callstack 0
 56495                           
 56496                           ; Vector 0 : SWINT
 56497   000008  00A4               	dw	_Default_ISR shr (0+2)
 56498                           
 56499                           ; Vector 1 : HLVD
 56500   00000A  00A4               	dw	_Default_ISR shr (0+2)
 56501                           
 56502                           ; Vector 2 : OSF
 56503   00000C  00A4               	dw	_Default_ISR shr (0+2)
 56504                           
 56505                           ; Vector 3 : CSW
 56506   00000E  00A4               	dw	_Default_ISR shr (0+2)
 56507                           
 56508                           ; Vector 4 : TU16A
 56509   000010  00A4               	dw	_Default_ISR shr (0+2)
 56510                           
 56511                           ; Vector 5 : CLC1
 56512   000012  00A4               	dw	_Default_ISR shr (0+2)
 56513                           
 56514                           ; Vector 6 : CAN
 56515   000014  00A4               	dw	_Default_ISR shr (0+2)
 56516                           
 56517                           ; Vector 7 : IOC
 56518   000016  00A4               	dw	_Default_ISR shr (0+2)
 56519                           
 56520                           ; Vector 8 : INT0
 56521   000018  00A4               	dw	_Default_ISR shr (0+2)
 56522                           
 56523                           ; Vector 9 : ZCD
 56524   00001A  00A4               	dw	_Default_ISR shr (0+2)
 56525                           
 56526                           ; Vector 10 : AD
 56527   00001C  00A4               	dw	_Default_ISR shr (0+2)
 56528                           
 56529                           ; Vector 11 : ACT
 56530   00001E  00A4               	dw	_Default_ISR shr (0+2)
 56531                           
 56532                           ; Vector 12 : CM1
 56533   000020  00A4               	dw	_Default_ISR shr (0+2)
 56534                           
 56535                           ; Vector 13 : SMT1
 56536   000022  00A4               	dw	_Default_ISR shr (0+2)
 56537                           
 56538                           ; Vector 14 : SMT1PRA
 56539   000024  00A4               	dw	_Default_ISR shr (0+2)
 56540                           
 56541                           ; Vector 15 : SMT1PWA
 56542   000026  00A4               	dw	_Default_ISR shr (0+2)
 56543                           
 56544                           ; Vector 16 : ADCH1
 56545   000028  00A4               	dw	_Default_ISR shr (0+2)
 56546                           
 56547                           ; Vector 17 : ADCH2
 56548   00002A  00A4               	dw	_Default_ISR shr (0+2)
 56549                           
 56550                           ; Vector 18 : ADCH3
 56551   00002C  00A4               	dw	_Default_ISR shr (0+2)
 56552                           
 56553                           ; Vector 19 : ADCH4
 56554   00002E  00A4               	dw	_Default_ISR shr (0+2)
 56555                           
 56556                           ; Vector 20 : DMA1SCNT
 56557   000030  00A4               	dw	_Default_ISR shr (0+2)
 56558                           
 56559                           ; Vector 21 : DMA1DCNT
 56560   000032  00A4               	dw	_Default_ISR shr (0+2)
 56561                           
 56562                           ; Vector 22 : DMA1OR
 56563   000034  00A4               	dw	_Default_ISR shr (0+2)
 56564                           
 56565                           ; Vector 23 : DMA1A
 56566   000036  00A4               	dw	_Default_ISR shr (0+2)
 56567                           
 56568                           ; Vector 24 : SPI1RX
 56569   000038  00A4               	dw	_Default_ISR shr (0+2)
 56570                           
 56571                           ; Vector 25 : SPI1TX
 56572   00003A  00A4               	dw	_Default_ISR shr (0+2)
 56573                           
 56574                           ; Vector 26 : SPI1
 56575   00003C  00A4               	dw	_Default_ISR shr (0+2)
 56576                           
 56577                           ; Vector 27 : TMR2
 56578   00003E  00A4               	dw	_Default_ISR shr (0+2)
 56579                           
 56580                           ; Vector 28 : TMR1
 56581   000040  00A4               	dw	_Default_ISR shr (0+2)
 56582                           
 56583                           ; Vector 29 : TMR1G
 56584   000042  00A4               	dw	_Default_ISR shr (0+2)
 56585                           
 56586                           ; Vector 30 : CCP1
 56587   000044  00A4               	dw	_Default_ISR shr (0+2)
 56588                           
 56589                           ; Vector 31 : TMR0
 56590   000046  00A0               	dw	_TIMER0_ISR shr (0+2)
 56591                           
 56592                           ; Vector 32 : U1RX
 56593   000048  00A4               	dw	_Default_ISR shr (0+2)
 56594                           
 56595                           ; Vector 33 : U1TX
 56596   00004A  00A4               	dw	_Default_ISR shr (0+2)
 56597                           
 56598                           ; Vector 34 : U1E
 56599   00004C  00A4               	dw	_Default_ISR shr (0+2)
 56600                           
 56601                           ; Vector 35 : U1
 56602   00004E  00A4               	dw	_Default_ISR shr (0+2)
 56603                           
 56604                           ; Vector 36 : CANRX
 56605   000050  00A4               	dw	_Default_ISR shr (0+2)
 56606                           
 56607                           ; Vector 37 : CANTX
 56608   000052  00A4               	dw	_Default_ISR shr (0+2)
 56609                           
 56610                           ; Vector 38 : PWM1PR
 56611   000054  00A4               	dw	_Default_ISR shr (0+2)
 56612                           
 56613                           ; Vector 39 : PWM1
 56614   000056  00A4               	dw	_Default_ISR shr (0+2)
 56615                           
 56616                           ; Vector 40 : SPI2RX
 56617   000058  00A4               	dw	_Default_ISR shr (0+2)
 56618                           
 56619                           ; Vector 41 : SPI2TX
 56620   00005A  00A4               	dw	_Default_ISR shr (0+2)
 56621                           
 56622                           ; Vector 42 : SPI2
 56623   00005C  00A4               	dw	_Default_ISR shr (0+2)
 56624                           
 56625                           ; Vector 43 : TU16B
 56626   00005E  00A4               	dw	_Default_ISR shr (0+2)
 56627                           
 56628                           ; Vector 44 : TMR3
 56629   000060  00A4               	dw	_Default_ISR shr (0+2)
 56630                           
 56631                           ; Vector 45 : TMR3G
 56632   000062  00A4               	dw	_Default_ISR shr (0+2)
 56633                           
 56634                           ; Vector 46 : PWM2PR
 56635   000064  00A4               	dw	_Default_ISR shr (0+2)
 56636                           
 56637                           ; Vector 47 : PWM2
 56638   000066  00A4               	dw	_Default_ISR shr (0+2)
 56639                           
 56640                           ; Vector 48 : INT1
 56641   000068  00A4               	dw	_Default_ISR shr (0+2)
 56642                           
 56643                           ; Vector 49 : CLC2
 56644   00006A  00A4               	dw	_Default_ISR shr (0+2)
 56645                           
 56646                           ; Vector 50 : CWG1
 56647   00006C  00A4               	dw	_Default_ISR shr (0+2)
 56648                           
 56649                           ; Vector 51 : NCO1
 56650   00006E  00A4               	dw	_Default_ISR shr (0+2)
 56651                           
 56652                           ; Vector 52 : DMA2SCNT
 56653   000070  00A4               	dw	_Default_ISR shr (0+2)
 56654                           
 56655                           ; Vector 53 : DMA2DCNT
 56656   000072  00A4               	dw	_Default_ISR shr (0+2)
 56657                           
 56658                           ; Vector 54 : DMA2OR
 56659   000074  00A4               	dw	_Default_ISR shr (0+2)
 56660                           
 56661                           ; Vector 55 : DMA2A
 56662   000076  00A4               	dw	_Default_ISR shr (0+2)
 56663                           
 56664                           ; Vector 56 : I2C1RX
 56665   000078  00A4               	dw	_Default_ISR shr (0+2)
 56666                           
 56667                           ; Vector 57 : I2C1TX
 56668   00007A  00A4               	dw	_Default_ISR shr (0+2)
 56669                           
 56670                           ; Vector 58 : I2C1
 56671   00007C  00A4               	dw	_Default_ISR shr (0+2)
 56672                           
 56673                           ; Vector 59 : I2C1E
 56674   00007E  00A4               	dw	_Default_ISR shr (0+2)
 56675                           
 56676                           ; Vector 60 : Undefined
 56677   000080  0042               	dw	ivt0x8_undefint shr (0+2)
 56678                           
 56679                           ; Vector 61 : CLC3
 56680   000082  00A4               	dw	_Default_ISR shr (0+2)
 56681                           
 56682                           ; Vector 62 : PWM3PR
 56683   000084  00A4               	dw	_Default_ISR shr (0+2)
 56684                           
 56685                           ; Vector 63 : PWM3
 56686   000086  00A4               	dw	_Default_ISR shr (0+2)
 56687                           
 56688                           ; Vector 64 : U2RX
 56689   000088  00A4               	dw	_Default_ISR shr (0+2)
 56690                           
 56691                           ; Vector 65 : U2TX
 56692   00008A  00A4               	dw	_Default_ISR shr (0+2)
 56693                           
 56694                           ; Vector 66 : U2E
 56695   00008C  00A4               	dw	_Default_ISR shr (0+2)
 56696                           
 56697                           ; Vector 67 : U2
 56698   00008E  00A4               	dw	_Default_ISR shr (0+2)
 56699                           
 56700                           ; Vector 68 : TMR5
 56701   000090  00A4               	dw	_Default_ISR shr (0+2)
 56702                           
 56703                           ; Vector 69 : TMR5G
 56704   000092  00A4               	dw	_Default_ISR shr (0+2)
 56705                           
 56706                           ; Vector 70 : CCP2
 56707   000094  00A4               	dw	_Default_ISR shr (0+2)
 56708                           
 56709                           ; Vector 71 : SCAN
 56710   000096  00A4               	dw	_Default_ISR shr (0+2)
 56711                           
 56712                           ; Vector 72 : U3RX
 56713   000098  7D36               	dw	_URT3Rx_ISR shr (0+2)
 56714                           
 56715                           ; Vector 73 : U3TX
 56716   00009A  00A4               	dw	_Default_ISR shr (0+2)
 56717                           
 56718                           ; Vector 74 : U3E
 56719   00009C  00A4               	dw	_Default_ISR shr (0+2)
 56720                           
 56721                           ; Vector 75 : U3
 56722   00009E  00A4               	dw	_Default_ISR shr (0+2)
 56723                           
 56724                           ; Vector 76 : Undefined
 56725   0000A0  0042               	dw	ivt0x8_undefint shr (0+2)
 56726                           
 56727                           ; Vector 77 : CLC4
 56728   0000A2  00A4               	dw	_Default_ISR shr (0+2)
 56729                           
 56730                           ; Vector 78 : PWM4PR
 56731   0000A4  00A4               	dw	_Default_ISR shr (0+2)
 56732                           
 56733                           ; Vector 79 : PWM4
 56734   0000A6  00A4               	dw	_Default_ISR shr (0+2)
 56735                           
 56736                           ; Vector 80 : INT2
 56737   0000A8  00A4               	dw	_Default_ISR shr (0+2)
 56738                           
 56739                           ; Vector 81 : CLC5
 56740   0000AA  00A4               	dw	_Default_ISR shr (0+2)
 56741                           
 56742                           ; Vector 82 : CWG2
 56743   0000AC  00A4               	dw	_Default_ISR shr (0+2)
 56744                           
 56745                           ; Vector 83 : NCO2
 56746   0000AE  00A4               	dw	_Default_ISR shr (0+2)
 56747                           
 56748                           ; Vector 84 : DMA3SCNT
 56749   0000B0  00A4               	dw	_Default_ISR shr (0+2)
 56750                           
 56751                           ; Vector 85 : DMA3DCNT
 56752   0000B2  00A4               	dw	_Default_ISR shr (0+2)
 56753                           
 56754                           ; Vector 86 : DMA3OR
 56755   0000B4  00A4               	dw	_Default_ISR shr (0+2)
 56756                           
 56757                           ; Vector 87 : DMA3A
 56758   0000B6  00A4               	dw	_Default_ISR shr (0+2)
 56759                           
 56760                           ; Vector 88 : CCP3
 56761   0000B8  00A4               	dw	_Default_ISR shr (0+2)
 56762                           
 56763                           ; Vector 89 : CLC6
 56764   0000BA  00A4               	dw	_Default_ISR shr (0+2)
 56765                           
 56766                           ; Vector 90 : CWG3
 56767   0000BC  00A4               	dw	_Default_ISR shr (0+2)
 56768                           
 56769                           ; Vector 91 : TMR4
 56770   0000BE  00A4               	dw	_Default_ISR shr (0+2)
 56771                           
 56772                           ; Vector 92 : DMA4SCNT
 56773   0000C0  00A4               	dw	_Default_ISR shr (0+2)
 56774                           
 56775                           ; Vector 93 : DMA4DCNT
 56776   0000C2  00A4               	dw	_Default_ISR shr (0+2)
 56777                           
 56778                           ; Vector 94 : DMA4OR
 56779   0000C4  00A4               	dw	_Default_ISR shr (0+2)
 56780                           
 56781                           ; Vector 95 : DMA4A
 56782   0000C6  00A4               	dw	_Default_ISR shr (0+2)
 56783                           
 56784                           ; Vector 96 : U4RX
 56785   0000C8  00A4               	dw	_Default_ISR shr (0+2)
 56786                           
 56787                           ; Vector 97 : U4TX
 56788   0000CA  00A4               	dw	_Default_ISR shr (0+2)
 56789                           
 56790                           ; Vector 98 : U4E
 56791   0000CC  00A4               	dw	_Default_ISR shr (0+2)
 56792                           
 56793                           ; Vector 99 : U4
 56794   0000CE  00A4               	dw	_Default_ISR shr (0+2)
 56795                           
 56796                           ; Vector 100 : DMA5SCNT
 56797   0000D0  00A4               	dw	_Default_ISR shr (0+2)
 56798                           
 56799                           ; Vector 101 : DMA5DCNT
 56800   0000D2  00A4               	dw	_Default_ISR shr (0+2)
 56801                           
 56802                           ; Vector 102 : DMA5OR
 56803   0000D4  00A4               	dw	_Default_ISR shr (0+2)
 56804                           
 56805                           ; Vector 103 : DMA5A
 56806   0000D6  00A4               	dw	_Default_ISR shr (0+2)
 56807                           
 56808                           ; Vector 104 : U5RX
 56809   0000D8  00A4               	dw	_Default_ISR shr (0+2)
 56810                           
 56811                           ; Vector 105 : U5TX
 56812   0000DA  00A4               	dw	_Default_ISR shr (0+2)
 56813                           
 56814                           ; Vector 106 : U5E
 56815   0000DC  00A4               	dw	_Default_ISR shr (0+2)
 56816                           
 56817                           ; Vector 107 : U5
 56818   0000DE  00A4               	dw	_Default_ISR shr (0+2)
 56819                           
 56820                           ; Vector 108 : DMA6SCNT
 56821   0000E0  00A4               	dw	_Default_ISR shr (0+2)
 56822                           
 56823                           ; Vector 109 : DMA6DCNT
 56824   0000E2  00A4               	dw	_Default_ISR shr (0+2)
 56825                           
 56826                           ; Vector 110 : DMA6OR
 56827   0000E4  00A4               	dw	_Default_ISR shr (0+2)
 56828                           
 56829                           ; Vector 111 : DMA6A
 56830   0000E6  00A4               	dw	_Default_ISR shr (0+2)
 56831                           
 56832                           ; Vector 112 : Undefined
 56833   0000E8  0042               	dw	ivt0x8_undefint shr (0+2)
 56834                           
 56835                           ; Vector 113 : CLC7
 56836   0000EA  00A4               	dw	_Default_ISR shr (0+2)
 56837                           
 56838                           ; Vector 114 : CM2
 56839   0000EC  00A4               	dw	_Default_ISR shr (0+2)
 56840                           
 56841                           ; Vector 115 : NCO3
 56842   0000EE  00A4               	dw	_Default_ISR shr (0+2)
 56843                           
 56844                           ; Vector 116 : DMA7SCNT
 56845   0000F0  00A4               	dw	_Default_ISR shr (0+2)
 56846                           
 56847                           ; Vector 117 : DMA7DCNT
 56848   0000F2  00A4               	dw	_Default_ISR shr (0+2)
 56849                           
 56850                           ; Vector 118 : DMA7OR
 56851   0000F4  00A4               	dw	_Default_ISR shr (0+2)
 56852                           
 56853                           ; Vector 119 : DMA7A
 56854   0000F6  00A4               	dw	_Default_ISR shr (0+2)
 56855                           
 56856                           ; Vector 120 : NVM
 56857   0000F8  00A4               	dw	_Default_ISR shr (0+2)
 56858                           
 56859                           ; Vector 121 : CLC8
 56860   0000FA  00A4               	dw	_Default_ISR shr (0+2)
 56861                           
 56862                           ; Vector 122 : CRC
 56863   0000FC  00A4               	dw	_Default_ISR shr (0+2)
 56864                           
 56865                           ; Vector 123 : TMR6
 56866   0000FE  00A4               	dw	_Default_ISR shr (0+2)
 56867                           
 56868                           ; Vector 124 : DMA8SCNT
 56869   000100  00A4               	dw	_Default_ISR shr (0+2)
 56870                           
 56871                           ; Vector 125 : DMA8DCNT
 56872   000102  00A4               	dw	_Default_ISR shr (0+2)
 56873                           
 56874                           ; Vector 126 : DMA8OR
 56875   000104  00A4               	dw	_Default_ISR shr (0+2)
 56876                           
 56877                           ; Vector 127 : DMA8A
 56878   000106  00A4               	dw	_Default_ISR shr (0+2)
 56879   000108                     ivt0x8_undefint:
 56880                           	callstack 0
 56881   000108  00FF               	reset	
 56882                           
 56883                           	psect	rparam
 56884   000001                     ___rparam_used  equ	1
 56885   000000                     ___param_bank   equ	0
 56886   000000                     __Lparam        equ	__Lrparam
 56887   000000                     __Hparam        equ	__Hrparam
 56888                           
 56889                           	psect	config
 56890                           
 56891                           ;Config register CONFIG1 @ 0x300000
 56892                           ;	External Oscillator Selection
 56893                           ;	FEXTOSC = OFF, Oscillator not enabled
 56894                           ;	Reset Oscillator Selection
 56895                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 56896   300000                     	org	3145728
 56897   300000  8C                 	db	140
 56898                           
 56899                           ;Config register CONFIG2 @ 0x300001
 56900                           ;	Clock out Enable bit
 56901                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 56902                           ;	PRLOCKED One-Way Set Enable bit
 56903                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 56904                           ;	Clock Switch Enable bit
 56905                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 56906                           ;	JTAG Enable bit
 56907                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 56908                           ;	Fail-Safe Clock Monitor Enable bit
 56909                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 56910                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 56911                           ;	FCMENP = OFF, FSCM timer will not set FSCMP bit or OSFIF interrupt on Primary XTAL fai
      +                          lure
 56912                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 56913                           ;	FCMENS = OFF, FSCM timer will not set FSCMS bit or OSFIF interrupt on Secondary XTAL f
      +                          ailure
 56914   300001                     	org	3145729
 56915   300001  2F                 	db	47
 56916                           
 56917                           ;Config register CONFIG3 @ 0x300002
 56918                           ;	MCLR Enable bit
 56919                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 56920                           ;	Power-up timer selection bits
 56921                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 56922                           ;	Multi-vector enable bit
 56923                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 56924                           ;	IVTLOCK bit One-way set enable bit
 56925                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 56926                           ;	Low Power BOR Enable bit
 56927                           ;	LPBOREN = OFF, Low-Power BOR disabled
 56928                           ;	Brown-out Reset Enable bits
 56929                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 56930   300002                     	org	3145730
 56931   300002  FF                 	db	255
 56932                           
 56933                           ;Config register CONFIG4 @ 0x300003
 56934                           ;	Brown-out Reset Voltage Selection bits
 56935                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 56936                           ;	ZCD Disable bit
 56937                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 56938                           ;	PPSLOCK bit One-Way Set Enable bit
 56939                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
 56940                           ;	Stack Full/Underflow Reset Enable bit
 56941                           ;	STVREN = ON, Stack full/underflow will cause Reset
 56942                           ;	Low Voltage Programming Enable bit
 56943                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 56944                           ;	Extended Instruction Set Enable bit
 56945                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 56946   300003                     	org	3145731
 56947   300003  F7                 	db	247
 56948                           
 56949                           ;Config register CONFIG5 @ 0x300004
 56950                           ;	WDT Period selection bits
 56951                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 56952                           ;	WDT operating mode
 56953                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 56954   300004                     	org	3145732
 56955   300004  9F                 	db	159
 56956                           
 56957                           ;Config register CONFIG6 @ 0x300005
 56958                           ;	WDT Window Select bits
 56959                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 56960                           ;	WDT input clock selector
 56961                           ;	WDTCCS = SC, Software Control
 56962   300005                     	org	3145733
 56963   300005  FF                 	db	255
 56964                           
 56965                           ;Config register CONFIG7 @ 0x300006
 56966                           ;	Boot Block Size selection bits
 56967                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 56968                           ;	Boot Block enable bit
 56969                           ;	BBEN = OFF, Boot block disabled
 56970                           ;	Storage Area Flash enable bit
 56971                           ;	SAFEN = OFF, SAF disabled
 56972                           ;	Background Debugger
 56973                           ;	DEBUG = 0x1, unprogrammed default
 56974   300006                     	org	3145734
 56975   300006  FF                 	db	255
 56976                           
 56977                           ;Config register CONFIG8 @ 0x300007
 56978                           ;	Boot Block Write Protection bit
 56979                           ;	WRTB = OFF, Boot Block not Write protected
 56980                           ;	Configuration Register Write Protection bit
 56981                           ;	WRTC = OFF, Configuration registers not Write protected
 56982                           ;	Data EEPROM Write Protection bit
 56983                           ;	WRTD = OFF, Data EEPROM not Write protected
 56984                           ;	SAF Write protection bit
 56985                           ;	WRTSAF = OFF, SAF not Write Protected
 56986                           ;	Application Block write protection bit
 56987                           ;	WRTAPP = OFF, Application Block not write protected
 56988   300007                     	org	3145735
 56989   300007  FF                 	db	255
 56990                           
 56991                           ;Config register CONFIG9 @ 0x300008
 56992                           ;	CRC on boot output pin selection
 56993                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 56994                           ;	CRC on boot output pin enable bit
 56995                           ;	BPEN = OFF, CRC on boot output pin disabled
 56996                           ;	CRC on boot output pin open drain bit
 56997                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 56998   300008                     	org	3145736
 56999   300008  FF                 	db	255
 57000                           
 57001                           ;Config register CONFIG10 @ 0x300009
 57002                           ;	PFM and Data EEPROM Code Protection bit
 57003                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 57004   300009                     	org	3145737
 57005   300009  FF                 	db	255
 57006                           
 57007                           ;Config register CONFIG11 @ 0x30000A
 57008                           ;	CRC on boot scan enable for boot area
 57009                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 57010                           ;	CRC on boot Continue on Error for boot areas bit
 57011                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 57012                           ;	CRC on boot application code scan enable
 57013                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 57014                           ;	CRC on boot SAF area scan enable
 57015                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 57016                           ;	CRC on boot Data EEPROM scan enable
 57017                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 57018                           ;	CRC on boot Config fuses scan enable
 57019                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 57020                           ;	CRC on boot Continue on Error for non-boot areas bit
 57021                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 57022                           ;	Boot on CRC Enable bit
 57023                           ;	BOOTPOR = OFF, CRC on boot will not run
 57024   30000A                     	org	3145738
 57025   30000A  FF                 	db	255
 57026                           
 57027                           ;Config register CONFIG12 @ 0x30000B
 57028                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 57029                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 57030   30000B                     	org	3145739
 57031   30000B  FF                 	db	255
 57032                           
 57033                           ;Config register CONFIG13 @ 0x30000C
 57034                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 57035                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 57036   30000C                     	org	3145740
 57037   30000C  FF                 	db	255
 57038                           
 57039                           ;Config register CONFIG14 @ 0x30000D
 57040                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 57041                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 57042   30000D                     	org	3145741
 57043   30000D  FF                 	db	255
 57044                           
 57045                           ;Config register CONFIG15 @ 0x30000E
 57046                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 57047                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 57048   30000E                     	org	3145742
 57049   30000E  FF                 	db	255
 57050                           
 57051                           ;Config register CONFIG16 @ 0x30000F
 57052                           ;	Boot Sector Seed for CRC on boot bits 31-24
 57053                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 57054   30000F                     	org	3145743
 57055   30000F  FF                 	db	255
 57056                           
 57057                           ;Config register CONFIG17 @ 0x300010
 57058                           ;	Boot Sector Seed for CRC on boot bits 23-16
 57059                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 57060   300010                     	org	3145744
 57061   300010  FF                 	db	255
 57062                           
 57063                           ;Config register CONFIG18 @ 0x300011
 57064                           ;	Boot Sector Seed for CRC on boot bits 15-8
 57065                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 57066   300011                     	org	3145745
 57067   300011  FF                 	db	255
 57068                           
 57069                           ;Config register CONFIG19 @ 0x300012
 57070                           ;	Boot Sector Seed for CRC on boot bits 7-0
 57071                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 57072   300012                     	org	3145746
 57073   300012  FF                 	db	255
 57074                           
 57075                           ;Config register CONFIG20 @ 0x300013
 57076                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 57077                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 57078   300013                     	org	3145747
 57079   300013  FF                 	db	255
 57080                           
 57081                           ;Config register CONFIG21 @ 0x300014
 57082                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 57083                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 57084   300014                     	org	3145748
 57085   300014  FF                 	db	255
 57086                           
 57087                           ;Config register CONFIG22 @ 0x300015
 57088                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 57089                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 57090   300015                     	org	3145749
 57091   300015  FF                 	db	255
 57092                           
 57093                           ;Config register CONFIG23 @ 0x300016
 57094                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 57095                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 57096   300016                     	org	3145750
 57097   300016  FF                 	db	255
 57098                           
 57099                           ;Config register CONFIG24 @ 0x300017
 57100                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 57101                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 57102   300017                     	org	3145751
 57103   300017  FF                 	db	255
 57104                           
 57105                           ;Config register CONFIG25 @ 0x300018
 57106                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 57107                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 57108   300018                     	org	3145752
 57109   300018  FF                 	db	255
 57110                           
 57111                           ;Config register CONFIG26 @ 0x300019
 57112                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 57113                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 57114   300019                     	org	3145753
 57115   300019  FF                 	db	255
 57116                           
 57117                           ;Config register CONFIG27 @ 0x30001A
 57118                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 57119                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 57120   30001A                     	org	3145754
 57121   30001A  FF                 	db	255
 57122                           
 57123                           ;Config register CONFIG28 @ 0x30001B
 57124                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 57125                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 57126   30001B                     	org	3145755
 57127   30001B  FF                 	db	255
 57128                           
 57129                           ;Config register CONFIG29 @ 0x30001C
 57130                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 57131                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 57132   30001C                     	org	3145756
 57133   30001C  FF                 	db	255
 57134                           
 57135                           ;Config register CONFIG30 @ 0x30001D
 57136                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 57137                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 57138   30001D                     	org	3145757
 57139   30001D  FF                 	db	255
 57140                           
 57141                           ;Config register CONFIG31 @ 0x30001E
 57142                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 57143                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 57144   30001E                     	org	3145758
 57145   30001E  FF                 	db	255
 57146                           
 57147                           ;Config register CONFIG32 @ 0x30001F
 57148                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 57149                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 57150   30001F                     	org	3145759
 57151   30001F  FF                 	db	255
 57152                           
 57153                           ;Config register CONFIG33 @ 0x300020
 57154                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 57155                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 57156   300020                     	org	3145760
 57157   300020  FF                 	db	255
 57158                           
 57159                           ;Config register CONFIG34 @ 0x300021
 57160                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 57161                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 57162   300021                     	org	3145761
 57163   300021  FF                 	db	255
 57164                           
 57165                           ;Config register CONFIG35 @ 0x300022
 57166                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 57167                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 57168   300022                     	org	3145762
 57169   300022  FF                 	db	255
 57170                           tosu	equ	0x4FF
 57171                           tosh	equ	0x4FE
 57172                           tosl	equ	0x4FD
 57173                           stkptr	equ	0x4FC
 57174                           pclatu	equ	0x4FB
 57175                           pclath	equ	0x4FA
 57176                           pcl	equ	0x4F9
 57177                           tblptru	equ	0x4F8
 57178                           tblptrh	equ	0x4F7
 57179                           tblptrl	equ	0x4F6
 57180                           tablat	equ	0x4F5
 57181                           prodh	equ	0x4F4
 57182                           prodl	equ	0x4F3
 57183                           indf0	equ	0x4EF
 57184                           postinc0	equ	0x4EE
 57185                           postdec0	equ	0x4ED
 57186                           preinc0	equ	0x4EC
 57187                           plusw0	equ	0x4EB
 57188                           fsr0h	equ	0x4EA
 57189                           fsr0l	equ	0x4E9
 57190                           wreg	equ	0x4E8
 57191                           indf1	equ	0x4E7
 57192                           postinc1	equ	0x4E6
 57193                           postdec1	equ	0x4E5
 57194                           preinc1	equ	0x4E4
 57195                           plusw1	equ	0x4E3
 57196                           fsr1h	equ	0x4E2
 57197                           fsr1l	equ	0x4E1
 57198                           bsr	equ	0x4E0
 57199                           indf2	equ	0x4DF
 57200                           postinc2	equ	0x4DE
 57201                           postdec2	equ	0x4DD
 57202                           preinc2	equ	0x4DC
 57203                           plusw2	equ	0x4DB
 57204                           fsr2h	equ	0x4DA
 57205                           fsr2l	equ	0x4D9
 57206                           status	equ	0x4D8

Data Sizes:
    Strings     3551
    Constant    30
    Data        177
    BSS         3343
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160    160     160
    BANK6           256    256     256
    BANK7           256    158     256
    BANK8           256      0     223
    BANK9           256      0     179
    BANK10          256      0     209
    BANK11          256      0     128
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    acquire_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    acquire_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    arg	PTR unsigned char [5] size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    board_name	PTR unsigned char  size(2) Largest target is 43
		 -> STR_48(CODE[43]), 

    bus_master_operation@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    check_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    cmd$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_55(CODE[3]), STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), 
		 -> STR_59(CODE[7]), STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), 
		 -> STR_63(CODE[8]), STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), 
		 -> STR_67(CODE[5]), STR_68(CODE[2]), STR_69(CODE[1]), 

    cmd$func	PTR FTN()enum E23452 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    conf02	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_49(CODE[11]), 

    conf16	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_50(CODE[11]), 

    cpm_drives$filep	PTR struct . size(2) Largest target is 0

    create_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_mkdir@sobj(COMRAM[14]), 
		 -> f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), pb$fp(COMRAM[2]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    create_name@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK6[2]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    ctx_$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    del_space@bytes	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    dir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_alloc@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    dir_find@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_find@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_next@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_next@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_read@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 

    dir_register@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_register@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_remove@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_unlink@sdj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    dir_sdi@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), fs(BIGRAM[564]), 
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    dj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djn$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    djo$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    f_chdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_chdir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_close@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_closedir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_closedir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@buff	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_getcwd@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_getcwd@tp	PTR unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_gets@buff	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_gets@fp	PTR struct . size(2) Largest target is 548
		 -> rom_fl(BIGRAM[546]), 

    f_gets@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 0

    f_lseek@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mkdir@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    f_open@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_open@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_opendir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_opendir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_opendir@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    f_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> f_gets@rc(BANK6[2]), fin_cnt(BANK7[2]), load_program@br(BANK7[2]), read_sector@n(BANK6[2]), 
		 -> see_file@br(BANK7[2]), 

    f_read@buff	PTR void  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_read@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_read@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_read@rbuff	PTR unsigned char  size(2) Largest target is 512
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), tmp_buf(BIGRAM[512]), 

    f_readdir@dp	PTR struct . size(2) Largest target is 42
		 -> scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    f_readdir@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    f_readdir@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djn$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_rename@djo$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_stat@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), rom_fl(BIGRAM[546]), 

    f_sync@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_truncate@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@dj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_unlink@sdj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@buff	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> putc_bfd@n(COMRAM[2]), putc_flush@nw(COMRAM[2]), write_sector@n(BANK6[2]), 

    f_write@fp	PTR struct . size(2) Largest target is 2
		 -> pb$fp(COMRAM[2]), 

    f_write@fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> pb$buf(COMRAM[64]), 

    FatFs	PTR struct .[1] size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    follow_path@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@dp$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    fsdir$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    fsdir$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_char	PTR FTN()int [2] size(3) Largest target is 2
		 -> in_file(), u_getch(), 

    get_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_chdir@dj(BANK6[40]), f_getcwd@dj(BANK7[40]), f_getfree@obj(COMRAM[14]), f_mkdir@dj(COMRAM[40]), 
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), in_fl(BIGRAM[546]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fat@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp	PTR struct . size(2) Largest target is 42
		 -> f_getcwd@dj(BANK7[40]), f_stat@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), 

    get_fileinfo@dp$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@dp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> f_getcwd@fno(BANK7[22]), scan_files1@fno(BANK7[22]), scan_files@fno(BANK7[22]), 

    get_hex@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_chdrive@path(COMRAM[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), 
		 -> f_mkdir@path(COMRAM[2]), f_mount@path(BANK6[2]), f_mount@rp(BANK6[2]), f_open@path(BANK6[2]), 
		 -> f_opendir@path(BANK6[2]), f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), f_stat@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 512
		 -> fin_name(BANK8[13]), line_buf(BANK10[81]), STR_28(CODE[15]), STR_49(CODE[11]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_85(CODE[5]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    get_line@s	PTR unsigned char  size(2) Largest target is 81
		 -> line_buf(BANK10[81]), 

    get_str@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    in_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    in_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    load_config@a	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_config@conf	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_49(CODE[11]), STR_50(CODE[11]), 

    load_config@str	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_file@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@fname	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    load_program@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    load_program@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    main@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    main@res	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mem_dump@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_30(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcmp@vl	PTR const void  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    memcmp@vr	PTR const void  size(2) Largest target is 512
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@djo(COMRAM[40]), f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), STR_30(CODE[9]), tmp_buf(BIGRAM[512]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 564
		 -> dbuf(BANK8[80]), disk_buf(BANK10[128]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    mezID	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_47(CODE[8]), 

    mon02	PTR unsigned char  size(2) Largest target is 11
		 -> STR_51(CODE[11]), 

    mon16	PTR unsigned char  size(2) Largest target is 11
		 -> STR_52(CODE[11]), 

    mon_prog@p	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    mount_volume@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    mount_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_chdir@path(BANK6[2]), f_getcwd@buff(BANK6[2]), f_getfree@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_mount@path(BANK6[2]), f_open@path(BANK6[2]), f_opendir@path(BANK6[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 

    mount_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> dj$obj(COMRAM[15]), dj$obj$fs(COMRAM[2]), f_chdir@fs(BANK6[2]), f_getcwd@fs(BANK7[2]), 
		 -> f_getfree@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_mount@fs(BANK6[2]), f_open@dj(BANK6[40]), 
		 -> f_open@fs(BANK6[2]), f_opendir@fs(BANK6[2]), f_rename@fs(COMRAM[2]), f_unlink@fs(COMRAM[2]), 

    move_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    pb$fp	PTR struct . size(2) Largest target is 0

    pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    print_reg@reg_02	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    print_reg@reg_816	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_100(CODE[10]), STR_101(CODE[12]), 
		 -> STR_102(CODE[3]), STR_103(CODE[8]), STR_104(CODE[8]), STR_105(CODE[3]), 
		 -> STR_106(CODE[20]), STR_107(CODE[20]), STR_109(CODE[22]), STR_11(CODE[44]), 
		 -> STR_110(CODE[34]), STR_111(CODE[31]), STR_112(CODE[54]), STR_113(CODE[32]), 
		 -> STR_114(CODE[56]), STR_115(CODE[48]), STR_116(CODE[41]), STR_117(CODE[24]), 
		 -> STR_118(CODE[41]), STR_119(CODE[23]), STR_12(CODE[28]), STR_120(CODE[16]), 
		 -> STR_121(CODE[11]), STR_122(CODE[11]), STR_123(CODE[9]), STR_124(CODE[8]), 
		 -> STR_125(CODE[19]), STR_126(CODE[10]), STR_127(CODE[13]), STR_132(CODE[3]), 
		 -> STR_134(CODE[21]), STR_135(CODE[29]), STR_136(CODE[31]), STR_137(CODE[29]), 
		 -> STR_138(CODE[13]), STR_139(CODE[14]), STR_14(CODE[44]), STR_140(CODE[10]), 
		 -> STR_141(CODE[20]), STR_142(CODE[26]), STR_143(CODE[22]), STR_144(CODE[17]), 
		 -> STR_145(CODE[17]), STR_146(CODE[34]), STR_147(CODE[33]), STR_148(CODE[16]), 
		 -> STR_149(CODE[19]), STR_15(CODE[29]), STR_150(CODE[16]), STR_151(CODE[19]), 
		 -> STR_152(CODE[18]), STR_153(CODE[20]), STR_154(CODE[26]), STR_155(CODE[22]), 
		 -> STR_156(CODE[26]), STR_157(CODE[17]), STR_158(CODE[17]), STR_159(CODE[38]), 
		 -> STR_160(CODE[3]), STR_161(CODE[15]), STR_162(CODE[27]), STR_163(CODE[22]), 
		 -> STR_164(CODE[19]), STR_165(CODE[22]), STR_166(CODE[19]), STR_167(CODE[3]), 
		 -> STR_168(CODE[26]), STR_169(CODE[3]), STR_17(CODE[44]), STR_170(CODE[21]), 
		 -> STR_171(CODE[14]), STR_172(CODE[38]), STR_174(CODE[45]), STR_176(CODE[28]), 
		 -> STR_177(CODE[25]), STR_178(CODE[19]), STR_179(CODE[45]), STR_18(CODE[50]), 
		 -> STR_180(CODE[25]), STR_181(CODE[27]), STR_182(CODE[35]), STR_183(CODE[46]), 
		 -> STR_184(CODE[36]), STR_185(CODE[43]), STR_186(CODE[38]), STR_187(CODE[41]), 
		 -> STR_188(CODE[18]), STR_189(CODE[34]), STR_19(CODE[8]), STR_190(CODE[36]), 
		 -> STR_191(CODE[50]), STR_193(CODE[55]), STR_194(CODE[50]), STR_196(CODE[50]), 
		 -> STR_197(CODE[35]), STR_198(CODE[42]), STR_199(CODE[47]), STR_2(CODE[23]), 
		 -> STR_20(CODE[6]), STR_21(CODE[6]), STR_22(CODE[9]), STR_23(CODE[6]), 
		 -> STR_24(CODE[6]), STR_25(CODE[24]), STR_3(CODE[39]), STR_35(CODE[22]), 
		 -> STR_37(CODE[32]), STR_38(CODE[21]), STR_39(CODE[31]), STR_4(CODE[26]), 
		 -> STR_41(CODE[25]), STR_42(CODE[26]), STR_45(CODE[23]), STR_46(CODE[35]), 
		 -> STR_6(CODE[19]), STR_7(CODE[21]), STR_70(CODE[22]), STR_71(CODE[23]), 
		 -> STR_72(CODE[23]), STR_73(CODE[14]), STR_74(CODE[14]), STR_75(CODE[5]), 
		 -> STR_76(CODE[26]), STR_77(CODE[40]), STR_78(CODE[36]), STR_79(CODE[19]), 
		 -> STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[25]), STR_83(CODE[39]), 
		 -> STR_84(CODE[19]), STR_86(CODE[27]), STR_87(CODE[12]), STR_88(CODE[25]), 
		 -> STR_89(CODE[23]), STR_9(CODE[23]), STR_90(CODE[14]), STR_91(CODE[19]), 
		 -> STR_92(CODE[3]), STR_93(CODE[9]), STR_94(CODE[10]), STR_95(CODE[12]), 
		 -> STR_96(CODE[15]), STR_97(CODE[20]), STR_98(CODE[20]), STR_99(CODE[9]), 

    put_fat@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    putc_bfd@pb$fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp	PTR struct . size(2) Largest target is 0

    putc_init@pb$fp$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    putc_init@pb$fp$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    read_sector@filep	PTR struct . size(2) Largest target is 0

    read_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    read_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> disk_buf(BANK10[128]), req_tbl(BANK7[13]), tmp_buf(BIGRAM[512]), 

    release_bus@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    release_bus@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@sobj(COMRAM[14]), f_open@dj(BANK6[40]), f_unlink@dj(COMRAM[40]), 

    remove_chain@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    rom_fl$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S204$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S211$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S2371$filep	PTR struct . size(2) Largest target is 0

    S246$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    S257$fp	PTR struct . size(2) Largest target is 0

    S2745$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_53(CODE[8]), STR_54(CODE[8]), 

    S2745$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    S2770$cmd_name	PTR unsigned char  size(2) Largest target is 8
		 -> STR_55(CODE[3]), STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), 
		 -> STR_59(CODE[7]), STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), 
		 -> STR_63(CODE[8]), STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), 
		 -> STR_67(CODE[5]), STR_68(CODE[2]), STR_69(CODE[1]), 

    S2770$func	PTR FTN()enum E23452 size(3) Largest target is 1
		 -> boot_file(), change_directory(), flash_apl(), load_file(), 
		 -> mem_dump(), mon_prog(), print_com(), print_reg(), 
		 -> restart_prog(), return_cpu(), scan_files(), scan_files1(), 
		 -> see_file(), wstart_prog(), 

    S3775SDCard$spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    S4597$buffer	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    S4597$source	PTR const unsigned char  size(2) Largest target is 0

    scan_files1@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files1@fn	PTR unsigned char  size(2) Largest target is 22
		 -> f_getcwd@fno(BANK7[22]), fno$fname(COMRAM[13]), 

    scan_files1@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files1@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    scan_files@dir$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    scan_files@fn	PTR unsigned char  size(2) Largest target is 22
		 -> f_getcwd@fno(BANK7[22]), fno$fname(COMRAM[13]), 

    scan_files@p	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    scan_files@path	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SDCard_command@response_buffer	PTR void  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@responsep	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), 

    SDCard_command@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_command_r1@r1	PTR unsigned char  size(2) Largest target is 5
		 -> SDCard_init@buf(BANK5[5]), SDCard_read512@response(BANK5[1]), SDCard_write512@response(BANK5[1]), 

    __SDCard_command_r1@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_crc16@buf	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@endp	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    __SDCard_crc16@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), SDCard_read512@response(BANK5[1]), 
		 -> SDCard_write512@response(BANK5[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_crc@buf	PTR const void  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@endp	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_crc@p	PTR unsigned char  size(2) Largest target is 6
		 -> __SDCard_command_r1@buf(COMRAM[6]), 

    SDCard_end_transaction@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_init@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_read512@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_read512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    __SDCard_wait_response@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SDCard_write512@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), NULL(NULL[0]), 

    SDCard_write512@spi	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    sdj$dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sdj$obj$fs$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    see_file@header	PTR struct . size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    see_file@rdbuf	PTR void  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    seek_disk@filep	PTR struct . size(2) Largest target is 0

    seek_disk@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    seek_disk@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    set_arg@buf	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sobj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sp__f_gets	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), dbuf(BANK8[80]), disk_buf(BANK10[128]), f_gets@s(BANK6[4]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djn(COMRAM[40]), fs(BIGRAM[564]), fs$win(BIGRAM[512]), 
		 -> pb$fp(COMRAM[2]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 564
		 -> dir$fn(COMRAM[12]), dj$fn(COMRAM[12]), djn$fn(COMRAM[12]), djo$fn(COMRAM[12]), 
		 -> f_chdir@dj(BANK6[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK6[40]), f_printf@pb(COMRAM[70]), 
		 -> f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), fs(BIGRAM[564]), in_fl(BIGRAM[546]), 
		 -> rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), scan_files@dir(BANK7[40]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    SPI_SD_begin@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_begin_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx	PTR struct SPI_HW size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_configure@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_ctx	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), 

    SPI_SD_dummy_clocks@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_end_transaction@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@buf	PTR void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_receive@p	PTR unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> fs(BIGRAM[564]), in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), 
		 -> SDCard_init@buf(BANK5[5]), SPI_SD_receive_byte@dummy(COMRAM[1]), tmp_buf(BIGRAM[512]), NULL(NULL[0]), 

    SPI_SD_receive_byte@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_select@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@buf	PTR const void  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    SPI_SD_send@ctx_	PTR struct SPI size(2) Largest target is 4
		 -> pic18f47q43_spi_ctx(BANK8[4]), NULL(NULL[0]), 

    SPI_SD_send@p	PTR unsigned char  size(2) Largest target is 564
		 -> disk_buf(BANK10[128]), f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), 
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), 
		 -> pb$buf(COMRAM[64]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), __SDCard_command_r1@buf(COMRAM[6]), 
		 -> SDCard_write512@response(BANK5[1]), SPI_SD_dummy_clocks@dummy(COMRAM[1]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_108(CODE[3]), STR_82(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 42
		 -> binv(BANK8[42]), fin_name(BANK8[13]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), fs$win(BIGRAM[512]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_getcwd@fno(BANK7[22]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), 
		 -> fno$fname(COMRAM[13]), fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), 
		 -> fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), 
		 -> in_fl$buf(BIGRAM[512]), in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), 
		 -> line_buf(BANK10[81]), pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), 
		 -> rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), 
		 -> rom_fl$sect(BIGRAM[4]), scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), 
		 -> STR_13(CODE[6]), STR_133(CODE[5]), STR_16(CODE[6]), STR_173(CODE[17]), 
		 -> STR_175(CODE[17]), STR_192(CODE[5]), STR_195(CODE[5]), STR_206(CODE[7]), 
		 -> STR_26(CODE[1]), STR_28(CODE[15]), STR_36(CODE[6]), STR_40(CODE[6]), 
		 -> STR_43(CODE[5]), STR_44(CODE[5]), STR_48(CODE[43]), STR_49(CODE[11]), 
		 -> STR_5(CODE[1]), STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> STR_53(CODE[8]), STR_54(CODE[8]), tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), 
		 -> tmp_buf$direct_page(UNKNOWN), tmp_buf$load_p(UNKNOWN), tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), 
		 -> tmp_buf$op2(UNKNOWN), tmp_buf$picif_p(UNKNOWN), tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), 
		 -> tmp_buf$REGDP(UNKNOWN), tmp_buf$REGPB(UNKNOWN), tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), 
		 -> tmp_buf$REGSP(UNKNOWN), tmp_buf$REGX(UNKNOWN), tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), 
		 -> util_addrdump@chars(BANK5[17]), util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 548
		 -> binv(BANK8[42]), clk_fs(BANK7[4]), dir$sect(COMRAM[4]), disk_initialize@buf(BANK6[128]), 
		 -> dj$sect(COMRAM[4]), djn$sect(COMRAM[4]), djo$sect(COMRAM[4]), f_getcwd@fno(BANK7[22]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fin_name(BANK8[13]), 
		 -> fno$fname(COMRAM[13]), fs$csize(BIGRAM[2]), fs$fatbase(BIGRAM[4]), fs$pdrv(BIGRAM[1]), 
		 -> fs$volbase(BIGRAM[4]), fs$win(BIGRAM[512]), fs$winsect(BIGRAM[4]), in_fl(BIGRAM[546]), 
		 -> in_fl$buf(BIGRAM[512]), in_fl$dir_sect(BIGRAM[4]), in_fl$obj$fs$objsize(BIGRAM[4]), in_fl$sect(BIGRAM[4]), 
		 -> line_buf(BANK10[81]), pb$fp(COMRAM[2]), pb$idx(COMRAM[2]), ?_printf(BANK5[2]), 
		 -> rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), rom_fl$dir_sect(BIGRAM[4]), rom_fl$obj$fs$objsize(BIGRAM[4]), 
		 -> rom_fl$sect(BIGRAM[4]), scan_files@fno(BANK7[22]), sdj$sect(COMRAM[4]), ?_sprintf(BANK5[2]), 
		 -> STR_13(CODE[6]), STR_133(CODE[5]), STR_16(CODE[6]), STR_173(CODE[17]), 
		 -> STR_175(CODE[17]), STR_192(CODE[5]), STR_195(CODE[5]), STR_26(CODE[1]), 
		 -> STR_28(CODE[15]), STR_36(CODE[6]), STR_40(CODE[6]), STR_43(CODE[5]), 
		 -> STR_44(CODE[5]), STR_48(CODE[43]), STR_49(CODE[11]), STR_5(CODE[1]), 
		 -> STR_50(CODE[11]), STR_51(CODE[11]), STR_52(CODE[11]), STR_53(CODE[8]), 
		 -> STR_54(CODE[8]), tmp_buf(BIGRAM[512]), tmp_buf$cstart_addr(UNKNOWN), tmp_buf$direct_page(UNKNOWN), 
		 -> tmp_buf$load_p(UNKNOWN), tmp_buf$mezID(UNKNOWN), tmp_buf$op1(UNKNOWN), tmp_buf$op2(UNKNOWN), 
		 -> tmp_buf$picif_p(UNKNOWN), tmp_buf$REGA(UNKNOWN), tmp_buf$REGDB(UNKNOWN), tmp_buf$REGDP(UNKNOWN), 
		 -> tmp_buf$REGPB(UNKNOWN), tmp_buf$REGPC(UNKNOWN), tmp_buf$REGPSR(UNKNOWN), tmp_buf$REGSP(UNKNOWN), 
		 -> tmp_buf$REGX(UNKNOWN), tmp_buf$REGY(UNKNOWN), tmp_buf$wstart_addr(UNKNOWN), util_addrdump@chars(BANK5[17]), 
		 -> util_hexdump@chars(BANK5[17]), NULL(NULL[0]), 

    str_inf@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_200(CODE[4]), STR_203(CODE[4]), 

    strin_func	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned int [2] size(3) Largest target is 2
		 -> get_str(), str_inf(), 

    strin_func$0	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_129(CODE[3]), STR_131(CODE[2]), STR_47(CODE[8]), 
		 -> STR_51(CODE[11]), STR_52(CODE[11]), STR_53(CODE[8]), STR_54(CODE[8]), 
		 -> STR_55(CODE[3]), STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), 
		 -> STR_59(CODE[7]), STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), 
		 -> STR_63(CODE[8]), STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), 
		 -> STR_67(CODE[5]), STR_68(CODE[2]), STR_69(CODE[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> f_printf@str(COMRAM[32]), STR_129(CODE[3]), STR_131(CODE[2]), STR_47(CODE[8]), 
		 -> STR_51(CODE[11]), STR_52(CODE[11]), STR_53(CODE[8]), STR_54(CODE[8]), 
		 -> STR_55(CODE[3]), STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), 
		 -> STR_59(CODE[7]), STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), 
		 -> STR_63(CODE[8]), STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), 
		 -> STR_67(CODE[5]), STR_68(CODE[2]), STR_69(CODE[1]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_129(CODE[3]), STR_131(CODE[2]), STR_47(CODE[8]), STR_51(CODE[11]), 
		 -> STR_52(CODE[11]), STR_53(CODE[8]), STR_54(CODE[8]), STR_55(CODE[3]), 
		 -> STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), STR_59(CODE[7]), 
		 -> STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), STR_63(CODE[8]), 
		 -> STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), STR_67(CODE[5]), 
		 -> STR_68(CODE[2]), STR_69(CODE[1]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 512
		 -> line_buf(BANK10[81]), STR_28(CODE[15]), STR_51(CODE[11]), STR_52(CODE[11]), 
		 -> tmp_buf(BIGRAM[512]), tmp_buf$mezID(UNKNOWN), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_129(CODE[3]), STR_131(CODE[2]), STR_47(CODE[8]), STR_51(CODE[11]), 
		 -> STR_52(CODE[11]), STR_53(CODE[8]), STR_54(CODE[8]), STR_55(CODE[3]), 
		 -> STR_56(CODE[4]), STR_57(CODE[3]), STR_58(CODE[5]), STR_59(CODE[7]), 
		 -> STR_60(CODE[7]), STR_61(CODE[5]), STR_62(CODE[4]), STR_63(CODE[8]), 
		 -> STR_64(CODE[6]), STR_65(CODE[5]), STR_66(CODE[6]), STR_67(CODE[5]), 
		 -> STR_68(CODE[2]), STR_69(CODE[1]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> load_config@a(BANK7[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    t_conf$conf	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_53(CODE[8]), STR_54(CODE[8]), 

    t_conf$val	PTR unsigned long  size(2) Largest target is 4
		 -> bioreq_ubuffadr(BANK7[4]), clk_fs(BANK7[4]), 

    unimon_console@buf	PTR unsigned char  size(2) Largest target is 512
		 -> tmp_buf(BIGRAM[512]), 

    util_addrdump@addr	PTR const void  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@buf	PTR const unsigned char  size(2) Largest target is 564
		 -> cin_file(BIGRAM[512]), disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), f_gets@s(BANK6[4]), 
		 -> f_printf@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), fs(BIGRAM[564]), 
		 -> fs$win(BIGRAM[512]), in_fl(BIGRAM[546]), in_fl$buf(BIGRAM[512]), pb$buf(COMRAM[64]), 
		 -> pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), rom_fl$buf(BIGRAM[512]), tmp_buf(BIGRAM[512]), 
		 -> NULL(NULL[0]), 

    util_addrdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_13(CODE[6]), STR_133(CODE[5]), STR_16(CODE[6]), STR_192(CODE[5]), 
		 -> STR_195(CODE[5]), STR_43(CODE[5]), STR_44(CODE[5]), 

    util_hexdump@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@buf	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), disk_initialize@buf(BANK6[128]), 

    util_hexdump@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_36(CODE[6]), STR_40(CODE[6]), STR_5(CODE[1]), 

    util_hexdump_sum@addr	PTR const void  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    util_hexdump_sum@header	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_36(CODE[6]), STR_40(CODE[6]), 

    util_hexdump_sum@p	PTR const unsigned char  size(2) Largest target is 128
		 -> disk_buf(BANK10[128]), 

    validate$1173	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> in_fl(BIGRAM[546]), pb$fp(COMRAM[2]), rom_fl(BIGRAM[546]), scan_files1@dir(BANK7[40]), 
		 -> scan_files@dir(BANK7[40]), 

    validate@obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_close@fs(BANK6[2]), f_closedir@fs(BANK5[2]), f_lseek@fs(BANK6[2]), f_read@fs(BANK6[2]), 
		 -> f_readdir@fs(BANK6[2]), f_sync@fs(BANK6[2]), f_truncate@fs(COMRAM[2]), f_write@fs(BANK6[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_100(CODE[10]), STR_101(CODE[12]), 
		 -> STR_102(CODE[3]), STR_103(CODE[8]), STR_104(CODE[8]), STR_105(CODE[3]), 
		 -> STR_106(CODE[20]), STR_107(CODE[20]), STR_108(CODE[3]), STR_109(CODE[22]), 
		 -> STR_11(CODE[44]), STR_110(CODE[34]), STR_111(CODE[31]), STR_112(CODE[54]), 
		 -> STR_113(CODE[32]), STR_114(CODE[56]), STR_115(CODE[48]), STR_116(CODE[41]), 
		 -> STR_117(CODE[24]), STR_118(CODE[41]), STR_119(CODE[23]), STR_12(CODE[28]), 
		 -> STR_120(CODE[16]), STR_121(CODE[11]), STR_122(CODE[11]), STR_123(CODE[9]), 
		 -> STR_124(CODE[8]), STR_125(CODE[19]), STR_126(CODE[10]), STR_127(CODE[13]), 
		 -> STR_132(CODE[3]), STR_134(CODE[21]), STR_135(CODE[29]), STR_136(CODE[31]), 
		 -> STR_137(CODE[29]), STR_138(CODE[13]), STR_139(CODE[14]), STR_14(CODE[44]), 
		 -> STR_140(CODE[10]), STR_141(CODE[20]), STR_142(CODE[26]), STR_143(CODE[22]), 
		 -> STR_144(CODE[17]), STR_145(CODE[17]), STR_146(CODE[34]), STR_147(CODE[33]), 
		 -> STR_148(CODE[16]), STR_149(CODE[19]), STR_15(CODE[29]), STR_150(CODE[16]), 
		 -> STR_151(CODE[19]), STR_152(CODE[18]), STR_153(CODE[20]), STR_154(CODE[26]), 
		 -> STR_155(CODE[22]), STR_156(CODE[26]), STR_157(CODE[17]), STR_158(CODE[17]), 
		 -> STR_159(CODE[38]), STR_160(CODE[3]), STR_161(CODE[15]), STR_162(CODE[27]), 
		 -> STR_163(CODE[22]), STR_164(CODE[19]), STR_165(CODE[22]), STR_166(CODE[19]), 
		 -> STR_167(CODE[3]), STR_168(CODE[26]), STR_169(CODE[3]), STR_17(CODE[44]), 
		 -> STR_170(CODE[21]), STR_171(CODE[14]), STR_172(CODE[38]), STR_174(CODE[45]), 
		 -> STR_176(CODE[28]), STR_177(CODE[25]), STR_178(CODE[19]), STR_179(CODE[45]), 
		 -> STR_18(CODE[50]), STR_180(CODE[25]), STR_181(CODE[27]), STR_182(CODE[35]), 
		 -> STR_183(CODE[46]), STR_184(CODE[36]), STR_185(CODE[43]), STR_186(CODE[38]), 
		 -> STR_187(CODE[41]), STR_188(CODE[18]), STR_189(CODE[34]), STR_19(CODE[8]), 
		 -> STR_190(CODE[36]), STR_191(CODE[50]), STR_193(CODE[55]), STR_194(CODE[50]), 
		 -> STR_196(CODE[50]), STR_197(CODE[35]), STR_198(CODE[42]), STR_199(CODE[47]), 
		 -> STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), STR_22(CODE[9]), 
		 -> STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), STR_3(CODE[39]), 
		 -> STR_35(CODE[22]), STR_37(CODE[32]), STR_38(CODE[21]), STR_39(CODE[31]), 
		 -> STR_4(CODE[26]), STR_41(CODE[25]), STR_42(CODE[26]), STR_45(CODE[23]), 
		 -> STR_46(CODE[35]), STR_6(CODE[19]), STR_7(CODE[21]), STR_70(CODE[22]), 
		 -> STR_71(CODE[23]), STR_72(CODE[23]), STR_73(CODE[14]), STR_74(CODE[14]), 
		 -> STR_75(CODE[5]), STR_76(CODE[26]), STR_77(CODE[40]), STR_78(CODE[36]), 
		 -> STR_79(CODE[19]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[25]), 
		 -> STR_82(CODE[3]), STR_83(CODE[39]), STR_84(CODE[19]), STR_86(CODE[27]), 
		 -> STR_87(CODE[12]), STR_88(CODE[25]), STR_89(CODE[23]), STR_9(CODE[23]), 
		 -> STR_90(CODE[14]), STR_91(CODE[19]), STR_92(CODE[3]), STR_93(CODE[9]), 
		 -> STR_94(CODE[10]), STR_95(CODE[12]), STR_96(CODE[15]), STR_97(CODE[20]), 
		 -> STR_98(CODE[20]), STR_99(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_100(CODE[10]), STR_101(CODE[12]), 
		 -> STR_102(CODE[3]), STR_103(CODE[8]), STR_104(CODE[8]), STR_105(CODE[3]), 
		 -> STR_106(CODE[20]), STR_107(CODE[20]), STR_108(CODE[3]), STR_109(CODE[22]), 
		 -> STR_11(CODE[44]), STR_110(CODE[34]), STR_111(CODE[31]), STR_112(CODE[54]), 
		 -> STR_113(CODE[32]), STR_114(CODE[56]), STR_115(CODE[48]), STR_116(CODE[41]), 
		 -> STR_117(CODE[24]), STR_118(CODE[41]), STR_119(CODE[23]), STR_12(CODE[28]), 
		 -> STR_120(CODE[16]), STR_121(CODE[11]), STR_122(CODE[11]), STR_123(CODE[9]), 
		 -> STR_124(CODE[8]), STR_125(CODE[19]), STR_126(CODE[10]), STR_127(CODE[13]), 
		 -> STR_132(CODE[3]), STR_134(CODE[21]), STR_135(CODE[29]), STR_136(CODE[31]), 
		 -> STR_137(CODE[29]), STR_138(CODE[13]), STR_139(CODE[14]), STR_14(CODE[44]), 
		 -> STR_140(CODE[10]), STR_141(CODE[20]), STR_142(CODE[26]), STR_143(CODE[22]), 
		 -> STR_144(CODE[17]), STR_145(CODE[17]), STR_146(CODE[34]), STR_147(CODE[33]), 
		 -> STR_148(CODE[16]), STR_149(CODE[19]), STR_15(CODE[29]), STR_150(CODE[16]), 
		 -> STR_151(CODE[19]), STR_152(CODE[18]), STR_153(CODE[20]), STR_154(CODE[26]), 
		 -> STR_155(CODE[22]), STR_156(CODE[26]), STR_157(CODE[17]), STR_158(CODE[17]), 
		 -> STR_159(CODE[38]), STR_160(CODE[3]), STR_161(CODE[15]), STR_162(CODE[27]), 
		 -> STR_163(CODE[22]), STR_164(CODE[19]), STR_165(CODE[22]), STR_166(CODE[19]), 
		 -> STR_167(CODE[3]), STR_168(CODE[26]), STR_169(CODE[3]), STR_17(CODE[44]), 
		 -> STR_170(CODE[21]), STR_171(CODE[14]), STR_172(CODE[38]), STR_174(CODE[45]), 
		 -> STR_176(CODE[28]), STR_177(CODE[25]), STR_178(CODE[19]), STR_179(CODE[45]), 
		 -> STR_18(CODE[50]), STR_180(CODE[25]), STR_181(CODE[27]), STR_182(CODE[35]), 
		 -> STR_183(CODE[46]), STR_184(CODE[36]), STR_185(CODE[43]), STR_186(CODE[38]), 
		 -> STR_187(CODE[41]), STR_188(CODE[18]), STR_189(CODE[34]), STR_19(CODE[8]), 
		 -> STR_190(CODE[36]), STR_191(CODE[50]), STR_193(CODE[55]), STR_194(CODE[50]), 
		 -> STR_196(CODE[50]), STR_197(CODE[35]), STR_198(CODE[42]), STR_199(CODE[47]), 
		 -> STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), STR_22(CODE[9]), 
		 -> STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), STR_3(CODE[39]), 
		 -> STR_35(CODE[22]), STR_37(CODE[32]), STR_38(CODE[21]), STR_39(CODE[31]), 
		 -> STR_4(CODE[26]), STR_41(CODE[25]), STR_42(CODE[26]), STR_45(CODE[23]), 
		 -> STR_46(CODE[35]), STR_6(CODE[19]), STR_7(CODE[21]), STR_70(CODE[22]), 
		 -> STR_71(CODE[23]), STR_72(CODE[23]), STR_73(CODE[14]), STR_74(CODE[14]), 
		 -> STR_75(CODE[5]), STR_76(CODE[26]), STR_77(CODE[40]), STR_78(CODE[36]), 
		 -> STR_79(CODE[19]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[25]), 
		 -> STR_82(CODE[3]), STR_83(CODE[39]), STR_84(CODE[19]), STR_86(CODE[27]), 
		 -> STR_87(CODE[12]), STR_88(CODE[25]), STR_89(CODE[23]), STR_9(CODE[23]), 
		 -> STR_90(CODE[14]), STR_91(CODE[19]), STR_92(CODE[3]), STR_93(CODE[9]), 
		 -> STR_94(CODE[10]), STR_95(CODE[12]), STR_96(CODE[15]), STR_97(CODE[20]), 
		 -> STR_98(CODE[20]), STR_99(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_1(CODE[25]), STR_10(CODE[18]), STR_100(CODE[10]), STR_101(CODE[12]), 
		 -> STR_102(CODE[3]), STR_103(CODE[8]), STR_104(CODE[8]), STR_105(CODE[3]), 
		 -> STR_106(CODE[20]), STR_107(CODE[20]), STR_108(CODE[3]), STR_109(CODE[22]), 
		 -> STR_11(CODE[44]), STR_110(CODE[34]), STR_111(CODE[31]), STR_112(CODE[54]), 
		 -> STR_113(CODE[32]), STR_114(CODE[56]), STR_115(CODE[48]), STR_116(CODE[41]), 
		 -> STR_117(CODE[24]), STR_118(CODE[41]), STR_119(CODE[23]), STR_12(CODE[28]), 
		 -> STR_120(CODE[16]), STR_121(CODE[11]), STR_122(CODE[11]), STR_123(CODE[9]), 
		 -> STR_124(CODE[8]), STR_125(CODE[19]), STR_126(CODE[10]), STR_127(CODE[13]), 
		 -> STR_132(CODE[3]), STR_134(CODE[21]), STR_135(CODE[29]), STR_136(CODE[31]), 
		 -> STR_137(CODE[29]), STR_138(CODE[13]), STR_139(CODE[14]), STR_14(CODE[44]), 
		 -> STR_140(CODE[10]), STR_141(CODE[20]), STR_142(CODE[26]), STR_143(CODE[22]), 
		 -> STR_144(CODE[17]), STR_145(CODE[17]), STR_146(CODE[34]), STR_147(CODE[33]), 
		 -> STR_148(CODE[16]), STR_149(CODE[19]), STR_15(CODE[29]), STR_150(CODE[16]), 
		 -> STR_151(CODE[19]), STR_152(CODE[18]), STR_153(CODE[20]), STR_154(CODE[26]), 
		 -> STR_155(CODE[22]), STR_156(CODE[26]), STR_157(CODE[17]), STR_158(CODE[17]), 
		 -> STR_159(CODE[38]), STR_160(CODE[3]), STR_161(CODE[15]), STR_162(CODE[27]), 
		 -> STR_163(CODE[22]), STR_164(CODE[19]), STR_165(CODE[22]), STR_166(CODE[19]), 
		 -> STR_167(CODE[3]), STR_168(CODE[26]), STR_169(CODE[3]), STR_17(CODE[44]), 
		 -> STR_170(CODE[21]), STR_171(CODE[14]), STR_172(CODE[38]), STR_174(CODE[45]), 
		 -> STR_176(CODE[28]), STR_177(CODE[25]), STR_178(CODE[19]), STR_179(CODE[45]), 
		 -> STR_18(CODE[50]), STR_180(CODE[25]), STR_181(CODE[27]), STR_182(CODE[35]), 
		 -> STR_183(CODE[46]), STR_184(CODE[36]), STR_185(CODE[43]), STR_186(CODE[38]), 
		 -> STR_187(CODE[41]), STR_188(CODE[18]), STR_189(CODE[34]), STR_19(CODE[8]), 
		 -> STR_190(CODE[36]), STR_191(CODE[50]), STR_193(CODE[55]), STR_194(CODE[50]), 
		 -> STR_196(CODE[50]), STR_197(CODE[35]), STR_198(CODE[42]), STR_199(CODE[47]), 
		 -> STR_2(CODE[23]), STR_20(CODE[6]), STR_21(CODE[6]), STR_22(CODE[9]), 
		 -> STR_23(CODE[6]), STR_24(CODE[6]), STR_25(CODE[24]), STR_3(CODE[39]), 
		 -> STR_35(CODE[22]), STR_37(CODE[32]), STR_38(CODE[21]), STR_39(CODE[31]), 
		 -> STR_4(CODE[26]), STR_41(CODE[25]), STR_42(CODE[26]), STR_45(CODE[23]), 
		 -> STR_46(CODE[35]), STR_6(CODE[19]), STR_7(CODE[21]), STR_70(CODE[22]), 
		 -> STR_71(CODE[23]), STR_72(CODE[23]), STR_73(CODE[14]), STR_74(CODE[14]), 
		 -> STR_75(CODE[5]), STR_76(CODE[26]), STR_77(CODE[40]), STR_78(CODE[36]), 
		 -> STR_79(CODE[19]), STR_8(CODE[33]), STR_80(CODE[24]), STR_81(CODE[25]), 
		 -> STR_82(CODE[3]), STR_83(CODE[39]), STR_84(CODE[19]), STR_86(CODE[27]), 
		 -> STR_87(CODE[12]), STR_88(CODE[25]), STR_89(CODE[23]), STR_9(CODE[23]), 
		 -> STR_90(CODE[14]), STR_91(CODE[19]), STR_92(CODE[3]), STR_93(CODE[9]), 
		 -> STR_94(CODE[10]), STR_95(CODE[12]), STR_96(CODE[15]), STR_97(CODE[20]), 
		 -> STR_98(CODE[20]), STR_99(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 

    write_sector@filep	PTR struct . size(2) Largest target is 0

    write_sector@filep$dir_ptr	PTR unsigned char  size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sector@filep$obj$fs	PTR struct . size(2) Largest target is 564
		 -> fs(BIGRAM[564]), NULL(NULL[0]), 

    write_sram@buf	PTR unsigned char  size(2) Largest target is 512
		 -> binv(BANK8[42]), cpu_flg(BANK7[1]), disk_buf(BANK10[128]), fh(BANK8[32]), 
		 -> mon_prog@sw(BANK7[1]), req_tbl(BANK7[13]), rom(CODE[16]), tmp_buf(BIGRAM[512]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _SDCard_command->___SDCard_command_r1
    _get_fileinfo->_ld_dword
    ___strtoxl->___lmul
    _strstr->_strncmp
    _ld_clust->_ld_word
    _create_name->_memset
    _st_clust->_st_word
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___almod
    ___SDCard_command_r1->___SDCard_wait_response
    ___SDCard_wait_response->_SPI_SD_receive_byte
    _SPI_SD_receive_byte->_SPI_SD_receive
    _SPI_SD_begin_transaction->_SPI_SD_select
    _SPI_SD_begin_transaction->_acquire_bus
    _SDCard_end_transaction->_SPI_SD_dummy_clocks
    _SPI_SD_end_transaction->_SPI_SD_select
    _SPI_SD_end_transaction->_release_bus
    _SPI_SD_dummy_clocks->_SPI_SD_send
    _clst2sect->___lmul

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    None.

Critical Paths under _URT3Rx_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _wait_for_programmer->_printf
    _setup_sd->_SDCard_init
    _SDCard_init->_SPI_SD_configure
    _SPI_SD_configure->_printf
    _setup_monitor->_load_program
    _f_getcwd->_move_window
    _dir_read->_move_window
    _f_closedir->_validate
    _reset_cpu->_printf
    _print_reg->_printf
    _print_com->_printf
    _mem_init->_util_addrdump
    _mem_dump->_util_addrdump
    _load_file->_load_program
    _load_config->_f_gets
    _get_line->_printf
    _flash_apl->_printf
    _boot_file->_load_program
    _prt_reload->_printf
    _sprintf->_vfprintf
    _bus_master_operation->_in_file
    _bus_master_operation->_u_getch
    _unimon_console->_in_file
    _unimon_console->_u_getch
    _f_open->_move_window
    _mount_volume->_disk_initialize
    _mount_volume->_move_window
    _check_fs->_move_window
    _disk_initialize->_SDCard_read512
    _dir_find->_move_window
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_next->_dir_clear
    _dir_clear->_sync_window
    _f_sync->_move_window
    _sync_fs->_sync_window
    _disk_ioctl->_printf
    _util_hexdump_sum->_util_hexdump
    _util_hexdump->_printf
    _put_fat->_move_window
    _validate->_disk_status
    _disk_status->_printf
    _get_fat->_move_window
    _move_window->_disk_read
    _sync_window->_disk_write
    _disk_write->_SDCard_write512
    _SDCard_write512->_util_addrdump
    _disk_read->_SDCard_read512
    _SDCard_read512->_util_addrdump
    _util_addrdump->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _URT3Rx_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _wstart_prog->_drive_cpu
    _setup_monitor->_drive_cpu
    _see_file->_f_open
    _scan_files1->_f_open
    _scan_files->_f_open
    _f_readdir->_dir_read
    _f_opendir->_mount_volume
    _f_getcwd->_mount_volume
    _dir_read->_dir_next
    _return_cpu->_drive_cpu
    _restart_prog->_drive_cpu
    _mon_prog->_drive_cpu
    _load_config->_f_open
    _f_gets->_f_read
    _disk_init->_f_mount
    _f_mount->_mount_volume
    _change_directory->_f_chdir
    _f_chdir->_mount_volume
    _boot_file->_drive_cpu
    _load_program->_f_open
    _write_sector->_seek_disk
    _f_write->_create_chain
    _str_inf->_f_open
    _in_file->_f_open
    _f_open->_mount_volume
    _remove_chain->_put_fat
    _mount_volume->_disk_initialize
    _find_volume->_check_fs
    _check_fs->_move_window
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _f_close->_f_sync
    _f_sync->_move_window
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _read_sector->_seek_disk
    _seek_disk->_f_lseek
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _f_read->_get_fat
    _get_fat->_move_window
    _move_window->_sync_window
    _sync_window->_disk_write

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _URT3Rx_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    _main->_scan_files1
    _scan_files1->_f_getcwd
    _scan_files->_f_getcwd
    _load_file->_load_program
    _board_event_loop1->_bus_master_operation
    _board_event_loop->_bus_master_operation
    _bus_master_operation->_unimon_console
    _unimon_console->_str_inf

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _URT3Rx_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _URT3Rx_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _URT3Rx_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _URT3Rx_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _URT3Rx_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _URT3Rx_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _URT3Rx_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _URT3Rx_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _URT3Rx_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _URT3Rx_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _URT3Rx_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _URT3Rx_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _URT3Rx_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _URT3Rx_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _URT3Rx_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _URT3Rx_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _URT3Rx_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _URT3Rx_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _URT3Rx_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _URT3Rx_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _URT3Rx_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _URT3Rx_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _URT3Rx_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _URT3Rx_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _URT3Rx_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _Default_ISR in BANK32

    None.

Critical Paths under _TIMER0_ISR in BANK32

    None.

Critical Paths under _URT3Rx_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _Default_ISR in BANK33

    None.

Critical Paths under _TIMER0_ISR in BANK33

    None.

Critical Paths under _URT3Rx_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _Default_ISR in BANK34

    None.

Critical Paths under _TIMER0_ISR in BANK34

    None.

Critical Paths under _URT3Rx_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _Default_ISR in BANK35

    None.

Critical Paths under _TIMER0_ISR in BANK35

    None.

Critical Paths under _URT3Rx_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _Default_ISR in BANK36

    None.

Critical Paths under _TIMER0_ISR in BANK36

    None.

Critical Paths under _URT3Rx_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _Default_ISR in BANK37

    None.

Critical Paths under _TIMER0_ISR in BANK37

    None.

Critical Paths under _URT3Rx_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _Default_ISR in BANK38

    None.

Critical Paths under _TIMER0_ISR in BANK38

    None.

Critical Paths under _URT3Rx_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _Default_ISR in BANK39

    None.

Critical Paths under _TIMER0_ISR in BANK39

    None.

Critical Paths under _URT3Rx_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _Default_ISR in BANK40

    None.

Critical Paths under _TIMER0_ISR in BANK40

    None.

Critical Paths under _URT3Rx_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _Default_ISR in BANK41

    None.

Critical Paths under _TIMER0_ISR in BANK41

    None.

Critical Paths under _URT3Rx_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _Default_ISR in BANK42

    None.

Critical Paths under _TIMER0_ISR in BANK42

    None.

Critical Paths under _URT3Rx_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _Default_ISR in BANK43

    None.

Critical Paths under _TIMER0_ISR in BANK43

    None.

Critical Paths under _URT3Rx_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _Default_ISR in BANK44

    None.

Critical Paths under _TIMER0_ISR in BANK44

    None.

Critical Paths under _URT3Rx_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _Default_ISR in BANK45

    None.

Critical Paths under _TIMER0_ISR in BANK45

    None.

Critical Paths under _URT3Rx_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _Default_ISR in BANK46

    None.

Critical Paths under _TIMER0_ISR in BANK46

    None.

Critical Paths under _URT3Rx_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _Default_ISR in BANK47

    None.

Critical Paths under _TIMER0_ISR in BANK47

    None.

Critical Paths under _URT3Rx_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _Default_ISR in BANK48

    None.

Critical Paths under _TIMER0_ISR in BANK48

    None.

Critical Paths under _URT3Rx_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _Default_ISR in BANK49

    None.

Critical Paths under _TIMER0_ISR in BANK49

    None.

Critical Paths under _URT3Rx_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _Default_ISR in BANK50

    None.

Critical Paths under _TIMER0_ISR in BANK50

    None.

Critical Paths under _URT3Rx_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _Default_ISR in BANK51

    None.

Critical Paths under _TIMER0_ISR in BANK51

    None.

Critical Paths under _URT3Rx_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _Default_ISR in BANK52

    None.

Critical Paths under _TIMER0_ISR in BANK52

    None.

Critical Paths under _URT3Rx_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _Default_ISR in BANK53

    None.

Critical Paths under _TIMER0_ISR in BANK53

    None.

Critical Paths under _URT3Rx_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _Default_ISR in BANK54

    None.

Critical Paths under _TIMER0_ISR in BANK54

    None.

Critical Paths under _URT3Rx_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0 405881015
                                            145 BANK7     13    13      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _boot_file *
                   _change_directory *
                           _clc_init
                           _clk_init
                          _disk_init
                           _f_getcwd
                          _flash_apl *
                           _get_line
                        _load_config
                          _load_file *
                           _mem_dump *
                           _mem_init
                           _mon_prog *
                          _port_init
                          _print_com *
                          _print_reg *
                             _printf
                          _reset_clk
                          _reset_cpu
                       _restart_prog *
                         _return_cpu *
                         _scan_files *
                        _scan_files1 *
                           _see_file *
                            _set_arg
                      _setup_monitor
                           _setup_sd
                             _strlen
                             _strstr
                          _uart_init
                _wait_for_programmer
                        _wstart_prog *
 ---------------------------------------------------------------------------------
 (1) _wstart_prog                                          1     1      0 56884452
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _wait_for_programmer                                  2     2      0   25827
                                             93 BANK5      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_sd                                             2     2      0   87420
                                            117 BANK5      2     2      0
                        _SDCard_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCard_init                                         16    10      6   61593
                                            101 BANK5     16    10      6
                     _SDCard_command
             _SDCard_end_transaction
                       _SPI_SD_begin
           _SPI_SD_begin_transaction
                   _SPI_SD_configure
                _SPI_SD_dummy_clocks
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_configure                                    10     4      6   26040
                                             93 BANK5      8     2      6
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_SD_begin                                         4     2      2      46
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SDCard_command                                      15     7      8    6144
                                             42 COMRAM    15     7      8
             _SDCard_end_transaction
                     _SPI_SD_receive
                ___SDCard_command_r1
 ---------------------------------------------------------------------------------
 (1) _setup_monitor                                        5     3      2 63051434
                                             22 BANK7      4     2      2
                          _drive_cpu
                       _load_program
                             _printf
                       _setup_tomer0
                          _start_W65
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_W65                                            0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _setup_tomer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_arg                                              4     2      2     227
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _see_file                                             9     9      0 6114202
                                              0 BANK7      9     9      0
                            _f_close
                             _f_open
                             _f_read
                             _printf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _scan_files1                                         70    70      0 13678186
                                             75 BANK7     70    70      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (1) _scan_files                                          69    69      0 13678161
                                             75 BANK7     69    69      0
                            _f_close
                         _f_closedir
                           _f_getcwd
                             _f_open
                          _f_opendir
                          _f_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_readdir                                            7     3      4 2362618
                                            137 BANK6      7     3      4
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_opendir                                            7     3      4 2486702
                                            175 BANK6      7     3      4
                            _dir_sdi
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (2) _f_getcwd                                            84    80      4 3181297
                                            175 BANK6      9     5      4
                                              0 BANK7     75    75      0
                           _dir_next
                           _dir_read
                            _dir_sdi
                       _get_fileinfo
                           _ld_clust
                       _mount_volume
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_fileinfo                                        13     9      4    1244
                                             16 COMRAM    13     9      4
                           _ld_dword
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_read                                            13     9      4 1166040
                                            124 BANK6     13     9      4
                           _dir_next
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _f_closedir                                           5     3      2   26421
                                            105 BANK5      5     3      2
                           _validate
 ---------------------------------------------------------------------------------
 (1) _return_cpu                                           1     1      0 56883790
                                             22 BANK7      1     1      0
                    _continue_action
                          _drive_cpu
 ---------------------------------------------------------------------------------
 (2) _continue_action                                      0     0      0       0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (1) _restart_prog                                         1     1      0 56884452
                                             22 BANK7      1     1      0
                          _drive_cpu
                          _start_cpu
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_cpu                                            4     4      0   27336
                                             93 BANK5      2     2      0
                       _bus_hold_req
                    _bus_release_req
                             _memcmp
                             _printf
                          _read_sram
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _reset_clk                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_reg                                            9     9      0   26840
                                             93 BANK5      9     9      0
                             _printf
                          _read_sram
 ---------------------------------------------------------------------------------
 (1) _print_com                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mon_prog                                             4     4      0 56911099
                                             22 BANK7      4     4      0
                          _drive_cpu
                             _printf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_init                                            14    10      4   54606
                                            126 BANK5     14    10      4
                             _memcmp
                             _printf
                          _read_sram
                      _util_addrdump
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _mem_dump                                             6     6      0   27583
                                            126 BANK5      6     6      0
                            _get_hex
                          _read_sram
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (1) _load_file                                            2     2      0 6142211
                                             21 BANK7      2     2      0
                            _get_hex
                       _load_program
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _get_hex                                             19    15      4     273
                                              3 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 (1) _load_config                                         27    25      2 6117255
                                              0 BANK7     21    19      2
                          ___strtoxl
                          _del_space
                            _f_close
                             _f_gets
                             _f_open
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _f_gets                                              21    15      6  493417
                                            159 BANK5      1     1      0
                                            105 BANK6     20    14      6
                             _f_read
 ---------------------------------------------------------------------------------
 (2) _del_space                                            6     4      2     253
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___strtoxl                                           30    23      7    2131
                                             15 COMRAM    30    23      7
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _get_line                                             7     3      4   26327
                                             93 BANK5      7     3      4
                              _getch
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _getch                                                5     3      2      23
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _flash_apl                                            0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (1) _disk_init                                            2     0      2  638786
                                            187 BANK6      2     0      2
                            _f_mount
                             _printf
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5  612959
                                            175 BANK6     12     7      5
                       _get_ldnumber
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _clk_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change_directory                                     0     0      0 2252336
                            _f_chdir
 ---------------------------------------------------------------------------------
 (2) _f_chdir                                             45    43      2 2252336
                                            175 BANK6     45    43      2
                        _follow_path
                           _ld_clust
                       _mount_volume
 ---------------------------------------------------------------------------------
 (1) _boot_file                                            5     5      0 63103942
                                             22 BANK7      3     3      0
                          _drive_cpu
                       _load_program
                             _printf
                         _prt_reload
                            _sprintf
                          _start_cpu
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _start_cpu                                            2     2      0       0
                                              3 COMRAM     2     2      0
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (2) _prt_reload                                           0     0      0   25827
                             _printf
 ---------------------------------------------------------------------------------
 (2) _load_program                                        22    20      2 6141127
                                            159 BANK5      1     1      0
                                              0 BANK7     21    19      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
                            _sprintf
                             _strstr
                         _write_sram
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4     777
                                             10 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6     182
                                              3 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2      95
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6   25620
                                             77 BANK5     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _drive_cpu                                            1     1      0 56883756
                                            255 BANK6      1     1      0
                   _board_event_loop
                  _board_event_loop1
                          _timer_off
                           _timer_on
 ---------------------------------------------------------------------------------
 (3) _timer_on                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer_off                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _board_event_loop1                                    0     0      0 28441861
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
 ---------------------------------------------------------------------------------
 (3) _board_event_loop                                     0     0      0 28441861
                       _bus_hold_req
               _bus_master_operation
                    _bus_release_req
                           _make_irq
 ---------------------------------------------------------------------------------
 (4) _make_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bus_release_req                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_master_operation                                 6     6      0 28441861
                                             16 BANK7      6     6      0
                            _dsk_err
                            _get_str *
                            _in_file *
                              _putch
                        _read_sector
                          _read_sram
                        _setup_drive
                            _str_inf *
                            _u_getch *
                     _unimon_console
                       _write_sector
                         _write_sram
 ---------------------------------------------------------------------------------
 (5) _write_sector                                        10     8      2 2427141
                                            154 BANK6     10     8      2
                             _f_sync
                            _f_write
                             _printf
                          _read_sram
                          _seek_disk
                   _util_hexdump_sum
 ---------------------------------------------------------------------------------
 (6) _f_write                                             43    35      8  729019
                                             98 BANK6     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (5) _unimon_console                                       6     6      0 12227595
                                             10 BANK7      6     6      0
                            _get_str *
                            _in_file *
                              _putch
                          _read_sram
                            _str_inf *
                            _u_getch *
                         _write_sram
 ---------------------------------------------------------------------------------
 (6) _u_getch                                              5     3      2      34
                                            159 BANK5      1     1      0
                                              0 BANK7      4     2      2
 ---------------------------------------------------------------------------------
 (6) _str_inf                                             10     7      3 6112997
                                              0 BANK7     10     7      3
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (6) _read_sram                                           14     6      8     542
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (6) _in_file                                              3     1      2 6112787
                                            159 BANK5      1     1      0
                                              0 BANK7      2     0      2
                            _f_close
                             _f_open
                             _f_read
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_open                                              82    77      5 4936105
                                            175 BANK6     80    75      5
                          _clst2sect
                       _dir_register
                          _disk_read
                        _follow_path
                            _get_fat
                        _get_fattime
                           _ld_clust
                           _ld_dword
                             _memset
                       _mount_volume
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (8) _remove_chain                                        25    15     10  467495
                                             69 BANK6     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (8) _mount_volume                                        46    41      5  611747
                                            129 BANK6     46    41      5
                            ___lldiv
                             ___lmul
                    _disk_initialize
                        _disk_status
                        _find_volume
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_ldnumber                                        15    13      2     634
                                              3 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (9) _find_volume                                         30    26      4  233936
                                             50 BANK6     30    26      4
                           _check_fs
                           _ld_dword
 ---------------------------------------------------------------------------------
 (10) _check_fs                                           14     8      6  232882
                                             36 BANK6     14     8      6
                           _ld_dword
                            _ld_word
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _disk_initialize                                    133   133      0  115791
                                            155 BANK5      4     4      0
                                              0 BANK6    129   129      0
                     _SDCard_read512
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (8) _follow_path                                         16    12      4 1639422
                                            132 BANK6     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (8) _ld_clust                                            12     8      4     374
                                             10 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (9) _dir_find                                             8     6      2 1400697
                                            124 BANK6      8     6      2
                           _dir_next
                            _dir_sdi
                             _memcmp
                        _move_window
 ---------------------------------------------------------------------------------
 (11) _memcmp                                             12     6      6     308
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _create_name                                         23    19      4    2865
                                             11 COMRAM    23    19      4
                            _dbc_1st
                            _dbc_2nd
                             _memset
                             _strchr
 ---------------------------------------------------------------------------------
 (10) _strchr                                              6     2      4     136
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _dbc_2nd                                             3     1      2     282
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) _dbc_1st                                             3     1      2     188
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _dir_register                                         5     3      2 1632380
                                            136 BANK6      5     3      2
                          _dir_alloc
                             _memcpy
                             _memset
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_alloc                                           12     8      4 1400302
                                            124 BANK6     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _dir_sdi                                             30    24      6  234429
                                             62 BANK6     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (10) _dir_next                                           30    26      4  934191
                                             98 BANK6     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (11) _dir_clear                                          18    12      6  231111
                                            157 BANK5      2     2      0
                                             26 BANK6     16    10      6
                          _clst2sect
                         _disk_write
                             _memset
                        _sync_window
 ---------------------------------------------------------------------------------
 (7) _f_close                                              5     3      2  657941
                                             47 BANK6      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (6) _f_sync                                              11     9      2  631428
                                             36 BANK6     11     9      2
                         _disk_write
                        _get_fattime
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (7) _sync_fs                                             11     9      2  257452
                                            157 BANK5      1     1      0
                                             26 BANK6     10     8      2
                         _disk_ioctl
                         _disk_write
                             _memset
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6     200
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           5     2      3   26119
                                             93 BANK5      5     2      3
                             _printf
 ---------------------------------------------------------------------------------
 (7) _st_clust                                             9     1      8     372
                                              7 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (7) _get_fattime                                          4     0      4       0
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _get_str                                              9     6      3     198
                                              0 BANK7      9     6      3
 ---------------------------------------------------------------------------------
 (5) _setup_drive                                          4     2      2       0
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _read_sector                                         10     8      2 1559530
                                            154 BANK6     10     8      2
                             _f_read
                             _printf
                          _seek_disk
                   _util_hexdump_sum
                         _write_sram
 ---------------------------------------------------------------------------------
 (2) _write_sram                                          16     8      8     659
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) _util_hexdump_sum                                    11     5      6   52714
                                            122 BANK5     11     5      6
                             _printf
                       _util_hexdump
 ---------------------------------------------------------------------------------
 (7) _util_hexdump                                        29    23      6   26572
                                             93 BANK5     29    23      6
                             _printf
 ---------------------------------------------------------------------------------
 (6) _seek_disk                                           17    15      2  987373
                                            139 BANK6     15    13      2
                            _f_lseek
                             _printf
 ---------------------------------------------------------------------------------
 (7) _f_lseek                                             41    35      6  961444
                                             98 BANK6     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        29    23      6  468582
                                             69 BANK6     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (9) _put_fat                                             33    23     10  233751
                                             36 BANK6     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (10) _st_word                                             4     0      4     163
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _st_dword                                            6     0      6     341
                                              3 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     259
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _f_read                                              43    35      8  492784
                                             62 BANK6     43    35      8
                          _clst2sect
                          _disk_read
                         _disk_write
                            _get_fat
                             _memcpy
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                            11     7      4   26275
                                             94 BANK5     11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          1     1      0   25874
                                             93 BANK5      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (8) _get_fat                                             26    20      6  232813
                                             36 BANK6     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         11     5      6  231221
                                            158 BANK5      1     1      0
                                             26 BANK6     10     4      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (10) _sync_window                                        19    17      2  115220
                                            156 BANK5      1     1      0
                                              8 BANK6     18    16      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (11) _disk_write                                         11     3      8  114771
                                            153 BANK5      3     3      0
                                              0 BANK6      8     0      8
                    _SDCard_write512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _SDCard_write512                                    27    17     10   61863
                                            126 BANK5     27    17     10
             _SDCard_end_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          11     3      8  115559
                                            155 BANK5      3     3      0
                                              0 BANK6      8     0      8
                     _SDCard_read512
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (11) _SDCard_read512                                     29    19     10   62687
                                            126 BANK5     29    19     10
             _SDCard_end_transaction
                     _SPI_SD_receive
                _SPI_SD_receive_byte
                ___SDCard_command_r1
                     ___SDCard_crc16
             ___SDCard_wait_response
                             _printf
                      _util_addrdump
 ---------------------------------------------------------------------------------
 (12) _util_addrdump                                      33    23     10   26669
                                             93 BANK5     33    23     10
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              18     4     14   25827
                                             77 BANK5     16     2     14
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             8     2      6   25260
                                             69 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          18    12      6   24976
                                             51 BANK5     18    12      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (11) _xtoa                                               21    14      7    1801
                                             29 COMRAM    21    14      7
                                _pad
 ---------------------------------------------------------------------------------
 (11) _stoa                                               14    10      4     901
                                             13 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _read_prec_or_width                                  9     5      4     272
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (11) _efgtoa                                             54    47      7   16824
                                             87 COMRAM     2     2      0
                                              0 BANK5     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (12) _strcpy                                              6     2      4     115
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _memcpy                                             11     5      6     298
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _labs                                                8     4      4     102
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _floorf                                             20    16      4     495
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fpclassifyf                                      14    10      4     207
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (12) ___fltol                                            10     6      4     349
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    3055
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            16     8      8    2966
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (12) ___flneg                                             4     0      4      68
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) ___flmul                                            25    17      8    2265
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) ___flge                                             12     4      8     314
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fleq                                             12     4      8     148
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___fldiv                                            25    17      8    1767
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) _dtoa                                               15     9      6    2846
                                             29 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (12) _pad                                                 9     3      6    1254
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (13) _fputs                                               7     3      4     552
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               9     5      4     400
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0      47
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _abs                                                 4     2      2      96
                                             13 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (12) ___almod                                            10     2      8     439
                                              3 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (12) ___aldiv                                            14     6      8     451
                                              3 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (13) ___SDCard_crc16                                     13     7      6     450
                                              3 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (13) ___SDCard_command_r1                                16    10      6    3748
                                             26 COMRAM    16    10      6
                         _SDCard_crc
           _SPI_SD_begin_transaction
                _SPI_SD_dummy_clocks
                        _SPI_SD_send
             ___SDCard_wait_response
 ---------------------------------------------------------------------------------
 (13) ___SDCard_wait_response                              6     4      2    1409
                                             20 COMRAM     6     4      2
                _SPI_SD_receive_byte
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_receive_byte                                 3     1      2    1217
                                             17 COMRAM     3     1      2
                     _SPI_SD_receive
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_receive                                     14     8      6     998
                                              3 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_begin_transaction                            2     0      2     244
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _acquire_bus
 ---------------------------------------------------------------------------------
 (14) _SDCard_crc                                         11     7      4     343
                                              3 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (13) _SDCard_end_transaction                              2     2      0    1064
                                             20 COMRAM     2     2      0
                _SPI_SD_dummy_clocks
             _SPI_SD_end_transaction
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_end_transaction                              2     0      2     210
                                              7 COMRAM     2     0      2
                      _SPI_SD_select
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _SPI_SD_select                                       4     0      4      43
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_dummy_clocks                                 7     3      4     789
                                             13 COMRAM     7     3      4
                        _SPI_SD_send
                        _acquire_bus
                        _release_bus
 ---------------------------------------------------------------------------------
 (15) _release_bus                                         4     2      2     102
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _acquire_bus                                         4     2      2     133
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _SPI_SD_send                                        11     5      6     323
                                              3 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _ld_word                                              7     5      2     190
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (9) _ld_dword                                            13     9      4     302
                                              3 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (8) _clst2sect                                           12     6      6     366
                                             15 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     160
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _dsk_err                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bus_hold_req                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _URT3Rx_ISR                                          3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _boot_file *
     _drive_cpu
       _board_event_loop
         _bus_hold_req
         _bus_master_operation
           _dsk_err
           _get_str *
           _in_file *
             _f_close
               _f_sync
                 _disk_write
                   _SDCard_write512
                     _SDCard_end_transaction
                       _SPI_SD_dummy_clocks
                         _SPI_SD_send
                         _acquire_bus
                         _release_bus
                       _SPI_SD_end_transaction
                         _SPI_SD_select
                         _release_bus
                     _SPI_SD_dummy_clocks
                     _SPI_SD_send
                     ___SDCard_command_r1
                       _SDCard_crc
                       _SPI_SD_begin_transaction
                         _SPI_SD_select
                         _acquire_bus
                       _SPI_SD_dummy_clocks
                       _SPI_SD_send
                       ___SDCard_wait_response
                         _SPI_SD_receive_byte
                           _SPI_SD_receive
                     ___SDCard_crc16
                     ___SDCard_wait_response
                     _printf
                       ___xxtofl (ARG)
                       _vfprintf (ARG)
                         _vfpfcnvrt
                           _dtoa
                             ___aldiv
                             ___almod
                             _abs
                               ___almod (ARG)
                             _pad
                               _fputc
                                 _putch
                               _fputs
                                 _fputc
                           _efgtoa
                             ___fladd
                             ___fldiv
                             ___fleq
                             ___flge
                               ___flmul (ARG)
                             ___flmul
                             ___flneg
                             ___flsub
                               ___fladd
                               ___flmul (ARG)
                             ___fltol
                             ___fpclassifyf
                             _floorf
                               ___fldiv (ARG)
                             _labs
                             _memcpy
                             _pad
                             _strcpy
                           _fputc
                           _read_prec_or_width
                           _stoa
                             _fputc
                           _xtoa
                             _pad
                     _util_addrdump
                       _printf
                   _printf
                   _util_addrdump
                 _get_fattime
                 _move_window
                   _disk_read
                     _SDCard_read512
                       _SDCard_end_transaction
                       _SPI_SD_receive
                       _SPI_SD_receive_byte
                       ___SDCard_command_r1
                       ___SDCard_crc16
                       ___SDCard_wait_response
                       _printf
                       _util_addrdump
                     _printf
                     _util_addrdump
                   _sync_window
                     _disk_write
                 _st_clust
                   _st_word
                 _st_dword
                 _st_word
                 _sync_fs
                   _disk_ioctl
                     _printf
                   _disk_write
                   _memset
                   _st_dword
                   _st_word
                   _sync_window
                 _validate
                   _disk_status
                     _printf
               _validate
             _f_open
               _clst2sect
                 ___lmul
               _dir_register
                 _dir_alloc
                   _dir_next
                     _clst2sect
                     _create_chain
                       _get_fat
                         _ld_dword
                         _ld_word
                         _move_window
                       _put_fat
                         _ld_dword
                         _move_window
                         _st_dword
                         _st_word
                     _dir_clear
                       _clst2sect
                       _disk_write
                       _memset
                       _sync_window
                     _get_fat
                   _dir_sdi
                     _clst2sect
                     _get_fat
                   _move_window
                 _memcpy
                 _memset
                 _move_window
               _disk_read
               _follow_path
                 _create_name
                   _dbc_1st
                   _dbc_2nd
                   _memset
                   _strchr
                 _dir_find
                   _dir_next
                   _dir_sdi
                   _memcmp
                   _move_window
                 _dir_sdi
                 _ld_clust
                   _ld_word
               _get_fat
               _get_fattime
               _ld_clust
               _ld_dword
               _memset
               _mount_volume
                 ___lldiv
                 ___lmul
                 _disk_initialize
                   _SDCard_read512
                   _printf
                   _util_hexdump
                     _printf
                 _disk_status
                 _find_volume
                   _check_fs
                     _ld_dword
                     _ld_word
                     _memcmp
                     _move_window
                   _ld_dword
                 _get_ldnumber
                 _ld_dword
                 _ld_word
                 _move_window
               _move_window
               _remove_chain
                 _get_fat
                 _put_fat
               _st_clust
               _st_dword
             _f_read
               _clst2sect
               _disk_read
               _disk_write
               _get_fat
               _memcpy
               _validate
             _printf
           _putch *
           _read_sector *
             _f_read
             _printf
             _seek_disk
               _f_lseek
                 ___lldiv
                 _clst2sect
                 _create_chain
                 _disk_read
                 _disk_write
                 _get_fat
                 _validate
               _printf
             _util_hexdump_sum
               _printf
               _util_hexdump
             _write_sram
           _read_sram *
           _setup_drive *
           _str_inf *
             _f_close
             _f_open
             _f_read
             _printf
           _u_getch *
           _unimon_console *
             _get_str *
             _in_file *
             _putch *
             _read_sram *
             _str_inf *
             _u_getch *
             _write_sram *
           _write_sector *
             _f_sync
             _f_write
               _clst2sect
               _create_chain
               _disk_read
               _disk_write
               _memcpy
               _validate
             _printf
             _read_sram
             _seek_disk
             _util_hexdump_sum
           _write_sram *
         _bus_release_req
         _make_irq
       _board_event_loop1
         _bus_hold_req
         _bus_master_operation
         _bus_release_req
       _timer_off
       _timer_on
     _load_program
       _f_close
       _f_open
       _f_read
       _printf
       _sprintf
         _vfprintf
       _strstr
         _strchr
         _strlen
         _strncmp
       _write_sram
     _printf
     _prt_reload
       _printf
     _sprintf
     _start_cpu
       _bus_release_req
     _strstr
     _write_sram
   _change_directory *
     _f_chdir
       _follow_path
       _ld_clust
       _mount_volume
   _clc_init *
   _clk_init *
   _disk_init *
     _f_mount
       _get_ldnumber
       _mount_volume
     _printf
   _f_getcwd *
     _dir_next
     _dir_read
       _dir_next
       _move_window
     _dir_sdi
     _get_fileinfo
       _ld_dword
       _ld_word
     _ld_clust
     _mount_volume
     _move_window
   _flash_apl *
     _printf
   _get_line *
     _getch
     _printf
     _putch
   _load_config *
     ___strtoxl
       ___lmul
     _del_space
     _f_close
     _f_gets
       _f_read
     _f_open
     _printf
     _strlen
     _strstr
   _load_file *
     _get_hex
     _load_program
     _strstr
   _mem_dump *
     _get_hex
     _read_sram
     _util_addrdump
   _mem_init *
     _memcmp
     _printf
     _read_sram
     _util_addrdump
     _write_sram
   _mon_prog *
     _drive_cpu
     _printf
     _start_cpu
     _strstr
     _write_sram
   _port_init *
   _print_com *
     _printf
   _print_reg *
     _printf
     _read_sram
   _printf *
   _reset_clk *
   _reset_cpu *
     _bus_hold_req
     _bus_release_req
     _memcmp
     _printf
     _read_sram
     _write_sram
   _restart_prog *
     _drive_cpu
     _start_cpu
     _write_sram
   _return_cpu *
     _continue_action
       _bus_release_req
     _drive_cpu
   _scan_files *
     _f_close
     _f_closedir
       _validate
     _f_getcwd
     _f_open
     _f_opendir
       _dir_sdi
       _follow_path
       _ld_clust
       _mount_volume
     _f_readdir
       _dir_next
       _dir_read
       _dir_sdi
       _get_fileinfo
       _validate
     _printf
   _scan_files1 *
     _f_close
     _f_closedir
     _f_getcwd
     _f_open
     _f_opendir
     _f_readdir
     _printf
   _see_file *
     _f_close
     _f_open
     _f_read
     _printf
     _strstr
   _set_arg *
   _setup_monitor *
     _drive_cpu
     _load_program
     _printf
     _setup_tomer0
     _start_W65
       _bus_release_req
     _write_sram
   _setup_sd *
     _SDCard_init
       _SDCard_command
         _SDCard_end_transaction
         _SPI_SD_receive
         ___SDCard_command_r1
       _SDCard_end_transaction
       _SPI_SD_begin
       _SPI_SD_begin_transaction
       _SPI_SD_configure
         _printf
       _SPI_SD_dummy_clocks
       _printf
     _printf
   _strlen *
   _strstr *
   _uart_init *
   _wait_for_programmer *
     _printf
   _wstart_prog *
     _drive_cpu
     _start_cpu
     _write_sram

 _Default_ISR (ROOT)

 _TIMER0_ISR (ROOT)

 _URT3Rx_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0    2680     20.9%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRh        1065      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0     128     50.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0     209     81.6%
BITBANK9           256      0       0      0.0%
BANK9              256      0     179     69.9%
BITBANK8           256      0       0      0.0%
BANK8              256      0     223     87.1%
BITBANK7           256      0       0      0.0%
BANK7              256    158     256    100.0%
BITBANK6           256      0       0      0.0%
BANK6              256    256     256    100.0%
BITBANK5           160      0       0      0.0%
BANK5              160    160     160    100.0%
BITBIGSFRll        128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
BITBIGSFRlh         84      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    4186      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 16 20:44:15 2024

                    del_space@bytes 0504                          _URT3Rx_ISR F4D8  
                       get_fat@clst 0626                        ___fldiv@aexp 0543  
                      ___fldiv@bexp 0542                _bus_master_operation 8BA2  
                    ?_SPI_SD_select 0504                        ___fldiv@sign 053B  
                      create_name@c 0522                        create_name@d 0517  
                      create_name@i 051A                        create_name@p 051E  
                  get_ldnumber@path 0504                     ?_SPI_SD_receive 0504  
                                l20 B4AC                                  l17 0234  
                                l41 B534                                  l27 B64A  
                                l29 B4C4                                  l63 E7AA  
                                l72 E856                                  l56 FCC4  
                                l92 F702                                  l77 E6FC  
                                l86 E7A8                                  l97 F708  
                                _fh 08A2                                  _fs 0B80  
                 ?_SPI_SD_configure 05BD                   SDCard_command@spi 0534  
                    ??_dir_register 055A                        return_cpu@rs 0716  
                  disk_write@sector 0602                       create_name@dp 050C  
                     create_name@ni 0518                       create_name@si 0520  
                    create_chain@cs 065E                      create_chain@fs 065C  
               __end_of_wstart_prog EAFC                   SDCard_read512@crc 05F8  
                 SDCard_read512@buf 05E4                                 l102 F756  
                               l200 DD9C                                 l210 B7EC  
                               l114 C566                                 l130 F1F0  
                               l124 C404                                 l300 40A6  
                               l205 B7E8                                 l109 C46E  
                               l141 C816                                 l302 3C4A  
                               l222 A102                                 l119 C30C  
                               l216 E026                                 l232 6DC8  
                               l400 CAB4                                 l226 E1BE  
                               l234 6A64                                 l323 4056  
                               l219 A0FE                                 l139 C806  
                               l180 FECE                                 l252 40F6  
                               l324 4096                                 l332 C966  
                               l404 F2F2                                 l229 6A58  
                               l326 408E                                 l183 E644  
                               l247 6DD8                                 l271 4592  
                               l423 BE26                                 l511 8AF2  
                               l408 FA9A                                 l600 0880  
                               l433 DCBC                                 l441 A50C  
                               l186 FFB2                                 l194 ED76  
                               l522 B4A6                                 l355 7B5A  
                               l531 B498                                 l419 B302  
                               l268 4508                                 l189 F624  
                               l381 651C                                 l373 65C6  
                               l365 620E                                 l349 7C6C  
                               l509 8B08                                 l277 9CD8  
                               l621 D73A                                 l518 8BA0  
                               l622 D6C0                                 l616 D432  
                               l640 26AE                   SDCard_read512@spi 05F6  
                               l617 D444                                 l457 4A6E  
                               l537 88C0                                 l553 A572  
                               l633 2D14                                 l554 A700  
                               l706 1C28                                 l707 1886  
                               l628 2D34                                 l741 F80C  
                               l573 0AD6                                 l654 2D14  
                               l646 28D4                                 l750 D8BE  
                               l735 9EEE                                 l399 CAB2  
                               l639 26C0                                 l823 BFA4  
                               l672 3448                                 l648 28B4  
                               l728 1D80                                 l824 BF86  
                               l840 DBD8                                 l826 BF20  
                               l755 D91E                                 l835 FDEE  
                               l748 D91C                                 l772 5122  
                               l844 DBDA                                 l677 336C  
                               l589 0422                                 l791 25B4  
                               l792 1E64                  ??_SPI_SD_configure 05C3  
                               l786 53D2                                 l699 1DB2  
                               l963 DA0A                                 l798 212E  
                               _GIE 26B7                                 _RA5 2675  
                               _abs FED0                                 _cmd 0900  
                               _arg 079E                                 _pad EC3E  
                               _mon 07C8                                 _rom F20F  
                               prod 04F3                      ??_create_chain 064B  
                               tosl 04FD                                 wreg 04E8  
                       disk_write@i 05FA                        ___flmul@aexp 051F  
                      ___flmul@bexp 0524                        ___flmul@sign 051E  
                      ___flmul@temp 0529                        ___flmul@prod 0525  
                  _util_hexdump_sum F170                      create_name@sfn 051C  
                   create_chain@ncl 0658                     create_chain@obj 0645  
           SPI_SD_receive_byte@ctx_ 0512                     create_chain@scl 0654  
                   create_chain@res 0653                         ld_clust@dir 050D  
                SDCard_read512@addr 05DE                        ___fltol@exp1 050D  
                              l1202 CD04                                ?_abs 050E  
                              l1302 926E                                l1207 BB1C  
                              l1303 926E                                l1232 027C  
                              l1240 ACE2                                l2112 FB2A  
                              l1217 C6C4                                l2130 F5B8  
                              l2210 FF32                                l2202 EF74  
                              l2115 0210                                l1227 F4D4  
                              l2131 F580                                l2123 FAB0  
                              l2203 EF74                                l2300 EF0E  
                              l3100 4E2E                                l2140 EEA0  
                              l1252 ADC6                                l1260 8E2C  
                              l2124 FAE4                                l1308 937E  
                              l2213 026A                                l2141 EEAA  
                              l1253 AE08                                l1237 AE04  
                              l2302 EF2C                                l2118 0222  
                              l1246 ACE8                                l2311 802E  
                              l2135 EE3C                                l1263 8C8A  
                              l2223 EBD0                                l2151 F6F2  
                              l2207 EFD0                                l3200 AAFC  
                              l2304 EF3A                                l2216 0274  
                              l2160 01DC                                l2313 803C  
                              l2137 EE44                                l1281 8DDE  
                              l2225 EC3C                                l2241 F438  
                              l2233 F3EA                                l2145 DF0C  
                              l2322 809E                                l2314 8040  
                              l3106 4EE8                                l1282 8E54  
                              l2226 EC02                                l2234 F3EA  
                              l2146 DF0C                                l2250 FB70  
                              l2154 FD3E                                l1522 725A  
                              l3203 AC58                                l2331 8104  
                              l3115 FBB6                                l2171 D240  
                              l2219 EBA0                                l2091 01C4  
                              l1523 725A                                l2340 816A  
                              l2308 82E4                                l3140 7802  
                              l3132 770A                                l2180 E494  
                              l2228 EC10                                l2236 F3F8  
                              l2148 DF54                                l2412 948A  
                              l2404 9604                                l1516 71E8  
                              l2325 80C0                                l2309 809A  
                              l3141 77F0                                l2165 D16E  
                              l3301 D542                                l1269 8C90  
                              l2085 FFE4                                l2157 0190  
                              l1517 71E8                                l3214 ABF0  
                              l2262 FD02                                l2334 8126  
                              l2318 8078                                l2182 E4D2  
                              l2238 F45E                                l1614 CF2C  
                              l2246 FB3E                                l1526 731A  
                              l3207 AB94                                l2351 81F6  
                              l3127 78E2                                l2167 D23E  
                              l2087 FFF2                                l2239 F42A  
                              l2191 028A                                l2271 CB20  
                              l1711 0244                                l1527 731A  
                              l2360 825C                                l2344 81AE  
                              l2328 80E2                                l2176 E446  
                              l2088 FFFC                                l3320 F9FE  
                              l1552 619C                                l2248 FB4C  
                              l2272 CB1C                                l2345 81B2  
                              l2337 8148                                l3129 7746  
                              l3073 4C58                                l2169 D1DC  
                              l3313 FE5E                                l2185 FE26  
                              l2265 FF60                                l2273 CB1C  
                              l1529 7346                                l2258 F90C  
                              l2370 82D2                                l2354 8218  
                              l3138 778C                                l3090 4D72  
                              l3082 4F24                                l3074 4C46  
                              l3226 D640                                l2194 C292  
                              l1714 0252                                l1722 E58C  
                              l2291 0172                                l2363 827E  
                              l3139 77AA                                l3163 69EC  
                              l3075 4C0C                                l3307 FA4E  
                              l2523 85D4                                l2443 95A2  
                              l2427 957E                                l1731 EAFA  
                              l2532 F224                                l2348 81D4  
                              l3420 12B0                                l2188 028E  
                              l1548 E900                                l2268 CAE0  
                              l2436 9590                                l1740 D82C  
                              l2357 823A                                l2381 012E  
                              l2541 E40E                                l3501 35A0  
                              l2285 CBE6                                l1637 9AA6  
                              l2534 F236                                l2366 82A0  
                              l2462 E6FA                                l2542 E416  
                              l3350 EC76                                l3166 6882  
                              l1558 60BA                                l1574 F95E  
                              l3262 5ADC                                l1750 584E  
                              l2295 EF3E                                l2391 FF8A  
                              l3167 68A0                                l3159 668C  
                              l3087 4E00                                l3511 3AF6  
                              l3503 35A8                                l3263 5B22  
                              l1583 F05C                                l1591 719E  
                              l2527 F36E                                l1727 EE10  
                              l1735 EA52                                l1719 B15E  
                              l1743 F3E8                                l2384 020C  
                              l2536 F272                                l2288 0150  
                              l2624 D036                                l3360 A740  
                              l3176 69AE                                l3168 68F8  
                              l3512 381A                                l3353 ECB8  
                              l3169 68E6                                l1681 FD7A  
                              l1569 618A                                l2298 EF00  
                              l2378 F7B4                                l2458 FBFC  
                              l3362 A748                                l2810 D2FE  
                              l3442 B892                                l3602 FFDA  
                              l3274 5B86                                l1746 5428  
                              l3355 ECDA                                l3363 A78E  
                              l3099 4E40                                l3283 5C6C  
                              l3259 5A4E                                l1659 9872  
                              l1755 5544                                l1747 586E  
                              l2556 F67E                                l2804 E9AA  
                              l3532 3984                                l2572 EB8E  
                              l3620 F9AE                                l1684 01F4  
                              l1676 AFB6                                l2396 93A8  
                              l1692 7DAA                                l2557 F68E  
                              l2637 DAF4                                l3461 BB50  
                              l3605 F0EA                                l1781 C11E  
                              l3269 5B2A                                l1757 5590  
                SDCard_read512@offs 05E2                                l3614 FDB6  
                              l3390 0E68                                l3454 B98A  
                              l1758 561A                                l1694 7FBC  
                              l2815 D344                                l3607 F16E  
                              l3287 5D0A                                l3279 5BD4  
                              l3552 FEEA                                l3376 A8DE  
                              l3392 0CAE                                l1792 AAA4  
                              l3640 CE20                                l1776 FC82  
                              l1696 7F00                                l3561 A314  
                              l3449 B942                                l2489 90F6  
                              l3633 DE7A                                l1697 7ECA  
                              l2842 D13C                                l3555 FF02  
                              l2819 FE96                                l3387 1536  
                              l3483 E0F2                                l3475 BCA2  
                              l3459 BB48                                l2579 EB9E  
                              l3564 A258                                l3548 F862  
                              l1796 A9FC                                ?_pad 0515  
                              l3575 F8B8                                l3479 E0EA  
                              l3587 E352                                l3595 FC40  
                              STR_1 FAED                                STR_2 FBC1  
                              STR_3 F641                                STR_4 FA56  
                              STR_6 FD5B                                STR_7 FC85  
                              STR_8 F836                                _LATB 04BF  
                              _LATC 04C0                                _LATD 04C1  
                       boot_file@rs 0718                                _U3ON 1697  
                    ??_get_fileinfo 0515                                _WPUB 0409  
                              _WPUC 0411                                _WPUD 0419  
                              _Fsid 07C3                                abs@a 050E  
                              _dbuf 0828                                _binv 0878  
                              _labs F864                                _main 71A0  
                              _dtoa A702                                _ctx_ 07A8  
                      find_volume@i 064E                                _prec 055A  
                              pad@i 051C                                pad@p 0519  
                              fsr0h 04EA                                fsr1h 04E2  
                              indf0 04EF                                fsr2h 04DA  
                              fsr0l 04E9                                indf1 04E7  
                              indf2 04DF                                fsr1l 04E1  
                              fsr2l 04D9                                _stoa B7EE  
                       ld_dword@ptr 0504                                _xtoa BB1E  
                     disk_ioctl@cmd 05BD                       disk_read@buff 0600  
                     disk_ioctl@res 05C1                       ___fpclassifyf D544  
                     disk_read@pdrv 05FB                                prodh 04F4  
                              prodl 04F3                      ??_get_ldnumber 0506  
                              start 010A         SPI_SD_configure@clock_speed 05BF  
                 ??_continue_action 0504                     ___fldiv@new_exp 053C  
                     get_hex@hexval 0512              ___SDCard_command_r1@r1 051F  
                disk_initialize@buf 0600                        ?_follow_path 0684  
                      ___param_bank 0000               ?_bus_master_operation 0501  
                     write_sector@n 06A2                    print_reg@reg_816 05C4  
                   create_name@path 050E                    create_chain@clst 0647  
                     write_sram@buf 0508                               ??_abs 0510  
                     write_sram@len 050A            SPI_SD_receive_byte@dummy 0514  
                       ?_TIMER0_ISR 0501                       get_fileinfo@c 051B  
                             ??_pad 051B                        SPI_SD_send@i 050A  
                      SPI_SD_send@p 050C                         _sync_window B64C  
                      ?_load_config 0700                               l20001 1010  
                             l20011 10B0                               l20003 1016  
                             l20101 14AC                               l20021 118C  
                             l20013 10E2                               l20005 1034  
                             l20111 1516                               l20103 14CA  
                             l20031 11EE                               l20023 1192  
                             l20015 10F2                               l20007 1068  
                             l20105 14E8                               l20041 1286  
                             l20033 11F6                               l20025 11C6  
                             l20017 1102                               l20009 109A  
                             l20121 B81C                               l21001 DF5A  
                             l20107 14F8                               l20051 12E4  
                             l20043 12A6                               l20035 11FA  
                             l20027 11DA                               l20019 1136  
                             l20211 E0B0                               l20203 E028  
                             l20123 B820                               l20115 B7EE  
                             l21011 DFFE                               l21003 DF8C  
                             l21021 F636                               l20301 8214  
                             l20221 7FE2                               l20109 150E  
                             l20061 130C                               l20053 12EA  
                             l20045 12C2                               l20037 1202  
                             l20029 11DE                               l20213 E0BE  
                             l20205 E030                               l20141 B924  
                             l20133 B8B4                               l20125 B85E  
                             l20117 B808                               l21013 E004  
                             l21005 DF9C                               l21101 40C8  
                             l21023 F644                               l20311 8254  
                             l20303 8226                               l20231 805A  
                             l20223 7FE6                               l20215 7FBE  
                             l20071 1340                               l20055 12F2  
                             l20047 12D0                               l20063 1312  
                             l20039 120E                               l20207 E058  
                             l20151 B96C                               l20135 B8C8  
                             l20143 B928                               l20127 B86C  
                             l20119 B810                               l21007 DFAC  
                             l21015 E022                               l21031 FE34  
                             l21025 F654                               l21041 E142  
                             l20321 828C                               l20313 8258  
                             l20305 8232                               l20241 80AC  
                             l20233 805E                               l20225 8004  
                             l20081 13F6                               l20073 1398  
                             l20065 1324                               l20057 1302  
                             l20049 12E0                               l20209 E092  
                             l20137 B8CC                               l20129 B88A  
                             l20161 BB58                               l20153 BB1E  
                             l21009 DFF4                               l21121 41C0  
                             l21113 4180                               l21105 40FE  
                             l21201 3C5A                               l21033 FE40  
                             l22001 B304                               l21027 F65E  
                             l21019 F626                               l20331 82BE  
                             l20323 8298                               l20315 826A  
                             l20307 8236                               l20251 80DE  
                             l20243 80B8                               l20235 8062  
                             l20227 8030                               l20219 7FDC  
                             l20091 1466                               l20083 1412  
                             l20075 13CC                               l20067 1336  
                             l20059 1306                               l20147 B954  
                             l20139 B8EE                               l20171 BB92  
                             l20163 BB6A                               l20155 BB2C  
                             l20403 36DE                               l21051 69FE  
                             l21123 41F4                               l21115 41A4  
                             l21107 4110                               l21211 3CC4  
                             l21203 3C7C                               l21035 FE44  
                             l22011 B35E                               l22003 B308  
                             l21045 E156                               l21037 E0F4  
                             l20501 F8FC                               l20325 829C  
                             l20317 8276                               l20309 8248  
                             l20333 82C0                               l20261 811E  
                             l20253 80F0                               l20245 80BC  
                             l20237 8086                               l20229 804E  
                             l20093 147E                               l20085 141A  
                             l20077 13D4                               l20069 133A  
                             l20149 B968                               l20181 BBBC  
                             l20173 BB98                               l20165 BB76  
                             l20157 BB2E                               l20405 36FE  
                             l20413 378E                               l20341 3472  
                             l21053 6A1A                               l22101 D406  
                             l21141 431A                               l21133 4280  
                             l21125 4200                               l21117 41A8  
                             l21109 416C                               l21221 3D5A  
                             l21213 3CDC                               l21029 FE28  
                             l21301 C8B2                               l22021 B384  
                             l22013 B362                               l22005 B320  
                             l21039 E100                               l20503 F8FE  
                             l20511 FCF2                               l20327 82AE  
                             l20319 827A                               l20271 8156  
                             l20263 8122                               l20255 80FC  
                             l20247 80CE                               l20239 8092  
                             l20087 1428                               l20079 13D8  
                             l20191 BC2A                               l20183 BBCC  
                             l20175 BB9E                               l20167 BB7E  
                             l20159 BB3C                               l20431 385A  
                             l20423 37F6                               l20415 37A4  
                             l20407 3722                               l20351 349C  
                             l20343 3480                               l21071 6B8A  
                             l21063 6AEA                               l21055 6A44  
                             l22103 D416                               l22111 EAFC  
                             l21151 43EE                               l21143 433A  
                             l21135 42A4                               l21127 4210  
                             l21119 41B6                               l21231 3DF0  
                             l21223 3D7A                               l21215 3D06  
                             l21207 3C90                               l21311 C93C  
                             l21303 C8BA                               l22031 B42A  
                             l22023 B396                               l22007 B332  
                             l20521 EED0                               l20505 FCC6  
                             l20513 01F6                               l20601 F218  
                             l20329 82BA                               l20281 8188  
                             l20273 8162                               l20265 8134  
                             l20257 8100                               l20249 80DA  
                             l20097 1490                               l20089 1458  
                             l20193 BC40                               l20185 BBD2  
                             l20177 BBAE                               l20169 BB8A  
                             l20433 3882                               l20441 3906  
                             l20425 381C                               l20417 37C4  
                             l20409 375A                               l20361 34EA  
                             l20353 34AE                               l20345 348E  
                             l21081 6C10                               l21073 6BC2  
                             l21065 6B1A                               l21057 6A6C  
                             l21049 69EE                               l22105 D422  
                             l22121 EB44                               l22113 EB0C  
                             l21161 4482                               l21153 4404  
                             l21145 439C                               l21137 42B2  
                             l21129 426C                               l21241 3E42  
                             l21233 3E00                               l21225 3D90  
                             l21217 3D16                               l21209 3CA0  
                             l23001 250E                               l21305 C8C6  
                             l22201 DBEC                               l21401 ED4A  
                             l21321 D47A                               l22033 B45A  
                             l22025 B39E                               l22017 B362  
                             l22009 B33A                               l20531 EEFC  
                             l20523 EED4                               l20515 EEAC  
                             l20507 FCCE                               l20611 F23A  
                             l20603 F21C                               l20291 81E2  
                             l20283 81A6                               l20275 8166  
                             l20267 8140                               l20259 8112  
                             l20099 14A6                               l20195 BC5A  
                             l20187 BBD8                               l20179 BBB6  
                             l20451 3974                               l20443 3916  
                             l20435 38BA                               l20427 3844  
                             l20371 3556                               l20363 3506  
                             l20347 3492                               l20339 344A  
                             l21091 6D46                               l21075 6BD0  
                             l21067 6B1E                               l21059 6A7E  
                             l22107 D442                               l22131 EB88  
                             l22123 EB4E                               l22115 EB22  
                             l21163 4554                               l21155 446E  
                             l21139 42EE                               l21243 3E6C  
                             l21251 3E9A                               l21227 3DAC  
                             l21219 3D42                               l21235 3E10  
                             l23011 257C                               l21331 C406  
                             l21307 C8D0                               l22211 DCA8  
                             l22203 DC06                               l21411 DCC0  
                             l21323 D4D0                               l21315 D446  
                             l22043 A50E                               l22035 B474  
                             l22027 B3D2                               l22019 B372  
                             l20533 EF12                               l20525 EEE0  
                             l20509 FCEC                               l20613 F23E  
                             l20293 81EE                               l20285 81C0  
                             l20277 8178                               l20269 8144  
                             l20541 012C                               l20701 E3F8  
                             l20197 BC74                               l20189 BC0E  
                             l20461 39CC                               l20453 397C  
                             l20437 38F2                               l20429 3852  
                             l20373 3572                               l20365 3516  
                             l20357 34B6                               l20349 349A  
                             l20621 C294                               l21085 6C82  
                             l21077 6BE0                               l22125 EB6C  
                             l22117 EB2A                               l21149 43B0  
                             l21261 3F18                               l21253 3EC6  
                             l21245 3E7C                               l21237 3E26  
                             l21229 3DC6                               l21181 3B52  
                             l21173 3AF8                               l21341 C4B0  
                             l21333 C428                               l21309 C8F2  
                             l22205 DC16                               l22213 DCBA  
                             l21421 DD2C                               l21413 DCE0  
                             l21325 D4E2                               l21317 D45A  
                             l22221 8904                               l22045 A534  
                             l22037 B47C                               l22029 B406  
                             l22141 9AFE                               l22133 9AA8  
                             l23101 1816                               l20535 EF16  
                             l20527 EEE4                               l20519 EECA  
                             l20615 F25A                               l20295 81F2  
                             l20287 81CC                               l20279 8184  
                             l20199 BC82                               l20471 3A6A  
                             l20463 3A00                               l20447 394E  
                             l20391 3658                               l20383 35AE  
                             l20375 3582                               l20367 3520  
                             l20359 34DA                               l20551 F858  
                             l20631 C34E                               l20623 C2B6  
                             l20703 82E6                               l21087 6CCC  
                             l21079 6C00                               l21095 6DA2  
                             l22127 EB7C                               l22119 EB36  
                             l21167 456A                               l21271 3F80  
                             l21239 3E36                               l21183 3B7C  
                             l21175 3B08                               l23007 2524  
                             l21351 C536                               l21343 C4CC  
                             l21335 C434                               l23031 F1A4  
                             l23023 F170                               l21511 619E  
                             l22207 DC42                               l21407 ED6E  
                             l21415 DD00                               l21327 D4EE  
                             l21319 D468                               l22231 8936  
                             l22071 A61A                               l22063 A586  
                             l22047 A54A                               l22039 B48C  
                             l22311 00A8                               l22303 0068  
                             l22135 9AA8                               l23111 18A0  
                             l23103 1826                               l20529 EEF0  
                             l20617 F270                               l20609 F232  
                             l20561 0130                               l20297 8204  
                             l20289 81D0                               l20537 010E  
                             l20457 398A                               l20449 395E  
                             l20385 35DE                               l20377 3598  
                             l20369 3548                               l20545 F80E  
                             l20641 C3D4                               l20633 C36A  
                             l20625 C2C2                               l20801 8E56  
                             l20721 8332                               l20713 82F8  
                             l20705 82EE                               l21361 FC9A  
                             l22129 EB7E                               l21169 4590  
                             l21097 40A8                               l21281 4040  
                             l21273 3F96                               l21257 3EE2  
                             l21193 3BEC                               l21177 3B20  
                             l21185 3B90                               l23017 2592  
                             l23009 2536                               l23201 CBE8  
                             l21353 C54A                               l21345 C4F8  
                             l21337 C452                               l23033 F1B0  
                             l23025 F18C                               l21601 65C4  
                             l21521 61E4                               l21513 61AE  
                             l21505 7BF4                               l22209 DC52  
                             l22233 8964                               l22241 89E4  
                             l22217 88C2                               l22081 A6B8  
                             l22073 A626                               l22065 A5EE  
                             l22049 A560                               l22057 A57E  
                             l22321 00DA                               l22313 00B6  
                             l22305 0078                               l22153 9B1A  
                             l22161 9B60                               l22145 9B04  
                             l22137 9AB8                               l23113 18F2  
                             l23121 191A                               l23041 1538  
                             l24001 5158                               l20491 F8C2  
                             l20571 F75A                               l20651 FF76  
                             l20563 013C                               l20299 8210  
                             l20539 0110                               l20467 3A34  
                             l20459 39A8                               l20387 35FE  
                             l20395 368C                               l20379 35A0  
                             l20483 3ACA                               l20547 F81A  
                             l20555 FFB4                               l20643 C3E8  
                             l20635 C396                               l20627 C2E0  
                             l20803 8E5E                               l20731 83A4  
                             l20723 8338                               l20715 8300  
                             l22091 D35E                               l21099 40AE  
                             l21283 406A                               l21275 3FC6  
                             l21259 3EF8                               l21267 3F40  
                             l21195 3C08                               l21187 3BBC  
                             l21179 3B3C                               l23203 CC24  
                             l21347 C514                               l21339 C492  
                             l21355 C550                               l23035 F1B4  
                             l23027 F190                               l21531 6264  
                             l21523 61FA                               l21507 7C6A  
                             l21451 793A                               l21443 78F4  
                             l21427 DD50                               l21419 DD0C  
                             l21435 DD94                               l21611 F128  
                             l22243 8A1A                               l22235 896A  
                             l22219 88D2                               l22083 A6CC  
                             l22075 A632                               l22067 A5F2  
                             l22403 03CE                               l22331 010E  
                             l22315 00C6                               l22307 007A  
                             l22163 9B8C                               l22155 9B4A  
                             l22139 9AD4                               l23131 197E  
                             l23123 1952                               l23107 182C  
                             l23051 1596                               l23043 1540  
                             l24011 522C                               l24003 515E  
                             l20493 F8DE                               l20581 F7A8  
                             l20573 F766                               l20565 0152  
                             l20661 E65E                               l20653 E648  
                             l20477 3A9C                               l20469 3A4A  
                             l20397 36A2                               l20389 3622  
                             l20549 F838                               l20557 FFBE  
                             l20637 C3B2                               l20629 C330  
                             l20645 C3EE                               l20821 8EE4  
                             l20813 8EA6                               l20741 8422  
                             l20733 83AA                               l20725 834E  
                             l20717 8302                               l20901 E770  
                             l21373 FCC2                               l21365 FCA0  
                             l21357 FC88                               l22093 D378  
                             l21285 407A                               l21277 3FD6  
                             l21269 3F70                               l21197 3C1C  
                             l21189 3BD8                               l23205 CC2E  
                             l21349 C534                               l23037 F1B8  
                             l23029 F198                               l21293 C83A  
                             l21533 629C                               l21541 6318  
                             l21525 6230                               l21517 61E4  
                             l21461 79A6                               l21429 DD70  
                             l21613 F166                               l21605 F0EA  
                             l22261 8ABC                               l22253 8A7A  
                             l22245 8A2A                               l22237 899C  
                             l21621 862E                               l22085 A6E2  
                             l22077 A668                               l22069 A608  
                             l22501 09A4                               l22405 03EC  
                             l22317 00D4                               l22309 0092  
                             l22325 00E0                               l22181 9BE4  
                             l22173 9BC2                               l22157 9B5A  
                             l23221 E428                               l23301 C0B0  
                             l23141 1A0E                               l23133 198E  
                             l23125 196A                               l23109 186A  
                             l23045 154C                               l24021 52D6  
                             l24013 5240                               l24005 518C  
                             l24101 DBA6                               l20495 F8E8  
                             l20575 F772                               l20567 0166  
                             l20647 FF62                               l20591 FBFA  
                             l20583 FBBA                               l20671 E69E  
                             l20663 E662                               l20655 E650  
                             l20479 3AB8                               l20399 36BE  
                             l20639 C3D2                               l20831 8F2A  
                             l20823 8EF0                               l20815 8EB6  
                             l20807 8E68                               l20751 8472  
                             l20743 8432                               l20735 83E4  
                             l20727 8372                               l20719 830E  
                             l20903 E77E                               l22095 D3A0  
                             l22087 D346                               l21279 3FF2  
                             l23215 CCFC                               l23207 CC92  
                             l23039 F1CE                               l21383 F724  
                             l21295 C866                               l21287 C818  
                             l21551 63E6                               l21543 638C  
                             l21535 6300                               l21455 7940  
                             l21447 78F4                               l21439 78E4  
                             l21391 ECDE                               l21607 F11C  
                             l22271 8B00                               l22263 8ACA  
                             l22255 8A8A                               l22247 8A4E  
                             l22239 89CE                               l21711 B51E  
                             l21631 867A                               l22079 A674  
                             l22511 0AA2                               l22503 09CC  
                             l22431 052E                               l22423 04C6  
                             l22415 0454                               l22407 0402  
                             l22351 016E                               l22343 0136  
                             l22335 0114                               l22327 00EA  
                             l22191 9C76                               l22183 9C14  
                             l22175 9BDE                               l22167 9BA8  
                             l23231 E47A                               l23311 C0E2  
                             l23303 C0B6                               l23151 1AC6  
                             l23143 1A50                               l23135 19AE  
                             l23119 1908                               l23071 164C  
                             l23063 15BC                               l23055 159C  
                             l23047 1566                               l24111 D920  
                             l24031 538E                               l24023 5314  
                             l24007 51BC                               l24015 527E  
                             l24103 DBC0                               l20497 F8F8  
                             l20489 F8BA                               l20577 F78E  
                             l20569 F758                               l20649 FF6A  
                             l20585 FBC2                               l20673 E6BA  
                             l20665 E666                               l20657 E656  
                             l20841 8F96                               l20833 8F3A  
                             l20817 8EC2                               l20809 8E8E  
                             l20921 E818                               l20761 8502  
                             l20753 848E                               l20745 843E  
                             l20737 840A                               l20729 8380  
                             l20905 E782                               l22097 D3D8  
                             l22089 D34C                               l23209 CCE4  
                             l23241 D13E                               l21377 F6F8  
                             l22521 9CF4                               l21297 C884  
                             l21289 C834                               l21561 6444  
                             l21553 6402                               l21545 63C4  
                             l21529 6236                               l21481 7AFC  
                             l21473 7A40                               l21465 79C2  
                             l21457 7978                               l21449 790C  
                             l21801 CAAE                               l21393 ECFE  
                             l22257 8A9A                               l22249 8A66  
                             l22281 8B9E                               l21721 B548  
                             l21633 868C                               l21625 863C  
                             l21617 85D6                               l22513 0ABE  
                             l22505 0A02                               l22441 0580  
                             l22433 0536                               l22425 0512  
                             l22417 04A4                               l22409 043C  
                             l22353 0184                               l22345 0152  
                             l22337 0124                               l22329 0100  
                             l22193 9C9C                               l22601 26D0  
                             l23233 E49C                               l23225 E45A  
                             l23401 F594                               l23313 C0E6  
                             l23321 C108                               l23305 C0BC  
                             l23161 1BAE                               l23153 1B14  
                             l23137 19C0                               l23081 1734  
                             l23073 1686                               l23065 161A  
                             l23057 15B6                               l23049 1576  
                             l24113 D92A                               l25001 7194  
                             l24025 5326                               l24009 51C4  
                             l24017 52A6                               l24033 53AC  
                             l24105 DBD2                               l20499 F8FA  
                             l20579 F792                               l20595 F1F2  
                             l20587 FBD0                               l20683 E6F2  
                             l20675 E6CA                               l20667 E67E  
                             l20659 E65A                               l20691 E37C  
                             l20851 8FF8                               l20843 8FA6  
                             l20835 8F5E                               l20827 8F06  
                             l20819 8ED4                               l20931 E82C  
                             l20915 E7AA                               l20763 8514  
                             l20755 84C6                               l20747 8442  
                             l20907 E788                               l22099 D404  
                             l23251 D1B0                               l23243 D14E  
                             l21379 F708                               l21387 F752  
                             l22523 9D04                               l21299 C8A4  
                             l21571 64AC                               l21547 63E0  
                             l21467 79D8                               l21475 7A6C  
                             l21459 798E                               l21395 ED1E  
                             l21811 F2E2                               l22275 8B1A  
                             l22267 8ADC                               l22259 8AAA  
                             l21723 B55A                               l21651 875A  
                             l21643 86F6                               l21635 869E  
                             l21627 8656                               l21619 8602  
                             l22507 0A38                               l22451 05BA  
                             l22443 059C                               l22435 0554  
                             l22371 0224                               l22347 0168  
                             l22291 0030                               l22195 9CD6  
                             l22611 275A                               l22603 26DE  
                             l23235 E4A8                               l23227 E466  
                             l23219 E418                               l23331 A936  
                             l23411 EE12                               l23403 F5AA  
                             l23315 C0F8                               l23307 C0C2  
                             l23171 1C58                               l23163 1BF4  
                             l23155 1B26                               l23139 19EE  
                             l23091 17CE                               l23083 174A  
                             l23075 16E4                               l23067 1636  
                             l24131 D990                               l24123 D97A  
                             l24115 D932                               l24027 5384  
                             l24019 52B6                               l24051 BE96  
                             l24043 BE42                               l24107 DBD8  
                             l25011 E880                               l20597 F1F4  
                             l20589 FBE2                               l20677 E6D6  
                             l20669 E68A                               l20693 E38C  
                             l20861 905C                               l20853 901C  
                             l20845 8FCA                               l20829 8F1A  
                             l20837 8F64                               l20933 E830  
                             l20917 E7B8                               l20781 8584  
                             l20773 8544                               l20757 84E2  
                             l20749 845E                               l20909 E7A6  
                             l20941 B64C                               l23261 D216  
                             l23253 D1B2                               l23245 D156  
                             l23501 F464                               l22541 9DF4  
                             l22533 9D90                               l22525 9D1E  
                             l21581 64CC                               l21557 6408  
                             l21493 7B4A                               l21485 7B02  
                             l21477 7AB2                               l21901 4714  
                             l21821 BCA4                               l21805 F274  
                             l22269 8AEC                               l21741 B5E4  
                             l21725 B56C                               l21709 B50A  
                             l21661 87FA                               l21653 876E  
                             l21645 8710                               l21637 86B6  
                             l21629 8668                               l22509 0A96  
                             l22461 06AC                               l22453 0672  
                             l22445 05A4                               l22437 055C  
                             l22373 0242                               l22365 01CE  
                             l22357 018A                               l22285 0000  
                             l22189 9C28                               l22701 2C12  
                             l22621 27DA                               l22613 276C  
                             l22605 26F2                               l23237 E4B8  
                             l23229 E476                               l23333 A93A  
                             l23341 A964                               l23325 A8E0  
                             l23421 EE6C                               l23413 EE14  
                             l23405 F5B0                               l23317 C0FC  
                             l23309 C0D4                               l23181 1CDC  
                             l23173 1C6E                               l23149 1A66  
                             l23157 1B48                               l23093 17E4  
                             l23085 177A                               l23077 16F6  
                             l24301 60A4                               l25101 CE86  
                             l24133 D994                               l24141 D9D8  
                             l24117 D93C                               l24029 538A  
                             l24061 BF30                               l24053 BEA6  
                             l24045 BE5E                               l24037 BE28  
                             l25021 E8BA                               l25013 E888  
                             l25005 E858                               l20599 F20C  
                             l20679 E6E6                               l20695 E390  
                             l20687 E354                               l20871 90AC  
                             l20863 906E                               l20847 8FD8  
                             l20855 9022                               l20839 8F7A  
                             l20935 E836                               l20767 8524  
                             l20759 84E6                               l20951 B74A  
                             l20943 B650                               l23263 D218  
                             l23255 D1B6                               l23503 F474  
                             l21815 FA50                               l21751 9EF0  
                             l22551 9ECC                               l22543 9E18  
                             l22527 9D38                               l22535 9DA2  
                             l22519 9CDA                               l21575 64B2  
                             l21567 645C                               l21559 6432  
                             l21495 7B78                               l21487 7B1C  
                             l21479 7ADE                               l22199 DBDC  
                             l21399 ED2A                               l21911 475E  
                             l21903 4724                               l21831 BCEE  
                             l21823 BCB4                               l21807 F290  
                             l22279 8B38                               l21743 B616  
                             l21727 B57E                               l21719 B538  
                             l21663 881C                               l21655 877E  
                             l21647 8722                               l21639 86E8  
                             l22455 0686                               l22471 0740  
                             l22439 0578                               l22383 029C  
                             l22375 025E                               l22367 01EE  
                             l22359 01A6                               l22295 0036  
                             l22287 000C                               l22711 2D0A  
                             l22703 2C3E                               l22623 27F6  
                             l22615 2790                               l22607 2714  
                             l22631 288E                               l23239 E4BC  
                             l23343 A976                               l23327 A8F6  
                             l23423 EE80                               l23415 EE32  
                             l23407 F5B2                               l23271 BFBC  
                             l23191 1D64                               l23183 1CEC  
                             l23175 1C76                               l23159 1B78  
                             l23095 17F4                               l23087 17B2  
                             l23079 1718                               l23431 B9BE  
                             l24311 60F8                               l24303 60B4  
                             l25103 CE98                               l24143 D9E2  
                             l24135 D998                               l24119 D962  
                             l16151 C6C6                               l24071 BFA2  
                             l24063 BF50                               l24055 BEC0  
                             l24047 BE6E                               l24039 BE3C  
                             l25031 E8F6                               l25023 E8C6  
                             l25015 E890                               l25007 E866  
                             l16071 FF34                               l20961 FEC6  
                             l20697 E3B8                               l20689 E36C  
                             l20881 90EE                               l20873 90CC  
                             l20865 9082                               l20849 8FE8  
                             l20937 E854                               l20929 E81E  
                             l20793 85C0                               l20777 8558  
                             l20785 859A                               l20769 8530  
                             l20953 B768                               l20945 B66E  
                             l22801 312C                               l22721 2D3E  
                             l23265 D21C                               l23249 D180  
                             l23257 D1C2                               l23513 F4CC  
                             l23505 F47C                               l21681 0224  
                             l21817 FA68                               l21761 A022  
                             l21753 9F00                               l22553 9EDC  
                             l22545 9E50                               l22537 9DB6  
                             l22529 9D8A                               l21569 6494  
                             l21497 7BB2                               l21921 479E  
                             l21841 BD5E                               l21833 BD1A  
                             l21825 BCD6                               l21809 F2AA  
                             l21729 B590                               l21737 B5A6  
                             l21665 8844                               l21657 87A4  
                             l21649 8748                               l21673 8892  
                             l22481 07C6                               l22385 02DA  
                             l22377 027A                               l22369 0204  
                             l22297 0050                               l22289 0020  
                             l22713 2D26                               l22705 2C56  
                             l22641 28E4                               l22633 289E  
                             l22625 2826                               l22617 27B2  
                             l22609 2736                               l22561 25CA  
                             l23361 AA14                               l23345 A97E  
                             l23329 A920                               l23337 A946  
                             l23417 EE50                               l23425 EE86  
                             l23273 BFE6                               l23281 C00C  
                             l23521 AC68                               l23185 1CF4  
                             l23177 1CC2                               l23169 1C0A  
                             l23441 BA50                               l23433 B9C8  
                             l24321 616A                               l24313 610E  
                             l24305 60BA                               l24241 5D5A  
                             l24233 5D0C                               l25121 CF10  
                             l25113 CECC                               l25105 CEAA  
                             l24401 5968                               l24145 D9F6  
                             l24129 D984                               l16161 C72A  
                             l16153 C6E2                               l24057 BEDA  
                             l24065 BF70                               l24049 BE7E  
                             l25025 E8EA                               l25017 E892  
                             l25009 E878                               l16081 FF56  
                             l16073 FF3C                               l25041 98A6  
                             l25201 7CC4                               l20699 E3D6  
                             l20875 90D8                               l20867 9092  
                             l20787 85AC                               l20779 8578  
                             l20795 85C8                               l20947 B6C0  
                             l20955 B7E2                               l22811 31BC  
                             l22723 2D4A                               l20971 FF8C  
                             l23259 D1E6                               l23267 D228  
                             l21819 FA82                               l21763 A074  
                             l21755 9F10                               l22547 9E7E  
                             l22539 9DE4                               l22555 9EEC  
                             l21595 653A                               l21587 64EC  
                             l21499 7BCE                               l21771 C968  
                             l21931 485A                               l21923 47DC  
                             l21915 4772                               l21907 472A  
                             l21851 BDF8                               l21843 BD66  
                             l21827 BCE6                               l21747 B648  
                             l21739 B5B2                               l21691 B4BE  
                             l21675 88AC                               l21667 886A  
                             l21659 87C6                               l22491 0918  
                             l22483 0852                               l22467 06D0  
                             l22395 0376                               l22387 0302  
                             l22299 0062                               l22715 2D32  
                             l22707 2C5E                               l22651 2940  
                             l22643 28F2                               l22635 28AC  
                             l22627 2836                               l22619 27C4  
                             l22571 25D4                               l23363 AA20  
                             l23347 A9B4                               l23355 A9D4  
                             l23339 A958                               l23419 EE68  
                             l23291 C07C                               l23283 C01E  
                             l23275 BFFC                               l23531 ACD4  
                             l23523 AC9C                               l23187 1D0E  
                             l23179 1CD4                               l23099 17FA  
                             l23195 1DA0                               l23443 BA6E  
                             l23435 B9EC                               l23427 B98C  
                             l23611 8DA2                               l23603 8D44  
                             l24323 617C                               l24307 60DE  
                             l24251 5DC0                               l24315 6116  
                             l24235 5D1E                               l25123 CF14  
                             l25115 CEE8                               l25107 CEB4  
                             l24411 59B2                               l24147 DA02  
                             l24139 D9B4                               l16163 C746  
                             l16155 C706                               l24075 FDB8  
                             l24067 BF82                               l24059 BF1C  
                             l24091 DB56                               l24083 DAF6  
                             l24331 FF08                               l25027 E8EE  
                             l25019 E8A6                               l16083 FF5A  
                             l16075 FF4A                               l25051 992E  
                             l25043 98AE                               l25035 9874  
                             l25131 960E                               l25211 7D26  
                             l25203 7CC8                               l18101 AAC6  
                             l23517 0276                               l20965 E58E  
                             l20877 90E0                               l20797 85CC  
                             l20893 E76A                               l20949 B6D0  
                             l22821 32CA                               l22813 320A  
                             l22741 2E0A                               l22733 2D9A  
                             l22725 2D64                               l20981 F5BA  
                             l20973 FF98                               l22901 2070  
                             l23509 F4A2                               l21757 9F2A  
                             l21765 A0C6                               l22549 9EA0  
                             l21597 6574                               l21781 C9DE  
                             l21773 C978                               l21941 489C  
                             l21925 481E                               l21917 4784  
                             l21909 475A                               l21861 45A4  
                             l21853 BE12                               l21845 BD90  
                             l21837 BD2E                               l21677 88B8  
                             l22493 0928                               l22477 0762  
                             l22469 06FE                               l22397 039C  
                             l22389 0320                               l22709 2CB8  
                             l22661 29EE                               l22653 29A0  
                             l22645 28F4                               l22637 28C2  
                             l22629 2856                               l22581 2630  
                             l22573 25F0                               l22565 25D0  
                             l23381 AA8A                               l23373 AA4E  
                             l23365 AA30                               l23357 A9F2  
                             l23277 C000                               l23285 C02A  
                             l23269 BFA6                               l23541 AD2A  
                             l23533 ACDA                               l23525 ACA6  
                             l23197 1DB0                               l23189 1D44  
                             l23445 BAA8                               l23437 B9FE  
                             l23429 B9A6                               l23613 8DB6  
                             l23621 FFE2                               l24309 60F0  
                             l24261 5E4A                               l24253 5DD0  
                             l24317 6128                               l24245 5D66  
                             l24237 5D3C                               l24501 FDF0  
                             l25125 CF20                               l25117 CEEE  
                             l25109 CEC0                               l24421 5A02  
                             l24413 59C6                               l24405 597E  
                             l16165 C756                               l16157 C70A  
                             l16173 C7D4                               l17301 F6EE  
                             l17221 F69E                               l17213 F690  
                             l24077 FDD2                               l23701 A3E6  
                             l24069 BF96                               l24093 DB6E  
                             l24085 DB10                               l24341 FF24  
                             l24333 FF0E                               l25029 E8F2  
                             l16085 FF5C                               l16077 FF4E  
                             l25061 99A4                               l25053 9948  
                             l25045 98C4                               l25037 987C  
                             l25141 965A                               l25133 9612  
                             l25301 7F7E                               l25221 7D5C  
                             l25213 7D2C                               l25205 7CEE  
                             l18111 AB3E                               l18103 AB0C  
                             l20967 E634                               l20959 FE98  
                             l20879 90EA                               l20887 E6FC  
                             l22831 3338                               l22807 3142  
                             l22815 322E                               l22751 2E8C  
                             l22743 2E34                               l22735 2DB4  
                             l22727 2D74                               l22719 2D36  
                             l20991 F5F6                               l20983 F5C6  
                             l20975 FF9C                               l22903 2086  
                             l23471 C59A                               l21767 A0F8  
                             l21759 9F48                               l21599 6590  
                             l21775 C99A                               l21943 48CC  
                             l21927 4830                               l21919 479A  
                             l21871 4622                               l21863 45B0  
                             l21847 BDB6                               l21839 BD4E  
                             l21687 B4AC                               l22495 093C  
                             l22479 07B2                               l22671 2A68  
                             l22663 2A02                               l22655 29B0  
                             l22647 291C                               l22639 28D0  
                             l22591 267A                               l22583 263E  
                             l22575 2600                               l22559 25B6  
                             l23383 AA98                               l23375 AA5A  
                             l23367 AA34                               l23359 AA04  
                             l23391 F550                               l23287 C03E  
                             l23551 AD9E                               l23543 AD30  
                             l23535 ACEE                               l23527 ACB6  
                             l23519 AC5A                               l23463 BB14  
                             l23455 BADC                               l23447 BABC  
                             l23439 BA0E                               l23607 8D60  
                             l23615 8DE6                               l23631 026C  
                             l23623 FFF4                               l24351 FD40  
                             l24319 6138                               l24263 5E58  
                             l24255 5DE6                               l24247 5D76  
                             l24239 5D4C                               l24511 FE14  
                             l24503 FDF4                               l25127 CF24  
                             l25119 CF00                               l24431 5A82  
                             l24423 5A1E                               l24415 59D8  
                             l24407 5990                               l16167 C766  
                             l16159 C71A                               l17303 F6F0  
                             l17231 F6A8                               l17223 F6A0  
                             l17215 F696                               l24079 FDE2  
                             l23711 A49C                               l23703 A406  
                             l24095 DB80                               l24087 DB20  
                             l24343 FF28                               l24335 FF12  
                             l16079 FF50                               l17311 FD12  
                             l25071 99EA                               l25055 9966  
                             l25047 98F6                               l25039 9896  
                             l25151 96FC                               l25143 968C  
                             l25135 962C                               l25311 7FA8  
                             l25303 7F82                               l25231 7D9A  
                             l25223 7D6C                               l25215 7D3E  
                             l25207 7CF6                               l18121 ABC6  
                             l18113 AB4A                               l18105 AB22  
                             l20889 E70A                               l22841 33B2  
                             l22817 325E                               l22809 315E  
                             l22761 2F76                               l22753 2EEA  
                             l22745 2E3C                               l22729 2D94  
                             l20993 F602                               l20985 F5CA  
                             l20977 FFA2                               l22921 2112  
                             l22913 20E0                               l22905 20B2  
                             l23473 C5A4                               l21793 CA6C  
                             l21785 C9F2                               l21777 C9AA  
                             l21953 490E                               l21945 48D0  
                             l21937 4870                               l21929 4846  
                             l21881 4692                               l21873 4652  
                             l21865 45CC                               l21697 B4C4  
                             l22497 095E                               l22489 08DC  
                             l22681 2B3A                               l22673 2A90  
                             l22665 2A16                               l22657 29D0  
                             l22649 2930                               l22593 268A  
                             l22585 2642                               l22577 2608  
                             l22569 25D0                               l23385 AA9C  
                             l23369 AA44                               l23377 AA5E  
                             l23393 F560                               l23289 C046  
                             l23545 AD48                               l23537 AD16  
                             l23529 ACC8                               l23457 BAFC  
                             l23617 8E30                               l23609 8D9E  
                             l23561 8BD8                               l23625 FFF8  
                             l23801 EC00                               l24361 FD66  
                             l24353 FD44                               l23721 DDF6  
                             l24281 5F00                               l24273 5EA2  
                             l24265 5E62                               l24257 5DFC  
                             l24249 5D96                               l24521 FE22  
                             l24513 FE18                               l24505 FDF8  
                             l24433 5A9A                               l24425 5A36  
                             l24417 59EA                               l24409 59A0  
                             l24441 5AC2                               l16169 C77E  
                             l17241 F6B2                               l17233 F6AA  
                             l17225 F6A2                               l17217 F69A  
                             l23633 B160                               l23713 A4D4  
                             l23705 A41C                               l24097 DB82  
                             l24089 DB32                               l24345 FF2A  
                             l24337 FF14                               l24329 FF04  
                             l17313 FD18                               l17305 FD04  
                             l25081 9A66                               l25065 99BA  
                             l25073 9A14                               l25057 9980  
                             l25049 9910                               l25161 9758  
                             l25153 9716                               l25145 96A6  
                             l25137 963C                               l25129 9606  
                             l25401 EA42                               l25321 0236  
                             l25313 7FAC                               l25305 7F94  
                             l25233 7DA2                               l25217 7D42  
                             l25209 7D1C                               l26201 71CC  
                             l18131 AC04                               l18123 ABD2  
                             l18115 AB7C                               l22851 3428  
                             l22843 33BA                               l22827 32E0  
                             l22819 3278                               l22771 2FC4  
                             l22763 2F92                               l22755 2EFC  
                             l22739 2DBA                               l20995 F606  
                             l20987 F5D8                               l20979 FFAE  
                             l22931 2190                               l22915 20FC  
                             l22907 20CA                               l22923 214A  
                             l23491 C674                               l23475 C5DC  
                             l23467 C568                               l21795 CA74  
                             l21787 CA20                               l21779 C9B2  
                             l21971 4986                               l21955 491E  
                             l21947 48E8                               l21939 4884  
                             l21883 469A                               l21875 4656  
                             l21867 45DC                               l21859 4594  
                             l22499 0994                               l22683 2B56  
                             l22691 2B8A                               l22675 2AD2  
                             l22667 2A36                               l22659 29E0  
                             l22595 2690                               l22587 2658  
                             l22579 2620                               l23379 AA78  
                             l23299 C09C                               l23547 AD86  
                             l23539 AD24                               l23555 ADCE  
                             l23571 8C4E                               l23563 8BDC  
                             l23627 FFFA                               l23619 FFDC  
                             l23811 EC1C                               l23803 EC12  
                             l24363 FD6A                               l24355 FD56  
                             l23731 DE72                               l23715 DD9E  
                             l24291 5F60                               l24283 5F16  
                             l24275 5ECE                               l24267 5E80  
                             l24259 5E20                               l24515 FE1C  
                             l24507 FDFA                               l25091 CE36  
                             l24451 5B3A                               l24443 5AD4  
                             l24427 5A40                               l24419 59F2  
                             l24435 5AA6                               l24371 5870  
                             l17251 F6BC                               l17243 F6B4  
                             l17235 F6AC                               l17227 F6A4  
                             l17219 F69C                               l24531 FB3C  
                             l24523 FB2C                               l23651 B220  
                             l23643 B1BA                               l23635 B166  
                             l23707 A436                               l24099 DB92  
                             l24347 FF2E                               l24339 FF20  
                             l24611 9534                               l24603 9520  
                             l17315 FD1A                               l17307 FD0E  
                             l25083 9AA2                               l25067 99C2  
                             l25059 9990                               l25075 9A26  
                             l25171 979E                               l25155 9726  
                             l25147 96C4                               l25139 9644  
                             l25403 EA46                               l25323 023A  
                             l25411 D73C                               l25315 7FB4  
                             l25251 7E1C                               l25227 7D72  
                             l25219 7D46                               l26211 71F4  
                             l26203 71D0                               l18133 AC28  
                             l18125 ABE0                               l18117 AB7E  
                             l18109 AB36                               l23629 0260  
                             l19101 4A8C                               l22829 32F2  
                             l22837 334E                               l22845 3406  
                             l22781 302E                               l22773 2FD4  
                             l22765 2FA2                               l22757 2F1E  
                             l22749 2E52                               l20997 F614  
                             l20989 F5E4                               l22941 21AA  
                             l22917 210C                               l22909 20DA  
                             l23493 C696                               l23485 C610  
                             l23477 C5F0                               l23469 C582  
                             l22861 F7C6                               l21797 CA8C  
                             l21789 CA4C                               l21973 4996  
                             l21965 4962                               l21957 4922  
                             l21885 46AC                               l21893 46D4  
                             l21877 4668                               l21869 45E4  
                             l22693 2B9A                               l22685 2B5A  
                             l22677 2AEE                               l22669 2A46  
                             l22597 26A6                               l22589 2668  
                             l23397 F56C                               l23389 F54C  
                             l23549 AD8A                               l23581 8C96  
                             l23573 8C5E                               l23565 8C04  
                             l23557 8BA2                               l23813 EC20  
                             l23805 EC16                               l24365 FD72  
                             l24357 FD5A                               l23741 F9D2  
                             l23725 DE02                               l23717 DDB0  
                             l24293 5F74                               l24285 5F2A  
                             l24277 5EDE                               l24269 5E90  
                             l24517 FE1E                               l24509 FDFC  
                             l17501 C1F4                               l23901 D6E2  
                             l25093 CE48                               l24461 5BA8  
                             l24453 5B56                               l24445 5AEC  
                             l24437 5AA8                               l24429 5A66  
                             l24381 58B8                               l24373 5872  
                             l17261 F6C6                               l17253 F6BE  
                             l17245 F6B6                               l17237 F6AE  
                             l17229 F6A6                               l24533 FB4E  
                             l24525 FB30                               l23653 B232  
                             l23661 B28E                               l23645 B1DA  
                             l23637 B17A                               l23709 A460  
                             l24349 FF30                               l23821 CABA  
                             l24541 9380                               l17317 FD20  
                             l17309 FD10                               l25077 9A38  
                             l25069 99D0                               l25173 97B4  
                             l25165 976E                               l25181 97E0  
                             l25157 9736                               l25149 96DE  
                             l25405 EA4E                               l25325 0242  
                             l25341 B076                               l25333 AFB8  
                             l25421 D812                               l25413 D760  
                             l25501 5728                               l25253 7E2E  
                             l25261 7E58                               l25245 7DE8  
                             l25237 7DAC                               l25229 7D96  
                             l26221 7238                               l26213 71FA  
                             l26205 71D4                               l18135 AC38  
                             l18127 ABFE                               l18119 AB8A  
                             l19103 4A9C                               l19111 4AC4  
                             l20999 DF56                               l22847 3410  
                             l22839 339C                               l22791 306A  
                             l22783 3046                               l22759 2F3E  
                             l22855 3446                               l22951 224C  
                             l22943 21D6                               l22927 2164  
                             l22871 1DB4                               l23495 C6BA  
                             l23487 C622                               l22863 F7D6  
                             l21799 CA9C                               l21991 4A46  
                             l21983 49D0                               l21967 4972  
                             l21959 493A                               l21975 499E  
                             l21895 46F0                               l21887 46BE  
                             l21879 4682                               l22695 2BB8  
                             l22687 2B76                               l22679 2B0E  
                             l22599 26BC                               l23399 F582  
                             l23591 8CF0                               l23583 8CBE  
                             l23575 8C70                               l23567 8C10  
                             l23559 8BC6                               l23815 EC32  
                             l23807 EC18                               l23751 F402  
                             l24367 FD76                               l24359 FD62  
                             l23743 F9EE                               l23735 F9B0  
                             l23719 DDC8                               l23727 DE2E  
                             l24287 5F3E                               l24279 5EFA  
                             l24295 5F96                               l24519 FE20  
                             l17511 C226                               l17503 C1FA  
                             l23911 D71C                               l23903 D6EC  
                             l25095 CE62                               l25087 CE22  
                             l24471 5C3E                               l24463 5BAC  
                             l24455 5B6E                               l24447 5AFA  
                             l24439 5ABA                               l24391 5914  
                             l24383 58C6                               l24375 5882  
                             l17271 F6D0                               l17263 F6C8  
                             l17255 F6C0                               l17247 F6B8  
                             l17239 F6B0                               l24535 FB52  
                             l24527 FB34                               l23671 B2EC  
                             l23663 B2A6                               l23655 B244  
                             l23647 B1EA                               l23639 B1A6  
                             l23831 CAC4                               l23823 CABC  
                             l24631 9590                               l24615 955A  
                             l24551 93C6                               l24543 938A  
                             l17319 FD3C                               l25079 9A56  
                             l25191 986E                               l25175 97B8  
                             l25167 9776                               l25159 9746  
                             l25183 97F2                               l25343 B0C8  
                             l25335 AFD8                               l25423 D81A  
                             l25415 D7C2                               l25431 F378  
                             l25503 573A                               l25511 5822  
                             l25351 E4D4                               l25263 7E6A  
                             l25255 7E38                               l25271 7E92  
                             l25247 7DFA                               l25239 7DD4  
                             l26231 72EE                               l26223 7246  
                             l26215 721C                               l26207 71EC  
                             l18137 AC46                               l18129 AC00  
                             l19201 4C9A                               l19121 4AF4  
                             l19113 4AD4                               l19105 4AAC  
                             l22849 3420                               l22793 308A  
                             l22777 2FDA                               l22769 2FA8  
                             l22961 22A4                               l22945 21EE  
                             l22929 2174                               l22873 1DCE  
                             l23489 C632                               l22865 F7F0  
                             l21993 4A52                               l21985 49EA  
                             l21977 49BA                               l21969 4982  
                             l21897 4700                               l21889 46CE  
                             l22697 2BD4                               l22689 2B7A  
                             l23593 8D06                               l23585 8CCC  
                             l23577 8C7C                               l23569 8C44  
                             l23809 EC1A                               l23761 F424  
                             l23753 F406                               l23737 F9C2  
                             l23729 DE40                               l24297 606C  
                             l24289 5F4C                               l23921 D85C  
                             l17521 C250                               l17513 C228  
                             l17505 C1FC                               l17361 0188  
                             l17353 0174                               l23913 D738  
                             l23905 D706                               l25097 CE74  
                             l25089 CE2C                               l24481 5C98  
                             l24473 5C4E                               l24457 5B78  
                             l24449 5B0E                               l24393 5926  
                             l24385 58D8                               l24377 588A  
                             l17281 F6DA                               l17273 F6D2  
                             l17265 F6CA                               l17257 F6C2  
                             l17249 F6BA                               l24537 FB54  
                             l24529 FB38                               l23673 B300  
                             l23657 B256                               l23649 B1F2  
                             l23681 A34A                               l23841 CB26  
                             l23833 CAD8                               l23825 CABE  
                             l23817 CAB6                               l24641 95A2  
                             l24561 9410                               l24553 93D2  
                             l24545 9392                               l25185 9804  
                             l25177 97CA                               l25169 9784  
                             l25329 0246                               l25361 EDAE  
                             l25345 B0D2                               l25337 AFEA  
                             l25425 D828                               l25417 D7EA  
                             l25409 D73C                               l25433 F394  
                             l25505 5766                               l25513 584E  
                             l25441 53D4                               l25521 FC54  
                             l25353 E58A                               l25281 7ED2  
                             l25273 7EA4                               l25265 7E74  
                             l25257 7E3A                               l25249 7E0C  
                             l26241 7334                               l26233 72F2  
                             l26225 725E                               l26217 7220  
                             l26209 71F0                               l18139 AC48  
                             l19211 4CD4                               l19203 4CA8  
                             l19131 4B34                               l19123 4B02  
                             l19115 4ADA                               l19107 4ABC  
                             l22795 309C                               l22779 2FF6  
                             l22971 22F2                               l22947 2202  
                             l22891 1EC2                               l22883 1E04  
                             l22875 1DDE                               l23499 F460  
                             l22867 F800                               l22859 F7B6  
                             l21995 4A5A                               l21987 49F6  
                             l21899 470C                               l22699 2BE4  
                             l23595 8D0E                               l23587 8CD2  
                             l23579 8C82                               l23771 F454  
                             l23763 F428                               l23747 028C  
                             l23739 F9CA                               l24299 607C  
                             l23931 D8CC                               l23923 D864  
                             l17531 C27E                               l17523 C252  
                             l17515 C246                               l17507 C21E  
                             l17355 0182                               l23907 D716  
                             l25099 CE7C                               l24491 5CE2  
                             l24475 5C7C                               l24467 5BE2  
                             l24483 5C9E                               l24459 5B90  
                             l24395 593E                               l24387 58F4  
                             l24379 58A6                               l17291 F6E4  
                             l17283 F6DC                               l17275 F6D4  
                             l17267 F6CC                               l17259 F6C4  
                             l24539 FB68                               l23667 B2BA  
                             l23691 A39C                               l23683 A35E  
                             l16651 01BE                               l23851 CB5C  
                             l23843 CB34                               l23835 CAE4  
                             l23827 CAC0                               l23819 CAB6  
                             l24651 95DE                               l24643 95C8  
                             l24619 9572                               l24555 93E6  
                             l24547 939C                               l25187 9822  
                             l25179 97D8                               l25371 EDFE  
                             l25363 EDCE                               l25347 B15C  
                             l25339 AFF4                               l25419 D80E  
                             l25435 F3B8                               l25507 57AE  
                             l25443 53E6                               l25523 FC6A  
                             l25291 7F52                               l25283 7F24  
                             l25275 7EB6                               l25267 7E78  
                             l25259 7E3E                               l25195 7C6E  
                             l26251 737C                               l26243 7338  
                             l26235 72F4                               l26227 72CC  
                             l26219 7232                               l19221 4D40  
                             l19213 4CD6                               l19205 4CB6  
                             l19141 4B6C                               l19133 4B36  
                             l19125 4B04                               l19117 4AEC  
                             l19109 4ABE                               l19301 FA20  
                             l22797 30CA                               l22789 305A  
                             l22973 230E                               l22957 2260  
                             l22949 222E                               l22893 1F04  
                             l22885 1E2E                               l22877 1DEE  
                             l21989 4A06                               l23589 8CD8  
                             l23781 EBBC                               l23765 F43A  
                             l23757 F41C                               l23749 F3FE  
                             l23773 0288                               l15781 F960  
                             l23933 D902                               l23925 D87C  
                             l23917 D82E                               l17533 C284  
                             l17525 C270                               l17517 C248  
                             l17509 C220                               l17357 0184  
                             l24901 F954                               l24493 5CEA  
                             l24485 5CB2                               l24477 5C86  
                             l24469 5C20                               l24397 5950  
                             l24389 5904                               l24821 90F8  
                             l17293 F6E6                               l17285 F6DE  
                             l17277 F6D6                               l17269 F6CE  
                             l23669 B2DC                               l23693 A3AE  
                             l23685 A382                               l23677 A316  
                             l23941 4F26                               l16653 01C0  
                             l16645 01AC                               l23853 CB66  
                             l23845 CB3E                               l23837 CAF6  
                             l23829 CAC2                               l24581 948A  
                             l24573 9454                               l24565 9422  
                             l24557 93EA                               l25381 EA6C  
                             l25189 9832                               l25373 EE0E  
                             l25365 EDDE                               l25357 ED78  
                             l25437 F3E6                               l25429 F370  
                             l25509 57CC                               l25461 54B8  
                             l25453 5434                               l25445 5404  
                             l25525 FC72                               l25293 7F64  
                             l25285 7F28                               l25269 7E7C  
                             l25197 7CA0                               l26261 73A0  
                             l26245 7342                               l26237 730C  
                             l26229 72EA                               l19231 4D98  
                             l19223 4D42                               l19215 4CE0  
                             l19207 4CC2                               l19151 4B80  
                             l19143 4B70                               l19127 4B14  
                             l19135 4B3C                               l19119 4AEE  
                             l19311 D564                               l19303 FA24  
                             l22799 30EA                               l22991 2428  
                             l22975 233C                               l22967 22B8  
                             l22959 227A                               l22895 1F1A  
                             l22887 1E48                               l22879 1DFE  
                             l23599 8D2A                               l23791 EBDE  
                             l23783 EBC0                               l23775 EBA4  
                             l23767 F43E                               l23759 F420  
                             l15783 F96C                               l23927 D88C  
                             l23935 D906                               l23919 D84C  
                             l17535 C286                               l17527 C276  
                             l17519 C24A                               l17471 C13A  
                             l17359 0186                               l16831 FAD6  
                             l16823 FA9C                               l24495 5CFA  
                             l24479 5C88                               l24399 5954  
                             l24487 5CC2                               l24831 912A  
                             l17295 F6E8                               l17287 F6E0  
                             l17279 F6D8                               l17463 01C6  
                             l24911 DEA8                               l23695 A3B2  
                             l23687 A386                               l23951 4F8A  
                             l23943 4F2E                               l16655 01C2  
                             l16647 01B6                               l23871 F32C  
                             l26327 CBA8                               l23855 CB70  
                             l23847 CB48                               l23839 CB02  
                             l24655 95FA                               l24591 949E  
                             l24575 9466                               l25383 EA90  
                             l25367 EDEE                               l25359 ED7E  
                             l25471 5552                               l25463 54CA  
                             l25455 545E                               l25447 5414  
                             l25527 FC80                               l25519 FC42  
                             l25295 7F6C                               l25287 7F30  
                             l25199 7CBE                               l26263 73BC  
                             l26247 7350                               l26239 731E  
                             l26191 71AC                 SDCard_read512@count 05E6  
                             l18097 AAA8                               l19401 DABE  
                             l19081 E28A                               l19241 4DC6  
                             l19225 4D52                               l19209 4CC6  
                             l19217 4CE6                               l19161 4B94  
                             l19153 4B84                               l19145 4B74  
                             l19137 4B4C                               l19129 4B24  
                             l19313 D5A2                               l19321 D5E2  
                             l19305 FA30                               l22993 2438  
                             l22985 2394                               l22977 2368  
                             l22969 22D4                               l22897 1FA4  
                             l22889 1EAC                               l23777 EBB6  
                             l23785 EBC2                               l23769 F440  
                             l15785 F970                               l15881 CD9E  
                             l15873 CD2C                               l23937 D918  
                             l23929 D89A                               l17537 C28E  
                             l17529 C27C                               l17481 C170  
                             l17473 C13C                               l17465 C120  
                             l23881 D642                               l16833 FADC  
                             l16825 FA9C                               l24489 5CD4  
                             l16681 EFEC                               l24841 9166  
                             l24833 913A                               l17297 F6EA  
                             l17289 F6E2                               l24921 DF14  
                             l24913 DECC                               l24905 DE7C  
                             l23697 A3C6                               l23945 4F54  
                             l16649 01BA                               l23873 F33E  
                             l23849 CB52                               l24593 94EA  
                             l24585 9496                               l24577 9474  
                             l24569 942E                               l25385 EAEA  
                             l25377 EA54                               l25369 EDFA  
                             l25393 E9AC                               l25481 5646  
                             l25473 5570                               l25465 5508  
                             l25457 546E                               l25449 5422  
                             l25297 7F74                               l25289 7F40  
                             l26281 748E                               l26273 73F4  
                             l26257 7386                               l26249 7366  
                             l26193 71BE                               l18099 AAB8  
                             l19331 CF2E                               l19403 DAC4  
                             l19091 E30C                               l19083 E29C  
                             l19411 7554                               l19243 4DD4  
                             l19235 4DAC                               l19251 4DF2  
                             l19219 4D0C                               l19227 4D62  
                             l19171 4BA8                               l19163 4B98  
                             l19155 4B88                               l19147 4B78  
                             l19139 4B5E                               l19323 D5F4  
                             l19315 D5CA                               l19307 FA34  
                             l22995 2472                               l22979 2380  
                             l22899 2054                               l22987 23CA  
                             l23795 EBF4                               l23787 EBD6  
                             l23779 EBBA                               l15787 F9A2  
                             l15883 CDE2                               l15875 CD3A  
                             l15867 CD06                               l24499 01DE  
                             l17491 C1C6                               l17483 C19A  
                             l17475 C13E                               l17467 C124  
                             l23891 D674                               l23883 D64A  
                             l16835 FADE                               l16827 FAB2  
                             l16691 F04C                               l16683 EFFE  
                             l24851 91C6                               l24843 916E  
                             l24827 9102                               l17299 F6EC  
                             l24931 DF36                               l24923 DF16  
                             l24915 DEFA                               l24907 DE80  
                             l23699 A3E2                               l23971 5040  
                             l23963 4FE8                               l23955 4F92  
                             l23947 4F72                               l23867 F2F6  
                             l23859 CB90                               l25387 EAEE  
                             l25379 EA5A                               l25395 E9B2  
                             l25491 56C0                               l25483 5666  
                             l25475 5582                               l25467 5524  
                             l25459 548C                               l25299 7F7C  
                             l26291 751C                               l26283 74AA  
                             l26275 7442                               l26267 73EA  
                             l26259 739C                               l26195 71C0  
                             l19341 CF60                               l19333 CF30  
                             l19405 DAD4                               l19077 0210  
                             l19085 E2AE                               l19501 777C  
                             l19421 7590                               l19413 7560  
                             l19261 4E5C                               l19253 4E10  
                             l19245 4DDC                               l19237 4DB6  
                             l19229 4D88                               l19181 4C1A  
                             l19165 4B9C                               l19157 4B8C  
                             l19149 4B7C                               l19173 4BAC  
                             l19317 D5D6                               l19309 D544  
                             l22997 24A2                               l22989 2400  
                             l23797 EBF8                               l23789 EBDA  
                             l15877 CD6C                               l15869 CD20  
                             l17493 C1C8                               l17485 C19C  
                             l17477 C144                               l17469 C138  
                             l23893 D68E                               l23885 D65E  
                             l16829 FAC2                               l16685 F014  
                             l16677 EFD2                               l24941 6E08  
                             l24933 6DDA                               l24861 92B2  
                             l24853 91F4                               l24845 9176  
                             l24829 9122                               l24925 DF18  
                             l24917 DEFE                               l24909 DE84  
                             l23973 5062                               l23965 5008  
                             l23957 4FB2                               l23949 4F82  
                             l23877 F346                               l23869 F306  
                             l24597 9500                               l25389 EAF6  
                             l25397 E9C4                               l25493 56D2  
                             l25485 5682                               l25477 55D8  
                             l25469 5536                               l26293 752E  
                             l26285 74C0                               l26277 747A  
                             l26197 71C4                               l26189 71A0  
                             l19351 CFA2                               l19343 CF70  
                             l19335 CF3E                               l19407 DAE4  
                             l19079 021E                               l19087 E2B8  
                             l19503 778A                               l19431 75BE  
                             l19423 75A0                               l19415 756E  
                             l19271 4EC6                               l19263 4E6A  
                             l19255 4E26                               l19247 4DE0  
                             l19239 4DC4                               l19191 4C44  
                             l19183 4C26                               l19175 4BD8  
                             l19167 4BA0                               l19159 4B90  
                             l19095 4A70                               l19327 D638  
                             l22999 24BC                               l23799 EBFC  
                             l15879 CD8C                               l17495 C1CE  
                             l17487 C1A2                               l17479 C146  
                             l23895 D6A0                               l23887 D66E  
                             l16687 F024                               l16679 EFDA  
                             l24943 6E1E                               l24935 6DE4  
                             l24863 92E0                               l24855 9272  
                             l24847 917E                               l24839 914A  
                             l24927 DF32                               l24919 DF10  
                             l23991 510C                               l23983 50A4  
                             l23959 4FD4                               l17671 AE66  
                             l17663 AE0A                               l24599 9504  
                             l25399 E9E8                               l25495 56E4  
                             l25487 5694                               l25479 55F6  
                             l26295 753E                               l26287 74CC  
                             l26279 748A                               l26199 71C8  
                             l19361 CFF4                               l19353 CFAE  
                             l19345 CF74                               l19337 CF4E  
                             l19089 E2D6                               l19513 7812  
                             l19521 785A                               l19505 779C  
                             l19441 75F4                               l19433 75C4  
                             l19425 75A2                               l19417 7570  
                             l19601 6728                               l19281 4F04  
                             l19273 4EE6                               l19265 4EA4  
                             l19249 4DF0                               l19193 4C66  
                             l19185 4C2A                               l19177 4BF4  
                             l19169 4BA4                               l19097 4A7C  
                             l17497 C1D0                               l17489 C1A4  
                             l23897 D6B6                               l16689 F026  
                             l24953 6E6C                               l24945 6E3C  
                             l24937 6DF4                               l24865 92F2  
                             l24849 91A2                               l24929 DF34  
                             l23993 511E                               l23977 5076  
                             l23969 501C                               l17681 AF04  
                             l17665 AE16                               l24881 EF4A  
                             l24873 FAE6                               l25497 5704  
                             l25489 56A2                               l26289 750A  
                             l19371 D026                               l19363 CFF6  
                             l19355 CFBC                               l19347 CF84  
                             l19339 CF52                               l19291 FC0A  
                             l19531 78BE                               l19523 7874  
                             l19515 781E                               l19507 77BA  
                             l19451 7632                               l19443 7604  
                             l19435 75D2                               l19419 7580  
                             l19427 75A8                               l19611 676E  
                             l19603 6736                               l19283 4F12  
                             l19275 4EF6                               l19259 4E50  
                             l19267 4EA6                               l19195 4C76  
                             l19187 4C38                               l19179 4C04  
                             l19099 4A8A                               l17499 C1F2  
                             l23899 D6D2                               l24955 6E78  
                             l24947 6E4C                               l24939 6E00  
                             l24867 931A                               l24859 928E  
                             l23987 50E2                               l23979 5090  
                             l17691 AF96                               l17675 AE9C  
                             l17667 AE1A                               l24891 EFC6  
                             l24883 EF66                               l24875 FB02  
                             l25499 5716                               l19365 D000  
                             l19357 CFC6                               l19349 CF9A  
                             l19381 DA2C                               l19293 FC1C  
                             l19533 78C2                               l19525 788A  
                             l19517 782C                               l19509 77E8  
                             l19453 7642                               l19461 7662  
                             l19445 7606                               l19437 75D4  
                             l19429 75B8                               l19701 D280  
                             l19621 67DC                               l19613 6788  
                             l19605 6742                               l19285 4F14  
                             l19277 4EFC                               l19269 4EB6  
                             l19189 4C3A                               l24893 F90E  
                             l24973 6F54                               l24965 6EB8  
                             l24957 6E92                               l24949 6E62  
                             l24869 936E                               l23997 5136  
                             l23989 50FC                               l17685 AF3A  
                             l17677 AEA0                               l17669 AE4C  
                             l17693 AF9A                               l24885 EF78  
                             l24877 FB1C                               l19359 CFE4  
                             l19367 D006                               l19391 DA6C  
                             l19383 DA30                               l19375 DA0C  
                             l19295 FC20                               l19535 78D0  
                             l19527 78A4                               l19519 7856  
                             l19471 76A0                               l19463 7672  
                             l19455 764A                               l19439 75E4  
                             l19447 760C                               l19711 D2EC  
                             l19703 D2AE                               l19631 6872  
                             l19623 6806                               l19615 6798  
                             l19607 6752                               l19551 65E2  
                             l19279 4EFE                               l19199 4C8A  
                             l24895 F938                               l24991 713C  
                             l24983 7068                               l24975 6F9A  
                             l24959 6EAE                               l23999 514A  
                             l17687 AF6C                               l17679 AED2  
                             l24879 EF40                               l19369 D016  
                             l19393 DA78                               l19385 DA3E  
                             l19377 DA0E                               l19289 FBFE  
                             l19537 78D6                               l19529 78BC  
                             l19481 76E6                               l19473 76B0  
                             l19465 7672                               l19457 764E  
                             l19449 761C                               l19713 D33C  
                             l19705 D2BE                               l19633 6880  
                             l19625 683C                               l19617 67B4  
                             l19609 675E                               l19561 661A  
                             l19553 65E4                               l19721 FE76  
                             l19297 FA00                               l24897 F946  
                             l24993 7168                               l24977 701E  
                             l24985 70E8                               l24969 6F02  
                             l17689 AF92                               l24889 EFAE  
                             l19395 DA86                               l19387 DA4E  
                             l19379 DA1C                               l19539 78D8  
                             l19491 7734                               l19483 76FA  
                             l19475 76C0                               l19715 D342  
                             l19707 D2CC                               l19643 6908  
                             l19651 6950                               l19635 6892  
                             l19627 684A                               l19619 67C0  
                             l19571 6646                               l19563 662A  
                             l19555 65F4                               l19547 65C8  
                             l19723 FE86                               l19811 A19C  
                             l19803 A104                               l19299 FA14  
                             l24987 70EE                               l19397 DAA4  
                             l19389 DA64                               l19493 7744  
                             l19485 7708                               l19477 76D0  
                             l19469 7686                               l19709 D2DE  
                             l19661 69B2                               l19653 696A  
                             l19645 6914                               l19637 68B0  
                             l19629 6868                               l19581 669C  
                             l19573 6656                               l19565 6630  
                             l19557 6604                               l19549 65D4  
                             l19741 D0A2                               l19733 D062  
                             l19821 A2B8                               l19805 A124  
                             l19901 0B60                               l24989 710A  
                             l19399 DAB4                               l19831 A702  
                             l19495 7756                               l19487 7714  
                             l19479 76D6                               l19671 69DC  
                             l19663 69C2                               l19655 697E  
                             l19647 6922                               l19639 68DE  
                             l19591 66D6                               l19583 66AC  
                             l19575 6666                               l19567 6636  
                             l19559 6614                               l19719 FE60  
                             l19751 D0D2                               l19743 D0B0  
                             l19735 D08C                               l19727 D038  
                             l19823 A2CC                               l19815 A20C  
                             l19807 A17A                               l19911 0BA8  
                             l19903 0B68                               l24999 7188  
                     ___fltol@sign1 050C                               l19841 A760  
                             l19833 A724                               l19497 776C  
                             l19489 7732                               l19681 E902  
                             l19665 69D0                               l19657 6998  
                             l19649 694C                               l19593 66EC  
                             l19577 6676                               l19569 6644  
                             l19761 D0FC                               l19753 D0DC  
                             l19737 D08E                               l19729 D04E  
                             l19825 A2F4                               l19817 A248  
                             l19809 A18E                               l19913 0BAE  
                             l19905 0B6C                     __end_of___aldiv D038  
                             l19771 EC3E                               l19851 A796  
                             l19843 A766                               l19835 A726  
                             l19499 7772                               l19691 E9A2  
                             l19683 E930                               l19667 69D2  
                             l19659 69A8                               l19595 66F8  
                             l19587 66C0                               l19579 667C  
                             l19675 FB72                               l19763 D10C  
                             l19739 D09E                               l19827 A304  
                             l19819 A27C                               l19931 0C3A  
                             l19915 0BB6                               l19907 0B92  
                             l19923 0BF8                               l19781 EC96  
                             l19773 EC4C                               l19861 A7F2  
                             l19853 A79E                               l19845 A776  
                             l19837 A734                               l19693 E9A8  
                             l19685 E940                               l19669 69D8  
                             l19597 6710                               l19589 66CC  
                             l19677 FB82                               l19765 D11C  
                             l19749 D0C8                               l19933 0C42  
                             l19925 0C1E                               l19941 0C5E  
                             l19917 0BCE                               l19909 0BA4  
                             l19783 EC9A                               l19775 EC60  
                             l19871 A88A                               l19855 A7A4  
                             l19863 A826                               l19847 A782  
                             l19839 A750                               l19687 E96E  
                             l19599 671C                               l19767 D12C  
                             l19759 D0F0                               l19791 FD7C  
                             l19951 0CF8                               l19943 0C78  
                             l19927 0C30                               l19919 0BD8  
                             l19785 ECC6                               l19777 EC6E  
                             l19865 A840                               l19873 A898  
                             l19857 A7E6                               l19849 A78A  
                             l19689 E97E                               l19697 D242  
                             l19793 FD84                               l19961 0DEE  
                             l19953 0D36                               l19929 0C34  
                             l19787 FED0                               l19779 EC82  
                             l19875 A8A8                               l19867 A856  
                             l19859 A7EC                               l19699 D270  
                             l19795 F864                               l19971 0E7E  
                             l19963 0DF6                               l19955 0D68  
                             l19947 0CBE                               l19891 0B22  
                             l19883 0AD8                               l19789 FEDE  
                             l19877 A8AE                               l19869 A870  
                             l19797 F872                               l19981 0EB4  
                             l19973 0E8A                               l19957 0DA6  
                             l19949 0CC4                               l19893 0B2C  
                             l19885 0AEC                       ?_bus_hold_req 0501  
                             l19879 A8BE                               l19799 F886  
                             l19991 0EFC                               l19983 0EC2  
                             l19975 0E94                               l19959 0DBA  
                             l19967 0E36                               l19895 0B34  
                             l19887 0AFA                               l19993 0F0C  
                             l19985 0EDA                               l19977 0E9C  
                             l19969 0E70                               l19897 0B44  
                             l19889 0AFE                               l19995 0F20  
                             l19987 0EEC                               l19979 0EA2  
                             l19899 0B54                               l19997 0F84  
                             l19989 0EF4                               l19999 0FDC  
                             ?_labs 0504                     __end_of___almod DAF6  
                   __end_of___fladd 4F26                               ?_main 0501  
                             ?_dtoa 051E                               _G2POL 06B9  
                             _G3POL 06BA                     __end_of___fldiv 78E4  
                   __end_of___flneg FE98                               STR_10 FD92  
                             STR_11 F49F                               STR_20 FF97  
                             STR_12 F967                               STR_21 FE66  
                             STR_13 FF9D                               STR_30 FF1E  
                             STR_22 FF27                               STR_14 F4CB  
                             STR_23 FF97                               STR_31 FFE9  
                             STR_15 F92E                               STR_24 FE66  
                             STR_40 FF91                               STR_32 FFE5  
                             STR_33 FFF9                               STR_25 FB36  
                             STR_41 FAD4                               STR_17 F473  
                             STR_26 FB64                               STR_42 FA3C  
                             STR_18 F35A                               STR_50 FECD  
                             STR_43 FFD0                               STR_19 FF68  
                             STR_27 FE25                               STR_35 FC30  
                             STR_51 FED8                               STR_28 FE25  
                             STR_44 FFCB                               STR_36 FF91  
                             STR_60 FF7E                               STR_52 FEE3  
                             STR_29 FF1E                               STR_45 FBAA  
                             STR_37 F877                               STR_61 FFBC  
                             STR_53 FF50                               STR_38 FC70  
                             STR_70 FBEE                               STR_46 F78C  
                             STR_62 FFDD                               STR_54 FF58  
                             STR_71 FB93                               STR_39 F8D5  
                             STR_63 FF60                               STR_55 FFF3  
                             STR_47 FF48                               STR_72 FB4E  
                             STR_80 FB06                               STR_64 FF8B  
                             STR_56 FFE1                               STR_48 F522  
                             STR_73 FE6C                               STR_81 FAA2  
                             STR_65 FFC6                               STR_57 FFF0  
                             STR_49 FEC2                               STR_82 FFF6  
                             STR_74 FE5E                               STR_90 FE42  
                             STR_66 FF85                               STR_58 FFB7  
                             STR_75 FFA8                               STR_91 FCE9  
                             STR_83 F61A                               STR_67 FFC1  
                             STR_59 FF77                               STR_92 FB79  
                             STR_84 FCFC                               STR_76 F9EE  
                             STR_68 FFFC                               STR_85 FFB2  
                             STR_93 FF0C                               STR_77 F5F2  
                             STR_69 FB64                               STR_94 FEEE  
                             STR_86 F9B9                               STR_78 F722  
                             STR_79 FC5D                               STR_87 FEA0  
                             STR_95 FE94                               STR_96 FE07  
                             STR_88 FABB                     __end_of___flmul 69EE  
                             STR_97 FC9A                               STR_89 FB65  
                             STR_98 FC9A                               STR_99 FF0C  
                   __end_of_dbc_2nd DD9E                 SDCard_read512@retry 05F0  
                   __end_of___flsub FBB8                     __end_of___fltol D13E  
                   __end_of_dbc_1st ED78                               ?_stoa 050E  
                   __end_of___lldiv EBA0                         ?_SDCard_crc 0504  
                             u20300 CD5C                               u20150 F992  
                             u20310 CD6C                               u20311 CD68  
                             ?_xtoa 051E                               u30000 B3C0  
                             u20160 F9A2                               u20320 CD8C  
                             u20161 F99E                               u20321 CD88  
                             u30010 B3D2                               u20330 CD9E  
                             u30011 B3CE                               u20331 CD9A  
                             u20307 CD52                               u30100 A608  
                             u30020 B3F4                               u20340 CDE2  
                             u30101 A604                               u20157 F988  
                             u20341 CDDE                               u30110 A61A  
                             u30030 B406                               u20350 CE04  
                             u30111 A616                               u30031 B402  
                             u30007 B3B6                               u30200 D404  
                             u31000 9DF4                               u30120 A668  
                             u30040 B42A                               u30201 D400  
                             u31001 9DF0                               u30121 A664  
                             u30041 B426                               u20345 CDD2  
                             u30210 D416                               u30130 A6CC  
                             u30050 B44C                               u31010 25CA  
                             u20290 CD20                               _LATA0 25F0  
                             u30211 D412                               u30131 A6C8  
                             u30027 B3EA                               u31011 25C6  
                             u20347 CDC8                               u20291 CD1C  
                             _LATA1 25F1                               u30220 EB22  
                             u30140 A6E2                               u30060 B474  
                             u30300 9BBE                               u31100 26D0  
                             u31020 2600                               u20700 C71A  
                             _LATA2 25F2                               u30221 EB1E  
                             u30141 A6DE                               u30061 B470  
                             u30301 9BBA                               u31101 26CC  
                             u31021 25FC                               u20357 CDFA  
                             u20701 C716                               _LATA3 25F3  
                             u30230 EB44                               u30150 A6FC  
                             u30070 A54A                               u30310 9BDE  
                             u31110 26DE                               u31030 2630  
                             u20710 C72A                               _LATA4 25F4  
                             u30231 EB40                               u30151 A6F8  
                             u30071 A546                               u30311 9BDA  
                             u31111 26DA                               u31031 262C  
                             u20711 C726                               u30160 D35E  
                             u30240 EB6C                               u30400 8936  
                             u30080 A560                               u30320 9C24  
                             u31200 2940                               u31120 27DA  
                             u31040 263E                               u32000 17E4  
                             u20720 C756                               _LATA6 25F6  
                             u30161 D35A                               u30241 EB68  
                             u30401 8932                               u30081 A55C  
                             u30057 B442                               u30321 9C20  
                             u31201 293C                               u31121 27D6  
                             u31041 263A                               u32001 17E0  
                             u20721 C752                               u30170 D378  
                             u30410 898C                               u30090 A572  
                             u30330 9C76                               u30250 9AD4  
                             u31210 2A46                               u31130 2836  
                             u31050 2658                               u32010 1816  
                             u20730 C766                               _LATE0 2610  
                             u30171 D374                               u30091 A56E  
                             u30331 9C72                               u30251 9AD0  
                             u31211 2A42                               u31131 2832  
                             u31051 2654                               u32011 1812  
                             u20731 C762                               _LATE1 2611  
                             u23300 AAC6                               u30180 D3A0  
                             u30500 8ACA                               u30420 899C  
                             u30340 9CD6                               u30260 9AFE  
                             u31300 2C56                               u31220 2A68  
                             u31140 289E                               u31060 2668  
                             u32100 1AC6                               u32020 186A  
                             _LATE2 2612                               u23301 AAC2  
                             u30181 D39C                               u30501 8AC6  
                             u30421 8998                               u30341 9CD2  
                             u30261 9AFA                               u31301 2C52  
                             u31221 2A64                               u31141 289A  
                             u31061 2664                               u32101 1AC2  
                             u32021 1866                               u23310 AB22  
                             u30190 D3D8                               u30350 DC16  
                             u30510 8AD8                               u30430 89BE  
                             u30270 9B1A                               u31310 2C7E  
                             u31150 28AC                               u31070 267A  
                             u32030 18A0                               u21550 EFEC  
                             u20750 C7D0                               u23311 AB1E  
                             u30191 D3D4                               u30351 DC12  
                             u30511 8AD4                               u30271 9B16  
                             u31151 28A8                               u31071 2676  
                             u32031 189C                               u21551 EFE8  
                             u20751 C7CC                               u23320 AB78  
                             u25000 E30C                               u31400 2EB8  
                             u32200 CCE4                               u30360 DC52  
                             u30520 8B00                               u30440 89CE  
                             u30600 00D4                               u30280 9B5A  
                             u31320 2D0A                               u31240 2B56  
                             u31160 28C2                               u31080 26A6  
                             u32040 18F2                               u33000 DDB0  
                             u21560 EFFE                               u20760 C7F6  
                             u23321 AB74                               u25001 E308  
                             u32201 CCE0                               u30361 DC4E  
                             u30521 8AFC                               u30441 89CA  
                             u30417 8982                               u30601 00D0  
                             u30281 9B56                               u31321 2D06  
                             u31241 2B52                               u31161 28BE  
                             u31081 26A2                               u32041 18EE  
                             u33001 DDAC                               u21561 EFFA  
                             u20745 C790                               u23330 ABC2  
                             u25010 4A8A                               u31410 2EFC  
                             u30530 8B16                               u30450 8A06  
                             u30370 88F4                               u30610 010E  
                             u30290 9BA4                               u31330 2D26  
                             u31250 2B76                               u31170 28D0  
                             u31090 26BC                               u32210 E442  
                             u32130 1B78                               u32050 196A  
                             u33010 DDF6                               u21570 F010  
                             u20770 C806                               u20690 C704  
                             u23331 ABBE                               u25011 4A86  
                             u31411 2EF8                               u30531 8B12  
                             u30611 010A                               u30291 9BA0  
                             u31331 2D22                               u31315 2C74  
                             u31251 2B72                               u31235 2AB2  
                             u31171 28CC                               u31091 26B8  
                             u32211 E43E                               u32131 1B74  
                             u32115 1AF0                               u32051 1966  
                             u33011 DDF2                               u21571 F00C  
                             u20771 C802                               _U3BRG 02D4  
                             u23340 ABE0                               u25100 4BD8  
                             u25020 4A9C                               u31500 315E  
                             u31420 2F1E                               u31340 2D74  
                             u30540 8B34                               u30460 8A1A  
                             u30380 8904                               u30700 0320  
                             u30620 0124                               u31260 2B9A  
                             u31180 28E4                               u32220 E490  
                             u32300 BFE6                               u32140 1BAE  
                             u33100 EBD0                               u33020 DE40  
                             u21580 F04C                               u22700 AE4C  
                             u23341 ABDC                               u25101 4BD4  
                             u25021 4A98                               u31501 315A  
                             u31421 2F1A                               u31405 2EAE  
                             u31341 2D70                               u30541 8B30  
                             u30461 8A16                               u30437 89B4  
                             u30381 8900                               u30701 031C  
                             u30621 0120                               u31261 2B96  
                             u31181 28E0                               u32221 E48C  
                             u32301 BFE2                               u32141 1BAA  
                             u32125 1B30                               u33101 EBCC  
                             u33021 DE3C                               u21581 F048  
                             u22701 AE48                               u23350 ABF0  
                             u25110 4BF0                               u25030 4AAC  
                             u31510 31BC                               u31430 2F92  
                             u31350 2D94                               u30470 8A76  
                             u30390 8926                               u30710 0372  
                             u30630 0132                               u30550 0030  
                             u31270 2BB8                               u31190 28F2  
                             u32230 E4D2                               u32310 C03E  
                             u32150 1BF4                               u32070 19C0  
                             u33110 EBF0                               u33030 DE62  
                             u22710 AE88                               u23351 ABEC  
                             u25111 4BEA                               u25031 4AA8  
                             u31511 31B8                               u31431 2F8E  
                             u31351 2D90                               u30471 8A72  
                             u30711 036E                               u30631 012E  
                             u30551 002C                               u31271 2BB4  
                             u31191 28EE                               u32231 E4CE  
                             u32311 C03A                               u32151 1BF0  
                             u32071 19BC                               u33111 EBEC  
                             u20767 C7EC                               u23360 ABFE  
                             u26000 696A                               u25200 4CD4  
                             u25120 4BF2                               u25040 4AEC  
                             u31440 2FC4                               u31360 2DB4  
                             u32240 D16A                               u31600 F800  
                             u30480 8AAA                               u30800 059C  
                             u30720 03CA                               u30640 0168  
                             u30560 0062                               u31280 2BE4  
                             u32400 A9F2                               u32320 C07C  
                             u32160 1C6E                               u32080 19EE  
                             u33120 EC10                               u33040 DE72  
                             u33200 D716                               u21920 FAB0  
                             u34000 5950                               u22800 AF6C  
                             u22720 AE98                               u23361 ABFA  
                             u26001 6966                               u25201 4CD0  
                             u25041 4AE8                               u31441 2FC0  
                             u31361 2DB0                               u32241 D166  
                             u31601 F7FC                               u30481 8AA6  
                             u30457 89FC                               u30377 88EA  
                             u30801 0598                               u30721 03C6  
                             u30641 0164                               u30561 005E  
                             u31281 2BE0                               u32401 A9EE  
                             u32321 C078                               u32161 1C6A  
                             u32081 19EA                               u32065 199A  
                             u33121 EC0C                               u33041 DE6E  
                             u33201 D712                               u21921 FAAC  
                             u34001 594C                               u20697 C6FA  
                             u22801 AF68                               u22721 AE94  
                             u23370 AC38                               u23290 AAB8  
                             u26010 6998                               u25210 4D0C  
                             u25130 4C1A                               u25050 4B02  
                             u31450 3046                               u31370 2E34  
                             u31610 1DDE                               u32250 D1AE  
                             u30490 8ABC                               u30810 05B6  
                             u30730 0402                               u30650 0184  
                             u30570 0092                               u31290 2C12  
                             u32410 AA44                               u32330 C0D4  
                             u32170 1D44                               u32090 1A50  
                             u33130 EC32                               u33050 F3F8  
                             u33210 D85C                               u34010 597A  
                             u22810 AF92                               u22730 AEC2  
                             u23371 AC34                               u23291 AAB4  
                             u26011 6994                               u25211 4D08  
                             u25131 4C16                               u25051 4AFE  
                             u31451 3042                               u31371 2E30  
                             u31611 1DDA                               u30491 8AB8  
                             u30811 05B2                               u30731 03FE  
                             u30651 0180                               u30571 008E  
                             u31291 2C0E                               u32411 AA40  
                             u32331 C0D0                               u32171 1D40  
                             u32091 1A4C                               u33131 EC2E  
                             u33051 F3F4                               u33211 D858  
                             u34011 5976                               u23380 AC46  
                             u26100 D33C                               u26020 69D0  
                             u25300 4E26                               u25220 4D52  
                             u25140 4C38                               u25060 4B14  
                             u31540 325E                               u31380 2E4E  
                             u31700 20CA                               u31620 1DFE  
                             u32180 CC24                               u32260 D1D8  
                             u30900 093C                               u30820 0686  
                             u30740 0450                               u30660 01CA  
                             u30580 00B6                               u32420 AA78  
                             u32340 C0F8                               u32500 BA0E  
                             u33060 F418                               u33220 D88C  
                             u34100 5A82                               u34020 5990  
                             u33300 5072                               u22820 AFB6  
                             u22740 AED2                               u33140 CAD8  
                             u23381 AC42                               u26101 D338  
                             u26021 69CC                               u25301 4E22  
                             u25221 4D4E                               u25141 4C34  
                             u25061 4B10                               u31541 325A  
                             u31525 31DA                               u31381 2E4A  
                             u31701 20C6                               u31621 1DFA  
                             u32181 CC20                               u32261 D1D4  
                             u30397 891C                               u30901 0938  
                             u30821 0682                               u30741 044C  
                             u30661 01C6                               u30581 00B2  
                             u32421 AA74                               u32341 C0F4  
                             u32501 BA0A                               u33061 F414  
                             u33037 DE58                               u33221 D888  
                             u34101 5A7E                               u34021 598C  
                             u33301 506E                               u22821 AFB2  
                             u22741 AECE                               u22717 AE7E  
                             u33141 CAD4                               u26030 E930  
                             u26110 FE76                               u25310 4E3C  
                             u25230 4D88                               u25150 4C58  
                             u25070 4B24                               u31550 3278  
                             u31470 309C                               u31390 2E8C  
                             u31710 20FC                               u31630 1E2E  
                             u32270 D214                               u30910 095E  
                             u30830 06A8                               u30670 0204  
                             u30590 00C6                               u32430 AA8A  
                             u32350 C11A                               u33070 F438  
                             u33230 D89A                               u34110 5A9A  
                             u34030 59B2                               u33310 50A0  
                             u22750 AEF4                               u33150 CAF6  
                             u26031 E92C                               u26111 FE72  
                             u25311 4E38                               u25231 4D84  
                             u25151 4C54                               u25071 4B20  
                             u31551 3274                               u31535 3214  
                             u31471 3098                               u31391 2E88  
                             u31711 20F8                               u31631 1E2A  
                             u30911 095A                               u30831 06A4  
                             u30671 0200                               u30591 00C2  
                             u32431 AA86                               u32351 C116  
                             u33071 F434                               u33231 D896  
                             u34111 5A96                               u34031 59AE  
                             u33311 509C                               u33151 CAF2  
                             u25400 FC40                               u26200 EC6E  
                             u26040 E96E                               u25320 4E50  
                             u25240 4D98                               u25160 4C66  
                             u25080 4B5E                               u26120 D04E  
                             u27000 BC40                               u31560 32CA  
                             u31480 30CA                               u31800 2380  
                             u31720 2160                               u31640 1E48  
                             u32280 D23E                               u32600 C632  
                             u30920 0994                               u30840 06CC  
                             u30760 04C2                               u30680 027A  
                             u32360 A8F6                               u32440 F560  
                             u32520 BA50                               u33080 F454  
                             u33240 D8CC                               u35000 CEE8  
                             u34200 5BE2                               u34120 5ABA  
                             u34040 59C6                               u33400 527E  
                             u33320 50DE                               u22760 AF04  
                             u33160 F33E                               u25401 FC3C  
                             u26201 EC6A                               u26041 E96A  
                             u25321 4E4C                               u25241 4D94  
                             u25161 4C62                               u25081 4B5A  
                             u26121 D04A                               u27001 BC3C  
                             u31561 32C6                               u31481 30C6  
                             u31465 3076                               u31801 237C  
                             u31721 215C                               u31641 1E44  
                             u32281 D23A                               u32257 D1A4  
                             u32601 C62E                               u30921 0990  
                             u30841 06C8                               u30761 04BE  
                             u30681 0276                               u32361 A8F2  
                             u32441 F55C                               u32521 BA4C  
                             u33081 F450                               u33241 D8C8  
                             u35001 CEE4                               u34201 5BDE  
                             u34121 5AB6                               u34041 59C2  
                             u33321 50DA                               u22817 AF86  
                             u22761 AF00                               u22737 AEB8  
                             u33161 F33A                               u26210 ECB8  
                             u26050 E9A2                               u25330 4E6A  
                             u25250 4DC4                               u25170 4C76  
                             u25090 4B6C                               u26130 D082  
                             u25410 FA4E                               u27010 BC5A  
                             u31570 3338                               u31490 312C  
                             u31810 23B4                               u31730 21AA  
                             u31650 1EC2                               u30930 09CC  
                             u30770 052A                               u30690 0298  
                             u32370 A920                               u32450 F580  
                             u32290 BFBC                               u32530 BAA8  
                             u32514 BA28                               u33090 EBB6  
                             u33250 D918                               u33170 D66E  
                             u35010 CF00                               u34210 5C3E  
                             u34130 5AD4                               u34050 59D8  
                             u33410 52A6                               u33330 510C  
                             u22770 AF26                               u22690 AE3C  
                             u26211 ECB4                               u26051 E99E  
                             u25331 4E66                               u25251 4DC0  
                             u25171 4C72                               u25091 4B68  
                             u25411 FA4A                               u27011 BC56  
                             u31571 3334                               u31491 3128  
                             u31731 21A6                               u31651 1EBE  
                             u32195 CCAC                               u30931 09C8  
                             u30771 0526                               u30755 046C  
                             u30691 0294                               u32371 A91C  
                             u32451 F57C                               u32291 BFB8  
                             u32531 BAA4                               u32515 BA22  
                             u33091 EBB2                               u33251 D914  
                             u33171 D66A                               u35011 CEFC  
                             u34211 5C3A                               u34131 5AD0  
                             u34051 59D4                               u33411 52A2  
                             u33331 5108                               u27100 8078  
                             u25500 CF60                               u26220 ECC6  
                             u26060 D270                               u25340 4EA4  
                             u25260 4DD4                               u25180 4CA8  
                             u26140 D0B0                               u25420 D584  
                             u26300 A208                               u27020 BC74  
                             u31580 33B2                               u31820 2400  
                             u31740 21EE                               u32620 C674  
                             u30940 0A02                               u30860 075E  
                             u30780 0554                               u32380 A976  
                             u32460 EE32                               u31900 1596  
                             u32540 BABC                               u33180 D6A0  
                             u35020 CF10                               u34220 5C4E  
                             u34140 5AEC                               u34060 59EA  
                             u33420 52B6                               u33340 511E  
                             u33260 4F54                               u33500 BE3C  
                             u22780 AF36                               u34300 9466  
                             u35100 976A                               u27101 8074  
                             u25501 CF5C                               u26221 ECC2  
                             u26061 D26C                               u25341 4EA0  
                             u25261 4DD0                               u25181 4CA4  
                             u26141 D0AC                               u26301 A204  
                             u27021 BC70                               u31581 33AE  
                             u31821 23FC                               u31741 21EA  
                             u32277 D20A                               u32621 C670  
                             u30941 09FE                               u30861 075A  
                             u30781 0550                               u32381 A972  
                             u32461 EE2E                               u31901 1592  
                             u32541 BAB8                               u33181 D69C  
                             u35021 CF0C                               u34221 5C4A  
                             u34141 5AE8                               u34061 59E6  
                             u33421 52B2                               u33341 511A  
                             u33501 BE38                               u22781 AF32  
                             u22757 AEEA                               u34301 9462  
                             u35101 9766                               u27110 8086  
                             u25510 CF9A                               u26230 FEDE  
                             u26070 D2AE                               u25350 4EB6  
                             u25270 4DF0                               u25190 4CB6  
                             u26150 D0C4                               u25430 D5A2  
                             u26310 A22C                               u27030 BC82  
                             u31830 2472                               u31750 224C  
                             u31670 1F1A                               u32614 C64C  
                             u32630 F474                               u31590 F7D6  
                             u30950 0A38                               u30870 07C6  
                             u30790 0578                               u32390 A9B4  
                             u32470 EEA0                               u32710 AD9E  
                             u31910 15B6                               u32550 BAFC  
                             u33190 D6D2                               u34230 5C6C  
                             u34150 5AFA                               u34070 5A1E  
                             u33430 52D6                               u33350 5132  
                             u33270 4F82                               u33510 BE6E  
                             u22790 AF5C                               u34310 9474  
                             u35110 9784                               u35030 963C  
                             u27111 8082                               u25511 CF96  
                             u26231 FEDA                               u26071 D2AA  
                             u25351 4EB2                               u25271 4DEC  
                             u25191 4CB2                               u26151 D0C0  
                             u26135 D078                               u25431 D59E  
                             u27031 BC7E                               u31831 246E  
                             u31815 23AA                               u31751 2248  
                             u31671 1F16                               u32615 C646  
                             u32631 F470                               u31591 F7D2  
                             u30951 0A34                               u30871 07C2  
                             u30855 071C                               u30791 0574  
                             u32391 A9B0                               u32471 EE9C  
                             u32711 AD9A                               u31911 15B2  
                             u32551 BAF8                               u33191 D6CE  
                             u34231 5C68                               u34151 5AF6  
                             u34071 5A1A                               u33431 52D2  
                             u33407 5272                               u33351 512E  
                             u33271 4F7E                               u33511 BE6A  
                             u34311 9470                               u35111 9780  
                             u35031 9638                               u28000 F644  
                             u27200 81E2                               u27120 80AC  
                             u25520 CFBC                               u25600 DAD4  
                             u26400 A760                               u26080 D2CC  
                             u25360 4EC6                               u25280 4E00  
                             u26160 D0EC                               u25440 D5CA  
                             u26320 A248                               u26240 FDB6  
                             u27040 E058                               u31840 24A2  
                             u31760 227A                               u31680 1FA4  
                             u32560 C59A                               u32640 F49E  
                             u30960 9D04                               u30880 08A8  
                             u31920 161A                               u32480 B9BE  
                             u32800 8D5C                               u32720 8BD8  
                             u34240 5CB2                               u34160 5B56  
                             u34080 5A36                               u33440 5314  
                             u33360 518C                               u33280 4FE4  
                             u33520 BEA6                               u33600 DB32  
                             u34320 9486                               u35120 97CA  
                             u35040 967C                               u35200 7D6C  
                             u28001 F640                               u27201 81DE  
                             u27121 80A8                               u25521 CFB8  
                             u25601 DAD0                               u26401 A75C  
                             u26081 D2C8                               u25361 4EC2  
                             u25281 4DFC                               u26161 D0E8  
                             u25441 D5C6                               u25425 D57A  
                             u26321 A244                               u26241 FDB2  
                             u27041 E054                               u31841 249E  
                             u31761 2276                               u31681 1FA0  
                             u31665 1EE4                               u32561 C596  
                             u32641 F49A                               u30961 9D00  
                             u31921 1616                               u32481 B9BA  
                             u32801 8D58                               u32721 8BD4  
                             u34241 5CAE                               u34161 5B52  
                             u34081 5A32                               u33361 5188  
                             u33281 4FE0                               u33521 BEA2  
                             u33601 DB2E                               u22777 AF1C  
                             u22697 AE32                               u34321 9482  
                             u35121 97C6                               u35201 7D68  
                             u28010 F67E                               u27210 8204  
                             u27130 80CE                               u25530 CFE4  
                             u26410 A776                               u25610 756E  
                             u26090 D2EC                               u25370 4EE6  
                             u25290 4E10                               u26170 D10C  
                             u25450 D5F4                               u26330 A29C  
                             u26250 F872                               u27050 E0EA  
                             u31850 24BC                               u31770 22A4  
                             u31690 2086                               u32570 C5DC  
                             u32650 F4C8                               u30970 9D1E  
                             u30890 08D8                               u31930 1648  
                             u32490 B9FE                               u34250 5CD4  
                             u34170 5B6E                               u34090 5A66  
                             u33450 5326                               u33370 51BC  
                             u33290 5018                               u33530 BEC0  
                             u33610 DB80                               u34330 94FC  
                             u35130 9804                               u35050 968C  
                             u35210 7DE4                               u28011 F67A  
                             u27211 8200                               u27131 80CA  
                             u25531 CFE0                               u26411 A772  
                             u25611 756A                               u26091 D2E8  
                             u25371 4EE2                               u25291 4E0C  
                             u26171 D108                               u25451 D5F0  
                             u26315 A222                               u26251 F86E  
                             u27051 E0E6                               u31851 24B8  
                             u31771 22A0                               u31691 2082  
                             u32571 C5D8                               u32651 F4C4  
                             u30971 9D1A                               u30891 08D4  
                             u31931 1644                               u32491 B9FA  
                             u34251 5CD0                               u34171 5B6A  
                             u34091 5A62                               u33451 5322  
                             u33371 51B8                               u33291 5014  
                             u33267 4F48                               u33531 BEBC  
                             u33611 DB7C                               u34331 94F8  
                             u35131 9800                               u35051 9688  
                             u35211 7DE0                               u27220 8226  
                             u27140 80F0                               u27060 7FD8  
                             u25540 D016                               u26420 A840  
                             u25700 7708                               u25620 7580  
                             u25380 4EF6                               u26180 D11C  
                             u26340 A2B8                               u26260 A14C  
                             u26500 0B54                               u27300 34EA  
                             u28100 6BD0                               u31860 250E  
                             u31780 22F2                               u32580 C5F0  
                             u28020 FE5E                               u30980 9D38  
                             u32708 AD6A                               u31940 1686  
                             u32820 8DB6                               u32740 8C5E  
                             u34260 5CE2                               u34180 5BA8  
                             u32900 B26E                               u33460 535A  
                             u33380 522C                               u33540 BEDA  
                             u33620 DB92                               u34340 9520  
                             u35140 9832                               u35060 96C4  
                             u35300 7F52                               u35220 7DFA  
                             u27221 8222                               u27141 80EC  
                             u27061 7FD4                               u25541 D012  
                             u26421 A83C                               u25701 7704  
                             u25621 757C                               u25381 4EF2  
                             u26181 D118                               u26341 A2B4  
                             u26501 0B50                               u27301 34E6  
                             u28101 6BCC                               u31861 250A  
                             u31781 22EE                               u32581 C5EC  
                             u28021 FE5A                               u30981 9D34  
                             u30885 089E                               u32709 AD7E  
                             u31941 1682                               u32821 8DB2  
                             u32741 8C5A                               u34261 5CDE  
                             u34181 5BA4                               u33541 BED6  
                             u33621 DB8E                               u22797 AF52  
                             u34341 951C                               u35141 982E  
                             u35061 96C0                               u35301 7F4E  
                             u35221 7DF6                               u28030 E142  
                             u27230 8248                               u27150 8112  
                             u27070 8004                               u25550 DA1C  
                             u26190 EC4C                               u26430 A856  
                             u25710 7732                               u25630 7590  
                             u25390 4F12                               u25470 D62E  
                             u26350 A2F4                               u26270 A17A  
                             u26510 0B92                               u27310 3516  
                             u31870 257C                               u31790 233C  
                             u32590 C622                               u30990 9D8A  
                             u32670 ACB6                               u31950 16B2  
                             u32750 8C70                               u32830 FFF2  
                             u34190 5BD0                               u34270 FB4C  
                             u32910 B28A                               u33470 5384  
                             u33390 5240                               u33550 BF30  
                             u33630 DBD2                               u34350 9530  
                             u35070 9726                               u35310 7F64  
                             u35230 7E0C                               u35150 7C90  
                             u28031 E13E                               u27231 8244  
                             u27151 810E                               u27071 8000  
                             u25551 DA18                               u26191 EC48  
                             u26431 A852                               u25711 772E  
                             u25631 758C                               u25391 4F0E  
                             u25471 D628                               u26351 A2F0  
                             u26335 A292                               u26271 A176  
                             u26511 0B8E                               u27311 3512  
                             u31871 2578                               u31791 2338  
                             u32591 C61E                               u30991 9D86  
                             u32671 ACB2                               u32751 8C6C  
                             u32831 FFEE                               u34191 5BCC  
                             u34271 FB48                               u32911 B286  
                             u33447 5308                               u33391 523C  
                             u33551 BF2C                               u33631 DBCE  
                             u34351 952C                               u35071 9722  
                             u35047 9672                               u35311 7F60  
                             u35231 7E08                               u27240 826A  
                             u27160 8134                               u27080 802E  
                             u25560 DA3E                               u26440 A870  
                             u26360 A712                               u25800 782C  
                             u25720 7756                               u25640 75D2  
                             u25480 D630                               u26280 A19C  
                             u26600 0E68                               u26520 0BA4  
                             u27400 38F2                               u27320 3548  
                             u28120 6C7E                               u28040 6A1A  
                             u31880 F1CE                               u29000 6300  
                             u32680 ACC8                               u31960 16F6  
                             u32760 8CEC                               u33800 5DD0  
                             u33640 D976                               u34280 FB68  
                             u32920 B2B6                               u32840 B1B6  
                             u33480 53AC                               u33560 BF82  
                             u34360 9572                               u35080 9736  
                             u35400 54B8                               u35320 7FA4  
                             u35240 7E1C                               u35160 7CA0  
                             u27241 8266                               u27161 8130  
                             u27081 802A                               u25561 DA3A  
                             u26441 A86C                               u26361 A70C  
                             u25801 7828                               u25721 7752  
                             u25641 75CE                               u25465 D606  
                             u26281 A198                               u26265 A142  
                             u26601 0E64                               u26521 0BA0  
                             u27401 38EE                               u27321 3544  
                             u28121 6C7A                               u28041 6A16  
                             u31881 F1CA                               u29001 62FC  
                             u32681 ACC4                               u31961 16F2  
                             u32761 8CE8                               u33801 5DCC  
                             u33641 D972                               u34281 FB64  
                             u32921 B2B2                               u32841 B1B2  
                             u33481 53A8                               u33561 BF7E  
                             u34361 956E                               u35081 9732  
                             u35401 54B4                               u35321 7FA0  
                             u35241 7E18                               u35161 7C9C  
                             u27250 828C                               u27170 8156  
                             u27090 804E                               u25490 CF3E  
                             u25570 DA64                               u26450 A88A  
                             u26370 A714                               u25810 7874  
                             u25730 776C                               u25650 75E4  
                             u26610 0E7E                               u26530 0C1E  
                             u27410 3916                               u27330 35FE  
                             u28130 6D10                               u28050 6A44  
                             u28210 427C                               u29010 6358  
                             u32690 AD44                               u31970 1718  
                             u31890 1576                               u32818 8D82  
                             u32770 8D06                               u32738 8C26  
                             u33810 5DE6                               u33650 D9B0  
                             u32930 B2DC                               u32850 B1EA  
                             u33490 53D2                               u33570 BF96  
                             u34370 958C                               u34290 9422  
                             u35090 9746                               u35330 AFEA  
                             u35410 5524                               u35250 7E2E  
                             u35170 7CEE                               u27251 8288  
                             u27171 8152                               u27091 804A  
                             u25491 CF3A                               u25571 DA60  
                             u26451 A886                               u25811 7870  
                             u25731 7768                               u25651 75E0  
                             u26611 0E7A                               u26531 0C1A  
                             u27411 3912                               u27331 35FA  
                             u28115 6BEC                               u28051 6A40  
                             u28211 4278                               u32691 AD40  
                             u31971 1714                               u31955 16A8  
                             u31891 1572                               u32819 8D96  
                             u32771 8D02                               u32739 8C3A  
                             u33811 5DE2                               u33651 D9AC  
                             u32931 B2D8                               u32851 B1E6  
                             u33467 5350                               u33387 5220  
                             u33571 BF92                               u34371 9588  
                             u34291 941E                               u35091 9742  
                             u35331 AFE6                               u35411 5520  
                             u35251 7E2A                               u35171 7CEA  
                             u27500 EF3A                               u27260 82AE  
                             u27180 8178                               u25580 DA86  
                             u26460 A898                               u26380 A724  
                             u25820 78A4                               u25740 778A  
                             u25660 75F4                               u25900 669C  
                             u26700 11DA                               u26620 0EB4  
                             u26540 0C30                               u27420 39C8  
                             u27340 361E                               u28140 6D42  
                             u28220 42B2                               u28300 3BD8  
                             u29100 6518                               u29020 638C  
                             u32668 AC7E                               u31980 174A  
                             u32780 8D26                               u33900 6128  
                             u33820 5DFC                               u33660 D9D8  
                             u33580 FDE2                               u32940 B2EC  
                             u32860 B232                               u34380 959E  
                             u34700 EF66                               u35340 EDAE  
                             u35420 5570                               u35260 7E6A  
                             u35180 7D1C                               u27501 EF36  
                             u27261 82AA                               u27181 8174  
                             u25581 DA82                               u26461 A894  
                             u26381 A720                               u25821 78A0  
                             u25741 7786                               u25661 75F0  
                             u25901 6698                               u26701 11D6  
                             u26621 0EB0                               u26541 0C2C  
                             u27421 39C4                               u27341 361A  
                             u28141 6D3E                               u28221 42AE  
                             u28205 4240                               u28301 3BD4  
                             u29101 6514                               u29021 6388  
                             u32669 AC92                               u31981 1746  
                             u32781 8D22                               u33901 6124  
                             u33821 5DF8                               u33661 D9D4  
                             u33581 FDDE                               u32941 B2E8  
                             u32861 B22E                               u33477 5378  
                             u34381 959A                               u34701 EF62  
                             u35341 EDAA                               u35421 556C  
                             u35261 7E66                               u35181 7D18  
                             u35157 7C86                               u27430 F8DE  
                             u27270 82D2                               u27190 81C0  
                             u25590 DAA4                               u26470 A8A8  
                             u26390 A734                               u25830 78D0  
                             u25750 77AA                               u25670 7632  
                             u25910 66AC                               u26710 1286  
                             u26630 0EC2                               u26550 0CAA  
                             u27350 36FE                               u27510 F858  
                             u28070 6AE6                               u28230 430E  
                             u28150 40C8                               u28310 3C08  
                             u29030 63E0                               u29110 F10C  
                             u31990 17CA                               u32790 8D40  
                             u33910 6138                               u33830 5E4A  
                             u33670 D9F6                               u32870 B244  
                             u32950 A346                               u33590 DB20  
                             u34390 95DA                               u34710 EFAA  
                             u35350 EA6C                               u35430 55F6  
                             u35270 7EA4                               u35190 7D3E  
                             u27431 F8DA                               u27271 82CE  
                             u27191 81BC                               u25591 DAA0  
                             u26471 A8A4                               u26391 A730  
                             u25831 78CC                               u25751 77A6  
                             u25671 762E                               u25911 66A8  
                             u26295 A1B0                               u26711 1282  
                             u26631 0EBE                               u26551 0CA6  
                             u27351 36FA                               u27511 F854  
                             u28135 6D06                               u28071 6AE2  
                             u28151 40C4                               u28311 3C04  
                             u29031 63DC                               u29015 634E  
                             u31991 17C6                               u32791 8D3C  
                             u33911 6134                               u33831 5E46  
                             u33671 D9F2                               u32871 B240  
                             u32951 A342                               u33591 DB1C  
                             u34391 95D6                               u34711 EFA6  
                             u35351 EA68                               u35431 55F2  
                             u35271 7EA0                               u35191 7D3A  
                             u27440 FCEC                               u27520 F7A8  
                             u27280 82E0                               u24960 021E  
                             u25760 77BA                               u25680 7672  
                             u25920 6826                               u25840 65E2  
                             u26296 A1BA                               u26800 14CA  
                             u26720 12C2                               u26640 0EEC  
                             u26560 0D36                               u26480 0AFA  
                             u27360 371E                               u27600 C36A  
                             u28240 43AC                               u28160 40F2  
                             u28400 3DF0                               u28320 3C46  
                             u29040 6402                               u29120 F11C  
                             u29200 86E8                               u33920 617C  
                             u33840 5E80                               u34720 F938  
                             u34800 701E                               u34640 913A  
                             u32880 B256                               u32960 A398  
                             u35360 E9C4                               u35440 5666  
                             u35280 7EC6                               u27441 FCE8  
                             u27521 F7A4                               u27281 82DC  
                             u24961 021A                               u25761 77B6  
                             u25681 766E                               u25841 65DE  
                             u26297 A1CA                               u26801 14C6  
                             u26721 12BE                               u26641 0EE8  
                             u26561 0D32                               u26481 0AF6  
                             u27361 371A                               u27601 C366  
                             u28065 6AAE                               u28241 43A8  
                             u28161 40EE                               u28401 3DEC  
                             u28321 3C42                               u29041 63FE  
                             u29121 F118                               u29201 86E4  
                             u33921 6178                               u33841 5E7C  
                             u34721 F934                               u34801 701A  
                             u34641 9136                               u32881 B252  
                             u32961 A394                               u33497 53C6  
                             u35361 E9C0                               u35441 5662  
                             u35281 7EC2                               u27450 020A  
                             u27530 FBE2                               u24970 E29C  
                             u25770 77E8                               u25690 76E6  
                             u25930 6880                               u25850 65F4  
                             u26810 14E8                               u26730 12D0  
                             u26650 1034                               u26570 0D68  
                             u26490 0B44                               u27370 3844  
                             u27290 3472                               u27610 C3D2  
                             u28090 6B86                               u28250 4448  
                             u28410 3E26                               u28330 3C7C  
                             u29050 6432                               u29130 F156  
                             u29210 8748                               u33930 FD56  
                             u33850 5E90                               u34810 710A  
                             u34650 91F4                               u34730 DEFA  
                             u32890 B26C                               u32970 A3AE  
                             u35370 D7C2                               u35450 5682  
                             u35290 7F40                               u27451 0204  
                             u27531 FBDE                               u24971 E298  
                             u25771 77E4                               u25691 76E2  
                             u25931 687C                               u25851 65F0  
                             u26811 14E4                               u26731 12CC  
                             u26651 1030                               u26571 0D64  
                             u26491 0B40                               u27371 3840  
                             u27291 346E                               u27611 C3CE  
                             u28091 6B82                               u28235 4304  
                             u28411 3E22                               u28331 3C78  
                             u29051 642E                               u29211 8744  
                             u33931 FD52                               u33851 5E8C  
                             u34811 7106                               u34651 91F0  
                             u34731 DEF6                               u32891 B266  
                             u32971 A3AA                               u35371 D7BE  
                             u35451 567E                               u35291 7F3C  
                             u27540 FBFA                               u24980 E2AE  
                             u25780 77FE                               u25940 68A0  
                             u25860 6604                               u26820 14F8  
                             u26740 1324                               u26660 109A  
                             u26580 0DA6                               u26900 B910  
                             u27380 3882                               u27620 C404  
                             u27700 841E                               u28260 447E  
                             u28180 417C                               u28500 3FD6  
                             u28420 3E6C                               u28340 3CC4  
                             u29060 6444                               u29140 F166  
                             u29300 886A                               u29220 875A  
                             u33860 5EDE                               u33940 58A6  
                             u34820 713C                               u34740 6DF4  
                             u34660 928A                               u32980 A3C6  
                             u34900 9990                               u35460 56C0  
                             u35380 5414                               u27541 FBF6  
                             u24981 E2AA                               u25781 77FA  
                             u25941 689C                               u25925 681C  
                             u25861 6600                               u26821 14F4  
                             u26741 1320                               u26661 1096  
                             u26581 0DA2                               u27381 387E  
                             u27621 C400                               u27701 841A  
                             u28085 6B4E                               u28261 447A  
                             u28181 4178                               u28501 3FD2  
                             u28421 3E68                               u28341 3CC0  
                             u29061 6440                               u29141 F162  
                             u29117 F102                               u29301 8866  
                             u29221 8756                               u33861 5EDA  
                             u33941 58A2                               u34821 7138  
                             u34741 6DF0                               u34661 9286  
                             u32981 A3C2                               u34901 998C  
                             u35461 56BC                               u35381 5410  
                             u27470 EEC6                               u27550 F232  
                             u27630 E6E6                               u24990 E2D6  
                             u25790 7812                               u25950 68B0  
                             u25870 6644                               u26750 13F6  
                             u26670 10E2                               u26590 0E32  
                             u26910 B942                               u26830 B808  
                             u27390 38BA                               u27710 8432  
                             u28190 41B6                               u28510 4040  
                             u28430 3E96                               u28350 3D06  
                             u28270 3B20                               u29070 64AC  
                             u29310 888E                               u29230 876E  
                             u29150 862E                               u33870 5EFA  
                             u33790 5D4C                               u33950 58B8  
                             u34830 7168                               u34750 6E4C  
                             u34670 92E0                               u32990 A41C  
                             u34910 99A0                               u35470 57CC  
                             u35390 546E                               u27471 EEC2  
                             u27551 F22E                               u27631 E6E2  
                             u24991 E2D2                               u25791 780E  
                             u25951 68AC                               u25871 6640  
                             u26751 13F2                               u26671 10DE  
                             u26591 0E2E                               u26911 B93E  
                             u26831 B804                               u27391 38B6  
                             u27711 842E                               u28255 443E  
                             u28191 41B2                               u28175 4140  
                             u28511 403C                               u28431 3E92  
                             u28351 3D02                               u28271 3B1C  
                             u29071 64A8                               u29311 888A  
                             u29231 876A                               u29151 862A  
                             u33871 5EF6                               u33791 5D48  
                             u33951 58B4                               u34831 7164  
                             u34751 6E48                               u34671 92DC  
                             u32991 A418                               u34911 999C  
                             u35471 57C8                               u35391 546A  
                             u27480 EF0E                               u27560 F25A  
                             u25960 68DE                               u25880 6656  
                             u26760 1412                               u26680 10F2  
                             u26920 B950                               u26840 B84E  
                             u27800 8F02                               u27720 8524  
                             u28520 407A                               u28440 3EDE  
                             u28360 3D5A                               u28280 3B52  
                             u29080 64C8                               u28600 D4D0  
                             u29400 B57E                               u29320 88AC  
                             u29240 877E                               u29160 867A  
                             u33880 60B4                               u33960 58D8  
                             u34760 6E92                               u34680 931A  
                             u34840 E878                               u34920 99B6  
                             u35480 FC54                               u27481 EF0A  
                             u27465 020C                               u27561 F256  
                             u25961 68DA                               u25881 6652  
                             u26761 140E                               u26681 10EE  
                             u26921 B94C                               u27801 8EFE  
                             u27721 8520                               u28521 4076  
                             u28441 3EDA                               u28361 3D56  
                             u28281 3B4E                               u29081 64C4  
                             u29137 F14C                               u28601 D4CC  
                             u29401 B57A                               u29321 88A8  
                             u29241 877A                               u29161 8676  
                             u33881 60B0                               u33961 58D4  
                             u34761 6E8E                               u34681 9316  
                             u34841 E874                               u34921 99B2  
                             u35481 FC50                               u27490 EF2C  
                             u27570 F270                               u25970 68F4  
                             u25890 6666                               u26770 1478  
                             u26690 118C                               u26930 B98A  
                             u26850 B85E                               u27810 8F3A  
                             u27730 8544                               u28450 3EF8  
                             u28370 3D76                               u28290 3B7C  
                             u28530 C834                               u29090 64E8  
                             u28610 D4E2                               u29410 B590  
                             u29330 B4BE                               u29250 87A4  
                             u29170 868C                               u33890 610E  
                             u33970 58F0                               u34770 6EAA  
                             u34690 935C                               u34850 E8BA  
                             u34930 99D0                               u27491 EF28  
                             u27571 F26C                               u25971 68F0  
                             u25891 6662                               u26771 1472  
                             u26691 1188                               u26931 B986  
                             u26907 B906                               u26851 B85A  
                             u27811 8F36                               u27731 8540  
                             u28451 3EF4                               u28371 3D72  
                             u28291 3B78                               u28531 C830  
                             u29091 64E4                               u28611 D4DE  
                             u29411 B58C                               u29331 B4BA  
                             u29251 87A0                               u29171 8688  
                             u33891 610A                               u33971 58EC  
                             u34771 6EA6                               u34851 E8B6  
                             u34931 99CC                               u25980 6908  
                             u26780 147A                               u26860 B86C  
                             u26940 BB2C                               u27580 C2E0  
                             u27820 8F7A                               u27740 8558  
                             u27900 E7A6                               u28700 FCBE  
                             u28460 3F14                               u28380 3D90  
                             u28540 C8F2                               u29500 CA4C  
                             u28620 D510                               u29420 B5A2  
                             u29340 B506                               u29260 87C6  
                             u29180 869E                               u33980 5926  
                             u34780 6EFE                               u34940 9A38  
                             u34860 98A6                               u27645 E39C  
                             u25981 6904                               u26861 B868  
                             u26941 BB28                               u27581 C2DC  
                             u27821 8F76                               u27741 8554  
                             u27901 E7A2                               u28701 FCBA  
                             u28461 3F10                               u28381 3D8C  
                             u28541 C8EE                               u29501 CA48  
                             u28605 D4C0                               u29421 B59E  
                             u29341 B502                               u29261 87C2  
                             u29181 869A                               u33981 5922  
                             u34781 6EFA                               u34941 9A34  
                             u34861 98A2                               u27670 E40E  
                             u25990 6922                               u26790 148C  
                             u26870 B88A                               u26950 BB3C  
                             u27590 C34E                               u27830 8FA6  
                             u27910 E818                               u27750 8578  
                             u28470 3F3C                               u28390 3DC6  
                             u29430 9F10                               u28550 C93C  
                             u29510 CA68                               u28710 ECFE  
                             u28630 D534                               u29350 B51E  
                             u29270 87FA                               u29190 86B6  
                             u33990 593E                               u34790 6F50  
                             u34950 9A66                               u34870 98E6  
                             u27671 E40A                               u27655 E3C2  
                             u25991 691E                               u26791 1488  
                             u26871 B886                               u26847 B844  
                             u26951 BB38                               u27591 C34A  
                             u27831 8FA2                               u27911 E814  
                             u27751 8574                               u28471 3F38  
                             u28391 3DC2                               u29431 9F0C  
                             u28551 C938                               u29511 CA64  
                             u28711 ECFA                               u28607 D4B6  
                             u29351 B51A                               u29271 87F6  
                             u29191 86B2                               u33991 593A  
                             u34791 6F4C                               u34695 9352  
                             u34951 9A62                               u26880 B8B0  
                             u26960 BB6A                               u27840 8FF8  
                             u27920 E854                               u27760 85BC  
                             u27680 834E                               u28480 3F80  
                             u28640 C452                               u29440 9F2A  
                             u28560 C964                               u29520 CA9C  
                             u28720 ED1E                               u28800 DD90  
                             u29600 BDF4                               u29360 B530  
                             u29280 881C                               u34960 CE48  
                             u34880 98F6                               u36800 74C0  
                             u36720 71E8                               u27665 E3E4  
                             u26881 B8AC                               u26961 BB66  
                             u27841 8FF4                               u27921 E850  
                             u27761 85B8                               u27681 834A  
                             u28481 3F7C                               u28641 C44E  
                             u29441 9F26                               u28561 C95E  
                             u29521 CA98                               u28721 ED1A  
                             u28801 DD8C                               u29601 BDF0  
                             u29361 B52C                               u29281 8818  
                             u34961 CE44                               u34881 98F2  
                             u36801 74BC                               u36721 71E4  
                             u26890 B8EA                               u26970 BBAE  
                             u27850 905C                               u27770 8EA2  
                             u27690 83E4                               u27930 B66E  
                             u28490 3F96                               u28650 C4B0  
                             u29450 9F48                               u28570 C966  
                             u28810 790C                               u29530 CAAE  
                             u28730 ED4A                               u29610 BE22  
                             u29370 B548                               u29290 8844  
                             u34970 CE62                               u34890 992E  
                             u36730 721C                               u26891 B8E6  
                             u26971 BBAA                               u27851 9058  
                             u27771 8E9E                               u27691 83E0  
                             u27931 B66A                               u28491 3F92  
                             u28651 C4AC                               u29451 9F44  
                             u28811 7908                               u29531 CAAA  
                             u28731 ED46                               u28627 D506  
                             u29611 BE1E                               u29371 B544  
                             u29291 8840                               u34971 CE5E  
                             u34891 992A                               u36731 7218  
                             u26980 BBF8                               u27860 9092  
                             u27780 8EB6                               u27940 B6C0  
                             u28660 C4CC                               u29460 A0F8  
                             u28900 7B1C                               u28820 793A  
                             u28740 ED6A                               u29700 4700  
                             u29620 4612                               u28580 D47A  
                             u29540 F2AA                               u29380 B55A  
                             u34980 CE98                               u36820 751C  
                             u36740 725A                               _MFOEN 059D  
                             u27861 908E                               u27781 8EB2  
                             u27941 B6BC                               u28661 C4C8  
                             u29461 A0F4                               u28901 7B18  
                             u28821 7936                               u28741 ED66  
                             u29701 46FC                               u28637 D52A  
                             u28581 D476                               u29541 F2A6  
                             u29381 B556                               u34981 CE94  
                             u34877 98DC                               u36821 7518  
                             u36741 7256                               u26990 BC2A  
                             u27870 90AC                               u27790 8EE4  
                             u27950 B74A                               u28670 C534  
                             u29550 FA82                               u28910 7B46  
                             u28830 798E                               u29470 C9AA  
                             u28750 DCE0                               u29710 4758  
                             u29630 4622                               u28590 D49C  
                             u29390 B56C                               u34990 CEAA  
                             u36830 753E                               u36750 730C  
                             u26991 BC26                               u27871 90A8  
                             u27791 8EE0                               u27951 B746  
                             u28671 C530                               u29551 FA7E  
                             u28911 7B42                               u28831 798A  
                             u29471 C9A6                               u28751 DCDC  
                             u29631 461E                               u29391 B568  
                             u34991 CEA6                               u36831 753A  
                             u36751 7308                               u27880 90CC  
                             u27960 B768                               u28680 C566  
                             u28920 7B78                               u28840 79A6  
                             u29480 C9EE                               u28760 DD00  
                             u29800 4846                               u29720 476E  
                             u29640 4650                               u29560 BCE6  
                             u36760 73BC                               u26985 BBEE  
                             u27881 90C8                               u27961 B764  
                             u28681 C562                               u28921 7B74  
                             u28841 79A2                               u29481 C9EA  
                             u28761 DCFC                               u29801 4842  
                             u29721 476A                               u29561 BCE2  
                             u36761 73B8                               u27890 E76A  
                             u27970 DF8C                               u28690 FC9A  
                             u28930 7BF0                               u28850 79D8  
                             u29490 CA20                               u28770 DD2C  
                             u29810 485A                               u29730 4784  
                             u29650 4668                               u29570 BD2A  
                             u36818 74F2                               u36770 73E6  
                             u27891 E766                               u27971 DF88  
                             u28691 FC96                               u28931 7BEC  
                             u28851 79D4                               u29491 CA1C  
                             u28771 DD28                               u29811 4856  
                             u29731 4780                               u29651 4664  
                             u29627 4608                               u29571 BD26  
                             u36819 7506                               u36771 73E2  
                             u27980 DFAC                               u28940 7C14  
                             u28860 7A18                               u28780 DD4C  
                             u29900 49CC                               u29820 486C  
                             u29740 4796                               u29660 467E  
                             u29580 BD5E                               u36780 7442  
                             u27981 DFA8                               u28781 DD48  
                             u29901 49C8                               u29821 4868  
                             u29741 4792                               u29717 474E  
                             u29661 467A                               u28597 D492  
                             u29581 BD5A                               u36781 743E  
                             u27990 DFF4                               u28950 61FA  
                             u28870 7A3C                               u28790 DD70  
                             u29910 49EA                               u29830 489C  
                             u29750 47CC                               u29670 46AC  
                             u29590 BDB6                               u36790 74AA  
                             u27991 DFF0                               u28951 61F6  
                             u28871 7A38                               u28791 DD6C  
                             u29911 49E6                               u29831 4898  
                             u29671 46A8                               u29647 4646  
                             u29591 BDB2                               u36847 FB0E  
                             u36791 74A6                               u28960 6230  
                             u29920 4A06                               u29840 48CA  
                             u29760 47DC                               u29680 46BE  
                             u28961 622C                               u28945 7C0A  
                             u28865 7A0E                               u29921 4A02  
                             u29761 47D8                               u29681 46BA  
                             u36857 EFBA                               u28970 6264  
                             u28890 7AFC                               u29930 4A34  
                             u29850 48E8                               u29770 480A  
                             u29690 46CE                               _U3RXB 02C7  
                             u28971 6260                               u28891 7AF8  
                             u29851 48E4                               u29691 46CA  
                             u36867 DF24                               u28980 629C  
                             u29940 4A46                               u29860 490A  
                             u29780 481A                               u28981 6298  
                             u28885 7A8E                               u29941 4A42  
                             u29861 4906                               u29781 4816  
                             u29757 47C2                               u36877 DF42  
                             u28990 62DC                               u29870 495E  
                             u29790 4830                               u29950 B332  
                             u29871 495A                               u29847 48C0  
                             u29791 482C                               u29951 B32E  
                             u36887 FE06                               u29880 4972  
                             u29960 B35C                               u29937 4A2A  
                             u29881 496E                               u29777 4800  
                             u29890 4982                               u29970 B372  
                             _U3TXB 02C9                               u28995 62D2  
                             u29891 497E                               u29971 B36E  
                             u29980 B384                               u29981 B380  
                             u29990 B396                               u29991 B392  
                             u29967 B352                        vfpfcnvrt@fmt 0595  
                             _TMR0H 0319                               _TMR0L 0318  
                             _PORTB 04CF                     __end_of_f_chdir D920  
                             _TRISB 04C7                               _TRISC 04C8  
                             _TRISD 04C9                     _bioreq_cbuffadr 0824  
                       _Default_ISR 0290                               _WPUA0 2008  
                             _WPUA1 2009                               _WPUA2 200A  
                             _WPUA3 200B                               _WPUA4 200C  
                             _WPUA5 200D                               _WPUE0 2108  
                             _WPUE1 2109                               _WPUE2 210A  
                   __end_of_f_close F80E                               _FatFs 07C5  
                     scan_files1@fn 074B                     __end_of_f_lseek 25B6  
               ___lmul@multiplicand 0508                     __end_of_f_mount D73C  
                   __end_of_dir_sdi 7C6E                     __end_of_f_write 1DB4  
                   __end_of_get_fat 6DDA                 SPI_SD_select@select 0506  
         SPI_SD_configure@data_mode 05C2                     __end_of_get_hex C818  
                     scan_files@dir 0768                       scan_files@fno 0752  
                     scan_files@res 074F                     __end_of_get_str EEAC  
                   __end_of_dsk_err 027E                     __end_of_in_file C120  
                   __end_of_ld_word FED0                               _debug 0816  
                      ?_read_sector 069A                               _flags 055C  
           ?_SDCard_end_transaction 0501                               _mon02 07F6  
                             _getch FA9C                               _mon16 07F4  
                             _in_fl 0DB4                               _mezID 07FE  
                             _fsdir 098B                 read_prec_or_width@c 050A  
                             _errno 07B3                 read_prec_or_width@n 050B  
                             _fputc E28A                       find_volume@fs 0632  
                             _fputs FBFE                               labs@a 0504  
                             pad@fp 0515                               _width 07B1  
                  SPI_SD_begin@ctx_ 0504                               _putch 020E  
                             _rx_rp 07B7                               main@c 079C  
                             _rx_wp 07B9                               dtoa@d 0520  
                   __end_of_u_getch F5BA                               dtoa@i 052B  
                             dtoa@p 0526                               dtoa@s 052A  
                             dtoa@w 0528                     util_hexdump@buf 05D6  
                     setup_sd@retry 07B5                SDCard_command@length 0531  
         SPI_SD_configure@bit_order 05C1                      disk_ioctl@buff 05BE  
                   __end_of_set_arg AFB8                               pclath 04FA  
                    disk_read@count 0606                               tablat 04F5  
                    SDCard_crc@endp 0508                      disk_ioctl@pdrv 05C0  
       ___SDCard_command_r1@command 0521                SDCard_command@result 0536  
                             plusw2 04DB                               stoa@l 051A  
                             stoa@p 0514                               stoa@s 0510  
                   __end_of_put_fat 4594                               stoa@w 0516  
                      ?_scan_files1 0501                               status 04D8  
                   __end_of_st_word FFB4            ??_SPI_SD_end_transaction 050A  
                   __end_of_sprintf FA00                      ?___fpclassifyf 0504  
                             xtoa@a 0529                               xtoa@c 0530  
                             xtoa@d 0520                     ??_setup_monitor 055A  
                             xtoa@i 0531                     __end_of_str_inf AAA6  
                             xtoa@p 052C                               xtoa@w 052E  
                             xtoa@x 0524                     __end_of_sync_fs A104  
                   __end_of_strncmp CE22                   write_sector@filep 069F  
                     get_ldnumber@i 0508                         drive_cpu@rs 06FF  
                      _util_hexdump C406                     _bioreq_ubuffadr 07DF  
                   ??_SPI_SD_select 0508                     __initialization E1C0  
                    SDCard_init@buf 05D0                      SDCard_init@spi 05CE  
           ___SDCard_command_r1@buf 0522             ___SDCard_command_r1@spi 0529  
               disk_initialize@pdrv 0680                         _wstart_prog EA54  
                       ?_URT3Rx_ISR 0501                        __end_of_labs F8BA  
                      __end_of_main 7554                        __end_of_dtoa A8E0  
                      __end_of_stoa B98C                        __end_of_xtoa BCA4  
                    ??_bus_hold_req 0504                      write_sram@addr 0504  
                            ??_labs 0508                      get_fileinfo@di 051C  
                    get_fileinfo@dp 0511                              ??_main 0791  
                            ??_dtoa 0524                      get_fileinfo@si 0519  
              SDCard_read512@i_4067 05EE                        ?_release_bus 0504  
                            ??_stoa 0512                              ??_xtoa 0525  
                     __activetblptr 0003                  SDCard_init@timeout 05C9  
        __end_of_read_prec_or_width E0F4      __end_of_SDCard_end_transaction FF8C  
                            ?_getch 0504                              ?_fputc 0505  
                     see_file@rdbuf 0702                              STR_100 FEEE  
                            STR_101 FE94                              STR_102 FB79  
                            STR_110 F7D1                              ?_fputs 050E  
                            STR_103 FF40                              STR_111 F897  
                            STR_200 FFD5                              STR_104 FF38  
                            STR_120 FDD7                              STR_112 F28E  
                            STR_105 FB79                              STR_121 FEAC  
                            STR_113 F857                              STR_106 FC9A  
                            STR_122 FEB7                              STR_114 F21F  
                            STR_131 FFC9                              STR_203 FFD9  
                            STR_123 FF15                              STR_107 FCAE  
                            STR_115 F38C                              STR_132 FB79  
                            STR_108 FFF6                              STR_124 FF30  
                            STR_140 FF02                              STR_116 F5C9  
                            STR_133 FFAD                              STR_125 FD22  
                            STR_141 FCC2                              STR_109 FBD8  
                            STR_117 FB1E                              STR_206 FF70  
                            STR_126 FEF8                              STR_150 FDE7  
                            STR_134 FC5B                              STR_142 FA08  
                            STR_118 F5A0                              STR_127 FE7A  
                            STR_151 FD35                              STR_143 FC1A  
                            STR_119 FB7C                              STR_135 F8F4  
                            STR_160 FB79                              STR_128 FFED  
                            STR_144 FDB5                              STR_152 FD80  
                            STR_136 F8B6                              STR_153 FCC2  
                            STR_129 FFED                              STR_161 FE16  
                            STR_145 FDC6                              STR_137 F911  
                            STR_154 FA08                              STR_138 FE87  
                            STR_170 FC46                              STR_162 F99E  
                            STR_146 F7F3                              STR_155 FC1A  
                            STR_139 FE50                              STR_171 FE34  
                            STR_163 FC04                              STR_147 F815  
                            STR_148 FDF7                              STR_164 FD0F  
                            STR_180 FA70                              STR_156 FA22  
                            STR_172 F68E                              STR_157 FDB5  
                            STR_165 FC04                              STR_173 FDA4  
                            STR_149 FD48                              STR_181 F983  
                            STR_166 FD0F                              STR_158 FDC6  
                            STR_182 F746                              STR_190 F6DA  
                            STR_174 F419                              STR_167 F28B  
                            STR_175 FDA4                              STR_159 F6B4  
                            STR_183 F3EB                              STR_191 F2C4  
                            STR_192 FFA3                              STR_168 F9D4  
                            STR_176 F94B                              STR_184 F6FE  
                            STR_169 F28B                              STR_177 FA89  
                            STR_185 F4F7                              STR_193 F257  
                            STR_178 FCD6                              STR_186 F668  
                            STR_194 F2F6                              STR_187 F577  
                            STR_179 F446                              STR_188 FD6E  
                            STR_196 F328                              STR_189 F7AF  
                            STR_197 F769                    _change_directory 0246  
                            STR_198 F54D                              STR_199 F3BC  
              SDCard_read512@result 05F4                              _ANSELA 0400  
                            ?_putch 0501                              _ANSELB 0408  
                            _ANSELC 0410                              _ANSELD 0418  
                            _T0CON0 031A                              _T0CON1 031B  
                      ?_SDCard_init 05C5                       boot_file@flag 0716  
                            _RA0PPS 0201                              _NCO1EN 2237  
                            _RA2PPS 0203                              _RB0PPS 0209  
                            _RA3PPS 0204                              _RB1PPS 020A  
                            _RA6PPS 0207                              i2l2101 0286  
                            i2l2109 F54A                              i2l2096 0290  
                     ?_load_program 0700                              _U3RXIE 2538  
                            _U3RXEN 168C                              _U3TXIF 25B9  
                            _U3TXEN 168D                              _OSCFRQ 00B1  
                     vfpfcnvrt@done 059D                              _TMR0IE 250F  
                            _TMR0IF 258F                              _TRISA0 2630  
                            _TRISA1 2631                              _TRISA2 2632  
                            _TRISB0 2638                              _TRISA3 2633  
                            _TRISB1 2639                              _TRISA4 2634  
                            _TRISB2 263A                              _TRISA5 2635  
                            _TRISA6 2636                              _TRISA7 2637  
                            _TRISE0 2650                              _TRISE1 2651  
                            _TRISE2 2652                __end_of_dir_register DCBE  
                            _DbcTbl F201                    __end_of___xxtofl AC5A  
                  __end_of_check_fs 88C2                    __end_of_f_getcwd 53D4  
                  __end_of_clc_init C294                      scan_files1@dir 0769  
                    scan_files1@fno 0753                      scan_files1@res 0750  
                   load_config@conf 070F                    __end_of_clk_init 0192  
                  __end_of_dir_find BE28              ??_bus_master_operation 055A  
                  __end_of_dir_read B304                    __end_of_dir_next 65C8  
                      ?_move_window 061A                __end_of_create_chain 40A8  
                      _write_sector B98C                        ___strtoxl@cp 052B  
                      vfprintf@cfmt 05AB                    __end_of_get_line CF2E  
                  __end_of_ld_clust F2F4                      scan_files@path 0750  
                            ___flge D242                              ___fleq E902  
                  __end_of_ld_dword E646                              ___lmul F626  
                         ??___aldiv 050C                    __end_of_make_irq FFFE  
                         ??___almod 050C                           ??___fladd 050C  
                         ??___fldiv 0533                           ??___flneg 0508  
                            _f_gets D920                           ??___flmul 051A  
                         ??_dbc_2nd 0506                              _conf02 07FA  
                         ??___flsub 0533                           ??___fltol 0508  
                            _conf16 07F8                           ??_dbc_1st 0506  
                            _f_read 2D36                           ??___lldiv 050C  
                            _f_open 25B6                              _cin_no 07CC  
                            _clk_fs 07DB                              _efgtoa 0AD8  
                            _f_sync 9CDA                    __end_of_mem_dump F3EA  
                  __end_of_mem_init 9380                              _floorf A104  
                         ??_f_chdir 055A                              _memcmp D446  
                            _memcpy FA00                read_prec_or_width@ap 0506  
                            _memset FE28                           ??_f_close 055A  
                    find_volume@fmt 064C                    ___strtoxl@endptr 0512  
                            _t_conf 07E6                              clear_0 E228  
                            clear_1 E23A                              clear_2 E246  
                            clear_3 E252                              clear_4 E25E  
                            clear_5 E26A                 _wait_for_programmer FAE6  
                         ??_f_lseek 0668                __end_of_get_fileinfo A50E  
                            isa$std 0001                           ??_f_mount 055A  
           ?___SDCard_wait_response 0515                              _rom_fl 0FD6  
                            _printf FFB4                    __end_of_see_file 5870  
                            pad@buf 0517                              getch@c 0508  
             SDCard_command@command 0533                              _rx_buf 0B00  
                            _rx_cnt 07C1                           ??_dir_sdi 0644  
                         ??_f_write 066A                   ?_board_event_loop 0501  
                  util_hexdump@addr 05BF                           ??_get_fat 062A  
                         ??_get_hex 0508                              dtoa@fp 051E  
                            main@rs 0799                              _strchr F0EA  
                  ___strtoxl@prev_a 051A                      get_line@length 05BF  
                            _strcpy FD7C                              _strlen F960  
                         ??_get_str 0703                              _strstr DD9E  
                         ??_dsk_err 0504                           ??_in_file 055A  
                  __end_of_mon_prog D82E                    util_hexdump@size 05C1  
                         ??_ld_word 0506                              fputc@c 0505  
                  __end_of_validate D446                              fputs@c 0512  
                            fputs@i 0513                              fputs@s 050E  
                ??_board_event_loop 055A                     SDCard_crc@count 0506  
              __end_of_get_ldnumber B4A8                     ___fpclassifyf@e 050C  
                   ___fpclassifyf@u 050E                     ___fpclassifyf@x 0504  
                         ??_u_getch 0702                       _util_addrdump C294  
                      __mediumconst F200                     disk_read@sector 0602  
                  __end_of_timer_on 028C                           ??_set_arg 0506  
                            tblptrh 04F7                              tblptrl 04F6  
                            tblptru 04F8                    __end_of_setup_sd EFD2  
                  __end_of_st_clust FA9C                    __end_of_st_dword F626  
                            stoa@cp 0518                              stoa@fp 050E  
                            putch@c 0504                    __end_of_vfprintf F864  
                         ??_put_fat 062E                           ??_st_word 0508  
                         ??_sprintf 055A                           ??_str_inf 0703  
                            xtoa@fp 051E                           ??_sync_fs 061C  
                         ??_strncmp 050A                      ??_load_program 05FF  
                      ?_setup_drive 0504                          ___flge@ff1 052B  
                        ___flge@ff2 052F                     ??___fpclassifyf 0508  
                       read_sram@ab 050E                ?_wait_for_programmer 0501  
                      ___xxtofl@arg 050E                        ___xxtofl@exp 050D  
                      ___xxtofl@val 0504                          ___fleq@ff1 0504  
                        ___fleq@ff2 0508             SDCard_write512@response 05F8  
                  SPI_SD_send@count 0508                      _unimon_console AC5A  
                        __accesstop 0560             __end_of__initialization E284  
                      ?_SPI_SD_send 0504                      get_ldnumber@tc 050A  
                        ___flneg@f1 0504                      disk_write@buff 0600  
                    get_ldnumber@tp 050F                      get_ldnumber@tt 050B  
                    disk_write@pdrv 05F9                 _SPI_SD_dummy_clocks F758  
                   SDCard_read512@i 05EC                       ___rparam_used 0001  
                        ___fltol@f1 0504                    ??_SPI_SD_receive 050A  
                   seek_disk@sector 0693                      __pcstackCOMRAM 0501  
          __end_of_util_hexdump_sum F1F2                        __pidataBANK7 0192  
                      __pidataBANK8 0254                        __pidataBANK9 F05E  
                     __end_of_getch FAE6                         scan_files@p 074D  
                    ivt0x8_undefint 0108                       __end_of_fputc E354  
                     __end_of_fputs FC42      __end_of___SDCard_wait_response FBFE  
                 ??_bus_release_req 0504                 ___SDCard_crc16@endp 050D  
                     f_closedir@res 05CD                       __end_of_putch 0224  
   ___SDCard_wait_response@attempts 0515                ?_SPI_SD_dummy_clocks 050E  
             SDCard_write512@i_4084 05EE                      ?_util_addrdump 05BD  
                    _SDCard_command F2F4                      _SDCard_read512 8E56  
            SDCard_init@clock_speed 05C7                     _continue_action FB2C  
                           ??_getch 0506                     get_fileinfo@fno 0513  
                           ??_fputc 0509     ___SDCard_wait_response@response 051A  
                           ??_fputs 0512              __end_of_unimon_console AE0A  
                           ??_putch 0504               ??_wait_for_programmer 05BD  
                    SPI_SD_send@buf 0506                          __pbssBANK7 079E  
                        __pbssBANK8 0800                          __pbssBANK9 098B  
             SDCard_write512@result 05F2                          _f_closedir FDB8  
                     seek_disk@fres 0699                __end_of_bus_hold_req 026C  
                 unimon_console@buf 070C                   unimon_console@cnt 070E  
               SDCard_write512@addr 05DE                             IVTBASEH 045E  
                           IVTBASEL 045D                             IVTBASEU 045F  
               SDCard_write512@offs 05E2                 _SPI_SD_receive_byte 010E  
         ?_SPI_SD_begin_transaction 0508                             ?___flge 052B  
                           ?___fleq 0504                        mem_dump@addr 05E0  
                           ?___lmul 0504                          _board_name 07FC  
                           ?_f_gets 0669                  util_addrdump@chars 05C9  
                    see_file@header 0707                             ?_f_read 063E  
                      mem_init@addr 05E8                        ??_TIMER0_ISR 0501  
                           ?_f_open 06AF                             ?_efgtoa 0560  
                           ?_f_sync 0624                   ??_disk_initialize 05FB  
                           ?_floorf 0544                             ?_memcmp 0504  
                           ?_memcpy 0504                             ?_memset 0504  
                      ?_sync_window 0608                      ___lmul@product 050C  
                           _CLC8OUT 06A7               ??_SPI_SD_dummy_clocks 0512  
                           ?_printf 05AD                             _ANSELE0 2100  
                           _ANSELE1 2101                             _ANSELE2 2102  
            __end_of_SDCard_command F370              __end_of_SDCard_read512 90F8  
                           ?_strchr 0504              _SPI_SD_end_transaction 0152  
                           ?_strcpy 0504                        ??_SDCard_crc 0508  
                           ?_strlen 0504                             _CLCnCON 00D6  
                           _CLCnPOL 00D7                             ?_strstr 050B  
                           _NCO1CLK 0447                             _NCO1INC 0443  
                           _NCO1PFM 2230                             _NCO1OUT 2235  
              ?_SPI_SD_receive_byte 0512                        ?_Default_ISR 0501  
                           i2l18911 0284                             i2l18921 F50A  
                           i2l18913 F4D8                             i2l18923 F522  
                           i2l18915 F4DC                             i2l18925 F532  
                           i2l18917 F4EE                             i2l18909 0280  
                           i2l18927 F546                             i2l18919 F500  
                     wstart_prog@rs 0716                           ?___xxtofl 0504  
                         ?_check_fs 0624                           ?_f_getcwd 06AF  
                        _disk_ioctl F6F4                             _U3RXPPS 0276  
                        _cpm_drives 094B                             _IVTBASE 045D  
                         ?_clc_init 0501                      follow_path@res 0691  
                        _disk_write E6FC                             _IVTLOCK 0459  
                           _SPI1CLK 008C                             _SPI1RXB 0080  
                           _SPI1TXB 0081                           ?_clk_init 0501  
                    remove_chain@fs 065C                           ?_dir_find 067C  
                 __end_of___strtoxl 5D0C                           ?_dir_read 067C  
                         ?_dir_next 0662                           ?_get_line 05BD  
               _pic18f47q43_spi_ctx 08CF                           ?_ld_clust 050B  
                   ?_unimon_console 0501                           ?_ld_dword 0504  
                         ?_make_irq 0501    __end_of_debug_flags@SDCard$F3998 F20D  
                 ??_SDCard_write512 05E8                           ?_mem_dump 0501  
               ___SDCard_command_r1 E646                           ?_mem_init 05DE  
                 __end_of_f_readdir DBDC                          f_chdir@res 06B1  
                 __end_of_del_space F05E                  __end_of_TIMER0_ISR 0288  
                   scan_files1@fcnt 074D                       ?_remove_chain 0645  
                   scan_files1@path 0751  ___SDCard_wait_response@no_response 0517  
                 __end_of_f_opendir BFA6                         SDCard_crc@i 050A  
                       SDCard_crc@p 050D                           ?_see_file 0501  
                           _CurrVol 07CD                   __end_of_dir_clear C968  
                 __end_of_dir_alloc CAB6                           ?_mon_prog 0501  
                           __Hparam 0000                  __end_of_SDCard_crc F274  
                 __end_of_clst2sect E1C0                             __Lparam 0000  
                      load_config@a 070D                           ?_validate 05BE  
                      load_config@i 0713                           _CLCSELECT 00D5  
                 __end_of_disk_init F960                   __end_of_disk_read E858  
                 __end_of_flash_apl FC84                        ?_wstart_prog 0501  
                      ??_URT3Rx_ISR 0501                           ?_timer_on 0501  
                           ___aldiv CF2E                   __end_of_boot_file 7FBE  
                      _f_write$1491 0676                             ___almod DA0C  
                         ?_setup_sd 0501                          f_close@res 0633  
                           ___fladd 4A70                             ___fldiv 7554  
                           ___flneg FE60                           ?_st_clust 0508  
                           ___flmul 65C8                             _dbc_2nd DCBE  
                           ___flsub FB72                             ___fltol D038  
                           _dbc_1st ECDC                           ?_st_dword 0504  
                        f_gets@buff 0669                             ___lldiv EAFC  
          __end_of_change_directory 0254                          check_fs@fs 0624  
                         ?_vfprintf 05A5                          f_getcwd@dj 0723  
                        f_getcwd@fs 070A                          f_getcwd@tp 0704  
                           _f_chdir D82E                __end_of_load_program 619E  
                           _f_close F7B6                             __pcinit E1C0  
                    ___SDCard_crc16 E354                ?___SDCard_command_r1 051B  
                 __end_of_drive_cpu FD7C                             _f_lseek 1DB4  
                           __ramtop 4000                             _f_mount D642  
                   ??_util_addrdump 05C7                             __ptext0 71A0  
                           __ptext1 7C6E                             __ptext2 E4D4  
                           __ptext3 FC42                             __ptext4 53D4  
                           __ptext5 F370                             __ptext6 D73C  
                           __ptext7 AFB8                             __ptext8 0236  
                           __ptext9 E9AC                             _dir_sdi 78E4  
                   ?_SDCard_command 052B                             _f_write 1538  
                           _fin_cnt 07E3                     ?_SDCard_read512 05DE  
                       validate@obj 05BE                             _get_fat 69EE  
                       validate@res 05C8                             _get_hex C6C6  
                       validate@rfs 05C0                             _get_str EE12  
           __end_of_continue_action FB72                             _cpu_flg 07E5  
                      _dir_register DBDC                             _dsk_err 0276  
                           _in_file BFA6                             _frd_ptr 07BF  
             ??_SPI_SD_receive_byte 0514                             _ld_word FE98  
                 __end_of_load_file EE12                   URT3Rx_ISR@rx_data 0503  
                           f_gets@p 0671                             f_gets@s 0679  
                        f_read@buff 0640                          f_read@clst 0657  
                        _scan_files 9874               read_prec_or_width@fmt 0504  
                        ??___xxtofl 0508                          f_read@sect 0663  
                        f_read@rcnt 0661                          ??_check_fs 062A  
                        ??_f_getcwd 06B3                             _irq_flg 07C7  
                   find_volume@part 0634                             _nmi_sig 07CA  
                           _u_getch F54C                    ___aldiv@dividend 0504  
                 __end_of_read_sram E4D4                   _board_event_loop1 F3EA  
                        ??_clc_init 0504           SDCard_end_transaction@spi 0515  
                           _req_tbl 07CE                             _set_arg AE0A  
                           efgtoa@c 0566                             efgtoa@d 0572  
                           efgtoa@e 0576                             efgtoa@f 0562  
                           efgtoa@g 0589                             efgtoa@h 057E  
                           efgtoa@i 0586                             efgtoa@l 0582  
                           efgtoa@m 0574            SPI_SD_dummy_clocks@dummy 0514  
                           efgtoa@n 058D                             efgtoa@p 0569  
                           efgtoa@t 056B                             efgtoa@u 058F  
                           efgtoa@w 057C              util_addrdump@addr_offs 05BF  
                      _create_chain 3AF8                          ??_clk_init 0504  
            SDCard_command@argument 052B                          ??_dir_find 067E  
                           _tmp_buf 13F8                          del_space@c 0509  
                        del_space@i 0507                          ??_dir_read 0680  
                           _put_fat 40A8                          ??_dir_next 0666  
                ?_board_event_loop1 0501                       ?_restart_prog 0501  
                           _st_word FF8C                             main@buf 079A  
                           _sprintf F9B0                             _str_inf A8E0  
                           main@res 0797                   util_hexdump@chars 05C5  
                 __end_of_seek_disk CD06                          ??_get_line 055A  
                        f_lseek@bcs 0681                          ??_ld_clust 050F  
                           _sync_fs 9EF0                          f_lseek@ofs 0664  
                           _strncmp CD06                          f_lseek@res 0680  
                        ??_ld_dword 0508                end_of_initialization E284  
                     ??_acquire_bus 0506                             _wup_flg 07CB  
                        ??_make_irq 0504                             floorf@e 0552  
                           floorf@m 054E                  __end_of_URT3Rx_ISR F54C  
                           floorf@u 0554                             floorf@x 0544  
                       ?_f_closedir 05C9                   mount_volume@bsect 069E  
                        f_open@clst 06D0                          f_open@mode 06B3  
                        f_open@path 06B1                      ??_remove_chain 064F  
                           memcmp@l 050C                             memcmp@n 0508  
                           memcmp@r 050E                   mount_volume@nclst 06A3  
                           memcpy@d 050B                             memcpy@n 0508  
                           memcpy@s 050D                          ??_mem_dump 055A  
                        ??_mem_init 05E2                             fputc@fp 0507  
                 mount_volume@tsect 069A                        _get_fileinfo A316  
                           memset@c 0506                             memset@n 0508  
                           memset@p 050A                   __end_of_reset_clk 01DE  
                 __end_of_reset_cpu DF56                             fputs@fp 0510  
         SPI_SD_dummy_clocks@clocks 0510                 ??_board_event_loop1 055A  
                     ?_mount_volume 0681                  _read_prec_or_width E028  
                   disk_status@pdrv 05BD                          ??_see_file 0700  
                    util_addrdump@i 05DC                     load_program@adr 070A  
                   load_program@cnt 070E                     load_program@btr 0708  
                         i2u2474_40 F4EE                           i2u2474_41 F4EA  
                         i2u2475_40 F500                           i2u2475_41 F4FC  
                 __end_of_uart_init FD40                           i2u2476_40 F522  
                         i2u2476_41 F51E               __end_of_setup_monitor E902  
                   ___lldiv@divisor 0508                          f_mount@cfs 06B7  
                 util_hexdump_sum@i 05E2                          f_mount@res 06B4  
                 util_hexdump_sum@p 05E0                          ??_mon_prog 055A  
                        f_mount@opt 06B3                          f_mount@vol 06B9  
                 __end_of_timer_off 0290                     ___lldiv@counter 0510  
                      _get_ldnumber B304                          ??_validate 05C2  
                 __end_of_print_com E58E                   __end_of_print_reg B160  
                 __end_of_vfpfcnvrt 3AF8                          efgtoa@mode 0570  
                 __end_of_port_init F6F4                          efgtoa@sign 0588  
                         _SPI1TCNTH 0083                           _SPI1TCNTL 0082  
                  ___aldiv@quotient 050E                          ??_timer_on 0504  
                           postdec1 04E5                             postdec2 04DD  
               ?_read_prec_or_width 0504                          ??_setup_sd 05D5  
                           postinc0 04EE                             postinc1 04E6  
                           postinc2 04DE                   __end_of_start_W65 FF34  
             __end_of_SPI_SD_select 020E                    vfpfcnvrt@convarg 059E  
                        ??_st_clust 0510              __end_of___SDCard_crc16 E418  
                    move_window@res 05FE                          ??_st_dword 050A  
                 __end_of_start_cpu FE28                          ??_vfprintf 055A  
                           strchr@c 0506                          dir_clear@n 0628  
                           strchr@s 0504               ??___SDCard_command_r1 0521  
                        dir_alloc@n 0685                   SPI_SD_receive@buf 0506  
                           strcpy@d 0508                             strlen@a 0506  
                           strlen@s 0504                    remove_chain@clst 0647  
                        dir_find@dp 067C                          dir_find@fs 0680  
                           strstr@h 050B                             strstr@n 050D  
                        _return_cpu 0236                     _create_name$972 0515  
                   _create_name$968 0513                          dir_read@dp 067C  
                        dir_read@fs 0684           __end_of_board_event_loop1 F460  
                        dir_sdi@csz 064E                        read_sector@n 06A2  
                        dir_sdi@ofs 0640                          dir_next@dp 0662  
                        dir_next@fs 0676                         ___fladd@grs 0513  
                       ?_disk_ioctl 05BD                        read_sram@buf 0508  
                      read_sram@len 050A                     release_bus@ctx_ 0504  
                        f_write@btw 0666                       ___xxtofl@sign 050C  
                        f_write@res 067A                       ?_SPI_SD_begin 0504  
                       ?_disk_write 0600                       ?_setup_tomer0 0501  
                        _prt_reload 01DE                      ??_restart_prog 055A  
                        get_fat@obj 0624                          get_fat@val 0636  
              ??_read_prec_or_width 0508                         ___fldiv@grs 053E  
                       ___fldiv@rem 0537                     get_ldnumber@vol 050D  
                   disk_write@count 0606                          disk_read@i 05FC  
                        get_hex@buf 0504                    _SPI_SD_configure CAB6  
                     ??_create_name 0510                         ___flmul@grs 0520  
                    ??_mount_volume 0686                          ld_clust@cl 0513  
                        ld_clust@fs 050B                     _bus_release_req 026C  
               __end_of_debug_flags F20F                          boot_file@m 0717  
                     ??_get_fattime 0508                   SPI_SD_select@ctx_ 0504  
                        get_str@buf 0700                          get_str@cnt 0702  
                     ??_find_volume 0636                          ld_dword@rv 050D  
                    __end_of_DbcTbl F20B                       ??_disk_status 055A  
               __end_of_acquire_bus F90E                     setup_monitor@rs 0718  
    SDCard_init@initial_clock_speed 05C5                     print_reg@reg_02 05C2  
                        _strin_func 08D3                        write_sram@ab 0510  
                 ?_util_hexdump_sum 05DA                     ?___SDCard_crc16 0504  
                        in_file@chr 05FF                      __end_of___flge D346  
                    __end_of___fleq E9AC                      __end_of___lmul F690  
                       vfpfcnvrt@ap 0597                         st_clust@dir 050A  
                       vfpfcnvrt@cp 05A3                         vfpfcnvrt@fp 0593  
                    __end_of_f_gets DA0C                  ??_util_hexdump_sum 055A  
                    __end_of_f_read 344A                        scan_files1@p 074E  
                    __end_of_f_open 2D36                      __end_of_efgtoa 1538  
                    __end_of_f_sync 9EF0                        scan_files@fn 074B  
                        _write_sram D13E                      __end_of_floorf A316  
                    __end_of_memcmp D544                      __end_of_memcpy FA50  
                        floorf@F521 081C                      __end_of_memset FE60  
                      _bus_hold_req 0260                     SPI_SD_begin@ctx 0506  
                        ld_word@ptr 0504                    ?_continue_action 0501  
                     SDCard_crc@crc 050C                       SDCard_crc@buf 0504  
              ___SDCard_crc16@count 0508                      __end_of_printf FFDC  
                       ?_scan_files 0501                      __end_of_strchr F170  
                    __end_of_strcpy FDB8                      __end_of_strlen F9B0  
                    ??_SPI_SD_begin 0506                      __end_of_strstr DE7C  
                    ??_setup_tomer0 0504                 start_initialization E1C0  
                  write_sector@fres 06A1                         st_dword@val 0506  
                       st_dword@ptr 0504                         __end_of_abs FF04  
        ___SDCard_wait_response@spi 0518                         __end_of_pad ECDC  
                       __end_of_rom F21F    __end_of_SPI_SD_begin_transaction 0152  
                        ivt0x8_base 0008                         put_fat@clst 0626  
             __end_of___fpclassifyf D642                     _disk_initialize B4A8  
              SPI_SD_dummy_clocks@i 0512                      load_config@buf 070A  
                        load_file@p 0715                      load_config@str 0711  
                     ??_follow_path 0688                         ___strtoxl@a 0527  
                       ___strtoxl@c 052D                         ___strtoxl@s 0510  
               __end_of_create_name 4A70                         vfprintf@fmt 05A7  
                          ??___flge 0533                            ??___fleq 050C  
                          ??___lmul 050C                     ___strtoxl@flags 0526  
                          ??_f_gets 05FF                            ??_f_read 0646  
               __end_of_get_fattime 0236                            ??_f_open 06B4  
                   ___strtoxl@limit 0522                            ??_efgtoa 0558  
           ?_SPI_SD_end_transaction 0508                            ??_f_sync 055A  
                       __pdataBANK7 07E6                         __pdataBANK8 08D3  
                       __pdataBANK9 0900                            ??_floorf 0548  
               __end_of_find_volume A702                            ??_memcmp 050A  
               __end_of_disk_status FCC6                            ??_memcpy 050A  
                     ??_load_config 0702                            ??_memset 050A  
          ??_SDCard_end_transaction 0515                          memset@dest 0504  
                          ??_printf 055A                         ?_return_cpu 0501  
              __end_of_remove_chain 9CDA                     SPI_SD_receive@i 050D  
                   SPI_SD_receive@p 0510                            ??_strchr 0508  
                          ??_strcpy 0508                            ??_strlen 0506  
                          ??_strstr 050F                           ___fladd@a 0508  
                         ___fladd@b 0504                         __pbssBANK10 0A00  
                       __pbssBANK11 0B00                          read_sram@i 050C  
                   SPI_SD_send@ctx_ 0504                           ___fldiv@a 052F  
                         ___fldiv@b 052B                         __pbssBIGRAM 0B80  
                   _SDCard_write512 82E6                    ??_unimon_console 055A  
                         ___flmul@a 0516                           ___flmul@b 0512  
                       __pbssCOMRAM 055A                      seek_disk@filep 0697  
       __end_of_wait_for_programmer FB2C                           ___flsub@a 052F  
                         ___flsub@b 052B                       __pcstackBANK5 0560  
                     __pcstackBANK6 0600                       __pcstackBANK7 0700  
                       ?_prt_reload 0501                       ??_read_sector 069C  
           __end_of_bus_release_req 0276                  ___SDCard_crc16@crc 0504  
                ___SDCard_crc16@buf 0506                        f_closedir@dp 05C9  
                      f_closedir@fs 05CB                         _debug_flags F20D  
                      check_fs@sect 0626                        check_fs@sign 062D  
                      f_getcwd@buff 06AF                          see_file@br 0704  
                        see_file@fr 0706                         _acquire_bus F8BA  
                     f_opendir@path 06B1                        _load_program 5D0C  
                         ___strtoxl 5870                       ??_scan_files1 055A  
              SDCard_write512@count 05E6                SDCard_write512@retry 05F0  
                     ?_util_hexdump 05BD                    ___SDCard_crc16@p 050F  
           bus_master_operation@buf 0712             bus_master_operation@cnt 0714  
                SDCard_write512@crc 05F4                  SDCard_write512@buf 05E4  
                         _f_readdir DAF6                         _efgtoa$4721 056D  
                         _del_space EFD2                           _main$5277 0793  
                SDCard_write512@spi 05F6                           _dtoa$4690 0524  
                  SDCard_write512@i 05EC                           _f_opendir BE28  
       __end_of_SPI_SD_dummy_clocks F7B6      __end_of_SPI_SD_end_transaction 0174  
                 util_addrdump@addr 05C3                       __pmediumconst F200  
                  ??_SDCard_command 0533                    ??_SDCard_read512 05E8  
                          ?___aldiv 0504                __end_of_restart_prog EA54  
                          ?___almod 0504                            ?___fladd 0504  
                 util_addrdump@size 05C5                            ?___fldiv 052B  
                         __ptext100 C568                           __ptext101 D13E  
                         __ptext110 EAFC                           __ptext102 F170  
                          ?___flneg 0504                           __ptext111 2D36  
                         __ptext103 C406                           __ptext120 8E56  
                         __ptext112 D346                           __ptext104 CBE8  
                         __ptext121 C294                           __ptext113 FC84  
                         __ptext105 1DB4                           __ptext130 FA00  
                         __ptext122 FFB4                           __ptext114 69EE  
                         __ptext106 3AF8                           __ptext131 F864  
                         __ptext123 F80E                           __ptext115 DF56  
                         __ptext107 40A8                           __ptext140 E902  
                         __ptext132 A104                           __ptext124 344A  
                         __ptext116 B64C                           __ptext108 FF8C  
                         __ptext141 7554                           __ptext133 D544  
                         __ptext125 BB1E                           __ptext117 E6FC  
                         __ptext109 F5BA                           __ptext150 E354  
                         __ptext142 A702                           __ptext134 D038  
                         __ptext126 B7EE                           __ptext118 82E6  
                         __ptext151 E646                           __ptext143 EC3E  
                         __ptext135 FB72                           __ptext127 E028  
                         __ptext119 E7AA                           __ptext160 F758  
                         __ptext152 FBB8                           __ptext144 FBFE  
                         __ptext136 4A70                           __ptext128 0AD8  
                         __ptext161 FCC6                           __ptext153 010E  
                         __ptext145 E28A                           __ptext137 FE60  
                         __ptext129 FD7C                           __ptext170 AAA6  
                         __ptext162 F8BA                           __ptext154 7FBE  
                         __ptext146 020E                           __ptext138 65C8  
                         __ptext171 0290                           __ptext163 EEAC  
                         __ptext155 0130                           __ptext147 FED0  
                         __ptext139 D242                           __ptext172 0280  
                         __ptext164 FE98                           __ptext156 F1F2  
                         __ptext148 DA0C                           __ptext173 F4D8  
                         __ptext165 E58E                           __ptext157 FF62  
                         __ptext149 CF2E                           __ptext166 E0F4  
                         __ptext158 0152                           __ptext167 F626  
                         __ptext159 01F6                           __ptext168 0276  
                         __ptext169 0260                            ?___flmul 0512  
                         _dir_clear C818                            ?_dbc_2nd 0504  
                         _dir_alloc C968                            ?___flsub 052B  
                          ?___fltol 0504                  load_program@header 0713  
                          ?_dbc_1st 0504                            ?___lldiv 0504  
                         _clst2sect E0F4                   ?_change_directory 0501  
                          ?_f_chdir 06AF                           _file_size 07BB  
                    dir_alloc@n_ent 067E                            ?_f_close 062F  
                         _disk_init F90E                           _disk_read E7AA  
                         _flash_apl FC42                 util_addrdump@header 05BD  
                     follow_path@dp 0684                       follow_path@fs 068E  
                          ?_f_lseek 0662                       follow_path@ns 0690  
                       ?_write_sram 0504                       _validate$1173 05C6  
                  ___almod@dividend 0504                 __end_of_follow_path 8BA2  
                          ?_f_mount 06AF                          mon_prog@rs 0718  
                        mon_prog@sw 0719                           _boot_file 7C6E  
                     ??_release_bus 0506                            ?_dir_sdi 063E  
                ??_change_directory 055A                            ?_f_write 0662  
                          ?_get_fat 0624                            ?_get_hex 0504  
                          ?_get_str 0700                __end_of_mount_volume 0AD8  
                          ?_dsk_err 0501                            ?_in_file 0700  
                          ?_ld_word 0504                           f_chdir@dj 06B4  
                         f_chdir@fs 06B2                           _drive_cpu FD40  
                          ?_u_getch 0700                util_hexdump_sum@addr 05DC  
               __end_of_load_config 71A0              SDCard_read512@resp_crc 05F2  
                          ?_set_arg 0504                util_hexdump_sum@size 05DE  
            SDCard_read512@response 05FA                           f_close@fp 062F  
                         f_close@fs 0631                           _load_file ED78  
                         f_gets@len 066B                           check_fs@b 0631  
                          ?_put_fat 0624                           check_fs@w 062F  
                         f_getcwd@i 0708                           f_getcwd@n 0706  
                        set_arg@buf 0504                            ?_st_word 0504  
           __end_of_disk_initialize B64C                            ?_sprintf 05AD  
                          ?_str_inf 0700                            _CLCnGLS0 00DC  
                          _CLCnGLS1 00DD                            _CLCnGLS2 00DE  
                          _CLCnGLS3 00DF                            ?_sync_fs 061A  
                       _get_fat$435 0632                            ?_strncmp 0504  
                          _CLCnSEL0 00D8                            _CLCnSEL1 00D9  
                          _CLCnSEL2 00DA                            _CLCnSEL3 00DB  
                     ??_SDCard_init 05CB                           _read_sram E418  
                      f_read@remain 0652                        ??_f_closedir 055A  
                         f_read@btr 0642                           f_read@res 0656  
                 find_volume@mbr_pt 063C                    _board_event_loop EBA0  
                   ___aldiv@divisor 0508             SPI_SD_dummy_clocks@ctx_ 050E  
                        ?___strtoxl 0510                     ___aldiv@counter 050C  
                       _create_name 4594                           _seek_disk CBE8  
          _SPI_SD_begin_transaction 0130                           f_lseek@fp 0662  
                         f_lseek@fs 0685                 __end_of_read_sector C6C6  
                    ??_util_hexdump 05C3                           f_open@bcs 06BC  
                         f_open@ofs 06CC                           f_open@res 06D6  
                  mount_volume@mode 0685                    mount_volume@path 0681  
                  mount_volume@nrsv 0698                         _get_fattime 0224  
                  mount_volume@stat 06A2       SDCard_command@response_buffer 052F  
          ??___SDCard_wait_response 0517                        _SPI1CON0bits 0084  
                      _SPI1CON1bits 0085                        _SPI1CON2bits 0086  
                    load_program@br 0710                          ?_f_readdir 0689  
                    load_program@fr 0712                         _find_volume A50E  
                        ?_del_space 0504                         _disk_status FC84  
                     ??_move_window 0620                           f_mount@fs 06AF  
                         f_mount@rp 06B5                       ?_write_sector 069A  
                   follow_path@path 0686                __end_of_SPI_SD_begin FF62  
                         _reset_clk 01C6                           _reset_cpu DE7C  
                          _SPI1BAUD 0089                __end_of_setup_tomer0 01C6  
                          _SPI1CON0 0084                            _SPI1CON1 0085  
                          _SPI1INTE 008B                          ?_f_opendir 06AF  
               ___strtoxl@is_signed 0516                            _SPI1RXIF 2588  
               __end_of_scan_files1 9874                       move_window@fs 061A  
                         _uart_init FD04                          ?_dir_clear 061A  
                         dir_find@c 0682                          ?_dir_alloc 067C  
                   remove_chain@obj 0645                     remove_chain@res 065B  
                   remove_chain@nxt 0657         __end_of_SPI_SD_receive_byte 0130  
                         _timer_off 028C                          ?_clst2sect 0510  
                         f_sync@dir 062B                        f_readdir@fno 068B  
           __end_of_SDCard_write512 85D6                        f_readdir@res 068F  
                         f_sync@res 062A                           dir_read@b 0687  
          __end_of_SPI_SD_configure CBE8                           dir_sdi@dp 063E  
                         dir_sdi@fs 0656                           _print_com E4D4  
                         _print_reg AFB8                          ?_disk_init 06BB  
                        ?_disk_read 0600                           _vfpfcnvrt 344A  
                    release_bus@ctx 0506                          ?_flash_apl 0501  
                         f_write@cc 067F                           _port_init F690  
                         f_write@bw 0668                           f_write@fp 0662  
                         f_write@fs 068B                           _xtoa$4743 052A  
                         get_fat@bc 063A                        del_space@pos 0508  
                         get_fat@fs 063C                          ?_boot_file 0501  
                         get_fat@wc 0634                           _start_W65 FF04  
                         get_hex@ch 0516                  __end_of_f_closedir FDF0  
                         _start_lba 07EE                           _start_cpu FDF0  
                         get_line@c 05C1                           get_line@n 05C3  
                         get_line@s 05BD               __end_of_util_addrdump C406  
                   acquire_bus@ctx_ 0504                        ??_disk_ioctl 055A  
                        ?_drive_cpu 0501           _bus_master_operation$2630 0710  
                      ??_disk_write 055A                         f_chdir@path 06AF  
                      f_lseek@ifptr 0678                         write_sram@i 050E  
                      f_lseek@nsect 067C                          ?_load_file 0501  
               __end_of_release_bus FD04                          st_clust@cl 050C  
                        vfpfcnvrt@c 05A2                          st_clust@fs 0508  
                  ?_bus_release_req 0501                   ___lmul@multiplier 0504  
                         copy_data0 E1D4                           copy_data1 E1F4  
                         copy_data2 E214                          ?_read_sram 0504  
                     util_hexdump@i 05D8                           ld_word@rv 0509  
                     ??_setup_drive 0506                       ??_SPI_SD_send 050A  
                    ___strtoxl$4576 051E                      ___strtoxl$4577 0520  
                      SDCard_init@i 05CC                          ?_seek_disk 068B  
                        put_fat@res 0644                          put_fat@val 062A  
                         mem_dump@p 05DE              util_hexdump_sum@header 05DA  
                         mem_init@i 05E6                    ??___SDCard_crc16 050A  
                   dir_next@stretch 0664                 __end_of_SDCard_init 9606  
                    ??_write_sector 069C                            __Hrparam 0000  
       __end_of___SDCard_command_r1 E6FC                          ?_reset_clk 0501  
                     load_config@fr 070C                          ?_reset_cpu 0501  
                    restart_prog@rs 0716                           memcpy@tmp 050A  
                        vfprintf@ap 05A9                            __Lrparam 0000  
                        vfprintf@fp 05A5                         _follow_path 88C2  
                    ___strtoxl@base 0514                  __end_of_disk_ioctl F758  
                        ?_uart_init 0501                  __end_of_disk_write E7AA  
                        ?_timer_off 0501                          st_word@val 0506  
                        st_word@ptr 0504                          ?_print_com 0501  
                        ?_print_reg 0501                          ?_vfpfcnvrt 0593  
                        ?_port_init 0501                 __end_of_move_window E028  
                       _load_config 6DDA        ___SDCard_command_r1@argument 051B  
                        ?_start_W65 0501                         f_getcwd@ccl 0700  
                       f_getcwd@fno 070C                         f_getcwd@len 06B1  
                        ?_start_cpu 0501                  ___fpclassifyf@F465 0820  
                       f_getcwd@res 0722                        f_opendir@res 06B5  
                          dbc_2nd@c 0506                        ??_scan_files 055A  
                        sprintf@fmt 05AF                            dbc_1st@c 0506  
                          ___xxtofl AAA6                            _check_fs 85D6  
                          _f_getcwd 4F26                          str_inf@buf 0700  
                        str_inf@cnt 0702                SPI_SD_receive@i_3984 050F  
                          _clc_init C120                            _cin_file 11F8  
                          __pivt0x8 0008                     dir_register@res 068C  
      __end_of_bus_master_operation 8E56                       dir_clear@ibuf 0620  
                     dir_clear@clst 061C                    util_addrdump@buf 05DA  
                          _clk_init 0174                    read_sector@filep 069F  
                     dir_clear@sect 0622                            __ptext10 ED78  
                          __ptext11 0246                            __ptext20 FF34  
                          __ptext12 9606                            __ptext21 F2F4  
                          __ptext13 9874                            __ptext30 B160  
                          __ptext22 E858                            __ptext14 EA54  
                          __ptext31 FDB8                            __ptext23 FF04  
                          __ptext15 FAE6                            __ptext40 EFD2  
                          __ptext32 FB2C                            __ptext24 01AC  
                          __ptext16 FD04                            __ptext41 5870  
                          __ptext33 DE7C                            __ptext25 AE0A  
                          __ptext17 EF40                            __ptext50 01DE  
                          __ptext42 CE22                            __ptext34 01C6  
                          __ptext26 DAF6                            __ptext18 9380  
                          __ptext51 5D0C                            __ptext43 FA9C  
                          __ptext35 F690                            __ptext27 BE28  
                          __ptext19 CAB6                            __ptext60 EBA0  
                          __ptext52 DD9E                            __ptext44 F90E  
                          __ptext36 90F8                            __ptext28 4F26  
                          __ptext61 FFDC                            __ptext53 CD06  
                          __ptext45 D642                            __ptext37 C6C6  
                          __ptext29 A316                            __ptext70 A8E0  
                          __ptext62 026C                            __ptext54 F960  
                          __ptext46 0174                            __ptext38 6DDA  
                          __ptext71 E418                            __ptext63 8BA2  
                          __ptext55 F9B0                            __ptext47 C120  
                          __ptext39 D920                            __ptext80 F274  
                          __ptext72 25B6                            __ptext64 B98C  
                          __ptext56 FD40                            __ptext48 D82E  
                          __ptext81 BCA4                            __ptext73 9AA8  
                          __ptext65 1538                            __ptext57 0288  
                          __ptext49 FDF0                            __ptext90 619E  
                          __ptext82 D446                            __ptext74 0000  
                          __ptext66 AC5A                            __ptext58 028C  
                          __ptext91 C818                            __ptext83 4594  
                          __ptext75 B304                            __ptext67 BFA6  
                          __ptext59 F3EA                            __ptext92 F7B6  
                          __ptext84 F0EA                            __ptext76 A50E  
                          __ptext68 F54C                            _dir_find BCA4  
                          __ptext93 9CDA                            __ptext85 DCBE  
                          __ptext77 85D6                            __ptext69 EE12  
                          __ptext94 9EF0                            __ptext86 ECDC  
                          __ptext78 B4A8                            __ptext95 FE28  
                          __ptext87 DBDC                            __ptext79 88C2  
                          __ptext96 F6F4                            __ptext88 C968  
                          __ptext97 FA50                            __ptext89 78E4  
                          __ptext98 0224                            __ptext99 F460  
                 load_program@fname 0700                            _dir_read B160  
                          _dir_next 619E                         _read_sector C568  
                          _get_char 08D9                            _disk_buf 0A00  
                          _fin_name 08C2                   load_program@rdbuf 0706  
                          _fileinfo 0800                    ?_disk_initialize 0501  
                          _get_line CE22                            _fin_size 07BD  
                         mon_prog@p 0716                            _ld_clust F274  
                          _ld_dword E58E                     ___almod@divisor 0508  
                    sync_window@res 05FC                            _make_irq FFDC  
                   ___almod@counter 050C        ___SDCard_command_r1@response 0528  
                        strcpy@dest 0504              _SDCard_end_transaction FF62  
                       ??___strtoxl 0517                            _mem_dump F370  
               util_hexdump_sum@sum 05E4                            _mem_init 90F8  
              SPI_SD_receive@repeat 050C                            f_gets@dc 0673  
                          _load_flg 07C9                            f_gets@fp 066D  
                          f_gets@nc 066F                            f_gets@rc 0677  
                          _line_buf 0A80                         f_read@csect 065D  
                       _scan_files1 9606                          sync_fs@res 05FD  
                      _remove_chain 9AA8                         f_read@rbuff 065B  
                          f_read@cc 065F                            f_read@br 0644  
                          f_read@fp 063E                            f_read@fs 0667  
                          _see_file 53D4                            _raw_addr 07AD  
                          f_open@dj 06D7                            f_open@cl 06C4  
                          f_open@fp 06AF                            f_open@fs 06D4  
                          f_open@sc 06C8                     mount_volume@fmt 06AB  
                          f_open@tm 06C0                         _IVTLOCKbits 0459  
                   mount_volume@rfs 0683                         ??_f_readdir 055A  
                          _mon_prog D73C                     mount_volume@vol 0692  
               __end_of_setup_drive F4D6                         ??_del_space 0506  
                          _validate D346                            efgtoa@fp 0560  
                          efgtoa@ne 0567                            efgtoa@pp 056F  
                          efgtoa@ou 0578                         ??_f_opendir 055A  
               __end_of_SPI_SD_send EF40                  __end_of_scan_files 9AA8  
                          isa$xinst 0000                            _timer_on 0288  
                       f_readdir@dp 0689                         f_readdir@fs 068D  
                          f_sync@fp 0624                            f_sync@fs 062D  
                          f_sync@tm 0626                            _setup_sd EF40  
                       ??_dir_clear 05FD                         ??_dir_alloc 0680  
                          _st_clust FA50                            _st_dword F5BA  
                       ??_clst2sect 0516                            get_hex@c 050C  
                          get_hex@d 050E                            _vfprintf F80E  
                  ?_SDCard_write512 05DE                       ??_sync_window 060A  
                         printf@fmt 05AD                      acquire_bus@ctx 0506  
                       ??_disk_init 055A                         ??_disk_read 055A  
                       ??_flash_apl 055A                            get_str@c 0705  
                          get_str@i 0707                  util_hexdump@header 05BD  
                       f_lseek@clst 0687                        ??_return_cpu 055A  
                       ??_boot_file 055A                      _SPI_SD_receive 7FBE  
                       _release_bus FCC6                       ??_Default_ISR 0501  
              __end_of_util_hexdump C568                SPI_SD_configure@ctx_ 05BD  
                mount_volume@fasize 06A7                         ??_drive_cpu 055A  
                         put_fat@bc 0642                           put_fat@fs 0624  
                          memcmp@vl 0504                            memcmp@vr 0506  
                      ??_prt_reload 055A                            memcpy@d1 0504  
                          memcpy@s1 0506                         ??_load_file 055A  
                mount_volume@szbfat 068E                  mount_volume@sysect 0694  
                      _restart_prog E9AC                         ??_read_sram 050C  
                     clst2sect@clst 0512                         f_opendir@dp 06AF  
                       f_opendir@fs 06B3                            intlevel2 0000  
                      ?_acquire_bus 0504                         _SDCard_init 9380  
                         sprintf@ap 05B3                            u_getch@c 05FF  
                    dir_register@dp 0688                      dir_register@fs 068A  
                  load_program@adr0 0702                     read_sector@fres 06A1  
                      dir_clear@szb 0626                         ??_seek_disk 068D  
                  ___lldiv@dividend 0504                        dir_alloc@res 0687  
                     sync_window@fs 0608                         _SLRCONBbits 040B  
               SPI_SD_receive@count 0508                        _mount_volume 0000  
                       f_mount@path 06B1                           strcpy@src 0506  
                          set_arg@i 0506                           sync_fs@fs 061A  
                __end_of_return_cpu 0246             SDCard_command@responsep 0538  
                    mount_volume@fs 06AD                         ??_reset_clk 0504  
                       ??_reset_cpu 05BD                       _setup_monitor E858  
                       _move_window DF56                       ??_wstart_prog 055A  
                       efgtoa@nmode 0571                          _SPI1SCKPPS 026A  
                        _SPI1SDIPPS 026B                         ??_uart_init 0504  
          _debug_flags@SDCard$F3998 F20B                            printf@ap 05BB  
                __end_of_prt_reload 01F6                         ??_timer_off 0504  
                        _SPI1TWIDTH 0088                          _TIMER0_ISR 0280  
            __end_of_SPI_SD_receive 82E6                       _SPI_SD_select 01F6  
                       ??_print_com 055A                         ??_print_reg 05BD  
                       ??_vfpfcnvrt 0599                         ??_port_init 0504  
                          put_fat@p 0640                     move_window@sect 061C  
                      ??_write_sram 050C            __end_of_board_event_loop EC3E  
                       ??_start_W65 0504                       ?_dir_register 0688  
                       ??_start_cpu 0504                          _SDCard_crc F1F2  
                      dir_read@attr 0686                            sprintf@f 05B5  
                          sprintf@s 05AD                            str_inf@a 0707  
                          str_inf@c 0705                            str_inf@i 0708  
                       dir_clear@fs 061A                         dir_alloc@dp 067C  
                       dir_alloc@fs 0683                    ___lldiv@quotient 050C  
                SPI_SD_receive@ctx_ 0504              ___SDCard_wait_response FBB8  
               __end_of_sync_window B7EE                         dir_find@res 0683  
                          strncmp@l 0504                            strncmp@n 0508  
                          strncmp@r 0506                   remove_chain@pclst 064B  
              __end_of_write_sector BB1E                        ___aldiv@sign 050D  
                     ?_create_chain 0645          ??_SPI_SD_begin_transaction 050A  
                      _SPI_SD_begin FF34        SPI_SD_begin_transaction@ctx_ 0508  
                      _setup_tomer0 01AC                            strstr@nl 050F  
                      dir_next@clst 0678                       ___fladd@signs 0510  
               __end_of_Default_ISR 0292                 _unimon_console$2625 070A  
                       clst2sect@fs 0510                         dir_read@res 0688  
                       dir_read@vol 067E                         dir_sdi@clst 0652  
                       _setup_drive F460                        ___almod@sign 050D  
                     ?_get_fileinfo 0511                        ?_create_name 050C  
                      ___fladd@aexp 0511                        ___fladd@bexp 0512  
                       _SPI_SD_send EEAC                         dir_next@ofs 0672  
                      f_write@csect 067D                       read_sram@addr 0504  
                      f_write@wbuff 067B                        ?_get_fattime 0504  
                __end_of_write_sram D242                          _SPI_SD_ctx 07F2  
                       f_write@buff 0664                         f_write@clst 0681  
                    ?_setup_monitor 0716                         f_write@sect 0687  
                      ?_find_volume 0632                         f_write@wcnt 0685  
                     ?_get_ldnumber 0504                        ?_disk_status 0501  
                       _put_fat$465 063C                         _put_fat$466 063E  
        SPI_SD_end_transaction@ctx_ 0508  
